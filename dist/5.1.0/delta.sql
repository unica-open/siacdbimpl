/*
*SPDX-FileCopyrightText: Copyright 2020 | CSI Piemonte
*SPDX-License-Identifier: EUPL-1.2
*/


-- SIAC-8422 e SIAC-8439 - Maurizio - INIZIO

DROP FUNCTION if exists siac.fnc_tracciato_t2sb20s(p_ente_prop_id integer, p_anno varchar, p_numero_delibera integer, p_anno_delibera varchar, p_tipo_delibera varchar, p_anno_competenza varchar, p_ele_variazioni varchar, p_organo_provv varchar, p_code_report varchar, p_codice_ente varchar);
DROP FUNCTION if exists siac.fnc_tracciato_t2sb21s(p_ente_prop_id integer, p_anno varchar, p_numero_delibera integer, p_anno_delibera varchar, p_tipo_delibera varchar, p_anno_competenza varchar, p_ele_variazioni varchar, p_organo_provv varchar, p_code_report varchar, p_codice_ente varchar);
DROP FUNCTION if exists siac.fnc_tracciato_t2sb22s(p_ente_prop_id integer, p_anno varchar, p_numero_delibera integer, p_anno_delibera varchar, p_tipo_delibera varchar, p_anno_competenza varchar, p_ele_variazioni varchar, p_organo_provv varchar, p_code_report varchar, p_codice_ente varchar);


CREATE OR REPLACE FUNCTION siac.fnc_tracciato_t2sb20s (
  p_ente_prop_id integer,
  p_anno varchar,
  p_numero_delibera integer,
  p_anno_delibera varchar,
  p_tipo_delibera varchar,
  p_anno_competenza varchar,
  p_ele_variazioni varchar,
  p_organo_provv varchar,
  p_code_report varchar,
  p_codice_ente varchar
)
RETURNS TABLE (
  record_t2sb20s varchar
) AS
$body$
DECLARE

prefisso varchar;
strApp varchar;
intApp numeric;
contaParametri integer;
contaParametriParz integer;
DEF_NULL	constant varchar:=''; 
RTN_MESSAGGIO varchar(1000):=DEF_NULL;
elencoRec record;
importo_tot_stanz_entrate numeric;
importo_tot_cassa_entrate numeric;
importo_tot_residui_entrate numeric;
importo_tot_stanz_spese numeric;
importo_tot_cassa_spese numeric;
importo_tot_residui_spese numeric;

begin
	
/*
	27/05/2020. 
    Funzione nata per la SIAC-7195.
    La funziona prepara i dati del tracciato t2sb20s.
    Riceve in input i parametri di estrazione dei dati ed il codice report.
    In base al report richiama le procedure corrette.
    Funziona solo per i report BILR024 e BILR146.

*/

/* 02/07/2020 SIAC-7678.
	I totali devono essere solo i totali delle variazioni e corrispndere a quanto
    calcolato per il tracciato t2sb21s.
    Le funzioni:
    - BILR024_Allegato_7_Allegato_delibera_variaz_totali_entrate_txt
    - BILR024_Allegato_7_Allegato_delibera_variaz_totali_spese_txt 
    - BILR149_Allegato_8_variazioni_eserc_gestprov_entrate_totali_txt
    - BILR149_Allegato_8_variazioni_eserc_gestprov_spesee_totali_txt
    che erano utilizzate per il calcolo dei totali complessivi non sono piu' usate.
*/

if p_code_report = 'BILR024' then
   return query 
          select (	--CIST
                '00001'  || 
                    --CENT codice ente 
                p_codice_ente  || 
                    --CESE codice esercizio
                p_anno_competenza  || 
                    -- NDEL Numero Delibera
                case when entrate.attoamm_id_ent is NULL then
                    LPAD(spese.attoamm_numero_spese::varchar,7,'0')
                else LPAD(entrate.attoamm_numero_ent::varchar,7,'0') end || 
                    --SORG Organo deliberante
                case when p_organo_provv is null or p_organo_provv = '' then 
                    ' ' else p_organo_provv  end || 
                    -- CTIPREC tipo record
                '0'  || 
                    -- DDEL Data delibera
               case when entrate.attoamm_id_ent is NULL then
                    to_char(spese.data_provv_var_spese,'ddMMyyyy') 
                else to_char(entrate.data_provv_var_ent,'ddMMyyyy') end ||
                    -- ZDES descr delibera
               case when entrate.attoamm_id_ent is NULL then
                    RPAD(left(spese.attoamm_oggetto_spese,50),50,' ')
                else RPAD(left(entrate.attoamm_oggetto_ent,50),50,' ') end || 
                    -- SORGAPP  Organo approvazione
                case when p_organo_provv is null or p_organo_provv = '' then 
                    ' ' else p_organo_provv  end || 
                    -- DDEL Data Approvazione Delibera.
               case when entrate.attoamm_id_ent is NULL then
                    to_char(spese.data_approvazione_provv_spese,'ddMMyyyy')
                else to_char(entrate.data_approvazione_provv_ent,'ddMMyyyy') end || 
                    --DDATAPP  Numero Approvazione Delibera
                LPAD('0', 7, '0') || 
                	--IENTRES Importo entrate residuo
		/* SIAC-8422 05/11/2021
           Gli importi totali dei residui devono essere messi a 0 in quanto
           non c'e' il relativo dettaglio.                                   
               case when entrate.attoamm_id_ent is NULL then
                    LPAD('0',17,'0') 
                  else trim(replace(to_char(ABS(entrate.variazione_residuo_ent) ,
          				'000000000000000.00'),'.','')) end || */
                    LPAD('0',17,'0') ||               	
                    --SENTRES Segno entrate residuo 
        /* SIAC-8422 05/11/2021 
        	Poiche' metto l'importo dei residui a 0, metto il segno +
               case when entrate.attoamm_id_ent is NULL then ' '                     
                else case when entrate.variazione_residuo_ent >=0 then '+'
                    else '-' end end || */
                    
                   '+' ||
                    --IUSCRES Importo spese residuo
		/* SIAC-8422 05/11/2021
           Gli importi totali dei residui devono essere messi a 0 in quanto
           non c'e' il relativo dettaglio.                                        
                case when spese.attoamm_id_spese IS NULL then
                    LPAD('0',17,'0') 
                else trim(replace(to_char(ABS(spese.variazione_residuo_spese),
          				'000000000000000.00'),'.','')) end || */
                    LPAD('0',17,'0') ||
                    --SUSCRES Segno spese residuo 
 		/* SIAC-8422 05/11/2021 
        	Poiche' metto l'importo dei residui a 0, metto il segno +                    
                case when spese.attoamm_id_spese IS NULL then ' '                         
                else case when spese.variazione_residuo_spese >=0 then '+'
                    else '-' end end ||  */
                    
                    '+' ||                               
                    --IENTCPT Importo entrate competenza
               case when entrate.attoamm_id_ent is NULL then
                    LPAD('0',17,'0')
			   else trim(replace(to_char(ABS(entrate.variazione_stanziato_ent),
          				'000000000000000.00'),'.','')) end ||                        
                    --SENTCPT Segno entrate competenza
               case when entrate.attoamm_id_ent is NULL then ' '
                else case when entrate.variazione_stanziato_ent >=0 then '+'
                    else '-' end end ||
                    --IUSCCPT Importo spese competenza
                case when spese.attoamm_id_spese IS NULL then
                    LPAD('0',17,'0')
                else trim(replace(to_char(ABS(spese.variazione_stanziato_spese),
          				'000000000000000.00'),'.','')) end ||
                    --SUSCCPT Segno spese competenza 
                case when spese.attoamm_id_spese IS NULL then ' ' 
                else case when spese.variazione_stanziato_spese >=0 then '+'
                    else '-' end end ||   
                    --IENTCAS Importo entrate cassa 
               case when entrate.attoamm_id_ent is NULL then
                    LPAD('0',17,'0')                               
                else trim(replace(to_char(ABS(entrate.variazione_cassa_ent),
          				'000000000000000.00'),'.','')) end ||
                    --SENTCAS Segno entrate cassa
               case when entrate.attoamm_id_ent is NULL then ' ' 
                else case when entrate.variazione_cassa_ent >=0 then '+'
                    else '-' end end ||
                    --IUSCCAS Importo spese cassa   
                case when spese.attoamm_id_spese IS NULL then
                    LPAD('0',17,'0')
                else trim(replace(to_char(ABS(spese.variazione_cassa_spese),
          				'000000000000000.00'),'.','')) end ||
                    --SUSCCAS Segno spese cassa 
                case when spese.attoamm_id_spese IS NULL then ' '
                 else case when spese.variazione_cassa_spese >=0 then '+'
                    else '-' end end ||
                    --KEYWEB Identificativo flusso web. NON OBBLIGATORIO.    
                RPAD(' ', 30, ' ')  ||
                    --CTIPFLU Identificativo tipo flusso.
                'D' ||
                    --SSBIL Segnale stato bilancio. NON OBBLIGATORIO. 
                ' ' || 
                    --STIPINV Indicatore tipo invio. NON OBBLIGATORIO.
                ' ' || 
                    --FILLER 
                RPAD(' ', 160, ' '))::varchar 
   	        from (select attoamm_anno attoamm_anno_ent,
            attoamm_numero attoamm_numero_ent, tipo_atto tipo_atto_ent, 
            attoamm_oggetto attoamm_oggetto_ent, 
            attoamm_id attoamm_id_ent,
            data_provv_var data_provv_var_ent, 
            data_approvazione_provv data_approvazione_provv_ent,
            sum(variazione_aumento_residuo) variazione_aumento_residuo_ent,
            sum(variazione_aumento_stanziato) variazione_aumento_stanziato_ent,
            sum(variazione_aumento_cassa) variazione_aumento_cassa_ent,
            sum(variazione_diminuzione_residuo) variazione_diminuzione_residuo_ent,
            sum(variazione_diminuzione_stanziato) variazione_diminuzione_stanziato_ent,
            sum(variazione_diminuzione_cassa) variazione_diminuzione_cassa_ent,
            (sum(variazione_aumento_residuo) - sum(variazione_diminuzione_residuo))
            	variazione_residuo_ent,
            (sum(variazione_aumento_stanziato) - sum(variazione_diminuzione_stanziato))
            	variazione_stanziato_ent,       
            (sum(variazione_aumento_cassa) - sum(variazione_diminuzione_cassa))
            	variazione_cassa_ent                    
        from "BILR024_Allegato_7_Allegato_delibera_variazione_su_entrate_txt" (
          p_ente_prop_id, p_anno ,
          p_numero_delibera, p_anno_delibera, p_tipo_delibera,
          p_anno_competenza, p_ele_variazioni)            
    	group by attoamm_anno_ent,
            attoamm_numero_ent, tipo_atto_ent, attoamm_oggetto_ent, 
            attoamm_id_ent,
            data_provv_var_ent, data_approvazione_provv_ent) entrate
    FULL JOIN 
               (select attoamm_anno attoamm_anno_spese,
                attoamm_numero attoamm_numero_spese, tipo_atto tipo_atto_spese, 
                attoamm_oggetto attoamm_oggetto_spese, 
                attoamm_id attoamm_id_spese,
                data_provv_var data_provv_var_spese, 
                data_approvazione_provv data_approvazione_provv_spese,
                sum(variazione_aumento_residuo) variazione_aumento_residuo_spese,
                sum(variazione_aumento_stanziato) variazione_aumento_stanziato_spese,
                sum(variazione_aumento_cassa) variazione_aumento_cassa_spese,
                sum(variazione_diminuzione_residuo) variazione_diminuzione_residuo_spese,
                sum(variazione_diminuzione_stanziato) variazione_diminuzione_stanziato_spese,
                sum(variazione_diminuzione_cassa) variazione_diminuzione_cassa_spese,
                (sum(variazione_aumento_residuo) - sum(variazione_diminuzione_residuo))
            	variazione_residuo_spese,
            (sum(variazione_aumento_stanziato) - sum(variazione_diminuzione_stanziato))
            	variazione_stanziato_spese,       
            (sum(variazione_aumento_cassa) - sum(variazione_diminuzione_cassa))
            	variazione_cassa_spese                        
            from "BILR024_Allegato_7_Allegato_delibera_variazione_su_spese_txt" (
              p_ente_prop_id, p_anno ,
              p_numero_delibera, p_anno_delibera, p_tipo_delibera,
              p_anno_competenza, p_ele_variazioni)            
        	group by attoamm_anno_spese,
                attoamm_numero_spese, tipo_atto_spese, attoamm_oggetto_spese, 
                attoamm_id_spese,
                data_provv_var_spese, data_approvazione_provv_spese) spese
    ON entrate.attoamm_id_ent=spese.attoamm_id_spese;   	
elsif  p_code_report = 'BILR149' then --Report BILR149
	return query 
    			select (
                         --CIST
                 '00001'  || 
                    --CENT codice ente 
                p_codice_ente  || 
                    --CESE codice esercizio
                p_anno_competenza  || 
                    -- NDEL Numero Delibera
                case when entrate.attoamm_id_ent IS NULL then
                    LPAD(spese.attoamm_numero_spese::varchar,7,'0')
                else LPAD(entrate.attoamm_numero_ent::varchar,7,'0') end || 
                    --SORG Organo deliberante
                case when p_organo_provv is null or p_organo_provv = '' then 
                    ' ' else p_organo_provv  end || 
                    -- CTIPREC tipo record
                '0'  || 
                    -- DDEL Data delibera
               case when entrate.attoamm_id_ent IS NULL then
                    to_char(spese.data_provv_var_spese,'ddMMyyyy') 
                else to_char(entrate.data_provv_var_ent,'ddMMyyyy') end ||
                    -- ZDES descr delibera
               case when entrate.attoamm_id_ent IS NULL then
                    RPAD(left(spese.attoamm_oggetto_spese,50),50,' ')
                else RPAD(left(entrate.attoamm_oggetto_ent,50),50,' ') end || 
                    -- SORGAPP  Organo approvazione
                case when p_organo_provv is null or p_organo_provv = '' then 
                    ' ' else p_organo_provv  end || 
                    -- DDEL Data Approvazione Delibera.
               case when entrate.attoamm_id_ent IS NULL then
                    to_char(spese.data_approvazione_provv_spese,'ddMMyyyy')
                else to_char(entrate.data_approvazione_provv_ent,'ddMMyyyy') end || 
                    --DDATAPP  Numero Approvazione Delibera
                LPAD('0', 7, '0') || 
                    --IENTRES Importo entrate residuo               
                LPAD('0',17,'0') ||
                    --SENTRES Segno entrate residuo  
                ' ' || 
                    --IUSCRES Importo spese residuo
                LPAD('0',17,'0') ||
                    --SUSCRES Segno spese residuo 
                ' ' ||                            
                    --IENTCPT Importo entrate competenza                    
 			   case when entrate.attoamm_id_ent is NULL then
                    LPAD('0',17,'0')
			   else trim(replace(to_char(ABS(entrate.variazione_totale_entrate),
          				'000000000000000.00'),'.','')) end ||                                                   	
                    --SENTCPT Segno entrate competenza
               case when entrate.attoamm_id_ent IS NULL then
                    ' '
                else case when entrate.variazione_totale_entrate >=0 then '+'
                    else '-' end end ||
                    --IUSCCPT Importo spese competenza
                case when spese.attoamm_id_spese IS NULL then
                    LPAD('0',17,'0')
                else trim(replace(to_char(ABS(spese.variazione_totale_spese),
          				'000000000000000.00'),'.','')) end ||
                    --SUSCCPT Segno spese competenza 
                case when spese.attoamm_id_spese IS NULL then
                    ' '
                else case when spese.variazione_totale_spese >=0 then '+'
                    else '-' end end ||   
                    --IENTCAS Importo entrate cassa 
                LPAD('0',17,'0') ||
                    --SENTCAS Segno entrate cassa
                ' ' ||  
                    --IUSCCAS Importo spese cassa   
                LPAD('0',17,'0') ||
                    --SUSCCAS Segno spese cassa 
                ' ' ||   
                    --KEYWEB Identificativo flusso web. NON OBBLIGATORIO.    
                RPAD(' ', 30, ' ')  ||
                    --CTIPFLU Identificativo tipo flusso.
                'D' ||
                    --SSBIL Segnale stato bilancio. NON OBBLIGATORIO. 
                ' ' || 
                    --STIPINV Indicatore tipo invio. NON OBBLIGATORIO.
                ' ' || 
                    --FILLER 
                RPAD(' ', 160, ' '))::varchar        	                                      
        from (select attoamm_anno attoamm_anno_ent,
            attoamm_numero attoamm_numero_ent, tipo_atto tipo_atto_ent, 
            attoamm_oggetto attoamm_oggetto_ent, 
            attoamm_id attoamm_id_ent,
            data_provv_var data_provv_var_ent, 
            data_approvazione_provv data_approvazione_provv_ent,
            sum(variazione_aumento_stanziato) variazione_aumento_stanziato,            
            sum(variazione_diminuzione_stanziato) variazione_diminuzione_stanziato,
            (sum(variazione_aumento_stanziato) - sum(variazione_diminuzione_stanziato))
             	variazione_totale_entrate          
        from "BILR149_Allegato_8_variazioni_eserc_gestprov_entrate_bozza_txt" (
          p_ente_prop_id, p_anno ,
          p_numero_delibera, p_anno_delibera, p_tipo_delibera,
          p_anno_competenza, p_ele_variazioni)            
    	group by attoamm_anno_ent,
            attoamm_numero_ent, tipo_atto_ent, attoamm_oggetto_ent, 
            attoamm_id_ent,
            data_provv_var_ent, data_approvazione_provv_ent) entrate
    FULL JOIN 
               (select attoamm_anno attoamm_anno_spese,
                attoamm_numero attoamm_numero_spese, tipo_atto tipo_atto_spese, 
                attoamm_oggetto attoamm_oggetto_spese, 
                attoamm_id attoamm_id_spese,
                data_provv_var data_provv_var_spese, 
                data_approvazione_provv data_approvazione_provv_spese,
                sum(variazione_aumento_fpv) variazione_aumento_fpv,                
                sum(variazione_diminuzione_fpv) variazione_diminuzione_fpv ,
                (sum(variazione_aumento_stanziato) + sum(variazione_aumento_fpv) -
                 sum(variazione_diminuzione_stanziato) - sum(variazione_diminuzione_fpv))
                	variazione_totale_spese	                         
            from "BILR149_Allegato_8_variazioni_eserc_gestprov_spese_bozza_txt" (
              p_ente_prop_id, p_anno ,
              p_numero_delibera, p_anno_delibera, p_tipo_delibera,
              p_anno_competenza, p_ele_variazioni)            
        	group by attoamm_anno_spese,
                attoamm_numero_spese, tipo_atto_spese, attoamm_oggetto_spese, 
                attoamm_id_spese,
                data_provv_var_spese, data_approvazione_provv_spese) spese
    ON entrate.attoamm_id_ent = spese.attoamm_id_spese;   
else
	record_t2sb20s:= 'Il REPORT '||p_code_report|| ' NON E'' GESTITO IN QUESTO FORMATO';
    return next;
    return;
        	
end if;


	

exception
    when syntax_error THEN
    	record_t2sb20s='ERRORE DI SINTASSI NEI PARAMETRI: '|| SQLERRM|| ' - Verificare se sono stati inseriti caratteri alfabetici oltre la virgola.';
    	return next;
    	return;
    when invalid_text_representation THEN
    	record_t2sb20s='ERRORE DI SINTASSI NEI PARAMETRI: '|| SQLERRM|| ' - Verificare se sono stati inseriti caratteri alfabetici oltre la virgola.';
    	return next;
    	return;        
	when others  THEN
 		RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;


CREATE OR REPLACE FUNCTION siac.fnc_tracciato_t2sb21s (
  p_ente_prop_id integer,
  p_anno varchar,
  p_numero_delibera integer,
  p_anno_delibera varchar,
  p_tipo_delibera varchar,
  p_anno_competenza varchar,
  p_ele_variazioni varchar,
  p_organo_provv varchar,
  p_code_report varchar,
  p_codice_ente varchar
)
RETURNS TABLE (
  record_t2sb21s varchar
) AS
$body$
DECLARE

prefisso varchar;
strApp varchar;
intApp numeric;
contaParametri integer;
contaParametriParz integer;
DEF_NULL	constant varchar:=''; 
RTN_MESSAGGIO varchar(1000):=DEF_NULL;

begin
	
/*
	27/05/2020. 
    Funzione nata per la SIAC-7195.
    La funziona prepara i dati del tracciato t2sb21s.
    Riceve in input i parametri di estrazione dei dati ed il codice report.
    In base al report richiama le procedure corrette.
    Funziona solo per i report BILR024 e BILR146.

*/
	
if p_code_report = 'BILR024' then
    return query 
      with query_tot as (
      	select 'E' tipo_record, attoamm_anno,
            attoamm_numero, tipo_atto, attoamm_oggetto, attoamm_id,
            data_provv_var, data_approvazione_provv,
/*  SIAC-7678 26/06/2020:
	Sul file delle variazioni "normali" il tag 'NCAP' che sta sul record di 
    dettaglio (da posizione 27 a 33) deve essere allineato a dx e preceduto 
    dai necessari zeri per riempire i 7 campi previsti.            
             COALESCE(tipologia_code,'') */
/*  SIAC-8439 04/11/2021.
	Per risolvere definitivamente il problema della valorizzazione del campo
    NCAP nel caso dei capitoli senza codifica di bilancio, il controllo sul
    tipo di capitolo e' stato spostato nella query e si imposta il campo codifica_bil
    con il valore corretto.
    Non e' quindi piu' necessario raggruppare per il tipo capitolo e si evita
    di duplicare i record a parita' di codifica di bilancio.
            case when COALESCE(tipologia_code,'') <> '' then
            	'00'||left(tipologia_code,5) 
            else '' end codifica_bil,     */       
                  
            case when COALESCE(tipologia_code,'') <> '' then
            	'00'||left(tipologia_code,5) 
            else case when tipo_capitolo in ('FCI') THEN '8888888'
            	 	else '9999999' end
            end codifica_bil, 
      --SIAC-8367 04/10/2021.
      --Tolta l'estrazione del tipo capitolo ed il relativo
      -- raggruppamento perche' venivano duplicati i record a parita' 
      --di codifica di bilancio.            
            COALESCE(tipologia_desc,'') descr_codifica_bil,
            sum(variazione_aumento_residuo) variazione_aumento_residuo,
            sum(variazione_aumento_stanziato) variazione_aumento_stanziato,
            sum(variazione_aumento_cassa) variazione_aumento_cassa,
            sum(variazione_diminuzione_residuo) variazione_diminuzione_residuo,
            sum(variazione_diminuzione_stanziato) variazione_diminuzione_stanziato,
            sum(variazione_diminuzione_cassa) variazione_diminuzione_cassa                          
        from "BILR024_Allegato_7_Allegato_delibera_variazione_su_entrate_txt" (
              p_ente_prop_id, p_anno ,
              p_numero_delibera, p_anno_delibera, p_tipo_delibera,
              p_anno_competenza, p_ele_variazioni)         
    	group by tipo_record, attoamm_anno,
            attoamm_numero, tipo_atto, attoamm_oggetto, attoamm_id,
            data_provv_var, data_approvazione_provv,
            codifica_bil, descr_codifica_bil
     UNION select 'S' tipo_record, attoamm_anno,
                attoamm_numero, tipo_atto, attoamm_oggetto, attoamm_id,
                data_provv_var, data_approvazione_provv,
/*  SIAC-8439 04/11/2021.
	Per risolvere definitivamente il problema della valorizzazione del campo
    NCAP nel caso dei capitoli senza codifica di bilancio, il controllo sul
    tipo di capitolo e' stato spostato nella query e si imposta il campo codifica_bil
    con il valore corretto.
    Non e' quindi piu' necessario raggruppare per il tipo capitolo e si evita
    di duplicare i record a parita' di codifica di bilancio.
				COALESCE(programma_code,'')||COALESCE(titusc_code,'') codifica_bil, */   
                             
                case when COALESCE(programma_code,'')||COALESCE(titusc_code,'') <> '' then
                	COALESCE(programma_code,'')||COALESCE(titusc_code,'') 
                 else '9999999' end codifica_bil,
      --SIAC-8367 04/10/2021.
      --Tolta l'estrazione del tipo capitolo ed il relativo
      -- raggruppamento perche' venivano duplicati i record a parita' 
      --di codifica di bilancio.                  
                COALESCE(titusc_desc,'') descr_codifica_bil,
                sum(variazione_aumento_residuo) variazione_aumento_residuo,
                sum(variazione_aumento_stanziato) variazione_aumento_stanziato,
                sum(variazione_aumento_cassa) variazione_aumento_cassa,
                sum(variazione_diminuzione_residuo) variazione_diminuzione_residuo,
                sum(variazione_diminuzione_stanziato) variazione_diminuzione_stanziato,
                sum(variazione_diminuzione_cassa) variazione_diminuzione_cassa                          
            from "BILR024_Allegato_7_Allegato_delibera_variazione_su_spese_txt" (
              p_ente_prop_id, p_anno ,
              p_numero_delibera, p_anno_delibera, p_tipo_delibera,
              p_anno_competenza, p_ele_variazioni)            
        	group by tipo_record, attoamm_anno,
                attoamm_numero, tipo_atto, attoamm_oggetto, attoamm_id,
                data_provv_var, data_approvazione_provv,
                codifica_bil, descr_codifica_bil
      order by tipo_record, attoamm_id, codifica_bil)
       select (         	
              --CIST
          '00001'  || 
              --CENT codice ente 
          p_codice_ente  || 
              --CESE codice esercizio
          p_anno_competenza  || 
              -- NDEL Numero Delibera
          LPAD(query_tot.attoamm_numero::varchar,7,'0') ||          
              --SORG Organo deliberante
          case when p_organo_provv is null or p_organo_provv = '' then 
              ' ' else p_organo_provv  end || 
              -- CTIPREC tipo record
          '1'   ||
           	  -- SEOU INDICATORE ENTRATA/USCITA (1= Entrata - 2 = Uscita)
          case when query_tot.tipo_record = 'E' then '1'
          		else '2' end ||
			  -- NCAP Codifica di Bilancio
/*  SIAC-8217 31/05/2021.
	Se non esiste la codifica se il capitolo e' FCI di entrata deve essere 8888888, 
    altrimenti 9999999.
	Se in futuro ci sara' la deficienza di cassa per le spese dovra' 
    essere 8888888, ma al momento questa tipologia di capitolo non e' 
    gestita. */
          -- LPAD(query_tot.codifica_bil, 7, '0') ||
          
/* SIAC-8367 04/10/2021.
   Si deve tornare indietro sulla modifica fatta per la SIAC-8217
   perche' si duplicano i record a parita' di codifica di bilancio e
   quindi non si puo' raggruppare per tipo capitolo.
   Occerrera' capire come gestire il caso del capitolo di entrata FCI.
              */
              
/*  SIAC-8439 04/11/2021.
	Per risolvere definitivamente il problema della valorizzazione del campo
    NCAP nel caso dei capitoli senza codifica di bilancio, il controllo sul
    tipo di capitolo e' stato spostato nella query e il campo codifica_bil
    contiene gia' il valore corretto sia per le entrate che per le spese.
    Non e' quindi piu' necessario raggruppare per il tipo capitolo e si evita
    di duplicare i record a parita' di codifica di bilancio.
     
        case when query_tot.tipo_record = 'E' then --Entrata          	
          	case when query_tot.tipo_capitolo in ('FCI') THEN            	
            	case when query_tot.codifica_bil <> '' then
         			LPAD(query_tot.codifica_bil, 7, '0')
          		else '8888888' end 
           else case when query_tot.codifica_bil <>'' then
          			LPAD(query_tot.codifica_bil, 7, '0')
          		else '9999999' end 
       		end 
          else -- Spesa
            case when query_tot.codifica_bil <>'' then
              LPAD(query_tot.codifica_bil, 7, '0')
            else '9999999' end */
            
    /*      case when query_tot.codifica_bil <>'' then
              LPAD(query_tot.codifica_bil, 7, '0')
            else '9999999' end ||      */   
            
           LPAD(query_tot.codifica_bil, 7, '0')  || 
                           
          	  -- NART Numero Articolo
          '000' ||
          		--NRES Anno Residuo 
/*  SIAC-7678 26/06/2020:
	Sempre sul file delle variazioni "normali" il tag 'NRES' (da posizione 
    37 per 4) deve essere compilato solo sui record relativamente ai residui.
    ....se il capitolo interessato e' la competenza deve essere compilato 
    con quattro zeri              
          p_anno_competenza || */ 
          '0000' ||
          		--IPIUCPT Importo Variazione PIU' Competenza
          trim(replace(to_char(query_tot.variazione_aumento_stanziato ,
          		'000000000000000.00'),'.','')) ||         
          		--IMENCPT Importo Variazione MENO Competenza
          trim(replace(to_char(query_tot.variazione_diminuzione_stanziato ,
          		'000000000000000.00'),'.','')) ||
           		--IPIUCAS Importo Variazione PIU' Cassa
          trim(replace(to_char(query_tot.variazione_aumento_cassa ,
          		'000000000000000.00'),'.','')) ||
          		--IMENCAS Importo Variazione MENO Cassa
          trim(replace(to_char(query_tot.variazione_diminuzione_cassa ,
          		'000000000000000.00'),'.','')) ||
         		--ZDES Descrizione Codifica di Bilancio
          RPAD(left(query_tot.descr_codifica_bil,90),90,' ') ||
                --ZDESBL Descrizione Codifica di Bilancio (Bilingue)
          RPAD(' ',90,' ') || 
          		--CMEC Codice Meccanografico
          RPAD('0', 7, '0') ||
                -- SRILIVA Segnale Rilevanza IVA (0 = NO - 1 = SI) NON OBBL.
          ' ' ||
          		--ISTACPT  Importo Stanziamento di Competenza
          LPAD('0', 17,'0') ||
          		--ISTACAS  Importo Stanziamento di Cassa
          LPAD('0', 17,'0') ||
          		--NCNTRIF   Numero Conto di Riferimento
          LPAD('0', 7,'0') ||
          		-- STIPCNT  Tipo Conto di Riferimento (0 = ordinario - 1 = vincolato)
          ' ' ||
          		--ISCOCAP   Importo limite Sconfino
          LPAD('0', 17,'0') ||
          		--IIMP   Importo Impegnato
          LPAD('0', 17,'0') ||
          		--IFNDVIN   Importo Fondo Vincolato
          LPAD('0', 17,'0') ||
           		--FILLER 
          RPAD(' ', 11, ' ')
          )::varchar           
       from query_tot
/* SIAC-8422 04/11/2021.
	Devono essere escluse le righe che hanno tutti gli importi di variazione di
    competenza e cassa tutti a 0 */       
       where query_tot.variazione_aumento_stanziato <> 0 OR
       		 query_tot.variazione_diminuzione_stanziato <> 0 OR
             query_tot.variazione_aumento_cassa <> 0		OR
             query_tot.variazione_diminuzione_cassa <> 0;
    
else --BILR149                
return query 
      with query_tot as (
      	select 'E' tipo_record, attoamm_anno,
            attoamm_numero, tipo_atto, attoamm_oggetto, attoamm_id,
            data_provv_var, data_approvazione_provv,
/*  SIAC-7678 26/06/2020:
	Sul file delle variazioni "normali" il tag 'NCAP' che sta sul record di 
    dettaglio (da posizione 27 a 33) deve essere allineato a dx e preceduto 
    dai necessari zeri per riempire i 7 campi previsti.            
             COALESCE(tipologia_code,'') */
             

/*  SIAC-8439 04/11/2021.
	Per risolvere definitivamente il problema della valorizzazione del campo
    NCAP nel caso dei capitoli senza codifica di bilancio, il controllo sul
    tipo di capitolo e' stato spostato nella query e si imposta il campo codifica_bil
    con il valore corretto.
    Non e' quindi piu' necessario raggruppare per il tipo capitolo e si evita
    di duplicare i record a parita' di codifica di bilancio.
            case when COALESCE(tipologia_code,'') <> '' then
            	'00'||left(tipologia_code,5) 
            else '' end codifica_bil,     */                         
            case when COALESCE(tipologia_code,'') <> '' then
            	'00'||left(tipologia_code,5) 
            else case when tipo_capitolo in ('FCI') THEN '8888888'
            	 	else '9999999' end
            end codifica_bil,              
            COALESCE(tipologia_desc,'') descr_codifica_bil, 
            sum(variazione_aumento_stanziato) variazione_aumento_stanziato,
            0 variazione_aumento_fpv,
            sum(variazione_diminuzione_stanziato) variazione_diminuzione_stanziato,
            0 variazione_diminuzione_fpv                             
        from "BILR149_Allegato_8_variazioni_eserc_gestprov_entrate_bozza_txt" (
          p_ente_prop_id, p_anno ,
          p_numero_delibera, p_anno_delibera, p_tipo_delibera,
          p_anno_competenza, p_ele_variazioni)            
    	group by tipo_record, attoamm_anno,
            attoamm_numero, tipo_atto, attoamm_oggetto, attoamm_id,
            data_provv_var, data_approvazione_provv,
            codifica_bil, descr_codifica_bil
     UNION select 'S' tipo_record, attoamm_anno,
                attoamm_numero, tipo_atto, attoamm_oggetto, attoamm_id,
                data_provv_var, data_approvazione_provv,
/*  SIAC-8439 04/11/2021.
	Per risolvere definitivamente il problema della valorizzazione del campo
    NCAP nel caso dei capitoli senza codifica di bilancio, il controllo sul
    tipo di capitolo e' stato spostato nella query e si imposta il campo codifica_bil
    con il valore corretto.
    Non e' quindi piu' necessario raggruppare per il tipo capitolo e si evita
    di duplicare i record a parita' di codifica di bilancio.
				COALESCE(programma_code,'')||COALESCE(titusc_code,'') codifica_bil, */   
                             
                case when COALESCE(programma_code,'')||COALESCE(titusc_code,'') <> '' then
                	COALESCE(programma_code,'')||COALESCE(titusc_code,'') 
                 else '9999999' end codifica_bil,                
                COALESCE(titusc_desc,'') descr_codifica_bil, 
                	--l'importo presentato delle variazioni deve comprendere
                    --lo stanziato NON FPV piu' quello FPV.
                sum(variazione_aumento_stanziato+variazione_aumento_fpv) variazione_aumento_stanziato,
                sum(variazione_aumento_fpv) variazione_aumento_fpv,
                sum(variazione_diminuzione_stanziato+variazione_diminuzione_fpv) variazione_diminuzione_stanziato,
                sum(variazione_diminuzione_fpv) variazione_diminuzione_fpv                          
            from "BILR149_Allegato_8_variazioni_eserc_gestprov_spese_bozza_txt" (
              p_ente_prop_id, p_anno ,
              p_numero_delibera, p_anno_delibera, p_tipo_delibera,
              p_anno_competenza, p_ele_variazioni)            
        	group by tipo_record, attoamm_anno,
                attoamm_numero, tipo_atto, attoamm_oggetto, attoamm_id,
                data_provv_var, data_approvazione_provv,
                codifica_bil, descr_codifica_bil
      order by tipo_record, attoamm_id, codifica_bil)
       select (         	
              --CIST
          '00001'  || 
              --CENT codice ente 
          p_codice_ente  || 
              --CESE codice esercizio
          p_anno_competenza  || 
              -- NDEL Numero Delibera
          LPAD(query_tot.attoamm_numero::varchar,7,'0') ||          
              --SORG Organo deliberante
          case when p_organo_provv is null or p_organo_provv = '' then 
              ' ' else p_organo_provv  end || 
              -- CTIPREC tipo record
          '1'   ||
           	  -- SEOU INDICATORE ENTRATA/USCITA (1= Entrata - 2 = Uscita)
          case when query_tot.tipo_record = 'E' then '1'
          		else '2' end ||
			  -- NCAP Codifica di Bilancio              
    /*  SIAC-8217 31/05/2021.
	Se non esiste la codifica se il capitolo e' FCI di entrata deve essere 8888888, 
    altrimenti 9999999.
	Se in futuro ci sara' la deficienza di cassa per le spese dovra' 
    essere 8888888, ma al momento questa tipologia di capitolo non e' 
    gestita. */
          -- LPAD(query_tot.codifica_bil, 7, '0') ||
          
/* SIAC-8367 04/10/2021.
   Si deve tornare indietro sulla modifica fatta per la SIAC-8217
   perche' si duplicano i record a parita' di codifica di bilancio e
   quindi non si puo' raggruppare per tipo capitolo.
   Occerrera' capire come gestire il caso del capitolo di entrata FCI.          
          case when query_tot.tipo_record = 'E' then --Entrata          	
          	case when query_tot.tipo_capitolo in ('FCI') THEN            	
            	case when query_tot.codifica_bil <> '' then
         			LPAD(query_tot.codifica_bil, 7, '0')
          		else '8888888' end 
           else case when query_tot.codifica_bil <>'' then
          			LPAD(query_tot.codifica_bil, 7, '0')
          		else '9999999' end 
       		end 
          else -- Spesa
            case when query_tot.codifica_bil <>'' then
              LPAD(query_tot.codifica_bil, 7, '0')
            else '9999999' end 
            end || */
            
/*  SIAC-8439 04/11/2021.
	Per risolvere definitivamente il problema della valorizzazione del campo
    NCAP nel caso dei capitoli senza codifica di bilancio, il controllo sul
    tipo di capitolo e' stato spostato nella query e il campo codifica_bil
    contiene gia' il valore corretto sia per le entrate che per le spese.
    Non e' quindi piu' necessario raggruppare per il tipo capitolo e si evita
    di duplicare i record a parita' di codifica di bilancio.
            
          case when query_tot.codifica_bil <>'' then
              LPAD(query_tot.codifica_bil, 7, '0')
            else '9999999' end ||  */

           LPAD(query_tot.codifica_bil, 7, '0')  ||                                   
          	  -- NART Numero Articolo
          '000' || 
          		--NRES Anno Residuo 
/*  SIAC-7678 26/06/2020:
	Sempre sul file delle variazioni "normali" il tag 'NRES' (da posizione 
    37 per 4) deve essere compilato solo sui record relativamente ai residui.
    ....se il capitolo interessato e' la competenza deve essere compilato 
    con quattro zeri              
          p_anno_competenza || */ 
          '0000' ||                
          		--IPIUCPT Importo Variazione PIU' Competenza
          trim(replace(to_char(query_tot.variazione_aumento_stanziato ,
          		'000000000000000.00'),'.','')) ||         
          		--IMENCPT Importo Variazione MENO Competenza
          trim(replace(to_char(query_tot.variazione_diminuzione_stanziato ,
          		'000000000000000.00'),'.','')) ||
           		--IPIUCAS Importo Variazione PIU' Cassa
          LPAD('0',17,'0') ||
          		--IMENCAS Importo Variazione MENO Cassa
          LPAD('0',17,'0') ||
         		--ZDES Descrizione Codifica di Bilancio
          RPAD(left(query_tot.descr_codifica_bil,90),90,' ') ||
                --ZDESBL Descrizione Codifica di Bilancio (Bilingue)
          RPAD(' ',90,' ') || 
          		--CMEC Codice Meccanografico
          RPAD('0', 7, '0') ||
                -- SRILIVA Segnale Rilevanza IVA (0 = NO - 1 = SI) NON OBBL.
          ' ' ||
          		--ISTACPT  Importo Stanziamento di Competenza
          LPAD('0', 17,'0') ||
          		--ISTACAS  Importo Stanziamento di Cassa
          LPAD('0', 17,'0') ||
          		--NCNTRIF   Numero Conto di Riferimento
          LPAD('0', 7,'0') ||
          		-- STIPCNT  Tipo Conto di Riferimento (0 = ordinario - 1 = vincolato)
          ' ' ||
          		--ISCOCAP   Importo limite Sconfino
          LPAD('0', 17,'0') ||
          		--IIMP   Importo Impegnato
          LPAD('0', 17,'0') ||
          		--IFNDVIN   Importo Fondo Vincolato
          LPAD('0', 17,'0') ||
           		--FILLER 
          RPAD(' ', 11, ' ')
          )::varchar           
       from query_tot
/* SIAC-8422 04/11/2021.
	Devono essere escluse le righe che hanno tutti gli importi di variazione di
    competenza a 0 */ 
    	where query_tot.variazione_aumento_stanziato <> 0 OR  
        	  query_tot.variazione_diminuzione_stanziato <> 0;                   
                
end if;
	

exception
    when syntax_error THEN
    	record_t2Sb21s='ERRORE DI SINTASSI NEI PARAMETRI: '|| SQLERRM|| ' - Verificare se sono stati inseriti caratteri alfabetici oltre la virgola.';
    	return next;
    	return;
    when invalid_text_representation THEN
    	record_t2Sb21s='ERRORE DI SINTASSI NEI PARAMETRI: '|| SQLERRM|| ' - Verificare se sono stati inseriti caratteri alfabetici oltre la virgola.';
    	return next;
    	return;        
	when others  THEN
 		RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;


CREATE OR REPLACE FUNCTION siac.fnc_tracciato_t2sb22s (
  p_ente_prop_id integer,
  p_anno varchar,
  p_numero_delibera integer,
  p_anno_delibera varchar,
  p_tipo_delibera varchar,
  p_anno_competenza varchar,
  p_ele_variazioni varchar,
  p_organo_provv varchar,
  p_code_report varchar,
  p_codice_ente varchar
)
RETURNS TABLE (
  record_t2sb22s varchar
) AS
$body$
DECLARE

prefisso varchar;
strApp varchar;
intApp numeric;
contaParametri integer;
contaParametriParz integer;
DEF_NULL	constant varchar:=''; 
RTN_MESSAGGIO varchar(1000):=DEF_NULL;

begin
	
/*
	27/05/2020. 
    Funzione nata per la SIAC-7195.
    La funziona prepara i dati del tracciato t2sb22s.
    Riceve in input i parametri di estrazione dei dati ed il codice report.
    In base al report richiama le procedure corrette.
    Funziona solo per il report BILR139.

*/
	
if p_code_report = 'BILR139' then
    return query 
      select (--CIST
          '00001'  || 
              --CENT codice ente 
          p_codice_ente  || 
              --CESE codice esercizio
          p_anno_competenza  || 
              -- NDEL Numero Delibera
          LPAD(spese.attoamm_numero::varchar,7,'0') ||          
              --SORG Organo deliberante
             /* SIAC-7678 26/06/2020:
              Sul file di variazione dei fondi vincolati il tag 'SORG' 
              (posizione 24) non deve essere valorizzato 
              (l'avevano compilato - in buona fede - con G). 
          case when p_organo_provv is null or p_organo_provv = '' then 
              ' ' else p_organo_provv  end || */
          ' ' ||
              -- CTIPREC tipo record
          '2'   ||
           	  -- SEOU INDICATORE ENTRATA/USCITA (fisso 2 = Uscita)
          '2'  ||
			  -- NCAP Codifica di Bilancio
/*  SIAC-8217 31/05/2021.
	Se non esiste la codifica riporto 9999999.
    Se in futuro ci sara' la deficienza di cassa per le spese dovra' 
    essere 8888888, ma al momento questa tipologia di capitolo non e' 
    gestita. */              
          --LPAD(spese.codifica_bil, 7, '0') ||
          case when spese.codifica_bil <>'' then
              LPAD(spese.codifica_bil, 7, '0')
            else '9999999' end ||
          	  -- NART Numero Articolo
          '000' ||
          		--NRES Anno Residuo 
                --13/10/2020 SIAC-7828. Il tag NRES deve essere sempre '0000'
          --p_anno_competenza ||
         '0000' ||
          		--IPIUFNV Importo Variazione PIU' fondo vincolato
          trim(replace(to_char(spese.variazione_aumento_stanziato ,
          		'000000000000000.00'),'.','')) ||         
          		--IMENFNV Importo Variazione MENO Competenza
          trim(replace(to_char(spese.variazione_diminuzione_stanziato ,
          		'000000000000000.00'),'.','')) ||
                --ZDES Descrizione delibera
          RPAD(left(spese.attoamm_oggetto,50),50,' ') ||
                --FILLER 
          RPAD(' ', 276, ' '))::varchar
      from (
      	select  attoamm_anno,
            attoamm_numero, tipo_atto, attoamm_oggetto, attoamm_id,
            data_provv_var, data_approvazione_provv,
            programma_code||titusc_code codifica_bil, 
            titusc_desc descr_codifica_bil,
            sum(variazione_aumento_residuo) variazione_aumento_residuo,
            sum(variazione_aumento_stanziato) variazione_aumento_stanziato,
            sum(variazione_aumento_cassa) variazione_aumento_cassa,
            sum(variazione_diminuzione_residuo) variazione_diminuzione_residuo,
            sum(variazione_diminuzione_stanziato) variazione_diminuzione_stanziato,
            sum(variazione_diminuzione_cassa) variazione_diminuzione_cassa                          
        from "BILR139_Allegato_8_Allegato_delibera_variazion_su_spese_fpv_txt" (
          p_ente_prop_id, p_anno ,
          p_numero_delibera, p_anno_delibera, p_tipo_delibera,
          p_anno_competenza, p_ele_variazioni)                   
    	group by  attoamm_anno,
            attoamm_numero, tipo_atto, attoamm_oggetto, attoamm_id,
            data_provv_var, data_approvazione_provv,
            codifica_bil, descr_codifica_bil
      order by attoamm_id, codifica_bil) spese
     /* SIAC-8422 04/11/2021.
	Devono essere escluse le righe che hanno tutti gli importi di variazione di
    competenza tutti a 0 */
    	where spese.variazione_aumento_stanziato <> 0 OR
            spese.variazione_diminuzione_stanziato <> 0  ;
else
	record_t2sb22s:= 'Il REPORT '||p_code_report|| ' NON E'' GESTITO IN QUESTO FORMATO';
    return next;
    return;	       
end if;
	

exception
    when syntax_error THEN
    	record_t2sb22s='ERRORE DI SINTASSI NEI PARAMETRI: '|| SQLERRM|| ' - Verificare se sono stati inseriti caratteri alfabetici oltre la virgola.';
    	return next;
    	return;
    when invalid_text_representation THEN
    	record_t2sb22s='ERRORE DI SINTASSI NEI PARAMETRI: '|| SQLERRM|| ' - Verificare se sono stati inseriti caratteri alfabetici oltre la virgola.';
    	return next;
    	return;        
	when others  THEN
 		RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

-- SIAC-8422 e SIAC-8439 - Maurizio - FINE
 
--- 08.11.2021 Sofia Jira SIAC-8196 - inizio 
drop FUNCTION if exists siac.fnc_siac_bko_caricamento_causali
(
  annoBilancio                    integer,
  enteProprietarioId              integer,
  ambitoCode                      varchar,
  loginOperazione                 varchar,
  dataElaborazione                timestamp,
  out codicerisultato             integer,
  out messaggiorisultato          varchar
);

drop FUNCTION if exists siac.fnc_siac_bko_caricamento_pdce_conto
(
  annoBilancio                    integer,
  enteProprietarioId              integer,
  ambitoCode                      varchar,
  loginOperazione                 varchar,
  dataElaborazione                timestamp,
  out codicerisultato             integer,
  out messaggiorisultato          varchar
);

CREATE OR REPLACE FUNCTION siac.fnc_siac_bko_caricamento_causali
(
  annoBilancio                    integer,
  enteProprietarioId              integer,
  ambitoCode                      varchar,
  loginOperazione                 varchar,
  dataElaborazione                timestamp,
  out codicerisultato             integer,
  out messaggiorisultato          varchar
)
RETURNS record AS
$body$
DECLARE

	strMessaggio VARCHAR(1500):='';
	strMessaggioFinale VARCHAR(1500):='';

    codResult integer:=null;
    numeroCausali integer:=null;
    dateInizVal timestamp:=null;
BEGIN

	strMessaggioFinale:='Inserimento causale di generale ambitoCode='||ambitoCode||'.';

    codiceRisultato:=0;
    messaggioRisultato:='';

    strMessaggio:='Verifica esistenza causali da creare in siac_bko_t_caricamento_causali.';
    select 1 into codResult
    from siac_bko_t_caricamento_causali bko
    where bko.ente_proprietario_id=enteProprietarioId
    and   bko.ambito=ambitoCode
    and   bko.caricata=false
    and   bko.data_cancellazione is null
	and   bko.validita_fine is null;

    if codResult is null then
    	raise exception ' Causali non presenti.';
    end if;

    strMessaggio:='Pulizia blanck siac_bko_t_caricamento_causali.';
    update siac_bko_t_caricamento_causali bko
    set    pdc_fin=ltrim(rtrim(bko.pdc_fin)),
           codice_causale=ltrim(rtrim(bko.codice_causale)),
           descrizione_causale=ltrim(rtrim(bko.descrizione_causale)),
           pdc_econ_patr=ltrim(rtrim(bko.pdc_econ_patr)),
           segno=ltrim(rtrim(bko.segno)),
           conto_iva=ltrim(rtrim(bko.conto_iva)),
           livelli=ltrim(rtrim(bko.livelli)),
           tipo_conto=ltrim(rtrim(bko.tipo_conto)),
           tipo_importo=ltrim(rtrim(bko.tipo_importo)),
           utilizzo_conto=ltrim(rtrim(bko.utilizzo_conto)),
           utilizzo_importo=ltrim(rtrim(bko.utilizzo_importo)),
           causale_default=ltrim(rtrim(bko.causale_default))
    where bko.ente_proprietario_id=enteProprietarioId
    and   bko.ambito=ambitoCode
    and   bko.caricata=false
    and   bko.data_cancellazione is null
	and   bko.validita_fine is null;

	strMessaggio:='Pulizia blanck siac_bko_t_causale_evento.';
	update siac_bko_t_causale_evento bko
	set    pdc_fin=ltrim(rtrim(bko.pdc_fin)),
    	   codice_causale=ltrim(rtrim(bko.codice_causale)),
		   tipo_evento=ltrim(rtrim(bko.tipo_evento)),
		   evento=ltrim(rtrim(bko.evento))
    where bko.ente_proprietario_id=enteProprietarioId
    and   bko.ambito=ambitoCode
    and   bko.caricata=false
    and   bko.data_cancellazione is null
	and   bko.validita_fine is null;

    dateInizVal:=(annoBilancio::varchar||'-01-01')::timestamp;

    -- siac_t_causale_ep
    strMessaggio:='Inserimento causali [siac_t_causale_ep].';
    insert into siac_t_causale_ep
    (
      causale_ep_code,
      causale_ep_desc,
      causale_ep_tipo_id,
      ambito_id,
      validita_inizio,
      login_operazione,
      login_creazione,
      ente_proprietario_id
    )
    select distinct bko.codice_causale,
           bko.descrizione_causale,
           tipo.causale_ep_tipo_id,
           ambito.ambito_id,
           dateInizVal,
           bko.login_operazione||'-'||loginOperazione||'-'||bko.eu||'@'||bko.pdc_fin,
           bko.login_operazione||'-'||loginOperazione||'-'||bko.eu,
           tipo.ente_proprietario_id
    from siac_bko_t_caricamento_causali bko,siac_t_ente_proprietario ente,siac_d_causale_ep_tipo tipo,
         siac_d_ambito ambito
    where ente.ente_proprietario_id=enteProprietarioId
    and   bko.ente_proprietario_id=ente.ente_proprietario_id
    and   tipo.ente_proprietario_id=ente.ente_proprietario_id
    and   tipo.causale_ep_tipo_code=bko.causale_tipo
    and   ambito.ente_proprietario_id=ente.ente_proprietario_id
    and   ambito.ambito_code=bko.ambito
    and   bko.caricata=false
 --   and   bko.eu='U'
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null
    and   not exists
    (
    select 1 from siac_t_causale_ep ep
    where ep.ente_proprietario_id=enteProprietarioId
    and   ep.causale_ep_code=bko.codice_causale
    and   ep.ambito_id=ambito.ambito_id
    and   ep.data_cancellazione is null
    and   ep.validita_fine is null
    );
	GET DIAGNOSTICS numeroCausali = ROW_COUNT;
	if coalesce(numeroCausali,0)=0  then
    	raise exception ' Inserimento non effettuato.';
    end if;

    raise notice 'numeroCausali=%',numeroCausali;

    codResult:=null;
    strMessaggio:='Inserimento causali  - stato [siac_r_causale_ep_stato].';
    -- siac_r_causale_ep_stato
    insert into siac_r_causale_ep_stato
    (
        causale_ep_id,
        causale_ep_stato_id,
        validita_inizio,
        login_operazione,
        ente_proprietario_id
    )
    select ep.causale_ep_id,
           stato.causale_ep_stato_id,
           dateInizVal,
           ep.login_operazione,
           stato.ente_proprietario_id
    from siac_d_causale_ep_stato stato ,siac_t_causale_ep ep, siac_t_ente_proprietario ente
    where ente.ente_proprietario_id=enteProprietarioId
    and   stato.ente_proprietario_id=ente.ente_proprietario_id
    and   stato.causale_ep_stato_code='V'
    and   ep.ente_proprietario_id=ente.ente_proprietario_id
--    and   ep.login_operazione like '%'||loginOperazione||'%U%';
    and   ep.login_operazione like '%'||loginOperazione||'%';

    GET DIAGNOSTICS codResult = ROW_COUNT;
	if coalesce(codResult,0)=0  then
    	raise exception ' Inserimento non effettuato.';
    end if;
    raise notice 'numeroStatoCausali=%',codResult;
    codResult:=null;
    strMessaggio:='Inserimento causali  - PdcFin [siac_r_causale_ep_class].';

    -- siac_r_causale_ep_class
    insert into siac_r_causale_ep_class
    (
        causale_ep_id,
        classif_id,
        validita_inizio,
        login_operazione,
        ente_proprietario_id
    )
    select ep.causale_ep_id,
           c.classif_id,
           dateInizVal,
           ep.login_operazione,
           ente.ente_proprietario_id
    from siac_t_causale_ep ep, siac_t_ente_proprietario ente,siac_t_class c,siac_d_class_tipo tipo
    where ente.ente_proprietario_id=enteProprietarioId
    and   tipo.ente_proprietario_id =ente.ente_proprietario_id
    and   tipo.classif_tipo_code='PDC_V'
    and   c.classif_tipo_id=tipo.classif_tipo_id
    and   ep.ente_proprietario_id=ente.ente_proprietario_id
--    and   ep.login_operazione like '%'||loginOperazione||'%U%'
    and   ep.login_operazione like '%'||loginOperazione||'%'
    and   c.classif_code=substring(ep.login_operazione, position('@' in ep.login_operazione)+1)
    and   c.data_cancellazione is null;
	GET DIAGNOSTICS codResult = ROW_COUNT;
-- 05.11.2021 Sofia SIAC-8196
--	if coalesce(codResult,0)=0  then
--    	raise exception ' Inserimento non effettuato.';
--    end if;
    raise notice 'numeroPdcFinCausali=%',codResult;

    codResult:=null;
    strMessaggio:='Inserimento causali - pdcContoEcon - PdcFin [siac_r_causale_ep_pdce_conto].';
    -- siac_r_causale_ep_pdce_conto
    insert into siac_r_causale_ep_pdce_conto
    (
      causale_ep_id,
      pdce_conto_id,
      validita_inizio,
      login_operazione,
      ente_proprietario_id
    )
    select distinct
           ep.causale_ep_id,
           conto.pdce_conto_id,
           dateInizVal,
--           bko.login_operazione||'-'||bko.eu||'@'||bko.carica_cau_id::varchar,
           bko.login_operazione||'-'||loginOperazione||'-'||bko.eu,
           conto.ente_proprietario_id
    from siac_t_causale_ep ep, siac_t_ente_proprietario ente, siac_bko_t_caricamento_causali bko,
         siac_t_pdce_conto conto,siac_d_ambito ambito
    where ente.ente_proprietario_id=enteProprietarioId
    and   ep.ente_proprietario_id=ente.ente_proprietario_id
    and   ep.causale_ep_code=bko.codice_causale
    and   bko.ente_proprietario_id=ente.ente_proprietario_id
--    and   ep.login_operazione like '%'||loginOperazione||'%U%'
    and   ep.login_operazione like '%'||loginOperazione||'-'||bko.eu||'%'
    and   ambito.ambito_id=ep.ambito_id
    and   ambito.ambito_code=bko.ambito
    and   ambito.ente_proprietario_id=ente.ente_proprietario_id
    and   conto.pdce_conto_code=bko.pdc_econ_patr
    and   conto.ambito_id=ep.ambito_id
    and   conto.ente_proprietario_id=ente.ente_proprietario_id
    and   bko.caricata=false
    and   not exists
    (
    select 1 from siac_r_causale_ep_pdce_conto r1
    where r1.pdce_conto_id=conto.pdce_conto_id
    and   r1.causale_ep_id=ep.causale_ep_id
    and   r1.ente_proprietario_id=ente.ente_proprietario_id
    and   r1.data_cancellazione is null
    and   r1.validita_fine is null
    )
--    and   bko.eu='U'
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null
    and   conto.data_cancellazione is null
    and   conto.validita_fine is null;

	GET DIAGNOSTICS codResult = ROW_COUNT;
	if coalesce(codResult,0)=0  then
    	raise exception ' Inserimento non effettuato.';
    end if;
    raise notice 'numeroContiCausali=%',codResult;

    -- segno
    codResult:=null;
    strMessaggio:='Inserimento causali - pdcContoEcon - SEGNO  [siac_r_causale_ep_pdce_conto_oper].';
	insert into siac_r_causale_ep_pdce_conto_oper
    (
      causale_ep_pdce_conto_id,
      oper_ep_id,
      validita_inizio,
      login_operazione,
      ente_proprietario_id
    )
    select distinct
           r.causale_ep_pdce_conto_id,
           oper.oper_ep_id,
           dateInizVal,
           r.login_operazione,
           ente.ente_proprietario_id
    from siac_t_ente_proprietario ente, siac_bko_t_caricamento_causali bko , siac_r_causale_ep_pdce_conto r,
         siac_d_operazione_ep oper, siac_t_causale_ep ep,siac_d_ambito ambito,siac_t_pdce_conto conto
    where ente.ente_proprietario_id=enteProprietarioId
    and   bko.ente_proprietario_id=ente.ente_proprietario_id
    and   ep.ente_proprietario_id=ente.ente_proprietario_id
	and   ep.login_operazione like '%'||loginOperazione||'-'||bko.eu||'%'
    and   ep.causale_ep_code=bko.codice_causale
    and   ambito.ente_proprietario_id=ente.ente_proprietario_id
    and   ambito.ambito_code=bko.ambito
    and   ep.ambito_id=ambito.ambito_id
    and   conto.ente_proprietario_id=ente.ente_proprietario_id
    and   conto.pdce_conto_code=bko.pdc_econ_patr
    and   conto.ambito_id=ambito.ambito_id
    and   r.ente_proprietario_id=ente.ente_proprietario_id
    and   r.login_operazione like '%'||loginOperazione||'-'||bko.eu--||'%'
    and   r.causale_ep_id=ep.causale_ep_id
    and   r.pdce_conto_id=conto.pdce_conto_id
--    and   bko.carica_cau_id=substring(r.login_operazione, position('@' in r.login_operazione)+1)::integer
    and   oper.ente_proprietario_id=ente.ente_proprietario_id
    and   oper.oper_ep_code=upper(bko.segno)
    and   bko.caricata=false
--    and   bko.eu='U'
	and   not exists
    (
    select 1 from siac_r_causale_ep_pdce_conto_oper r1
    where r1.causale_ep_pdce_conto_id=r.causale_ep_pdce_conto_id
    and   r1.oper_ep_id=oper.oper_ep_id
    and   r1.data_cancellazione is null
    and   r1.validita_fine is null
    )
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null;
    GET DIAGNOSTICS codResult = ROW_COUNT;
	if coalesce(codResult,0)=0  then
    	raise exception ' Inserimento non effettuato.';
    end if;
    raise notice 'numeroContiSEGNOCausali=%',codResult;

    codResult:=null;
    strMessaggio:='Inserimento causali - pdcContoEcon - TIPO IMPORTO  [siac_r_causale_ep_pdce_conto_oper].';
    -- tipo_importo
   /* insert into siac_r_causale_ep_pdce_conto_oper
    (
      causale_ep_pdce_conto_id,
      oper_ep_id,
      validita_inizio,
      login_operazione,
      ente_proprietario_id
    )
    select distinct
           r.causale_ep_pdce_conto_id,
           oper.oper_ep_id,
           dateInizVal,
           r.login_operazione,
           ente.ente_proprietario_id
    from siac_t_ente_proprietario ente, siac_bko_t_caricamento_causali bko , siac_r_causale_ep_pdce_conto r,
         siac_d_operazione_ep oper
    where ente.ente_proprietario_id=enteProprietarioId
    and   oper.ente_proprietario_id=ente.ente_proprietario_id
    and   bko.ente_proprietario_id=ente.ente_proprietario_id
    and   r.ente_proprietario_id=ente.ente_proprietario_id
--    and   r.login_operazione like '%'||loginOperazione||'%U%'
    and   r.login_operazione like '%'||loginOperazione||'-'||bko.eu||'%'
    and   bko.carica_cau_id=substring(r.login_operazione, position('@' in r.login_operazione)+1)::integer
    and   oper.ente_proprietario_id=ente.ente_proprietario_id
    and   oper.oper_ep_code=upper(bko.tipo_importo)
    and   bko.caricata=false
    and   not exists
    (
    select 1 from siac_r_causale_ep_pdce_conto_oper r1
    where r1.causale_ep_pdce_conto_id=r.causale_ep_pdce_conto_id
    and   r1.oper_ep_id=oper.oper_ep_id
    and   r1.data_cancellazione is null
    and   r1.validita_fine is null
    )
  --  and   bko.eu='U'
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null;*/

    insert into siac_r_causale_ep_pdce_conto_oper
    (
      causale_ep_pdce_conto_id,
      oper_ep_id,
      validita_inizio,
      login_operazione,
      ente_proprietario_id
    )
    select distinct
           r.causale_ep_pdce_conto_id,
           oper.oper_ep_id,
           dateInizVal,
           r.login_operazione,
           ente.ente_proprietario_id
    from siac_t_ente_proprietario ente, siac_bko_t_caricamento_causali bko , siac_r_causale_ep_pdce_conto r,
         siac_d_operazione_ep oper, siac_t_causale_ep ep,siac_d_ambito ambito,siac_t_pdce_conto conto
    where ente.ente_proprietario_id=enteProprietarioId
    and   bko.ente_proprietario_id=ente.ente_proprietario_id
    and   ep.ente_proprietario_id=ente.ente_proprietario_id
	and   ep.login_operazione like '%'||loginOperazione||'-'||bko.eu||'%'
    and   ep.causale_ep_code=bko.codice_causale
    and   ambito.ente_proprietario_id=ente.ente_proprietario_id
    and   ambito.ambito_code=bko.ambito
    and   ep.ambito_id=ambito.ambito_id
    and   conto.ente_proprietario_id=ente.ente_proprietario_id
    and   conto.pdce_conto_code=bko.pdc_econ_patr
    and   conto.ambito_id=ambito.ambito_id
    and   r.ente_proprietario_id=ente.ente_proprietario_id
    and   r.login_operazione like '%'||loginOperazione||'-'||bko.eu--||'%'
    and   r.causale_ep_id=ep.causale_ep_id
    and   r.pdce_conto_id=conto.pdce_conto_id
--    and   bko.carica_cau_id=substring(r.login_operazione, position('@' in r.login_operazione)+1)::integer
    and   oper.ente_proprietario_id=ente.ente_proprietario_id
    and   oper.oper_ep_code=upper(bko.tipo_importo)
    and   bko.caricata=false
--    and   bko.eu='U'
	and   not exists
    (
    select 1 from siac_r_causale_ep_pdce_conto_oper r1
    where r1.causale_ep_pdce_conto_id=r.causale_ep_pdce_conto_id
    and   r1.oper_ep_id=oper.oper_ep_id
    and   r1.data_cancellazione is null
    and   r1.validita_fine is null
    )
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null;
    GET DIAGNOSTICS codResult = ROW_COUNT;
	if coalesce(codResult,0)=0  then
    	raise exception ' Inserimento non effettuato.';
    end if;

    raise notice 'numeroContiTIPOIMPORTOCausali=%',codResult;

    -- utilizzo_conto
    codResult:=null;
    strMessaggio:='Inserimento causali - pdcContoEcon - UTILIZZO CONTO  [siac_r_causale_ep_pdce_conto_oper].';
    /*insert into siac_r_causale_ep_pdce_conto_oper
    (
      causale_ep_pdce_conto_id,
      oper_ep_id,
      validita_inizio,
      login_operazione,
      ente_proprietario_id
    )
    select distinct
           r.causale_ep_pdce_conto_id,
           oper.oper_ep_id,
           dateInizVal,
           r.login_operazione,
           ente.ente_proprietario_id
    from siac_t_ente_proprietario ente, siac_bko_t_caricamento_causali bko , siac_r_causale_ep_pdce_conto r,
         siac_d_operazione_ep oper
    where ente.ente_proprietario_id=enteProprietarioId
    and   oper.ente_proprietario_id=ente.ente_proprietario_id
    and   bko.ente_proprietario_id=ente.ente_proprietario_id
    and   r.ente_proprietario_id=ente.ente_proprietario_id
--    and   r.login_operazione like '%'||loginOperazione||'%U%'
    and   r.login_operazione like '%'||loginOperazione||'-'||bko.eu||'%'
    and   bko.carica_cau_id=substring(r.login_operazione, position('@' in r.login_operazione)+1)::integer
    and   oper.ente_proprietario_id=ente.ente_proprietario_id
    and   oper.oper_ep_code=upper(bko.utilizzo_conto)
    and   bko.caricata=false
--    and   bko.eu='U'
    and   not exists
    (
    select 1 from siac_r_causale_ep_pdce_conto_oper r1
    where r1.causale_ep_pdce_conto_id=r.causale_ep_pdce_conto_id
    and   r1.oper_ep_id=oper.oper_ep_id
    and   r1.data_cancellazione is null
    and   r1.validita_fine is null
    )
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null;*/

    insert into siac_r_causale_ep_pdce_conto_oper
    (
      causale_ep_pdce_conto_id,
      oper_ep_id,
      validita_inizio,
      login_operazione,
      ente_proprietario_id
    )
    select distinct
           r.causale_ep_pdce_conto_id,
           oper.oper_ep_id,
           dateInizVal,
           r.login_operazione,
           ente.ente_proprietario_id
    from siac_t_ente_proprietario ente, siac_bko_t_caricamento_causali bko , siac_r_causale_ep_pdce_conto r,
         siac_d_operazione_ep oper, siac_t_causale_ep ep,siac_d_ambito ambito,siac_t_pdce_conto conto
    where ente.ente_proprietario_id=enteProprietarioId
    and   bko.ente_proprietario_id=ente.ente_proprietario_id
    and   ep.ente_proprietario_id=ente.ente_proprietario_id
	and   ep.login_operazione like '%'||loginOperazione||'-'||bko.eu||'%'
    and   ep.causale_ep_code=bko.codice_causale
    and   ambito.ente_proprietario_id=ente.ente_proprietario_id
    and   ambito.ambito_code=bko.ambito
    and   ep.ambito_id=ambito.ambito_id
    and   conto.ente_proprietario_id=ente.ente_proprietario_id
    and   conto.pdce_conto_code=bko.pdc_econ_patr
    and   conto.ambito_id=ambito.ambito_id
    and   r.ente_proprietario_id=ente.ente_proprietario_id
    and   r.login_operazione like '%'||loginOperazione||'-'||bko.eu--||'%'
    and   r.causale_ep_id=ep.causale_ep_id
    and   r.pdce_conto_id=conto.pdce_conto_id
--    and   bko.carica_cau_id=substring(r.login_operazione, position('@' in r.login_operazione)+1)::integer
    and   oper.ente_proprietario_id=ente.ente_proprietario_id
    and   oper.oper_ep_code=upper(bko.utilizzo_conto)
    and   bko.caricata=false
--    and   bko.eu='U'
	and   not exists
    (
    select 1 from siac_r_causale_ep_pdce_conto_oper r1
    where r1.causale_ep_pdce_conto_id=r.causale_ep_pdce_conto_id
    and   r1.oper_ep_id=oper.oper_ep_id
    and   r1.data_cancellazione is null
    and   r1.validita_fine is null
    )
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null;

    GET DIAGNOSTICS codResult = ROW_COUNT;
/* 05.11.2021 Sofia JIRA SIAC-8196	
  if coalesce(codResult,0)=0  then
    	raise exception ' Inserimento non effettuato.';
    end if;*/
    raise notice 'numeroContiUTILIZZOCONTOCausali=%',codResult;

    -- utilizzo_importo
    codResult:=null;
    strMessaggio:='Inserimento causali - pdcContoEcon - UTILIZZO IMPORTO  [siac_r_causale_ep_pdce_conto_oper].';
    /*insert into siac_r_causale_ep_pdce_conto_oper
    (
      causale_ep_pdce_conto_id,
      oper_ep_id,
      validita_inizio,
      login_operazione,
      ente_proprietario_id
    )
    select distinct
           r.causale_ep_pdce_conto_id,
           oper.oper_ep_id,
           dateInizVal,
           r.login_operazione,
           ente.ente_proprietario_id
    from siac_t_ente_proprietario ente, siac_bko_t_caricamento_causali bko , siac_r_causale_ep_pdce_conto r,
         siac_d_operazione_ep oper
    where ente.ente_proprietario_id=enteProprietarioId
    and   oper.ente_proprietario_id=ente.ente_proprietario_id
    and   bko.ente_proprietario_id=ente.ente_proprietario_id
    and   r.ente_proprietario_id=ente.ente_proprietario_id
--    and   r.login_operazione like '%'||loginOperazione||'%U%'
    and   r.login_operazione like '%'||loginOperazione||'-'||bko.eu||'%'
    and   bko.carica_cau_id=substring(r.login_operazione, position('@' in r.login_operazione)+1)::integer
    and   oper.ente_proprietario_id=ente.ente_proprietario_id
    and   oper.oper_ep_code=upper(bko.utilizzo_importo)
    and   bko.caricata=false
  --  and   bko.eu='U'
    and   not exists
    (
    select 1 from siac_r_causale_ep_pdce_conto_oper r1
    where r1.causale_ep_pdce_conto_id=r.causale_ep_pdce_conto_id
    and   r1.oper_ep_id=oper.oper_ep_id
    and   r1.data_cancellazione is null
    and   r1.validita_fine is null
    )
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null;*/

    insert into siac_r_causale_ep_pdce_conto_oper
    (
      causale_ep_pdce_conto_id,
      oper_ep_id,
      validita_inizio,
      login_operazione,
      ente_proprietario_id
    )
    select distinct
           r.causale_ep_pdce_conto_id,
           oper.oper_ep_id,
           dateInizVal,
           r.login_operazione,
           ente.ente_proprietario_id
    from siac_t_ente_proprietario ente, siac_bko_t_caricamento_causali bko , siac_r_causale_ep_pdce_conto r,
         siac_d_operazione_ep oper, siac_t_causale_ep ep,siac_d_ambito ambito,siac_t_pdce_conto conto
    where ente.ente_proprietario_id=enteProprietarioId
    and   bko.ente_proprietario_id=ente.ente_proprietario_id
    and   ep.ente_proprietario_id=ente.ente_proprietario_id
	and   ep.login_operazione like '%'||loginOperazione||'-'||bko.eu||'%'
    and   ep.causale_ep_code=bko.codice_causale
    and   ambito.ente_proprietario_id=ente.ente_proprietario_id
    and   ambito.ambito_code=bko.ambito
    and   ep.ambito_id=ambito.ambito_id
    and   conto.ente_proprietario_id=ente.ente_proprietario_id
    and   conto.pdce_conto_code=bko.pdc_econ_patr
    and   conto.ambito_id=ambito.ambito_id
    and   r.ente_proprietario_id=ente.ente_proprietario_id
    and   r.login_operazione like '%'||loginOperazione||'-'||bko.eu--||'%'
    and   r.causale_ep_id=ep.causale_ep_id
    and   r.pdce_conto_id=conto.pdce_conto_id
--    and   bko.carica_cau_id=substring(r.login_operazione, position('@' in r.login_operazione)+1)::integer
    and   oper.ente_proprietario_id=ente.ente_proprietario_id
    and   oper.oper_ep_code=upper(bko.utilizzo_importo)
    and   bko.caricata=false
--    and   bko.eu='U'
	and   not exists
    (
    select 1 from siac_r_causale_ep_pdce_conto_oper r1
    where r1.causale_ep_pdce_conto_id=r.causale_ep_pdce_conto_id
    and   r1.oper_ep_id=oper.oper_ep_id
    and   r1.data_cancellazione is null
    and   r1.validita_fine is null
    )
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null;

    GET DIAGNOSTICS codResult = ROW_COUNT;
/* 05.11.2021 Sofia JIRA SIAC-8196
 	if coalesce(codResult,0)=0  then
    	raise exception ' Inserimento non effettuato.';
    end if;*/
    raise notice 'numeroContiUTILIZZOIMPORTOCausali=%',codResult;

	codResult:=null;
    strMessaggio:='Inserimento causali - evento   [siac_r_causale_evento].';
    -- siac_r_evento_causale
    insert into siac_r_evento_causale
    (
      causale_ep_id,
      evento_id,
      validita_inizio,
      login_operazione,
      ente_proprietario_id
    )
    select distinct
           ep.causale_ep_id,
           evento.evento_id,
           dateInizVal,
           bko.login_operazione||'-'||loginOperazione,
           ep.ente_proprietario_id
    from siac_t_ente_proprietario ente,siac_bko_t_causale_evento bko,siac_t_causale_ep ep,
         siac_d_evento evento,siac_d_evento_tipo tipo
    where ente.ente_proprietario_id=enteProprietarioId
    and   ep.ente_proprietario_id=ente.ente_proprietario_id
    and   ep.login_operazione like '%'||loginOperazione||'-'||bko.eu||'%'
    and   bko.ente_proprietario_id=ente.ente_proprietario_id
    and   ep.causale_ep_code=bko.codice_causale
    and   tipo.ente_proprietario_id=ente.ente_proprietario_id
    and   tipo.evento_tipo_code=bko.tipo_evento
    and   evento.evento_tipo_id=tipo.evento_tipo_id
    and   evento.evento_code=bko.evento
    and   bko.caricata=false
    and   not exists
    (
    select 1 from siac_r_evento_causale r1
    where r1.causale_ep_id = ep.causale_ep_id
    and   r1.evento_id=evento.evento_id
    and   r1.data_cancellazione is null
    and   r1.validita_fine is null
    )
   -- and   bko.eu='U'
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null;
    GET DIAGNOSTICS codResult = ROW_COUNT;
    raise notice 'numeroCausaliEvento=%',codResult;

    messaggioRisultato:=strMessaggioFinale||' Inserite '||numeroCausali::varchar||' causali.';

    raise notice '%',messaggioRisultato;

    return;

exception
    when RAISE_EXCEPTION THEN
        messaggioRisultato:=
        	coalesce(strMessaggioFinale,'')||coalesce(strMessaggio,'')||'ERRORE:  '||' '||coalesce(substring(upper(SQLERRM) from 1 for 500),'') ;
       	codiceRisultato:=-1;

		messaggioRisultato:=upper(messaggioRisultato);

        return;
     when NO_DATA_FOUND THEN
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||' Nessun dato presente in archivio.';
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);

        return;
     when TOO_MANY_ROWS THEN
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||' Diverse righe presenti in archivio.';
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);

        return;
	when others  THEN
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||'ERRORE DB:'||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 500) ;
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);
        return;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

CREATE OR REPLACE FUNCTION siac.fnc_siac_bko_caricamento_pdce_conto
(
  annoBilancio                    integer,
  enteProprietarioId              integer,
  ambitoCode                      varchar,
  loginOperazione                 varchar,
  dataElaborazione                timestamp,
  out codicerisultato             integer,
  out messaggiorisultato          varchar
)
RETURNS record AS
$body$
DECLARE

	strMessaggio VARCHAR(1500):='';
	strMessaggioFinale VARCHAR(1500):='';

    codResult integer:=null;

    dateInizVal timestamp:=null;
BEGIN

	strMessaggioFinale:='Inserimento conti PDC_ECON di generale ambitoCode='||ambitoCode||'.';

    codiceRisultato:=0;
    messaggioRisultato:='';

    strMessaggio:='Verifica esistenza conti da creare in siac_bko_t_caricamento_pdce_conto.';
    select 1 into codResult
    from siac_bko_t_caricamento_pdce_conto bko
    where bko.ente_proprietario_id=enteProprietarioId
    and   bko.ambito=ambitoCode
    and   bko.caricato=false
    and   bko.data_cancellazione is null
	and   bko.validita_fine is null;

    if codResult is null then
    	raise exception ' Conti non presenti.';
    end if;

    dateInizVal:=(annoBilancio::varchar||'-01-01')::timestamp;

   	 
    /*
      17.09.2021 Sofia SIAC-8338 -- commentato in quanto codifiche di bilancio inserite fuori fnc in TD
	codResult:=null;
	-- siac_t_class B.13.a
    strMessaggio:='Inserimento codice di bilancio B.13.a [siac_t_class].';
    insert into siac_t_class
    (
      classif_code,
      classif_desc,
      classif_tipo_id,
      validita_inizio,
      login_operazione,
      ente_proprietario_id
    )
    select
     'a',
     'Personale',
     tipo.classif_tipo_id,
     dateInizVal,
     loginOperazione,
     tipo.ente_proprietario_id
    from siac_v_dwh_codifiche_econpatr dwh,siac_t_class c,siac_d_class_tipo tipo,
         siac_r_class_fam_tree r,siac_t_class_fam_tree tree, siac_d_class_fam fam
    where dwh.ente_proprietario_id=enteProprietarioId
    and   dwh.codice_codifica_albero = 'B.13'
    and   c.classif_id=dwh.classif_id
    and   tipo.classif_tipo_id=c.classif_tipo_id
    and   tipo.classif_tipo_code not like '%GSA'
    and   r.classif_id=c.classif_id
    and   tree.classif_fam_tree_id=r.classif_fam_tree_id
    and   fam.classif_fam_id=tree.classif_fam_id
    and   not exists -- 25.09.2019 Sofia SIAC-7012
    (
    select 1
    from siac_t_class c1
    where c1.ente_proprietario_id=tipo.ente_proprietario_id
    and   c1.classif_tipo_id=tipo.classif_tipo_id
    and   c1.classif_code='a'
    and   c1.data_cancellazione is null
    )
    and   r.data_cancellazione is null
    and   r.validita_fine is null
    returning classif_id into codResult;
	raise notice 'strMessaggio=% %',strMessaggio,codResult;

    codResult:=null;
 	-- siac_r_class_fam_tree B.13.a

    strMessaggio:='Inserimento codice di bilancio B.13.a [siac_r_class_fam_tree].';
    insert into siac_r_class_fam_tree
    (
      classif_fam_tree_id,
      classif_id,
      classif_id_padre,
      ordine,
      livello,
      validita_inizio,
      login_operazione,
      ente_proprietario_id
    )
    select tree.classif_fam_tree_id,
           cnew.classif_id,
           c.classif_id,
           r.ordine||'.'||cnew.classif_code,
           r.livello+1,
           dateInizVal,
           loginOperazione,
           tipo.ente_proprietario_id
    from siac_v_dwh_codifiche_econpatr dwh,siac_t_class c,siac_d_class_tipo tipo,
         siac_r_class_fam_tree r,siac_t_class_fam_tree tree, siac_d_class_fam fam,
         siac_t_class cnew
    where dwh.ente_proprietario_id=enteProprietarioId
    and   dwh.codice_codifica_albero = 'B.13'
    and   c.classif_id=dwh.classif_id
    and   tipo.classif_tipo_id=c.classif_tipo_id
    and   tipo.classif_tipo_code not like '%GSA'
    and   r.classif_id=c.classif_id
    and   tree.classif_fam_tree_id=r.classif_fam_tree_id
    and   fam.classif_fam_id=tree.classif_fam_id
    and   cnew.ente_proprietario_id=enteProprietarioId
    and   cnew.login_operazione =loginOperazione
    and   not exists
    (
    select 1 from siac_r_class_fam_tree r1
    where r1.ente_proprietario_id=tipo.ente_proprietario_id
    and   r1.classif_id=cnew.classif_id
    and   r1.classif_id_padre=c.classif_id
    and   r1.classif_fam_tree_id=tree.classif_fam_tree_id
    and   r1.data_cancellazione is null
    and   r1.validita_fine is null
    )
    and   r.data_cancellazione is null
    and   r.validita_fine is null
    returning classif_classif_fam_tree_id into codResult;
	raise notice 'strMessaggio=% %',strMessaggio,codResult;
    */
   
   --- 17.09.2021 Sofia SIAC-8338
   -- siac_t_pdce_conto
   strMessaggio:='Cancellazione conti [siac_t_pdce_conto.validita_fine=31/12'||annoBilancio::varchar||'].';
   update siac_t_pdce_conto p
   set    validita_fine=(annoBilancio::varchar||'-12-31')::timestamp,
          data_modifica=now(),
          login_operazione=p.login_operazione||'-'||loginOperazione
   from siac_d_ambito ambito,siac_d_pdce_conto_tipo tipo  ,
        siac_t_pdce_fam_tree tree,siac_d_pdce_fam fam,
        siac_bko_t_caricamento_pdce_conto bko
   where bko.ente_proprietario_id=enteProprietarioId
   and   bko.tipo_operazione='C'
   and   bko.caricato=false
   and   p.ente_proprietario_id=enteProprietarioId
   and   p.pdce_conto_code=bko.pdce_conto_code
   and   ambito.ambito_id=p.ambito_id
   and   ambito.ambito_code=bko.ambito
   and   tipo.pdce_ct_tipo_id=p.pdce_ct_tipo_id
   and   tree.pdce_fam_tree_id=p.pdce_fam_tree_id
   and   fam.pdce_fam_id=tree.pdce_fam_id
   and   fam.pdce_fam_code=bko.classe_conto
   and   p.data_cancellazione is null
   and   bko.data_cancellazione is null
   and   bko.validita_fine is null;
  
   codResult:=null;
   select count(*) into codResult 
   from siac_d_ambito ambito,siac_d_pdce_conto_tipo tipo  ,
        siac_t_pdce_fam_tree tree,siac_d_pdce_fam fam,
        siac_bko_t_caricamento_pdce_conto bko,
        siac_t_pdce_conto p
   where bko.ente_proprietario_id=enteProprietarioId
   and   bko.tipo_operazione='C'
   and   bko.caricato=false
   and   p.ente_proprietario_id=enteProprietarioId
   and   p.pdce_conto_code=bko.pdce_conto_code
   and   ambito.ambito_id=p.ambito_id
   and   ambito.ambito_code=bko.ambito
   and   tipo.pdce_ct_tipo_id=p.pdce_ct_tipo_id
   and   tree.pdce_fam_tree_id=p.pdce_fam_tree_id
   and   fam.pdce_fam_id=tree.pdce_fam_id
   and   fam.pdce_fam_code=bko.classe_conto
   and   p.validita_fine is not null 
   and   p.login_operazione like '%-'||loginOperazione
   and   p.data_cancellazione is null
   and   bko.data_cancellazione is null
   and   bko.validita_fine is null;
   if codResult is null then codResult:=0;
   end if;
   raise notice 'Conti cancellati=%',codResult; 
  
    --- 17.09.2021 Sofia SIAC-8338
    codResult:=null;
    -- siac_t_pdce_conto
    strMessaggio:='Inserimento conti livello III [siac_t_pdce_conto].';
    insert into siac_t_pdce_conto
    (
      pdce_conto_code,
      pdce_conto_desc,
      pdce_conto_id_padre,
      livello,
      ordine,
      pdce_fam_tree_id,
      pdce_ct_tipo_id,
      ambito_id,
      validita_inizio,
      ente_proprietario_id,
      login_operazione,
      login_creazione
    )
    select
      bko.pdce_conto_code,
      bko.pdce_conto_desc,
      contoPadre.pdce_conto_id,
      bko.livello,
      bko.pdce_conto_code,
      tree.pdce_fam_tree_id,
      tipo.pdce_ct_tipo_id,
      ambito.ambito_id,
      dateInizVal,
      tipo.ente_proprietario_id,
      bko.login_operazione||'-'||loginOperazione||'@'||bko.carica_pdce_conto_id::varchar,
      bko.login_operazione||'-'||loginOperazione
    from siac_t_ente_proprietario ente,
         siac_bko_t_caricamento_pdce_conto bko,
         siac_t_pdce_fam_tree tree,siac_d_pdce_fam fam,
         siac_d_ambito ambito,
         siac_d_pdce_conto_tipo tipo,
         siac_t_pdce_conto contoPadre
    where ente.ente_proprietario_id=enteProprietarioId
    and   ambito.ente_proprietario_id=ente.ente_proprietario_id
    and   bko.ente_proprietario_id=ambito.ente_proprietario_id
    and   bko.ambito=ambito.ambito_code
    and   fam.ambito_id=ambito.ambito_id
    and   fam.pdce_fam_code=bko.classe_conto
    and   tree.pdce_fam_id=fam.pdce_fam_id
    and   tipo.pdce_ct_tipo_code=bko.tipo_conto
    and   tipo.ente_proprietario_id=ambito.ente_proprietario_id
    and   bko.tipo_operazione='I'
    and   bko.livello=3
    and   contoPadre.ente_proprietario_id=tipo.ente_proprietario_id
    and   contoPadre.pdce_fam_tree_id=tree.pdce_fam_tree_id
    and   contoPadre.livello=bko.livello-1
    and   contoPadre.ambito_id=ambito.ambito_id
    and   contoPadre.pdce_conto_code =
          SUBSTRING(bko.pdce_conto_code from 1 for length(bko.pdce_conto_code)- position('.' in reverse(bko.pdce_conto_code)))
    and   bko.caricato=false
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null
    and   not exists
    (
    select 1 from siac_t_pdce_conto conto
    where conto.ente_proprietario_id=enteProprietarioId
    and   conto.pdce_conto_code=bko.pdce_conto_code
    and   conto.ambito_id=ambito.ambito_id
    and   conto.livello=3
    and   conto.pdce_ct_tipo_id=tipo.pdce_ct_tipo_id
    and   conto.pdce_fam_tree_id=tree.pdce_fam_tree_id
    and   conto.data_cancellazione is null
    and   conto.validita_fine is null
    )
    and contoPadre.data_cancellazione is null
    and coalesce(contoPadre.validita_fine,date_trunc('DAY',(annoBilancio::varchar||'-12-31')::timestamp))
        >= date_trunc('DAY',(annoBilancio::varchar||'-12-31')::timestamp);
	GET DIAGNOSTICS codResult = ROW_COUNT;
   	raise notice 'Conti livello III inseriti=%',codResult;
   
	codResult:=null;
	-- siac_t_pdce_conto
    strMessaggio:='Inserimento conti livello IV [siac_t_pdce_conto].';
    insert into siac_t_pdce_conto
    (
      pdce_conto_code,
      pdce_conto_desc,
      pdce_conto_id_padre,
      livello,
      ordine,
      pdce_fam_tree_id,
      pdce_ct_tipo_id,
      ambito_id,
      validita_inizio,
      ente_proprietario_id,
      login_operazione,
      login_creazione
    )
    select
      bko.pdce_conto_code,
      bko.pdce_conto_desc,
      contoPadre.pdce_conto_id,
      bko.livello,
      bko.pdce_conto_code,
      tree.pdce_fam_tree_id,
      tipo.pdce_ct_tipo_id,
      ambito.ambito_id,
      dateInizVal,
      tipo.ente_proprietario_id,
      bko.login_operazione||'-'||loginOperazione||'@'||bko.carica_pdce_conto_id::varchar,
      bko.login_operazione||'-'||loginOperazione
    from siac_t_ente_proprietario ente,
         siac_bko_t_caricamento_pdce_conto bko,
         siac_t_pdce_fam_tree tree,siac_d_pdce_fam fam,
         siac_d_ambito ambito,
         siac_d_pdce_conto_tipo tipo,
         siac_t_pdce_conto contoPadre
    where ente.ente_proprietario_id=enteProprietarioId
    and   ambito.ente_proprietario_id=ente.ente_proprietario_id
    and   bko.ente_proprietario_id=ambito.ente_proprietario_id
    and   bko.ambito=ambito.ambito_code
    and   fam.ambito_id=ambito.ambito_id
    and   fam.pdce_fam_code=bko.classe_conto
    and   tree.pdce_fam_id=fam.pdce_fam_id
    and   tipo.pdce_ct_tipo_code=bko.tipo_conto
    and   tipo.ente_proprietario_id=ambito.ente_proprietario_id
    and   bko.tipo_operazione='I'
    and   bko.livello=4
    and   contoPadre.ente_proprietario_id=tipo.ente_proprietario_id
    and   contoPadre.pdce_fam_tree_id=tree.pdce_fam_tree_id
    and   contoPadre.livello=bko.livello-1
    and   contoPadre.ambito_id=ambito.ambito_id
    and   contoPadre.pdce_conto_code =
          SUBSTRING(bko.pdce_conto_code from 1 for length(bko.pdce_conto_code)- position('.' in reverse(bko.pdce_conto_code)))
    and   bko.caricato=false
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null
    and   not exists
    (
    select 1 from siac_t_pdce_conto conto
    where conto.ente_proprietario_id=enteProprietarioId
    and   conto.pdce_conto_code=bko.pdce_conto_code
    and   conto.ambito_id=ambito.ambito_id
    and   conto.livello=4
    and   conto.pdce_ct_tipo_id=tipo.pdce_ct_tipo_id
    and   conto.pdce_fam_tree_id=tree.pdce_fam_tree_id
    and   conto.data_cancellazione is null
    and   conto.validita_fine is null
    )
    and contoPadre.data_cancellazione is null
    and coalesce(contoPadre.validita_fine,date_trunc('DAY',(annoBilancio::varchar||'-12-31')::timestamp))
        >= date_trunc('DAY',(annoBilancio::varchar||'-12-31')::timestamp);
	GET DIAGNOSTICS codResult = ROW_COUNT;
   	raise notice 'Conti livello IV inseriti=%',codResult;

    codResult:=null;
	-- siac_t_pdce_conto
    strMessaggio:='Inserimento conti livello V [siac_t_pdce_conto].';
    insert into siac_t_pdce_conto
    (
      pdce_conto_code,
      pdce_conto_desc,
      pdce_conto_id_padre,
      livello,
      ordine,
      pdce_fam_tree_id,
      pdce_ct_tipo_id,
      ambito_id,
      validita_inizio,
      ente_proprietario_id,
      login_operazione,
      login_creazione
    )
    select
      bko.pdce_conto_code,
      bko.pdce_conto_desc,
      contoPadre.pdce_conto_id,
      bko.livello,
      bko.pdce_conto_code,
      tree.pdce_fam_tree_id,
      tipo.pdce_ct_tipo_id,
      ambito.ambito_id,
      dateInizVal,
      tipo.ente_proprietario_id,
      bko.login_operazione||'-'||loginOperazione||'@'||bko.carica_pdce_conto_id::varchar,
      bko.login_operazione||'-'||loginOperazione
    from siac_t_ente_proprietario ente,
         siac_bko_t_caricamento_pdce_conto bko,
         siac_t_pdce_fam_tree tree,siac_d_pdce_fam fam,
         siac_d_ambito ambito,
         siac_d_pdce_conto_tipo tipo,
         siac_t_pdce_conto contoPadre
    where ente.ente_proprietario_id=enteProprietarioId
    and   ambito.ente_proprietario_id=ente.ente_proprietario_id
    and   bko.ente_proprietario_id=ambito.ente_proprietario_id
    and   bko.ambito=ambito.ambito_code
    and   fam.ambito_id=ambito.ambito_id
    and   fam.pdce_fam_code=bko.classe_conto
    and   tree.pdce_fam_id=fam.pdce_fam_id
    and   tipo.pdce_ct_tipo_code=bko.tipo_conto
    and   tipo.ente_proprietario_id=ambito.ente_proprietario_id
    and   bko.tipo_operazione='I'
    and   bko.livello=5
    and   contoPadre.ente_proprietario_id=tipo.ente_proprietario_id
    and   contoPadre.pdce_fam_tree_id=tree.pdce_fam_tree_id
    and   contoPadre.livello=bko.livello-1
    and   contoPadre.ambito_id=ambito.ambito_id
    and   contoPadre.pdce_conto_code =
          SUBSTRING(bko.pdce_conto_code from 1 for length(bko.pdce_conto_code)- position('.' in reverse(bko.pdce_conto_code)))
    and   bko.caricato=false
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null
    and   not exists
    (
    select 1 from siac_t_pdce_conto conto
    where conto.ente_proprietario_id=enteProprietarioId
    and   conto.pdce_conto_code=bko.pdce_conto_code
    and   conto.ambito_id=ambito.ambito_id
    and   conto.livello=5
    and   conto.pdce_ct_tipo_id=tipo.pdce_ct_tipo_id
    and   conto.pdce_fam_tree_id=tree.pdce_fam_tree_id
    and   conto.data_cancellazione is null
    and   conto.validita_fine is null
    )
    and contoPadre.data_cancellazione is null
    and coalesce(contoPadre.validita_fine,date_trunc('DAY',(annoBilancio::varchar||'-12-31')::timestamp))
        >= date_trunc('DAY',(annoBilancio::varchar||'-12-31')::timestamp);
	GET DIAGNOSTICS codResult = ROW_COUNT;
   	raise notice 'Conti livello V inseriti=%',codResult;


    codResult:=null;
	-- siac_t_pdce_conto
    strMessaggio:='Inserimento conti livello VI [siac_t_pdce_conto].';
   	insert into siac_t_pdce_conto
    (
      pdce_conto_code,
      pdce_conto_desc,
      pdce_conto_id_padre,
      livello,
      ordine,
      pdce_fam_tree_id,
      pdce_ct_tipo_id,
      ambito_id,
      validita_inizio,
      ente_proprietario_id,
      login_operazione,
      login_creazione
    )
    select
      bko.pdce_conto_code,
      bko.pdce_conto_desc,
      contoPadre.pdce_conto_id,
      bko.livello,
      bko.pdce_conto_code,
      tree.pdce_fam_tree_id,
      tipo.pdce_ct_tipo_id,
      ambito.ambito_id,
      dateInizVal,
      tipo.ente_proprietario_id,
      bko.login_operazione||'-'||loginOperazione||'@'||bko.carica_pdce_conto_id::varchar,
      bko.login_operazione||'-'||loginOperazione
    from siac_t_ente_proprietario ente,
         siac_bko_t_caricamento_pdce_conto bko,
         siac_t_pdce_fam_tree tree,siac_d_pdce_fam fam,
         siac_d_ambito ambito,
         siac_d_pdce_conto_tipo tipo,
         siac_t_pdce_conto contoPadre
    where ente.ente_proprietario_id=enteProprietarioId
    and   ambito.ente_proprietario_id=ente.ente_proprietario_id
    and   bko.ente_proprietario_id=ambito.ente_proprietario_id
    and   bko.ambito=ambito.ambito_code
    and   fam.ambito_id=ambito.ambito_id
    and   fam.pdce_fam_code=bko.classe_conto
    and   tree.pdce_fam_id=fam.pdce_fam_id
    and   tipo.pdce_ct_tipo_code=bko.tipo_conto
    and   tipo.ente_proprietario_id=ambito.ente_proprietario_id
    and   bko.tipo_operazione='I'
    and   bko.livello=6
    and   contoPadre.ente_proprietario_id=tipo.ente_proprietario_id
    and   contoPadre.pdce_fam_tree_id=tree.pdce_fam_tree_id
    and   contoPadre.livello=bko.livello-1
    and   contoPadre.ambito_id=ambito.ambito_id
    and   contoPadre.pdce_conto_code =
          SUBSTRING(bko.pdce_conto_code from 1 for length(bko.pdce_conto_code)- position('.' in reverse(bko.pdce_conto_code)))
    and   bko.caricato=false
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null
    and   not exists
    (
    select 1 from siac_t_pdce_conto conto
    where conto.ente_proprietario_id=enteProprietarioId
    and   conto.pdce_conto_code=bko.pdce_conto_code
    and   conto.ambito_id=ambito.ambito_id
    and   conto.livello=6
    and   conto.pdce_ct_tipo_id=tipo.pdce_ct_tipo_id
    and   conto.pdce_fam_tree_id=tree.pdce_fam_tree_id
    and   conto.data_cancellazione is null
    and   conto.validita_fine is null
    )
    and contoPadre.data_cancellazione is null
    and coalesce(contoPadre.validita_fine,date_trunc('DAY',(annoBilancio::varchar||'-12-31')::timestamp))
        >= date_trunc('DAY',(annoBilancio::varchar||'-12-31')::timestamp);
	GET DIAGNOSTICS codResult = ROW_COUNT;

   	raise notice 'Conti livello VI inseriti=%',codResult;

    codResult:=null;
	-- siac_t_pdce_conto
    strMessaggio:='Inserimento conti livello VII [siac_t_pdce_conto].';
    insert into siac_t_pdce_conto
    (
      pdce_conto_code,
      pdce_conto_desc,
      pdce_conto_id_padre,
      livello,
      ordine,
      pdce_fam_tree_id,
      pdce_ct_tipo_id,
      ambito_id,
      validita_inizio,
      ente_proprietario_id,
      login_operazione,
      login_creazione
    )
    select
      bko.pdce_conto_code,
      bko.pdce_conto_desc,
      contoPadre.pdce_conto_id,
      bko.livello,
      bko.pdce_conto_code,
      tree.pdce_fam_tree_id,
      tipo.pdce_ct_tipo_id,
      ambito.ambito_id,
      dateInizVal,
      tipo.ente_proprietario_id,
      bko.login_operazione||'-'||loginOperazione||'@'||bko.carica_pdce_conto_id::varchar,
      bko.login_operazione||'-'||loginOperazione
    from siac_t_ente_proprietario ente,
         siac_bko_t_caricamento_pdce_conto bko,
         siac_t_pdce_fam_tree tree,siac_d_pdce_fam fam,
         siac_d_ambito ambito,
         siac_d_pdce_conto_tipo tipo,
         siac_t_pdce_conto contoPadre
    where ente.ente_proprietario_id=enteProprietarioId
    and   ambito.ente_proprietario_id=ente.ente_proprietario_id
    and   bko.ente_proprietario_id=ambito.ente_proprietario_id
    and   bko.ambito=ambito.ambito_code
    and   fam.ambito_id=ambito.ambito_id
    and   fam.pdce_fam_code=bko.classe_conto
    and   tree.pdce_fam_id=fam.pdce_fam_id
    and   tipo.pdce_ct_tipo_code=bko.tipo_conto
    and   tipo.ente_proprietario_id=ambito.ente_proprietario_id
    and   bko.tipo_operazione='I'
    and   bko.livello=7
    and   contoPadre.ente_proprietario_id=tipo.ente_proprietario_id
    and   contoPadre.pdce_fam_tree_id=tree.pdce_fam_tree_id
    and   contoPadre.livello=bko.livello-1
    and   contoPadre.ambito_id=ambito.ambito_id
    and   contoPadre.pdce_conto_code =
          SUBSTRING(bko.pdce_conto_code from 1 for length(bko.pdce_conto_code)- position('.' in reverse(bko.pdce_conto_code)))
    and   bko.caricato=false
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null
    and   not exists
    (
    select 1 from siac_t_pdce_conto conto
    where conto.ente_proprietario_id=enteProprietarioId
    and   conto.pdce_conto_code=bko.pdce_conto_code
    and   conto.ambito_id=ambito.ambito_id
    and   conto.livello=7
    and   conto.pdce_ct_tipo_id=tipo.pdce_ct_tipo_id
    and   conto.pdce_fam_tree_id=tree.pdce_fam_tree_id
    and   conto.data_cancellazione is null
    and   conto.validita_fine is null
    )
    and contoPadre.data_cancellazione is null
    and coalesce(contoPadre.validita_fine,date_trunc('DAY',(annoBilancio::varchar||'-12-31')::timestamp))
        >= date_trunc('DAY',(annoBilancio::varchar||'-12-31')::timestamp);
    GET DIAGNOSTICS codResult = ROW_COUNT;
   	raise notice 'Conti livello VII inseriti=%',codResult;

   
    codResult:=null;
	-- siac_t_pdce_conto
    strMessaggio:='Inserimento conti livello VIII [siac_t_pdce_conto].';
    insert into siac_t_pdce_conto
    (
      pdce_conto_code,
      pdce_conto_desc,
      pdce_conto_id_padre,
      livello,
      ordine,
      pdce_fam_tree_id,
      pdce_ct_tipo_id,
      ambito_id,
      validita_inizio,
      ente_proprietario_id,
      login_operazione,
      login_creazione
    )
    select
      bko.pdce_conto_code,
      bko.pdce_conto_desc,
      contoPadre.pdce_conto_id,
      bko.livello,
      bko.pdce_conto_code,
      tree.pdce_fam_tree_id,
      tipo.pdce_ct_tipo_id,
      ambito.ambito_id,
      dateInizVal,
      tipo.ente_proprietario_id,
      bko.login_operazione||'-'||loginOperazione||'@'||bko.carica_pdce_conto_id::varchar,
      bko.login_operazione||'-'||loginOperazione
    from siac_t_ente_proprietario ente,
         siac_bko_t_caricamento_pdce_conto bko,
         siac_t_pdce_fam_tree tree,siac_d_pdce_fam fam,
         siac_d_ambito ambito,
         siac_d_pdce_conto_tipo tipo,
         siac_t_pdce_conto contoPadre
    where ente.ente_proprietario_id=enteProprietarioId
    and   ambito.ente_proprietario_id=ente.ente_proprietario_id
    and   bko.ente_proprietario_id=ambito.ente_proprietario_id
    and   bko.ambito=ambito.ambito_code
    and   fam.ambito_id=ambito.ambito_id
    and   fam.pdce_fam_code=bko.classe_conto
    and   tree.pdce_fam_id=fam.pdce_fam_id
    and   tipo.pdce_ct_tipo_code=bko.tipo_conto
    and   tipo.ente_proprietario_id=ambito.ente_proprietario_id
    and   bko.tipo_operazione='I'
    and   bko.livello=8
    and   contoPadre.ente_proprietario_id=tipo.ente_proprietario_id
    and   contoPadre.pdce_fam_tree_id=tree.pdce_fam_tree_id
    and   contoPadre.livello=bko.livello-1
    and   contoPadre.ambito_id=ambito.ambito_id
    and   contoPadre.pdce_conto_code =
          SUBSTRING(bko.pdce_conto_code from 1 for length(bko.pdce_conto_code)- position('.' in reverse(bko.pdce_conto_code)))
    and   bko.caricato=false
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null
    and   not exists
    (
    select 1 from siac_t_pdce_conto conto
    where conto.ente_proprietario_id=enteProprietarioId
    and   conto.pdce_conto_code=bko.pdce_conto_code
    and   conto.ambito_id=ambito.ambito_id
    and   conto.livello=8
    and   conto.pdce_ct_tipo_id=tipo.pdce_ct_tipo_id
    and   conto.pdce_fam_tree_id=tree.pdce_fam_tree_id
    and   conto.data_cancellazione is null
    and   conto.validita_fine is null
    )
    and contoPadre.data_cancellazione is null
    and coalesce(contoPadre.validita_fine,date_trunc('DAY',(annoBilancio::varchar||'-12-31')::timestamp))
        >= date_trunc('DAY',(annoBilancio::varchar||'-12-31')::timestamp);
    GET DIAGNOSTICS codResult = ROW_COUNT;
   	raise notice 'Conti livello VIII inseriti=%',codResult;
   
    codResult:=null;
    strMessaggio:='Inserimento conti - attributi pdce_conto_foglia [siac_r_pdce_conto_attr].';

    -- siac_r_pdce_conto_attr
    -- pdce_conto_foglia
    insert into siac_r_pdce_conto_attr
    (
        pdce_conto_id,
        attr_id,
        boolean,
        validita_inizio,
        login_operazione,
        ente_proprietario_id
    )
    select conto.pdce_conto_id,
           attr.attr_id,
           'S',
           dateInizVal,
           bko.login_operazione||'-'||loginOperazione,
           attr.ente_proprietario_id
    from siac_t_ente_proprietario ente,
         siac_bko_t_caricamento_pdce_conto bko,siac_t_pdce_conto conto,siac_t_attr attr,
         siac_d_ambito ambito
    where ente.ente_proprietario_id=enteProprietarioId
    and   attr.ente_proprietario_id=ente.ente_proprietario_id
    and   attr.attr_code='pdce_conto_foglia'
    and   bko.ente_proprietario_id=attr.ente_proprietario_id
    and   bko.tipo_operazione='I'
    and   ambito.ente_proprietario_id=attr.ente_proprietario_id
    and   ambito.ambito_code=bko.ambito
    and   coalesce(bko.conto_foglia,'')='S'
--    and   conto.login_operazione like '%'||bko.login_operazione||'-'||loginOperazione||'@%'
    and   conto.login_operazione like '%'||loginOperazione||'@%'

    and   conto.pdce_conto_code=bko.pdce_conto_code
    and   conto.ambito_id=ambito.ambito_id
    and   bko.carica_pdce_conto_id=SUBSTRING(conto.login_operazione, POSITION('@' in conto.login_operazione)+1)::integer
    and   bko.caricato=false
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null;
	GET DIAGNOSTICS codResult = ROW_COUNT;
   	raise notice 'Attributi pdce_conto_foglia inseriti=%',codResult;

    codResult:=null;
    strMessaggio:='Inserimento conti - attributi pdce_conto_di_legge [siac_r_pdce_conto_attr].';

    -- pdce_conto_di_legge
    insert into siac_r_pdce_conto_attr
    (
        pdce_conto_id,
        attr_id,
        boolean,
        validita_inizio,
        login_operazione,
        ente_proprietario_id
    )
    select conto.pdce_conto_id,
           attr.attr_id,
           'S',
           dateInizVal,
           bko.login_operazione||'-'||loginOperazione,
           attr.ente_proprietario_id
    from siac_t_ente_proprietario ente,
         siac_bko_t_caricamento_pdce_conto bko,siac_t_pdce_conto conto,siac_t_attr attr,
         siac_d_ambito ambito
    where ente.ente_proprietario_id=enteProprietarioId
    and   attr.ente_proprietario_id=ente.ente_proprietario_id
    and   attr.attr_code='pdce_conto_di_legge'
    and   bko.ente_proprietario_id=attr.ente_proprietario_id
    and   bko.tipo_operazione='I'
    and   ambito.ente_proprietario_id=attr.ente_proprietario_id
    and   ambito.ambito_code=bko.ambito
    and   coalesce(bko.conto_di_legge,'')='S'
--    and   conto.login_operazione like bko.login_operazione||'-'||loginOperazione||'@%'
    and   conto.login_operazione like '%'||loginOperazione||'@%'
    and   conto.ambito_id=ambito.ambito_id
    and   conto.pdce_conto_code=bko.pdce_conto_code
    and   bko.carica_pdce_conto_id=SUBSTRING(conto.login_operazione, POSITION('@' in conto.login_operazione)+1)::integer
    and   bko.caricato=false
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null;
	GET DIAGNOSTICS codResult = ROW_COUNT;
   	raise notice 'Attributi pdce_conto_di_legge inseriti=%',codResult;

    codResult:=null;
    strMessaggio:='Inserimento conti - attributi pdce_ammortamento [siac_r_pdce_conto_attr].';

    -- pdce_ammortamento
    insert into siac_r_pdce_conto_attr
    (
        pdce_conto_id,
        attr_id,
        boolean,
        validita_inizio,
        login_operazione,
        ente_proprietario_id
    )
    select conto.pdce_conto_id,
           attr.attr_id,
           'S',
           dateInizVal,
           bko.login_operazione||'-'||loginOperazione,
           attr.ente_proprietario_id
    from siac_t_ente_proprietario ente,
         siac_bko_t_caricamento_pdce_conto bko,siac_t_pdce_conto conto,siac_t_attr attr,
         siac_d_ambito ambito
    where ente.ente_proprietario_id=enteProprietarioId
    and   attr.ente_proprietario_id=ente.ente_proprietario_id
    and   attr.attr_code='pdce_ammortamento'
    and   bko.ente_proprietario_id=attr.ente_proprietario_id
    and   bko.tipo_operazione='I'
    and   ambito.ente_proprietario_id=attr.ente_proprietario_id
    and   ambito.ambito_code=bko.ambito
    and   coalesce(bko.ammortamento,'')='S'
--    and   conto.login_operazione like bko.login_operazione||'-'||loginOperazione||'@%'
    and   conto.login_operazione like '%'||loginOperazione||'@%'
    and   conto.ambito_id=ambito.ambito_id
    and   conto.pdce_conto_code=bko.pdce_conto_code

    and   bko.carica_pdce_conto_id=SUBSTRING(conto.login_operazione, POSITION('@' in conto.login_operazione)+1)::integer
    and   bko.caricato=false
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null;
    GET DIAGNOSTICS codResult = ROW_COUNT;
   	raise notice 'Attributi pdce_ammortamento inseriti=%',codResult;

    codResult:=null;
    strMessaggio:='Inserimento conti - attributi pdce_conto_attivo [siac_r_pdce_conto_attr].';
    -- pdce_conto_attivo
    insert into siac_r_pdce_conto_attr
    (
        pdce_conto_id,
        attr_id,
        boolean,
        validita_inizio,
        login_operazione,
        ente_proprietario_id
    )
    select conto.pdce_conto_id,
           attr.attr_id,
           'S',
           dateInizVal,
           bko.login_operazione||'-'||loginOperazione,
           attr.ente_proprietario_id
    from siac_t_ente_proprietario ente,
         siac_bko_t_caricamento_pdce_conto bko,siac_t_pdce_conto conto,siac_t_attr attr,
         siac_d_ambito ambito
    where ente.ente_proprietario_id=enteProprietarioId
    and   attr.ente_proprietario_id=ente.ente_proprietario_id
    and   attr.attr_code='pdce_conto_attivo'
    and   bko.ente_proprietario_id=attr.ente_proprietario_id
    and   bko.tipo_operazione='I'
    and   ambito.ente_proprietario_id=attr.ente_proprietario_id
    and   ambito.ambito_code=bko.ambito
    and   coalesce(bko.conto_attivo,'')='S'
--    and   conto.login_operazione like bko.login_operazione||'-'||loginOperazione||'@%'
    and   conto.login_operazione like '%'||loginOperazione||'@%'
    and   conto.ambito_id=ambito.ambito_id
    and   conto.pdce_conto_code=bko.pdce_conto_code

    and   bko.carica_pdce_conto_id=SUBSTRING(conto.login_operazione, POSITION('@' in conto.login_operazione)+1)::integer
    and   bko.caricato=false
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null;
	GET DIAGNOSTICS codResult = ROW_COUNT;
   	raise notice 'Attributi pdce_conto_attivo inseriti=%',codResult;

    codResult:=null;
    strMessaggio:='Inserimento conti - attributi pdce_conto_segno_negativo [siac_r_pdce_conto_attr].';
    -- pdce_conto_segno_negativo
    insert into siac_r_pdce_conto_attr
    (
        pdce_conto_id,
        attr_id,
        boolean,
        validita_inizio,
        login_operazione,
        ente_proprietario_id
    )
    select conto.pdce_conto_id,
           attr.attr_id,
           'S',
           dateInizVal,
           bko.login_operazione||'-'||loginOperazione,
           attr.ente_proprietario_id
    from siac_t_ente_proprietario ente,
         siac_bko_t_caricamento_pdce_conto bko,siac_t_pdce_conto conto,siac_t_attr attr,
         siac_d_ambito ambito
    where ente.ente_proprietario_id=enteProprietarioId
    and   attr.ente_proprietario_id=ente.ente_proprietario_id
    and   attr.attr_code='pdce_conto_segno_negativo'
    and   bko.ente_proprietario_id=attr.ente_proprietario_id
    and   bko.tipo_operazione='I'
    and   ambito.ente_proprietario_id=attr.ente_proprietario_id
    and   ambito.ambito_code=bko.ambito
    and   coalesce(bko.conto_segno_negativo,'')='S'
--    and   conto.login_operazione like bko.login_operazione||'-'||loginOperazione||'@%'
    and   conto.login_operazione like '%'||loginOperazione||'@%'
    and   conto.ambito_id=ambito.ambito_id
    and   conto.pdce_conto_code=bko.pdce_conto_code

    and   bko.carica_pdce_conto_id=SUBSTRING(conto.login_operazione, POSITION('@' in conto.login_operazione)+1)::integer
    and   bko.caricato=false
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null;
	GET DIAGNOSTICS codResult = ROW_COUNT;
   	raise notice 'Attributi pdce_conto_segno_negativo inseriti=%',codResult;

    codResult:=null;
    strMessaggio:='Inserimento conti - codifica_bil [siac_r_pdce_conto_class].';
    -- siac_r_pdce_conto_class
    insert into siac_r_pdce_conto_class
    (
        pdce_conto_id,
        classif_id,
        validita_inizio,
        login_operazione,
        ente_proprietario_id
    )
    select conto.pdce_conto_id,
           dwh.classif_id,
           dateInizVal,
           bko.login_operazione||'-'||loginOperazione,
           conto.ente_proprietario_id
    from siac_t_ente_proprietario ente,
         siac_v_dwh_codifiche_econpatr dwh, siac_bko_t_caricamento_pdce_conto bko,
         siac_t_pdce_conto conto, siac_d_ambito ambito
    where ente.ente_proprietario_id=enteProprietarioId
    and   ambito.ente_proprietario_id=ente.ente_proprietario_id
    and   bko.ente_proprietario_id=ambito.ente_proprietario_id
    and   bko.tipo_operazione='I'
    and   ambito.ambito_code=bko.ambito
---    and   conto.login_operazione like bko.login_operazione||'-'||loginOperazione||'@%'
    and   conto.login_operazione like '%'||loginOperazione||'@%'
    and   conto.ambito_id=ambito.ambito_id
    and   conto.pdce_conto_code=bko.pdce_conto_code

    and   bko.carica_pdce_conto_id=SUBSTRING(conto.login_operazione, POSITION('@' in conto.login_operazione)+1)::integer
    and   coalesce(bko.codifica_bil,'')!=''
    and   dwh.ente_proprietario_id=conto.ente_proprietario_id
    and   dwh.codice_codifica_albero=bko.codifica_bil
    and   bko.caricato=false
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null;

	GET DIAGNOSTICS codResult = ROW_COUNT;
   	raise notice 'Codifiche di bilancio  pdce_conto NUOVI inserite=%',codResult;


    codResult:=null;
    strMessaggio:='Aggiornamento  conti esistenti - descrizione  [siac_t_pdce_conto].';
    update  siac_t_pdce_conto conto
	set     pdce_conto_desc=bko.pdce_conto_desc,
    	    data_modifica=clock_timestamp(),
        	login_operazione=conto.login_operazione||'-'||bko.login_operazione||'-'||loginOperazione
	from siac_t_ente_proprietario ente,
    	 siac_bko_t_caricamento_pdce_conto bko, siac_d_ambito ambito
	where ente.ente_proprietario_id=enteProprietarioId
    and   ambito.ente_proprietario_id=ente.ente_proprietario_id
    and   conto.ambito_id=ambito.ambito_id
    and   bko.ente_proprietario_id=ente.ente_proprietario_id
    and   bko.ambito=ambito.ambito_code
    and   bko.tipo_operazione='A'
    and   bko.pdce_conto_code=conto.pdce_conto_code
    and   bko.caricato=false
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null;

	codResult:=null;
    strMessaggio:='Aggiornamento  conti esistenti - codif_bil - chiusura  [siac_r_pdce_conto_class].';
    update siac_r_pdce_conto_class rc
    set     --data_cancellazione=clock_timestamp(), SIAC-8338 Sofia 21.09.2021
            --validita_fine=clock_timestamp(),
            validita_fine=bko.validita_fine_new::timestamp, -- SIAC-8338 Sofia 21.09.2021
            login_operazione=rc.login_operazione||'-'||bko.login_operazione||'-'||loginOperazione
    from siac_t_ente_proprietario ente,siac_d_class_tipo tipo,siac_t_class c,
         siac_bko_t_caricamento_pdce_conto bko, siac_d_ambito ambito , siac_t_pdce_conto conto,
         siac_v_dwh_codifiche_econpatr dwh
    where ente.ente_proprietario_id=enteProprietarioId
    and   tipo.ente_proprietario_id=ente.ente_proprietario_id
    and   tipo.classif_tipo_code in
    (
    'SPA_CODBIL',
    'SPP_CODBIL',
    'CE_CODBIL',
    'CO_CODBIL'
    )
    and   c.classif_tipo_id=tipo.classif_tipo_id
    and   ambito.ente_proprietario_id=ente.ente_proprietario_id
    and   conto.ambito_id=ambito.ambito_id
    and   bko.ente_proprietario_id=ente.ente_proprietario_id
    and   bko.ambito=ambito.ambito_code
 --   and   bko.tipo_operazione='A'
    and   bko.tipo_operazione='R' -- SIAC-8338 Sofia 21.09.2021
    and   bko.pdce_conto_code=conto.pdce_conto_code
    and   coalesce(bko.codifica_bil,'')!=''
    and   dwh.ente_proprietario_id=ente.ente_proprietario_id
    and   dwh.codice_codifica_albero=bko.codifica_bil
    and   rc.classif_id=c.classif_id
    and   rc.pdce_conto_id=conto.pdce_conto_id
    and   bko.caricato=false
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null
    and   rc.data_cancellazione is null
    -- SIAC-8338 Sofia 21.09.2021
    and   coalesce(rc.validita_inizio)<=bko.validita_fine_new::timestamp-interval '1 days'
    and    coalesce(rc.validita_fine,bko.validita_fine_new::timestamp-interval '1 days')<bko.validita_fine_new::timestamp;
--    and   rc.validita_fine is null; SIAC-8338 Sofia 21.09.2021

    codResult:=null;
    strMessaggio:='Aggiornamento  conti esistenti - codif_bil - inserimento  [siac_r_pdce_conto_class].';
    insert into siac_r_pdce_conto_class
    (
        pdce_conto_id,
        classif_id,
        validita_inizio,
        login_operazione,
        ente_proprietario_id
    )
    select conto.pdce_conto_id,
           dwh.classif_id,
           --dateInizVal,
		   bko.validita_inizio_new, -- SIAC-8338
           bko.login_operazione||'-'||loginOperazione,
           conto.ente_proprietario_id
    from siac_t_ente_proprietario ente,
         siac_bko_t_caricamento_pdce_conto bko, siac_d_ambito ambito , siac_t_pdce_conto conto,
         siac_v_dwh_codifiche_econpatr dwh,
         siac_t_class c,siac_d_class_tipo tipo  -- SIAC-8338 Sofia 21.09.2021
    where ente.ente_proprietario_id=enteProprietarioId
    and   ambito.ente_proprietario_id=ente.ente_proprietario_id
    and   conto.ambito_id=ambito.ambito_id
    and   bko.ente_proprietario_id=ente.ente_proprietario_id
    and   bko.ambito=ambito.ambito_code
--    and   bko.tipo_operazione='A'
    and   bko.tipo_operazione='R' -- SIAC-8338 Sofia 21.09.2021
    and   bko.pdce_conto_code=conto.pdce_conto_code
    and   coalesce(bko.codifica_bil,'')!=''
    and   dwh.ente_proprietario_id=ente.ente_proprietario_id
    and   dwh.codice_codifica_albero=bko.codifica_bil
     -- SIAC-8338 Sofia 21.09.2021
    and   c.classif_id=dwh.classif_id
    and   tipo.classif_tipo_id=c.classif_tipo_id
    and   tipo.classif_tipo_code=bko.tipo_codifica_bil
     -- SIAC-8338 Sofia 21.09.2021
    and   bko.caricato=false
    and   bko.data_cancellazione is null
    and   bko.validita_fine is null;
    GET DIAGNOSTICS codResult = ROW_COUNT;
   	raise notice 'Codifiche di bilancio  pdce_conto inserite=%',codResult;

    messaggioRisultato:=strMessaggioFinale||' Elaborazione terminata.';

    raise notice '%',messaggioRisultato;

    return;

exception
    when RAISE_EXCEPTION THEN
        messaggioRisultato:=
        	coalesce(strMessaggioFinale,'')||coalesce(strMessaggio,'')||'ERRORE:  '||' '||coalesce(substring(upper(SQLERRM) from 1 for 500),'') ;
       	codiceRisultato:=-1;

		messaggioRisultato:=upper(messaggioRisultato);

        return;
     when NO_DATA_FOUND THEN
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||' Nessun dato presente in archivio.';
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);

        return;
     when TOO_MANY_ROWS THEN
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||' Diverse righe presenti in archivio.';
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);

        return;
	when others  THEN
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||'ERRORE DB:'||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 500) ;
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);
        return;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

alter function
siac.fnc_siac_bko_caricamento_causali
(
  integer,
  integer,
  varchar,
  varchar,
  timestamp,
  out integer,
  out varchar
) OWNER to siac;

alter function
siac.fnc_siac_bko_caricamento_pdce_conto
(
  integer,
  integer,
  varchar,
  varchar,
  timestamp,
  out integer,
  out varchar
) OWNER to siac;
--- 08.11.2021 Sofia Jira SIAC-8196 - fine  

-- SIAC-8383 - 11.11.2021 Sofia - inizio
drop function if exists siac.fnc_fasi_bil_prev_apertura_struttura ( annobilancio      INTEGER,
                                                                 euelemtipo         VARCHAR,
                                                                 bilelemprevtipo    VARCHAR,
                                                                 bilelemgesttipo    VARCHAR,
                                                                 checkprev          BOOLEAN, -- TRUE: il dato di previsione esistente viene aggiornato al dato di gestione, FALSE il dato di previsione esistente non viene aggiornato.
                                                                 enteproprietarioid INTEGER,
                                                                 loginoperazione    VARCHAR,
                                                                 dataelaborazione TIMESTAMP,
                                                                 OUT fasebilelabidret   INTEGER,
                                                                 OUT codicerisultato    INTEGER,
                                                                 OUT messaggiorisultato VARCHAR);

drop function if exists siac.fnc_fasi_bil_provv_apertura_struttura ( annobilancio      INTEGER,
                                                                  euelemtipo         VARCHAR,
                                                                  bilelemgesttipo    VARCHAR,
                                                                  checkgest          BOOLEAN,
                                                                  enteproprietarioid INTEGER,
                                                                  loginoperazione    VARCHAR,
                                                                  dataelaborazione TIMESTAMP,
                                                                  OUT fasebilelabidret   INTEGER,
                                                                  OUT codicerisultato    INTEGER,
                                                                  OUT messaggiorisultato VARCHAR );


drop function if exists siac.fnc_fasi_bil_prev_approva_struttura (
  annobilancio integer,
  fasebilancio varchar,
  euelemtipo varchar,
  bilelemprevtipo varchar,
  bilelemgesttipo varchar,
  checkgest boolean,
  enteproprietarioid integer,
  loginoperazione varchar,
  dataelaborazione timestamp,
  out fasebilelabidret integer,
  out codicerisultato integer,
  out messaggiorisultato varchar
);


CREATE OR replace FUNCTION siac.fnc_fasi_bil_prev_apertura_struttura ( annobilancio      INTEGER,
                                                                 euelemtipo         VARCHAR,
                                                                 bilelemprevtipo    VARCHAR,
                                                                 bilelemgesttipo    VARCHAR,
                                                                 checkprev          BOOLEAN, -- TRUE: il dato di previsione esistente viene aggiornato al dato di gestione, FALSE il dato di previsione esistente non viene aggiornato.
                                                                 enteproprietarioid INTEGER,
                                                                 loginoperazione    VARCHAR,
                                                                 dataelaborazione TIMESTAMP,
                                                                 OUT fasebilelabidret   INTEGER,
                                                                 OUT codicerisultato    INTEGER,
                                                                 OUT messaggiorisultato VARCHAR) returns RECORD
AS
  $body$
  DECLARE
    strmessaggio       VARCHAR(1500):='';
    strmessaggiofinale VARCHAR(1500):='';
    -- Attributo solo di previsione
    --  inserito con default N se la previsione non esiste
    --  non variato in caso di aggiornamento se la previsione esiste
    flag_per_mem CONSTANT VARCHAR := 'FlagPerMemoria';
    -- tipo periodo annuale
    sy_per_tipo CONSTANT VARCHAR:='SY';
    -- tipo anno ordinario annuale
    bil_ord_tipo    CONSTANT VARCHAR:='BIL_ORD';
    previsione_fase CONSTANT VARCHAR:='P';
    elembil RECORD;
    -- CLASSIFICATORI
    cl_macroaggregato         CONSTANT VARCHAR :='MACROAGGREGATO';
    cl_programma              CONSTANT VARCHAR :='PROGRAMMA';
    cl_categoria              CONSTANT VARCHAR :='CATEGORIA';
    cl_cdc                    CONSTANT VARCHAR :='CDC';
    cl_cdr                    CONSTANT VARCHAR :='CDR';
    cl_ricorrente_spesa       CONSTANT VARCHAR:='RICORRENTE_SPESA';
    cl_ricorrente_entrata     CONSTANT VARCHAR:='RICORRENTE_ENTRATA';
    cl_transazione_ue_spesa   CONSTANT VARCHAR:='TRANSAZIONE_UE_SPESA';
    cl_transazione_ue_entrata CONSTANT VARCHAR:='TRANSAZIONE_UE_ENTRATA';
    cl_pdc_fin_quarto         CONSTANT VARCHAR :='PDC_IV';
    cl_pdc_fin_quinto         CONSTANT VARCHAR :='PDC_V';
    cl_cofog                  CONSTANT VARCHAR :='GRUPPO_COFOG';
    cl_siope_spesa_terzo      CONSTANT VARCHAR:='SIOPE_SPESA_I';
    cl_siope_entrata_terzo    CONSTANT VARCHAR:='SIOPE_ENTRATA_I';
    tipo_elab_p               CONSTANT VARCHAR :='P'; -- previsione
    tipo_elab_g               CONSTANT VARCHAR :='G'; -- gestione
    tipo_elem_eu              CONSTANT VARCHAR:='U';
    ape_prev_da_gest          CONSTANT VARCHAR:='APE_PREV';
    -- 04.11.2016 Sofia JIRA-SIAC-4161
    bilelemstatoan         CONSTANT VARCHAR:='AN';
    macroaggrtipoid        INTEGER:=NULL;
    programmatipoid        INTEGER:=NULL;
    categoriatipoid        INTEGER:=NULL;
    cdctipoid              INTEGER:=NULL;
    cdrtipoid              INTEGER:=NULL;
    ricorrentespesaid      INTEGER:=NULL;
    transazioneuespesaid   INTEGER:=NULL;
    ricorrenteentrataid    INTEGER:=NULL;
    transazioneueentrataid INTEGER:=NULL;
    pdcfinivid             INTEGER:=NULL;
    pdcfinvid              INTEGER:=NULL;
    cofogtipoid            INTEGER:=NULL;
    siopespesatipoid       INTEGER:=NULL;
    siopeentratatipoid     INTEGER:=NULL;
    bilelemgesttipoid      INTEGER:=NULL;
    bilelemprevtipoid      INTEGER:=NULL;
    bilelemidret           INTEGER:=NULL;
    bilancioid             INTEGER:=NULL;
    periodoid              INTEGER:=NULL;
    flagpermemattrid       INTEGER:=NULL;
    bilancioprecid         INTEGER:=NULL;
    periodoprecid          INTEGER:=NULL;
    codresult              INTEGER:=NULL;
    datainizioval timestamp:=NULL;
    fasebilelabid    INTEGER:=NULL;
    categoria_std    CONSTANT VARCHAR := 'STD';
    categoriacapcode VARCHAR :=NULL;
    -- 04.11.2016 Sofia JIRA-SIAC-4161
    bilelemstatoanid INTEGER:=NULL;
    -- Sofia JIRA-SIAC-4167 15.11.2016
    datainiziovalclass timestamp:=NULL;
    datafinevalclass timestamp:=NULL;
    v_dataprimogiornoanno timestamp:=NULL;
    _row_count INTEGER;
  BEGIN
    messaggiorisultato:='';
    codicerisultato:=0;
    fasebilelabidret:=0;
    datainizioval:= clock_timestamp();
    -- Sofia JIRA-SIAC-4167 15.11.2016
    datainiziovalclass:= clock_timestamp();
    datafinevalclass:= (annobilancio
    ||'-01-01')::timestamp;
    v_dataprimogiornoanno:= (annobilancio
    ||'-01-01')::timestamp;
    strmessaggiofinale:='Apertura bilancio di previsione.Creazione struttura Previsione '
    ||bilelemprevtipo
    ||' da Gestione precedente '
    ||bilelemgesttipo
    || '.Anno bilancio='
    ||annobilancio::VARCHAR
    ||'.';
    -- inserimento fase_bil_t_elaborazione
    strmessaggio:='Inserimento fase elaborazione [fase_bil_t_elaborazione].';
    INSERT INTO fase_bil_t_elaborazione
                (
                            fase_bil_elab_esito,
                            fase_bil_elab_esito_msg,
                            fase_bil_elab_tipo_id,
                            ente_proprietario_id,
                            validita_inizio,
                            login_operazione
                )
                (
                       SELECT 'IN',
                              'ELABORAZIONE FASE BILANCIO '
                                     ||ape_prev_da_gest
                                     ||' IN CORSO : CREAZIONE STRUTTURE.',
                              tipo.fase_bil_elab_tipo_id,
                              enteproprietarioid,
                              datainizioval,
                              loginoperazione
                       FROM   fase_bil_d_elaborazione_tipo tipo
                       WHERE  tipo.ente_proprietario_id=enteproprietarioid
                       AND    tipo.fase_bil_elab_tipo_code=ape_prev_da_gest
                       AND    tipo.data_cancellazione IS NULL
                       AND    tipo.validita_fine IS NULL)
    returning   fase_bil_elab_id
    INTO        fasebilelabid;

    IF fasebilelabid IS NULL THEN
      RAISE
    EXCEPTION
      ' Inserimento non effettuato.';
    END IF;
    codresult:=NULL;
    INSERT INTO fase_bil_t_elaborazione_log
                (
                            fase_bil_elab_id,
                            fase_bil_elab_log_operazione,
                            validita_inizio,
                            login_operazione,
                            ente_proprietario_id
                )
                VALUES
                (
                            fasebilelabid,
                            strmessaggio,
                            clock_timestamp(),
                            loginoperazione,
                            enteproprietarioid
                )
    returning   fase_bil_elab_log_id
    INTO        codresult;

    IF codresult IS NULL THEN
      RAISE
    EXCEPTION
      ' Errore in inserimento LOG.';
    END IF;
    strmessaggio:='Lettura bilElemPrevTipo  per tipo='
    ||bilelemprevtipo
    ||'.';
    SELECT tipo.elem_tipo_id
    INTO   strict bilelemprevtipoid
    FROM   siac_d_bil_elem_tipo tipo
    WHERE  tipo.elem_tipo_code=bilelemprevtipo
    AND    tipo.ente_proprietario_id=enteproprietarioid
    AND    tipo.data_cancellazione IS NULL
    AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
    AND    (
                  date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
           OR     tipo.validita_fine IS NULL);

    strmessaggio:='Lettura bilElemGestTipo  per tipo='
    ||bilelemgesttipo
    ||'.';
    SELECT tipo.elem_tipo_id
    INTO   strict bilelemgesttipoid
    FROM   siac_d_bil_elem_tipo tipo
    WHERE  tipo.elem_tipo_code=bilelemgesttipo
    AND    tipo.ente_proprietario_id=enteproprietarioid
    AND    tipo.data_cancellazione IS NULL
    AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
    AND    (
                  date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
           OR     tipo.validita_fine IS NULL);

    strmessaggio:='Lettura bilElemStatoAN  per tipo='
    ||bilelemstatoan
    ||'.';
    SELECT tipo.elem_stato_id
    INTO   strict bilelemstatoanid
    FROM   siac_d_bil_elem_stato tipo
    WHERE  tipo.elem_stato_code=bilelemstatoan
    AND    tipo.ente_proprietario_id=enteproprietarioid
    AND    tipo.data_cancellazione IS NULL
    AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
    AND    (
                  date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
           OR     tipo.validita_fine IS NULL);

    -- lettura classificatori Tipo Id
    strmessaggio:='Lettura flagPerMemAttrId  per attr='
    ||flag_per_mem
    ||'.';
    SELECT attr.attr_id
    INTO   strict flagpermemattrid
    FROM   siac_t_attr attr
    WHERE  attr.ente_proprietario_id=enteproprietarioid
    AND    attr.attr_code=flag_per_mem
    AND    attr.data_cancellazione IS NULL
    AND    date_trunc('day',dataelaborazione)>=date_trunc('day',attr.validita_inizio)
    AND    (
                  date_trunc('day',dataelaborazione)<=date_trunc('day',attr.validita_fine)
           OR     attr.validita_fine IS NULL);

    strmessaggio:='Lettura cdcTipoId  per classif='
    ||cl_cdc
    ||'.';
    SELECT tipo.classif_tipo_id
    INTO   strict cdctipoid
    FROM   siac_d_class_tipo tipo
    WHERE  tipo.ente_proprietario_id=enteproprietarioid
    AND    tipo.classif_tipo_code=cl_cdc
    AND    tipo.data_cancellazione IS NULL
    AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
    AND    (
                  date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
           OR     tipo.validita_fine IS NULL);

    strmessaggio:='Lettura cdcTipoId  per classif='
    ||cl_cdr
    ||'.';
    SELECT tipo.classif_tipo_id
    INTO   strict cdrtipoid
    FROM   siac_d_class_tipo tipo
    WHERE  tipo.ente_proprietario_id=enteproprietarioid
    AND    tipo.classif_tipo_code=cl_cdr
    AND    tipo.data_cancellazione IS NULL
    AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
    AND    (
                  date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
           OR     tipo.validita_fine IS NULL);

    strmessaggio:='Lettura pdcFinIVId  per classif='
    ||cl_pdc_fin_quarto
    ||'.';
    SELECT tipo.classif_tipo_id
    INTO   strict pdcfinivid
    FROM   siac_d_class_tipo tipo
    WHERE  tipo.ente_proprietario_id=enteproprietarioid
    AND    tipo.classif_tipo_code=cl_pdc_fin_quarto
    AND    tipo.data_cancellazione IS NULL
    AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
    AND    (
                  date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
           OR     tipo.validita_fine IS NULL);

    strmessaggio:='Lettura pdcFinVId  per classif='
    ||cl_pdc_fin_quinto
    ||'.';
    SELECT tipo.classif_tipo_id
    INTO   strict pdcfinvid
    FROM   siac_d_class_tipo tipo
    WHERE  tipo.ente_proprietario_id=enteproprietarioid
    AND    tipo.classif_tipo_code=cl_pdc_fin_quinto
    AND    tipo.data_cancellazione IS NULL
    AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
    AND    (
                  date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
           OR     tipo.validita_fine IS NULL);

    IF euelemtipo=tipo_elem_eu THEN
      strmessaggio:='Lettura macroAggrTipoId  per classif='
      ||cl_macroaggregato
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict macroaggrtipoid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_macroaggregato
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

      strmessaggio:='Lettura programmaTipoId  per classif='
      ||cl_programma
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict programmatipoid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_programma
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

      strmessaggio:='Lettura ricorrenteSpesaId  per classif='
      ||cl_ricorrente_spesa
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict ricorrentespesaid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_ricorrente_spesa
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

      strmessaggio:='Lettura transazioneUeSpesaId  per classif='
      ||cl_transazione_ue_spesa
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict transazioneuespesaid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_transazione_ue_spesa
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

      strmessaggio:='Lettura cofogTipoId  per classif='
      ||cl_cofog
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict cofogtipoid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_cofog
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

      strmessaggio:='Lettura siopeSpesaTipoId  per classif='
      ||cl_siope_spesa_terzo
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict siopespesatipoid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_siope_spesa_terzo
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

    ELSE
      strmessaggio:='Lettura categoriaTipoId  per classif='
      ||cl_categoria
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict categoriatipoid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_categoria
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

      strmessaggio:='Lettura ricorrenteEntrataId  per classif='
      ||cl_ricorrente_entrata
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict ricorrenteentrataid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_ricorrente_entrata
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

      strmessaggio:='Lettura transazioneUeEntrataId  per classif='
      ||cl_transazione_ue_entrata
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict transazioneueentrataid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_transazione_ue_entrata
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

      strmessaggio:='Lettura siopeEntrataTipoId  per classif='
      ||cl_siope_entrata_terzo
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict siopeentratatipoid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_siope_entrata_terzo
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

    END IF;
    -- fine lettura classificatori Tipo Id
    strmessaggio:='Inserimento LOG per lettura classificatori tipo.';
    codresult:=NULL;
    INSERT INTO fase_bil_t_elaborazione_log
                (
                            fase_bil_elab_id,
                            fase_bil_elab_log_operazione,
                            validita_inizio,
                            login_operazione,
                            ente_proprietario_id
                )
                VALUES
                (
                            fasebilelabid,
                            strmessaggio,
                            clock_timestamp(),
                            loginoperazione,
                            enteproprietarioid
                )
    returning   fase_bil_elab_log_id
    INTO        codresult;

    IF codresult IS NULL THEN
      RAISE
    EXCEPTION
      ' Errore in inserimento LOG.';
    END IF;

    strmessaggio:='Inserimento bilancio  per annoBilancio='||annobilancio::VARCHAR||'.';

    INSERT INTO siac_t_bil
                (
	                bil_code,
	                bil_desc,
	                bil_tipo_id,
	                periodo_id,
	                validita_inizio,
	                ente_proprietario_id,
	                login_operazione
                )
                (
	               SELECT 'BIL_'||annobilancio::VARCHAR,
	                      'Bilancio '||annobilancio::VARCHAR,
	                      btipo.bil_tipo_id,
	                      per.periodo_id,
	                      datainizioval,
	                      per.ente_proprietario_id,
	                      loginoperazione
	               FROM   siac_t_periodo per ,
	                      siac_d_periodo_tipo tipo,
	                      siac_d_bil_tipo btipo
	               WHERE  per.ente_proprietario_id=enteproprietarioid
	               AND    per.anno::INTEGER=annobilancio
	               AND    tipo.periodo_tipo_id=per.periodo_tipo_id
	               AND    tipo.periodo_tipo_code=sy_per_tipo
	               AND    btipo.ente_proprietario_id=per.ente_proprietario_id
	               AND    btipo.bil_tipo_code=bil_ord_tipo
	               AND    per.data_cancellazione IS NULL
	               AND    NOT EXISTS
	                      (  SELECT 1
	                         FROM   siac_t_bil bil
	                         WHERE  bil.ente_proprietario_id=per.ente_proprietario_id
	                         AND    bil.bil_tipo_id=btipo.bil_tipo_id
	                         AND    bil.periodo_id=per.periodo_id
	                         AND    bil.data_cancellazione IS NULL));

    strmessaggio:='Inserimento periodo  per annoBilancio+2='||(annobilancio+2)::VARCHAR ||'.';


    INSERT INTO siac_t_periodo
                (
                            periodo_code,
                            periodo_desc,
                            data_inizio,
                            data_fine,
                            validita_inizio,
                            periodo_tipo_id,
                            anno,
                            ente_proprietario_id,
                            login_operazione
                )
                (
                       SELECT 'anno'
                                     ||(annobilancio+2)::VARCHAR,
                              'anno'
                                     ||(annobilancio+2)::VARCHAR,
                              ((annobilancio+2)::VARCHAR
                                     ||'-01-01')::timestamp,
                              ((annobilancio+2)::VARCHAR
                                     ||'-12-31')::timestamp,
                              datainizioval,
                              tipo.periodo_tipo_id,
                              (annobilancio+2)::VARCHAR,
                              tipo.ente_proprietario_id,
                              loginoperazione
                       FROM   siac_d_periodo_tipo tipo
                       WHERE  tipo.ente_proprietario_id=enteproprietarioid
                       AND    tipo.periodo_tipo_code=sy_per_tipo
                       AND    NOT EXISTS
                              (
                                     SELECT 1
                                     FROM   siac_t_periodo per1
                                     WHERE  per1.periodo_tipo_id=tipo.periodo_tipo_id
                                     AND    per1.anno::INTEGER=annobilancio+2
                                     AND    per1.data_cancellazione IS NULL));

    codresult:=NULL;
    strmessaggio:='Inserimento annoBilancio='
    ||annobilancio::VARCHAR
    ||' periodo per annoCompetenza='
    ||(annobilancio+2)::VARCHAR
    ||'.';
    INSERT INTO fase_bil_t_elaborazione_log
                (
                            fase_bil_elab_id,
                            fase_bil_elab_log_operazione,
                            validita_inizio,
                            login_operazione,
                            ente_proprietario_id
                )
                VALUES
                (
                            fasebilelabid,
                            strmessaggio,
                            clock_timestamp(),
                            loginoperazione,
                            enteproprietarioid
                )
    returning   fase_bil_elab_log_id
    INTO        codresult;

    IF codresult IS NULL THEN
      RAISE
    EXCEPTION
      ' Errore in inserimento LOG.';
    END IF;
    strmessaggio:='Lettura bilancioId e periodoId  per annoBilancio='
    ||annobilancio::VARCHAR
    ||'.';
    SELECT bil.bil_id ,
           per.periodo_id
    INTO   strict bilancioid,
           periodoid
    FROM   siac_t_bil bil,
           siac_t_periodo per
    WHERE  bil.ente_proprietario_id=enteproprietarioid
    AND    per.periodo_id=bil.periodo_id
    AND    per.anno::INTEGER=annobilancio
    AND    bil.data_cancellazione IS NULL
    AND    per.data_cancellazione IS NULL;

    codresult:=NULL;
    INSERT INTO fase_bil_t_elaborazione_log
                (
                            fase_bil_elab_id,
                            fase_bil_elab_log_operazione,
                            validita_inizio,
                            login_operazione,
                            ente_proprietario_id
                )
                VALUES
                (
                            fasebilelabid,
                            strmessaggio,
                            clock_timestamp(),
                            loginoperazione,
                            enteproprietarioid
                )
    returning   fase_bil_elab_log_id
    INTO        codresult;

    IF codresult IS NULL THEN
      RAISE
    EXCEPTION
      ' Errore in inserimento LOG.';
    END IF;
    -- 06/07/2016 Sofia
    strmessaggio:='Cancellazione fase tipo diversa da '
    ||previsione_fase
    ||' per bilancio annoBilancio='
    ||annobilancio::VARCHAR
    ||'.';
    DELETE
    FROM   siac_r_bil_fase_operativa r
    WHERE  r.ente_proprietario_id=enteproprietarioid
    AND    r.data_cancellazione IS NULL
    AND    r.validita_fine IS NULL
    AND    r.bil_id=bilancioid
    AND    EXISTS
           (
                  SELECT 1
                  FROM   siac_d_fase_operativa d
                  WHERE  d.fase_operativa_id=r.fase_operativa_id
                  AND    d.fase_operativa_code!=previsione_fase);

    strmessaggio:='Inserimento fase tipo='
    ||previsione_fase
    ||' per bilancio annoBilancio='
    ||annobilancio::VARCHAR
    ||'.';
    INSERT INTO siac_r_bil_fase_operativa
                (
                            bil_id,
                            fase_operativa_id,
                            validita_inizio,
                            ente_proprietario_id,
                            login_operazione
                )
                (
                       SELECT bilancioid,
                              f.fase_operativa_id,
                              datainizioval,
                              f.ente_proprietario_id,
                              loginoperazione
                       FROM   siac_d_fase_operativa f
                       WHERE  f.ente_proprietario_id=enteproprietarioid
                       AND    f.fase_operativa_code=previsione_fase
                       AND    NOT EXISTS
                              (
                                     SELECT 1
                                     FROM   siac_r_bil_fase_operativa r
                                     WHERE  r.bil_id=bilancioid
                                     AND    r.data_cancellazione IS NULL));

    codresult:=NULL;
    INSERT INTO fase_bil_t_elaborazione_log
                (
                            fase_bil_elab_id,
                            fase_bil_elab_log_operazione,
                            validita_inizio,
                            login_operazione,
                            ente_proprietario_id
                )
                VALUES
                (
                            fasebilelabid,
                            strmessaggio,
                            clock_timestamp(),
                            loginoperazione,
                            enteproprietarioid
                )
    returning   fase_bil_elab_log_id
    INTO        codresult;

    IF codresult IS NULL THEN
      RAISE
    EXCEPTION
      ' Errore in inserimento LOG.';
    END IF;
    strmessaggio:='Lettura bilancioId e periodoId  per annoBilancio-1='
    ||(annobilancio-1)::VARCHAR
    ||'.';
    SELECT bil.bil_id ,
           per.periodo_id
    INTO   strict bilancioprecid,
           periodoprecid
    FROM   siac_t_bil bil,
           siac_t_periodo per
    WHERE  bil.ente_proprietario_id=enteproprietarioid
    AND    per.periodo_id=bil.periodo_id
    AND    per.anno::INTEGER=annobilancio-1
    AND    per.data_cancellazione IS NULL;

    codresult:=NULL;
    INSERT INTO fase_bil_t_elaborazione_log
                (
                            fase_bil_elab_id,
                            fase_bil_elab_log_operazione,
                            validita_inizio,
                            login_operazione,
                            ente_proprietario_id
                )
                VALUES
                (
                            fasebilelabid,
                            strmessaggio,
                            clock_timestamp(),
                            loginoperazione,
                            enteproprietarioid
                )
    returning   fase_bil_elab_log_id
    INTO        codresult;

    IF codresult IS NULL THEN
      RAISE
    EXCEPTION
      ' Errore in inserimento LOG.';
    END IF;
    -- popolamento tabella appoggio
    -- capitoli previsione nuovi non esistenti in gestione
    strmessaggio:='Popolamento fase_bil_t_prev_apertura_str_elem_prev_nuovo.Previsione nuova con gestione eq anno precedente.';
    INSERT INTO fase_bil_t_prev_apertura_str_elem_prev_nuovo
                (
                            elem_id,
                            elem_code,
                            elem_code2,
                            elem_code3,
                            bil_id,
                            fase_bil_elab_id,
                            ente_proprietario_id,
                            validita_inizio,
                            login_operazione
                )
                (
                         SELECT   gest.elem_id,
                                  gest.elem_code,
                                  gest.elem_code2,
                                  gest.elem_code3,
                                  bilancioid,
                                  fasebilelabid,
                                  gest.ente_proprietario_id,
                                  datainizioval,
                                  loginoperazione
                         FROM     siac_t_bil_elem gest
                         WHERE    gest.ente_proprietario_id=enteproprietarioid
                         AND      gest.elem_tipo_id=bilelemgesttipoid
                         AND      gest.bil_id=bilancioprecid
                         AND      gest.data_cancellazione IS NULL
                         AND      date_trunc('day',dataelaborazione)>=date_trunc('day',gest.validita_inizio)
                         AND      (
                                           date_trunc('day',dataelaborazione)<=date_trunc('day',gest.validita_fine)
                                  OR       gest.validita_fine IS NULL)
                         AND      EXISTS
                                  (
                                         SELECT 1
                                         FROM   siac_r_bil_elem_stato rstato -- 04.11.2016 Sofia JIRA-SIAC-4161
                                         WHERE  rstato.elem_id=gest.elem_id
                                         AND    rstato.elem_stato_id!=bilelemstatoanid
                                         AND    rstato.data_cancellazione IS NULL
                                         AND    rstato.validita_fine isnull )
                         AND      NOT EXISTS
                                  (
                                           SELECT   1
                                           FROM     siac_t_bil_elem prev
                                           WHERE    prev.ente_proprietario_id=gest.ente_proprietario_id
                                           AND      prev.bil_id=bilancioid
                                           AND      prev.elem_tipo_id=bilelemprevtipoid
                                           AND      prev.elem_code=gest.elem_code
                                           AND      prev.elem_code2=gest.elem_code2
                                           AND      prev.elem_code3=gest.elem_code3
                                           AND      EXISTS
                                                    (
                                                           SELECT 1
                                                           FROM   siac_r_bil_elem_stato rstato -- 15.11.2016 Sofia JIRA-SIAC-4161
                                                           WHERE  rstato.elem_id=prev.elem_id
                                                           AND    rstato.elem_stato_id!=bilelemstatoanid
                                                           AND    rstato.data_cancellazione IS NULL
                                                           AND    rstato.validita_fine isnull )
                                           AND      prev.data_cancellazione IS NULL
                                           AND      date_trunc('day',dataelaborazione)>=date_trunc('day',prev.validita_inizio)
                                           AND      (
                                                             date_trunc('day',dataelaborazione)<=date_trunc('day',prev.validita_fine)
                                                    OR       prev.validita_fine IS NULL)
                                           ORDER BY prev.elem_id limit 1 )
                         ORDER BY gest.elem_code:: INTEGER,
                                  gest.elem_code2::INTEGER,
                                  gest.elem_code3 );

    codresult:=NULL;
    INSERT INTO fase_bil_t_elaborazione_log
                (
                            fase_bil_elab_id,
                            fase_bil_elab_log_operazione,
                            validita_inizio,
                            login_operazione,
                            ente_proprietario_id
                )
                VALUES
                (
                            fasebilelabid,
                            strmessaggio,
                            clock_timestamp(),
                            loginoperazione,
                            enteproprietarioid
                )
    returning   fase_bil_elab_log_id
    INTO        codresult;

    IF codresult IS NULL THEN
      RAISE
    EXCEPTION
      ' Errore in inserimento LOG.';
    END IF;
    -- verifica apertura con previsione pre-esistente ( rielaborazione )
    IF checkprev=TRUE THEN
      -- capitoli privisione esistenti con gestione eq anno precendente esistente - da aggiornare
      strmessaggio:='Popolamento fase_bil_t_prev_apertura_str_elem_prev_esiste.Previsione esistente con gestione eq anno precedente.';
      INSERT INTO fase_bil_t_prev_apertura_str_elem_prev_esiste
                  (
                              elem_prev_id,
                              elem_gest_id,
                              elem_code,
                              elem_code2,
                              elem_code3,
                              bil_id,
                              fase_bil_elab_id,
                              ente_proprietario_id,
                              validita_inizio,
                              login_operazione
                  )
                  (
                           SELECT   prev.elem_id,
                                    gest.elem_id,
                                    prev.elem_code,
                                    prev.elem_code2,
                                    prev.elem_code3,
                                    prev.bil_id,
                                    fasebilelabid,
                                    enteproprietarioid,
                                    datainizioval,
                                    loginoperazione
                           FROM     siac_t_bil_elem prev,
                                    siac_t_bil_elem gest
                           WHERE    prev.ente_proprietario_id=enteproprietarioid
                           AND      prev.elem_tipo_id=bilelemprevtipoid
                           AND      prev.bil_id=bilancioid
                           AND      gest.ente_proprietario_id=prev.ente_proprietario_id
                           AND      gest.bil_id=bilancioprecid
                           AND      gest.elem_tipo_id=bilelemgesttipoid
                           AND      gest.elem_code=prev.elem_code
                           AND      gest.elem_code2=prev.elem_code2
                           AND      gest.elem_code3=prev.elem_code3
                           AND      EXISTS
                                    (
                                           SELECT 1
                                           FROM   siac_r_bil_elem_stato rstato -- 04.11.2016 Sofia JIRA-SIAC-4161
                                           WHERE  rstato.elem_id=gest.elem_id
                                           AND    rstato.elem_stato_id!=bilelemstatoanid
                                           AND    rstato.data_cancellazione IS NULL
                                           AND    rstato.validita_fine isnull )
                           AND      EXISTS
                                    (
                                           SELECT 1
                                           FROM   siac_r_bil_elem_stato rstato -- 04.11.2016 Sofia JIRA-SIAC-4161
                                           WHERE  rstato.elem_id=prev.elem_id
                                           AND    rstato.elem_stato_id!=bilelemstatoanid
                                           AND    rstato.data_cancellazione IS NULL
                                           AND    rstato.validita_fine isnull )
                           AND      prev.data_cancellazione IS NULL
                           AND      date_trunc('day',dataelaborazione)>=date_trunc('day',prev.validita_inizio)
                           AND      (
                                             date_trunc('day',dataelaborazione)<=date_trunc('day',prev.validita_fine)
                                    OR       prev.validita_fine IS NULL)
                           AND      gest.data_cancellazione IS NULL
                           AND      date_trunc('day',dataelaborazione)>=date_trunc('day',gest.validita_inizio)
                           AND      (
                                             date_trunc('day',dataelaborazione)<=date_trunc('day',gest.validita_fine)
                                    OR       gest.validita_fine IS NULL)
                           ORDER BY prev.elem_code:: INTEGER,
                                    prev.elem_code2::INTEGER,
                                    prev.elem_code3 );

      codresult:=NULL;
      INSERT INTO fase_bil_t_elaborazione_log
                  (
                              fase_bil_elab_id,
                              fase_bil_elab_log_operazione,
                              validita_inizio,
                              login_operazione,
                              ente_proprietario_id
                  )
                  VALUES
                  (
                              fasebilelabid,
                              strmessaggio,
                              clock_timestamp(),
                              loginoperazione,
                              enteproprietarioid
                  )
      returning   fase_bil_elab_log_id
      INTO        codresult;

      IF codresult IS NULL THEN
        RAISE
      EXCEPTION
        ' Errore in inserimento LOG.';
      END IF;
      -- capitoli previsione esistenti senza capitolo eq in gestione precedente - da invalidare, azzerare importi
      strmessaggio:='Popolamento fase_bil_t_prev_apertura_str_elem_prev_esiste.Previsione esistente senza gestione eq anno precedente.';
      INSERT INTO fase_bil_t_prev_apertura_str_elem_prev_esiste
                  (
                              elem_prev_id,
                              elem_gest_id,
                              elem_code,
                              elem_code2,
                              elem_code3,
                              bil_id,
                              fase_bil_elab_id,
                              ente_proprietario_id,
                              validita_inizio,
                              login_operazione
                  )
                  (
                           SELECT   prev.elem_id,
                                    NULL,
                                    prev.elem_code,
                                    prev.elem_code2,
                                    prev.elem_code3,
                                    prev.bil_id,
                                    fasebilelabid,
                                    enteproprietarioid,
                                    datainizioval,
                                    loginoperazione
                           FROM     siac_t_bil_elem prev
                           WHERE    prev.ente_proprietario_id=enteproprietarioid
                           AND      prev.elem_tipo_id=bilelemprevtipoid
                           AND      prev.bil_id=bilancioid
                           AND      EXISTS
                                    (
                                           SELECT 1
                                           FROM   siac_r_bil_elem_stato rstato -- 04.11.2016 Sofia JIRA-SIAC-4161
                                           WHERE  rstato.elem_id=prev.elem_id
                                           AND    rstato.elem_stato_id!=bilelemstatoanid
                                           AND    rstato.data_cancellazione IS NULL
                                           AND    rstato.validita_fine IS NULL )
                           AND      prev.data_cancellazione IS NULL
                           AND      date_trunc('day',dataelaborazione)>=date_trunc('day',prev.validita_inizio)
                           AND      (
                                             date_trunc('day',dataelaborazione)<=date_trunc('day',prev.validita_fine)
                                    OR       prev.validita_fine IS NULL)
                           AND      NOT EXISTS
                                    (
                                             SELECT   1
                                             FROM     siac_t_bil_elem gest
                                             WHERE    gest.ente_proprietario_id=prev.ente_proprietario_id
                                             AND      gest.bil_id=bilancioprecid
                                             AND      gest.elem_tipo_id=bilelemgesttipoid
                                             AND      gest.elem_code=prev.elem_code
                                             AND      gest.elem_code2=prev.elem_code2
                                             AND      gest.elem_code3=prev.elem_code3
                                             AND      gest.data_cancellazione IS NULL
                                             AND      date_trunc('day',dataelaborazione)>=date_trunc('day',gest.validita_inizio)
                                             AND      (
                                                               date_trunc('day',dataelaborazione)<=date_trunc('day',gest.validita_fine)
                                                      OR       gest.validita_fine IS NULL)
                                             AND      EXISTS
                                                      (
                                                             SELECT 1
                                                             FROM   siac_r_bil_elem_stato rstato -- 15.11.2016 Sofia JIRA-SIAC-4161
                                                             WHERE  rstato.elem_id=gest.elem_id
                                                             AND    rstato.elem_stato_id!=bilelemstatoanid
                                                             AND    rstato.data_cancellazione IS NULL
                                                             AND    rstato.validita_fine IS NULL )
                                             ORDER BY gest.elem_id limit 1)
                           ORDER BY prev.elem_code:: INTEGER,
                                    prev.elem_code2::INTEGER,
                                    prev.elem_code3 );

      codresult:=NULL;
      INSERT INTO fase_bil_t_elaborazione_log
                  (
                              fase_bil_elab_id,
                              fase_bil_elab_log_operazione,
                              validita_inizio,
                              login_operazione,
                              ente_proprietario_id
                  )
                  VALUES
                  (
                              fasebilelabid,
                              strmessaggio,
                              clock_timestamp(),
                              loginoperazione,
                              enteproprietarioid
                  )
      returning   fase_bil_elab_log_id
      INTO        codresult;

      IF codresult IS NULL THEN
        RAISE
      EXCEPTION
        ' Errore in inserimento LOG.';
      END IF;
    END IF;
    codresult:=NULL;
    strmessaggio:='Popolamento fase_bil_t_prev_apertura_str_elem_prev_nuovo.Verifica esistenza capitoli di previsione nuovi da creare da gestione eq precedente.';
    SELECT   1
    INTO     codresult
    FROM     fase_bil_t_prev_apertura_str_elem_prev_nuovo fase
    WHERE    fase.ente_proprietario_id=enteproprietarioid
    AND      fase.bil_id=bilancioid
    AND      fase.fase_bil_elab_id=fasebilelabid
    AND      fase.data_cancellazione IS NULL
    AND      fase.validita_fine IS NULL
    ORDER BY fase.fase_bil_prev_str_nuovo_id limit 1;

    IF codresult IS NOT NULL THEN
      -- inserimento nuove strutture
      -- capitoli previsione non esistenti da gestione eq anno precedente
      strmessaggio:='Inserimento nuove strutture per tipo='
      ||bilelemprevtipo
      ||'.';
      codresult:=NULL;
      INSERT INTO fase_bil_t_elaborazione_log
                  (
                              fase_bil_elab_id,
                              fase_bil_elab_log_operazione,
                              validita_inizio,
                              login_operazione,
                              ente_proprietario_id
                  )
                  VALUES
                  (
                              fasebilelabid,
                              strmessaggio,
                              clock_timestamp(),
                              loginoperazione,
                              enteproprietarioid
                  )
      returning   fase_bil_elab_log_id
      INTO        codresult;

      IF codresult IS NULL THEN
        RAISE
      EXCEPTION
        ' Errore in inserimento LOG.';
      END IF;
      FOR elembil IN
      (
               SELECT   elem_id,
                        elem_code,
                        elem_code2,
                        elem_code3
               FROM     fase_bil_t_prev_apertura_str_elem_prev_nuovo
               WHERE    ente_proprietario_id=enteproprietarioid
               AND      bil_id=bilancioid
               AND      fase_bil_elab_id=fasebilelabid
               AND      data_cancellazione IS NULL
               AND      validita_fine IS NULL
               ORDER BY elem_code:: INTEGER,
                        elem_code2::INTEGER,
                        elem_code3
      )
      LOOP
        bilelemidret:=NULL;
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemprevtipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_t_bil_elem.' ;
        -- siac_t_bil_elem
        INSERT INTO siac_t_bil_elem
                    (
                                elem_code,
                                elem_code2,
                                elem_code3,
                                elem_desc,
                                elem_desc2,
                                elem_tipo_id,
                                bil_id,
                                ordine,
                                livello,
                                validita_inizio ,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT gest.elem_code,
                                  gest.elem_code2,
                                  gest.elem_code3,
                                  gest.elem_desc,
                                  gest.elem_desc2,
                                  bilelemprevtipoid,
                                  bilancioid,
                                  gest.ordine,
                                  gest.livello,
                                  datainizioval,
                                  gest.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_t_bil_elem gest
                           WHERE  gest.elem_id=elembil.elem_id)
        returning   elem_id
        INTO        bilelemidret;

        IF bilelemidret IS NULL THEN
          RAISE
        EXCEPTION
          ' Inserimento non effettuato.';
        END IF;
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemprevtipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_r_bil_elem_stato.' ;
        -- siac_r_bil_elem_stato
        strmessaggio:='Inserimento siac_r_bil_elem_stato.';
        INSERT INTO siac_r_bil_elem_stato
                    (
                                elem_id,
                                elem_stato_id,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT bilelemidret,
                                  stato.elem_stato_id,
                                  datainizioval,
                                  stato.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_stato stato
                           WHERE  stato.elem_id=elembil.elem_id
                           AND    stato.data_cancellazione IS NULL
                           AND    date_trunc('day',dataelaborazione)>=date_trunc('day',stato.validita_inizio)
                           AND    (
                                         date_trunc('day',dataelaborazione)<=date_trunc('day',stato.validita_fine)
                                  OR     stato.validita_fine IS NULL) )
        returning   bil_elem_stato_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Inserimento non effettuato.';
        END IF;
        codresult:=NULL;
        -- siac_r_bil_elem_categoria
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemprevtipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_r_bil_elem_categoria.' ;
        INSERT INTO siac_r_bil_elem_categoria
                    (
                                elem_id,
                                elem_cat_id,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT bilelemidret,
                                  cat.elem_cat_id,
                                  datainizioval,
                                  cat.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_categoria cat
                           WHERE  cat.elem_id=elembil.elem_id
                           AND    cat.data_cancellazione IS NULL
                           AND    date_trunc('day',dataelaborazione)>=date_trunc('day',cat.validita_inizio)
                           AND    (
                                         date_trunc('day',dataelaborazione)<=date_trunc('day',cat.validita_fine)
                                  OR     cat.validita_fine IS NULL) )
        returning   bil_elem_r_cat_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Inserimento non effettuato.';
        END IF;
        -- salvataggio della categoria per successivi controlli su classificatori obbligatori
        SELECT d.elem_cat_code
        INTO   categoriacapcode
        FROM   siac_r_bil_elem_categoria r,
               siac_d_bil_elem_categoria d
        WHERE  d.elem_cat_id=r.elem_cat_id
        AND    r.bil_elem_r_cat_id=codresult;

        codresult:=NULL;
        -- siac_r_bil_elem_attr
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemprevtipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_r_bil_elem_attr.' ;
        INSERT INTO siac_r_bil_elem_attr
                    (
                                elem_id,
                                attr_id,
                                tabella_id,
                                BOOLEAN,
                                percentuale,
                                testo,
                                numerico,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT bilelemidret,
                                  attr.attr_id,
                                  attr.tabella_id,
                                  attr.BOOLEAN,
                                  attr.percentuale,
                                  attr.testo,
                                  attr.numerico,
                                  datainizioval,
                                  attr.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_attr attr
                           WHERE  attr.elem_id=elembil.elem_id
                           AND    attr.data_cancellazione IS NULL
                           AND    date_trunc('day',dataelaborazione)>=date_trunc('day',attr.validita_inizio)
                           AND    (
                                         date_trunc('day',dataelaborazione)<=date_trunc('day',attr.validita_fine)
                                  OR     attr.validita_fine IS NULL) );

        codresult:=NULL;
        -- siac_r_bil_elem_attr FLAG_PER_MEM - default N - attributo non presente in gestione
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemprevtipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_r_bil_elem_attr attributo'
        ||flag_per_mem
        ||'.' ;
        INSERT INTO siac_r_bil_elem_attr
                    (
                                elem_id,
                                attr_id,
                                BOOLEAN,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    VALUES
                    (
                                bilelemidret,
                                flagpermemattrid,
                                'N',
                                datainizioval,
                                enteproprietarioid,
                                loginoperazione
                    );

        SELECT   1
        INTO     codresult
        FROM     siac_r_bil_elem_attr
        WHERE    elem_id=bilelemidret
        AND      data_cancellazione IS NULL
        AND      validita_fine IS NULL
        ORDER BY elem_id limit 1;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Nessun attributo inserito.';
        END IF;
        /*   SIAC-5297   punto 1
codResult:=null;
-- siac_r_vincolo_bil_elem
strMessaggio:='Inserimento nuove strutture per tipo='||bilElemPrevTipo||
'.Elemento di bilancio '||elemBil.elem_code||' '
||elemBil.elem_code2||' '
||elemBil.elem_code3||' : siac_r_vincolo_bil_elem.' ;
insert into siac_r_vincolo_bil_elem
( elem_id,vincolo_id, validita_inizio,ente_proprietario_id,login_operazione
)
(select bilElemIdRet, v.vincolo_id, dataInizioVal,v.ente_proprietario_id, loginOperazione
from siac_r_vincolo_bil_elem v
where v.elem_id=elemBil.elem_id
and   v.data_cancellazione is null
and   date_trunc('day',dataElaborazione)>=date_trunc('day',v.validita_inizio)
and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v.validita_fine) or v.validita_fine is null)
);
codResult:=null;
strMessaggio:='Inserimento nuove strutture per tipo='||bilElemPrevTipo||
'.Elemento di bilancio '||elemBil.elem_code||' '
||elemBil.elem_code2||' '
||elemBil.elem_code3||' : siac_r_vincolo_bil_elem.Verifica inserimento.' ;
select  1  into codResult
from  siac_r_vincolo_bil_elem v
where v.elem_id=elemBil.elem_id
and   v.data_cancellazione is null
and   date_trunc('day',dataElaborazione)>=date_trunc('day',v.validita_inizio)
and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v.validita_fine) or v.validita_fine is null)
and   not exists (select 1 from siac_r_vincolo_bil_elem v1
where v1.elem_id= bilElemIdRet
and   v1.data_cancellazione is null
and   date_trunc('day',dataElaborazione)>=date_trunc('day',v1.validita_inizio)
and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v1.validita_fine) or v1.validita_fine is null)
order by v1.elem_id
limit 1
)
order by v.elem_id
limit 1;
if codResult is not null then raise exception ' Non effettuato.'; end if;
*/
        codresult:=NULL;
        -- siac_r_bil_elem_atto_legge
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemprevtipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_r_bil_elem_atto_legge.' ;
        INSERT INTO siac_r_bil_elem_atto_legge
                    (
                                elem_id,
                                attolegge_id,
                                descrizione,
                                gerarchia,
                                finanziamento_inizio,
                                finanziamento_fine,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT bilelemidret,
                                  v.attolegge_id,
                                  v.descrizione,
                                  v.gerarchia,
                                  v.finanziamento_inizio,
                                  v.finanziamento_fine,
                                  datainizioval,
                                  v.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_atto_legge v
                           WHERE  v.elem_id=elembil.elem_id
                           AND    v.data_cancellazione IS NULL
                           AND    date_trunc('day',dataelaborazione)>=date_trunc('day',v.validita_inizio)
                           AND    (
                                         date_trunc('day',dataelaborazione)<=date_trunc('day',v.validita_fine)
                                  OR     v.validita_fine IS NULL) );

        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemprevtipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_r_bil_elem_atto_legge.Verifica inserimento.' ;
        SELECT   1
        INTO     codresult
        FROM     siac_r_bil_elem_atto_legge v
        WHERE    v.elem_id=elembil.elem_id
        AND      v.data_cancellazione IS NULL
        AND      date_trunc('day',dataelaborazione)>=date_trunc('day',v.validita_inizio)
        AND      (
                          date_trunc('day',dataelaborazione)<=date_trunc('day',v.validita_fine)
                 OR       v.validita_fine IS NULL)
        AND      NOT EXISTS
                 (
                          SELECT   1
                          FROM     siac_r_bil_elem_atto_legge v1
                          WHERE    v1.elem_id= bilelemidret
                          AND      v1.data_cancellazione IS NULL
                          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',v1.validita_inizio)
                          AND      (
                                            date_trunc('day',dataelaborazione)<=date_trunc('day',v1.validita_fine)
                                   OR       v1.validita_fine IS NULL)
                          ORDER BY v1.elem_id limit 1 )
        ORDER BY v.elem_id limit 1;

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Non effettuato.';
        END IF;
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemprevtipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_r_bil_elem_rel_tempo.' ;
		-- siac-8383 Sofia 22.10.2021 
		-- elem_id_old deve essere ricalcolato in base al suo stesso equivalente di gestione in annobilancio-1
		-- attenzione anche al controllo dopo la insert o da commentare o da correggere
        /*INSERT INTO siac_r_bil_elem_rel_tempo
                    (
                                elem_id,
                                elem_id_old,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT bilelemidret,
                                  v.elem_id_old,
                                  datainizioval,
                                  v.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_rel_tempo v
                           WHERE  v.elem_id=elembil.elem_id
                           AND    v.data_cancellazione IS NULL
                           AND    date_trunc('day',dataelaborazione)>=date_trunc('day',v.validita_inizio)
                           AND    (
                                         date_trunc('day',dataelaborazione)<=date_trunc('day',v.validita_fine)
                                  OR     v.validita_fine IS NULL));*/
        -- siac-8383 Sofia 22.10.2021                          
        INSERT INTO siac_r_bil_elem_rel_tempo
        (
         elem_id,
         elem_id_old,
         validita_inizio,
         ente_proprietario_id,
         login_operazione
        )
        (
                          SELECT bilelemidret,
                                  enew.elem_id,
                                  datainizioval,
                                  v.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_rel_tempo v,siac_t_bil_elem e, 
                                  siac_t_bil_elem enew 
                           WHERE  v.elem_id=elembil.elem_id
                           AND    e.elem_id=v.elem_id_old
                           AND    enew.bil_id=bilancioprecid
                           AND    enew.elem_tipo_id=bilelemgesttipoid
                           AND    enew.elem_code=e.elem_code
                           AND    enew.elem_code2=e.elem_code2
                           AND    enew.elem_code3=e.elem_code3
                           AND    v.data_cancellazione IS NULL
                           AND    enew.data_cancellazione IS null
                           AND    date_trunc('day',dataelaborazione)>=date_trunc('day',v.validita_inizio)
                           AND    (
                                         date_trunc('day',dataelaborazione)<=date_trunc('day',v.validita_fine)
                                  OR     v.validita_fine IS NULL)
        );
                                 

        /* siac-8383 Sofia 22.10.2021  controllo commentato in quanto il capitolo equivalente potrebbe anche non esistere
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemprevtipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_r_bil_elem_rel_tempo.Verifica inserimento.' ;
        SELECT   1
        INTO     codresult
        FROM     siac_r_bil_elem_rel_tempo v
        WHERE    v.elem_id=elembil.elem_id
        AND      v.data_cancellazione IS NULL
        AND      date_trunc('day',dataelaborazione)>=date_trunc('day',v.validita_inizio)
        AND      (
                          date_trunc('day',dataelaborazione)<=date_trunc('day',v.validita_fine)
                 OR       v.validita_fine IS NULL)
        AND      NOT EXISTS
                 (
                          SELECT   1
                          FROM     siac_r_bil_elem_rel_tempo v1
                          WHERE    v1.elem_id= bilelemidret
                          AND      v1.data_cancellazione IS NULL
                          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',v1.validita_inizio)
                          AND      (
                                            date_trunc('day',dataelaborazione)<=date_trunc('day',v1.validita_fine)
                                   OR       v1.validita_fine IS NULL)
                          ORDER BY v1.elem_id limit 1 )
        ORDER BY v.elem_id limit 1;

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Non effettuato.';
        END IF;*/
       
        codresult:=NULL;
        -- siac_r_bil_elem_class
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemprevtipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_r_bil_elem_class.' ;
        /*   JIRA-SIAC-4167
insert into siac_r_bil_elem_class
(elem_id,classif_id, validita_inizio, ente_proprietario_id,login_operazione)
(select bilElemIdRet, class.classif_id,dataInizioVal,class.ente_proprietario_id,loginOperazione
from siac_r_bil_elem_class class
where class.elem_id=elemBil.elem_id
and   class.data_cancellazione is null
and   date_trunc('day',dataElaborazione)>=date_trunc('day',class.validita_inizio)
and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',class.validita_fine) or class.validita_fine is null));
*/
        /** JIRA-SIAC-4167 - aggiunto controllo su validita classificatore **/
        INSERT INTO siac_r_bil_elem_class
                    (
                                elem_id,
                                classif_id,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT bilelemidret,
                                  class.classif_id,
                                  datainizioval,
                                  class.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_class class,
                                  siac_t_class c
                           WHERE  class.elem_id=elembil.elem_id
                           AND    c.classif_id=class.classif_id
                           AND    class.data_cancellazione IS NULL
                           AND    date_trunc('day',dataelaborazione)>=date_trunc('day',class.validita_inizio)
                           AND    (
                                         date_trunc('day',dataelaborazione)<=date_trunc('day',class.validita_fine)
                                  OR     class.validita_fine IS NULL)
                           AND    c.data_cancellazione IS NULL
                           AND    date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                           AND    (
                                         date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                  OR     c.validita_fine IS NULL));

        SELECT   1
        INTO     codresult
        FROM     siac_r_bil_elem_class
        WHERE    elem_id=bilelemidret
        AND      data_cancellazione IS NULL
        AND      validita_fine IS NULL
        ORDER BY elem_id limit 1;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Nessun classificatore inserito.';
        END IF;


        -- controlli sui classificatori obbligatori
        -- CL_CDC, CL_CDR
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemprevtipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : verifica classificatore '
        ||cl_cdc
        ||' '
        ||cl_cdr
        ||'.' ;

        SELECT   1
        INTO     codresult
        FROM     siac_r_bil_elem_class r,
                 siac_t_class c
        WHERE    r.elem_id=bilelemidret
        AND      c.classif_id=r.classif_id
        AND      c.classif_tipo_id IN (cdctipoid,
                                       cdrtipoid)
        AND      c.data_cancellazione IS NULL
        AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
        AND      (
                          date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                 OR       c.validita_fine IS NULL)
        ORDER BY r.elem_id limit 1;

        IF codresult IS NULL THEN
          --provo a collegare il capitolo con il classificatore equivalente nuovo
          --siac-5297
          /* Sofia 21.11.2017 sostituita con quella sotto
          INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
          (
            SELECT bilelemidret,
                  siac_t_class.classif_id,
                  datainizioval,
                  siac_t_class.ente_proprietario_id,
                  loginoperazione
            FROM  siac_t_class
            WHERE
                  siac_t_class.data_cancellazione IS NULL
                  -- si suppone che il ribaltamento avvenga prima dell'inizio del nuovo anno
            AND   date_trunc('day',dataelaborazione)<=date_trunc('day',siac_t_class.validita_inizio)
            AND   (siac_t_class.validita_fine IS NULL  OR  (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',siac_t_class.validita_fine)))
            AND   siac_t_class.classif_code in (
                                                --codici del bilancio passato
                                                SELECT siac_t_class.classif_code
                                                FROM   siac_t_class
                                                WHERE
                                                       siac_t_class.data_cancellazione IS NULL
                                                AND    siac_t_class.validita_fine      IS NOT NULL
                                                AND    siac_t_class.classif_tipo_id IN (cdctipoid,cdrtipoid)
                                                AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',siac_t_class.validita_fine)
                                                AND    siac_t_class.ente_proprietario_id = enteproprietarioid
                                                order by siac_t_class.validita_fine DESC
                                                limit 1
                                                )
          );*/

		 --provo a collegare il capitolo con il classificatore equivalente nuovo
         --siac-5297
         -- Sofia 21.11.2017
         INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
          (
            SELECT bilelemidret,
                   c.classif_id,
                   datainizioval,
                   c.ente_proprietario_id,
                   loginoperazione
            FROM  siac_t_class c ,siac_r_bil_elem_class rprec, siac_t_class cprec
            WHERE
                  rprec.elem_id=elembil.elem_id
            and   cprec.classif_id=rprec.classif_id
            and   cprec.classif_tipo_id in (cdctipoid,cdrtipoid)
            and   rprec.data_cancellazione IS NULL
            and   date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
            and  (date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                  or rprec.validita_fine IS NULL)     -- relazione ad oggi valida
            and   cprec.data_cancellazione is null
            and   date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
			and   c.ente_proprietario_id=cprec.ente_proprietario_id
            and   c.classif_tipo_id=cprec.classif_tipo_id
            and   c.classif_code=cprec.classif_code
            and   c.data_cancellazione is null                                -- cercando un classificatore equivalente aperto su anno succ
            and   date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
            AND   (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                   or c.validita_fine IS NULL)
           );


          GET diagnostics _row_count = row_count;
          IF _row_count <1 THEN
            strmessaggio:=strmessaggio||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT capitolo.elem_id,
                                      capitolo.elem_code,
                                      capitolo.elem_code2,
                                      capitolo.elem_code3,
                                      capitolo.bil_id,
                                      fasebilelabid,
                                      'SAC',
                                      'Sac mancante',
                                      datainizioval,
                                      capitolo.ente_proprietario_id,
                                      loginoperazione
                               FROM   siac_t_bil_elem capitolo
                               WHERE  capitolo.elem_id=bilelemidret )
            returning   fase_bil_prev_ape_seg_id
            INTO        codresult;

            IF codresult IS NULL THEN
              RAISE
            EXCEPTION
              'Nessuno inserimento effettuato.';
            END IF;
          END IF;
        END IF;

        -- CL_PDC_FIN_QUINTO, CL_PDC_FIN_QUARTO
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemprevtipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : verifica classificatore '
        ||cl_pdc_fin_quarto
        ||' '
        ||cl_pdc_fin_quinto
        ||'.' ;
raise notice 'strmessaggio=%',strmessaggio;
        SELECT   1
        INTO     codresult
        FROM     siac_r_bil_elem_class r,
                 siac_t_class c
        WHERE    r.elem_id=bilelemidret
        AND      c.classif_id=r.classif_id
        AND      c.classif_tipo_id IN (pdcfinivid,
                                       pdcfinvid)
        AND      c.data_cancellazione IS NULL
        AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
        AND      (
                          date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                 OR       c.validita_fine IS NULL)
        ORDER BY r.elem_id limit 1;


        -- Obbligatorieta  del classificatore vale solo per capitolo STANDARD
        IF categoriacapcode = categoria_std THEN
          --  JIRA-SIAC-4167  if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
          IF codresult IS NULL THEN
          --provo a collegare il capitolo con il classificatore equivalente nuovo
          --siac-5297
          -- 21.11.2017 Sofia - spostato sotto
          /*INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
          (
            SELECT bilelemidret,
                  siac_t_class.classif_id,
                  datainizioval,
                  siac_t_class.ente_proprietario_id,
                  loginoperazione
            FROM  siac_t_class
            WHERE
                  siac_t_class.data_cancellazione IS NULL
            AND   siac_t_class.ente_proprietario_id = enteproprietarioid
                  -- si suppone che il ribaltamento avvenga prima dell'inizio del nuovo anno
            AND   date_trunc('day',dataelaborazione)<=date_trunc('day',siac_t_class.validita_inizio)
            AND   (siac_t_class.validita_fine IS NULL  OR  (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',siac_t_class.validita_fine)))
            AND   siac_t_class.classif_code in (
                                                --codici del bilancio passato
                                                SELECT siac_t_class.classif_code
                                                FROM   siac_t_class
                                                WHERE
                                                       siac_t_class.data_cancellazione IS NULL
                                                AND    siac_t_class.validita_fine      IS NOT NULL
                                                AND    siac_t_class.classif_tipo_id IN (pdcfinivid,pdcfinvid)
                                                AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',siac_t_class.validita_fine)
                                                AND    siac_t_class.ente_proprietario_id = enteproprietarioid
                                                order by siac_t_class.validita_fine DESC
                                                limit 1
                                                )
          );*/

		 --provo a collegare il capitolo con il classificatore equivalente nuovo
         --siac-5297
         -- Sofia 21.11.2017
         INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
          (
            SELECT bilelemidret,
                   c.classif_id,
                   datainizioval,
                   c.ente_proprietario_id,
                   loginoperazione
            FROM  siac_t_class c ,siac_r_bil_elem_class rprec, siac_t_class cprec
            WHERE
                  rprec.elem_id=elembil.elem_id
            and   cprec.classif_id=rprec.classif_id
            and   cprec.classif_tipo_id in (pdcfinivid,pdcfinvid)
            and   rprec.data_cancellazione IS NULL
            and   date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
            and  (date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                  or rprec.validita_fine IS NULL)     -- relazione ad oggi valida
            and   cprec.data_cancellazione is null
            and   date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
			and   c.ente_proprietario_id=cprec.ente_proprietario_id
            and   c.classif_tipo_id=cprec.classif_tipo_id
            and   c.classif_code=cprec.classif_code
            and   c.data_cancellazione is null                                -- cercando un classificatore equivalente aperto su anno succ
            and   date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
            AND   (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                   or c.validita_fine IS NULL)
           );

            GET diagnostics _row_count = row_count;
            IF _row_count <1 THEN
              strmessaggio:=strmessaggio
              ||' Inserimento segnalazione mancanza classif.';
              INSERT INTO fase_bil_t_prev_apertura_segnala
                          (
                                      elem_id,
                                      elem_code,
                                      elem_code2,
                                      elem_code3,
                                      bil_id,
                                      fase_bil_elab_id,
                                      segnala_codice,
                                      segnala_desc,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT capitolo.elem_id,
                                        capitolo.elem_code,
                                        capitolo.elem_code2,
                                        capitolo.elem_code3,
                                        capitolo.bil_id,
                                        fasebilelabid,
                                        'PDCFIN',
                                        'PdcFin mancante',
                                        datainizioval,
                                        capitolo.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_bil_elem capitolo
                                 WHERE  capitolo.elem_id=bilelemidret )
              returning   fase_bil_prev_ape_seg_id
              INTO        codresult;

              IF codresult IS NULL THEN
                RAISE
              EXCEPTION
                'Nessuno inserimento effettuato.';
              END IF;
            END IF;
          END IF;
        END IF;

        IF euelemtipo=tipo_elem_eu THEN

          -- CL_PROGRAMMA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemprevtipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_programma
          ||'.' ;

          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=bilelemidret
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=programmatipoid
          AND      c.data_cancellazione IS NULL
          AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL)
          ORDER BY r.elem_id limit 1;

          -- Obbligatorieta  del classificatore vale solo per capitolo STANDARD
          IF categoriacapcode = categoria_std THEN
            -- JIRA-SIAC-4167 if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
            IF codresult IS NULL THEN
              --provo a collegare il capitolo con il classificatore equivalente nuovo
              --siac-5297
              -- 21.11.2017 Sofia spostato sotto
              /*
              INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
              (
                SELECT bilelemidret,
                      siac_t_class.classif_id,
                      datainizioval,
                      siac_t_class.ente_proprietario_id,
                      loginoperazione
                FROM  siac_t_class
                WHERE
                      siac_t_class.data_cancellazione IS NULL
                AND   siac_t_class.ente_proprietario_id = enteproprietarioid
                      -- si suppone che il ribaltamento avvenga prima dell'inizio del nuovo anno
                AND   date_trunc('day',dataelaborazione)<=date_trunc('day',siac_t_class.validita_inizio)
                AND   (siac_t_class.validita_fine IS NULL  OR  (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',siac_t_class.validita_fine)))
                AND   siac_t_class.classif_code in (
                                                    --codici del bilancio passato
                                                    SELECT siac_t_class.classif_code
                                                    FROM   siac_t_class
                                                    WHERE
                                                           siac_t_class.data_cancellazione IS NULL
                                                    AND    siac_t_class.validita_fine      IS NOT NULL
                                                    AND    siac_t_class.classif_tipo_id IN (programmatipoid)
                                                    AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',siac_t_class.validita_fine)
                                                    AND    siac_t_class.ente_proprietario_id = enteproprietarioid
                                                    order by siac_t_class.validita_fine DESC
                                                    limit 1
                                                    )
              );
*/
	      --provo a collegare il capitolo con il classificatore equivalente nuovo
          --siac-5297
          -- Sofia 21.11.2017
	      INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
          (
            SELECT bilelemidret,
                   c.classif_id,
                   datainizioval,
                   c.ente_proprietario_id,
                   loginoperazione
            FROM  siac_t_class c ,siac_r_bil_elem_class rprec, siac_t_class cprec
            WHERE
                  rprec.elem_id=elembil.elem_id
            and   cprec.classif_id=rprec.classif_id
            and   cprec.classif_tipo_id =programmatipoid
            and   rprec.data_cancellazione IS NULL
            and   date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
            and  (date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                  or rprec.validita_fine IS NULL)     -- relazione ad oggi valida
            and   cprec.data_cancellazione is null
            and   date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
			and   c.ente_proprietario_id=cprec.ente_proprietario_id
            and   c.classif_tipo_id=cprec.classif_tipo_id
            and   c.classif_code=cprec.classif_code
            and   c.data_cancellazione is null                                -- cercando un classificatore equivalente aperto su anno succ
            and   date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
            AND   (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                   or c.validita_fine IS NULL)
           );

              GET diagnostics _row_count = row_count;
              IF _row_count <1 THEN
                strmessaggio:=strmessaggio
                ||' Inserimento segnalazione mancanza classif.';
                INSERT INTO fase_bil_t_prev_apertura_segnala
                            (
                                        elem_id,
                                        elem_code,
                                        elem_code2,
                                        elem_code3,
                                        bil_id,
                                        fase_bil_elab_id,
                                        segnala_codice,
                                        segnala_desc,
                                        validita_inizio,
                                        ente_proprietario_id,
                                        login_operazione
                            )
                            (
                                   SELECT capitolo.elem_id,
                                          capitolo.elem_code,
                                          capitolo.elem_code2,
                                          capitolo.elem_code3,
                                          capitolo.bil_id,
                                          fasebilelabid,
                                          cl_programma,
                                          cl_programma
                                                 ||' mancante',
                                          datainizioval,
                                          capitolo.ente_proprietario_id,
                                          loginoperazione
                                   FROM   siac_t_bil_elem capitolo
                                   WHERE  capitolo.elem_id=bilelemidret )
                returning   fase_bil_prev_ape_seg_id
                INTO        codresult;

                IF codresult IS NULL THEN
                  RAISE
                EXCEPTION
                  'Nessuno inserimento effettuato.';
                END IF;
              END IF;
            END IF;
          END IF;

          -- CL_MACROAGGREGATO
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemprevtipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_macroaggregato
          ||'.' ;

          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=bilelemidret
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=macroaggrtipoid
          AND      c.data_cancellazione IS NULL
          AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL)
          ORDER BY r.elem_id limit 1;

          -- Obbligatorieta del classificatore vale solo per capitolo STANDARD
          IF categoriacapcode = categoria_std THEN
            -- JIRA-SIAC-4167 if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
            IF codresult IS NULL THEN
              --provo a collegare il capitolo con il classificatore equivalente nuovo
              --siac-5297
              -- 21.11.2017 Sofia spostato sotto
/*              INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
              (
                SELECT bilelemidret,
                      siac_t_class.classif_id,
                      datainizioval,
                      siac_t_class.ente_proprietario_id,
                      loginoperazione
                FROM  siac_t_class
                WHERE
                      siac_t_class.data_cancellazione IS NULL
                AND   siac_t_class.ente_proprietario_id = enteproprietarioid
                      -- si suppone che il ribaltamento avvenga prima dell'inizio del nuovo anno
                AND   date_trunc('day',dataelaborazione)<=date_trunc('day',siac_t_class.validita_inizio)
                AND   (siac_t_class.validita_fine IS NULL  OR  (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',siac_t_class.validita_fine)))
                AND   siac_t_class.classif_code in (
                                                    --codici del bilancio passato
                                                    SELECT siac_t_class.classif_code
                                                    FROM   siac_t_class
                                                    WHERE
                                                           siac_t_class.data_cancellazione IS NULL
                                                    AND    siac_t_class.validita_fine      IS NOT NULL
                                                    AND    siac_t_class.classif_tipo_id IN (macroaggrtipoid)
                                                    AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',siac_t_class.validita_fine)
                                                    AND    siac_t_class.ente_proprietario_id = enteproprietarioid
                                                    order by siac_t_class.validita_fine DESC
                                                    limit 1
                                                    )
              ); */

		  --provo a collegare il capitolo con il classificatore equivalente nuovo
          --siac-5297
          -- Sofia 21.11.2017
	      INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
          (
            SELECT bilelemidret,
                   c.classif_id,
                   datainizioval,
                   c.ente_proprietario_id,
                   loginoperazione
            FROM  siac_t_class c ,siac_r_bil_elem_class rprec, siac_t_class cprec
            WHERE
                  rprec.elem_id=elembil.elem_id
            and   cprec.classif_id=rprec.classif_id
            and   cprec.classif_tipo_id =macroaggrtipoid
            and   rprec.data_cancellazione IS NULL
            and   date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
            and  (date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                  or rprec.validita_fine IS NULL)     -- relazione ad oggi valida
            and   cprec.data_cancellazione is null
            and   date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
			and   c.ente_proprietario_id=cprec.ente_proprietario_id
            and   c.classif_tipo_id=cprec.classif_tipo_id
            and   c.classif_code=cprec.classif_code
            and   c.data_cancellazione is null                                -- cercando un classificatore equivalente aperto su anno succ
            and   date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
            AND   (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                   or c.validita_fine IS NULL)
           );

              GET diagnostics _row_count = row_count;
              IF _row_count <1 THEN
                strmessaggio:=strmessaggio
                ||' Inserimento segnalazione mancanza classif.';
                INSERT INTO fase_bil_t_prev_apertura_segnala
                            (
                                        elem_id,
                                        elem_code,
                                        elem_code2,
                                        elem_code3,
                                        bil_id,
                                        fase_bil_elab_id,
                                        segnala_codice,
                                        segnala_desc,
                                        validita_inizio,
                                        ente_proprietario_id,
                                        login_operazione
                            )
                            (
                                   SELECT capitolo.elem_id,
                                          capitolo.elem_code,
                                          capitolo.elem_code2,
                                          capitolo.elem_code3,
                                          capitolo.bil_id,
                                          fasebilelabid,
                                          cl_macroaggregato,
                                          cl_macroaggregato
                                                 ||' mancante',
                                          datainizioval,
                                          capitolo.ente_proprietario_id,
                                          loginoperazione
                                   FROM   siac_t_bil_elem capitolo
                                   WHERE  capitolo.elem_id=bilelemidret )
                returning   fase_bil_prev_ape_seg_id
                INTO        codresult;

                IF codresult IS NULL THEN
                  RAISE
                EXCEPTION
                  'Nessuno inserimento effettuato.';
                END IF;
              END IF;
            END IF;
          END IF;
          -- CL_COFOG
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemprevtipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_cofog
          ||'.' ;

          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=elembil.elem_id
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=cofogtipoid
          AND      r.data_cancellazione IS NULL
          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',r.validita_inizio)
          AND      (
                            date_trunc('day',dataelaborazione)<=date_trunc('day',r.validita_fine)
                   OR       r.validita_fine IS NULL)
          AND      c.data_cancellazione IS NULL
          /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL) Sofia 21.11.2017 */
          AND      NOT EXISTS
                   (
                                   SELECT DISTINCT 1
                                   FROM            siac_r_bil_elem_class r,
                                                   siac_t_class c
                                   WHERE           r.elem_id=bilelemidret
                                   AND             c.classif_id=r.classif_id
                                   AND             c.classif_tipo_id=cofogtipoid
                                   AND             c.data_cancellazione IS NULL
                                   /*AND             date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                   AND             (
                                                                   date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                   OR              c.validita_fine IS NULL) Sofia 21.11.2017*/ )
          ORDER BY r.elem_id limit 1;

          -- --JIRA-SIAC-4167 14.11.2016 Sofia
          IF codresult IS NOT NULL THEN
              --provo a collegare il capitolo con il classificatore equivalente nuovo
              --siac-5297
              -- Sofia 21.11.2017 sostituita sotto
              /*INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
              (
                SELECT bilelemidret,
                      siac_t_class.classif_id,
                      datainizioval,
                      siac_t_class.ente_proprietario_id,
                      loginoperazione
                FROM  siac_t_class
                WHERE
                      siac_t_class.data_cancellazione IS NULL
                AND   siac_t_class.ente_proprietario_id = enteproprietarioid
                      -- si suppone che il ribaltamento avvenga prima dell'inizio del nuovo anno
                AND   date_trunc('day',dataelaborazione)<=date_trunc('day',siac_t_class.validita_inizio)
                AND   (siac_t_class.validita_fine IS NULL  OR  (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',siac_t_class.validita_fine)))
                AND   siac_t_class.classif_code in (
                                                    --codici del bilancio passato
                                                    SELECT siac_t_class.classif_code
                                                    FROM   siac_t_class
                                                    WHERE
                                                           siac_t_class.data_cancellazione IS NULL
                                                    AND    siac_t_class.validita_fine      IS NOT NULL
                                                    AND    siac_t_class.classif_tipo_id IN (cofogtipoid)
                                                    AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',siac_t_class.validita_fine)
                                                    AND    siac_t_class.ente_proprietario_id = enteproprietarioid
                                                    order by siac_t_class.validita_fine DESC
                                                    limit 1
                                                    )
              );
              */
		  --provo a collegare il capitolo con il classificatore equivalente nuovo
          --siac-5297
          -- Sofia 21.11.2017
	      INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
          (
            SELECT bilelemidret,
                   c.classif_id,
                   datainizioval,
                   c.ente_proprietario_id,
                   loginoperazione
            FROM  siac_t_class c ,siac_r_bil_elem_class rprec, siac_t_class cprec
            WHERE
                  rprec.elem_id=elembil.elem_id
            and   cprec.classif_id=rprec.classif_id
            and   cprec.classif_tipo_id =cofogtipoid
            and   rprec.data_cancellazione IS NULL
            and   date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
            and  (date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                  or rprec.validita_fine IS NULL)     -- relazione ad oggi valida
            and   cprec.data_cancellazione is null
            and   date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
			and   c.ente_proprietario_id=cprec.ente_proprietario_id
            and   c.classif_tipo_id=cprec.classif_tipo_id
            and   c.classif_code=cprec.classif_code
            and   c.data_cancellazione is null                                -- cercando un classificatore equivalente aperto su anno succ
            and   date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
            AND   (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                   or c.validita_fine IS NULL)
           );

            GET diagnostics _row_count = row_count;
            IF _row_count <1 THEN
              codresult:=NULL;
              strmessaggio:=strmessaggio
              ||' Inserimento segnalazione mancanza classif.';
              INSERT INTO fase_bil_t_prev_apertura_segnala
                          (
                                      elem_id,
                                      elem_code,
                                      elem_code2,
                                      elem_code3,
                                      bil_id,
                                      fase_bil_elab_id,
                                      segnala_codice,
                                      segnala_desc,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT capitolo.elem_id,
                                        capitolo.elem_code,
                                        capitolo.elem_code2,
                                        capitolo.elem_code3,
                                        capitolo.bil_id,
                                        fasebilelabid,
                                        cl_cofog,
                                        cl_cofog
                                               ||' mancante',
                                        datainizioval,
                                        capitolo.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_bil_elem capitolo
                                 WHERE  capitolo.elem_id=bilelemidret )
              returning   fase_bil_prev_ape_seg_id
              INTO        codresult;

              IF codresult IS NULL THEN
                RAISE
              EXCEPTION
                ' Nessuno inserimento effettuato.';
              END IF;
            END IF;
          END IF;
          -- CL_RICORRENTE_SPESA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemprevtipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_ricorrente_spesa
          ||'.' ;

          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=elembil.elem_id
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=ricorrentespesaid
          AND      r.data_cancellazione IS NULL
          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',r.validita_inizio)
          AND      (
                            date_trunc('day',dataelaborazione)<=date_trunc('day',r.validita_fine)
                   OR       r.validita_fine IS NULL)
          AND      c.data_cancellazione IS NULL
          /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL) 21.11.2017 Sofia */
          AND      NOT EXISTS
                   (
                                   SELECT DISTINCT 1
                                   FROM            siac_r_bil_elem_class r,
                                                   siac_t_class c
                                   WHERE           r.elem_id=bilelemidret
                                   AND             c.classif_id=r.classif_id
                                   AND             c.classif_tipo_id=ricorrentespesaid
                                   AND             c.data_cancellazione IS NULL
                                  /* AND             date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                   AND             (
                                                                   date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                   OR              c.validita_fine IS NULL) 21.11.2017 Sofia */)
          ORDER BY r.elem_id limit 1;

          -- JIRA-SIAC-4167 14.11.2016 Sofia
          IF codresult IS NOT NULL THEN
              --provo a collegare il capitolo con il classificatore equivalente nuovo
              --siac-5297
              -- Sofia 21.11.2017 spostato sotto
/*              INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
              (
                SELECT bilelemidret,
                      siac_t_class.classif_id,
                      datainizioval,
                      siac_t_class.ente_proprietario_id,
                      loginoperazione
                FROM  siac_t_class
                WHERE
                      siac_t_class.data_cancellazione IS NULL
                AND   siac_t_class.ente_proprietario_id = enteproprietarioid
                      -- si suppone che il ribaltamento avvenga prima dell'inizio del nuovo anno
                AND   date_trunc('day',dataelaborazione)<=date_trunc('day',siac_t_class.validita_inizio)
                AND   (siac_t_class.validita_fine IS NULL  OR  (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',siac_t_class.validita_fine)))
                AND   siac_t_class.classif_code in (
                                                    --codici del bilancio passato
                                                    SELECT siac_t_class.classif_code
                                                    FROM   siac_t_class
                                                    WHERE
                                                           siac_t_class.data_cancellazione IS NULL
                                                    AND    siac_t_class.validita_fine      IS NOT NULL
                                                    AND    siac_t_class.classif_tipo_id IN (ricorrentespesaid)
                                                    AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',siac_t_class.validita_fine)
                                                    AND    siac_t_class.ente_proprietario_id = enteproprietarioid
                                                    order by siac_t_class.validita_fine DESC
                                                    limit 1
                                                    )
              ); */

          --provo a collegare il capitolo con il classificatore equivalente nuovo
          --siac-5297
          -- Sofia 21.11.2017
	      INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
          (
            SELECT bilelemidret,
                   c.classif_id,
                   datainizioval,
                   c.ente_proprietario_id,
                   loginoperazione
            FROM  siac_t_class c ,siac_r_bil_elem_class rprec, siac_t_class cprec
            WHERE
                  rprec.elem_id=elembil.elem_id
            and   cprec.classif_id=rprec.classif_id
            and   cprec.classif_tipo_id =ricorrentespesaid
            and   rprec.data_cancellazione IS NULL
            and   date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
            and  (date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                  or rprec.validita_fine IS NULL)     -- relazione ad oggi valida
            and   cprec.data_cancellazione is null
            and   date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
			and   c.ente_proprietario_id=cprec.ente_proprietario_id
            and   c.classif_tipo_id=cprec.classif_tipo_id
            and   c.classif_code=cprec.classif_code
            and   c.data_cancellazione is null                                -- cercando un classificatore equivalente aperto su anno succ
            and   date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
            AND   (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                   or c.validita_fine IS NULL)
           );

            GET diagnostics _row_count = row_count;
            IF _row_count <1 THEN
              codresult:=NULL;
              strmessaggio:=strmessaggio
              ||' Inserimento segnalazione mancanza classif.';
              INSERT INTO fase_bil_t_prev_apertura_segnala
                          (
                                      elem_id,
                                      elem_code,
                                      elem_code2,
                                      elem_code3,
                                      bil_id,
                                      fase_bil_elab_id,
                                      segnala_codice,
                                      segnala_desc,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT capitolo.elem_id,
                                        capitolo.elem_code,
                                        capitolo.elem_code2,
                                        capitolo.elem_code3,
                                        capitolo.bil_id,
                                        fasebilelabid,
                                        cl_ricorrente_spesa,
                                        cl_ricorrente_spesa
                                               ||' mancante',
                                        datainizioval,
                                        capitolo.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_bil_elem capitolo
                                 WHERE  capitolo.elem_id=bilelemidret )
              returning   fase_bil_prev_ape_seg_id
              INTO        codresult;

              IF codresult IS NULL THEN
                RAISE
              EXCEPTION
                ' Nessuno inserimento effettuato.';
              END IF;
            END IF;
          END IF;
          -- CL_SIOPE_SPESA_TERZO
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemprevtipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_siope_spesa_terzo
          ||'.' ;

          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=elembil.elem_id
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=siopespesatipoid
          AND      r.data_cancellazione IS NULL
          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',r.validita_inizio)
          AND      (
                            date_trunc('day',dataelaborazione)<=date_trunc('day',r.validita_fine)
                   OR       r.validita_fine IS NULL)
          AND      c.data_cancellazione IS NULL
          /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL) 21.11.2017 Sofia */
          AND      NOT EXISTS
                   (
                                   SELECT DISTINCT 1
                                   FROM            siac_r_bil_elem_class r,
                                                   siac_t_class c
                                   WHERE           r.elem_id=bilelemidret
                                   AND             c.classif_id=r.classif_id
                                   AND             c.classif_tipo_id=siopespesatipoid
                                   AND             c.data_cancellazione IS NULL
                                   /*AND             date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                   AND             (
                                                                   date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                   OR              c.validita_fine IS NULL) 21.11.2017 Sofia*/)
          ORDER BY r.elem_id limit 1;

          -- JIRA-SIAC-4167 14.11.2016 Sofia
          IF codresult IS NOT NULL THEN
              --provo a collegare il capitolo con il classificatore equivalente nuovo
              --siac-5297
              -- 21.11.2017 Sofia spostato sotto
              /*INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
              (
                SELECT bilelemidret,
                      siac_t_class.classif_id,
                      datainizioval,
                      siac_t_class.ente_proprietario_id,
                      loginoperazione
                FROM  siac_t_class
                WHERE
                      siac_t_class.data_cancellazione IS NULL
                AND   siac_t_class.ente_proprietario_id = enteproprietarioid
                      -- si suppone che il ribaltamento avvenga prima dell'inizio del nuovo anno
                AND   date_trunc('day',dataelaborazione)<=date_trunc('day',siac_t_class.validita_inizio)
                AND   (siac_t_class.validita_fine IS NULL  OR  (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',siac_t_class.validita_fine)))
                AND   siac_t_class.classif_code in (
                                                    --codici del bilancio passato
                                                    SELECT siac_t_class.classif_code
                                                    FROM   siac_t_class
                                                    WHERE
                                                           siac_t_class.data_cancellazione IS NULL
                                                    AND    siac_t_class.validita_fine      IS NOT NULL
                                                    AND    siac_t_class.classif_tipo_id IN (siopespesatipoid)
                                                    AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',siac_t_class.validita_fine)
                                                    AND    siac_t_class.ente_proprietario_id = enteproprietarioid
                                                    order by siac_t_class.validita_fine DESC
                                                    limit 1
                                                    )
              );*/

		  --provo a collegare il capitolo con il classificatore equivalente nuovo
          --siac-5297
          -- Sofia 21.11.2017
	      INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
          (
            SELECT bilelemidret,
                   c.classif_id,
                   datainizioval,
                   c.ente_proprietario_id,
                   loginoperazione
            FROM  siac_t_class c ,siac_r_bil_elem_class rprec, siac_t_class cprec
            WHERE
                  rprec.elem_id=elembil.elem_id
            and   cprec.classif_id=rprec.classif_id
            and   cprec.classif_tipo_id =siopespesatipoid
            and   rprec.data_cancellazione IS NULL
            and   date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
            and  (date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                  or rprec.validita_fine IS NULL)     -- relazione ad oggi valida
            and   cprec.data_cancellazione is null
            and   date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
			and   c.ente_proprietario_id=cprec.ente_proprietario_id
            and   c.classif_tipo_id=cprec.classif_tipo_id
            and   c.classif_code=cprec.classif_code
            and   c.data_cancellazione is null                                -- cercando un classificatore equivalente aperto su anno succ
            and   date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
            AND   (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                   or c.validita_fine IS NULL)
           );

            GET diagnostics _row_count = row_count;
            IF _row_count <1 THEN
              codresult:=NULL;
              strmessaggio:=strmessaggio
              ||' Inserimento segnalazione mancanza classif.';
              INSERT INTO fase_bil_t_prev_apertura_segnala
                          (
                                      elem_id,
                                      elem_code,
                                      elem_code2,
                                      elem_code3,
                                      bil_id,
                                      fase_bil_elab_id,
                                      segnala_codice,
                                      segnala_desc,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT capitolo.elem_id,
                                        capitolo.elem_code,
                                        capitolo.elem_code2,
                                        capitolo.elem_code3,
                                        capitolo.bil_id,
                                        fasebilelabid,
                                        cl_siope_spesa_terzo,
                                        cl_siope_spesa_terzo
                                               ||' mancante',
                                        datainizioval,
                                        capitolo.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_bil_elem capitolo
                                 WHERE  capitolo.elem_id=bilelemidret )
              returning   fase_bil_prev_ape_seg_id
              INTO        codresult;

              IF codresult IS NULL THEN
                RAISE
              EXCEPTION
                ' Nessuno inserimento effettuato.';
              END IF;
            END IF;
          END IF;
          -- CL_TRANSAZIONE_UE_SPESA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemprevtipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_transazione_ue_spesa
          ||'.' ;


          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=elembil.elem_id
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=transazioneuespesaid
          AND      r.data_cancellazione IS NULL
          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',r.validita_inizio)
          AND      (
                            date_trunc('day',dataelaborazione)<=date_trunc('day',r.validita_fine)
                   OR       r.validita_fine IS NULL)
          AND      c.data_cancellazione IS NULL
          /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL) 21.11.2017 Sofia */
          AND      NOT EXISTS
                   (
                                   SELECT DISTINCT 1
                                   FROM            siac_r_bil_elem_class r,
                                                   siac_t_class c
                                   WHERE           r.elem_id=bilelemidret
                                   AND             c.classif_id=r.classif_id
                                   AND             c.classif_tipo_id=transazioneuespesaid
                                   AND             c.data_cancellazione IS NULL
                                   /*AND             date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                   AND             (
                                                                   date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                   OR              c.validita_fine IS NULL) 21.11.2017 Sofia */ )
          ORDER BY r.elem_id limit 1;

          -- JIRA-SIAC-4167 14.11.2016 Sofia
          IF codresult IS NOT NULL THEN
              --provo a collegare il capitolo con il classificatore equivalente nuovo
              --siac-5297
              -- 21.11.2017 Sofia spostato sotto
              /*INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
              (
                SELECT bilelemidret,
                      siac_t_class.classif_id,
                      datainizioval,
                      siac_t_class.ente_proprietario_id,
                      loginoperazione
                FROM  siac_t_class
                WHERE
                      siac_t_class.data_cancellazione IS NULL
                AND   siac_t_class.ente_proprietario_id = enteproprietarioid
                      -- si suppone che il ribaltamento avvenga prima dell'inizio del nuovo anno
                AND   date_trunc('day',dataelaborazione)<=date_trunc('day',siac_t_class.validita_inizio)
                AND   (siac_t_class.validita_fine IS NULL  OR  (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',siac_t_class.validita_fine)))
                AND   siac_t_class.classif_code in (
                                                    --codici del bilancio passato
                                                    SELECT siac_t_class.classif_code
                                                    FROM   siac_t_class
                                                    WHERE
                                                           siac_t_class.data_cancellazione IS NULL
                                                    AND    siac_t_class.validita_fine      IS NOT NULL
                                                    AND    siac_t_class.classif_tipo_id IN (transazioneuespesaid)
                                                    AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',siac_t_class.validita_fine)
                                                    AND    siac_t_class.ente_proprietario_id = enteproprietarioid
                                                    order by siac_t_class.validita_fine DESC
                                                    limit 1
                                                    )
              );*/

		  --provo a collegare il capitolo con il classificatore equivalente nuovo
          --siac-5297
          -- Sofia 21.11.2017
	      INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
          (
            SELECT bilelemidret,
                   c.classif_id,
                   datainizioval,
                   c.ente_proprietario_id,
                   loginoperazione
            FROM  siac_t_class c ,siac_r_bil_elem_class rprec, siac_t_class cprec
            WHERE
                  rprec.elem_id=elembil.elem_id
            and   cprec.classif_id=rprec.classif_id
            and   cprec.classif_tipo_id =transazioneuespesaid
            and   rprec.data_cancellazione IS NULL
            and   date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
            and  (date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                  or rprec.validita_fine IS NULL)     -- relazione ad oggi valida
            and   cprec.data_cancellazione is null
            and   date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
			and   c.ente_proprietario_id=cprec.ente_proprietario_id
            and   c.classif_tipo_id=cprec.classif_tipo_id
            and   c.classif_code=cprec.classif_code
            and   c.data_cancellazione is null                                -- cercando un classificatore equivalente aperto su anno succ
            and   date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
            AND   (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                   or c.validita_fine IS NULL)
           );

            GET diagnostics _row_count = row_count;
            IF _row_count <1 THEN
              codresult:=NULL;
              strmessaggio:=strmessaggio
              ||' Inserimento segnalazione mancanza classif.';
              INSERT INTO fase_bil_t_prev_apertura_segnala
                          (
                                      elem_id,
                                      elem_code,
                                      elem_code2,
                                      elem_code3,
                                      bil_id,
                                      fase_bil_elab_id,
                                      segnala_codice,
                                      segnala_desc,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT capitolo.elem_id,
                                        capitolo.elem_code,
                                        capitolo.elem_code2,
                                        capitolo.elem_code3,
                                        capitolo.bil_id,
                                        fasebilelabid,
                                        cl_transazione_ue_spesa,
                                        cl_transazione_ue_spesa
                                               ||' mancante',
                                        datainizioval,
                                        capitolo.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_bil_elem capitolo
                                 WHERE  capitolo.elem_id=bilelemidret )
              returning   fase_bil_prev_ape_seg_id
              INTO        codresult;

              IF codresult IS NULL THEN
                RAISE
              EXCEPTION
                ' Nessuno inserimento effettuato.';
              END IF;
            END IF;
          END IF;
        ELSE
          -- CL_CATEGORIA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemprevtipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_categoria
          ||'.' ;


          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=bilelemidret
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=categoriatipoid
          AND      r.data_cancellazione IS NULL
          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',r.validita_inizio)
          AND      (
                            date_trunc('day',dataelaborazione)<=date_trunc('day',r.validita_fine)
                   OR       r.validita_fine IS NULL)
          AND      c.data_cancellazione IS NULL
          AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL)
          ORDER BY r.elem_id limit 1;

          -- Obbligatorieta  del classificatore vale solo per capitolo STANDARD
          IF categoriacapcode = categoria_std THEN
            -- JIRA-SIAC-4167 14.11.2016 Sofia
            -- if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
            IF codresult IS NULL THEN
              --provo a collegare il capitolo con il classificatore equivalente nuovo
              --siac-5297
              -- 21.11.2017 Sofia spostato sotto
              /*INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
              (
                SELECT bilelemidret,
                      siac_t_class.classif_id,
                      datainizioval,
                      siac_t_class.ente_proprietario_id,
                      loginoperazione
                FROM  siac_t_class
                WHERE
                      siac_t_class.data_cancellazione IS NULL
                AND   siac_t_class.ente_proprietario_id = enteproprietarioid
                      -- si suppone che il ribaltamento avvenga prima dell'inizio del nuovo anno
                AND   date_trunc('day',dataelaborazione)<=date_trunc('day',siac_t_class.validita_inizio)
                AND   (siac_t_class.validita_fine IS NULL  OR  (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',siac_t_class.validita_fine)))
                AND   siac_t_class.classif_code in (
                                                    --codici del bilancio passato
                                                    SELECT siac_t_class.classif_code
                                                    FROM   siac_t_class
                                                    WHERE
                                                           siac_t_class.data_cancellazione IS NULL
                                                    AND    siac_t_class.validita_fine      IS NOT NULL
                                                    AND    siac_t_class.classif_tipo_id IN (categoriatipoid)
                                                    AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',siac_t_class.validita_fine)
                                                    AND    siac_t_class.ente_proprietario_id = enteproprietarioid
                                                    order by siac_t_class.validita_fine DESC
                                                    limit 1
                                                    )
              );*/

		  --provo a collegare il capitolo con il classificatore equivalente nuovo
          --siac-5297
          -- Sofia 21.11.2017
	      INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
          (
            SELECT bilelemidret,
                   c.classif_id,
                   datainizioval,
                   c.ente_proprietario_id,
                   loginoperazione
            FROM  siac_t_class c ,siac_r_bil_elem_class rprec, siac_t_class cprec
            WHERE
                  rprec.elem_id=elembil.elem_id
            and   cprec.classif_id=rprec.classif_id
            and   cprec.classif_tipo_id =categoriatipoid
            and   rprec.data_cancellazione IS NULL
            and   date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
            and  (date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                  or rprec.validita_fine IS NULL)     -- relazione ad oggi valida
            and   cprec.data_cancellazione is null
            and   date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
			and   c.ente_proprietario_id=cprec.ente_proprietario_id
            and   c.classif_tipo_id=cprec.classif_tipo_id
            and   c.classif_code=cprec.classif_code
            and   c.data_cancellazione is null                                -- cercando un classificatore equivalente aperto su anno succ
            and   date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
            AND   (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                   or c.validita_fine IS NULL)
           );

              GET diagnostics _row_count = row_count;
              IF _row_count <1 THEN
                codresult:=NULL;
                strmessaggio:=strmessaggio
                ||' Inserimento segnalazione mancanza classif.';
                INSERT INTO fase_bil_t_prev_apertura_segnala
                            (
                                        elem_id,
                                        elem_code,
                                        elem_code2,
                                        elem_code3,
                                        bil_id,
                                        fase_bil_elab_id,
                                        segnala_codice,
                                        segnala_desc,
                                        validita_inizio,
                                        ente_proprietario_id,
                                        login_operazione
                            )
                            (
                                   SELECT capitolo.elem_id,
                                          capitolo.elem_code,
                                          capitolo.elem_code2,
                                          capitolo.elem_code3,
                                          capitolo.bil_id,
                                          fasebilelabid,
                                          cl_categoria,
                                          cl_categoria
                                                 ||' mancante',
                                          datainizioval,
                                          capitolo.ente_proprietario_id,
                                          loginoperazione
                                   FROM   siac_t_bil_elem capitolo
                                   WHERE  capitolo.elem_id=bilelemidret )
                returning   fase_bil_prev_ape_seg_id
                INTO        codresult;

                IF codresult IS NULL THEN
                  RAISE EXCEPTION ' Nessuno inserimento effettuato.';
                END IF;
              END IF;
            END IF;
          END IF;
          -- CL_RICORRENTE_ENTRATA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemprevtipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_ricorrente_entrata
          ||'.' ;


          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=elembil.elem_id
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=ricorrenteentrataid
          AND      r.data_cancellazione IS NULL
          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',r.validita_inizio)
          AND      (
                            date_trunc('day',dataelaborazione)<=date_trunc('day',r.validita_fine)
                   OR       r.validita_fine IS NULL)
          AND      c.data_cancellazione IS NULL
         /* AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL) 21.11.2017 Sofia */
          AND      NOT EXISTS
                   (
                                   SELECT DISTINCT 1
                                   FROM            siac_r_bil_elem_class r,
                                                   siac_t_class c
                                   WHERE           r.elem_id=bilelemidret
                                   AND             c.classif_id=r.classif_id
                                   AND             c.classif_tipo_id=ricorrenteentrataid
                                   AND             c.data_cancellazione IS NULL
                                   /*AND             date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                   AND             (
                                                                   date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                   OR              c.validita_fine IS NULL) 21.11.2017 Sofia */)
          ORDER BY r.elem_id limit 1;

          -- JIRA-SIAC-4167 14.11.2016 Sofia
          IF codresult IS NOT NULL THEN
              --provo a collegare il capitolo con il classificatore equivalente nuovo
              --siac-5297
              -- 21.11.2017 Sofia spostato sotto
             /* INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
              (
                SELECT bilelemidret,
                      siac_t_class.classif_id,
                      datainizioval,
                      siac_t_class.ente_proprietario_id,
                      loginoperazione
                FROM  siac_t_class
                WHERE
                      siac_t_class.data_cancellazione IS NULL
                AND   siac_t_class.ente_proprietario_id = enteproprietarioid
                      -- si suppone che il ribaltamento avvenga prima dell'inizio del nuovo anno
                AND   date_trunc('day',dataelaborazione)<=date_trunc('day',siac_t_class.validita_inizio)
                AND   (siac_t_class.validita_fine IS NULL  OR  (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',siac_t_class.validita_fine)))
                AND   siac_t_class.classif_code in (
                                                    --codici del bilancio passato
                                                    SELECT siac_t_class.classif_code
                                                    FROM   siac_t_class
                                                    WHERE
                                                           siac_t_class.data_cancellazione IS NULL
                                                    AND    siac_t_class.validita_fine      IS NOT NULL
                                                    AND    siac_t_class.classif_tipo_id IN (ricorrenteentrataid)
                                                    AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',siac_t_class.validita_fine)
                                                    AND    siac_t_class.ente_proprietario_id = enteproprietarioid
                                                    order by siac_t_class.validita_fine DESC
                                                    limit 1
                                                    )
              );*/

		  --provo a collegare il capitolo con il classificatore equivalente nuovo
          --siac-5297
          -- Sofia 21.11.2017
	      INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
          (
            SELECT bilelemidret,
                   c.classif_id,
                   datainizioval,
                   c.ente_proprietario_id,
                   loginoperazione
            FROM  siac_t_class c ,siac_r_bil_elem_class rprec, siac_t_class cprec
            WHERE
                  rprec.elem_id=elembil.elem_id
            and   cprec.classif_id=rprec.classif_id
            and   cprec.classif_tipo_id =ricorrenteentrataid
            and   rprec.data_cancellazione IS NULL
            and   date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
            and  (date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                  or rprec.validita_fine IS NULL)     -- relazione ad oggi valida
            and   cprec.data_cancellazione is null
            and   date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
			and   c.ente_proprietario_id=cprec.ente_proprietario_id
            and   c.classif_tipo_id=cprec.classif_tipo_id
            and   c.classif_code=cprec.classif_code
            and   c.data_cancellazione is null                                -- cercando un classificatore equivalente aperto su anno succ
            and   date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
            AND   (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                   or c.validita_fine IS NULL)
           );

            GET diagnostics _row_count = row_count;
            IF _row_count <1 THEN
              codresult:=NULL;
              strmessaggio:=strmessaggio
              ||' Inserimento segnalazione mancanza classif.';
              INSERT INTO fase_bil_t_prev_apertura_segnala
                          (
                                      elem_id,
                                      elem_code,
                                      elem_code2,
                                      elem_code3,
                                      bil_id,
                                      fase_bil_elab_id,
                                      segnala_codice,
                                      segnala_desc,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT capitolo.elem_id,
                                        capitolo.elem_code,
                                        capitolo.elem_code2,
                                        capitolo.elem_code3,
                                        capitolo.bil_id,
                                        fasebilelabid,
                                        cl_ricorrente_entrata,
                                        cl_ricorrente_entrata
                                               ||' mancante',
                                        datainizioval,
                                        capitolo.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_bil_elem capitolo
                                 WHERE  capitolo.elem_id=bilelemidret )
              returning   fase_bil_prev_ape_seg_id
              INTO        codresult;

              IF codresult IS NULL THEN
                RAISE
              EXCEPTION
                ' Nessuno inserimento effettuato.';
              END IF;
            END IF;
          END IF;
          -- CL_SIOPE_ENTRATA_TERZO
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemprevtipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_siope_entrata_terzo
          ||'.' ;

          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=elembil.elem_id
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=siopeentratatipoid
          AND      r.data_cancellazione IS NULL
          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',r.validita_inizio)
          AND      (
                            date_trunc('day',dataelaborazione)<=date_trunc('day',r.validita_fine)
                   OR       r.validita_fine IS NULL)
          AND      c.data_cancellazione IS NULL
          /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL) 21.11.2017 Sofia */
          AND      NOT EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class r,
                                     siac_t_class c
                            WHERE    r.elem_id=bilelemidret
                            AND      c.classif_id=r.classif_id
                            AND      c.classif_tipo_id=siopeentratatipoid
                            AND      c.data_cancellazione IS NULL
                            /*
                            AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL) 21.11.2017 Sofia */
                            ORDER BY r.elem_id limit 1)
          ORDER BY r.elem_id limit 1;

          -- JIRA-SIAC-4167 14.11.2016 Sofia
          IF codresult IS NOT NULL THEN
              --provo a collegare il capitolo con il classificatore equivalente nuovo
              --siac-5297
              -- 21.11.2017 Sofia spostato sotto
              /*INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
              (
                SELECT bilelemidret,
                      siac_t_class.classif_id,
                      datainizioval,
                      siac_t_class.ente_proprietario_id,
                      loginoperazione
                FROM  siac_t_class
                WHERE
                      siac_t_class.data_cancellazione IS NULL
                AND   siac_t_class.ente_proprietario_id = enteproprietarioid
                      -- si suppone che il ribaltamento avvenga prima dell'inizio del nuovo anno
                AND   date_trunc('day',dataelaborazione)<=date_trunc('day',siac_t_class.validita_inizio)
                AND   (siac_t_class.validita_fine IS NULL  OR  (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',siac_t_class.validita_fine)))
                AND   siac_t_class.classif_code in (
                                                    --codici del bilancio passato
                                                    SELECT siac_t_class.classif_code
                                                    FROM   siac_t_class
                                                    WHERE
                                                           siac_t_class.data_cancellazione IS NULL
                                                    AND    siac_t_class.validita_fine      IS NOT NULL
                                                    AND    siac_t_class.classif_tipo_id IN (siopeentratatipoid)
                                                    AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',siac_t_class.validita_fine)
                                                    AND    siac_t_class.ente_proprietario_id = enteproprietarioid
                                                    order by siac_t_class.validita_fine DESC
                                                    limit 1
                                                    )
              );*/
		  --provo a collegare il capitolo con il classificatore equivalente nuovo
          --siac-5297
          -- Sofia 21.11.2017
	      INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
          (
            SELECT bilelemidret,
                   c.classif_id,
                   datainizioval,
                   c.ente_proprietario_id,
                   loginoperazione
            FROM  siac_t_class c ,siac_r_bil_elem_class rprec, siac_t_class cprec
            WHERE
                  rprec.elem_id=elembil.elem_id
            and   cprec.classif_id=rprec.classif_id
            and   cprec.classif_tipo_id =siopeentratatipoid
            and   rprec.data_cancellazione IS NULL
            and   date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
            and  (date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                  or rprec.validita_fine IS NULL)     -- relazione ad oggi valida
            and   cprec.data_cancellazione is null
            and   date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
			and   c.ente_proprietario_id=cprec.ente_proprietario_id
            and   c.classif_tipo_id=cprec.classif_tipo_id
            and   c.classif_code=cprec.classif_code
            and   c.data_cancellazione is null                                -- cercando un classificatore equivalente aperto su anno succ
            and   date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
            AND   (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                   or c.validita_fine IS NULL)
           );

            GET diagnostics _row_count = row_count;
            IF _row_count <1 THEN
              codresult:=NULL;
              strmessaggio:=strmessaggio
              ||' Inserimento segnalazione mancanza classif.';
              INSERT INTO fase_bil_t_prev_apertura_segnala
                          (
                                      elem_id,
                                      elem_code,
                                      elem_code2,
                                      elem_code3,
                                      bil_id,
                                      fase_bil_elab_id,
                                      segnala_codice,
                                      segnala_desc,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT capitolo.elem_id,
                                        capitolo.elem_code,
                                        capitolo.elem_code2,
                                        capitolo.elem_code3,
                                        capitolo.bil_id,
                                        fasebilelabid,
                                        cl_siope_entrata_terzo,
                                        cl_siope_entrata_terzo
                                               ||' mancante',
                                        datainizioval,
                                        capitolo.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_bil_elem capitolo
                                 WHERE  capitolo.elem_id=bilelemidret )
              returning   fase_bil_prev_ape_seg_id
              INTO        codresult;

              IF codresult IS NULL THEN
                RAISE
              EXCEPTION
                ' Nessuno inserimento effettuato.';
              END IF;
            END IF;
          END IF;
          -- CL_TRANSAZIONE_UE_ENTRATA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemprevtipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_transazione_ue_entrata
          ||'.' ;

          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=elembil.elem_id
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=transazioneueentrataid
          AND      r.data_cancellazione IS NULL
          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',r.validita_inizio)
          AND      (
                            date_trunc('day',dataelaborazione)<=date_trunc('day',r.validita_fine)
                   OR       r.validita_fine IS NULL)
          AND      c.data_cancellazione IS NULL
          /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL) 21.11.2017 Sofia */
          AND      NOT EXISTS
                   (
                                   SELECT DISTINCT 1
                                   FROM            siac_r_bil_elem_class r,
                                                   siac_t_class c
                                   WHERE           r.elem_id=bilelemidret
                                   AND             c.classif_id=r.classif_id
                                   AND             c.classif_tipo_id=transazioneueentrataid
                                   AND             c.data_cancellazione IS NULL
                                   /*AND             date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                   AND             (
                                                                   date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                   OR              c.validita_fine IS NULL) 21.11.2017 Sofia */)
          ORDER BY r.elem_id limit 1;

          -- JIRA-SIAC-4167 14.11.2016 Sofia
          IF codresult IS NOT NULL THEN
              --provo a collegare il capitolo con il classificatore equivalente nuovo
              --siac-5297
              -- 21.11.2017 Sofia spostato sotto
              /*INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
              (
                SELECT bilelemidret,
                      siac_t_class.classif_id,
                      datainizioval,
                      siac_t_class.ente_proprietario_id,
                      loginoperazione
                FROM  siac_t_class
                WHERE
                      siac_t_class.data_cancellazione IS NULL
                AND   siac_t_class.ente_proprietario_id = enteproprietarioid
                      -- si suppone che il ribaltamento avvenga prima dell'inizio del nuovo anno
                AND   date_trunc('day',dataelaborazione)<=date_trunc('day',siac_t_class.validita_inizio)
                AND   (siac_t_class.validita_fine IS NULL  OR  (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',siac_t_class.validita_fine)))
                AND   siac_t_class.classif_code in (
                                                    --codici del bilancio passato
                                                    SELECT siac_t_class.classif_code
                                                    FROM   siac_t_class
                                                    WHERE
                                                           siac_t_class.data_cancellazione IS NULL
                                                    AND    siac_t_class.validita_fine      IS NOT NULL
                                                    AND    siac_t_class.classif_tipo_id IN (transazioneueentrataid)
                                                    AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',siac_t_class.validita_fine)
                                                    AND    siac_t_class.ente_proprietario_id = enteproprietarioid
                                                    order by siac_t_class.validita_fine DESC
                                                    limit 1
                                                    )
              );*/

		  --provo a collegare il capitolo con il classificatore equivalente nuovo
          --siac-5297
          -- Sofia 21.11.2017
	      INSERT INTO siac_r_bil_elem_class(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
          (
            SELECT bilelemidret,
                   c.classif_id,
                   datainizioval,
                   c.ente_proprietario_id,
                   loginoperazione
            FROM  siac_t_class c ,siac_r_bil_elem_class rprec, siac_t_class cprec
            WHERE
                  rprec.elem_id=elembil.elem_id
            and   cprec.classif_id=rprec.classif_id
            and   cprec.classif_tipo_id =transazioneueentrataid
            and   rprec.data_cancellazione IS NULL
            and   date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
            and  (date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                  or rprec.validita_fine IS NULL)     -- relazione ad oggi valida
            and   cprec.data_cancellazione is null
            and   date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
			and   c.ente_proprietario_id=cprec.ente_proprietario_id
            and   c.classif_tipo_id=cprec.classif_tipo_id
            and   c.classif_code=cprec.classif_code
            and   c.data_cancellazione is null                                -- cercando un classificatore equivalente aperto su anno succ
            and   date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
            AND   (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                   or c.validita_fine IS NULL)
           );

            GET diagnostics _row_count = row_count;
            IF _row_count <1 THEN
              codresult:=NULL;
              strmessaggio:=strmessaggio
              ||' Inserimento segnalazione mancanza classif.';
              INSERT INTO fase_bil_t_prev_apertura_segnala
                          (
                                      elem_id,
                                      elem_code,
                                      elem_code2,
                                      elem_code3,
                                      bil_id,
                                      fase_bil_elab_id,
                                      segnala_codice,
                                      segnala_desc,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT capitolo.elem_id,
                                        capitolo.elem_code,
                                        capitolo.elem_code2,
                                        capitolo.elem_code3,
                                        capitolo.bil_id,
                                        fasebilelabid,
                                        cl_transazione_ue_entrata,
                                        cl_transazione_ue_entrata
                                               ||' mancante',
                                        datainizioval,
                                        capitolo.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_bil_elem capitolo
                                 WHERE  capitolo.elem_id=bilelemidret )
              returning   fase_bil_prev_ape_seg_id
              INTO        codresult;

              IF codresult IS NULL THEN
                RAISE
              EXCEPTION
                ' Nessuno inserimento effettuato.';
              END IF;
            END IF;
          END IF;
        END IF;
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemprevtipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : aggiornamento relazione tra elem_id_gest prec e elem_id_prev nuovo.' ;
        UPDATE fase_bil_t_prev_apertura_str_elem_prev_nuovo
        SET    elem_prev_id=bilelemidret
        WHERE  elem_id=elembil.elem_id
        AND    fase_bil_elab_id=fasebilelabid;

      END LOOP;
      ---------------------------------------
      strmessaggio:='Conclusione inserimento nuove strutture per tipo='
      ||bilelemprevtipo
      ||'.';
      codresult:=NULL;
      INSERT INTO fase_bil_t_elaborazione_log
                  (
                              fase_bil_elab_id,
                              fase_bil_elab_log_operazione,
                              validita_inizio,
                              login_operazione,
                              ente_proprietario_id
                  )
                  VALUES
                  (
                              fasebilelabid,
                              strmessaggio,
                              clock_timestamp(),
                              loginoperazione,
                              enteproprietarioid
                  )
      returning   fase_bil_elab_log_id
      INTO        codresult;

      IF codresult IS NULL THEN
        RAISE
      EXCEPTION
        ' Errore in inserimento LOG.';
      END IF;
    END IF;
    -- verifica apertura con previsione pre-esistente ( rielaborazione )
    IF checkprev=TRUE THEN
      codresult:=NULL;
      strmessaggio:='Verifica esistenza elementi di bilancio di previsione equivalenti da aggiornare da gestione anno prec.';
      SELECT   1
      INTO     codresult
      FROM     fase_bil_t_prev_apertura_str_elem_prev_esiste fase
      WHERE    fase.ente_proprietario_id=enteproprietarioid
      AND      fase.bil_id=bilancioid
      AND      fase.fase_bil_elab_id=fasebilelabid
      AND      fase.data_cancellazione IS NULL
      AND      fase.validita_fine IS NULL
      AND      fase.elem_gest_id IS NOT NULL
      ORDER BY fase.fase_bil_prev_str_esiste_id limit 1;

      IF codresult IS NOT NULL THEN
        -- popolamento tabelle bck per salvataggio precedenti strutture
        codresult:=NULL;
        strmessaggio:='Popolamento backup strutture elementi di bilancio di previsione equivalenti da aggiornare da gestione anno prec - INIZIO';
        INSERT INTO fase_bil_t_elaborazione_log
                    (
                                fase_bil_elab_id,
                                fase_bil_elab_log_operazione,
                                validita_inizio,
                                login_operazione,
                                ente_proprietario_id
                    )
                    VALUES
                    (
                                fasebilelabid,
                                strmessaggio,
                                clock_timestamp(),
                                loginoperazione,
                                enteproprietarioid
                    )
        returning   fase_bil_elab_log_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Errore in inserimento LOG.';
        END IF;
        -- siac_t_bil_elem
        strmessaggio:='Backup vecchia struttura [siac_t_bil_elem] per capitoli di previsione equivalente per nuovo aggiornamento.';
        INSERT INTO bck_fase_bil_t_prev_apertura_bil_elem
                    (
                                elem_gest_id,
                                elem_bck_id,
                                elem_bck_code,
                                elem_bck_code2,
                                elem_bck_code3,
                                elem_bck_desc,
                                elem_bck_desc2,
                                elem_bck_bil_id,
                                elem_bck_id_padre,
                                elem_bck_tipo_id,
                                elem_bck_livello,
                                elem_bck_ordine,
                                elem_bck_data_creazione,
                                elem_bck_data_modifica,
                                elem_bck_login_operazione,
                                elem_bck_validita_inizio,
                                elem_bck_validita_fine,
                                fase_bil_elab_id,
                                ente_proprietario_id,
                                login_operazione,
                                validita_inizio
                    )
                    (
                           SELECT fase.elem_gest_id,
                                  elem.elem_id,
                                  elem.elem_code,
                                  elem.elem_code2,
                                  elem.elem_code3,
                                  elem.elem_desc,
                                  elem.elem_desc2,
                                  elem.bil_id,
                                  elem.elem_id_padre,
                                  elem.elem_tipo_id,
                                  elem.livello,
                                  elem.ordine,
                                  elem.data_creazione,
                                  elem.data_modifica,
                                  elem.login_operazione,
                                  elem.validita_inizio,
                                  elem.validita_fine,
                                  fasebilelabid,
                                  elem.ente_proprietario_id,
                                  loginoperazione,
                                  datainizioval
                           FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase,
                                  siac_t_bil_elem elem
                           WHERE  fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    elem.elem_id=fase.elem_prev_id
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.validita_fine IS NULL
                           AND    fase.elem_gest_id IS NOT NULL );

        codresult:=NULL;
        strmessaggio:=strmessaggio
        ||' Verifica inserimento.';
        SELECT 1
        INTO   codresult
        FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        WHERE  fase.ente_proprietario_id=enteproprietarioid
        AND    fase.bil_id=bilancioid
        AND    fase.fase_bil_elab_id=fasebilelabid
        AND    fase.elem_gest_id IS NOT NULL
        AND    fase.elem_prev_id IS NOT NULL
        AND    fase.data_cancellazione IS NULL
        AND    fase.validita_fine IS NULL
        AND    NOT EXISTS
               (
                      SELECT 1
                      FROM   bck_fase_bil_t_prev_apertura_bil_elem bck
                      WHERE  bck.fase_bil_elab_id=fase.fase_bil_elab_id
                      AND    bck.elem_bck_id=fase.elem_prev_id
                      AND    bck.data_cancellazione IS NULL
                      AND    bck.validita_fine IS NULL);

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Elementi mancanti di backup.';
        END IF;
        --  07.07.2016 Sofia - INIZIO NUOVI BACKUP
        --- insert altri backup
        --  siac_r_bil_elem_stato
        strmessaggio:='Backup vecchia struttura [siac_r_bil_elem_stato] per capitoli di previsione equivalente per nuovo aggiornamento.';
        INSERT INTO bck_fase_bil_t_prev_apertura_bil_elem_stato
                    (
                                elem_bck_id,
                                elem_bck_stato_id,
                                elem_bck_data_creazione,
                                elem_bck_data_modifica,
                                elem_bck_login_operazione,
                                elem_bck_validita_inizio,
                                elem_bck_validita_fine,
                                fase_bil_elab_id,
                                ente_proprietario_id,
                                login_operazione,
                                validita_inizio
                    )
                    (
                           SELECT elem.elem_id,
                                  elem.elem_stato_id,
                                  elem.data_creazione,
                                  elem.data_modifica,
                                  elem.login_operazione,
                                  elem.validita_inizio,
                                  elem.validita_fine,
                                  fasebilelabid,
                                  elem.ente_proprietario_id,
                                  loginoperazione,
                                  datainizioval
                           FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase,
                                  siac_r_bil_elem_stato elem
                           WHERE  fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    elem.elem_id=fase.elem_prev_id
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.validita_fine IS NULL
                           AND    fase.elem_gest_id IS NOT NULL );

        codresult:=NULL;
        strmessaggio:=strmessaggio
        ||' Verifica inserimento.';
        SELECT 1
        INTO   codresult
        FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        WHERE  fase.ente_proprietario_id=enteproprietarioid
        AND    fase.bil_id=bilancioid
        AND    fase.fase_bil_elab_id=fasebilelabid
        AND    fase.elem_gest_id IS NOT NULL
        AND    fase.elem_prev_id IS NOT NULL
        AND    fase.data_cancellazione IS NULL
        AND    fase.validita_fine IS NULL
        AND    NOT EXISTS
               (
                      SELECT 1
                      FROM   bck_fase_bil_t_prev_apertura_bil_elem_stato bck
                      WHERE  bck.fase_bil_elab_id=fase.fase_bil_elab_id
                      AND    bck.elem_bck_id=fase.elem_prev_id
                      AND    bck.data_cancellazione IS NULL
                      AND    bck.validita_fine IS NULL);

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Elementi mancanti di backup.';
        END IF;
        --  siac_r_bil_elem_attr
        strmessaggio:='Backup vecchia struttura [siac_r_bil_elem_attr] per capitoli di previsione equivalente per nuovo aggiornamento.';
        INSERT INTO bck_fase_bil_t_prev_apertura_bil_elem_attr
                    (
                                elem_bck_id,
                                elem_bck_attr_id,
                                elem_bck_tabella_id,
                                elem_bck_boolean,
                                elem_bck_percentuale,
                                elem_bck_testo,
                                elem_bck_numerico,
                                elem_bck_data_creazione,
                                elem_bck_data_modifica,
                                elem_bck_login_operazione,
                                elem_bck_validita_inizio,
                                elem_bck_validita_fine,
                                fase_bil_elab_id,
                                ente_proprietario_id,
                                login_operazione,
                                validita_inizio
                    )
                    (
                           SELECT elem.elem_id,
                                  elem.attr_id,
                                  elem.tabella_id,
                                  elem."boolean",
                                  elem.percentuale,
                                  elem.testo,
                                  elem.numerico,
                                  elem.data_creazione,
                                  elem.data_modifica,
                                  elem.login_operazione,
                                  elem.validita_inizio,
                                  elem.validita_fine,
                                  fasebilelabid,
                                  elem.ente_proprietario_id,
                                  loginoperazione,
                                  datainizioval
                           FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase,
                                  siac_r_bil_elem_attr elem
                           WHERE  fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    elem.elem_id=fase.elem_prev_id
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.validita_fine IS NULL
                           AND    fase.elem_gest_id IS NOT NULL );

        codresult:=NULL;
        strmessaggio:=strmessaggio
        ||' Verifica inserimento.';
        SELECT 1
        INTO   codresult
        FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        WHERE  fase.ente_proprietario_id=enteproprietarioid
        AND    fase.bil_id=bilancioid
        AND    fase.fase_bil_elab_id=fasebilelabid
        AND    fase.elem_gest_id IS NOT NULL
        AND    fase.elem_prev_id IS NOT NULL
        AND    fase.data_cancellazione IS NULL
        AND    fase.validita_fine IS NULL
        AND    NOT EXISTS
               (
                      SELECT 1
                      FROM   bck_fase_bil_t_prev_apertura_bil_elem_attr bck
                      WHERE  bck.fase_bil_elab_id=fase.fase_bil_elab_id
                      AND    bck.elem_bck_id=fase.elem_prev_id
                      AND    bck.data_cancellazione IS NULL
                      AND    bck.validita_fine IS NULL);

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Elementi mancanti di backup.';
        END IF;
        --  siac_r_bil_elem_class
        strmessaggio:='Backup vecchia struttura [siac_r_bil_elem_class] per capitoli di previsione equivalente per nuovo aggiornamento.';
        INSERT INTO bck_fase_bil_t_prev_apertura_bil_elem_class
                    (
                                elem_bck_id,
                                elem_bck_classif_id,
                                elem_bck_data_creazione,
                                elem_bck_data_modifica,
                                elem_bck_login_operazione,
                                elem_bck_validita_inizio,
                                elem_bck_validita_fine,
                                fase_bil_elab_id,
                                ente_proprietario_id,
                                login_operazione,
                                validita_inizio
                    )
                    (
                           SELECT elem.elem_id,
                                  elem.classif_id,
                                  elem.data_creazione,
                                  elem.data_modifica,
                                  elem.login_operazione,
                                  elem.validita_inizio,
                                  elem.validita_fine,
                                  fasebilelabid,
                                  elem.ente_proprietario_id,
                                  loginoperazione,
                                  datainizioval
                           FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase,
                                  siac_r_bil_elem_class elem
                           WHERE  fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    elem.elem_id=fase.elem_prev_id
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.validita_fine IS NULL
                           AND    fase.elem_gest_id IS NOT NULL );

        codresult:=NULL;
        strmessaggio:=strmessaggio
        ||' Verifica inserimento.';
        SELECT 1
        INTO   codresult
        FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        WHERE  fase.ente_proprietario_id=enteproprietarioid
        AND    fase.bil_id=bilancioid
        AND    fase.fase_bil_elab_id=fasebilelabid
        AND    fase.elem_gest_id IS NOT NULL
        AND    fase.elem_prev_id IS NOT NULL
        AND    fase.data_cancellazione IS NULL
        AND    fase.validita_fine IS NULL
        AND    NOT EXISTS
               (
                      SELECT 1
                      FROM   bck_fase_bil_t_prev_apertura_bil_elem_class bck
                      WHERE  bck.fase_bil_elab_id=fase.fase_bil_elab_id
                      AND    bck.elem_bck_id=fase.elem_prev_id
                      AND    bck.data_cancellazione IS NULL
                      AND    bck.validita_fine IS NULL);

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Elementi mancanti di backup.';
        END IF;
        --  siac_r_bil_elem_categ
        strmessaggio:='Backup vecchia struttura [siac_r_bil_elem_categoria] per capitoli di previsione equivalente per nuovo aggiornamento.';
        INSERT INTO bck_fase_bil_t_prev_apertura_bil_elem_categ
                    (
                                elem_bck_id,
                                elem_bck_cat_id,
                                elem_bck_data_creazione,
                                elem_bck_data_modifica,
                                elem_bck_login_operazione,
                                elem_bck_validita_inizio,
                                elem_bck_validita_fine,
                                fase_bil_elab_id,
                                ente_proprietario_id,
                                login_operazione,
                                validita_inizio
                    )
                    (
                           SELECT elem.elem_id,
                                  elem.elem_cat_id,
                                  elem.data_creazione,
                                  elem.data_modifica,
                                  elem.login_operazione,
                                  elem.validita_inizio,
                                  elem.validita_fine,
                                  fasebilelabid,
                                  elem.ente_proprietario_id,
                                  loginoperazione,
                                  datainizioval
                           FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase,
                                  siac_r_bil_elem_categoria elem
                           WHERE  fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    elem.elem_id=fase.elem_prev_id
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.validita_fine IS NULL
                           AND    fase.elem_gest_id IS NOT NULL );

        codresult:=NULL;
        strmessaggio:=strmessaggio
        ||' Verifica inserimento.';
        SELECT 1
        INTO   codresult
        FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        WHERE  fase.ente_proprietario_id=enteproprietarioid
        AND    fase.bil_id=bilancioid
        AND    fase.fase_bil_elab_id=fasebilelabid
        AND    fase.elem_gest_id IS NOT NULL
        AND    fase.elem_prev_id IS NOT NULL
        AND    fase.data_cancellazione IS NULL
        AND    fase.validita_fine IS NULL
        AND    NOT EXISTS
               (
                      SELECT 1
                      FROM   bck_fase_bil_t_prev_apertura_bil_elem_categ bck
                      WHERE  bck.fase_bil_elab_id=fase.fase_bil_elab_id
                      AND    bck.elem_bck_id=fase.elem_prev_id
                      AND    bck.data_cancellazione IS NULL
                      AND    bck.validita_fine IS NULL);

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Elementi mancanti di backup.';
        END IF;
        codresult:=NULL;
        strmessaggio:='Popolamento backup strutture elementi di bilancio di previsione equivalenti da aggiornare da gestione anno prec - FINE';
        INSERT INTO fase_bil_t_elaborazione_log
                    (
                                fase_bil_elab_id,
                                fase_bil_elab_log_operazione,
                                validita_inizio,
                                login_operazione,
                                ente_proprietario_id
                    )
                    VALUES
                    (
                                fasebilelabid,
                                strmessaggio,
                                clock_timestamp(),
                                loginoperazione,
                                enteproprietarioid
                    )
        returning   fase_bil_elab_log_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Errore in inserimento LOG.';
        END IF;
        --  07.07.2016 Sofia - FINE NUOVI BACKUP
        codresult:=NULL;
        strmessaggio:='Inizio cancellazione logica vecchie strutture previsione esistenti.';
        INSERT INTO fase_bil_t_elaborazione_log
                    (
                                fase_bil_elab_id,
                                fase_bil_elab_log_operazione,
                                validita_inizio,
                                login_operazione,
                                ente_proprietario_id
                    )
                    VALUES
                    (
                                fasebilelabid,
                                strmessaggio,
                                clock_timestamp(),
                                loginoperazione,
                                enteproprietarioid
                    )
        returning   fase_bil_elab_log_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Errore in inserimento LOG.';
        END IF;
        -- cancellazione logica precendenti relazioni
        /* 07.07.2016 Sofia - queste sono stata inserite in backup
        -- siac_r_bil_elem_stato
        strMessaggio:='Cancellazione logica vecchie strutture previsione esistenti [siac_r_bil_elem_stato].';
        update siac_r_bil_elem_stato canc  set
        data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
        where canc.ente_proprietario_id=enteProprietarioId
        and   canc.data_cancellazione is null and canc.validita_fine is null
        and   exists (select 1 from fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        where fase.ente_proprietario_id=enteProprietarioId
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
        and   fase.elem_prev_id=canc.elem_id
        and   fase.elem_gest_id is not null
        and   fase.data_cancellazione is null
        order by fase.fase_bil_prev_str_esiste_id
        limit 1);
        -- siac_r_bil_elem_categoria
        strMessaggio:='Cancellazione logica vecchie strutture previsione esistenti [siac_r_bil_elem_categoria].';
        update  siac_r_bil_elem_categoria canc set
        data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
        where canc.ente_proprietario_id=enteProprietarioId
        and   canc.data_cancellazione is null and canc.validita_fine is null
        and   exists (select 1 from fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        where fase.ente_proprietario_id=enteProprietarioId
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
        and   fase.elem_prev_id=canc.elem_id
        and   fase.elem_gest_id is not null
        and   fase.data_cancellazione is null
        order by fase.fase_bil_prev_str_esiste_id
        limit 1);
        -- siac_r_bil_elem_attr
        strMessaggio:='Cancellazione logica vecchie strutture previsione esistenti [siac_r_bil_elem_attr].';
        update siac_r_bil_elem_attr canc set
        data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
        where canc.ente_proprietario_id=enteProprietarioId
        and   canc.attr_id!=flagPerMemAttrId -- esclusione FLAG_PER_MEM
        and   canc.data_cancellazione is null and canc.validita_fine is null
        and   exists (select 1 from fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        where fase.ente_proprietario_id=enteProprietarioId
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
        and   fase.elem_prev_id=canc.elem_id
        and   fase.elem_gest_id is not null
        and   fase.data_cancellazione is null
        order by fase.fase_bil_prev_str_esiste_id
        limit 1);
        -- siac_r_bil_elem_class
        strMessaggio:='Cancellazione logica vecchie strutture previsione esistenti [siac_r_bil_elem_class].';
        update siac_r_bil_elem_class canc set
        data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
        where canc.ente_proprietario_id=enteProprietarioId
        and   canc.data_cancellazione is null and canc.validita_fine is null
        and   exists (select 1 from fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        where fase.ente_proprietario_id=enteProprietarioId
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
        and   fase.elem_prev_id=canc.elem_id
        and   fase.elem_gest_id is not null
        and   fase.data_cancellazione is null
        order by fase.fase_bil_prev_str_esiste_id
        limit 1);
        */
        -- siac_r_vincolo_bil_elem
        --strMessaggio:='Cancellazione logica vecchie strutture previsione esistenti [siac_r_vincolo_bil_elem].';
        /*
        update siac_r_vincolo_bil_elem canc set
        data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
        where canc.ente_proprietario_id=enteProprietarioId
        and   canc.data_cancellazione is null and canc.validita_fine is null
        and   exists (select 1 from  fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        where fase.ente_proprietario_id=enteProprietarioId
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
        and   fase.elem_prev_id=canc.elem_id
        and   fase.elem_gest_id is not null
        and   fase.data_cancellazione is null
        order by fase.fase_bil_prev_str_esiste_id
        limit 1);
        */
        -- siac_r_bil_elem_atto_legge
        strmessaggio:='Cancellazione logica vecchie strutture previsione esistenti [siac_r_bil_elem_atto_legge].';
        UPDATE siac_r_bil_elem_atto_legge canc
        SET    data_cancellazione=now(),
               validita_fine=now(),
               login_operazione=loginoperazione
        WHERE  canc.ente_proprietario_id=enteproprietarioid
        AND    canc.data_cancellazione IS NULL
        AND    canc.validita_fine IS NULL
        AND    EXISTS
               (
                        SELECT   1
                        FROM     fase_bil_t_prev_apertura_str_elem_prev_esiste fase
                        WHERE    fase.ente_proprietario_id=enteproprietarioid
                        AND      fase.bil_id=bilancioid
                        AND      fase.fase_bil_elab_id=fasebilelabid
                        AND      fase.elem_prev_id=canc.elem_id
                        AND      fase.elem_gest_id IS NOT NULL
                        AND      fase.data_cancellazione IS NULL
                        ORDER BY fase.fase_bil_prev_str_esiste_id limit 1);

        -- siac_r_bil_elem_rel_tempo
        strmessaggio:='Cancellazione logica vecchie strutture previsione esistenti [siac_r_bil_elem_rel_tempo].';
        UPDATE siac_r_bil_elem_rel_tempo canc
        SET    data_cancellazione=now(),
               validita_fine=now(),
               login_operazione=loginoperazione
        WHERE  canc.ente_proprietario_id=enteproprietarioid
        AND    canc.data_cancellazione IS NULL
        AND    canc.validita_fine IS NULL
        AND    EXISTS
               (
                        SELECT   1
                        FROM     fase_bil_t_prev_apertura_str_elem_prev_esiste fase
                        WHERE    fase.ente_proprietario_id=enteproprietarioid
                        AND      fase.bil_id=bilancioid
                        AND      fase.fase_bil_elab_id=fasebilelabid
                        AND      fase.elem_prev_id=canc.elem_id
                        AND      fase.elem_gest_id IS NOT NULL
                        AND      fase.data_cancellazione IS NULL
                        ORDER BY fase.fase_bil_prev_str_esiste_id limit 1);

        codresult:=NULL;
        strmessaggio:='Fine cancellazione logica vecchie strutture previsione esistenti.';
        INSERT INTO fase_bil_t_elaborazione_log
                    (
                                fase_bil_elab_id,
                                fase_bil_elab_log_operazione,
                                validita_inizio,
                                login_operazione,
                                ente_proprietario_id
                    )
                    VALUES
                    (
                                fasebilelabid,
                                strmessaggio,
                                clock_timestamp(),
                                loginoperazione,
                                enteproprietarioid
                    )
        returning   fase_bil_elab_log_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Errore in inserimento LOG.';
        END IF;
        -- cancellazione logica precendenti relazioni
        -- aggiornamento siac_t_bil_elem
        strmessaggio:='Aggiornamento nuova struttura previsione esistente da gestione equivalente anno precedente [siac_t_bil_elem].';
        UPDATE siac_t_bil_elem prev
        SET
               (
                      elem_desc,
                      elem_desc2,
                      ordine,
                      livello,
                      login_operazione
               )
               = (gest.elem_desc,gest.elem_desc2,gest.ordine,gest.livello,loginoperazione)
        FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase,
               siac_t_bil_elem gest
        WHERE  prev.ente_proprietario_id=enteproprietarioid
        AND    prev.elem_id=fase.elem_prev_id
        AND    gest.elem_id=fase.elem_gest_id
        AND    fase.ente_proprietario_id=enteproprietarioid
        AND    fase.bil_id=bilancioid
        AND    fase.fase_bil_elab_id=fasebilelabid
        AND    fase.data_cancellazione IS NULL
        AND    fase.elem_gest_id IS NOT NULL;

        codresult:=NULL;
        INSERT INTO fase_bil_t_elaborazione_log
                    (
                                fase_bil_elab_id,
                                fase_bil_elab_log_operazione,
                                validita_inizio,
                                login_operazione,
                                ente_proprietario_id
                    )
                    VALUES
                    (
                                fasebilelabid,
                                strmessaggio,
                                clock_timestamp(),
                                loginoperazione,
                                enteproprietarioid
                    )
        returning   fase_bil_elab_log_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Errore in inserimento LOG.';
        END IF;
        codresult:=NULL;
        strmessaggio:='Inizio inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente.';
        INSERT INTO fase_bil_t_elaborazione_log
                    (
                                fase_bil_elab_id,
                                fase_bil_elab_log_operazione,
                                validita_inizio,
                                login_operazione,
                                ente_proprietario_id
                    )
                    VALUES
                    (
                                fasebilelabid,
                                strmessaggio,
                                clock_timestamp(),
                                loginoperazione,
                                enteproprietarioid
                    )
        returning   fase_bil_elab_log_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Errore in inserimento LOG.';
        END IF;
        -- inserimento nuove relazioni
        -- siac_r_bil_elem_stato
        strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_stato].';
        UPDATE siac_r_bil_elem_stato statocor
        SET    elem_stato_id=stato.elem_stato_id,
               data_modifica=datainizioval,
               login_operazione=loginoperazione
        FROM   siac_r_bil_elem_stato stato,
               fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        WHERE  statocor.elem_id=fase.elem_prev_id
        AND    fase.ente_proprietario_id=enteproprietarioid
        AND    fase.bil_id=bilancioid
        AND    fase.fase_bil_elab_id=fasebilelabid
        AND    fase.data_cancellazione IS NULL
        AND    fase.elem_gest_id IS NOT NULL
        AND    stato.elem_id=fase.elem_gest_id
        AND    stato.data_cancellazione IS NULL
        AND    stato.validita_fine IS NULL
        AND    statocor.data_cancellazione IS NULL
        AND    statocor.validita_fine IS NULL;

        /*     sostituito con update sopra
        strMessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_stato].';
        insert into siac_r_bil_elem_stato
        (elem_id,elem_stato_id,validita_inizio,ente_proprietario_id,login_operazione)
        (select fase.elem_prev_id, stato.elem_stato_id , dataInizioVal, stato.ente_proprietario_id, loginOperazione
        from siac_r_bil_elem_stato stato, fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        where stato.elem_id=fase.elem_gest_id
        and   fase.ente_proprietario_id=enteProprietarioid
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
        and   fase.data_cancellazione is null
        and   fase.elem_gest_id is not null
        and   stato.data_cancellazione is null
        and   stato.validita_fine is null); */
        -- aggiungere delete
        -- siac_r_bil_elem_attr
        -- 07.07.2016 Sofia
        strmessaggio:='Cancellazione per reinserimento strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_attr].';
        DELETE
        FROM   siac_r_bil_elem_attr attr
        USING  fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        WHERE  attr.elem_id=fase.elem_prev_id
        AND    attr.attr_id!=flagpermemattrid
        AND    fase.ente_proprietario_id=enteproprietarioid
        AND    fase.bil_id=bilancioid
        AND    fase.fase_bil_elab_id=fasebilelabid
        AND    fase.data_cancellazione IS NULL
        AND    fase.elem_gest_id IS NOT NULL
        AND    attr.data_cancellazione IS NULL
        AND    attr.validita_fine IS NULL;

        strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_attr].';
        INSERT INTO siac_r_bil_elem_attr
                    (
                                elem_id,
                                attr_id,
                                tabella_id,
                                BOOLEAN,
                                percentuale,
                                testo,
                                numerico,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT fase.elem_prev_id,
                                  attr.attr_id ,
                                  attr.tabella_id,
                                  attr.BOOLEAN,
                                  attr.percentuale,
                                  attr.testo,
                                  attr.numerico,
                                  datainizioval,
                                  attr.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_attr attr,
                                  fase_bil_t_prev_apertura_str_elem_prev_esiste fase
                           WHERE  attr.elem_id=fase.elem_gest_id
                           AND    fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.elem_gest_id IS NOT NULL
                           AND    fase.elem_prev_id IS NOT NULL
                           AND    attr.data_cancellazione IS NULL
                           AND    attr.validita_fine IS NULL);

        -- aggiungere delete
        -- siac_r_bil_elem_categoria
        -- 07.07.2016 Sofia
        strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_categoria].';
        UPDATE siac_r_bil_elem_categoria catcor
        SET    elem_cat_id=cat.elem_cat_id,
               data_modifica=datainizioval,
               login_operazione=loginoperazione
        FROM   siac_r_bil_elem_categoria cat,
               fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        WHERE  catcor.elem_id=fase.elem_prev_id
        AND    fase.ente_proprietario_id=enteproprietarioid
        AND    fase.bil_id=bilancioid
        AND    fase.fase_bil_elab_id=fasebilelabid
        AND    fase.data_cancellazione IS NULL
        AND    fase.elem_gest_id IS NOT NULL
        AND    cat.elem_id=fase.elem_gest_id
        AND    cat.data_cancellazione IS NULL
        AND    cat.validita_fine IS NULL
        AND    catcor.data_cancellazione IS NULL
        AND    catcor.validita_fine IS NULL;

        /* 07.07.2016 Sofia  - sostituito con update sopra
        strMessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_categoria].';
        insert into siac_r_bil_elem_categoria
        (elem_id,elem_cat_id,validita_inizio,ente_proprietario_id,login_operazione)
        (select fase.elem_prev_id, cat.elem_cat_id , dataInizioVal, cat.ente_proprietario_id, loginOperazione
        from siac_r_bil_elem_categoria cat, fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        where cat.elem_id=fase.elem_gest_id
        and   fase.ente_proprietario_id=enteProprietarioid
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
        and   fase.data_cancellazione is null
        and   fase.elem_gest_id is not null
        and   cat.data_cancellazione is null
        and   cat.validita_fine is null); */
        -- aggiungere delete
        -- siac_r_bil_elem_class
        -- 07.07.2016 Sofia
        strmessaggio:='Cancellazione per reinserimento strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].';
        DELETE
        FROM   siac_r_bil_elem_class class
        USING  fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        WHERE  class.elem_id=fase.elem_prev_id
        AND    fase.ente_proprietario_id=enteproprietarioid
        AND    fase.bil_id=bilancioid
        AND    fase.fase_bil_elab_id=fasebilelabid
        AND    fase.data_cancellazione IS NULL
        AND    fase.elem_gest_id IS NOT NULL
        AND    fase.elem_prev_id IS NOT NULL
        AND    class.data_cancellazione IS NULL
        AND    class.validita_fine IS NULL;

        strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].';
                /**  14.11.2016 Sofia JIRA-SIAC-4167
        insert into siac_r_bil_elem_class
        (elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
        (select fase.elem_prev_id, class.classif_id , dataInizioVal, class.ente_proprietario_id, loginOperazione
        from siac_r_bil_elem_class class, fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        where class.elem_id=fase.elem_gest_id
        and   fase.ente_proprietario_id=enteProprietarioid
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
        and   fase.data_cancellazione is null
        and   fase.elem_gest_id is not null
        and   fase.elem_prev_id is not null
        and   class.data_cancellazione is null
        and   class.validita_fine is null); **/
        -- JIRA-SIAC-4167 14.11.2016 Sofia
        INSERT INTO siac_r_bil_elem_class
                    (
                                elem_id,
                                classif_id,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT fase.elem_prev_id,
                                  class.classif_id ,
                                  datainizioval,
                                  class.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_class class,
                                  fase_bil_t_prev_apertura_str_elem_prev_esiste fase,
                                  siac_t_class c
                           WHERE  class.elem_id=fase.elem_gest_id
                           AND    fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    c.classif_id=class.classif_id
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.elem_gest_id IS NOT NULL
                           AND    fase.elem_prev_id IS NOT NULL
                           AND    class.data_cancellazione IS NULL
                           AND    class.validita_fine IS NULL
                           AND    c.data_cancellazione IS NULL
                           AND    date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                           AND    (
                                         date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                  OR     c.validita_fine IS NULL));

        -- 22.11.2017 Sofia - siac-5297
        strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Classificazioni equivalenti anno nuovo.';
		INSERT INTO siac_r_bil_elem_class
                    (
                                elem_id,
                                classif_id,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT fase.elem_prev_id,
                                  cnew.classif_id ,
                                  datainizioval,
                                  class.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_class class,
                                  fase_bil_t_prev_apertura_str_elem_prev_esiste fase,
                                  siac_t_class c, siac_t_class cnew
                           WHERE  class.elem_id=fase.elem_gest_id
                           AND    fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    c.classif_id=class.classif_id
                           and    cnew.ente_proprietario_id=c.ente_proprietario_id
                           and    cnew.classif_tipo_id=c.classif_tipo_id
                           and    cnew.classif_code=c.classif_code
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.elem_gest_id IS NOT NULL
                           AND    fase.elem_prev_id IS NOT NULL
                           AND    class.data_cancellazione IS NULL
                           AND    class.validita_fine IS NULL
                           AND    c.data_cancellazione IS NULL
                           and    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',c.validita_fine)
						   and    cnew.data_cancellazione is null
          				   and    date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',cnew.validita_inizio)
				           AND    (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',cnew.validita_fine)
				                   or cnew.validita_fine IS NULL)
                           and    not exists
                           (
                           select 1
                           from siac_r_bil_elem_class r1,siac_t_class c1
                           where r1.elem_id=fase.elem_prev_id
                           and   c1.classif_id=r1.classif_id
                           and   c1.classif_tipo_id=c.classif_tipo_id
                           and   r1.data_cancellazione  is null
                           and   r1.validita_fine is null
                           )
           			 );




        /*
        -- siac_r_vincolo_bil_elem
        strMessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_vincolo_bil_elem].';
        insert into siac_r_vincolo_bil_elem
        ( elem_id,vincolo_id, validita_inizio,ente_proprietario_id,login_operazione)
        (select fase.elem_prev_id, v.vincolo_id, dataInizioVal,v.ente_proprietario_id, loginOperazione
        from siac_r_vincolo_bil_elem v,fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        where v.elem_id=fase.elem_gest_id
        and   fase.ente_proprietario_id=enteProprietarioid
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
        and   fase.data_cancellazione is null
        and   fase.elem_gest_id is not null
        and   v.data_cancellazione is null
        and   v.validita_fine is null
        );
        */
        -- siac_r_bil_elem_atto_legge
        strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_atto_legge].';
        INSERT INTO siac_r_bil_elem_atto_legge
                    (
                                elem_id,
                                attolegge_id,
                                descrizione,
                                gerarchia,
                                finanziamento_inizio,
                                finanziamento_fine,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT fase.elem_prev_id,
                                  v.attolegge_id,
                                  v.descrizione,
                                  v.gerarchia,
                                  v.finanziamento_inizio,
                                  v.finanziamento_fine,
                                  datainizioval,
                                  v.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_atto_legge v,
                                  fase_bil_t_prev_apertura_str_elem_prev_esiste fase
                           WHERE  v.elem_id=fase.elem_gest_id
                           AND    fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.elem_gest_id IS NOT NULL
                           AND    v.data_cancellazione IS NULL
                           AND    v.validita_fine IS NULL );

        -- siac_r_bil_elem_rel_tempo
        strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_rel_tempo].';
		-- siac-8383 Sofia 22.10.2021 
		-- elem_id_old deve essere ricalcolato in base al suo stesso equivalente di gestione in annobilancio-1
		-- attenzione anche al controllo dopo la insert o da commentare o da correggere		
        /*INSERT INTO siac_r_bil_elem_rel_tempo
                    (
                                elem_id,
                                elem_id_old,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT fase.elem_prev_id,
                                  v.elem_id_old,
                                  datainizioval,
                                  v.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_rel_tempo v,
                                  fase_bil_t_prev_apertura_str_elem_prev_esiste fase
                           WHERE  v.elem_id=fase.elem_gest_id
                           AND    fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.elem_gest_id IS NOT NULL
                           AND    v.data_cancellazione IS NULL
                           AND    v.validita_fine IS NULL );
        */
        -- siac-8383 Sofia 22.10.2021                  
        INSERT INTO siac_r_bil_elem_rel_tempo
                    (
                                elem_id,
                                elem_id_old,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT fase.elem_prev_id,
                                  enew.elem_id,
                                  datainizioval,
                                  v.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_rel_tempo v,
                                  fase_bil_t_prev_apertura_str_elem_prev_esiste fase,
                                  siac_t_bil_elem e,siac_t_bil_elem enew
                           WHERE  v.elem_id=fase.elem_gest_id
                           AND    fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    e.elem_id=v.elem_id_old
                           AND    enew.bil_id=bilancioprecid
                           AND    enew.elem_tipo_id=bilelemgesttipoid
                           AND    enew.elem_code=e.elem_code
                           AND    enew.elem_code2=e.elem_code2
                           AND    enew.elem_code3=e.elem_code3
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.elem_gest_id IS NOT NULL
                           AND    v.data_cancellazione IS NULL
                           AND    v.validita_fine IS NULL 
                           AND    enew.data_cancellazione IS null
                  );                   
        codresult:=NULL;
        strmessaggio:='Fine inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente.';
        INSERT INTO fase_bil_t_elaborazione_log
                    (
                                fase_bil_elab_id,
                                fase_bil_elab_log_operazione,
                                validita_inizio,
                                login_operazione,
                                ente_proprietario_id
                    )
                    VALUES
                    (
                                fasebilelabid,
                                strmessaggio,
                                clock_timestamp(),
                                loginoperazione,
                                enteproprietarioid
                    )
        returning   fase_bil_elab_log_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Errore in inserimento LOG.';
        END IF;
        -- verifica dati inseriti
        codresult:=NULL;
        strmessaggio:='Inizio verifica inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente.';
        INSERT INTO fase_bil_t_elaborazione_log
                    (
                                fase_bil_elab_id,
                                fase_bil_elab_log_operazione,
                                validita_inizio,
                                login_operazione,
                                ente_proprietario_id
                    )
                    VALUES
                    (
                                fasebilelabid,
                                strmessaggio,
                                clock_timestamp(),
                                loginoperazione,
                                enteproprietarioid
                    )
        returning   fase_bil_elab_log_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Errore in inserimento LOG.';
        END IF;
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_stato].Verifica esistenza relazione stati.';
        SELECT   1
        INTO     codresult
        FROM     fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        WHERE    fase.ente_proprietario_id=enteproprietarioid
        AND      fase.bil_id=bilancioid
        AND      fase.fase_bil_elab_id=fasebilelabid
        AND      fase.elem_gest_id IS NOT NULL
        AND      fase.data_cancellazione IS NULL
        AND      NOT EXISTS
                 (
                          SELECT   1
                          FROM     siac_r_bil_elem_stato stato
                          WHERE    stato.elem_id=fase.elem_prev_id
                          AND      stato.data_cancellazione IS NULL
                          AND      stato.validita_fine IS NULL
                          ORDER BY stato.elem_id limit 1)
        ORDER BY fase.fase_bil_prev_str_esiste_id limit 1;

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Elementi di bilancio assenti di relazione.';
        END IF;
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_attr].Verifica esistenza attributi.';
        SELECT   1
        INTO     codresult
        FROM     fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        WHERE    fase.ente_proprietario_id=enteproprietarioid
        AND      fase.bil_id=bilancioid
        AND      fase.fase_bil_elab_id=fasebilelabid
        AND      fase.elem_gest_id IS NOT NULL
        AND      fase.data_cancellazione IS NULL
        AND      NOT EXISTS
                 (
                          SELECT   1
                          FROM     siac_r_bil_elem_attr attr
                          WHERE    attr.elem_id=fase.elem_prev_id
                          AND      attr.data_cancellazione IS NULL
                          AND      attr.validita_fine IS NULL
                          ORDER BY attr.elem_id limit 1)
        ORDER BY fase.fase_bil_prev_str_esiste_id limit 1;

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Elementi di bilancio assenti di relazione.';
        END IF;
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni classificatori.';
        SELECT   1
        INTO     codresult
        FROM     fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        WHERE    fase.ente_proprietario_id=enteproprietarioid
        AND      fase.bil_id=bilancioid
        AND      fase.fase_bil_elab_id=fasebilelabid
        AND      fase.elem_gest_id IS NOT NULL
        AND      fase.data_cancellazione IS NULL
        AND      NOT EXISTS
                 (
                          SELECT   1
                          FROM     siac_r_bil_elem_class class
                          WHERE    class.elem_id=fase.elem_prev_id
                          AND      class.data_cancellazione IS NULL
                          AND      class.validita_fine IS NULL
                          ORDER BY class.elem_id limit 1)
        ORDER BY fase.fase_bil_prev_str_esiste_id limit 1;

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Elementi di bilancio assenti di relazione.';
        END IF;
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_categoria].Verifica esistenza relazioni categoria.';
        SELECT DISTINCT 1
        INTO            codresult
        FROM            fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        WHERE           fase.ente_proprietario_id=enteproprietarioid
        AND             fase.bil_id=bilancioid
        AND             fase.fase_bil_elab_id=fasebilelabid
        AND             fase.elem_gest_id IS NOT NULL
        AND             fase.data_cancellazione IS NULL
        AND             NOT EXISTS
                        (
                               SELECT 1
                               FROM   siac_r_bil_elem_categoria class
                               WHERE  class.elem_id=fase.elem_prev_id
                               AND    class.data_cancellazione IS NULL
                               AND    class.validita_fine IS NULL);

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Elementi di bilancio assenti di relazione.';
        END IF;
        -- verifica se esistono elementi senza classificatori obbligatori (**)
        -- controlli sui classificatori obbligatori
        -- CL_CDC, CL_CDR
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni struttura amministrativa.';
        /** 14.11.2016 Sofia JIRA-SIAC-4167
        select 1 into codResult
        from fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        where fase.ente_proprietario_id=enteProprietarioId
        and   fase.elem_gest_id is not null
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
        and   fase.data_cancellazione is null
        and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        where class.elem_id=fase.elem_prev_id
        and   c.classif_id=class.classif_id
        and   c.classif_tipo_id in (cdcTipoId, cdrTipoId)
        and   class.data_cancellazione is null
        and   class.validita_fine is null
        and   c.data_cancellazione is null
        and   c.validita_fine is null
        order by class.elem_id
        limit 1)
        order by fase.fase_bil_prev_str_esiste_id
        limit 1;
        if codResult is not null then
        raise exception ' Elementi di bilancio assenti di relazione.';
        end if;
        **/
        SELECT   1
        INTO     codresult
        FROM     fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        WHERE    fase.ente_proprietario_id=enteproprietarioid
        AND      fase.elem_gest_id IS NOT NULL
        AND      fase.bil_id=bilancioid
        AND      fase.fase_bil_elab_id=fasebilelabid
        AND      fase.data_cancellazione IS NULL
        AND      NOT EXISTS
                 (
                          SELECT   1
                          FROM     siac_r_bil_elem_class class ,
                                   siac_t_class c
                          WHERE    class.elem_id=fase.elem_prev_id
                          AND      c.classif_id=class.classif_id
                          AND      c.classif_tipo_id IN (cdctipoid,
                                                         cdrtipoid)
                          AND      class.data_cancellazione IS NULL
                          AND      class.validita_fine IS NULL
                          AND      c.data_cancellazione IS NULL
                         /* AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                          AND      (
                                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                   OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                          ORDER BY class.elem_id limit 1)
        ORDER BY fase.fase_bil_prev_str_esiste_id limit 1;

        IF codresult IS NOT NULL THEN
          codresult:=NULL;
          strmessaggio:=strmessaggio
          ||' Inserimento segnalazione mancanza classif.';
          INSERT INTO fase_bil_t_prev_apertura_segnala
                      (
                                  elem_id,
                                  elem_code,
                                  elem_code2,
                                  elem_code3,
                                  bil_id,
                                  fase_bil_elab_id,
                                  segnala_codice,
                                  segnala_desc,
                                  validita_inizio,
                                  ente_proprietario_id,
                                  login_operazione
                      )
                      (
                             SELECT fase.elem_prev_id,
                                    fase.elem_code,
                                    fase.elem_code2,
                                    fase.elem_code3,
                                    fase.bil_id,
                                    fasebilelabid,
                                    'SAC',
                                    'SAC'
                                           ||' mancante',
                                    datainizioval,
                                    fase.ente_proprietario_id,
                                    loginoperazione
                             FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase
                             WHERE  fase.ente_proprietario_id=enteproprietarioid
                             AND    fase.elem_gest_id IS NOT NULL
                             AND    fase.bil_id=bilancioid
                             AND    fase.fase_bil_elab_id=fasebilelabid
                             AND    fase.data_cancellazione IS NULL
                             AND    NOT EXISTS
                                    (
                                             SELECT   1
                                             FROM     siac_r_bil_elem_class class ,
                                                      siac_t_class c
                                             WHERE    class.elem_id=fase.elem_prev_id
                                             AND      c.classif_id=class.classif_id
                                             AND      c.classif_tipo_id IN (cdctipoid,
                                                                            cdrtipoid)
                                             AND      class.data_cancellazione IS NULL
                                             AND      class.validita_fine IS NULL
                                             AND      c.data_cancellazione IS NULL
                                             /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                             AND      (
                                                               date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                      OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                                             ORDER BY class.elem_id limit 1) );

        END IF;
        -- CL_PDC_FIN_QUINTO, CL_PDC_FIN_QUARTO
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
        ||cl_pdc_fin_quarto
        ||' '
        ||cl_pdc_fin_quinto
        ||'.';
        -- Il classificatore deve essere obbligatoriamente presente solo se capitolo gestione STD
        /** 14.11.2016 Sofia JIRA-SIAC-4167
        select 1 into codResult
        from fase_bil_t_prev_apertura_str_elem_prev_esiste fase
        , siac_r_bil_elem_categoria rcat
        , siac_d_bil_elem_categoria cat
        where fase.ente_proprietario_id=enteProprietarioId
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
        and   fase.elem_gest_id is not null
        and   fase.data_cancellazione is null
        and   rcat.elem_id=fase.elem_prev_id
        and   rcat.data_cancellazione is null
        and   rcat.validita_fine is null
        and   rcat.elem_cat_id=cat.elem_cat_id
        and   cat.elem_cat_code = CATEGORIA_STD
        and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        where class.elem_id=fase.elem_prev_id
        and   c.classif_id=class.classif_id
        and   c.classif_tipo_id in (pdcFinIVId, pdcFinVId)
        and   class.data_cancellazione is null
        and   class.validita_fine is null
        and   c.data_cancellazione is null
        and   c.validita_fine is null
        order by class.elem_id
        limit 1)
        order by fase.fase_bil_prev_str_esiste_id
        limit 1;
        if codResult is not null then
        raise exception ' Elementi di bilancio assenti di relazione.';
        end if;
        **/
        SELECT   1
        INTO     codresult
        FROM     fase_bil_t_prev_apertura_str_elem_prev_esiste fase ,
                 siac_r_bil_elem_categoria rcat ,
                 siac_d_bil_elem_categoria cat
        WHERE    fase.ente_proprietario_id=enteproprietarioid
        AND      fase.bil_id=bilancioid
        AND      fase.fase_bil_elab_id=fasebilelabid
        AND      fase.elem_gest_id IS NOT NULL
        AND      fase.data_cancellazione IS NULL
        AND      rcat.elem_id=fase.elem_prev_id
        AND      rcat.data_cancellazione IS NULL
        AND      rcat.validita_fine IS NULL
        AND      rcat.elem_cat_id=cat.elem_cat_id
        AND      cat.elem_cat_code = categoria_std
        AND      NOT EXISTS
                 (
                          SELECT   1
                          FROM     siac_r_bil_elem_class class ,
                                   siac_t_class c
                          WHERE    class.elem_id=fase.elem_prev_id
                          AND      c.classif_id=class.classif_id
                          AND      c.classif_tipo_id IN (pdcfinivid,
                                                         pdcfinvid)
                          AND      class.data_cancellazione IS NULL
                          AND      class.validita_fine IS NULL
                          AND      c.data_cancellazione IS NULL
                          /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                          AND      (
                                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                   OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                          ORDER BY class.elem_id limit 1)
        ORDER BY fase.fase_bil_prev_str_esiste_id limit 1;

        --      14.11.2016 Sofia JIRA-SIAC-4167
        IF codresult IS NOT NULL THEN
          codresult:=NULL;
          strmessaggio:=strmessaggio
          ||' Inserimento segnalazione mancanza classif.';
          INSERT INTO fase_bil_t_prev_apertura_segnala
                      (
                                  elem_id,
                                  elem_code,
                                  elem_code2,
                                  elem_code3,
                                  bil_id,
                                  fase_bil_elab_id,
                                  segnala_codice,
                                  segnala_desc,
                                  validita_inizio,
                                  ente_proprietario_id,
                                  login_operazione
                      )
                      (
                             SELECT fase.elem_prev_id,
                                    fase.elem_code,
                                    fase.elem_code2,
                                    fase.elem_code3,
                                    fase.bil_id,
                                    fasebilelabid,
                                    'PDCFIN',
                                    'PDCFIN'
                                           ||' mancante',
                                    datainizioval,
                                    fase.ente_proprietario_id,
                                    loginoperazione
                             FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase
                             WHERE  fase.ente_proprietario_id=enteproprietarioid
                             AND    fase.elem_gest_id IS NOT NULL
                             AND    fase.bil_id=bilancioid
                             AND    fase.fase_bil_elab_id=fasebilelabid
                             AND    fase.data_cancellazione IS NULL
                             AND    NOT EXISTS
                                    (
                                             SELECT   1
                                             FROM     siac_r_bil_elem_class class ,
                                                      siac_t_class c
                                             WHERE    class.elem_id=fase.elem_prev_id
                                             AND      c.classif_id=class.classif_id
                                             AND      c.classif_tipo_id IN (pdcfinivid,
                                                                            pdcfinvid)
                                             AND      class.data_cancellazione IS NULL
                                             AND      class.validita_fine IS NULL
                                             AND      c.data_cancellazione IS NULL
                                            /* AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                             AND      (
                                                               date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                      OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                                             ORDER BY class.elem_id limit 1) );

        END IF;
        /*
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_vincolo_bil_elem].Verifica esistenza relazioni vincoli.';
        select 1 into codResult
        from fase_bil_t_prev_apertura_str_elem_prev_esiste fase,
        siac_r_vincolo_bil_elem v
        where fase.ente_proprietario_id=enteProprietarioId
        and   v.elem_id=fase.elem_gest_id
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
        and   fase.elem_gest_id is not null
        and   fase.data_cancellazione is null
        and   v.data_cancellazione is null
        and   v.validita_fine is null
        and   not exists ( select 1 from siac_r_vincolo_bil_elem class
        where class.elem_id=fase.elem_prev_id
        and   class.data_cancellazione is null
        and   class.validita_fine is null
        order by class.elem_id
        limit 1
        )
        order by fase.fase_bil_prev_str_esiste_id
        limit 1;
        if codResult is not null then
        raise exception ' Elementi di bilancio assenti di relazione.';
        end if;
        */
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_atto_legge].Verifica esistenza relazioni atti di legge.';
        SELECT   1
        INTO     codresult
        FROM     fase_bil_t_prev_apertura_str_elem_prev_esiste fase,
                 siac_r_bil_elem_atto_legge v
        WHERE    fase.ente_proprietario_id=enteproprietarioid
        AND      v.elem_id=fase.elem_gest_id
        AND      fase.bil_id=bilancioid
        AND      fase.fase_bil_elab_id=fasebilelabid
        AND      fase.elem_gest_id IS NOT NULL
        AND      fase.data_cancellazione IS NULL
        AND      v.data_cancellazione IS NULL
        AND      v.validita_fine IS NULL
        AND      NOT EXISTS
                 (
                          SELECT   1
                          FROM     siac_r_bil_elem_atto_legge class
                          WHERE    class.elem_id=fase.elem_prev_id
                          AND      class.data_cancellazione IS NULL
                          AND      class.validita_fine IS NULL
                          ORDER BY class.elem_id limit 1)
        ORDER BY fase.fase_bil_prev_str_esiste_id limit 1;

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Elementi di bilancio assenti di relazione.';
        END IF;
       
        /* -- siac-8383 Sofia 22.10.2021 il capitolo equivalente potrebbe anche non esistere
         codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_rel_tempo].Verifica esistenza relazioni.';
        SELECT   1
        INTO     codresult
        FROM     fase_bil_t_prev_apertura_str_elem_prev_esiste fase,
                 siac_r_bil_elem_rel_tempo v
        WHERE    fase.ente_proprietario_id=enteproprietarioid
        AND      v.elem_id=fase.elem_gest_id
        AND      fase.bil_id=bilancioid
        AND      fase.fase_bil_elab_id=fasebilelabid
        AND      fase.elem_gest_id IS NOT NULL
        AND      fase.data_cancellazione IS NULL
        AND      v.data_cancellazione IS NULL
        AND      v.validita_fine IS NULL
        AND      NOT EXISTS
                 (
                          SELECT   1
                          FROM     siac_r_bil_elem_rel_tempo class
                          WHERE    class.elem_id=fase.elem_prev_id
                          AND      class.data_cancellazione IS NULL
                          AND      class.validita_fine IS NULL
                          ORDER BY class.elem_id limit 1)
        ORDER BY fase.fase_bil_prev_str_esiste_id limit 1;

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Elementi di bilancio assenti di relazione.';
        END IF;*/
        IF euelemtipo=tipo_elem_eu THEN
          -- Classificatore necessario solo per capitolo di categoria STD
          -- CL_PROGRAMMA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_programma
          ||'.';
          /** 14.11.2016 Sofia JIRA-SIAC-4167
          select 1 into codResult
          from fase_bil_t_prev_apertura_str_elem_prev_esiste fase, siac_r_bil_elem_categoria rcat, siac_d_bil_elem_categoria cat
          where fase.ente_proprietario_id=enteProprietarioId
          and   fase.bil_id=bilancioId
          and   fase.fase_bil_elab_id=faseBilElabId
          and   fase.elem_gest_id is not null
          and   fase.data_cancellazione is null
          and   rcat.elem_id=fase.elem_prev_id
          and   rcat.data_cancellazione is null
          and   rcat.validita_fine is null
          and   rcat.elem_cat_id=cat.elem_cat_id
          and   cat.elem_cat_code = CATEGORIA_STD
          and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
          where class.elem_id=fase.elem_prev_id
          and   c.classif_id=class.classif_id
          and   c.classif_tipo_id=programmaTipoId
          and   class.data_cancellazione is null
          and   class.validita_fine is null
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          limit 1)
          limit 1;
          if codResult is not null then
          raise exception ' Elementi di bilancio assenti di relazione.';
          end if; **/
          -- 14.11.2016 Sofia JIRA-SIAC-4167
          SELECT 1
          INTO   codresult
          FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase,
                 siac_r_bil_elem_categoria rcat,
                 siac_d_bil_elem_categoria cat
          WHERE  fase.ente_proprietario_id=enteproprietarioid
          AND    fase.bil_id=bilancioid
          AND    fase.fase_bil_elab_id=fasebilelabid
          AND    fase.elem_gest_id IS NOT NULL
          AND    fase.data_cancellazione IS NULL
          AND    rcat.elem_id=fase.elem_prev_id
          AND    rcat.data_cancellazione IS NULL
          AND    rcat.validita_fine IS NULL
          AND    rcat.elem_cat_id=cat.elem_cat_id
          AND    cat.elem_cat_code = categoria_std
          AND    NOT EXISTS
                 (
                        SELECT 1
                        FROM   siac_r_bil_elem_class class ,
                               siac_t_class c
                        WHERE  class.elem_id=fase.elem_prev_id
                        AND    c.classif_id=class.classif_id
                        AND    c.classif_tipo_id=programmatipoid
                        AND    class.data_cancellazione IS NULL
                        AND    class.validita_fine IS NULL
                        AND    c.data_cancellazione IS NULL
                        /*AND    date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                        AND    (
                                      date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                               OR     c.validita_fine IS NULL) limit 1 22.11.2017 Sofia siac-5297 */) limit 1;

          --        14.11.2016 Sofia JIRA-SIAC-4167
          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prev_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_programma,
                                      cl_programma
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.elem_gest_id IS NOT NULL
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.data_cancellazione IS NULL
                               AND    NOT EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_prev_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id =programmatipoid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)22.11.2017 Sofia siac-5297  */
                                               ORDER BY class.elem_id limit 1) );

          END IF;
          -- Classificatore necessario solo per capitolo di categoria STD
          -- CL_MACROAGGREGATO
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_macroaggregato
          ||'.';
          /** 14.11.2016 Sofia JIRA-SIAC-4167
          select 1 into codResult
          from fase_bil_t_prev_apertura_str_elem_prev_esiste fase
          , siac_r_bil_elem_categoria rcat
          , siac_d_bil_elem_categoria cat
          where fase.ente_proprietario_id=enteProprietarioId
          and   fase.bil_id=bilancioId
          and   fase.fase_bil_elab_id=faseBilElabId
          and   fase.elem_gest_id is not null
          and   fase.data_cancellazione is null
          and   rcat.elem_id=fase.elem_prev_id
          and   rcat.data_cancellazione is null
          and   rcat.validita_fine is null
          and   rcat.elem_cat_id=cat.elem_cat_id
          and   cat.elem_cat_code = CATEGORIA_STD
          and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
          where class.elem_id=fase.elem_prev_id
          and   c.classif_tipo_id=macroAggrTipoId
          and   class.data_cancellazione is null
          and   class.validita_fine is null
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          order by class.elem_id
          limit 1)
          order by fase.fase_bil_prev_str_esiste_id
          limit 1;
          if codResult is not null then
          raise exception ' Elementi di bilancio assenti di relazione.';
          end if; **/
          -- 14.11.2016 Sofia JIRA-SIAC-4167
          SELECT   1
          INTO     codresult
          FROM     fase_bil_t_prev_apertura_str_elem_prev_esiste fase ,
                   siac_r_bil_elem_categoria rcat ,
                   siac_d_bil_elem_categoria cat
          WHERE    fase.ente_proprietario_id=enteproprietarioid
          AND      fase.bil_id=bilancioid
          AND      fase.fase_bil_elab_id=fasebilelabid
          AND      fase.elem_gest_id IS NOT NULL
          AND      fase.data_cancellazione IS NULL
          AND      rcat.elem_id=fase.elem_prev_id
          AND      rcat.data_cancellazione IS NULL
          AND      rcat.validita_fine IS NULL
          AND      rcat.elem_cat_id=cat.elem_cat_id
          AND      cat.elem_cat_code = categoria_std
          AND      NOT EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_prev_id
                            AND      c.classif_tipo_id=macroaggrtipoid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                            ORDER BY class.elem_id limit 1)
          ORDER BY fase.fase_bil_prev_str_esiste_id limit 1;

          -- 14.11.2016 Sofia JIRA-SIAC-4167
          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prev_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_macroaggregato,
                                      cl_macroaggregato
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.elem_gest_id IS NOT NULL
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.data_cancellazione IS NULL
                               AND    NOT EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_prev_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id =macroaggrtipoid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                              /* AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)22.11.2017 Sofia siac-5297  */
                                               ORDER BY class.elem_id limit 1) );

          END IF;
          -- CL_COFOG
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_cofog
          ||'.';
          /** 14.11.2016 Sofia JIRA-SIAC-4167
          select 1 into codResult
          from fase_bil_t_prev_apertura_str_elem_prev_esiste fase
          where fase.ente_proprietario_id=enteProprietarioId
          and   fase.bil_id=bilancioId
          and   fase.fase_bil_elab_id=faseBilElabId
          and   fase.elem_gest_id is not null
          and   fase.data_cancellazione is null
          -- Classificatore definito in gestione deve essere stato ribaltato su previsione
          and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
          where class.elem_id=fase.elem_gest_id
          and   c.classif_id=class.classif_id
          and   c.classif_tipo_id=cofogTipoId
          and   class.data_cancellazione is null
          and   class.validita_fine is null
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          order by class.elem_id
          limit 1)
          and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
          where class.elem_id=fase.elem_prev_id
          and   c.classif_id=class.classif_id
          and   c.classif_tipo_id=cofogTipoId
          and   class.data_cancellazione is null
          and   class.validita_fine is null
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          order by class.elem_id
          limit 1)
          order by fase.fase_bil_prev_str_esiste_id
          limit 1;
          if codResult is not null then
          raise exception ' Elementi di bilancio assenti di relazione.';
          end if;
          **/
          --- 14.11.2016 Sofia JIRA-SIAC-4167
          SELECT   1
          INTO     codresult
          FROM     fase_bil_t_prev_apertura_str_elem_prev_esiste fase
          WHERE    fase.ente_proprietario_id=enteproprietarioid
          AND      fase.bil_id=bilancioid
          AND      fase.fase_bil_elab_id=fasebilelabid
          AND      fase.elem_gest_id IS NOT NULL
          AND      fase.data_cancellazione IS NULL
                   -- Classificatore definito in gestione deve essere stato ribaltato su previsione
          AND      EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_gest_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=cofogtipoid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                           /* AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL)22.11.2017 Sofia siac-5297 */
                            ORDER BY class.elem_id limit 1)
          AND      NOT EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_prev_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=cofogtipoid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                            ORDER BY class.elem_id limit 1)
          ORDER BY fase.fase_bil_prev_str_esiste_id limit 1;

          --- 14.11.2016 Sofia JIRA-SIAC-4167
          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prev_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_cofog,
                                      cl_cofog
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.elem_gest_id IS NOT NULL
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.data_cancellazione IS NULL
                               AND    EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_gest_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=cofogtipoid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                                               ORDER BY class.elem_id limit 1)
                               AND    NOT EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_prev_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=cofogtipoid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)
                                               ORDER BY class.elem_id limit 1 22.11.2017 Sofia siac-5297 */
                                        )
                          );

          END IF;
          -- CL_RICORRENTE_SPESA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_ricorrente_spesa
          ||'.';
          /** 14.11.2016 Sofia JIRA-SIAC-4167
          select  1 into codResult
          from fase_bil_t_prev_apertura_str_elem_prev_esiste fase
          where fase.ente_proprietario_id=enteProprietarioId
          and   fase.bil_id=bilancioId
          and   fase.fase_bil_elab_id=faseBilElabId
          and   fase.elem_gest_id is not null
          and   fase.data_cancellazione is null
          -- Classificatore definito in gestione deve essere stato ribaltato su previsione
          and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
          where class.elem_id=fase.elem_gest_id
          and   c.classif_id=class.classif_id
          and   c.classif_tipo_id=ricorrenteSpesaId
          and   class.data_cancellazione is null
          and   class.validita_fine is null
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          order by class.elem_id
          limit 1)
          and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
          where class.elem_id=fase.elem_prev_id
          and   c.classif_id=class.classif_id
          and   c.classif_tipo_id=ricorrenteSpesaId
          and   class.data_cancellazione is null
          and   class.validita_fine is null
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          order by class.elem_id
          limit 1)
          order by fase.fase_bil_prev_str_esiste_id
          limit 1;
          if codResult is not null then
          raise exception ' Elementi di bilancio assenti di relazione.';
          end if;
          **/
          -- 14.11.2016 Sofia JIRA-SIAC-4167
          SELECT   1
          INTO     codresult
          FROM     fase_bil_t_prev_apertura_str_elem_prev_esiste fase
          WHERE    fase.ente_proprietario_id=enteproprietarioid
          AND      fase.bil_id=bilancioid
          AND      fase.fase_bil_elab_id=fasebilelabid
          AND      fase.elem_gest_id IS NOT NULL
          AND      fase.data_cancellazione IS NULL
                   -- Classificatore definito in gestione deve essere stato ribaltato su previsione
          AND      EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_gest_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=ricorrentespesaid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                            ORDER BY class.elem_id limit 1)
          AND      NOT EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_prev_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=ricorrentespesaid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                            ORDER BY class.elem_id limit 1)
          ORDER BY fase.fase_bil_prev_str_esiste_id limit 1;

          --  14.11.2016 Sofia JIRA-SIAC-4167
          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prev_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_ricorrente_spesa,
                                      cl_ricorrente_spesa
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.elem_gest_id IS NOT NULL
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.data_cancellazione IS NULL
                               AND    EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_gest_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=ricorrentespesaid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                              /* AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                                               ORDER BY class.elem_id limit 1)
                               AND    NOT EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_prev_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=ricorrentespesaid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                                               ORDER BY class.elem_id limit 1) );

          END IF;
          -- CL_SIOPE_SPESA_TERZO
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_siope_spesa_terzo
          ||'.';
          /** 14.11.2016 Sofia JIRA-SIAC-4167
          select  1 into codResult
          from fase_bil_t_prev_apertura_str_elem_prev_esiste fase
          where fase.ente_proprietario_id=enteProprietarioId
          and   fase.bil_id=bilancioId
          and   fase.fase_bil_elab_id=faseBilElabId
          and   fase.elem_gest_id is not null
          and   fase.data_cancellazione is null
          and exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
          where class.elem_id=fase.elem_gest_id
          and   c.classif_id=class.classif_id
          and   c.classif_tipo_id=siopeSpesaTipoId
          and   class.data_cancellazione is null
          and   class.validita_fine is null
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          order by class.elem_id
          limit 1)
          and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
          where class.elem_id=fase.elem_prev_id
          and   c.classif_id=class.classif_id
          and   c.classif_tipo_id=siopeSpesaTipoId
          and   class.data_cancellazione is null
          and   class.validita_fine is null
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          order by class.elem_id
          limit 1)
          order by fase.fase_bil_prev_str_esiste_id
          limit 1;
          if codResult is not null then
          raise exception ' Elementi di bilancio assenti di relazione.';
          end if; **/
          -- 14.11.2016 Sofia JIRA-SIAC-4167
          SELECT   1
          INTO     codresult
          FROM     fase_bil_t_prev_apertura_str_elem_prev_esiste fase
          WHERE    fase.ente_proprietario_id=enteproprietarioid
          AND      fase.bil_id=bilancioid
          AND      fase.fase_bil_elab_id=fasebilelabid
          AND      fase.elem_gest_id IS NOT NULL
          AND      fase.data_cancellazione IS NULL
          AND      EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_gest_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=siopespesatipoid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                            ORDER BY class.elem_id limit 1)
          AND      NOT EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_prev_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=siopespesatipoid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                            ORDER BY class.elem_id limit 1)
          ORDER BY fase.fase_bil_prev_str_esiste_id limit 1;

          -- 14.11.2016 Sofia JIRA-SIAC-4167
          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prev_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_siope_spesa_terzo,
                                      cl_siope_spesa_terzo
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.elem_gest_id IS NOT NULL
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.data_cancellazione IS NULL
                               AND    EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_gest_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=siopespesatipoid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                                               ORDER BY class.elem_id limit 1)
                               AND    NOT EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_prev_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=siopespesatipoid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                              /* AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                                               ORDER BY class.elem_id limit 1) );

          END IF;
          -- CL_TRANSAZIONE_UE_SPESA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_transazione_ue_spesa
          ||'.';
          /** 14.11.2016 Sofia JIRA-SIAC-4167
          select  1 into codResult
          from fase_bil_t_prev_apertura_str_elem_prev_esiste fase
          where fase.ente_proprietario_id=enteProprietarioId
          and   fase.bil_id=bilancioId
          and   fase.fase_bil_elab_id=faseBilElabId
          and   fase.elem_gest_id is not null
          and   fase.data_cancellazione is null
          -- Classificatore definito in gestione deve essere stato ribaltato su previsione
          and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
          where class.elem_id=fase.elem_gest_id
          and   c.classif_id=class.classif_id
          and   c.classif_tipo_id=transazioneUeSpesaId
          and   class.data_cancellazione is null
          and   class.validita_fine is null
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          order by class.elem_id
          limit 1)
          and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
          where class.elem_id=fase.elem_prev_id
          and   c.classif_id=class.classif_id
          and   c.classif_tipo_id=transazioneUeSpesaId
          and   class.data_cancellazione is null
          and   class.validita_fine is null
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          order by class.elem_id
          limit 1)
          order by fase.fase_bil_prev_str_esiste_id
          limit 1;
          if codResult is not null then
          raise exception ' Elementi di bilancio assenti di relazione.';
          end if; **/
          -- 14.11.2016 Sofia JIRA-SIAC-4167
          SELECT   1
          INTO     codresult
          FROM     fase_bil_t_prev_apertura_str_elem_prev_esiste fase
          WHERE    fase.ente_proprietario_id=enteproprietarioid
          AND      fase.bil_id=bilancioid
          AND      fase.fase_bil_elab_id=fasebilelabid
          AND      fase.elem_gest_id IS NOT NULL
          AND      fase.data_cancellazione IS NULL
                   -- Classificatore definito in gestione deve essere stato ribaltato su previsione
          AND      EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_gest_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=transazioneuespesaid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                            ORDER BY class.elem_id limit 1)
          AND      NOT EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_prev_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=transazioneuespesaid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL)22.11.2017 Sofia siac-5297  */
                            ORDER BY class.elem_id limit 1)
          ORDER BY fase.fase_bil_prev_str_esiste_id limit 1;

          -- 14.11.2016 Sofia JIRA-SIAC-4167
          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prev_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_transazione_ue_spesa,
                                      cl_transazione_ue_spesa
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.elem_gest_id IS NOT NULL
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.data_cancellazione IS NULL
                               AND    EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_gest_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=transazioneuespesaid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                              /* AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                                               ORDER BY class.elem_id limit 1)
                               AND    NOT EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_prev_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=transazioneuespesaid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                                               ORDER BY class.elem_id limit 1) );

          END IF;
        ELSE
          -- CL_CATEGORIA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_categoria
          ||'.';
          -- Classificatore deve essere obbligatoriamente presente solo se capitolo STD
          /**   14.11.2016 Sofia JIRA-SIAC-4167
          select distinct 1 into codResult
          from fase_bil_t_prev_apertura_str_elem_prev_esiste fase, siac_r_bil_elem_categoria rcat, siac_d_bil_elem_categoria cat
          where fase.ente_proprietario_id=enteProprietarioId
          and   fase.bil_id=bilancioId
          and   fase.fase_bil_elab_id=faseBilElabId
          and   fase.elem_gest_id is not null
          and   fase.data_cancellazione is null
          and   rcat.elem_id=fase.elem_prev_id
          and   rcat.data_cancellazione is null
          and   rcat.validita_fine is null
          and   rcat.elem_cat_id=cat.elem_cat_id
          and   cat.elem_cat_code = CATEGORIA_STD
          and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
          where class.elem_id=fase.elem_prev_id
          and   c.classif_id=class.classif_id
          and   c.classif_tipo_id=categoriaTipoId
          and   class.data_cancellazione is null
          and   class.validita_fine is null
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          limit 1);
          if codResult is not null then
          raise exception ' Elementi di bilancio assenti di relazione.';
          end if;
          **/
          -- 14.11.2016 Sofia JIRA-SIAC-4167
          SELECT DISTINCT 1
          INTO            codresult
          FROM            fase_bil_t_prev_apertura_str_elem_prev_esiste fase,
                          siac_r_bil_elem_categoria rcat,
                          siac_d_bil_elem_categoria cat
          WHERE           fase.ente_proprietario_id=enteproprietarioid
          AND             fase.bil_id=bilancioid
          AND             fase.fase_bil_elab_id=fasebilelabid
          AND             fase.elem_gest_id IS NOT NULL
          AND             fase.data_cancellazione IS NULL
          AND             rcat.elem_id=fase.elem_prev_id
          AND             rcat.data_cancellazione IS NULL
          AND             rcat.validita_fine IS NULL
          AND             rcat.elem_cat_id=cat.elem_cat_id
          AND             cat.elem_cat_code = categoria_std
          AND             NOT EXISTS
                          (
                                 SELECT 1
                                 FROM   siac_r_bil_elem_class class ,
                                        siac_t_class c
                                 WHERE  class.elem_id=fase.elem_prev_id
                                 AND    c.classif_id=class.classif_id
                                 AND    c.classif_tipo_id=categoriatipoid
                                 AND    class.data_cancellazione IS NULL
                                 AND    class.validita_fine IS NULL
                                 AND    c.data_cancellazione IS NULL
                                 /*AND    date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                 AND    (
                                               date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                        OR     c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */limit 1);

          -- 14.11.2016 Sofia JIRA-SIAC-4167
          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prev_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_categoria,
                                      cl_categoria
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.elem_gest_id IS NOT NULL
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.data_cancellazione IS NULL
                               AND    NOT EXISTS
                                      (
                                             SELECT 1
                                             FROM   siac_r_bil_elem_class class ,
                                                    siac_t_class c
                                             WHERE  class.elem_id=fase.elem_prev_id
                                             AND    c.classif_id=class.classif_id
                                             AND    c.classif_tipo_id=categoriatipoid
                                             AND    class.data_cancellazione IS NULL
                                             AND    class.validita_fine IS NULL
                                             AND    c.data_cancellazione IS NULL
                                             /*AND    date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                             AND    (
                                                           date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                    OR     c.validita_fine IS NULL) limit 122.11.2017 Sofia siac-5297 */) );

          END IF;
          -- CL_RICORRENTE_ENTRATA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_ricorrente_entrata
          ||'.';
          /** 14.11.2016 Sofia JIRA-SIAC-4167
          select  1 into codResult
          from fase_bil_t_prev_apertura_str_elem_prev_esiste fase
          where fase.ente_proprietario_id=enteProprietarioId
          and   fase.bil_id=bilancioId
          and   fase.fase_bil_elab_id=faseBilElabId
          and   fase.elem_gest_id is not null
          and   fase.data_cancellazione is null
          -- Classificatore definito in previsione deve essere stato ribaltato su gestione
          and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
          where class.elem_id=fase.elem_gest_id
          and   c.classif_id=class.classif_id
          and   c.classif_tipo_id=ricorrenteEntrataId
          and   class.data_cancellazione is null
          and   class.validita_fine is null
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          order by class.elem_id
          limit 1)
          and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
          where class.elem_id=fase.elem_prev_id
          and   c.classif_id=class.classif_id
          and   c.classif_tipo_id=ricorrenteEntrataId
          and   class.data_cancellazione is null
          and   class.validita_fine is null
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          order by class.elem_id
          limit 1)
          order by fase.fase_bil_prev_str_esiste_id
          limit 1;
          if codResult is not null then
          raise exception ' Elementi di bilancio assenti di relazione.';
          end if;
          **/
          -- 14.11.2016 Sofia JIRA-SIAC-4167
          SELECT   1
          INTO     codresult
          FROM     fase_bil_t_prev_apertura_str_elem_prev_esiste fase
          WHERE    fase.ente_proprietario_id=enteproprietarioid
          AND      fase.bil_id=bilancioid
          AND      fase.fase_bil_elab_id=fasebilelabid
          AND      fase.elem_gest_id IS NOT NULL
          AND      fase.data_cancellazione IS NULL
                   -- Classificatore definito in previsione deve essere stato ribaltato su gestione
          AND      EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_gest_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=ricorrenteentrataid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                            ORDER BY class.elem_id limit 1)
          AND      NOT EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_prev_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=ricorrenteentrataid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                            ORDER BY class.elem_id limit 1)
          ORDER BY fase.fase_bil_prev_str_esiste_id limit 1;

          -- 14.11.2016 Sofia JIRA-SIAC-4167
          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prev_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_ricorrente_entrata,
                                      cl_ricorrente_entrata
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.elem_gest_id IS NOT NULL
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.data_cancellazione IS NULL
                               AND    EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_gest_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=ricorrenteentrataid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                                               ORDER BY class.elem_id limit 1)
                               AND    NOT EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_prev_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=ricorrenteentrataid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                              /* AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                                               ORDER BY class.elem_id limit 1) );

          END IF;
          -- CL_SIOPE_ENTRATA_TERZO
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_siope_entrata_terzo
          ||'.';
          /** 14.11.2016 Sofia JIRA-SIAC-4167
          select  1 into codResult
          from fase_bil_t_prev_apertura_str_elem_prev_esiste fase
          where fase.ente_proprietario_id=enteProprietarioId
          and   fase.bil_id=bilancioId
          and   fase.fase_bil_elab_id=faseBilElabId
          and   fase.elem_gest_id is not null
          and   fase.data_cancellazione is null
          and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
          where class.elem_id=fase.elem_gest_id
          and   c.classif_id=class.classif_id
          and   c.classif_tipo_id=siopeEntrataTipoId
          and   class.data_cancellazione is null
          and   class.validita_fine is null
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          order by class.elem_id
          limit 1)
          and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
          where class.elem_id=fase.elem_prev_id
          and   c.classif_id=class.classif_id
          and   c.classif_tipo_id=siopeEntrataTipoId
          and   class.data_cancellazione is null
          and   class.validita_fine is null
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          order by class.elem_id
          limit 1)
          order by fase.fase_bil_prev_str_esiste_id
          limit 1;
          if codResult is not null then
          raise exception ' Elementi di bilancio assenti di relazione.';
          end if;
          **/
          -- 14.11.2016 Sofia JIRA-SIAC-4167
          SELECT   1
          INTO     codresult
          FROM     fase_bil_t_prev_apertura_str_elem_prev_esiste fase
          WHERE    fase.ente_proprietario_id=enteproprietarioid
          AND      fase.bil_id=bilancioid
          AND      fase.fase_bil_elab_id=fasebilelabid
          AND      fase.elem_gest_id IS NOT NULL
          AND      fase.data_cancellazione IS NULL
          AND      EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_gest_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=siopeentratatipoid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                            ORDER BY class.elem_id limit 1)
          AND      NOT EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_prev_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=siopeentratatipoid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                            ORDER BY class.elem_id limit 1)
          ORDER BY fase.fase_bil_prev_str_esiste_id limit 1;

          -- 14.11.2016 Sofia JIRA-SIAC-4167
          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prev_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_siope_entrata_terzo,
                                      cl_siope_entrata_terzo
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.elem_gest_id IS NOT NULL
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.data_cancellazione IS NULL
                               AND    EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_gest_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=siopeentratatipoid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                                               ORDER BY class.elem_id limit 1)
                               AND    NOT EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_prev_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=siopeentratatipoid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                              /* AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                                               ORDER BY class.elem_id limit 1) );

          END IF;
          -- CL_TRANSAZIONE_UE_ENTRATA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_transazione_ue_entrata
          ||'.';

          SELECT   1
          INTO     codresult
          FROM     fase_bil_t_prev_apertura_str_elem_prev_esiste fase
          WHERE    fase.ente_proprietario_id=enteproprietarioid
          AND      fase.bil_id=bilancioid
          AND      fase.fase_bil_elab_id=fasebilelabid
          AND      fase.elem_gest_id IS NOT NULL
          AND      fase.data_cancellazione IS NULL
                   -- Classificatore definito in gestione deve essere stato ribaltato su previsione
          AND      EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_gest_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=transazioneueentrataid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                            ORDER BY class.elem_id limit 1)
          AND      NOT EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_prev_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=transazioneueentrataid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL)  22.11.2017 Sofia siac-5297 */
                            ORDER BY class.elem_id limit 1)
          ORDER BY fase.fase_bil_prev_str_esiste_id limit 1;

          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prev_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_transazione_ue_entrata,
                                      cl_transazione_ue_entrata
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_prev_apertura_str_elem_prev_esiste fase
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.elem_gest_id IS NOT NULL
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.data_cancellazione IS NULL
                               AND    EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_gest_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=transazioneueentrataid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                              /* AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                                               ORDER BY class.elem_id limit 1)
                               AND    NOT EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_prev_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=transazioneueentrataid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL) 22.11.2017 Sofia siac-5297 */
                                               ORDER BY class.elem_id limit 1) );

          END IF;
        END IF;
        codresult:=NULL;
        strmessaggio:='Fine verifica inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente.';
        INSERT INTO fase_bil_t_elaborazione_log
                    (
                                fase_bil_elab_id,
                                fase_bil_elab_log_operazione,
                                validita_inizio,
                                login_operazione,
                                ente_proprietario_id
                    )
                    VALUES
                    (
                                fasebilelabid,
                                strmessaggio,
                                clock_timestamp(),
                                loginoperazione,
                                enteproprietarioid
                    )
        returning   fase_bil_elab_log_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Errore in inserimento LOG.';
        END IF;
      END IF;
    END IF;
    strmessaggio:='Aggiornamento fase elaborazione [fase_bil_t_elaborazione].';
    UPDATE fase_bil_t_elaborazione
    SET    fase_bil_elab_esito='IN2',
           fase_bil_elab_esito_msg='ELABORAZIONE FASE BILANCIO '
                  ||ape_prev_da_gest
                  ||' IN CORSO : AGGIORNAMENTO STRUTTURE COMPLETATO.'
    WHERE  fase_bil_elab_id=fasebilelabid;

    codresult:=NULL;
    INSERT INTO fase_bil_t_elaborazione_log
                (
                            fase_bil_elab_id,
                            fase_bil_elab_log_operazione,
                            validita_inizio,
                            login_operazione,
                            ente_proprietario_id
                )
                VALUES
                (
                            fasebilelabid,
                            strmessaggio,
                            clock_timestamp(),
                            loginoperazione,
                            enteproprietarioid
                )
    returning   fase_bil_elab_log_id
    INTO        codresult;

    IF codresult IS NULL THEN
      RAISE
    EXCEPTION
      ' Errore in inserimento LOG.';
    END IF;
    fasebilelabidret:= fasebilelabid;
    messaggiorisultato:=strmessaggiofinale
    ||'OK .';
    RETURN;
  EXCEPTION
  WHEN raise_exception THEN
    RAISE notice '% % ERRORE : %',strmessaggiofinale,strmessaggio, substring(upper(SQLERRM) FROM 1 FOR 500);
    messaggiorisultato:=strmessaggiofinale
    ||strmessaggio
    ||'ERRORE :'
    ||' '
    ||substring(upper(SQLERRM) FROM 1 FOR 500) ;
    codicerisultato:=-1;
    RETURN;
  WHEN no_data_found THEN
    RAISE notice ' % % Nessun elemento trovato.' ,strmessaggiofinale,strmessaggio;
    messaggiorisultato:=strmessaggiofinale
    ||strmessaggio
    ||'Nessun elemento trovato.' ;
    codicerisultato:=-1;
    RETURN;
  WHEN OTHERS THEN
    RAISE notice '% % Errore DB % %',strmessaggiofinale,strmessaggio,SQLSTATE, substring(upper(SQLERRM) FROM 1 FOR 50);
    messaggiorisultato:=strmessaggiofinale
    ||strmessaggio
    ||'Errore DB '
    ||SQLSTATE
    ||' '
    ||substring(upper(SQLERRM) FROM 1 FOR 50) ;
    codicerisultato:=-1;
    RETURN;
  END;
  $body$ LANGUAGE 'plpgsql' volatile called ON NULL input security invoker cost 100;

CREATE OR replace FUNCTION siac.fnc_fasi_bil_provv_apertura_struttura ( annobilancio      INTEGER,
                                                                  euelemtipo         VARCHAR,
                                                                  bilelemgesttipo    VARCHAR,
                                                                  checkgest          BOOLEAN, -- TRUE: il dato provvisorio esistente viene aggiornato al dato di gestione prec, FALSE il dato provvisorio esistente non viene aggiornato.
                                                                  enteproprietarioid INTEGER,
                                                                  loginoperazione    VARCHAR,
                                                                  dataelaborazione TIMESTAMP,
                                                                  OUT fasebilelabidret   INTEGER,
                                                                  OUT codicerisultato    INTEGER,
                                                                  OUT messaggiorisultato VARCHAR )
returns RECORD
AS
  $body$
  DECLARE
    strmessaggio       VARCHAR(1500):='';
    strmessaggiofinale VARCHAR(1500):='';
    -- tipo periodo annuale
    sy_per_tipo CONSTANT VARCHAR:='SY';
    -- tipo anno ordinario annuale
    bil_ord_tipo     CONSTANT VARCHAR:='BIL_ORD';
    provvisorio_fase CONSTANT VARCHAR:='E';
    elembil RECORD;
    -- CLASSIFICATORI
    cl_macroaggregato         CONSTANT VARCHAR :='MACROAGGREGATO';
    cl_programma              CONSTANT VARCHAR :='PROGRAMMA';
    cl_categoria              CONSTANT VARCHAR :='CATEGORIA';
    cl_cdc                    CONSTANT VARCHAR :='CDC';
    cl_cdr                    CONSTANT VARCHAR :='CDR';
    cl_ricorrente_spesa       CONSTANT VARCHAR:='RICORRENTE_SPESA';
    cl_ricorrente_entrata     CONSTANT VARCHAR:='RICORRENTE_ENTRATA';
    cl_transazione_ue_spesa   CONSTANT VARCHAR:='TRANSAZIONE_UE_SPESA';
    cl_transazione_ue_entrata CONSTANT VARCHAR:='TRANSAZIONE_UE_ENTRATA';
    cl_pdc_fin_quarto         CONSTANT VARCHAR :='PDC_IV';
    cl_pdc_fin_quinto         CONSTANT VARCHAR :='PDC_V';
    cl_cofog                  CONSTANT VARCHAR :='GRUPPO_COFOG';
    cl_siope_spesa_terzo      CONSTANT VARCHAR:='SIOPE_SPESA_I';
    cl_siope_entrata_terzo    CONSTANT VARCHAR:='SIOPE_ENTRATA_I';
    tipo_elab_p               CONSTANT VARCHAR :='P'; -- previsione
    tipo_elab_g               CONSTANT VARCHAR :='G'; -- gestione
    tipo_elem_eu              CONSTANT VARCHAR:='U';
    ape_prov_da_gest          CONSTANT VARCHAR:='APE_PROV';
    macroaggrtipoid           INTEGER:=NULL;
    programmatipoid           INTEGER:=NULL;
    categoriatipoid           INTEGER:=NULL;
    cdctipoid                 INTEGER:=NULL;
    cdrtipoid                 INTEGER:=NULL;
    ricorrentespesaid         INTEGER:=NULL;
    transazioneuespesaid      INTEGER:=NULL;
    ricorrenteentrataid       INTEGER:=NULL;
    transazioneueentrataid    INTEGER:=NULL;
    pdcfinivid                INTEGER:=NULL;
    pdcfinvid                 INTEGER:=NULL;
    cofogtipoid               INTEGER:=NULL;
    siopespesatipoid          INTEGER:=NULL;
    siopeentratatipoid        INTEGER:=NULL;
    bilelemgesttipoid         INTEGER:=NULL;
    bilelemidret              INTEGER:=NULL;
    bilancioid                INTEGER:=NULL;
    periodoid                 INTEGER:=NULL;
    bilancioprecid            INTEGER:=NULL;
    periodoprecid             INTEGER:=NULL;
    codresult                 INTEGER:=NULL;
    datainizioval timestamp:=NULL;
    fasebilelabid    INTEGER:=NULL;
    categoria_std    CONSTANT VARCHAR := 'STD';
    categoriacapcode VARCHAR :=NULL;
    -- 04.11.2016 Anto JIRA-SIAC-4161
    bilelemstatoan CONSTANT VARCHAR:='AN';
    -- 04.11.2016 Anto JIRA-SIAC-4161
    bilelemstatoanid INTEGER:=NULL;
    -- Anto JIRA-SIAC-4167 15.11.2016
    datainiziovalclass timestamp:=NULL;
    datafinevalclass timestamp:=NULL;
    _row_count INTEGER:=0;

    v_dataprimogiornoanno timestamp:=NULL;

  BEGIN
    -- Sofia JIRA-SIAC-4167 15.11.2016
    datainiziovalclass:= clock_timestamp();
    datafinevalclass:= (annobilancio
    ||'-01-01')::timestamp;

     v_dataprimogiornoanno:= (annobilancio
    ||'-01-01')::timestamp;

    messaggiorisultato:='';
    codicerisultato:=0;
    fasebilelabidret:=0;
    datainizioval:= clock_timestamp();
    strmessaggiofinale:='Apertura bilancio provvisorio.Creazione struttura Provvisorio '
    ||bilelemgesttipo
    ||' da Gestione precedente '
    ||bilelemgesttipo
    || '.Anno bilancio='
    ||annobilancio::VARCHAR
    ||'.';
    -- inserimento fase_bil_t_elaborazione
    strmessaggio:='Inserimento fase elaborazione [fase_bil_t_elaborazione].';
    INSERT INTO fase_bil_t_elaborazione
                (
                            fase_bil_elab_esito,
                            fase_bil_elab_esito_msg,
                            fase_bil_elab_tipo_id,
                            ente_proprietario_id,
                            validita_inizio,
                            login_operazione
                )
                (
                       SELECT 'IN',
                              'ELABORAZIONE FASE BILANCIO '
                                     ||ape_prov_da_gest
                                     ||' IN CORSO : CREAZIONE STRUTTURE.',
                              tipo.fase_bil_elab_tipo_id,
                              enteproprietarioid,
                              datainizioval,
                              loginoperazione
                       FROM   fase_bil_d_elaborazione_tipo tipo
                       WHERE  tipo.ente_proprietario_id=enteproprietarioid
                       AND    tipo.fase_bil_elab_tipo_code=ape_prov_da_gest
                       AND    tipo.data_cancellazione IS NULL
                       AND    tipo.validita_fine IS NULL)
    returning   fase_bil_elab_id
    INTO        fasebilelabid;

    IF fasebilelabid IS NULL THEN
      RAISE
    EXCEPTION
      ' Inserimento non effettuato.';
    END IF;
    codresult:=NULL;
    INSERT INTO fase_bil_t_elaborazione_log
                (
                            fase_bil_elab_id,
                            fase_bil_elab_log_operazione,
                            validita_inizio,
                            login_operazione,
                            ente_proprietario_id
                )
                VALUES
                (
                            fasebilelabid,
                            strmessaggio,
                            clock_timestamp(),
                            loginoperazione,
                            enteproprietarioid
                )
    returning   fase_bil_elab_log_id
    INTO        codresult;

    IF codresult IS NULL THEN
      RAISE
    EXCEPTION
      ' Errore in inserimento LOG.';
    END IF;
    -- 04.11.2016 Anto JIRA-SIAC-4161
    strmessaggio:='Lettura bilElemStatoAN  per tipo='
    ||bilelemstatoan
    ||'.';
    SELECT tipo.elem_stato_id
    INTO   strict bilelemstatoanid
    FROM   siac_d_bil_elem_stato tipo
    WHERE  tipo.elem_stato_code=bilelemstatoan
    AND    tipo.ente_proprietario_id=enteproprietarioid
    AND    tipo.data_cancellazione IS NULL
    AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
    AND    (
                  date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
           OR     tipo.validita_fine IS NULL);

    strmessaggio:='Lettura bilElemGestTipo  per tipo='
    ||bilelemgesttipo
    ||'.';
    SELECT tipo.elem_tipo_id
    INTO   strict bilelemgesttipoid
    FROM   siac_d_bil_elem_tipo tipo
    WHERE  tipo.elem_tipo_code=bilelemgesttipo
    AND    tipo.ente_proprietario_id=enteproprietarioid
    AND    tipo.data_cancellazione IS NULL
    AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
    AND    (
                  date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
           OR     tipo.validita_fine IS NULL);

    strmessaggio:='Lettura cdcTipoId  per classif='
    ||cl_cdc
    ||'.';
    SELECT tipo.classif_tipo_id
    INTO   strict cdctipoid
    FROM   siac_d_class_tipo tipo
    WHERE  tipo.ente_proprietario_id=enteproprietarioid
    AND    tipo.classif_tipo_code=cl_cdc
    AND    tipo.data_cancellazione IS NULL
    AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
    AND    (
                  date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
           OR     tipo.validita_fine IS NULL);

    strmessaggio:='Lettura cdcTipoId  per classif='
    ||cl_cdr
    ||'.';
    SELECT tipo.classif_tipo_id
    INTO   strict cdrtipoid
    FROM   siac_d_class_tipo tipo
    WHERE  tipo.ente_proprietario_id=enteproprietarioid
    AND    tipo.classif_tipo_code=cl_cdr
    AND    tipo.data_cancellazione IS NULL
    AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
    AND    (
                  date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
           OR     tipo.validita_fine IS NULL);

    strmessaggio:='Lettura pdcFinIVId  per classif='
    ||cl_pdc_fin_quarto
    ||'.';
    SELECT tipo.classif_tipo_id
    INTO   strict pdcfinivid
    FROM   siac_d_class_tipo tipo
    WHERE  tipo.ente_proprietario_id=enteproprietarioid
    AND    tipo.classif_tipo_code=cl_pdc_fin_quarto
    AND    tipo.data_cancellazione IS NULL
    AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
    AND    (
                  date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
           OR     tipo.validita_fine IS NULL);

    strmessaggio:='Lettura pdcFinVId  per classif='
    ||cl_pdc_fin_quinto
    ||'.';
    SELECT tipo.classif_tipo_id
    INTO   strict pdcfinvid
    FROM   siac_d_class_tipo tipo
    WHERE  tipo.ente_proprietario_id=enteproprietarioid
    AND    tipo.classif_tipo_code=cl_pdc_fin_quinto
    AND    tipo.data_cancellazione IS NULL
    AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
    AND    (
                  date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
           OR     tipo.validita_fine IS NULL);

    IF euelemtipo=tipo_elem_eu THEN
      strmessaggio:='Lettura macroAggrTipoId  per classif='
      ||cl_macroaggregato
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict macroaggrtipoid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_macroaggregato
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

      strmessaggio:='Lettura programmaTipoId  per classif='
      ||cl_programma
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict programmatipoid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_programma
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

      strmessaggio:='Lettura ricorrenteSpesaId  per classif='
      ||cl_ricorrente_spesa
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict ricorrentespesaid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_ricorrente_spesa
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

      strmessaggio:='Lettura transazioneUeSpesaId  per classif='
      ||cl_transazione_ue_spesa
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict transazioneuespesaid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_transazione_ue_spesa
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

      strmessaggio:='Lettura cofogTipoId  per classif='
      ||cl_cofog
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict cofogtipoid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_cofog
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

      strmessaggio:='Lettura siopeSpesaTipoId  per classif='
      ||cl_siope_spesa_terzo
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict siopespesatipoid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_siope_spesa_terzo
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

    ELSE
      strmessaggio:='Lettura categoriaTipoId  per classif='
      ||cl_categoria
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict categoriatipoid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_categoria
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

      strmessaggio:='Lettura ricorrenteEntrataId  per classif='
      ||cl_ricorrente_entrata
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict ricorrenteentrataid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_ricorrente_entrata
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

      strmessaggio:='Lettura transazioneUeEntrataId  per classif='
      ||cl_transazione_ue_entrata
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict transazioneueentrataid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_transazione_ue_entrata
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

      strmessaggio:='Lettura siopeEntrataTipoId  per classif='
      ||cl_siope_entrata_terzo
      ||'.';
      SELECT tipo.classif_tipo_id
      INTO   strict siopeentratatipoid
      FROM   siac_d_class_tipo tipo
      WHERE  tipo.ente_proprietario_id=enteproprietarioid
      AND    tipo.classif_tipo_code=cl_siope_entrata_terzo
      AND    tipo.data_cancellazione IS NULL
      AND    date_trunc('day',dataelaborazione)>=date_trunc('day',tipo.validita_inizio)
      AND    (
                    date_trunc('day',dataelaborazione)<=date_trunc('day',tipo.validita_fine)
             OR     tipo.validita_fine IS NULL);

    END IF;
    -- fine lettura classificatori Tipo Id
    strmessaggio:='Inserimento LOG per lettura classificatori tipo.';
    codresult:=NULL;
    INSERT INTO fase_bil_t_elaborazione_log
                (
                            fase_bil_elab_id,
                            fase_bil_elab_log_operazione,
                            validita_inizio,
                            login_operazione,
                            ente_proprietario_id
                )
                VALUES
                (
                            fasebilelabid,
                            strmessaggio,
                            clock_timestamp(),
                            loginoperazione,
                            enteproprietarioid
                )
    returning   fase_bil_elab_log_id
    INTO        codresult;

    IF codresult IS NULL THEN
      RAISE
    EXCEPTION
      ' Errore in inserimento LOG.';
    END IF;
    strmessaggio:='Inserimento bilancio  per annoBilancio='
    ||annobilancio::VARCHAR
    ||'.';
    INSERT INTO siac_t_bil
                (
                            bil_code,
                            bil_desc,
                            bil_tipo_id,
                            periodo_id,
                            validita_inizio,
                            ente_proprietario_id,
                            login_operazione
                )
                (
                       SELECT 'BIL_'
                                     ||annobilancio::VARCHAR,
                              'Bilancio '
                                     ||annobilancio::VARCHAR,
                              btipo.bil_tipo_id,
                              per.periodo_id,
                              datainizioval,
                              per.ente_proprietario_id,
                              loginoperazione
                       FROM   siac_t_periodo per ,
                              siac_d_periodo_tipo tipo,
                              siac_d_bil_tipo btipo
                       WHERE  per.ente_proprietario_id=enteproprietarioid
                       AND    per.anno::INTEGER=annobilancio
                       AND    tipo.periodo_tipo_id=per.periodo_tipo_id
                       AND    tipo.periodo_tipo_code=sy_per_tipo
                       AND    btipo.ente_proprietario_id=per.ente_proprietario_id
                       AND    btipo.bil_tipo_code=bil_ord_tipo
                       AND    per.data_cancellazione IS NULL
                       AND    NOT EXISTS
                              (
                                     SELECT 1
                                     FROM   siac_t_bil bil
                                     WHERE  bil.ente_proprietario_id=per.ente_proprietario_id
                                     AND    bil.bil_tipo_id=btipo.bil_tipo_id
                                     AND    bil.periodo_id=per.periodo_id
                                     AND    bil.data_cancellazione IS NULL));

    strmessaggio:='Inserimento periodo  per annoBilancio+2='
    ||(annobilancio+2)::VARCHAR
    ||'.';
    INSERT INTO siac_t_periodo
                (
                            periodo_code,
                            periodo_desc,
                            data_inizio,
                            data_fine,
                            validita_inizio,
                            periodo_tipo_id,
                            anno,
                            ente_proprietario_id,
                            login_operazione
                )
                (
                       SELECT 'anno'
                                     ||(annobilancio+2)::VARCHAR,
                              'anno'
                                     ||(annobilancio+2)::VARCHAR,
                              ((annobilancio+2)::VARCHAR
                                     ||'-01-01')::timestamp,
                              ((annobilancio+2)::VARCHAR
                                     ||'-12-31')::timestamp,
                              datainizioval,
                              tipo.periodo_tipo_id,
                              (annobilancio+2)::VARCHAR,
                              tipo.ente_proprietario_id,
                              loginoperazione
                       FROM   siac_d_periodo_tipo tipo
                       WHERE  tipo.ente_proprietario_id=enteproprietarioid
                       AND    tipo.periodo_tipo_code=sy_per_tipo
                       AND    NOT EXISTS
                              (
                                     SELECT 1
                                     FROM   siac_t_periodo per1
                                     WHERE  per1.periodo_tipo_id=tipo.periodo_tipo_id
                                     AND    per1.anno::INTEGER=annobilancio+2
                                     AND    per1.data_cancellazione IS NULL));

    codresult:=NULL;
    strmessaggio:='Inserimento annoBilancio='
    ||annobilancio::VARCHAR
    ||' periodo per annoCompetenza='
    ||(annobilancio+2)::VARCHAR
    ||'.';
    INSERT INTO fase_bil_t_elaborazione_log
                (
                            fase_bil_elab_id,
                            fase_bil_elab_log_operazione,
                            validita_inizio,
                            login_operazione,
                            ente_proprietario_id
                )
                VALUES
                (
                            fasebilelabid,
                            strmessaggio,
                            clock_timestamp(),
                            loginoperazione,
                            enteproprietarioid
                )
    returning   fase_bil_elab_log_id
    INTO        codresult;

    IF codresult IS NULL THEN
      RAISE
    EXCEPTION
      ' Errore in inserimento LOG.';
    END IF;
    strmessaggio:='Lettura bilancioId e periodoId  per annoBilancio='
    ||annobilancio::VARCHAR
    ||'.';
    SELECT bil.bil_id ,
           per.periodo_id
    INTO   strict bilancioid,
           periodoid
    FROM   siac_t_bil bil,
           siac_t_periodo per
    WHERE  bil.ente_proprietario_id=enteproprietarioid
    AND    per.periodo_id=bil.periodo_id
    AND    per.anno::INTEGER=annobilancio
    AND    bil.data_cancellazione IS NULL
    AND    per.data_cancellazione IS NULL;

    codresult:=NULL;
    INSERT INTO fase_bil_t_elaborazione_log
                (
                            fase_bil_elab_id,
                            fase_bil_elab_log_operazione,
                            validita_inizio,
                            login_operazione,
                            ente_proprietario_id
                )
                VALUES
                (
                            fasebilelabid,
                            strmessaggio,
                            clock_timestamp(),
                            loginoperazione,
                            enteproprietarioid
                )
    returning   fase_bil_elab_log_id
    INTO        codresult;

    IF codresult IS NULL THEN
      RAISE
    EXCEPTION
      ' Errore in inserimento LOG.';
    END IF;
    strmessaggio:='Cancellazione fase tipo diversa da '
    ||provvisorio_fase
    ||' per bilancio annoBilancio='
    ||annobilancio::VARCHAR
    ||'.';
    DELETE
    FROM   siac_r_bil_fase_operativa r
    WHERE  r.ente_proprietario_id=enteproprietarioid
    AND    r.data_cancellazione IS NULL
    AND    r.validita_fine IS NULL
    AND    r.bil_id=bilancioid
    AND    EXISTS
           (
                  SELECT 1
                  FROM   siac_d_fase_operativa d
                  WHERE  d.fase_operativa_id=r.fase_operativa_id
                  AND    d.fase_operativa_code!=provvisorio_fase);

    strmessaggio:='Inserimento fase tipo='
    ||provvisorio_fase
    ||' per bilancio annoBilancio='
    ||annobilancio::VARCHAR
    ||'.';
    INSERT INTO siac_r_bil_fase_operativa
                (
                            bil_id,
                            fase_operativa_id,
                            validita_inizio,
                            ente_proprietario_id,
                            login_operazione
                )
                (
                       SELECT bilancioid,
                              f.fase_operativa_id,
                              datainizioval,
                              f.ente_proprietario_id,
                              loginoperazione
                       FROM   siac_d_fase_operativa f
                       WHERE  f.ente_proprietario_id=enteproprietarioid
                       AND    f.fase_operativa_code=provvisorio_fase
                       AND    NOT EXISTS
                              (
                                     SELECT 1
                                     FROM   siac_r_bil_fase_operativa r
                                     WHERE  r.bil_id=bilancioid
                                            --and    r.fase_operativa_id=f.fase_operativa_id
                                     AND    r.data_cancellazione IS NULL));

    codresult:=NULL;
    INSERT INTO fase_bil_t_elaborazione_log
                (
                            fase_bil_elab_id,
                            fase_bil_elab_log_operazione,
                            validita_inizio,
                            login_operazione,
                            ente_proprietario_id
                )
                VALUES
                (
                            fasebilelabid,
                            strmessaggio,
                            clock_timestamp(),
                            loginoperazione,
                            enteproprietarioid
                )
    returning   fase_bil_elab_log_id
    INTO        codresult;

    IF codresult IS NULL THEN
      RAISE
    EXCEPTION
      ' Errore in inserimento LOG.';
    END IF;
    strmessaggio:='Lettura bilancioId e periodoId  per annoBilancio-1='
    ||(annobilancio-1)::VARCHAR
    ||'.';
    SELECT bil.bil_id ,
           per.periodo_id
    INTO   strict bilancioprecid,
           periodoprecid
    FROM   siac_t_bil bil,
           siac_t_periodo per
    WHERE  bil.ente_proprietario_id=enteproprietarioid
    AND    per.periodo_id=bil.periodo_id
    AND    per.anno::INTEGER=annobilancio-1
    AND    per.data_cancellazione IS NULL;

    codresult:=NULL;
    INSERT INTO fase_bil_t_elaborazione_log
                (
                            fase_bil_elab_id,
                            fase_bil_elab_log_operazione,
                            validita_inizio,
                            login_operazione,
                            ente_proprietario_id
                )
                VALUES
                (
                            fasebilelabid,
                            strmessaggio,
                            clock_timestamp(),
                            loginoperazione,
                            enteproprietarioid
                )
    returning   fase_bil_elab_log_id
    INTO        codresult;

    IF codresult IS NULL THEN
      RAISE
    EXCEPTION
      ' Errore in inserimento LOG.';
    END IF;
    -- capitoli gestione provvisoria nuovi non esistenti in gestione corrente
    strmessaggio:='Popolamento fase_bil_t_gest_apertura_provv.Provvisorio nuovo con gestione eq anno precedente. Non esistenti in gestione corrente.';
    INSERT INTO fase_bil_t_gest_apertura_provv
                (
                            elem_id,
                            elem_code,
                            elem_code2,
                            elem_code3,
                            bil_id,
                            fase_bil_elab_id,
                            ente_proprietario_id,
                            validita_inizio,
                            login_operazione
                )
                (
                         SELECT   gest.elem_id,
                                  gest.elem_code,
                                  gest.elem_code2,
                                  gest.elem_code3,
                                  bilancioid,
                                  fasebilelabid,
                                  gest.ente_proprietario_id,
                                  datainizioval,
                                  loginoperazione
                         FROM     siac_t_bil_elem gest
                         WHERE    gest.ente_proprietario_id=enteproprietarioid
                         AND      gest.elem_tipo_id=bilelemgesttipoid
                         AND      gest.bil_id=bilancioprecid
                         AND      gest.data_cancellazione IS NULL
                         AND      date_trunc('day',dataelaborazione)>=date_trunc('day',gest.validita_inizio)
                         AND      (
                                           date_trunc('day',dataelaborazione)<=date_trunc('day',gest.validita_fine)
                                  OR       gest.validita_fine IS NULL)
                         AND      EXISTS
                                  (
                                         SELECT 1
                                         FROM   siac_r_bil_elem_stato rstato -- 04.11.2016 Anto JIRA-SIAC-4161
                                         WHERE  rstato.elem_id=gest.elem_id
                                         AND    rstato.elem_stato_id!=bilelemstatoanid
                                         AND    rstato.data_cancellazione IS NULL
                                         AND    rstato.validita_fine isnull )
                         AND      NOT EXISTS
                                  (
                                           SELECT   1
                                           FROM     siac_t_bil_elem gestcorr
                                           WHERE    gestcorr.ente_proprietario_id=gest.ente_proprietario_id
                                           AND      gestcorr.bil_id=bilancioid
                                           AND      gestcorr.elem_tipo_id=gest.elem_tipo_id
                                           AND      gestcorr.elem_code=gest.elem_code
                                           AND      gestcorr.elem_code2=gest.elem_code2
                                           AND      gestcorr.elem_code3=gest.elem_code3
                                           AND      EXISTS
                                                    (
                                                           SELECT 1
                                                           FROM   siac_r_bil_elem_stato rstato -- 15.11.2016 Anto JIRA-SIAC-4161
                                                           WHERE  rstato.elem_id=gestcorr.elem_id
                                                           AND    rstato.elem_stato_id!=bilelemstatoanid
                                                           AND    rstato.data_cancellazione IS NULL
                                                           AND    rstato.validita_fine isnull )
                                           AND      gestcorr.data_cancellazione IS NULL
                                           AND      date_trunc('day',dataelaborazione)>=date_trunc('day',gestcorr.validita_inizio)
                                           AND      (
                                                             date_trunc('day',dataelaborazione)<=date_trunc('day',gestcorr.validita_fine)
                                                    OR       gestcorr.validita_fine IS NULL)
                                           ORDER BY gestcorr.elem_id limit 1 )
                         ORDER BY gest.elem_code:: INTEGER,
                                  gest.elem_code2::INTEGER,
                                  gest.elem_code3);

    codresult:=NULL;
    INSERT INTO fase_bil_t_elaborazione_log
                (
                            fase_bil_elab_id,
                            fase_bil_elab_log_operazione,
                            validita_inizio,
                            login_operazione,
                            ente_proprietario_id
                )
                VALUES
                (
                            fasebilelabid,
                            strmessaggio,
                            clock_timestamp(),
                            loginoperazione,
                            enteproprietarioid
                )
    returning   fase_bil_elab_log_id
    INTO        codresult;

    IF codresult IS NULL THEN
      RAISE
    EXCEPTION
      ' Errore in inserimento LOG.';
    END IF;
    -- verifica apertura con gestione corrente pre-esistente ( rielaborazione )
    IF checkgest=TRUE THEN
      -- capitoli gestione corrente esistenti con gestione eq anno precendente esistente - da aggiornare
      strmessaggio:='Popolamento fase_bil_t_gest_apertura_provv.Provvisorio esistente con gestione eq anno precedente.';
      INSERT INTO fase_bil_t_gest_apertura_provv
                  (
                              elem_id,
                              elem_code,
                              elem_code2,
                              elem_code3,
                              elem_prov_id,
                              bil_id,
                              fase_bil_elab_id,
                              ente_proprietario_id,
                              validita_inizio,
                              login_operazione
                  )
                  (
                           SELECT   gest.elem_id,
                                    gest.elem_code,
                                    gest.elem_code2,
                                    gest.elem_code3,
                                    gestcorr.elem_id,
                                    bilancioid,
                                    fasebilelabid,
                                    enteproprietarioid,
                                    datainizioval,
                                    loginoperazione
                           FROM     siac_t_bil_elem gest,
                                    siac_t_bil_elem gestcorr
                           WHERE    gest.ente_proprietario_id=enteproprietarioid
                           AND      gest.elem_tipo_id=bilelemgesttipoid
                           AND      gest.bil_id=bilancioprecid
                           AND      gestcorr.ente_proprietario_id=gest.ente_proprietario_id
                           AND      gestcorr.bil_id=bilancioid
                           AND      gestcorr.elem_tipo_id=gest.elem_tipo_id
                           AND      gestcorr.elem_code=gest.elem_code
                           AND      gestcorr.elem_code2=gest.elem_code2
                           AND      gestcorr.elem_code3=gest.elem_code3
                           AND      gest.data_cancellazione IS NULL
                           AND      date_trunc('day',dataelaborazione)>=date_trunc('day',gest.validita_inizio)
                           AND      (
                                             date_trunc('day',dataelaborazione)<=date_trunc('day',gest.validita_fine)
                                    OR       gest.validita_fine IS NULL)
                           AND      gestcorr.data_cancellazione IS NULL
                           AND      date_trunc('day',dataelaborazione)>=date_trunc('day',gestcorr.validita_inizio)
                           AND      (
                                             date_trunc('day',dataelaborazione)<=date_trunc('day',gestcorr.validita_fine)
                                    OR       gestcorr.validita_fine IS NULL)
                           AND      EXISTS
                                    (
                                           SELECT 1
                                           FROM   siac_r_bil_elem_stato rstato -- 15.11.2016 Anto JIRA-SIAC-4161
                                           WHERE  rstato.elem_id=gestcorr.elem_id
                                           AND    rstato.elem_stato_id!=bilelemstatoanid
                                           AND    rstato.data_cancellazione IS NULL
                                           AND    rstato.validita_fine isnull )
                           AND      EXISTS
                                    (
                                           SELECT 1
                                           FROM   siac_r_bil_elem_stato rstato -- 15.11.2016 Anto JIRA-SIAC-4161
                                           WHERE  rstato.elem_id=gest.elem_id
                                           AND    rstato.elem_stato_id!=bilelemstatoanid
                                           AND    rstato.data_cancellazione IS NULL
                                           AND    rstato.validita_fine IS NULL )
                           ORDER BY gest.elem_code:: INTEGER,
                                    gest.elem_code2::INTEGER,
                                    gest.elem_code3);

      codresult:=NULL;
      INSERT INTO fase_bil_t_elaborazione_log
                  (
                              fase_bil_elab_id,
                              fase_bil_elab_log_operazione,
                              validita_inizio,
                              login_operazione,
                              ente_proprietario_id
                  )
                  VALUES
                  (
                              fasebilelabid,
                              strmessaggio,
                              clock_timestamp(),
                              loginoperazione,
                              enteproprietarioid
                  )
      returning   fase_bil_elab_log_id
      INTO        codresult;

      IF codresult IS NULL THEN
        RAISE
      EXCEPTION
        ' Errore in inserimento LOG.';
      END IF;
      -- capitoli gestione corrente esistenti con gestione eq anno precendente non esistente - da aggiornare
      strmessaggio:='Popolamento fase_bil_t_gest_apertura_provv.Provvisorio esistente con gestione eq anno precedente non esistente.';
      INSERT INTO fase_bil_t_gest_apertura_provv
                  (
                              elem_prov_id,
                              elem_code,
                              elem_code2,
                              elem_code3,
                              bil_id,
                              fase_bil_elab_id,
                              ente_proprietario_id,
                              validita_inizio,
                              login_operazione
                  )
                  (
                           SELECT   gestcorr.elem_id,
                                    gestcorr.elem_code,
                                    gestcorr.elem_code2,
                                    gestcorr.elem_code3,
                                    bilancioid,
                                    fasebilelabid,
                                    enteproprietarioid,
                                    datainizioval,
                                    loginoperazione
                           FROM     siac_t_bil_elem gestcorr
                           WHERE    gestcorr.ente_proprietario_id=enteproprietarioid
                           AND      gestcorr.bil_id=bilancioid
                           AND      gestcorr.elem_tipo_id=bilelemgesttipoid
                           AND      gestcorr.data_cancellazione IS NULL
                           AND      date_trunc('day',dataelaborazione)>=date_trunc('day',gestcorr.validita_inizio)
                           AND      (
                                             date_trunc('day',dataelaborazione)<=date_trunc('day',gestcorr.validita_fine)
                                    OR       gestcorr.validita_fine IS NULL)
                           AND      EXISTS
                                    (
                                           SELECT 1
                                           FROM   siac_r_bil_elem_stato rstato -- 15.11.2016 Anto JIRA-SIAC-4161
                                           WHERE  rstato.elem_id=gestcorr.elem_id
                                           AND    rstato.elem_stato_id!=bilelemstatoanid
                                           AND    rstato.data_cancellazione IS NULL
                                           AND    rstato.validita_fine IS NULL )
                           AND      NOT EXISTS
                                    (
                                           SELECT 1
                                           FROM   siac_t_bil_elem gest
                                           WHERE  gest.ente_proprietario_id=gestcorr.ente_proprietario_id
                                           AND    gest.bil_id=bilancioprecid
                                           AND    gest.elem_tipo_id=gestcorr.elem_tipo_id
                                           AND    gest.elem_code=gestcorr.elem_code
                                           AND    gest.elem_code2=gestcorr.elem_code2
                                           AND    gest.elem_code3=gestcorr.elem_code3
                                           AND    gest.data_cancellazione IS NULL
                                           AND    date_trunc('day',dataelaborazione)>=date_trunc('day',gest.validita_inizio)
                                           AND    (
                                                         date_trunc('day',dataelaborazione)<=date_trunc('day',gest.validita_fine)
                                                  OR     gest.validita_fine IS NULL)
                                           AND    EXISTS
                                                  (
                                                         SELECT 1
                                                         FROM   siac_r_bil_elem_stato rstato -- 15.11.2016 Anto JIRA-SIAC-4161
                                                         WHERE  rstato.elem_id=gest.elem_id
                                                         AND    rstato.elem_stato_id!=bilelemstatoanid
                                                         AND    rstato.data_cancellazione IS NULL
                                                         AND    rstato.validita_fine IS NULL ))
                           ORDER BY gestcorr.elem_code:: INTEGER,
                                    gestcorr.elem_code2::INTEGER,
                                    gestcorr.elem_code3 );

      codresult:=NULL;
      INSERT INTO fase_bil_t_elaborazione_log
                  (
                              fase_bil_elab_id,
                              fase_bil_elab_log_operazione,
                              validita_inizio,
                              login_operazione,
                              ente_proprietario_id
                  )
                  VALUES
                  (
                              fasebilelabid,
                              strmessaggio,
                              clock_timestamp(),
                              loginoperazione,
                              enteproprietarioid
                  )
      returning   fase_bil_elab_log_id
      INTO        codresult;

      IF codresult IS NULL THEN
        RAISE
      EXCEPTION
        ' Errore in inserimento LOG.';
      END IF;
    END IF;
    codresult:=NULL;
    strmessaggio:='Popolamento fase_bil_t_gest_apertura_provv.Verifica esistenza capitoli di gestione da creare/aggiornare da gestione eq precedente.';
    SELECT   1
    INTO     codresult
    FROM     fase_bil_t_gest_apertura_provv fase
    WHERE    fase.ente_proprietario_id=enteproprietarioid
    AND      fase.bil_id=bilancioid
    AND      fase.fase_bil_elab_id=fasebilelabid
    AND      fase.data_cancellazione IS NULL
    AND      fase.validita_fine IS NULL
    ORDER BY fase.fase_bil_gest_ape_prov_id limit 1;

    IF codresult IS NOT NULL THEN
      -- inserimento nuove strutture
      -- capitoli gestione non esistenti da gestione eq anno precedente
      strmessaggio:='Inserimento nuove strutture per tipo='
      ||bilelemgesttipo
      ||'.';
      codresult:=NULL;
      INSERT INTO fase_bil_t_elaborazione_log
                  (
                              fase_bil_elab_id,
                              fase_bil_elab_log_operazione,
                              validita_inizio,
                              login_operazione,
                              ente_proprietario_id
                  )
                  VALUES
                  (
                              fasebilelabid,
                              strmessaggio,
                              clock_timestamp(),
                              loginoperazione,
                              enteproprietarioid
                  )
      returning   fase_bil_elab_log_id
      INTO        codresult;

      IF codresult IS NULL THEN
        RAISE
      EXCEPTION
        ' Errore in inserimento LOG.';
      END IF;
      FOR elembil IN
      (
               SELECT   elem_id,
                        elem_code,
                        elem_code2,
                        elem_code3
               FROM     fase_bil_t_gest_apertura_provv
               WHERE    ente_proprietario_id=enteproprietarioid
               AND      bil_id=bilancioid
               AND      elem_id IS NOT NULL
               AND      elem_prov_id IS NULL     -- non esistente in gestione corrente
               AND      elem_prov_new_id IS NULL -- non ancora elaborato con nuovo inserimento in gestione corrente
               AND      fase_bil_elab_id=fasebilelabid
               AND      data_cancellazione IS NULL
               AND      validita_fine IS NULL
               ORDER BY elem_code:: INTEGER,
                        elem_code2::INTEGER,
                        elem_code3
      )
      LOOP
        bilelemidret:=NULL;
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemgesttipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_t_bil_elem.' ;
        -- siac_t_bil_elem
        INSERT INTO siac_t_bil_elem
                    (
                                elem_code,
                                elem_code2,
                                elem_code3,
                                elem_desc,
                                elem_desc2,
                                elem_tipo_id,
                                bil_id,
                                ordine,
                                livello,
                                validita_inizio ,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT gest.elem_code,
                                  gest.elem_code2,
                                  gest.elem_code3,
                                  gest.elem_desc,
                                  gest.elem_desc2,
                                  gest.elem_tipo_id,
                                  bilancioid,
                                  gest.ordine,
                                  gest.livello,
                                  datainizioval,
                                  gest.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_t_bil_elem gest
                           WHERE  gest.elem_id=elembil.elem_id)
        returning   elem_id
        INTO        bilelemidret;

        IF bilelemidret IS NULL THEN
          RAISE
        EXCEPTION
          ' Inserimento non effettuato.';
        END IF;
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemgesttipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_r_bil_elem_stato.' ;
        -- siac_r_bil_elem_stato
        strmessaggio:='Inserimento siac_r_bil_elem_stato.';
        INSERT INTO siac_r_bil_elem_stato
                    (
                                elem_id,
                                elem_stato_id,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT bilelemidret,
                                  stato.elem_stato_id,
                                  datainizioval,
                                  stato.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_stato stato
                           WHERE  stato.elem_id=elembil.elem_id
                           AND    stato.data_cancellazione IS NULL
                           AND    date_trunc('day',dataelaborazione)>=date_trunc('day',stato.validita_inizio)
                           AND    (
                                         date_trunc('day',dataelaborazione)<=date_trunc('day',stato.validita_fine)
                                  OR     stato.validita_fine IS NULL) )
        returning   bil_elem_stato_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Inserimento non effettuato.';
        END IF;
        codresult:=NULL;
        -- siac_r_bil_elem_categoria
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemgesttipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_r_bil_elem_categoria.' ;
        INSERT INTO siac_r_bil_elem_categoria
                    (
                                elem_id,
                                elem_cat_id,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT bilelemidret,
                                  cat.elem_cat_id,
                                  datainizioval,
                                  cat.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_categoria cat
                           WHERE  cat.elem_id=elembil.elem_id
                           AND    cat.data_cancellazione IS NULL
                           AND    date_trunc('day',dataelaborazione)>=date_trunc('day',cat.validita_inizio)
                           AND    (
                                         date_trunc('day',dataelaborazione)<=date_trunc('day',cat.validita_fine)
                                  OR     cat.validita_fine IS NULL) )
        returning   bil_elem_r_cat_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Inserimento non effettuato.';
        END IF;
        -- salvataggio della categoria per successivi controlli su classificatori obbligatori
        SELECT d.elem_cat_code
        INTO   categoriacapcode
        FROM   siac_r_bil_elem_categoria r,
               siac_d_bil_elem_categoria d
        WHERE  d.elem_cat_id=r.elem_cat_id
        AND    r.bil_elem_r_cat_id=codresult;

        codresult:=NULL;
        -- siac_r_bil_elem_attr
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemgesttipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_r_bil_elem_attr.' ;
        INSERT INTO siac_r_bil_elem_attr
                    (
                                elem_id,
                                attr_id,
                                tabella_id,
                                BOOLEAN,
                                percentuale,
                                testo,
                                numerico,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT bilelemidret,
                                  attr.attr_id,
                                  attr.tabella_id,
                                  attr.BOOLEAN,
                                  attr.percentuale,
                                  attr.testo,
                                  attr.numerico,
                                  datainizioval,
                                  attr.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_attr attr
                           WHERE  attr.elem_id=elembil.elem_id
                           AND    attr.data_cancellazione IS NULL
                           AND    date_trunc('day',dataelaborazione)>=date_trunc('day',attr.validita_inizio)
                           AND    (
                                         date_trunc('day',dataelaborazione)<=date_trunc('day',attr.validita_fine)
                                  OR     attr.validita_fine IS NULL) );

        codresult:=NULL;
        SELECT   1
        INTO     codresult
        FROM     siac_r_bil_elem_attr
        WHERE    elem_id=bilelemidret
        AND      data_cancellazione IS NULL
        AND      validita_fine IS NULL
        ORDER BY elem_id limit 1;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Nessun attributo inserito.';
        END IF;
        /* SIAC-5590
codResult:=null;
-- siac_r_vincolo_bil_elem
strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
'.Elemento di bilancio '||elemBil.elem_code||' '
||elemBil.elem_code2||' '
||elemBil.elem_code3||' : siac_r_vincolo_bil_elem.' ;
insert into siac_r_vincolo_bil_elem
( elem_id,vincolo_id, validita_inizio,ente_proprietario_id,login_operazione
)
(select bilElemIdRet, v.vincolo_id, dataInizioVal,v.ente_proprietario_id, loginOperazione
from siac_r_vincolo_bil_elem v
where v.elem_id=elemBil.elem_id
and   v.data_cancellazione is null
and   date_trunc('day',dataElaborazione)>=date_trunc('day',v.validita_inizio)
and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v.validita_fine) or v.validita_fine is null)
);
codResult:=null;
strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
'.Elemento di bilancio '||elemBil.elem_code||' '
||elemBil.elem_code2||' '
||elemBil.elem_code3||' : siac_r_vincolo_bil_elem.Verifica inserimento.' ;
select  1  into codResult
from  siac_r_vincolo_bil_elem v
where v.elem_id=elemBil.elem_id
and   v.data_cancellazione is null
and   date_trunc('day',dataElaborazione)>=date_trunc('day',v.validita_inizio)
and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v.validita_fine) or v.validita_fine is null)
and   not exists (select 1 from siac_r_vincolo_bil_elem v1
where v1.elem_id= bilElemIdRet
and   v1.data_cancellazione is null
and   date_trunc('day',dataElaborazione)>=date_trunc('day',v1.validita_inizio)
and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v1.validita_fine) or v1.validita_fine is null)
order by v1.elem_id
limit 1
)
order by v.elem_id
limit 1;
if codResult is not null then raise exception ' Non effettuato.'; end if;
*/
        codresult:=NULL;
        -- siac_r_bil_elem_atto_legge
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemgesttipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_r_bil_elem_atto_legge.' ;
        INSERT INTO siac_r_bil_elem_atto_legge
                    (
                                elem_id,
                                attolegge_id,
                                descrizione,
                                gerarchia,
                                finanziamento_inizio,
                                finanziamento_fine,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT bilelemidret,
                                  v.attolegge_id,
                                  v.descrizione,
                                  v.gerarchia,
                                  v.finanziamento_inizio,
                                  v.finanziamento_fine,
                                  datainizioval,
                                  v.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_atto_legge v
                           WHERE  v.elem_id=elembil.elem_id
                           AND    v.data_cancellazione IS NULL
                           AND    date_trunc('day',dataelaborazione)>=date_trunc('day',v.validita_inizio)
                           AND    (
                                         date_trunc('day',dataelaborazione)<=date_trunc('day',v.validita_fine)
                                  OR     v.validita_fine IS NULL) );

        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemgesttipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_r_bil_elem_atto_legge.Verifica inserimento.' ;
        SELECT   1
        INTO     codresult
        FROM     siac_r_bil_elem_atto_legge v
        WHERE    v.elem_id=elembil.elem_id
        AND      v.data_cancellazione IS NULL
        AND      date_trunc('day',dataelaborazione)>=date_trunc('day',v.validita_inizio)
        AND      (
                          date_trunc('day',dataelaborazione)<=date_trunc('day',v.validita_fine)
                 OR       v.validita_fine IS NULL)
        AND      NOT EXISTS
                 (
                          SELECT   1
                          FROM     siac_r_bil_elem_atto_legge v1
                          WHERE    v1.elem_id= bilelemidret
                          AND      v1.data_cancellazione IS NULL
                          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',v1.validita_inizio)
                          AND      (
                                            date_trunc('day',dataelaborazione)<=date_trunc('day',v1.validita_fine)
                                   OR       v1.validita_fine IS NULL)
                          ORDER BY v1.elem_id limit 1 )
        ORDER BY v.elem_id limit 1;

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Non effettuato.';
        END IF;
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemgesttipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_r_bil_elem_rel_tempo.' ;
		
		-- siac-8383 Sofia 14.10.2021 
		-- elem_id_old deve essere ricalcolato in base al suo stesso equivalente di gestione in annobilancio-1
		-- attenzione anche al controllo dopo la insert o da commentare o da correggere		
/*
       INSERT INTO siac_r_bil_elem_rel_tempo
                    (
                                elem_id,
                                elem_id_old,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT bilelemidret,
                                  v.elem_id_old,
                                  datainizioval,
                                  v.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_rel_tempo v
                           WHERE  v.elem_id=elembil.elem_id
                           AND    v.data_cancellazione IS NULL
                           AND    date_trunc('day',dataelaborazione)>=date_trunc('day',v.validita_inizio)
                           AND    (
                                         date_trunc('day',dataelaborazione)<=date_trunc('day',v.validita_fine)
                                  OR     v.validita_fine IS NULL));*/
       
       
        -- siac-8383 Sofia 25.10.2021
       INSERT INTO siac_r_bil_elem_rel_tempo
                    (
                                elem_id,
                                elem_id_old,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT bilelemidret,
                                  enew.elem_id,
                                  datainizioval,
                                  v.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_rel_tempo v,
                                  siac_t_bil_elem e, siac_t_bil_elem enew 
                           WHERE  v.elem_id=elembil.elem_id
                           AND    e.elem_id=v.elem_id_old
                           AND    enew.bil_id=bilancioprecid
                           AND    enew.elem_tipo_id=bilelemgesttipoid
                           AND    enew.elem_code=e.elem_code
                           AND    enew.elem_code2=e.elem_code2
                           AND    enew.elem_code3=e.elem_code3
                           AND    v.data_cancellazione IS NULL
                           AND    enew.data_cancellazione IS NULL 
                           AND    date_trunc('day',dataelaborazione)>=date_trunc('day',v.validita_inizio)
                           AND    (
                                         date_trunc('day',dataelaborazione)<=date_trunc('day',v.validita_fine)
                                  OR     v.validita_fine IS NULL));
        
        /*
        siac-8383 Sofia 25.10.2021  controllo commentato in quanto il capitolo equivalente potrebbe anche non esistere
 
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemgesttipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_r_bil_elem_rel_tempo.Verifica inserimento.' ;
        SELECT   1
        INTO     codresult
        FROM     siac_r_bil_elem_rel_tempo v
        WHERE    v.elem_id=elembil.elem_id
        AND      v.data_cancellazione IS NULL
        AND      date_trunc('day',dataelaborazione)>=date_trunc('day',v.validita_inizio)
        AND      (
                          date_trunc('day',dataelaborazione)<=date_trunc('day',v.validita_fine)
                 OR       v.validita_fine IS NULL)
        AND      NOT EXISTS
                 (
                          SELECT   1
                          FROM     siac_r_bil_elem_rel_tempo v1
                          WHERE    v1.elem_id= bilelemidret
                          AND      v1.data_cancellazione IS NULL
                          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',v1.validita_inizio)
                          AND      (
                                            date_trunc('day',dataelaborazione)<=date_trunc('day',v1.validita_fine)
                                   OR       v1.validita_fine IS NULL)
                          ORDER BY v1.elem_id limit 1 )
        ORDER BY v.elem_id limit 1;

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Non effettuato.';
        END IF;*/
                                 
        codresult:=NULL;
        -- siac_r_bil_elem_class
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemgesttipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : siac_r_bil_elem_class.' ;
        /*
insert into siac_r_bil_elem_class
(elem_id,classif_id, validita_inizio, ente_proprietario_id,login_operazione)
(select bilElemIdRet, class.classif_id,dataInizioVal,class.ente_proprietario_id,loginOperazione
from siac_r_bil_elem_class class
where class.elem_id=elemBil.elem_id
and   class.data_cancellazione is null
and   date_trunc('day',dataElaborazione)>=date_trunc('day',class.validita_inizio)
and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',class.validita_fine) or class.validita_fine is null));
*/
        /*
select 1 into codResult
from siac_r_bil_elem_class
where elem_id=bilElemIdRet
and   data_cancellazione is null
and   validita_fine is null
order by elem_id
limit 1;
if codResult is null then raise exception ' Nessun classificatore inserito.'; end if;
*/
        /** JIRA-SIAC-4167 - aggiunto controllo su validita classificatore **/
        INSERT INTO siac_r_bil_elem_class
                    (
                                elem_id,
                                classif_id,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT bilelemidret,
                                  class.classif_id,
                                  datainizioval,
                                  class.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_class class,
                                  siac_t_class c
                           WHERE  class.elem_id=elembil.elem_id
                           AND    c.classif_id=class.classif_id
                           AND    class.data_cancellazione IS NULL
                           AND    date_trunc('day',dataelaborazione)>=date_trunc('day',class.validita_inizio)
                           AND    (
                                         date_trunc('day',dataelaborazione)<=date_trunc('day',class.validita_fine)
                                  OR     class.validita_fine IS NULL)
                           AND    c.data_cancellazione IS NULL
                           AND    date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                           AND    (
                                         date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                  OR     c.validita_fine IS NULL));
	    select 1 into codResult
		from siac_r_bil_elem_class
		where elem_id=bilElemIdRet
		and   data_cancellazione is null
		and   validita_fine is null
		order by elem_id
		limit 1;
		if codResult is null then raise exception ' Nessun classificatore inserito.'; end if;





        -- controlli sui classificatori obbligatori
        -- CL_CDC, CL_CDR
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemgesttipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : verifica classificatore '
        ||cl_cdc
        ||' '
        ||cl_cdr
        ||'.' ;
        /** JIRA-SIAC-4167  **/
        SELECT   1
        INTO     codresult
        FROM     siac_r_bil_elem_class r,
                 siac_t_class c
        WHERE    r.elem_id=bilelemidret
        AND      c.classif_id=r.classif_id
        AND      c.classif_tipo_id IN (cdctipoid,
                                       cdrtipoid)
        AND      c.data_cancellazione IS NULL
        AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
        AND      (
                          date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                 OR       c.validita_fine IS NULL)
        ORDER BY r.elem_id limit 1;

        IF codresult IS NULL THEN
          --provo a collegare il capitolo con il classificatore equivalente nuovo
          --siac-5297
          -- Sofia 21.11.2017
          INSERT INTO siac_r_bil_elem_class
                      (
                                  elem_id,
                                  classif_id,
                                  validita_inizio,
                                  ente_proprietario_id,
                                  login_operazione
                      )
                      (
                             SELECT bilelemidret,
                                    c.classif_id,
                                    datainizioval,
                                    c.ente_proprietario_id,
                                    loginoperazione
                             FROM   siac_t_class c ,
                                    siac_r_bil_elem_class rprec,
                                    siac_t_class cprec
                             WHERE  rprec.elem_id=elembil.elem_id
                             AND    cprec.classif_id=rprec.classif_id
                             AND    cprec.classif_tipo_id IN (cdctipoid,
                                                              cdrtipoid)
                             AND    rprec.data_cancellazione IS NULL
                             AND    date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
                             AND    (
                                           date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                                    OR     rprec.validita_fine IS NULL) -- relazione ad oggi valida
                             AND    cprec.data_cancellazione IS NULL
                             AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
                             AND    c.ente_proprietario_id=cprec.ente_proprietario_id
                             AND    c.classif_tipo_id=cprec.classif_tipo_id
                             AND    c.classif_code=cprec.classif_code
                             AND    c.data_cancellazione IS NULL -- cercando un classificatore equivalente aperto su anno succ
                             AND    date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
                             AND    (
                                           date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                                    OR     c.validita_fine IS NULL) );

          GET diagnostics _row_count = row_count;
          IF _row_count <1 THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT capitolo.elem_id,
                                      capitolo.elem_code,
                                      capitolo.elem_code2,
                                      capitolo.elem_code3,
                                      capitolo.bil_id,
                                      fasebilelabid,
                                      'SAC',
                                      'Sac mancante',
                                      datainizioval,
                                      capitolo.ente_proprietario_id,
                                      loginoperazione
                               FROM   siac_t_bil_elem capitolo
                               WHERE  capitolo.elem_id=bilelemidret )
            returning   fase_bil_prev_ape_seg_id
            INTO        codresult;

            IF codresult IS NULL THEN
              RAISE
            EXCEPTION
              'Nessuno inserimento effettuato.';
            END IF;
          END IF;
          /*
strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
insert into fase_bil_t_prev_apertura_segnala
(elem_id,
elem_code,
elem_code2,
elem_code3,
bil_id,
fase_bil_elab_id,
segnala_codice,
segnala_desc,
validita_inizio,
ente_proprietario_id,
login_operazione)
(select capitolo.elem_id,
capitolo.elem_code,
capitolo.elem_code2,
capitolo.elem_code3,
capitolo.bil_id,
faseBilElabId,
'SAC',
'Sac mancante',
dataInizioVal,
capitolo.ente_proprietario_id,
loginOperazione
from siac_t_bil_elem capitolo
where  capitolo.elem_id=bilElemIdRet
)
returning fase_bil_prev_ape_seg_id into codresult;
if codResult is null then raise exception 'Nessuno inserimento effettuato.'; end if;
*/
        END IF;
        /** FINE **/
        -- CL_PDC_FIN_QUINTO, CL_PDC_FIN_QUARTO
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemgesttipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : verifica classificatore '
        ||cl_pdc_fin_quarto
        ||' '
        ||cl_pdc_fin_quinto
        ||'.' ;
        /** JIRA-SIAC-4167 **/
        SELECT   1
        INTO     codresult
        FROM     siac_r_bil_elem_class r,
                 siac_t_class c
        WHERE    r.elem_id=bilelemidret
        AND      c.classif_id=r.classif_id
        AND      c.classif_tipo_id IN (pdcfinivid,
                                       pdcfinvid)
        AND      c.data_cancellazione IS NULL
        AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
        AND      (
                          date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                 OR       c.validita_fine IS NULL)
        ORDER BY r.elem_id limit 1;

        -- Obbligatorieta  del classificatore vale solo per capitolo STANDARD
        IF categoriacapcode = categoria_std THEN
          --  JIRA-SIAC-4167  if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
          IF codresult IS NULL THEN
            /*
strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
insert into fase_bil_t_prev_apertura_segnala
(elem_id,
elem_code,
elem_code2,
elem_code3,
bil_id,
fase_bil_elab_id,
segnala_codice,
segnala_desc,
validita_inizio,
ente_proprietario_id,
login_operazione)
(select capitolo.elem_id,
capitolo.elem_code,
capitolo.elem_code2,
capitolo.elem_code3,
capitolo.bil_id,
faseBilElabId,
'PDCFIN',
'PdcFin mancante',
dataInizioVal,
capitolo.ente_proprietario_id,
loginOperazione
from siac_t_bil_elem capitolo
where  capitolo.elem_id=bilElemIdRet
)
returning fase_bil_prev_ape_seg_id into codresult;
if codResult is null then raise exception 'Nessuno inserimento effettuato.'; end if;
*/
            --provo a collegare il capitolo con il classificatore equivalente nuovo
            --siac-5297
            -- Sofia 21.11.2017
            INSERT INTO siac_r_bil_elem_class
                        (
                                    elem_id,
                                    classif_id,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT bilelemidret,
                                      c.classif_id,
                                      datainizioval,
                                      c.ente_proprietario_id,
                                      loginoperazione
                               FROM   siac_t_class c ,
                                      siac_r_bil_elem_class rprec,
                                      siac_t_class cprec
                               WHERE  rprec.elem_id=elembil.elem_id
                               AND    cprec.classif_id=rprec.classif_id
                               AND    cprec.classif_tipo_id IN (pdcfinivid,
                                                                pdcfinvid)
                               AND    rprec.data_cancellazione IS NULL
                               AND    date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
                               AND    (
                                             date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                                      OR     rprec.validita_fine IS NULL) -- relazione ad oggi valida
                               AND    cprec.data_cancellazione IS NULL
                               AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
                               AND    c.ente_proprietario_id=cprec.ente_proprietario_id
                               AND    c.classif_tipo_id=cprec.classif_tipo_id
                               AND    c.classif_code=cprec.classif_code
                               AND    c.data_cancellazione IS NULL -- cercando un classificatore equivalente aperto su anno succ
                               AND    date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
                               AND    (
                                             date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                                      OR     c.validita_fine IS NULL) );

            GET diagnostics _row_count = row_count;
            IF _row_count <1 THEN
              strmessaggio:=strmessaggio
              ||' Inserimento segnalazione mancanza classif.';
              INSERT INTO fase_bil_t_prev_apertura_segnala
                          (
                                      elem_id,
                                      elem_code,
                                      elem_code2,
                                      elem_code3,
                                      bil_id,
                                      fase_bil_elab_id,
                                      segnala_codice,
                                      segnala_desc,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT capitolo.elem_id,
                                        capitolo.elem_code,
                                        capitolo.elem_code2,
                                        capitolo.elem_code3,
                                        capitolo.bil_id,
                                        fasebilelabid,
                                        'PDCFIN',
                                        'PdcFin mancante',
                                        datainizioval,
                                        capitolo.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_bil_elem capitolo
                                 WHERE  capitolo.elem_id=bilelemidret )
              returning   fase_bil_prev_ape_seg_id
              INTO        codresult;

              IF codresult IS NULL THEN
                RAISE
              EXCEPTION
                'Nessuno inserimento effettuato.';
              END IF;
            END IF;
          END IF;
        END IF;
        IF euelemtipo=tipo_elem_eu THEN
          -- CL_PROGRAMMA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemgesttipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_programma
          ||'.' ;
          /** JIRA-SIAC-4167 **/
          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=bilelemidret
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=programmatipoid
          AND      c.data_cancellazione IS NULL
          AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL)
          ORDER BY r.elem_id limit 1;

          -- Obbligatorieta  del classificatore vale solo per capitolo STANDARD
          IF categoriacapcode = categoria_std THEN
            -- JIRA-SIAC-4167 if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
            IF codresult IS NULL THEN
              /*
strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
insert into fase_bil_t_prev_apertura_segnala
(elem_id,
elem_code,
elem_code2,
elem_code3,
bil_id,
fase_bil_elab_id,
segnala_codice,
segnala_desc,
validita_inizio,
ente_proprietario_id,
login_operazione)
(select capitolo.elem_id,
capitolo.elem_code,
capitolo.elem_code2,
capitolo.elem_code3,
capitolo.bil_id,
faseBilElabId,
CL_PROGRAMMA,
CL_PROGRAMMA||' mancante',
dataInizioVal,
capitolo.ente_proprietario_id,
loginOperazione
from siac_t_bil_elem capitolo
where  capitolo.elem_id=bilElemIdRet
)
returning fase_bil_prev_ape_seg_id into codresult;
if codResult is null then raise exception 'Nessuno inserimento effettuato.'; end if;
*/
              --provo a collegare il capitolo con il classificatore equivalente nuovo
              --siac-5297
              -- Sofia 21.11.2017
              INSERT INTO siac_r_bil_elem_class
                          (
                                      elem_id,
                                      classif_id,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT bilelemidret,
                                        c.classif_id,
                                        datainizioval,
                                        c.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_class c ,
                                        siac_r_bil_elem_class rprec,
                                        siac_t_class cprec
                                 WHERE  rprec.elem_id=elembil.elem_id
                                 AND    cprec.classif_id=rprec.classif_id
                                 AND    cprec.classif_tipo_id =programmatipoid
                                 AND    rprec.data_cancellazione IS NULL
                                 AND    date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
                                 AND    (
                                               date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                                        OR     rprec.validita_fine IS NULL) -- relazione ad oggi valida
                                 AND    cprec.data_cancellazione IS NULL
                                 AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
                                 AND    c.ente_proprietario_id=cprec.ente_proprietario_id
                                 AND    c.classif_tipo_id=cprec.classif_tipo_id
                                 AND    c.classif_code=cprec.classif_code
                                 AND    c.data_cancellazione IS NULL -- cercando un classificatore equivalente aperto su anno succ
                                 AND    date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
                                 AND    (
                                               date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                                        OR     c.validita_fine IS NULL) );

              GET diagnostics _row_count = row_count;
              IF _row_count <1 THEN
                strmessaggio:=strmessaggio
                ||' Inserimento segnalazione mancanza classif.';
                INSERT INTO fase_bil_t_prev_apertura_segnala
                            (
                                        elem_id,
                                        elem_code,
                                        elem_code2,
                                        elem_code3,
                                        bil_id,
                                        fase_bil_elab_id,
                                        segnala_codice,
                                        segnala_desc,
                                        validita_inizio,
                                        ente_proprietario_id,
                                        login_operazione
                            )
                            (
                                   SELECT capitolo.elem_id,
                                          capitolo.elem_code,
                                          capitolo.elem_code2,
                                          capitolo.elem_code3,
                                          capitolo.bil_id,
                                          fasebilelabid,
                                          cl_programma,
                                          cl_programma
                                                 ||' mancante',
                                          datainizioval,
                                          capitolo.ente_proprietario_id,
                                          loginoperazione
                                   FROM   siac_t_bil_elem capitolo
                                   WHERE  capitolo.elem_id=bilelemidret )
                returning   fase_bil_prev_ape_seg_id
                INTO        codresult;

                IF codresult IS NULL THEN
                  RAISE
                EXCEPTION
                  'Nessuno inserimento effettuato.';
                END IF;
              END IF;
            END IF;
          END IF;
          -- CL_MACROAGGREGATO
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemgesttipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_macroaggregato
          ||'.' ;
          /** JIRA-SIAC-4167 **/
          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=bilelemidret
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=macroaggrtipoid
          AND      c.data_cancellazione IS NULL
          AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL)
          ORDER BY r.elem_id limit 1;

          -- Obbligatorieta del classificatore vale solo per capitolo STANDARD
          IF categoriacapcode = categoria_std THEN
            -- JIRA-SIAC-4167 if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
            IF codresult IS NULL THEN
              /*
strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
insert into fase_bil_t_prev_apertura_segnala
(elem_id,
elem_code,
elem_code2,
elem_code3,
bil_id,
fase_bil_elab_id,
segnala_codice,
segnala_desc,
validita_inizio,
ente_proprietario_id,
login_operazione)
(select capitolo.elem_id,
capitolo.elem_code,
capitolo.elem_code2,
capitolo.elem_code3,
capitolo.bil_id,
faseBilElabId,
CL_MACROAGGREGATO,
CL_MACROAGGREGATO||' mancante',
dataInizioVal,
capitolo.ente_proprietario_id,
loginOperazione
from siac_t_bil_elem capitolo
where  capitolo.elem_id=bilElemIdRet
)
returning fase_bil_prev_ape_seg_id into codresult;
if codResult is null then raise exception 'Nessuno inserimento effettuato.';  end if;
*/
              --provo a collegare il capitolo con il classificatore equivalente nuovo
              --siac-5297
              -- Sofia 21.11.2017
              INSERT INTO siac_r_bil_elem_class
                          (
                                      elem_id,
                                      classif_id,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT bilelemidret,
                                        c.classif_id,
                                        datainizioval,
                                        c.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_class c ,
                                        siac_r_bil_elem_class rprec,
                                        siac_t_class cprec
                                 WHERE  rprec.elem_id=elembil.elem_id
                                 AND    cprec.classif_id=rprec.classif_id
                                 AND    cprec.classif_tipo_id =macroaggrtipoid
                                 AND    rprec.data_cancellazione IS NULL
                                 AND    date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
                                 AND    (
                                               date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                                        OR     rprec.validita_fine IS NULL) -- relazione ad oggi valida
                                 AND    cprec.data_cancellazione IS NULL
                                 AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
                                 AND    c.ente_proprietario_id=cprec.ente_proprietario_id
                                 AND    c.classif_tipo_id=cprec.classif_tipo_id
                                 AND    c.classif_code=cprec.classif_code
                                 AND    c.data_cancellazione IS NULL -- cercando un classificatore equivalente aperto su anno succ
                                 AND    date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
                                 AND    (
                                               date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                                        OR     c.validita_fine IS NULL) );

              GET diagnostics _row_count = row_count;
              IF _row_count <1 THEN
                strmessaggio:=strmessaggio
                ||' Inserimento segnalazione mancanza classif.';
                INSERT INTO fase_bil_t_prev_apertura_segnala
                            (
                                        elem_id,
                                        elem_code,
                                        elem_code2,
                                        elem_code3,
                                        bil_id,
                                        fase_bil_elab_id,
                                        segnala_codice,
                                        segnala_desc,
                                        validita_inizio,
                                        ente_proprietario_id,
                                        login_operazione
                            )
                            (
                                   SELECT capitolo.elem_id,
                                          capitolo.elem_code,
                                          capitolo.elem_code2,
                                          capitolo.elem_code3,
                                          capitolo.bil_id,
                                          fasebilelabid,
                                          cl_macroaggregato,
                                          cl_macroaggregato
                                                 ||' mancante',
                                          datainizioval,
                                          capitolo.ente_proprietario_id,
                                          loginoperazione
                                   FROM   siac_t_bil_elem capitolo
                                   WHERE  capitolo.elem_id=bilelemidret )
                returning   fase_bil_prev_ape_seg_id
                INTO        codresult;

                IF codresult IS NULL THEN
                  RAISE
                EXCEPTION
                  'Nessuno inserimento effettuato.';
                END IF;
              END IF;
            END IF;
          END IF;
          -- CL_COFOG
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemgesttipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_cofog
          ||'.' ;
          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=elembil.elem_id
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=cofogtipoid
          AND      r.data_cancellazione IS NULL
          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',r.validita_inizio)
          AND      (
                            date_trunc('day',dataelaborazione)<=date_trunc('day',r.validita_fine)
                   OR       r.validita_fine IS NULL)
          AND      c.data_cancellazione IS NULL
          /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL)*/
          AND      NOT EXISTS
                   (
                                   SELECT DISTINCT 1
                                   FROM            siac_r_bil_elem_class r,
                                                   siac_t_class c
                                   WHERE           r.elem_id=bilelemidret
                                   AND             c.classif_id=r.classif_id
                                   AND             c.classif_tipo_id=cofogtipoid
                                   AND             c.data_cancellazione IS NULL
                                   /*AND             date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                   AND             (
                                                                   date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                   OR              c.validita_fine IS NULL) */)
          ORDER BY r.elem_id limit 1;

          -- --JIRA-SIAC-4167 14.11.2016 Sofia
          IF codresult IS NOT NULL THEN
            /*
codResult:=null;
strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
insert into fase_bil_t_prev_apertura_segnala
(elem_id,
elem_code,
elem_code2,
elem_code3,
bil_id,
fase_bil_elab_id,
segnala_codice,
segnala_desc,
validita_inizio,
ente_proprietario_id,
login_operazione)
(select capitolo.elem_id,
capitolo.elem_code,
capitolo.elem_code2,
capitolo.elem_code3,
capitolo.bil_id,
faseBilElabId,
CL_COFOG,
CL_COFOG||' mancante',
dataInizioVal,
capitolo.ente_proprietario_id,
loginOperazione
from siac_t_bil_elem capitolo
where  capitolo.elem_id=bilElemIdRet
)
returning fase_bil_prev_ape_seg_id into codresult;
if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
*/
            --provo a collegare il capitolo con il classificatore equivalente nuovo
            --siac-5297
            -- Sofia 21.11.2017
            INSERT INTO siac_r_bil_elem_class
                        (
                                    elem_id,
                                    classif_id,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT bilelemidret,
                                      c.classif_id,
                                      datainizioval,
                                      c.ente_proprietario_id,
                                      loginoperazione
                               FROM   siac_t_class c ,
                                      siac_r_bil_elem_class rprec,
                                      siac_t_class cprec
                               WHERE  rprec.elem_id=elembil.elem_id
                               AND    cprec.classif_id=rprec.classif_id
                               AND    cprec.classif_tipo_id =cofogtipoid
                               AND    rprec.data_cancellazione IS NULL
                               AND    date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
                               AND    (
                                             date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                                      OR     rprec.validita_fine IS NULL) -- relazione ad oggi valida
                               AND    cprec.data_cancellazione IS NULL
                               AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
                               AND    c.ente_proprietario_id=cprec.ente_proprietario_id
                               AND    c.classif_tipo_id=cprec.classif_tipo_id
                               AND    c.classif_code=cprec.classif_code
                               AND    c.data_cancellazione IS NULL -- cercando un classificatore equivalente aperto su anno succ
                               AND    date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
                               AND    (
                                             date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                                      OR     c.validita_fine IS NULL) );

            GET diagnostics _row_count = row_count;
            IF _row_count <1 THEN
              codresult:=NULL;
              strmessaggio:=strmessaggio
              ||' Inserimento segnalazione mancanza classif.';
              INSERT INTO fase_bil_t_prev_apertura_segnala
                          (
                                      elem_id,
                                      elem_code,
                                      elem_code2,
                                      elem_code3,
                                      bil_id,
                                      fase_bil_elab_id,
                                      segnala_codice,
                                      segnala_desc,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT capitolo.elem_id,
                                        capitolo.elem_code,
                                        capitolo.elem_code2,
                                        capitolo.elem_code3,
                                        capitolo.bil_id,
                                        fasebilelabid,
                                        cl_cofog,
                                        cl_cofog
                                               ||' mancante',
                                        datainizioval,
                                        capitolo.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_bil_elem capitolo
                                 WHERE  capitolo.elem_id=bilelemidret )
              returning   fase_bil_prev_ape_seg_id
              INTO        codresult;

              IF codresult IS NULL THEN
                RAISE
              EXCEPTION
                ' Nessuno inserimento effettuato.';
              END IF;
            END IF;
          END IF;
          -- CL_RICORRENTE_SPESA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemgesttipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_ricorrente_spesa
          ||'.' ;
          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=elembil.elem_id
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=ricorrentespesaid
          AND      r.data_cancellazione IS NULL
          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',r.validita_inizio)
          AND      (
                            date_trunc('day',dataelaborazione)<=date_trunc('day',r.validita_fine)
                   OR       r.validita_fine IS NULL)
          AND      c.data_cancellazione IS NULL
          /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL)*/
          AND      NOT EXISTS
                   (
                                   SELECT DISTINCT 1
                                   FROM            siac_r_bil_elem_class r,
                                                   siac_t_class c
                                   WHERE           r.elem_id=bilelemidret
                                   AND             c.classif_id=r.classif_id
                                   AND             c.classif_tipo_id=ricorrentespesaid
                                   AND             c.data_cancellazione IS NULL
                                   /*AND             date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                   AND             (
                                                                   date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                   OR              c.validita_fine IS NULL)*/ )
          ORDER BY r.elem_id limit 1;

          -- JIRA-SIAC-4167 14.11.2016 Sofia
          IF codresult IS NOT NULL THEN
            /*
codResult:=null;
strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
insert into fase_bil_t_prev_apertura_segnala
(elem_id,
elem_code,
elem_code2,
elem_code3,
bil_id,
fase_bil_elab_id,
segnala_codice,
segnala_desc,
validita_inizio,
ente_proprietario_id,
login_operazione)
(select capitolo.elem_id,
capitolo.elem_code,
capitolo.elem_code2,
capitolo.elem_code3,
capitolo.bil_id,
faseBilElabId,
CL_RICORRENTE_SPESA,
CL_RICORRENTE_SPESA||' mancante',
dataInizioVal,
capitolo.ente_proprietario_id,
loginOperazione
from siac_t_bil_elem capitolo
where  capitolo.elem_id=bilElemIdRet
)
returning fase_bil_prev_ape_seg_id into codresult;
if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
*/
            --provo a collegare il capitolo con il classificatore equivalente nuovo
            --siac-5297
            -- Sofia 21.11.2017
            INSERT INTO siac_r_bil_elem_class
                        (
                                    elem_id,
                                    classif_id,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT bilelemidret,
                                      c.classif_id,
                                      datainizioval,
                                      c.ente_proprietario_id,
                                      loginoperazione
                               FROM   siac_t_class c ,
                                      siac_r_bil_elem_class rprec,
                                      siac_t_class cprec
                               WHERE  rprec.elem_id=elembil.elem_id
                               AND    cprec.classif_id=rprec.classif_id
                               AND    cprec.classif_tipo_id =ricorrentespesaid
                               AND    rprec.data_cancellazione IS NULL
                               AND    date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
                               AND    (
                                             date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                                      OR     rprec.validita_fine IS NULL) -- relazione ad oggi valida
                               AND    cprec.data_cancellazione IS NULL
                               AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
                               AND    c.ente_proprietario_id=cprec.ente_proprietario_id
                               AND    c.classif_tipo_id=cprec.classif_tipo_id
                               AND    c.classif_code=cprec.classif_code
                               AND    c.data_cancellazione IS NULL -- cercando un classificatore equivalente aperto su anno succ
                               AND    date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
                               AND    (
                                             date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                                      OR     c.validita_fine IS NULL) );

            GET diagnostics _row_count = row_count;
            IF _row_count <1 THEN
              codresult:=NULL;
              strmessaggio:=strmessaggio
              ||' Inserimento segnalazione mancanza classif.';
              INSERT INTO fase_bil_t_prev_apertura_segnala
                          (
                                      elem_id,
                                      elem_code,
                                      elem_code2,
                                      elem_code3,
                                      bil_id,
                                      fase_bil_elab_id,
                                      segnala_codice,
                                      segnala_desc,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT capitolo.elem_id,
                                        capitolo.elem_code,
                                        capitolo.elem_code2,
                                        capitolo.elem_code3,
                                        capitolo.bil_id,
                                        fasebilelabid,
                                        cl_ricorrente_spesa,
                                        cl_ricorrente_spesa
                                               ||' mancante',
                                        datainizioval,
                                        capitolo.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_bil_elem capitolo
                                 WHERE  capitolo.elem_id=bilelemidret )
              returning   fase_bil_prev_ape_seg_id
              INTO        codresult;

              IF codresult IS NULL THEN
                RAISE
              EXCEPTION
                ' Nessuno inserimento effettuato.';
              END IF;
            END IF;
          END IF;
          -- CL_SIOPE_SPESA_TERZO
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemgesttipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_siope_spesa_terzo
          ||'.' ;
          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=elembil.elem_id
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=siopespesatipoid
          AND      r.data_cancellazione IS NULL
          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',r.validita_inizio)
          AND      (
                            date_trunc('day',dataelaborazione)<=date_trunc('day',r.validita_fine)
                   OR       r.validita_fine IS NULL)
          AND      c.data_cancellazione IS NULL
          /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL)*/
          AND      NOT EXISTS
                   (
                                   SELECT DISTINCT 1
                                   FROM            siac_r_bil_elem_class r,
                                                   siac_t_class c
                                   WHERE           r.elem_id=bilelemidret
                                   AND             c.classif_id=r.classif_id
                                   AND             c.classif_tipo_id=siopespesatipoid
                                   AND             c.data_cancellazione IS NULL
                                   /*AND             date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                   AND             (
                                                                   date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                   OR              c.validita_fine IS NULL) */)
          ORDER BY r.elem_id limit 1;

          -- JIRA-SIAC-4167 14.11.2016 Sofia
          IF codresult IS NOT NULL THEN
            /*
codResult:=null;
strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
insert into fase_bil_t_prev_apertura_segnala
(elem_id,
elem_code,
elem_code2,
elem_code3,
bil_id,
fase_bil_elab_id,
segnala_codice,
segnala_desc,
validita_inizio,
ente_proprietario_id,
login_operazione)
(select capitolo.elem_id,
capitolo.elem_code,
capitolo.elem_code2,
capitolo.elem_code3,
capitolo.bil_id,
faseBilElabId,
CL_SIOPE_SPESA_TERZO,
CL_SIOPE_SPESA_TERZO||' mancante',
dataInizioVal,
capitolo.ente_proprietario_id,
loginOperazione
from siac_t_bil_elem capitolo
where  capitolo.elem_id=bilElemIdRet
)
returning fase_bil_prev_ape_seg_id into codresult;
if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
*/
            --provo a collegare il capitolo con il classificatore equivalente nuovo
            --siac-5297
            -- Sofia 21.11.2017
            INSERT INTO siac_r_bil_elem_class
                        (
                                    elem_id,
                                    classif_id,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT bilelemidret,
                                      c.classif_id,
                                      datainizioval,
                                      c.ente_proprietario_id,
                                      loginoperazione
                               FROM   siac_t_class c ,
                                      siac_r_bil_elem_class rprec,
                                      siac_t_class cprec
                               WHERE  rprec.elem_id=elembil.elem_id
                               AND    cprec.classif_id=rprec.classif_id
                               AND    cprec.classif_tipo_id =siopespesatipoid
                               AND    rprec.data_cancellazione IS NULL
                               AND    date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
                               AND    (
                                             date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                                      OR     rprec.validita_fine IS NULL) -- relazione ad oggi valida
                               AND    cprec.data_cancellazione IS NULL
                               AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
                               AND    c.ente_proprietario_id=cprec.ente_proprietario_id
                               AND    c.classif_tipo_id=cprec.classif_tipo_id
                               AND    c.classif_code=cprec.classif_code
                               AND    c.data_cancellazione IS NULL -- cercando un classificatore equivalente aperto su anno succ
                               AND    date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
                               AND    (
                                             date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                                      OR     c.validita_fine IS NULL) );

            GET diagnostics _row_count = row_count;
            IF _row_count <1 THEN
              codresult:=NULL;
              strmessaggio:=strmessaggio
              ||' Inserimento segnalazione mancanza classif.';
              INSERT INTO fase_bil_t_prev_apertura_segnala
                          (
                                      elem_id,
                                      elem_code,
                                      elem_code2,
                                      elem_code3,
                                      bil_id,
                                      fase_bil_elab_id,
                                      segnala_codice,
                                      segnala_desc,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT capitolo.elem_id,
                                        capitolo.elem_code,
                                        capitolo.elem_code2,
                                        capitolo.elem_code3,
                                        capitolo.bil_id,
                                        fasebilelabid,
                                        cl_siope_spesa_terzo,
                                        cl_siope_spesa_terzo
                                               ||' mancante',
                                        datainizioval,
                                        capitolo.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_bil_elem capitolo
                                 WHERE  capitolo.elem_id=bilelemidret )
              returning   fase_bil_prev_ape_seg_id
              INTO        codresult;

              IF codresult IS NULL THEN
                RAISE
              EXCEPTION
                ' Nessuno inserimento effettuato.';
              END IF;
            END IF;
          END IF;
          -- CL_TRANSAZIONE_UE_SPESA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemgesttipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_transazione_ue_spesa
          ||'.' ;
          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=elembil.elem_id
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=transazioneuespesaid
          AND      r.data_cancellazione IS NULL
          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',r.validita_inizio)
          AND      (
                            date_trunc('day',dataelaborazione)<=date_trunc('day',r.validita_fine)
                   OR       r.validita_fine IS NULL)
          AND      c.data_cancellazione IS NULL
          /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL)*/
          AND      NOT EXISTS
                   (
                                   SELECT DISTINCT 1
                                   FROM            siac_r_bil_elem_class r,
                                                   siac_t_class c
                                   WHERE           r.elem_id=bilelemidret
                                   AND             c.classif_id=r.classif_id
                                   AND             c.classif_tipo_id=transazioneuespesaid
                                   AND             c.data_cancellazione IS NULL
                                   /*AND             date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                   AND             (
                                                                   date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                   OR              c.validita_fine IS NULL)*/ )
          ORDER BY r.elem_id limit 1;

          -- JIRA-SIAC-4167 14.11.2016 Sofia
          IF codresult IS NOT NULL THEN
            /*
codResult:=null;
strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
insert into fase_bil_t_prev_apertura_segnala
(elem_id,
elem_code,
elem_code2,
elem_code3,
bil_id,
fase_bil_elab_id,
segnala_codice,
segnala_desc,
validita_inizio,
ente_proprietario_id,
login_operazione)
(select capitolo.elem_id,
capitolo.elem_code,
capitolo.elem_code2,
capitolo.elem_code3,
capitolo.bil_id,
faseBilElabId,
CL_TRANSAZIONE_UE_SPESA,
CL_TRANSAZIONE_UE_SPESA||' mancante',
dataInizioVal,
capitolo.ente_proprietario_id,
loginOperazione
from siac_t_bil_elem capitolo
where  capitolo.elem_id=bilElemIdRet
)
returning fase_bil_prev_ape_seg_id into codresult;
if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
*/
            --provo a collegare il capitolo con il classificatore equivalente nuovo
            --siac-5297
            -- Sofia 21.11.2017
            INSERT INTO siac_r_bil_elem_class
                        (
                                    elem_id,
                                    classif_id,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT bilelemidret,
                                      c.classif_id,
                                      datainizioval,
                                      c.ente_proprietario_id,
                                      loginoperazione
                               FROM   siac_t_class c ,
                                      siac_r_bil_elem_class rprec,
                                      siac_t_class cprec
                               WHERE  rprec.elem_id=elembil.elem_id
                               AND    cprec.classif_id=rprec.classif_id
                               AND    cprec.classif_tipo_id =transazioneuespesaid
                               AND    rprec.data_cancellazione IS NULL
                               AND    date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
                               AND    (
                                             date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                                      OR     rprec.validita_fine IS NULL) -- relazione ad oggi valida
                               AND    cprec.data_cancellazione IS NULL
                               AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
                               AND    c.ente_proprietario_id=cprec.ente_proprietario_id
                               AND    c.classif_tipo_id=cprec.classif_tipo_id
                               AND    c.classif_code=cprec.classif_code
                               AND    c.data_cancellazione IS NULL -- cercando un classificatore equivalente aperto su anno succ
                               AND    date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
                               AND    (
                                             date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                                      OR     c.validita_fine IS NULL) );

            GET diagnostics _row_count = row_count;
            if elembil.elem_id=55447 then
            	raise notice 'SOFIA SOFIA SOFIA _row_count=%',_row_count;
            end if;
            IF _row_count <1 THEN
              codresult:=NULL;
              strmessaggio:=strmessaggio
              ||' Inserimento segnalazione mancanza classif.';
              INSERT INTO fase_bil_t_prev_apertura_segnala
                          (
                                      elem_id,
                                      elem_code,
                                      elem_code2,
                                      elem_code3,
                                      bil_id,
                                      fase_bil_elab_id,
                                      segnala_codice,
                                      segnala_desc,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT capitolo.elem_id,
                                        capitolo.elem_code,
                                        capitolo.elem_code2,
                                        capitolo.elem_code3,
                                        capitolo.bil_id,
                                        fasebilelabid,
                                        cl_transazione_ue_spesa,
                                        cl_transazione_ue_spesa
                                               ||' mancante',
                                        datainizioval,
                                        capitolo.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_bil_elem capitolo
                                 WHERE  capitolo.elem_id=bilelemidret )
              returning   fase_bil_prev_ape_seg_id
              INTO        codresult;
			 raise notice 'fase_bil_prev_ape_seg_id=%',codresult;
              IF codresult IS NULL THEN
                RAISE
              EXCEPTION
                ' Nessuno inserimento effettuato.';
              END IF;
            END IF;
          END IF;
        ELSE
          -- CL_CATEGORIA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemgesttipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_categoria
          ||'.' ;
          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=bilelemidret
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=categoriatipoid
          AND      r.data_cancellazione IS NULL
          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',r.validita_inizio)
          AND      (
                            date_trunc('day',dataelaborazione)<=date_trunc('day',r.validita_fine)
                   OR       r.validita_fine IS NULL)
          AND      c.data_cancellazione IS NULL
          /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL)*/
          ORDER BY r.elem_id limit 1;

          -- Obbligatorieta  del classificatore vale solo per capitolo STANDARD
          IF categoriacapcode = categoria_std THEN
            -- JIRA-SIAC-4167 14.11.2016 Sofia
            -- if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
            IF codresult IS NULL THEN
              /*
codResult:=null;
strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
insert into fase_bil_t_prev_apertura_segnala
(elem_id,
elem_code,
elem_code2,
elem_code3,
bil_id,
fase_bil_elab_id,
segnala_codice,
segnala_desc,
validita_inizio,
ente_proprietario_id,
login_operazione)
(select capitolo.elem_id,
capitolo.elem_code,
capitolo.elem_code2,
capitolo.elem_code3,
capitolo.bil_id,
faseBilElabId,
CL_CATEGORIA,
CL_CATEGORIA||' mancante',
dataInizioVal,
capitolo.ente_proprietario_id,
loginOperazione
from siac_t_bil_elem capitolo
where  capitolo.elem_id=bilElemIdRet
)
returning fase_bil_prev_ape_seg_id into codresult;
if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
*/
              --provo a collegare il capitolo con il classificatore equivalente nuovo
              --siac-5297
              -- Sofia 21.11.2017
              INSERT INTO siac_r_bil_elem_class
                          (
                                      elem_id,
                                      classif_id,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT bilelemidret,
                                        c.classif_id,
                                        datainizioval,
                                        c.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_class c ,
                                        siac_r_bil_elem_class rprec,
                                        siac_t_class cprec
                                 WHERE  rprec.elem_id=elembil.elem_id
                                 AND    cprec.classif_id=rprec.classif_id
                                 AND    cprec.classif_tipo_id =categoriatipoid
                                 AND    rprec.data_cancellazione IS NULL
                                 AND    date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
                                 AND    (
                                               date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                                        OR     rprec.validita_fine IS NULL) -- relazione ad oggi valida
                                 AND    cprec.data_cancellazione IS NULL
                                 AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
                                 AND    c.ente_proprietario_id=cprec.ente_proprietario_id
                                 AND    c.classif_tipo_id=cprec.classif_tipo_id
                                 AND    c.classif_code=cprec.classif_code
                                 AND    c.data_cancellazione IS NULL -- cercando un classificatore equivalente aperto su anno succ
                                 AND    date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
                                 AND    (
                                               date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                                        OR     c.validita_fine IS NULL) );

              GET diagnostics _row_count = row_count;
              IF _row_count <1 THEN
                codresult:=NULL;
                strmessaggio:=strmessaggio
                ||' Inserimento segnalazione mancanza classif.';
                INSERT INTO fase_bil_t_prev_apertura_segnala
                            (
                                        elem_id,
                                        elem_code,
                                        elem_code2,
                                        elem_code3,
                                        bil_id,
                                        fase_bil_elab_id,
                                        segnala_codice,
                                        segnala_desc,
                                        validita_inizio,
                                        ente_proprietario_id,
                                        login_operazione
                            )
                            (
                                   SELECT capitolo.elem_id,
                                          capitolo.elem_code,
                                          capitolo.elem_code2,
                                          capitolo.elem_code3,
                                          capitolo.bil_id,
                                          fasebilelabid,
                                          cl_categoria,
                                          cl_categoria
                                                 ||' mancante',
                                          datainizioval,
                                          capitolo.ente_proprietario_id,
                                          loginoperazione
                                   FROM   siac_t_bil_elem capitolo
                                   WHERE  capitolo.elem_id=bilelemidret )
                returning   fase_bil_prev_ape_seg_id
                INTO        codresult;

                IF codresult IS NULL THEN
                  RAISE
                EXCEPTION
                  ' Nessuno inserimento effettuato.';
                END IF;
              END IF;
            END IF;
          END IF;
          -- CL_RICORRENTE_ENTRATA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemgesttipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_ricorrente_entrata
          ||'.' ;
          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=elembil.elem_id
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=ricorrenteentrataid
          AND      r.data_cancellazione IS NULL
          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',r.validita_inizio)
          AND      (
                            date_trunc('day',dataelaborazione)<=date_trunc('day',r.validita_fine)
                   OR       r.validita_fine IS NULL)
          AND      c.data_cancellazione IS NULL
          /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL)*/
          AND      NOT EXISTS
                   (
                                   SELECT DISTINCT 1
                                   FROM            siac_r_bil_elem_class r,
                                                   siac_t_class c
                                   WHERE           r.elem_id=bilelemidret
                                   AND             c.classif_id=r.classif_id
                                   AND             c.classif_tipo_id=ricorrenteentrataid
                                   AND             c.data_cancellazione IS NULL
                                   /*AND             date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                   AND             (
                                                                   date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                   OR              c.validita_fine IS NULL) */)
          ORDER BY r.elem_id limit 1;

          -- JIRA-SIAC-4167 14.11.2016 Sofia
          IF codresult IS NOT NULL THEN
            /*
codResult:=null;
strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
insert into fase_bil_t_prev_apertura_segnala
(elem_id,
elem_code,
elem_code2,
elem_code3,
bil_id,
fase_bil_elab_id,
segnala_codice,
segnala_desc,
validita_inizio,
ente_proprietario_id,
login_operazione)
(select capitolo.elem_id,
capitolo.elem_code,
capitolo.elem_code2,
capitolo.elem_code3,
capitolo.bil_id,
faseBilElabId,
CL_RICORRENTE_ENTRATA,
CL_RICORRENTE_ENTRATA||' mancante',
dataInizioVal,
capitolo.ente_proprietario_id,
loginOperazione
from siac_t_bil_elem capitolo
where  capitolo.elem_id=bilElemIdRet
)
returning fase_bil_prev_ape_seg_id into codresult;
if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
*/
            --provo a collegare il capitolo con il classificatore equivalente nuovo
            --siac-5297
            -- Sofia 21.11.2017
            INSERT INTO siac_r_bil_elem_class
                        (
                                    elem_id,
                                    classif_id,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT bilelemidret,
                                      c.classif_id,
                                      datainizioval,
                                      c.ente_proprietario_id,
                                      loginoperazione
                               FROM   siac_t_class c ,
                                      siac_r_bil_elem_class rprec,
                                      siac_t_class cprec
                               WHERE  rprec.elem_id=elembil.elem_id
                               AND    cprec.classif_id=rprec.classif_id
                               AND    cprec.classif_tipo_id =ricorrenteentrataid
                               AND    rprec.data_cancellazione IS NULL
                               AND    date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
                               AND    (
                                             date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                                      OR     rprec.validita_fine IS NULL) -- relazione ad oggi valida
                               AND    cprec.data_cancellazione IS NULL
                               AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
                               AND    c.ente_proprietario_id=cprec.ente_proprietario_id
                               AND    c.classif_tipo_id=cprec.classif_tipo_id
                               AND    c.classif_code=cprec.classif_code
                               AND    c.data_cancellazione IS NULL -- cercando un classificatore equivalente aperto su anno succ
                               AND    date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
                               AND    (
                                             date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                                      OR     c.validita_fine IS NULL) );

            GET diagnostics _row_count = row_count;
            IF _row_count <1 THEN
              codresult:=NULL;
              strmessaggio:=strmessaggio
              ||' Inserimento segnalazione mancanza classif.';
              INSERT INTO fase_bil_t_prev_apertura_segnala
                          (
                                      elem_id,
                                      elem_code,
                                      elem_code2,
                                      elem_code3,
                                      bil_id,
                                      fase_bil_elab_id,
                                      segnala_codice,
                                      segnala_desc,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT capitolo.elem_id,
                                        capitolo.elem_code,
                                        capitolo.elem_code2,
                                        capitolo.elem_code3,
                                        capitolo.bil_id,
                                        fasebilelabid,
                                        cl_ricorrente_entrata,
                                        cl_ricorrente_entrata
                                               ||' mancante',
                                        datainizioval,
                                        capitolo.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_bil_elem capitolo
                                 WHERE  capitolo.elem_id=bilelemidret )
              returning   fase_bil_prev_ape_seg_id
              INTO        codresult;

              IF codresult IS NULL THEN
                RAISE
              EXCEPTION
                ' Nessuno inserimento effettuato.';
              END IF;
            END IF;
          END IF;
          -- CL_SIOPE_ENTRATA_TERZO
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemgesttipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_siope_entrata_terzo
          ||'.' ;
          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=elembil.elem_id
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=siopeentratatipoid
          AND      r.data_cancellazione IS NULL
          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',r.validita_inizio)
          AND      (
                            date_trunc('day',dataelaborazione)<=date_trunc('day',r.validita_fine)
                   OR       r.validita_fine IS NULL)
          AND      c.data_cancellazione IS NULL
          /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL)*/
          AND      NOT EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class r,
                                     siac_t_class c
                            WHERE    r.elem_id=bilelemidret
                            AND      c.classif_id=r.classif_id
                            AND      c.classif_tipo_id=siopeentratatipoid
                            AND      c.data_cancellazione IS NULL
                            /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL)*/
                            ORDER BY r.elem_id limit 1)
          ORDER BY r.elem_id limit 1;

          -- JIRA-SIAC-4167 14.11.2016 Sofia
          IF codresult IS NOT NULL THEN
            /*
codResult:=null;
strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
insert into fase_bil_t_prev_apertura_segnala
(elem_id,
elem_code,
elem_code2,
elem_code3,
bil_id,
fase_bil_elab_id,
segnala_codice,
segnala_desc,
validita_inizio,
ente_proprietario_id,
login_operazione)
(select capitolo.elem_id,
capitolo.elem_code,
capitolo.elem_code2,
capitolo.elem_code3,
capitolo.bil_id,
faseBilElabId,
CL_SIOPE_ENTRATA_TERZO,
CL_SIOPE_ENTRATA_TERZO||' mancante',
dataInizioVal,
capitolo.ente_proprietario_id,
loginOperazione
from siac_t_bil_elem capitolo
where  capitolo.elem_id=bilElemIdRet
)
returning fase_bil_prev_ape_seg_id into codresult;
if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
*/
            --provo a collegare il capitolo con il classificatore equivalente nuovo
            --siac-5297
            -- Sofia 21.11.2017
            INSERT INTO siac_r_bil_elem_class
                        (
                                    elem_id,
                                    classif_id,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT bilelemidret,
                                      c.classif_id,
                                      datainizioval,
                                      c.ente_proprietario_id,
                                      loginoperazione
                               FROM   siac_t_class c ,
                                      siac_r_bil_elem_class rprec,
                                      siac_t_class cprec
                               WHERE  rprec.elem_id=elembil.elem_id
                               AND    cprec.classif_id=rprec.classif_id
                               AND    cprec.classif_tipo_id =siopeentratatipoid
                               AND    rprec.data_cancellazione IS NULL
                               AND    date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
                               AND    (
                                             date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                                      OR     rprec.validita_fine IS NULL) -- relazione ad oggi valida
                               AND    cprec.data_cancellazione IS NULL
                               AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
                               AND    c.ente_proprietario_id=cprec.ente_proprietario_id
                               AND    c.classif_tipo_id=cprec.classif_tipo_id
                               AND    c.classif_code=cprec.classif_code
                               AND    c.data_cancellazione IS NULL -- cercando un classificatore equivalente aperto su anno succ
                               AND    date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
                               AND    (
                                             date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                                      OR     c.validita_fine IS NULL) );

            GET diagnostics _row_count = row_count;
            IF _row_count <1 THEN
              codresult:=NULL;
              strmessaggio:=strmessaggio
              ||' Inserimento segnalazione mancanza classif.';
              INSERT INTO fase_bil_t_prev_apertura_segnala
                          (
                                      elem_id,
                                      elem_code,
                                      elem_code2,
                                      elem_code3,
                                      bil_id,
                                      fase_bil_elab_id,
                                      segnala_codice,
                                      segnala_desc,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT capitolo.elem_id,
                                        capitolo.elem_code,
                                        capitolo.elem_code2,
                                        capitolo.elem_code3,
                                        capitolo.bil_id,
                                        fasebilelabid,
                                        cl_siope_entrata_terzo,
                                        cl_siope_entrata_terzo
                                               ||' mancante',
                                        datainizioval,
                                        capitolo.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_bil_elem capitolo
                                 WHERE  capitolo.elem_id=bilelemidret )
              returning   fase_bil_prev_ape_seg_id
              INTO        codresult;

              IF codresult IS NULL THEN
                RAISE
              EXCEPTION
                ' Nessuno inserimento effettuato.';
              END IF;
            END IF;
          END IF;
          -- CL_TRANSAZIONE_UE_ENTRATA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture per tipo='
          ||bilelemgesttipo
          || '.Elemento di bilancio '
          ||elembil.elem_code
          ||' '
          ||elembil.elem_code2
          ||' '
          ||elembil.elem_code3
          ||' : verifica classificatore '
          ||cl_transazione_ue_entrata
          ||'.' ;
          SELECT   1
          INTO     codresult
          FROM     siac_r_bil_elem_class r,
                   siac_t_class c
          WHERE    r.elem_id=elembil.elem_id
          AND      c.classif_id=r.classif_id
          AND      c.classif_tipo_id=transazioneueentrataid
          AND      r.data_cancellazione IS NULL
          AND      date_trunc('day',dataelaborazione)>=date_trunc('day',r.validita_inizio)
          AND      (
                            date_trunc('day',dataelaborazione)<=date_trunc('day',r.validita_fine)
                   OR       r.validita_fine IS NULL)
          AND      c.data_cancellazione IS NULL
          /*AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
          AND      (
                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                   OR       c.validita_fine IS NULL)*/
          AND      NOT EXISTS
                   (
                                   SELECT DISTINCT 1
                                   FROM            siac_r_bil_elem_class r,
                                                   siac_t_class c
                                   WHERE           r.elem_id=bilelemidret
                                   AND             c.classif_id=r.classif_id
                                   AND             c.classif_tipo_id=transazioneueentrataid
                                   AND             c.data_cancellazione IS NULL
                                   /*AND             date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                   AND             (
                                                                   date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                   OR              c.validita_fine IS NULL) */)
          ORDER BY r.elem_id limit 1;

          -- JIRA-SIAC-4167 14.11.2016 Sofia
          IF codresult IS NOT NULL THEN
            /*
codResult:=null;
strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
insert into fase_bil_t_prev_apertura_segnala
(elem_id,
elem_code,
elem_code2,
elem_code3,
bil_id,
fase_bil_elab_id,
segnala_codice,
segnala_desc,
validita_inizio,
ente_proprietario_id,
login_operazione)
(select capitolo.elem_id,
capitolo.elem_code,
capitolo.elem_code2,
capitolo.elem_code3,
capitolo.bil_id,
faseBilElabId,
CL_TRANSAZIONE_UE_ENTRATA,
CL_TRANSAZIONE_UE_ENTRATA||' mancante',
dataInizioVal,
capitolo.ente_proprietario_id,
loginOperazione
from siac_t_bil_elem capitolo
where  capitolo.elem_id=bilElemIdRet
)
returning fase_bil_prev_ape_seg_id into codresult;
if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
*/
            --provo a collegare il capitolo con il classificatore equivalente nuovo
            --siac-5297
            -- Sofia 21.11.2017
            INSERT INTO siac_r_bil_elem_class
                        (
                                    elem_id,
                                    classif_id,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT bilelemidret,
                                      c.classif_id,
                                      datainizioval,
                                      c.ente_proprietario_id,
                                      loginoperazione
                               FROM   siac_t_class c ,
                                      siac_r_bil_elem_class rprec,
                                      siac_t_class cprec
                               WHERE  rprec.elem_id=elembil.elem_id
                               AND    cprec.classif_id=rprec.classif_id
                               AND    cprec.classif_tipo_id =transazioneueentrataid
                               AND    rprec.data_cancellazione IS NULL
                               AND    date_trunc('day',dataelaborazione)>=date_trunc('day',rprec.validita_inizio)
                               AND    (
                                             date_trunc('day',dataelaborazione)<=date_trunc('day',rprec.validita_fine)
                                      OR     rprec.validita_fine IS NULL) -- relazione ad oggi valida
                               AND    cprec.data_cancellazione IS NULL
                               AND    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',cprec.validita_fine) -- su classif chiuso in data in anno prec
                               AND    c.ente_proprietario_id=cprec.ente_proprietario_id
                               AND    c.classif_tipo_id=cprec.classif_tipo_id
                               AND    c.classif_code=cprec.classif_code
                               AND    c.data_cancellazione IS NULL -- cercando un classificatore equivalente aperto su anno succ
                               AND    date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',c.validita_inizio)
                               AND    (
                                             date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',c.validita_fine)
                                      OR     c.validita_fine IS NULL) );

            GET diagnostics _row_count = row_count;
            IF _row_count <1 THEN
              codresult:=NULL;
              strmessaggio:=strmessaggio
              ||' Inserimento segnalazione mancanza classif.';
              INSERT INTO fase_bil_t_prev_apertura_segnala
                          (
                                      elem_id,
                                      elem_code,
                                      elem_code2,
                                      elem_code3,
                                      bil_id,
                                      fase_bil_elab_id,
                                      segnala_codice,
                                      segnala_desc,
                                      validita_inizio,
                                      ente_proprietario_id,
                                      login_operazione
                          )
                          (
                                 SELECT capitolo.elem_id,
                                        capitolo.elem_code,
                                        capitolo.elem_code2,
                                        capitolo.elem_code3,
                                        capitolo.bil_id,
                                        fasebilelabid,
                                        cl_transazione_ue_entrata,
                                        cl_transazione_ue_entrata
                                               ||' mancante',
                                        datainizioval,
                                        capitolo.ente_proprietario_id,
                                        loginoperazione
                                 FROM   siac_t_bil_elem capitolo
                                 WHERE  capitolo.elem_id=bilelemidret )
              returning   fase_bil_prev_ape_seg_id
              INTO        codresult;

              IF codresult IS NULL THEN
                RAISE
              EXCEPTION
                ' Nessuno inserimento effettuato.';
              END IF;
            END IF;
          END IF;
        END IF;
        strmessaggio:='Inserimento nuove strutture per tipo='
        ||bilelemgesttipo
        || '.Elemento di bilancio '
        ||elembil.elem_code
        ||' '
        ||elembil.elem_code2
        ||' '
        ||elembil.elem_code3
        ||' : aggiornamento relazione tra elem_id_gest prec e elem_prov_id nuovo.' ;
        UPDATE fase_bil_t_gest_apertura_provv
        SET    elem_prov_new_id=bilelemidret
        WHERE  elem_id=elembil.elem_id
        AND    fase_bil_elab_id=fasebilelabid;

      END LOOP;
      strmessaggio:='Conclusione inserimento nuove strutture per tipo='
      ||bilelemgesttipo
      ||'.';
      codresult:=NULL;
      INSERT INTO fase_bil_t_elaborazione_log
                  (
                              fase_bil_elab_id,
                              fase_bil_elab_log_operazione,
                              validita_inizio,
                              login_operazione,
                              ente_proprietario_id
                  )
                  VALUES
                  (
                              fasebilelabid,
                              strmessaggio,
                              clock_timestamp(),
                              loginoperazione,
                              enteproprietarioid
                  )
      returning   fase_bil_elab_log_id
      INTO        codresult;

      IF codresult IS NULL THEN
        RAISE
      EXCEPTION
        ' Errore in inserimento LOG.';
      END IF;
    END IF;
    -- verifica apertura gestione provvisorio con gestione pre-esistente ( rielaborazione )
    IF checkgest=TRUE THEN
      codresult:=NULL;
      strmessaggio:='Verifica esistenza elementi di bilancio provvisorio equivalenti da aggiornare da gestione anno prec.';
      SELECT   1
      INTO     codresult
      FROM     fase_bil_t_gest_apertura_provv fase
      WHERE    fase.ente_proprietario_id=enteproprietarioid
      AND      fase.bil_id=bilancioid
      AND      fase.fase_bil_elab_id=fasebilelabid
      AND      fase.data_cancellazione IS NULL
      AND      fase.validita_fine IS NULL
      AND      fase.elem_id IS NOT NULL      -- esistenti in gestione precedente
      AND      fase.elem_prov_new_id IS NULL -- non elaborati per nuovo inserimento in gestione corrente
      AND      fase.elem_prov_id IS NOT NULL -- esistente in gestione corrente
      ORDER BY fase.fase_bil_gest_ape_prov_id limit 1;

      IF codresult IS NOT NULL THEN
        -- popolamento tabelle bck per salvataggio precedenti strutture
        -- siac_t_bil_elem
        codresult:=NULL;
        INSERT INTO fase_bil_t_elaborazione_log
                    (
                                fase_bil_elab_id,
                                fase_bil_elab_log_operazione,
                                validita_inizio,
                                login_operazione,
                                ente_proprietario_id
                    )
                    VALUES
                    (
                                fasebilelabid,
                                strmessaggio,
                                clock_timestamp(),
                                loginoperazione,
                                enteproprietarioid
                    )
        returning   fase_bil_elab_log_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Errore in inserimento LOG.';
        END IF;
        strmessaggio:='Backup vecchia struttura [siac_t_bil_elem] per capitoli provvisorio equivalente per nuovo aggiornamento.';
        INSERT INTO bck_fase_bil_t_gest_apertura_provv_bil_elem
                    (
                                elem_id,
                                elem_bck_id,
                                elem_bck_code,
                                elem_bck_code2,
                                elem_bck_code3,
                                elem_bck_desc,
                                elem_bck_desc2,
                                elem_bck_bil_id,
                                elem_bck_id_padre,
                                elem_bck_tipo_id,
                                elem_bck_livello,
                                elem_bck_ordine,
                                elem_bck_data_creazione,
                                elem_bck_data_modifica,
                                elem_bck_login_operazione,
                                elem_bck_validita_inizio,
                                elem_bck_validita_fine,
                                fase_bil_elab_id,
                                ente_proprietario_id,
                                login_operazione,
                                validita_inizio
                    )
                    (
                           SELECT fase.elem_prov_id,
                                  elem.elem_id,
                                  elem.elem_code,
                                  elem.elem_code2,
                                  elem.elem_code3,
                                  elem.elem_desc,
                                  elem.elem_desc2,
                                  elem.bil_id,
                                  elem.elem_id_padre,
                                  elem.elem_tipo_id,
                                  elem.livello,
                                  elem.ordine,
                                  elem.data_creazione,
                                  elem.data_modifica,
                                  elem.login_operazione,
                                  elem.validita_inizio,
                                  elem.validita_fine,
                                  fasebilelabid,
                                  elem.ente_proprietario_id,
                                  loginoperazione,
                                  datainizioval
                           FROM   fase_bil_t_gest_apertura_provv fase,
                                  siac_t_bil_elem elem
                           WHERE  fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    elem.elem_id=fase.elem_prov_id
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.validita_fine IS NULL
                           AND    fase.elem_prov_id IS NOT NULL -- esistente in gestione corrente
                           AND    fase.elem_id IS NOT NULL      -- esistente in gestione precedente
                           AND    fase.elem_prov_new_id IS NULL -- non inserito come nuovo gestione
                    );

        -- bck per attributi e classificatori, stato e categoria
        strmessaggio:='Backup vecchia struttura [siac_r_bil_elem_stato] per capitoli provvisorio equivalente per nuovo aggiornamento.';
        INSERT INTO bck_fase_bil_t_gest_apertura_provv_bil_elem_stato
                    (
                                elem_id,
                                elem_bck_id,
                                elem_bck_stato_id,
                                elem_bck_data_creazione,
                                elem_bck_data_modifica,
                                elem_bck_login_operazione,
                                elem_bck_validita_inizio,
                                elem_bck_validita_fine,
                                fase_bil_elab_id,
                                ente_proprietario_id,
                                login_operazione,
                                validita_inizio
                    )
                    (
                           SELECT fase.elem_prov_id,
                                  elem.elem_id,
                                  elem.elem_stato_id,
                                  elem.data_creazione,
                                  elem.data_modifica,
                                  elem.login_operazione,
                                  elem.validita_inizio,
                                  elem.validita_fine,
                                  fasebilelabid,
                                  elem.ente_proprietario_id,
                                  loginoperazione,
                                  datainizioval
                           FROM   fase_bil_t_gest_apertura_provv fase,
                                  siac_r_bil_elem_stato elem
                           WHERE  fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    elem.elem_id=fase.elem_prov_id
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.validita_fine IS NULL
                           AND    fase.elem_prov_id IS NOT NULL -- esistente in gestione corrente
                           AND    fase.elem_id IS NOT NULL      -- esistente in gestione precedente
                           AND    fase.elem_prov_new_id IS NULL -- non inserito come nuovo gestione
                           AND    elem.data_cancellazione IS NULL
                           AND    elem.validita_fine IS NULL );

        strmessaggio:='Backup vecchia struttura [siac_r_bil_elem_attr] per capitoli provvisorio equivalente per nuovo aggiornamento.';
        INSERT INTO bck_fase_bil_t_gest_apertura_provv_bil_elem_attr
                    (
                                elem_id,
                                elem_bck_id,
                                elem_bck_attr_id,
                                elem_bck_tabella_id,
                                elem_bck_boolean,
                                elem_bck_percentuale,
                                elem_bck_testo,
                                elem_bck_numerico,
                                elem_bck_data_creazione,
                                elem_bck_data_modifica,
                                elem_bck_login_operazione,
                                elem_bck_validita_inizio,
                                elem_bck_validita_fine,
                                fase_bil_elab_id,
                                ente_proprietario_id,
                                login_operazione,
                                validita_inizio
                    )
                    (
                           SELECT fase.elem_prov_id,
                                  elem.elem_id,
                                  elem.attr_id,
                                  elem.tabella_id,
                                  elem."boolean",
                                  elem.percentuale,
                                  elem.testo,
                                  elem.numerico,
                                  elem.data_creazione,
                                  elem.data_modifica,
                                  elem.login_operazione,
                                  elem.validita_inizio,
                                  elem.validita_fine,
                                  fasebilelabid,
                                  elem.ente_proprietario_id,
                                  loginoperazione,
                                  datainizioval
                           FROM   fase_bil_t_gest_apertura_provv fase,
                                  siac_r_bil_elem_attr elem
                           WHERE  fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    elem.elem_id=fase.elem_prov_id
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.validita_fine IS NULL
                           AND    fase.elem_prov_id IS NOT NULL -- esistente in gestione corrente
                           AND    fase.elem_id IS NOT NULL      -- esistente in gestione precedente
                           AND    fase.elem_prov_new_id IS NULL -- non inserito come nuovo gestione
                           AND    elem.data_cancellazione IS NULL
                           AND    elem.validita_fine IS NULL );

        strmessaggio:='Backup vecchia struttura [siac_r_bil_elem_class] per capitoli provvisorio equivalente per nuovo aggiornamento.';
        INSERT INTO bck_fase_bil_t_gest_apertura_provv_bil_elem_class
                    (
                                elem_id,
                                elem_bck_id,
                                elem_bck_classif_id,
                                elem_bck_data_creazione,
                                elem_bck_data_modifica,
                                elem_bck_login_operazione,
                                elem_bck_validita_inizio,
                                elem_bck_validita_fine,
                                fase_bil_elab_id,
                                ente_proprietario_id,
                                login_operazione,
                                validita_inizio
                    )
                    (
                           SELECT fase.elem_prov_id,
                                  elem.elem_id,
                                  elem.classif_id,
                                  elem.data_creazione,
                                  elem.data_modifica,
                                  elem.login_operazione,
                                  elem.validita_inizio,
                                  elem.validita_fine,
                                  fasebilelabid,
                                  elem.ente_proprietario_id,
                                  loginoperazione,
                                  datainizioval
                           FROM   fase_bil_t_gest_apertura_provv fase,
                                  siac_r_bil_elem_class elem
                           WHERE  fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    elem.elem_id=fase.elem_prov_id
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.validita_fine IS NULL
                           AND    fase.elem_prov_id IS NOT NULL -- esistente in gestione corrente
                           AND    fase.elem_id IS NOT NULL      -- esistente in gestione precedente
                           AND    fase.elem_prov_new_id IS NULL -- non inserito come nuovo gestione
                           AND    elem.data_cancellazione IS NULL
                           AND    elem.validita_fine IS NULL );

        strmessaggio:='Backup vecchia struttura [siac_r_bil_elem_categoria] per capitoli provvisorio equivalente per nuovo aggiornamento.';
        INSERT INTO bck_fase_bil_t_gest_apertura_provv_bil_elem_categ
                    (
                                elem_id,
                                elem_bck_id,
                                elem_bck_cat_id,
                                elem_bck_data_creazione,
                                elem_bck_data_modifica,
                                elem_bck_login_operazione,
                                elem_bck_validita_inizio,
                                elem_bck_validita_fine,
                                fase_bil_elab_id,
                                ente_proprietario_id,
                                login_operazione,
                                validita_inizio
                    )
                    (
                           SELECT fase.elem_prov_id,
                                  elem.elem_id,
                                  elem.elem_cat_id,
                                  elem.data_creazione,
                                  elem.data_modifica,
                                  elem.login_operazione,
                                  elem.validita_inizio,
                                  elem.validita_fine,
                                  fasebilelabid,
                                  elem.ente_proprietario_id,
                                  loginoperazione,
                                  datainizioval
                           FROM   fase_bil_t_gest_apertura_provv fase,
                                  siac_r_bil_elem_categoria elem
                           WHERE  fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    elem.elem_id=fase.elem_prov_id
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.validita_fine IS NULL
                           AND    fase.elem_prov_id IS NOT NULL -- esistente in gestione corrente
                           AND    fase.elem_id IS NOT NULL      -- esistente in gestione precedente
                           AND    fase.elem_prov_new_id IS NULL -- non inserito come nuovo gestione
                           AND    elem.data_cancellazione IS NULL
                           AND    elem.validita_fine IS NULL );

        codresult:=NULL;
        INSERT INTO fase_bil_t_elaborazione_log
                    (
                                fase_bil_elab_id,
                                fase_bil_elab_log_operazione,
                                validita_inizio,
                                login_operazione,
                                ente_proprietario_id
                    )
                    VALUES
                    (
                                fasebilelabid,
                                strmessaggio,
                                clock_timestamp(),
                                loginoperazione,
                                enteproprietarioid
                    )
        returning   fase_bil_elab_log_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Errore in inserimento LOG.';
        END IF;
        codresult:=NULL;
        strmessaggio:='Inizio cancellazione logica vecchie strutture provvisorio esistenti.';
        INSERT INTO fase_bil_t_elaborazione_log
                    (
                                fase_bil_elab_id,
                                fase_bil_elab_log_operazione,
                                validita_inizio,
                                login_operazione,
                                ente_proprietario_id
                    )
                    VALUES
                    (
                                fasebilelabid,
                                strmessaggio,
                                clock_timestamp(),
                                loginoperazione,
                                enteproprietarioid
                    )
        returning   fase_bil_elab_log_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Errore in inserimento LOG.';
        END IF;
        -- cancellazione logica precendenti relazioni
        -- siac_r_bil_elem_stato
        /* per queste relazioni si va in aggiornamento fatti bck prima
strMessaggio:='Cancellazione logica vecchie strutture provvisorio esistenti [siac_r_bil_elem_stato].';
update siac_r_bil_elem_stato canc  set
data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
where canc.ente_proprietario_id=enteProprietarioId
and   canc.data_cancellazione is null and canc.validita_fine is null
and   exists (select 1 from fase_bil_t_gest_apertura_provv fase
where fase.ente_proprietario_id=enteProprietarioId
and   fase.bil_id=bilancioId
and   fase.fase_bil_elab_id=faseBilElabId
and   fase.elem_prov_id=canc.elem_id
and   fase.elem_prov_id is not null
and   fase.elem_id is not null
and   fase.elem_prov_new_id is null
and   fase.data_cancellazione is null
order by fase.fase_bil_gest_ape_prov_id
limit 1);
-- siac_r_bil_elem_categoria
strMessaggio:='Cancellazione logica vecchie strutture provvisorio esistenti [siac_r_bil_elem_categoria].';
update  siac_r_bil_elem_categoria canc set
data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
where canc.ente_proprietario_id=enteProprietarioId
and   canc.data_cancellazione is null and canc.validita_fine is null
and   exists (select 1 from fase_bil_t_gest_apertura_provv fase
where fase.ente_proprietario_id=enteProprietarioId
and   fase.bil_id=bilancioId
and   fase.fase_bil_elab_id=faseBilElabId
and   fase.elem_prov_id=canc.elem_id
and   fase.elem_prov_id is not null
and   fase.elem_id is not null
and   fase.elem_prov_new_id is null
and   fase.data_cancellazione is null
order by fase.fase_bil_gest_ape_prov_id
limit 1);
-- siac_r_bil_elem_attr
strMessaggio:='Cancellazione logica vecchie strutture provvisorio esistenti [siac_r_bil_elem_attr].';
update siac_r_bil_elem_attr canc set
data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
where canc.ente_proprietario_id=enteProprietarioId
and   canc.data_cancellazione is null and canc.validita_fine is null
and   exists (select 1 from fase_bil_t_gest_apertura_provv fase
where fase.ente_proprietario_id=enteProprietarioId
and   fase.bil_id=bilancioId
and   fase.fase_bil_elab_id=faseBilElabId
and   fase.elem_prov_id=canc.elem_id
and   fase.elem_prov_id is not null
and   fase.elem_id is not null
and   fase.elem_prov_new_id is null
and   fase.data_cancellazione is null
order by fase.fase_bil_gest_ape_prov_id
limit 1);
-- siac_r_bil_elem_class
strMessaggio:='Cancellazione logica vecchie strutture provvisorio esistenti [siac_r_bil_elem_class].';
update siac_r_bil_elem_class canc set
data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
where canc.ente_proprietario_id=enteProprietarioId
and   canc.data_cancellazione is null and canc.validita_fine is null
and   exists (select 1 from fase_bil_t_gest_apertura_provv fase
where fase.ente_proprietario_id=enteProprietarioId
and   fase.bil_id=bilancioId
and   fase.fase_bil_elab_id=faseBilElabId
and   fase.elem_prov_id=canc.elem_id
and   fase.elem_prov_id is not null
and   fase.elem_id is not null
and   fase.elem_prov_new_id is null
and   fase.data_cancellazione is null
order by fase.fase_bil_gest_ape_prov_id
limit 1);
*/
        /*--SIAC-5590
-- siac_r_vincolo_bil_elem
strMessaggio:='Cancellazione logica vecchie strutture provvisorio esistenti [siac_r_vincolo_bil_elem].';
update siac_r_vincolo_bil_elem canc set
data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
where canc.ente_proprietario_id=enteProprietarioId
and   canc.data_cancellazione is null and canc.validita_fine is null
and   exists (select 1 from fase_bil_t_gest_apertura_provv fase
where fase.ente_proprietario_id=enteProprietarioId
and   fase.bil_id=bilancioId
and   fase.fase_bil_elab_id=faseBilElabId
and   fase.elem_prov_id=canc.elem_id
and   fase.elem_prov_id is not null
and   fase.elem_id is not null
and   fase.elem_prov_new_id is null
and   fase.data_cancellazione is null
order by fase.fase_bil_gest_ape_prov_id
limit 1);
*/
        -- siac_r_bil_elem_atto_legge
        strmessaggio:='Cancellazione logica vecchie strutture provvisorio esistenti [siac_r_bil_elem_atto_legge].';
        UPDATE siac_r_bil_elem_atto_legge canc
        SET    data_cancellazione=now(),
               validita_fine=now(),
               login_operazione=loginoperazione
        WHERE  canc.ente_proprietario_id=enteproprietarioid
        AND    canc.data_cancellazione IS NULL
        AND    canc.validita_fine IS NULL
        AND    EXISTS
               (
                        SELECT   1
                        FROM     fase_bil_t_gest_apertura_provv fase
                        WHERE    fase.ente_proprietario_id=enteproprietarioid
                        AND      fase.bil_id=bilancioid
                        AND      fase.fase_bil_elab_id=fasebilelabid
                        AND      fase.elem_prov_id=canc.elem_id
                        AND      fase.elem_prov_id IS NOT NULL
                        AND      fase.elem_id IS NOT NULL
                        AND      fase.elem_prov_new_id IS NULL
                        AND      fase.data_cancellazione IS NULL
                        ORDER BY fase.fase_bil_gest_ape_prov_id limit 1);

        -- siac_r_bil_elem_rel_tempo
        strmessaggio:='Cancellazione logica vecchie strutture provvisorio esistenti [siac_r_bil_elem_rel_tempo].';
        UPDATE siac_r_bil_elem_rel_tempo canc
        SET    data_cancellazione=now(),
               validita_fine=now(),
               login_operazione=loginoperazione
        WHERE  canc.ente_proprietario_id=enteproprietarioid
        AND    canc.data_cancellazione IS NULL
        AND    canc.validita_fine IS NULL
        AND    EXISTS
               (
                        SELECT   1
                        FROM     fase_bil_t_gest_apertura_provv fase
                        WHERE    fase.ente_proprietario_id=enteproprietarioid
                        AND      fase.bil_id=bilancioid
                        AND      fase.fase_bil_elab_id=fasebilelabid
                        AND      fase.elem_prov_id=canc.elem_id
                        AND      fase.elem_prov_id IS NOT NULL
                        AND      fase.elem_id IS NOT NULL
                        AND      fase.elem_prov_new_id IS NULL
                        AND      fase.data_cancellazione IS NULL
                        ORDER BY fase.fase_bil_gest_ape_prov_id limit 1);

        codresult:=NULL;
        strmessaggio:='Fine cancellazione logica vecchie strutture provvisorio esistenti.';
        INSERT INTO fase_bil_t_elaborazione_log
                    (
                                fase_bil_elab_id,
                                fase_bil_elab_log_operazione,
                                validita_inizio,
                                login_operazione,
                                ente_proprietario_id
                    )
                    VALUES
                    (
                                fasebilelabid,
                                strmessaggio,
                                clock_timestamp(),
                                loginoperazione,
                                enteproprietarioid
                    )
        returning   fase_bil_elab_log_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Errore in inserimento LOG.';
        END IF;
        -- cancellazione logica precendenti relazioni
        -- aggiornamento siac_t_bil_elem
        strmessaggio:='Aggiornamento nuova struttura provvisorio esistente da gestione equivalente anno precedente [siac_t_bil_elem].';
        UPDATE siac_t_bil_elem gestcorr
        SET
               (
                      elem_desc,
                      elem_desc2,
                      ordine,
                      livello,
                      data_modifica,
                      login_operazione
               )
               = (gest.elem_desc,gest.elem_desc2,gest.ordine,gest.livello,now(),loginoperazione)
        FROM   fase_bil_t_gest_apertura_provv fase,
               siac_t_bil_elem gest
        WHERE  gestcorr.ente_proprietario_id=enteproprietarioid
        AND    gestcorr.elem_id=fase.elem_prov_id
        AND    gest.elem_id=fase.elem_id
        AND    fase.ente_proprietario_id=enteproprietarioid
        AND    fase.bil_id=bilancioid
        AND    fase.fase_bil_elab_id=fasebilelabid
        AND    fase.data_cancellazione IS NULL
        AND    fase.elem_id IS NOT NULL       -- gestione equivalente anno prec esistente
        AND    fase.elem_prov_id IS NOT NULL  -- gestione equivalente corrente esistente
        AND    fase.elem_prov_new_id IS NULL; -- non inserito come nuova gestione corrente
        codresult:=NULL;
        INSERT INTO fase_bil_t_elaborazione_log
                    (
                                fase_bil_elab_id,
                                fase_bil_elab_log_operazione,
                                validita_inizio,
                                login_operazione,
                                ente_proprietario_id
                    )
                    VALUES
                    (
                                fasebilelabid,
                                strmessaggio,
                                clock_timestamp(),
                                loginoperazione,
                                enteproprietarioid
                    )
        returning   fase_bil_elab_log_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Errore in inserimento LOG.';
        END IF;
        codresult:=NULL;
        strmessaggio:='Inizio inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente.';
        INSERT INTO fase_bil_t_elaborazione_log
                    (
                                fase_bil_elab_id,
                                fase_bil_elab_log_operazione,
                                validita_inizio,
                                login_operazione,
                                ente_proprietario_id
                    )
                    VALUES
                    (
                                fasebilelabid,
                                strmessaggio,
                                clock_timestamp(),
                                loginoperazione,
                                enteproprietarioid
                    )
        returning   fase_bil_elab_log_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Errore in inserimento LOG.';
        END IF;
        -- update relazioni esistenti
        -- siac_r_bil_elem_stato
        /* strMessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_stato].';
insert into siac_r_bil_elem_stato
(elem_id,elem_stato_id,validita_inizio,ente_proprietario_id,login_operazione)
(select fase.elem_prov_id, stato.elem_stato_id , dataInizioVal, stato.ente_proprietario_id, loginOperazione
from siac_r_bil_elem_stato stato, fase_bil_t_gest_apertura_provv fase
where stato.elem_id=fase.elem_id
and   fase.ente_proprietario_id=enteProprietarioid
and   fase.bil_id=bilancioId
and   fase.fase_bil_elab_id=faseBilElabId
and   fase.data_cancellazione is null
and   fase.elem_id is not null
and   fase.elem_prov_id is not null
and   fase.elem_prov_new_id is null
and   stato.data_cancellazione is null
and   stato.validita_fine is null);*/
        -- siac_r_bil_elem_stato
        strmessaggio:='Aggiornamento strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_stato].';
        UPDATE siac_r_bil_elem_stato stato
        SET    elem_stato_id=stato.elem_stato_id,
               data_modifica=now(),
               login_operazione=loginoperazione
        FROM   fase_bil_t_gest_apertura_provv fase,
               siac_r_bil_elem_stato statonew
        WHERE  stato.elem_id=fase.elem_prov_id
        AND    statonew.elem_id=fase.elem_id
        AND    fase.ente_proprietario_id=enteproprietarioid
        AND    fase.bil_id=bilancioid
        AND    fase.fase_bil_elab_id=fasebilelabid
        AND    fase.data_cancellazione IS NULL
        AND    fase.elem_id IS NOT NULL
        AND    fase.elem_prov_id IS NOT NULL
        AND    fase.elem_prov_new_id IS NULL
        AND    stato.data_cancellazione IS NULL
        AND    stato.validita_fine IS NULL
        AND    statonew.data_cancellazione IS NULL
        AND    statonew.validita_fine IS NULL;

        -- siac_r_bil_elem_attr
        strmessaggio:='Cancellazione per nuovo inserimento strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_attr].';
        DELETE
        FROM   siac_r_bil_elem_attr attr
        USING  fase_bil_t_gest_apertura_provv fase
        WHERE  attr.elem_id=fase.elem_prov_id
        AND    fase.ente_proprietario_id=enteproprietarioid
        AND    fase.bil_id=bilancioid
        AND    fase.fase_bil_elab_id=fasebilelabid
        AND    fase.data_cancellazione IS NULL
        AND    fase.elem_id IS NOT NULL
        AND    fase.elem_prov_id IS NOT NULL
        AND    fase.elem_prov_new_id IS NULL
        AND    attr.data_cancellazione IS NULL
        AND    attr.validita_fine IS NULL;

        strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_attr].';
        INSERT INTO siac_r_bil_elem_attr
                    (
                                elem_id,
                                attr_id,
                                tabella_id,
                                BOOLEAN,
                                percentuale,
                                testo,
                                numerico,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT fase.elem_prov_id,
                                  attr.attr_id ,
                                  attr.tabella_id,
                                  attr.BOOLEAN,
                                  attr.percentuale,
                                  attr.testo,
                                  attr.numerico,
                                  datainizioval,
                                  attr.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_attr attr,
                                  fase_bil_t_gest_apertura_provv fase
                           WHERE  attr.elem_id=fase.elem_id
                           AND    fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.elem_id IS NOT NULL
                           AND    fase.elem_prov_id IS NOT NULL
                           AND    fase.elem_prov_new_id IS NULL
                           AND    attr.data_cancellazione IS NULL
                           AND    attr.validita_fine IS NULL);

        -- siac_r_bil_elem_categoria
        strmessaggio:='Cancellazione per nuovo inserimento strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_categoria].';
        DELETE
        FROM   siac_r_bil_elem_categoria cat
        USING  fase_bil_t_gest_apertura_provv fase
        WHERE  cat.elem_id=fase.elem_prov_id
        AND    fase.ente_proprietario_id=enteproprietarioid
        AND    fase.bil_id=bilancioid
        AND    fase.fase_bil_elab_id=fasebilelabid
        AND    fase.data_cancellazione IS NULL
        AND    fase.elem_id IS NOT NULL
        AND    fase.elem_prov_id IS NOT NULL
        AND    fase.elem_prov_new_id IS NULL
        AND    cat.data_cancellazione IS NULL
        AND    cat.validita_fine IS NULL;

        strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_categoria].';
        INSERT INTO siac_r_bil_elem_categoria
                    (
                                elem_id,
                                elem_cat_id,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT fase.elem_prov_id,
                                  cat.elem_cat_id ,
                                  datainizioval,
                                  cat.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_categoria cat,
                                  fase_bil_t_gest_apertura_provv fase
                           WHERE  cat.elem_id=fase.elem_id
                           AND    fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.elem_id IS NOT NULL
                           AND    fase.elem_prov_id IS NOT NULL
                           AND    fase.elem_prov_new_id IS NULL
                           AND    cat.data_cancellazione IS NULL
                           AND    cat.validita_fine IS NULL);

        -- siac_r_bil_elem_class
        strmessaggio:='Cancellazione per nuovo inserimento strutture provvisorio esistenti da gestione equivalente anno precedente [fase_bil_t_gest_apertura_provv].';
        DELETE
        FROM   siac_r_bil_elem_class class
        USING  fase_bil_t_gest_apertura_provv fase
        WHERE  class.elem_id=fase.elem_prov_id
        AND    fase.ente_proprietario_id=enteproprietarioid
        AND    fase.bil_id=bilancioid
        AND    fase.fase_bil_elab_id=fasebilelabid
        AND    fase.data_cancellazione IS NULL
        AND    fase.elem_id IS NOT NULL
        AND    fase.elem_prov_id IS NOT NULL
        AND    fase.elem_prov_new_id IS NULL
        AND    class.data_cancellazione IS NULL
        AND    class.validita_fine IS NULL;

        strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].';
        /*
insert into siac_r_bil_elem_class
(elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
(select fase.elem_prov_id, class.classif_id , dataInizioVal, class.ente_proprietario_id, loginOperazione
from siac_r_bil_elem_class class, fase_bil_t_gest_apertura_provv fase,siac_t_class c
where class.elem_id=fase.elem_id
and   fase.ente_proprietario_id=enteProprietarioid
and   fase.bil_id=bilancioId
and   fase.fase_bil_elab_id=faseBilElabId
and   fase.data_cancellazione is null
and   fase.elem_id is not null
and   fase.elem_prov_id is not null
and   fase.elem_prov_new_id is null
and   class.data_cancellazione is null
and   class.validita_fine is null;
*/
        -- JIRA-SIAC-4167 14.11.2016
        INSERT INTO siac_r_bil_elem_class
                    (
                                elem_id,
                                classif_id,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT fase.elem_prov_id,
                                  class.classif_id ,
                                  datainizioval,
                                  class.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_class class,
                                  fase_bil_t_gest_apertura_provv fase,
                                  siac_t_class c
                           WHERE  class.elem_id=fase.elem_id
                           AND    fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.elem_id IS NOT NULL
                           AND    fase.elem_prov_id IS NOT NULL
                           AND    fase.elem_prov_new_id IS NULL
                           AND    class.data_cancellazione IS NULL
                           AND    class.validita_fine IS NULL
                           AND    c.classif_id=class.classif_id
                           AND    c.data_cancellazione IS NULL
                           AND    date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                           AND    ( date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine) OR     c.validita_fine IS NULL));


    	-- 22.11.2017 Sofia - siac-5297
        strmessaggio:='Inserimento nuove strutture previsione esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Classificazioni equivalenti anno nuovo.';
		INSERT INTO siac_r_bil_elem_class
                    (
                                elem_id,
                                classif_id,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT --fase.elem_prev_id,
                                  fase.elem_prov_id,
                                  cnew.classif_id ,
                                  datainizioval,
                                  class.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_class class,
                                  fase_bil_t_gest_apertura_provv fase,
                                  siac_t_class c, siac_t_class cnew
                           WHERE  class.elem_id=fase.elem_id
                           AND    fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    c.classif_id=class.classif_id
                           and    cnew.ente_proprietario_id=c.ente_proprietario_id
                           and    cnew.classif_tipo_id=c.classif_tipo_id
                           and    cnew.classif_code=c.classif_code
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.elem_prov_id IS NOT NULL
                           AND    fase.elem_prov_new_id IS NULL
                         -- AND    fase.elem_gest_id IS NOT NULL
                         --  AND    fase.elem_prev_id IS NOT NULL
                           AND    class.data_cancellazione IS NULL
                           AND    class.validita_fine IS NULL
                           AND    c.data_cancellazione IS NULL
                           and    date_trunc('day',v_dataprimogiornoanno)>date_trunc('day',c.validita_fine)
						   and    cnew.data_cancellazione is null
          				   and    date_trunc('day',v_dataprimogiornoanno)<=date_trunc('day',cnew.validita_inizio)
				           AND    (date_trunc('day',v_dataprimogiornoanno) < date_trunc('day',cnew.validita_fine)or cnew.validita_fine IS NULL)
                           and    not exists
                           (
                           select 1
                           from siac_r_bil_elem_class r1,siac_t_class c1
                           where r1.elem_id=fase.elem_prov_id
                           and   c1.classif_id=r1.classif_id
                           and   c1.classif_tipo_id=c.classif_tipo_id
                           and   r1.data_cancellazione  is null
                           and   r1.validita_fine is null
                           )
           			 );


        /* SIAC-5590
-- inserimento nuove relazioni
-- siac_r_vincolo_bil_elem
strMessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_vincolo_bil_elem].';
insert into siac_r_vincolo_bil_elem
( elem_id,vincolo_id, validita_inizio,ente_proprietario_id,login_operazione)
(select fase.elem_prov_id, v.vincolo_id, dataInizioVal,v.ente_proprietario_id, loginOperazione
from siac_r_vincolo_bil_elem v,fase_bil_t_gest_apertura_provv fase
where v.elem_id=fase.elem_id
and   fase.ente_proprietario_id=enteProprietarioid
and   fase.bil_id=bilancioId
and   fase.fase_bil_elab_id=faseBilElabId
and   fase.data_cancellazione is null
and   fase.elem_id is not null
and   fase.elem_prov_id is not null
and   fase.elem_prov_new_id is null
and   v.data_cancellazione is null
and   v.validita_fine is null
);
*/
        -- siac_r_bil_elem_atto_legge
        strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_atto_legge].';
        INSERT INTO siac_r_bil_elem_atto_legge
                    (
                                elem_id,
                                attolegge_id,
                                descrizione,
                                gerarchia,
                                finanziamento_inizio,
                                finanziamento_fine,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT fase.elem_prov_id,
                                  v.attolegge_id,
                                  v.descrizione,
                                  v.gerarchia,
                                  v.finanziamento_inizio,
                                  v.finanziamento_fine,
                                  datainizioval,
                                  v.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_atto_legge v,
                                  fase_bil_t_gest_apertura_provv fase
                           WHERE  v.elem_id=fase.elem_id
                           AND    fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.elem_id IS NOT NULL
                           AND    fase.elem_prov_id IS NOT NULL
                           AND    fase.elem_prov_new_id IS NULL
                           AND    v.data_cancellazione IS NULL
                           AND    v.validita_fine IS NULL );

        -- siac_r_bil_elem_rel_tempo
        strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_rel_tempo].';
	    -- siac-8383 Sofia 14.10.2021 
		-- elem_id_old deve essere ricalcolato in base al suo stesso equivalente di gestione in annobilancio-1
		-- attenzione anche al controllo dopo la insert o da commentare o da correggere		
       /*INSERT INTO siac_r_bil_elem_rel_tempo
                    (
                                elem_id,
                                elem_id_old,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT fase.elem_prov_id,
                                  v.elem_id_old,
                                  datainizioval,
                                  v.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_rel_tempo v,
                                  fase_bil_t_gest_apertura_provv fase
                           WHERE  v.elem_id=fase.elem_id
                           AND    fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.elem_id IS NOT NULL
                           AND    fase.elem_prov_id IS NOT NULL
                           AND    fase.elem_prov_new_id IS NULL
                           AND    v.data_cancellazione IS NULL
                           AND    v.validita_fine IS NULL );*/
         -- siac-8383 Sofia 25.10.2021                  
        INSERT INTO siac_r_bil_elem_rel_tempo
                    (
                                elem_id,
                                elem_id_old,
                                validita_inizio,
                                ente_proprietario_id,
                                login_operazione
                    )
                    (
                           SELECT fase.elem_prov_id,
                                  enew.elem_id,
                                  datainizioval,
                                  v.ente_proprietario_id,
                                  loginoperazione
                           FROM   siac_r_bil_elem_rel_tempo v,
                                  fase_bil_t_gest_apertura_provv fase,
                                  siac_t_bil_elem e, siac_t_bil_elem enew
                           WHERE  v.elem_id=fase.elem_id
                           AND    fase.ente_proprietario_id=enteproprietarioid
                           AND    fase.bil_id=bilancioid
                           AND    fase.fase_bil_elab_id=fasebilelabid
                           AND    e.elem_id=v.elem_id_old 
                           AND    enew.bil_id=bilancioprecid
                           AND    enew.elem_tipo_id=bilelemgesttipoid
                           AND    enew.elem_code=e.elem_code
                           AND    enew.elem_code2=e.elem_code2
                           AND    enew.elem_code3=e.elem_code3
                           AND    enew.data_cancellazione IS null
                           AND    fase.data_cancellazione IS NULL
                           AND    fase.elem_id IS NOT NULL
                           AND    fase.elem_prov_id IS NOT NULL
                           AND    fase.elem_prov_new_id IS NULL
                           AND    v.data_cancellazione IS NULL
                           AND    v.validita_fine IS NULL );

                                             

        codresult:=NULL;
        strmessaggio:='Fine inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente.';
        INSERT INTO fase_bil_t_elaborazione_log
                    (
                                fase_bil_elab_id,
                                fase_bil_elab_log_operazione,
                                validita_inizio,
                                login_operazione,
                                ente_proprietario_id
                    )
                    VALUES
                    (
                                fasebilelabid,
                                strmessaggio,
                                clock_timestamp(),
                                loginoperazione,
                                enteproprietarioid
                    )
        returning   fase_bil_elab_log_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Errore in inserimento LOG.';
        END IF;
        -- verifica dati inseriti
        codresult:=NULL;
        strmessaggio:='Inizio verifica inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente.';
        INSERT INTO fase_bil_t_elaborazione_log
                    (
                                fase_bil_elab_id,
                                fase_bil_elab_log_operazione,
                                validita_inizio,
                                login_operazione,
                                ente_proprietario_id
                    )
                    VALUES
                    (
                                fasebilelabid,
                                strmessaggio,
                                clock_timestamp(),
                                loginoperazione,
                                enteproprietarioid
                    )
        returning   fase_bil_elab_log_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Errore in inserimento LOG.';
        END IF;
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_stato].Verifica esistenza relazione stati.';
        SELECT   1
        INTO     codresult
        FROM     fase_bil_t_gest_apertura_provv fase
        WHERE    fase.ente_proprietario_id=enteproprietarioid
        AND      fase.bil_id=bilancioid
        AND      fase.fase_bil_elab_id=fasebilelabid
        AND      fase.elem_id IS NOT NULL
        AND      fase.elem_prov_id IS NOT NULL
        AND      fase.elem_prov_new_id IS NULL
        AND      fase.data_cancellazione IS NULL
        AND      NOT EXISTS
                 (
                          SELECT   1
                          FROM     siac_r_bil_elem_stato stato
                          WHERE    stato.elem_id=fase.elem_prov_id
                          AND      stato.data_cancellazione IS NULL
                          AND      stato.validita_fine IS NULL
                          ORDER BY stato.elem_id limit 1)
        ORDER BY fase.fase_bil_gest_ape_prov_id limit 1;

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Elementi di bilancio assenti di relazione.';
        END IF;
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_attr].Verifica esistenza attributi.';
        SELECT   1
        INTO     codresult
        FROM     fase_bil_t_gest_apertura_provv fase
        WHERE    fase.ente_proprietario_id=enteproprietarioid
        AND      fase.bil_id=bilancioid
        AND      fase.fase_bil_elab_id=fasebilelabid
        AND      fase.elem_id IS NOT NULL
        AND      fase.elem_prov_id IS NOT NULL
        AND      fase.elem_prov_new_id IS NULL
        AND      fase.data_cancellazione IS NULL
        AND      NOT EXISTS
                 (
                          SELECT   1
                          FROM     siac_r_bil_elem_attr attr
                          WHERE    attr.elem_id=fase.elem_prov_id
                          AND      attr.data_cancellazione IS NULL
                          AND      attr.validita_fine IS NULL
                          ORDER BY attr.elem_id limit 1)
        ORDER BY fase.fase_bil_gest_ape_prov_id limit 1;

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Elementi di bilancio assenti di relazione.';
        END IF;
        --ANTO JIRA-SIAC-4167
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni classificatori.';
        SELECT   1
        INTO     codresult
        FROM     fase_bil_t_gest_apertura_provv fase
        WHERE    fase.ente_proprietario_id=enteproprietarioid
        AND      fase.bil_id=bilancioid
        AND      fase.fase_bil_elab_id=fasebilelabid
        AND      fase.elem_id IS NOT NULL
        AND      fase.elem_prov_id IS NOT NULL
        AND      fase.elem_prov_new_id IS NULL
        AND      fase.data_cancellazione IS NULL
        AND      NOT EXISTS
                 (
                          SELECT   1
                          FROM     siac_r_bil_elem_class class,
                                   siac_t_class c
                          WHERE    class.elem_id=fase.elem_prov_id
                          AND      class.data_cancellazione IS NULL
                          AND      class.validita_fine IS NULL
                          AND      c.classif_id=class.classif_id
                          AND      c.data_cancellazione IS NULL
                          AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                          AND      (
                                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                   OR       c.validita_fine IS NULL)
                          ORDER BY class.elem_id limit 1)
        ORDER BY fase.fase_bil_gest_ape_prov_id limit 1;

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Elementi di bilancio assenti di relazione.';
        END IF;
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_categoria].Verifica esistenza relazioni categoria.';
        SELECT DISTINCT 1
        INTO            codresult
        FROM            fase_bil_t_gest_apertura_provv fase
        WHERE           fase.ente_proprietario_id=enteproprietarioid
        AND             fase.bil_id=bilancioid
        AND             fase.fase_bil_elab_id=fasebilelabid
        AND             fase.elem_id IS NOT NULL
        AND             fase.elem_prov_id IS NOT NULL
        AND             fase.elem_prov_new_id IS NULL
        AND             fase.data_cancellazione IS NULL
        AND             NOT EXISTS
                        (
                               SELECT 1
                               FROM   siac_r_bil_elem_categoria class
                               WHERE  class.elem_id=fase.elem_prov_id
                               AND    class.data_cancellazione IS NULL
                               AND    class.validita_fine IS NULL) limit 1;

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Elementi di bilancio assenti di relazione.';
        END IF;
        -- verifica se esistono elementi senza classificatori obbligatori (**)
        -- controlli sui classificatori obbligatori
        -- CL_CDC, CL_CDR
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni struttura amministrativa.';
        SELECT   1
        INTO     codresult
        FROM     fase_bil_t_gest_apertura_provv fase
        WHERE    fase.ente_proprietario_id=enteproprietarioid
        AND      fase.elem_id IS NOT NULL
        AND      fase.elem_prov_id IS NOT NULL
        AND      fase.elem_prov_new_id IS NULL
        AND      fase.bil_id=bilancioid
        AND      fase.fase_bil_elab_id=fasebilelabid
        AND      fase.data_cancellazione IS NULL
        AND      NOT EXISTS
                 (
                          SELECT   1
                          FROM     siac_r_bil_elem_class class ,
                                   siac_t_class c
                          WHERE    class.elem_id=fase.elem_prov_id
                          AND      c.classif_id=class.classif_id
                          AND      c.classif_tipo_id IN (cdctipoid,
                                                         cdrtipoid)
                          AND      class.data_cancellazione IS NULL
                          AND      class.validita_fine IS NULL
                          AND      c.data_cancellazione IS NULL
                          AND      c.validita_fine IS NULL
                                   --ANTO JIRA-SIAC-4167
                          AND      c.data_cancellazione IS NULL
                          /*siac-5297
                          AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                          AND      (
                                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                   OR       c.validita_fine IS NULL)
                          */
                          ORDER BY class.elem_id limit 1)
        ORDER BY fase.fase_bil_gest_ape_prov_id limit 1;


        --12.12.2016 JIRA-SIAC-4167
        IF codresult IS NOT NULL THEN
          codresult:=NULL;
          strmessaggio:=strmessaggio
          ||' Inserimento segnalazione mancanza classif.';
          INSERT INTO fase_bil_t_prev_apertura_segnala
                      (
                                  elem_id,
                                  elem_code,
                                  elem_code2,
                                  elem_code3,
                                  bil_id,
                                  fase_bil_elab_id,
                                  segnala_codice,
                                  segnala_desc,
                                  validita_inizio,
                                  ente_proprietario_id,
                                  login_operazione
                      )
                      (
                             SELECT fase.elem_prov_id,
                                    fase.elem_code,
                                    fase.elem_code2,
                                    fase.elem_code3,
                                    fase.bil_id,
                                    fasebilelabid,
                                    'SAC',
                                    'SAC'
                                           ||' mancante',
                                    datainizioval,
                                    fase.ente_proprietario_id,
                                    loginoperazione
                             FROM   fase_bil_t_gest_apertura_provv fase
                             WHERE  fase.ente_proprietario_id=enteproprietarioid
                             AND    fase.elem_id IS NOT NULL
                             AND    fase.elem_prov_id IS NOT NULL
                             AND    fase.elem_prov_new_id IS NULL
                             AND    fase.bil_id=bilancioid
                             AND    fase.fase_bil_elab_id=fasebilelabid
                             AND    fase.data_cancellazione IS NULL
                             AND    NOT EXISTS
                                    (
                                             SELECT   1
                                             FROM     siac_r_bil_elem_class class ,
                                                      siac_t_class c
                                             WHERE    class.elem_id=fase.elem_prov_id
                                             AND      c.classif_id=class.classif_id
                                             AND      c.classif_tipo_id IN (cdctipoid,
                                                                            cdrtipoid)
                                             AND      class.data_cancellazione IS NULL
                                             AND      class.validita_fine IS NULL
                                             AND      c.data_cancellazione IS NULL
                                             /*siac-5297
                                             AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                             AND      (date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)OR       c.validita_fine IS NULL)
                                             */
                                             ORDER BY class.elem_id limit 1) );

        END IF;
        -- CL_PDC_FIN_QUINTO, CL_PDC_FIN_QUARTO
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
        ||cl_pdc_fin_quarto
        ||' '
        ||cl_pdc_fin_quinto
        ||'.';
        -- Il classificatore deve essere obbligatoriamente presente solo se capitolo gestione STD
        SELECT   1
        INTO     codresult
        FROM     fase_bil_t_gest_apertura_provv fase ,
                 siac_r_bil_elem_categoria rcat ,
                 siac_d_bil_elem_categoria cat
        WHERE    fase.ente_proprietario_id=enteproprietarioid
        AND      fase.bil_id=bilancioid
        AND      fase.fase_bil_elab_id=fasebilelabid
        AND      fase.elem_id IS NOT NULL
        AND      fase.elem_prov_id IS NOT NULL
        AND      fase.elem_prov_new_id IS NULL
        AND      fase.data_cancellazione IS NULL
        AND      rcat.elem_id=fase.elem_prov_id
        AND      rcat.data_cancellazione IS NULL
        AND      rcat.validita_fine IS NULL
        AND      rcat.elem_cat_id=cat.elem_cat_id
        AND      cat.elem_cat_code = categoria_std
        AND      NOT EXISTS
                 (
                          SELECT   1
                          FROM     siac_r_bil_elem_class class ,
                                   siac_t_class c
                          WHERE    class.elem_id=fase.elem_prov_id
                          AND      c.classif_id=class.classif_id
                          AND      c.classif_tipo_id IN (pdcfinivid,
                                                         pdcfinvid)
                          AND      class.data_cancellazione IS NULL
                          AND      class.validita_fine IS NULL
                          AND      c.data_cancellazione IS NULL
                                   --ANTO JIRA-SIAC-4167
                          AND      c.validita_fine IS NULL
                          /*siac-5297
                          AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                          AND      (
                                            date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                   OR       c.validita_fine IS NULL)
                                   */
                          ORDER BY class.elem_id limit 1)
        ORDER BY fase.fase_bil_gest_ape_prov_id limit 1;


        IF codresult IS NOT NULL THEN
          codresult:=NULL;
          strmessaggio:=strmessaggio
          ||' Inserimento segnalazione mancanza classif.';
          INSERT INTO fase_bil_t_prev_apertura_segnala
                      (
                                  elem_id,
                                  elem_code,
                                  elem_code2,
                                  elem_code3,
                                  bil_id,
                                  fase_bil_elab_id,
                                  segnala_codice,
                                  segnala_desc,
                                  validita_inizio,
                                  ente_proprietario_id,
                                  login_operazione
                      )
                      (
                             SELECT fase.elem_prov_id,
                                    fase.elem_code,
                                    fase.elem_code2,
                                    fase.elem_code3,
                                    fase.bil_id,
                                    fasebilelabid,
                                    'PDCFIN',
                                    'PDCFIN'
                                           ||' mancante',
                                    datainizioval,
                                    fase.ente_proprietario_id,
                                    loginoperazione
                             FROM   fase_bil_t_gest_apertura_provv fase ,
                                    siac_r_bil_elem_categoria rcat,
                                    siac_d_bil_elem_categoria cat
                             WHERE  fase.ente_proprietario_id=enteproprietarioid
                             AND    fase.bil_id=bilancioid
                             AND    fase.fase_bil_elab_id=fasebilelabid
                             AND    fase.elem_id IS NOT NULL
                             AND    fase.elem_prov_id IS NOT NULL
                             AND    fase.elem_prov_new_id IS NULL
                             AND    fase.data_cancellazione IS NULL
                             AND    rcat.elem_id=fase.elem_prov_id
                             AND    rcat.data_cancellazione IS NULL
                             AND    rcat.validita_fine IS NULL
                             AND    rcat.elem_cat_id=cat.elem_cat_id
                             AND    cat.elem_cat_code = categoria_std
                             AND    NOT EXISTS
                                    (
                                             SELECT   1
                                             FROM     siac_r_bil_elem_class class ,
                                                      siac_t_class c
                                             WHERE    class.elem_id=fase.elem_prov_id
                                             AND      c.classif_id=class.classif_id
                                             AND      c.classif_tipo_id IN (pdcfinivid,
                                                                            pdcfinvid)
                                             AND      class.data_cancellazione IS NULL
                                             AND      class.validita_fine IS NULL
                                             AND      c.data_cancellazione IS NULL
                                             /*siac-5297
                                             AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                             AND      (
                                                               date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                      OR       c.validita_fine IS NULL)
                                             */
                                             ORDER BY class.elem_id limit 1) );

        END IF;

        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_atto_legge].Verifica esistenza relazioni atti di legge.';
        SELECT   1
        INTO     codresult
        FROM     fase_bil_t_gest_apertura_provv fase,
                 siac_r_bil_elem_atto_legge v
        WHERE    fase.ente_proprietario_id=enteproprietarioid
        AND      v.elem_id=fase.elem_id
        AND      fase.bil_id=bilancioid
        AND      fase.fase_bil_elab_id=fasebilelabid
        AND      fase.elem_id IS NOT NULL
        AND      fase.elem_prov_id IS NOT NULL
        AND      fase.elem_prov_new_id IS NULL
        AND      fase.data_cancellazione IS NULL
        AND      v.data_cancellazione IS NULL
        AND      v.validita_fine IS NULL
        AND      NOT EXISTS
                 (
                          SELECT   1
                          FROM     siac_r_bil_elem_atto_legge class
                          WHERE    class.elem_id=fase.elem_prov_id
                          AND      class.data_cancellazione IS NULL
                          AND      class.validita_fine IS NULL
                          ORDER BY class.elem_id limit 1)
        ORDER BY fase.fase_bil_gest_ape_prov_id limit 1;

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Elementi di bilancio assenti di relazione.';
        END IF;
        /* 25.10.2021 Sofia Jira SIAC-8383 - il capitolo old equivalente potrebbe nache non esistere
        codresult:=NULL;
        strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_rel_tempo].Verifica esistenza relazioni.';
        SELECT   1
        INTO     codresult
        FROM     fase_bil_t_gest_apertura_provv fase,
                 siac_r_bil_elem_rel_tempo v
        WHERE    fase.ente_proprietario_id=enteproprietarioid
        AND      v.elem_id=fase.elem_id
        AND      fase.bil_id=bilancioid
        AND      fase.fase_bil_elab_id=fasebilelabid
        AND      fase.elem_id IS NOT NULL
        AND      fase.elem_prov_id IS NOT NULL
        AND      fase.elem_prov_new_id IS NULL
        AND      fase.data_cancellazione IS NULL
        AND      v.data_cancellazione IS NULL
        AND      v.validita_fine IS NULL
        AND      NOT EXISTS
                 (
                          SELECT   1
                          FROM     siac_r_bil_elem_rel_tempo class
                          WHERE    class.elem_id=fase.elem_prov_id
                          AND      class.data_cancellazione IS NULL
                          AND      class.validita_fine IS NULL
                          ORDER BY class.elem_id limit 1)
        ORDER BY fase.fase_bil_gest_ape_prov_id limit 1;

        IF codresult IS NOT NULL THEN
          RAISE
        EXCEPTION
          ' Elementi di bilancio assenti di relazione.';
        END IF;*/
        IF euelemtipo=tipo_elem_eu THEN
          -- Classificatore necessario solo per capitolo di categoria STD
          -- CL_PROGRAMMA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_programma
          ||'.';
          SELECT 1
          INTO   codresult
          FROM   fase_bil_t_gest_apertura_provv fase,
                 siac_r_bil_elem_categoria rcat,
                 siac_d_bil_elem_categoria cat
          WHERE  fase.ente_proprietario_id=enteproprietarioid
          AND    fase.bil_id=bilancioid
          AND    fase.fase_bil_elab_id=fasebilelabid
          AND    fase.elem_id IS NOT NULL
          AND    fase.elem_prov_id IS NOT NULL
          AND    fase.elem_prov_new_id IS NULL
          AND    fase.data_cancellazione IS NULL
          AND    rcat.elem_id=fase.elem_prov_id
          AND    rcat.data_cancellazione IS NULL
          AND    rcat.validita_fine IS NULL
          AND    rcat.elem_cat_id=cat.elem_cat_id
          AND    cat.elem_cat_code = categoria_std
          AND    NOT EXISTS
                 (
                        SELECT 1
                        FROM   siac_r_bil_elem_class class ,
                               siac_t_class c
                        WHERE  class.elem_id=fase.elem_prov_id
                        AND    c.classif_id=class.classif_id
                        AND    c.classif_tipo_id=programmatipoid
                        AND    class.data_cancellazione IS NULL
                        AND    class.validita_fine IS NULL
                        AND    c.data_cancellazione IS NULL
                        AND    c.validita_fine IS NULL
                               /*siac-5297
                        AND    date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                        AND    (
                                      date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                               OR     c.validita_fine IS NULL) limit 1*/
                        ) limit 1;


          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prov_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_programma,
                                      cl_programma
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_gest_apertura_provv fase,
                                      siac_r_bil_elem_categoria rcat,
                                      siac_d_bil_elem_categoria cat
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.elem_id IS NOT NULL
                               AND    fase.elem_prov_id IS NOT NULL
                               AND    fase.elem_prov_new_id IS NULL
                               AND    fase.data_cancellazione IS NULL
                               AND    rcat.elem_id=fase.elem_prov_id
                               AND    rcat.data_cancellazione IS NULL
                               AND    rcat.validita_fine IS NULL
                               AND    rcat.elem_cat_id=cat.elem_cat_id
                               AND    cat.elem_cat_code = categoria_std
                               AND    NOT EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_prov_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id =programmatipoid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*siac-5297
                                               AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)*/
                                               ORDER BY class.elem_id limit 1) );

          END IF;
          -- Classificatore necessario solo per capitolo di categoria STD
          -- CL_MACROAGGREGATO
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_macroaggregato
          ||'.';
          SELECT   1
          INTO     codresult
          FROM     fase_bil_t_gest_apertura_provv fase ,
                   siac_r_bil_elem_categoria rcat ,
                   siac_d_bil_elem_categoria cat
          WHERE    fase.ente_proprietario_id=enteproprietarioid
          AND      fase.bil_id=bilancioid
          AND      fase.fase_bil_elab_id=fasebilelabid
          AND      fase.elem_id IS NOT NULL
          AND      fase.elem_prov_id IS NOT NULL
          AND      fase.elem_prov_new_id IS NULL
          AND      fase.data_cancellazione IS NULL
          AND      rcat.elem_id=fase.elem_prov_id
          AND      rcat.data_cancellazione IS NULL
          AND      rcat.validita_fine IS NULL
          AND      rcat.elem_cat_id=cat.elem_cat_id
          AND      cat.elem_cat_code = categoria_std
          AND      NOT EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_prov_id
                            AND      c.classif_tipo_id=macroaggrtipoid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            AND      c.validita_fine IS NULL
                            ORDER BY class.elem_id limit 1)
          ORDER BY fase.fase_bil_gest_ape_prov_id limit 1;


          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prov_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_macroaggregato,
                                      cl_macroaggregato
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_gest_apertura_provv fase,
                                      siac_r_bil_elem_categoria rcat,
                                      siac_d_bil_elem_categoria cat
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.elem_id IS NOT NULL
                               AND    fase.elem_prov_id IS NOT NULL
                               AND    fase.elem_prov_new_id IS NULL
                               AND    fase.data_cancellazione IS NULL
                               AND    rcat.elem_id=fase.elem_prov_id
                               AND    rcat.data_cancellazione IS NULL
                               AND    rcat.validita_fine IS NULL
                               AND    rcat.elem_cat_id=cat.elem_cat_id
                               AND    cat.elem_cat_code = categoria_std
                               AND    NOT EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_prov_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id =macroaggrtipoid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*siac-5297
                                               AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)
                                                        */
                                               ORDER BY class.elem_id limit 1) );

          END IF;
          -- CL_COFOG
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_cofog
          ||'.';
          SELECT   1
          INTO     codresult
          FROM     fase_bil_t_gest_apertura_provv fase
          WHERE    fase.ente_proprietario_id=enteproprietarioid
          AND      fase.bil_id=bilancioid
          AND      fase.fase_bil_elab_id=fasebilelabid
          AND      fase.elem_id IS NOT NULL
          AND      fase.elem_prov_id IS NOT NULL
          AND      fase.elem_prov_new_id IS NULL
          AND      fase.data_cancellazione IS NULL
                   -- Classificatore definito in gestione deve essere stato ribaltato su provvisorio
          AND      EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=cofogtipoid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            AND      c.validita_fine IS NULL
/*siac-5297
                            AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL)
                                     */
                            ORDER BY class.elem_id limit 1)
          AND      NOT EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_prov_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=cofogtipoid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            AND      c.validita_fine IS NULL

                                     /*siac-5297
                            AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL)
                                     */
                            ORDER BY class.elem_id limit 1)
          ORDER BY fase.fase_bil_gest_ape_prov_id limit 1;


          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prov_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_cofog,
                                      cl_cofog
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_gest_apertura_provv fase
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.elem_id IS NOT NULL
                               AND    fase.elem_prov_id IS NOT NULL
                               AND    fase.elem_prov_new_id IS NULL
                               AND    fase.data_cancellazione IS NULL
                               AND    EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=cofogtipoid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*siac-5297
                                               AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)
                                                        */
                                               ORDER BY class.elem_id limit 1)
                               AND    NOT EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_prov_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=cofogtipoid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*siac-5297
                                               AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)
                                                        */
                                               ORDER BY class.elem_id limit 1) );

          END IF;
          -- CL_RICORRENTE_SPESA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_ricorrente_spesa
          ||'.';
          SELECT   1
          INTO     codresult
          FROM     fase_bil_t_gest_apertura_provv fase
          WHERE    fase.ente_proprietario_id=enteproprietarioid
          AND      fase.bil_id=bilancioid
          AND      fase.fase_bil_elab_id=fasebilelabid
          AND      fase.elem_id IS NOT NULL
          AND      fase.elem_prov_id IS NOT NULL
          AND      fase.elem_prov_new_id IS NULL
          AND      fase.data_cancellazione IS NULL
                   -- Classificatore definito in gestione deve essere stato ribaltato su provvisorio
          AND      EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=ricorrentespesaid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            AND      c.validita_fine IS NULL
                                     /*siac-5297
                            AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL)
                                     */
                            ORDER BY class.elem_id limit 1)
          AND      NOT EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_prov_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=ricorrentespesaid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            AND      c.validita_fine IS NULL
                                    /*siac-5297
                            AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL)
                                     */
                            ORDER BY class.elem_id limit 1)
          ORDER BY fase.fase_bil_gest_ape_prov_id limit 1;


          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prov_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_ricorrente_spesa,
                                      cl_ricorrente_spesa
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_gest_apertura_provv fase
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.elem_id IS NOT NULL
                               AND    fase.elem_prov_id IS NOT NULL
                               AND    fase.elem_prov_new_id IS NULL
                               AND    fase.data_cancellazione IS NULL
                               AND    EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=ricorrentespesaid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*siac-5297
                                               AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)
                                                */
                                               ORDER BY class.elem_id limit 1)
                               AND    NOT EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_prov_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=ricorrentespesaid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*siac-5297
                                               AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)
                                               */
                                               ORDER BY class.elem_id limit 1) );

          END IF;
          -- CL_SIOPE_SPESA_TERZO
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_siope_spesa_terzo
          ||'.';
          SELECT   1
          INTO     codresult
          FROM     fase_bil_t_gest_apertura_provv fase
          WHERE    fase.ente_proprietario_id=enteproprietarioid
          AND      fase.bil_id=bilancioid
          AND      fase.fase_bil_elab_id=fasebilelabid
          AND      fase.elem_id IS NOT NULL
          AND      fase.elem_prov_id IS NOT NULL
          AND      fase.elem_prov_new_id IS NULL
          AND      fase.data_cancellazione IS NULL
          AND      EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=siopespesatipoid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            AND      c.validita_fine IS NULL
                            /*siac-5297
                            AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL)
                            */
                            ORDER BY class.elem_id limit 1)
          AND      NOT EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_prov_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=siopespesatipoid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            AND      c.validita_fine IS NULL
                            /*siac-5297
                            AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL)
                            */
                            ORDER BY class.elem_id limit 1)
          ORDER BY fase.fase_bil_gest_ape_prov_id limit 1;


          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prov_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_siope_spesa_terzo,
                                      cl_siope_spesa_terzo
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_gest_apertura_provv fase
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.elem_id IS NOT NULL
                               AND    fase.elem_prov_id IS NOT NULL
                               AND    fase.elem_prov_new_id IS NULL
                               AND    fase.data_cancellazione IS NULL
                               AND    EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=siopespesatipoid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*siac-5297
                                               AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)
                                                        */
                                               ORDER BY class.elem_id limit 1)
                               AND    NOT EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_prov_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=siopespesatipoid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*siac-5297
                                               AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)
                                                        */
                                               ORDER BY class.elem_id limit 1) );

          END IF;
          -- CL_TRANSAZIONE_UE_SPESA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_transazione_ue_spesa
          ||'.';
          SELECT   1
          INTO     codresult
          FROM     fase_bil_t_gest_apertura_provv fase
          WHERE    fase.ente_proprietario_id=enteproprietarioid
          AND      fase.bil_id=bilancioid
          AND      fase.fase_bil_elab_id=fasebilelabid
          AND      fase.elem_id IS NOT NULL
          AND      fase.elem_prov_id IS NOT NULL
          AND      fase.elem_prov_new_id IS NULL
          AND      fase.data_cancellazione IS NULL
                   -- Classificatore definito in gestione deve essere stato ribaltato su provvisorio
          AND      EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=transazioneuespesaid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            AND      c.validita_fine IS NULL
                            /*siac-5297
                            AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL)
                                     */
                            ORDER BY class.elem_id limit 1)
          AND      NOT EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_prov_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=transazioneuespesaid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            AND      c.validita_fine IS NULL
                             /*siac-5297
                            AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL)
                                     */
                            ORDER BY class.elem_id limit 1)
          ORDER BY fase.fase_bil_gest_ape_prov_id limit 1;


          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prov_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_transazione_ue_spesa,
                                      cl_transazione_ue_spesa
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.elem_id IS NOT NULL
                               AND    fase.elem_prov_id IS NOT NULL
                               AND    fase.elem_prov_new_id IS NULL
                               AND    fase.data_cancellazione IS NULL
                               AND    EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=transazioneuespesaid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*siac-5297
                                               AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)
                                                        */
                                               ORDER BY class.elem_id limit 1)
                               AND    NOT EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_prov_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=transazioneuespesaid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*siac-5297
                                               AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)
                                                        */
                                               ORDER BY class.elem_id limit 1) );

          END IF;
        ELSE
          -- CL_CATEGORIA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_categoria
          ||'.';
          -- Classificatore deve essere obbligatoriamente presente solo se capitolo STD
          SELECT DISTINCT 1
          INTO            codresult
          FROM            fase_bil_t_gest_apertura_provv fase,
                          siac_r_bil_elem_categoria rcat,
                          siac_d_bil_elem_categoria cat
          WHERE           fase.ente_proprietario_id=enteproprietarioid
          AND             fase.bil_id=bilancioid
          AND             fase.fase_bil_elab_id=fasebilelabid
          AND             fase.elem_id IS NOT NULL
          AND             fase.elem_prov_id IS NOT NULL
          AND             fase.elem_prov_new_id IS NULL
          AND             fase.data_cancellazione IS NULL
          AND             rcat.elem_id=fase.elem_prov_id
          AND             rcat.data_cancellazione IS NULL
          AND             rcat.validita_fine IS NULL
          AND             rcat.elem_cat_id=cat.elem_cat_id
          AND             cat.elem_cat_code = categoria_std
          AND             NOT EXISTS
                          (
                                 SELECT 1
                                 FROM   siac_r_bil_elem_class class ,
                                        siac_t_class c
                                 WHERE  class.elem_id=fase.elem_prov_id
                                 AND    c.classif_id=class.classif_id
                                 AND    c.classif_tipo_id=categoriatipoid
                                 AND    class.data_cancellazione IS NULL
                                 AND    class.validita_fine IS NULL
                                 AND    c.data_cancellazione IS NULL
                                 AND    c.validita_fine IS NULL
                                 /*siac-5297
                                 AND    date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                 AND    (
                                               date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                        OR     c.validita_fine IS NULL)
                                        */
                                         limit 1);


          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prov_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_categoria,
                                      cl_categoria
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_gest_apertura_provv fase,
                                      siac_r_bil_elem_categoria rcat,
                                      siac_d_bil_elem_categoria cat
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.elem_id IS NOT NULL
                               AND    fase.elem_prov_id IS NOT NULL
                               AND    fase.elem_prov_new_id IS NULL
                               AND    fase.data_cancellazione IS NULL
                               AND    rcat.elem_id=fase.elem_prov_id
                               AND    rcat.data_cancellazione IS NULL
                               AND    rcat.validita_fine IS NULL
                               AND    rcat.elem_cat_id=cat.elem_cat_id
                               AND    cat.elem_cat_code = categoria_std
                               AND    NOT EXISTS
                                      (
                                             SELECT 1
                                             FROM   siac_r_bil_elem_class class ,
                                                    siac_t_class c
                                             WHERE  class.elem_id=fase.elem_prov_id
                                             AND    c.classif_id=class.classif_id
                                             AND    c.classif_tipo_id=categoriatipoid
                                             AND    class.data_cancellazione IS NULL
                                             AND    class.validita_fine IS NULL
                                             AND    c.data_cancellazione IS NULL
                                             /*siac-5297
                                             AND    date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                             AND    (
                                                           date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                    OR     c.validita_fine IS NULL)
                                                    */
                                                    limit 1) );

          END IF;
          -- CL_RICORRENTE_ENTRATA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_ricorrente_entrata
          ||'.';
          SELECT   1
          INTO     codresult
          FROM     fase_bil_t_gest_apertura_provv fase
          WHERE    fase.ente_proprietario_id=enteproprietarioid
          AND      fase.bil_id=bilancioid
          AND      fase.fase_bil_elab_id=fasebilelabid
          AND      fase.elem_id IS NOT NULL
          AND      fase.elem_prov_id IS NOT NULL
          AND      fase.elem_prov_new_id IS NULL
          AND      fase.data_cancellazione IS NULL
                   -- Classificatore definito in provvisorio deve essere stato ribaltato su gestione
          AND      EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=ricorrenteentrataid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            AND      c.validita_fine IS NULL
                            /*siac-5297
                            AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL)*/
                            ORDER BY class.elem_id limit 1)
          AND      NOT EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_prov_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=ricorrenteentrataid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            AND      c.validita_fine IS NULL
                            /*siac-5297
                            AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL)
                                     */
                            ORDER BY class.elem_id limit 1)
          ORDER BY fase.fase_bil_gest_ape_prov_id limit 1;

          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prov_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_ricorrente_entrata,
                                      cl_ricorrente_entrata
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_gest_apertura_provv fase
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.elem_id IS NOT NULL
                               AND    fase.elem_prov_id IS NOT NULL
                               AND    fase.elem_prov_new_id IS NULL
                               AND    fase.data_cancellazione IS NULL
                               AND    EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=ricorrenteentrataid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*siac-5297
                                               AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)
                                                        */
                                               ORDER BY class.elem_id limit 1)
                               AND    NOT EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_prov_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=ricorrenteentrataid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*siac-5297
                                               AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)
                                                        */
                                               ORDER BY class.elem_id limit 1) );

          END IF;
          -- CL_SIOPE_ENTRATA_TERZO
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_siope_entrata_terzo
          ||'.';
          SELECT   1
          INTO     codresult
          FROM     fase_bil_t_gest_apertura_provv fase
          WHERE    fase.ente_proprietario_id=enteproprietarioid
          AND      fase.bil_id=bilancioid
          AND      fase.fase_bil_elab_id=fasebilelabid
          AND      fase.elem_id IS NOT NULL
          AND      fase.elem_prov_id IS NOT NULL
          AND      fase.elem_prov_new_id IS NULL
          AND      fase.data_cancellazione IS NULL
          AND      EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=siopeentratatipoid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            AND      c.validita_fine IS NULL
                             /*siac-5297
                            AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL)
                                     */
                            ORDER BY class.elem_id limit 1)
          AND      NOT EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_prov_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=siopeentratatipoid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            AND      c.validita_fine IS NULL
                            /*siac-5297
                            AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL)
                                     */
                            ORDER BY class.elem_id limit 1)
          ORDER BY fase.fase_bil_gest_ape_prov_id limit 1;

          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prov_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_siope_entrata_terzo,
                                      cl_siope_entrata_terzo
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_gest_apertura_provv fase
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.elem_id IS NOT NULL
                               AND    fase.elem_prov_id IS NOT NULL
                               AND    fase.elem_prov_new_id IS NULL
                               AND    fase.data_cancellazione IS NULL
                               AND    EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=siopeentratatipoid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*siac-5297
                                               AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)
                                                        */
                                               ORDER BY class.elem_id limit 1)
                               AND    NOT EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_prov_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=siopeentratatipoid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*siac-5297
                                               AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)
                                                        */
                                               ORDER BY class.elem_id limit 1) );

          END IF;
          -- CL_TRANSAZIONE_UE_ENTRATA
          codresult:=NULL;
          strmessaggio:='Inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente [siac_r_bil_elem_class].Verifica esistenza relazioni '
          ||cl_transazione_ue_entrata
          ||'.';
          SELECT   1
          INTO     codresult
          FROM     fase_bil_t_gest_apertura_provv fase
          WHERE    fase.ente_proprietario_id=enteproprietarioid
          AND      fase.bil_id=bilancioid
          AND      fase.fase_bil_elab_id=fasebilelabid
          AND      fase.elem_id IS NOT NULL
          AND      fase.elem_prov_id IS NOT NULL
          AND      fase.elem_prov_new_id IS NULL
          AND      fase.data_cancellazione IS NULL
                   -- Classificatore definito in gestione deve essere stato ribaltato su provvisorio
          AND      EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=transazioneueentrataid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            AND      c.validita_fine IS NULL
                            /*siac-5297
                            AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL)
                                     */
                            ORDER BY class.elem_id limit 1)
          AND      NOT EXISTS
                   (
                            SELECT   1
                            FROM     siac_r_bil_elem_class class ,
                                     siac_t_class c
                            WHERE    class.elem_id=fase.elem_prov_id
                            AND      c.classif_id=class.classif_id
                            AND      c.classif_tipo_id=transazioneueentrataid
                            AND      class.data_cancellazione IS NULL
                            AND      class.validita_fine IS NULL
                            AND      c.data_cancellazione IS NULL
                            AND      c.validita_fine IS NULL
                            /*siac-5297
                            AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                            AND      (
                                              date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                     OR       c.validita_fine IS NULL)
                                     */
                            ORDER BY class.elem_id limit 1)
          ORDER BY fase.fase_bil_gest_ape_prov_id limit 1;

          IF codresult IS NOT NULL THEN
            strmessaggio:=strmessaggio
            ||' Inserimento segnalazione mancanza classif.';
            INSERT INTO fase_bil_t_prev_apertura_segnala
                        (
                                    elem_id,
                                    elem_code,
                                    elem_code2,
                                    elem_code3,
                                    bil_id,
                                    fase_bil_elab_id,
                                    segnala_codice,
                                    segnala_desc,
                                    validita_inizio,
                                    ente_proprietario_id,
                                    login_operazione
                        )
                        (
                               SELECT fase.elem_prov_id,
                                      fase.elem_code,
                                      fase.elem_code2,
                                      fase.elem_code3,
                                      fase.bil_id,
                                      fasebilelabid,
                                      cl_transazione_ue_entrata,
                                      cl_transazione_ue_entrata
                                             ||' mancante',
                                      datainizioval,
                                      fase.ente_proprietario_id,
                                      loginoperazione
                               FROM   fase_bil_t_gest_apertura_provv fase
                               WHERE  fase.ente_proprietario_id=enteproprietarioid
                               AND    fase.bil_id=bilancioid
                               AND    fase.fase_bil_elab_id=fasebilelabid
                               AND    fase.elem_id IS NOT NULL
                               AND    fase.elem_prov_id IS NOT NULL
                               AND    fase.elem_prov_new_id IS NULL
                               AND    fase.data_cancellazione IS NULL
                               AND    EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=transazioneueentrataid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*siac-5297
                                               AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)
                                                        */
                                               ORDER BY class.elem_id limit 1)
                               AND    NOT EXISTS
                                      (
                                               SELECT   1
                                               FROM     siac_r_bil_elem_class class ,
                                                        siac_t_class c
                                               WHERE    class.elem_id=fase.elem_prov_id
                                               AND      c.classif_id=class.classif_id
                                               AND      c.classif_tipo_id=transazioneueentrataid
                                               AND      class.data_cancellazione IS NULL
                                               AND      class.validita_fine IS NULL
                                               AND      c.data_cancellazione IS NULL
                                               /*siac-5297
                                               AND      date_trunc('day',datainiziovalclass)>=date_trunc('day',c.validita_inizio)
                                               AND      (
                                                                 date_trunc('day',datafinevalclass)<=date_trunc('day',c.validita_fine)
                                                        OR       c.validita_fine IS NULL)
                                                        */
                                               ORDER BY class.elem_id limit 1) );

          END IF;
        END IF;
        codresult:=NULL;
        strmessaggio:='Fine verifica inserimento nuove strutture provvisorio esistenti da gestione equivalente anno precedente.';
        INSERT INTO fase_bil_t_elaborazione_log
                    (
                                fase_bil_elab_id,
                                fase_bil_elab_log_operazione,
                                validita_inizio,
                                login_operazione,
                                ente_proprietario_id
                    )
                    VALUES
                    (
                                fasebilelabid,
                                strmessaggio,
                                clock_timestamp(),
                                loginoperazione,
                                enteproprietarioid
                    )
        returning   fase_bil_elab_log_id
        INTO        codresult;

        IF codresult IS NULL THEN
          RAISE
        EXCEPTION
          ' Errore in inserimento LOG.';
        END IF;
      END IF;
    END IF;
    strmessaggio:='Aggiornamento fase elaborazione [fase_bil_t_elaborazione].';
    UPDATE fase_bil_t_elaborazione
    SET    fase_bil_elab_esito='IN2',
           fase_bil_elab_esito_msg='ELABORAZIONE FASE BILANCIO '
                  ||ape_prov_da_gest
                  ||' IN CORSO : AGGIORNAMENTO STRUTTURE COMPLETATO.'
    WHERE  fase_bil_elab_id=fasebilelabid;

    codresult:=NULL;
    INSERT INTO fase_bil_t_elaborazione_log
                (
                            fase_bil_elab_id,
                            fase_bil_elab_log_operazione,
                            validita_inizio,
                            login_operazione,
                            ente_proprietario_id
                )
                VALUES
                (
                            fasebilelabid,
                            strmessaggio,
                            clock_timestamp(),
                            loginoperazione,
                            enteproprietarioid
                )
    returning   fase_bil_elab_log_id
    INTO        codresult;

    IF codresult IS NULL THEN
      RAISE
    EXCEPTION
      ' Errore in inserimento LOG.';
    END IF;
    fasebilelabidret:= fasebilelabid;
    messaggiorisultato:=strmessaggiofinale
    ||'OK .';
    RETURN;
  EXCEPTION
  WHEN raise_exception THEN
    RAISE notice '% % ERRORE : %',strmessaggiofinale,strmessaggio, substring(upper(SQLERRM) FROM 1 FOR 500);
    messaggiorisultato:=strmessaggiofinale
    ||strmessaggio
    ||'ERRORE :'
    ||' '
    ||substring(upper(SQLERRM) FROM 1 FOR 500) ;
    codicerisultato:=-1;
    RETURN;
  WHEN no_data_found THEN
    RAISE notice ' % % Nessun elemento trovato.' ,strmessaggiofinale,strmessaggio;
    messaggiorisultato:=strmessaggiofinale
    ||strmessaggio
    ||'Nessun elemento trovato.' ;
    codicerisultato:=-1;
    RETURN;
  WHEN OTHERS THEN
    RAISE notice '% % Errore DB % %',strmessaggiofinale,strmessaggio,SQLSTATE, substring(upper(SQLERRM) FROM 1 FOR 50);
    messaggiorisultato:=strmessaggiofinale
    ||strmessaggio
    ||'Errore DB '
    ||SQLSTATE
    ||' '
    ||substring(upper(SQLERRM) FROM 1 FOR 50) ;
    codicerisultato:=-1;
    RETURN;
  END;
  $body$ LANGUAGE 'plpgsql' volatile called ON NULL input security invoker cost 100;


CREATE OR REPLACE FUNCTION siac.fnc_fasi_bil_prev_approva_struttura (
  annobilancio integer,
  fasebilancio varchar,
  euelemtipo varchar,
  bilelemprevtipo varchar,
  bilelemgesttipo varchar,
  checkgest boolean,
  enteproprietarioid integer,
  loginoperazione varchar,
  dataelaborazione timestamp,
  out fasebilelabidret integer,
  out codicerisultato integer,
  out messaggiorisultato varchar
)
RETURNS record AS
$body$
DECLARE


	strMessaggio VARCHAR(1500):='';
	strMessaggioFinale VARCHAR(1500):='';


    FLAG_PER_MEM CONSTANT varchar := 'FlagPerMemoria';

	elemBilPrev record;

	-- CLASSIFICATORI
	CL_MACROAGGREGATO CONSTANT varchar :='MACROAGGREGATO';
	CL_PROGRAMMA CONSTANT varchar :='PROGRAMMA';
    CL_CATEGORIA CONSTANT varchar :='CATEGORIA';
    CL_CDC CONSTANT varchar :='CDC';
    CL_CDR CONSTANT varchar :='CDR';
	CL_RICORRENTE_SPESA CONSTANT varchar:='RICORRENTE_SPESA';
    CL_RICORRENTE_ENTRATA CONSTANT varchar:='RICORRENTE_ENTRATA';
	CL_TRANSAZIONE_UE_SPESA CONSTANT varchar:='TRANSAZIONE_UE_SPESA';
  	CL_TRANSAZIONE_UE_ENTRATA CONSTANT varchar:='TRANSAZIONE_UE_ENTRATA';


    CL_PDC_FIN_QUARTO     CONSTANT varchar :='PDC_IV';
    CL_PDC_FIN_QUINTO     CONSTANT varchar :='PDC_V';
	CL_COFOG 			  CONSTANT varchar :='GRUPPO_COFOG';
	CL_SIOPE_SPESA_TERZO  CONSTANT varchar:='SIOPE_SPESA_I';
    CL_SIOPE_ENTRATA_TERZO  CONSTANT varchar:='SIOPE_ENTRATA_I';

	TIPO_ELAB_P CONSTANT varchar :='P'; -- previsione
    TIPO_ELAB_G CONSTANT varchar :='G'; -- gestione

    TIPO_ELEM_EU CONSTANT varchar:='U';

	APPROVA_PREV_SU_GEST CONSTANT varchar:='APROVA_PREV';

    GESTIONE_FASE       CONSTANT varchar:='G';
    PREVISIONE_FASE     CONSTANT varchar:='P'; -- 13.10.2016 Sofia
    PROVVISORIO_FASE    CONSTANT varchar:='E'; -- 13.10.2016 Sofia
    PROVVISORIO_EP_FASE    CONSTANT varchar:='EP'; -- 13.10.2016 Sofia


	macroAggrTipoId     integer:=null;
    programmaTipoId      integer:=null;
    categoriaTipoId      integer:=null;
    cdcTipoId            integer:=null;
    cdrTipoId            integer:=null;
    ricorrenteSpesaId    integer:=null;
    transazioneUeSpesaId INTEGER:=null;
    ricorrenteEntrataId    integer:=null;
    transazioneUeEntrataId INTEGER:=null;

    pdcFinIVId             integer:=null;
    pdcFinVId             integer:=null;
    cofogTipoId          integer:=null;
    siopeSpesaTipoId          integer:=null;
    siopeEntrataTipoId          integer:=null;

    bilElemGestTipoId integer:=null;
    bilElemPrevTipoId integer:=null;
    bilElemIdRet      integer:=null;
    bilancioId        integer:=null;
    periodoId         integer:=null;
    flagPerMemAttrId  integer:=null;

	codResult         integer:=null;
	dataInizioVal     timestamp:=null;
    faseBilElabId     integer:=null;

    CATEGORIA_STD     constant varchar := 'STD';
    categoriaCapCode  varchar :=null;

    faseOpNew         varchar(15):=null; -- 13.10.2016 Sofia

    -- 04.11.2016 anto JIRA-SIAC-4161
    bilElemStatoAN CONSTANT varchar:='AN';
    -- 04.11.2016 anto JIRA-SIAC-4161
	bilElemStatoANId  integer:=null;

    -- anto JIRA-SIAC-4167 15.11.2016
    dataInizioValClass timestamp:=null;
    dataFineValClass   timestamp:=null;
   
    -- 25.10.2021 Sofia SIAC-8383
    bilancioPrecId     integer:=null;


BEGIN



    messaggioRisultato:='';
    codiceRisultato:=0;
    faseBilElabIdRet:=0;

--    dataInizioVal:=date_trunc('DAY', now());
    dataInizioVal:= clock_timestamp(); -- now();

    -- 12.12.2016 Sofia
	dataInizioValClass:= clock_timestamp();
    dataFineValClass:=(annoBilancio||'-01-01')::timestamp;

	strMessaggioFinale:='Approvazione bilancio di previsione.Aggiornamento struttura Gestione '||bilElemGestTipo||' da Previsione '||bilElemPrevTipo||
    					'.Anno bilancio='||annoBilancio::varchar||'.';

    -- inserimento fase_bil_t_elaborazione
	strMessaggio:='Inserimento fase elaborazione [fase_bil_t_elaborazione].';
    insert into fase_bil_t_elaborazione
    (fase_bil_elab_esito, fase_bil_elab_esito_msg,
     fase_bil_elab_tipo_id,
     ente_proprietario_id,validita_inizio, login_operazione)
    (select 'IN','ELABORAZIONE FASE BILANCIO '||APPROVA_PREV_SU_GEST||' IN CORSO : AGGIORNAMENTO STRUTTURE.',
            tipo.fase_bil_elab_tipo_id,enteProprietarioId, dataInizioVal, loginOperazione
     from fase_bil_d_elaborazione_tipo tipo
     where tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.fase_bil_elab_tipo_code=APPROVA_PREV_SU_GEST
     and   tipo.data_cancellazione is null
     and   tipo.validita_fine is null)
     returning fase_bil_elab_id into faseBilElabId;

     if faseBilElabId is null then
     	raise exception ' Inserimento non effettuato.';
     end if;

	 codResult:=null;
	 insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
     returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;




    strMessaggio:='Lettura bilElemStatoAN  per tipo='||bilElemStatoAN||'.';
	select tipo.elem_stato_id into strict bilElemStatoANId
    from siac_d_bil_elem_stato tipo
    where tipo.elem_stato_code=bilElemStatoAN
    and   tipo.ente_proprietario_id=enteProprietarioId
    and   tipo.data_cancellazione is null
    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);


	strMessaggio:='Lettura bilElemPrevTipo  per tipo='||bilElemPrevTipo||'.';
	select tipo.elem_tipo_id into strict bilElemPrevTipoId
    from siac_d_bil_elem_tipo tipo
    where tipo.elem_tipo_code=bilElemPrevTipo
    and   tipo.ente_proprietario_id=enteProprietarioId
    and   tipo.data_cancellazione is null
    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

	strMessaggio:='Lettura bilElemGestTipo  per tipo='||bilElemGestTipo||'.';
	select tipo.elem_tipo_id into strict bilElemGestTipoId
    from siac_d_bil_elem_tipo tipo
    where tipo.elem_tipo_code=bilElemGestTipo
    and   tipo.ente_proprietario_id=enteProprietarioId
    and   tipo.data_cancellazione is null
    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);


    -- lettura classificatori Tipo Id
	strMessaggio:='Lettura flagPerMemAttrId  per attr='||FLAG_PER_MEM||'.';
	select attr.attr_id into strict flagPerMemAttrId
    from siac_t_attr attr
    where attr.ente_proprietario_id=enteProprietarioId
	and   attr.attr_code=FLAG_PER_MEM
    and   attr.data_cancellazione is null
    and   date_trunc('day',dataElaborazione)>=date_trunc('day',attr.validita_inizio)
    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',attr.validita_fine) or attr.validita_fine is null);

	strMessaggio:='Lettura cdcTipoId  per classif='||CL_CDC||'.';
	select tipo.classif_tipo_id into strict cdcTipoId
    from siac_d_class_tipo tipo
    where tipo.ente_proprietario_id=enteProprietarioId
    and   tipo.classif_tipo_code=CL_CDC
    and   tipo.data_cancellazione is null
    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

	strMessaggio:='Lettura cdcTipoId  per classif='||CL_CDR||'.';
	select tipo.classif_tipo_id into strict cdrTipoId
    from siac_d_class_tipo tipo
    where tipo.ente_proprietario_id=enteProprietarioId
    and   tipo.classif_tipo_code=CL_CDR
    and   tipo.data_cancellazione is null
    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

    strMessaggio:='Lettura pdcFinIVId  per classif='||CL_PDC_FIN_QUARTO||'.';
	select tipo.classif_tipo_id into strict pdcFinIVId
    from siac_d_class_tipo tipo
    where tipo.ente_proprietario_id=enteProprietarioId
    and   tipo.classif_tipo_code=CL_PDC_FIN_QUARTO
    and   tipo.data_cancellazione is null
    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

    strMessaggio:='Lettura pdcFinVId  per classif='||CL_PDC_FIN_QUINTO||'.';
	select tipo.classif_tipo_id into strict pdcFinVId
    from siac_d_class_tipo tipo
    where tipo.ente_proprietario_id=enteProprietarioId
    and   tipo.classif_tipo_code=CL_PDC_FIN_QUINTO
    and   tipo.data_cancellazione is null
    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

	if euElemTipo=TIPO_ELEM_EU then
		strMessaggio:='Lettura macroAggrTipoId  per classif='||CL_MACROAGGREGATO||'.';
		select tipo.classif_tipo_id into strict macroAggrTipoId
	    from siac_d_class_tipo tipo
    	where tipo.ente_proprietario_id=enteProprietarioId
	    and   tipo.classif_tipo_code=CL_MACROAGGREGATO
    	and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    	and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

		strMessaggio:='Lettura programmaTipoId  per classif='||CL_PROGRAMMA||'.';
		select tipo.classif_tipo_id into strict programmaTipoId
	    from siac_d_class_tipo tipo
    	where tipo.ente_proprietario_id=enteProprietarioId
	    and   tipo.classif_tipo_code=CL_PROGRAMMA
    	and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    	and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

        strMessaggio:='Lettura ricorrenteSpesaId  per classif='||CL_RICORRENTE_SPESA||'.';
		select tipo.classif_tipo_id into strict ricorrenteSpesaId
    	from siac_d_class_tipo tipo
	    where tipo.ente_proprietario_id=enteProprietarioId
    	and   tipo.classif_tipo_code=CL_RICORRENTE_SPESA
	    and   tipo.data_cancellazione is null
    	and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
	    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

	    strMessaggio:='Lettura transazioneUeSpesaId  per classif='||CL_TRANSAZIONE_UE_SPESA||'.';
		select tipo.classif_tipo_id into strict transazioneUeSpesaId
    	from siac_d_class_tipo tipo
	    where tipo.ente_proprietario_id=enteProprietarioId
    	and   tipo.classif_tipo_code=CL_TRANSAZIONE_UE_SPESA
	    and   tipo.data_cancellazione is null
    	and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
	    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

        strMessaggio:='Lettura cofogTipoId  per classif='||CL_COFOG||'.';
		select tipo.classif_tipo_id into strict cofogTipoId
	    from siac_d_class_tipo tipo
    	where tipo.ente_proprietario_id=enteProprietarioId
	    and   tipo.classif_tipo_code=CL_COFOG
    	and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    	and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

	    strMessaggio:='Lettura siopeSpesaTipoId  per classif='||CL_SIOPE_SPESA_TERZO||'.';
		select tipo.classif_tipo_id into strict siopeSpesaTipoId
	    from siac_d_class_tipo tipo
    	where tipo.ente_proprietario_id=enteProprietarioId
	    and   tipo.classif_tipo_code=CL_SIOPE_SPESA_TERZO
    	and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    	and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

    else

		strMessaggio:='Lettura categoriaTipoId  per classif='||CL_CATEGORIA||'.';
		select tipo.classif_tipo_id into strict categoriaTipoId
	    from siac_d_class_tipo tipo
    	where tipo.ente_proprietario_id=enteProprietarioId
	    and   tipo.classif_tipo_code=CL_CATEGORIA
    	and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    	and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

        strMessaggio:='Lettura ricorrenteEntrataId  per classif='||CL_RICORRENTE_ENTRATA||'.';
		select tipo.classif_tipo_id into strict ricorrenteEntrataId
    	from siac_d_class_tipo tipo
	    where tipo.ente_proprietario_id=enteProprietarioId
    	and   tipo.classif_tipo_code=CL_RICORRENTE_ENTRATA
	    and   tipo.data_cancellazione is null
    	and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
	    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

	    strMessaggio:='Lettura transazioneUeEntrataId  per classif='||CL_TRANSAZIONE_UE_ENTRATA||'.';
		select tipo.classif_tipo_id into strict transazioneUeEntrataId
    	from siac_d_class_tipo tipo
	    where tipo.ente_proprietario_id=enteProprietarioId
    	and   tipo.classif_tipo_code=CL_TRANSAZIONE_UE_ENTRATA
	    and   tipo.data_cancellazione is null
    	and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
	    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

	    strMessaggio:='Lettura siopeEntrataTipoId  per classif='||CL_SIOPE_ENTRATA_TERZO||'.';
		select tipo.classif_tipo_id into strict siopeEntrataTipoId
	    from siac_d_class_tipo tipo
    	where tipo.ente_proprietario_id=enteProprietarioId
	    and   tipo.classif_tipo_code=CL_SIOPE_ENTRATA_TERZO
    	and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    	and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);


    end if;

    -- fine lettura classificatori Tipo Id
    strMessaggio:='Inserimento LOG per lettura classificatori tipo.';
	codResult:=null;
	insert into fase_bil_t_elaborazione_log
    (fase_bil_elab_id,fase_bil_elab_log_operazione,
     validita_inizio, login_operazione, ente_proprietario_id
    )
    values
    (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
    returning fase_bil_elab_log_id into codResult;

    if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
    end if;

  	strMessaggio:='Lettura bilancioId e periodoId  per annoBilancio='||annoBilancio::varchar||'.';
    select bil.bil_id , per.periodo_id into strict bilancioId, periodoId
    from siac_t_bil bil, siac_t_periodo per
    where bil.ente_proprietario_id=enteProprietarioId
    and   per.periodo_id=bil.periodo_id
    and   per.anno::INTEGER=annoBilancio;

    
    -- 25.10.2021 Sofia SIAC-8383
    strMessaggio:='Lettura bilancioId per annoBilancio-1='||(annoBilancio-1)::varchar||'.';
    select bil.bil_id into strict bilancioPrecId
    from siac_t_bil bil, siac_t_periodo per
    where bil.ente_proprietario_id=enteProprietarioId
    and   per.periodo_id=bil.periodo_id
    and   per.anno::INTEGER=annoBilancio-1;

   
	codResult:=null;
	insert into fase_bil_t_elaborazione_log
    (fase_bil_elab_id,fase_bil_elab_log_operazione,
     validita_inizio, login_operazione, ente_proprietario_id
    )
    values
    (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
    returning fase_bil_elab_log_id into codResult;

    if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
    end if;

	-- 13.10.2016 Sofia testo il tipo elaborazione
    -- faseBilancio=PROVVISORIO_FASE    -- gestione da gestione   -- provvisorio
    -- faseBilancio=PROVVISORIO_EP_FASE -- gestione da previsione -- provvisorio
	-- faseBilancio=GESTIONE_FASE       -- gestione da previsione -- definitivo
    if faseBilancio=PROVVISORIO_FASE or faseBilancio=PROVVISORIO_EP_FASE then
    	faseOpNew:=PROVVISORIO_FASE;
    elsif faseBilancio=GESTIONE_FASE then
    	faseOpNew:=GESTIONE_FASE;
    end if;

--- 29.06.2016 Sofia - aggiunta gestione fase
--- cancellazione della precedente presente se diversa da G
--- inserimento della nuova G se non gia presente
-- 	strMessaggio:='Cancellazione fase tipo diversa da '||GESTIONE_FASE||' per bilancio annoBilancio='||annoBilancio::varchar||'.';
--  13.10.2016 Sofia
 	strMessaggio:='Cancellazione fase tipo diversa da '||faseOpNew||' per bilancio annoBilancio='||annoBilancio::varchar||'.';
    delete from siac_r_bil_fase_operativa r
    where r.ente_proprietario_id=enteproprietarioid
    and   r.data_cancellazione is null
    and   r.validita_fine is null
    and   r.bil_id=bilancioId
    and   exists (select 1 from siac_d_fase_operativa d
                  where  d.fase_operativa_id=r.fase_operativa_id
                  and    d.fase_operativa_code!=faseOpNew);
--                  and    d.fase_operativa_code!=GESTIONE_FASE); -- 13.10.2016 Sofia

--   	strMessaggio:='Inserimento fase tipo='||GESTIONE_FASE||' per bilancio annoBilancio='||annoBilancio::varchar||'.';
-- 13.10.2016 Sofia
   	strMessaggio:='Inserimento fase tipo='||faseOpNew||' per bilancio annoBilancio='||annoBilancio::varchar||'.';
	insert into siac_r_bil_fase_operativa
	(bil_id,fase_operativa_id, validita_inizio, ente_proprietario_id, login_operazione )
	(select bilancioId,f.fase_operativa_id,dataInizioVal,f.ente_proprietario_id,loginOperazione
	 from siac_d_fase_operativa f
     where f.ente_proprietario_id=enteProprietarioId
--	 and   f.fase_operativa_code=GESTIONE_FASE
	 and   f.fase_operativa_code=faseOpNew      -- 13.10.2016 Sofia
	 and   not exists (select 1 from siac_r_bil_fase_operativa r
     	 		       where  r.bil_id=bilancioId
                       and    r.data_cancellazione is null));

---

	codResult:=null;
	insert into fase_bil_t_elaborazione_log
    (fase_bil_elab_id,fase_bil_elab_log_operazione,
     validita_inizio, login_operazione, ente_proprietario_id
    )
    values
    (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
    returning fase_bil_elab_log_id into codResult;

    if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
    end if;

	-- pulizia e popolamento tabella appoggio

	-- capitoli previsione non esistenti in gestione
-- 16.02.2016 Danie e Anto: la chiusura del record non  necessaria andando sempre per bilancio id
--    strMessaggio:='Pulizia fase_bil_t_prev_approva_str_elem_gest_nuovo.';
--    update fase_bil_t_prev_approva_str_elem_gest_nuovo g set data_cancellazione=now()
--    where ente_proprietario_id=enteProprietarioId
--    and   bil_id=bilancioId;

	codResult:=null;
	insert into fase_bil_t_elaborazione_log
    (fase_bil_elab_id,fase_bil_elab_log_operazione,
     validita_inizio, login_operazione, ente_proprietario_id
    )
    values
    (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
    returning fase_bil_elab_log_id into codResult;

    if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
    end if;

    -- capitoli previsione esistenti in gestione
	strMessaggio:='Pulizia fase_bil_t_prev_approva_str_elem_gest_esiste.';
    update fase_bil_t_prev_approva_str_elem_gest_esiste set data_cancellazione=now()
    where ente_proprietario_id=enteProprietarioId
    and   bil_id=bilancioId;


	codResult:=null;
	insert into fase_bil_t_elaborazione_log
    (fase_bil_elab_id,fase_bil_elab_log_operazione,
     validita_inizio, login_operazione, ente_proprietario_id
    )
    values
    (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
    returning fase_bil_elab_log_id into codResult;

    if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
    end if;

    strMessaggio:='Popolamento fase_bil_t_prev_approva_str_elem_gest_nuovo.';
    insert into fase_bil_t_prev_approva_str_elem_gest_nuovo
    (elem_id,elem_code,elem_code2, elem_code3,
     bil_id,fase_bil_elab_id,
     ente_proprietario_id,validita_inizio,login_operazione)
    (select prev.elem_id, prev.elem_code,prev.elem_code2,prev.elem_code3,
            prev.bil_id,faseBilElabId,
            prev.ente_proprietario_id, dataInizioVal,loginOperazione
     from siac_t_bil_elem prev
     where prev.ente_proprietario_id=enteProprietarioId
     and   prev.elem_tipo_id=bilElemPrevTipoId
     and   prev.bil_id=bilancioId
     and   prev.data_cancellazione is null
     and   exists (select 1 from siac_r_bil_elem_stato rstato -- 15.11.2016 Anto JIRA-SIAC-4161
                  					 where rstato.elem_id=prev.elem_id
				                     and   rstato.elem_stato_id!=bilElemStatoANId
					                 and   rstato.data_cancellazione is null
					                 and   rstato.validita_fine is null
				                     )

     and   date_trunc('day',dataElaborazione)>=date_trunc('day',prev.validita_inizio)
     and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',prev.validita_fine) or prev.validita_fine is null)
     and   not exists (select 1 from siac_t_bil_elem gest
                       where gest.ente_proprietario_id=prev.ente_proprietario_id
                       and   gest.bil_id=prev.bil_id
                       and   gest.elem_tipo_id=bilElemGestTipoId
                       and   gest.elem_code=prev.elem_code
                       and   gest.elem_code2=prev.elem_code2
                       and   gest.elem_code3=prev.elem_code3
                       and   gest.data_cancellazione is null

                       and   exists (select 1 from siac_r_bil_elem_stato rstato -- 15.11.2016 Anto JIRA-SIAC-4161
                  					 where rstato.elem_id=gest.elem_id
				                     and   rstato.elem_stato_id!=bilElemStatoANId
					                 and   rstato.data_cancellazione is null
					                 and   rstato.validita_fine isnull
				                     )

                       and   date_trunc('day',dataElaborazione)>=date_trunc('day',gest.validita_inizio)
   			 		   and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',gest.validita_fine) or gest.validita_fine is null)
                       order by gest.elem_id limit 1
                      )
     order by prev.elem_code::integer,prev.elem_code2::integer,prev.elem_code3
     );


	 codResult:=null;
	 insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
     returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

    if checkGest=true then

    	strMessaggio:='Popolamento fase_bil_t_prev_approva_str_elem_gest_esiste - previsione con gestione eq esistente.';
	    insert into fase_bil_t_prev_approva_str_elem_gest_esiste
    	(elem_prev_id, elem_gest_id,elem_code,elem_code2, elem_code3,
         bil_id,fase_bil_elab_id,
         ente_proprietario_id,validita_inizio,login_operazione)
	    (select prev.elem_id, gest.elem_id,prev.elem_code,prev.elem_code2,prev.elem_code3,
                prev.bil_id,faseBilElabId,
                enteProprietarioId, dataInizioVal,loginOperazione
    	 from siac_t_bil_elem prev, siac_t_bil_elem gest
	     where prev.ente_proprietario_id=enteProprietarioId
	     and   prev.elem_tipo_id=bilElemPrevTipoId
	     and   prev.bil_id=bilancioId
	     and   gest.ente_proprietario_id=prev.ente_proprietario_id
	     and   gest.bil_id=prev.bil_id
         and   gest.elem_tipo_id=bilElemGestTipoId
    	 and   gest.elem_code=prev.elem_code
	     and   gest.elem_code2=prev.elem_code2
	     and   gest.elem_code3=prev.elem_code3
		 and   prev.data_cancellazione is null
	     and   date_trunc('day',dataElaborazione)>=date_trunc('day',prev.validita_inizio)
    	 and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',prev.validita_fine) or prev.validita_fine is null)
	     and   gest.data_cancellazione is null
    	 and   date_trunc('day',dataElaborazione)>=date_trunc('day',gest.validita_inizio)
	   	 and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',gest.validita_fine) or gest.validita_fine is null)
	   	 and   exists (select 1 from siac_r_bil_elem_stato rstato -- 15.11.2016 Anto JIRA-SIAC-4161
                  					 where rstato.elem_id=prev.elem_id
				                     and   rstato.elem_stato_id!=bilElemStatoANId
					                 and   rstato.data_cancellazione is null
					                 and   rstato.validita_fine isnull
				                     )
		and   exists (select 1 from siac_r_bil_elem_stato rstato -- 15.11.2016 Anto JIRA-SIAC-4161
                  					 where rstato.elem_id=gest.elem_id
				                     and   rstato.elem_stato_id!=bilElemStatoANId
					                 and   rstato.data_cancellazione is null
					                 and   rstato.validita_fine isnull
				                     )
    	 order by prev.elem_code::integer,prev.elem_code2::integer,prev.elem_code3
	    );


		codResult:=null;
		insert into fase_bil_t_elaborazione_log
	    (fase_bil_elab_id,fase_bil_elab_log_operazione,
	     validita_inizio, login_operazione, ente_proprietario_id
	    )
	    values
	    (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
	    returning fase_bil_elab_log_id into codResult;

	    if codResult is null then
    	 	raise exception ' Errore in inserimento LOG.';
	    end if;

        -- capitoli gestione esistenti senza capitolo eq in previsione
    	strMessaggio:='Popolamento fase_bil_t_prev_approva_str_elem_gest_esiste - gestione senza previsione eq esistente.';
	    insert into fase_bil_t_prev_approva_str_elem_gest_esiste
    	(elem_prev_id, elem_gest_id,elem_code,elem_code2, elem_code3,
         bil_id,fase_bil_elab_id,
         ente_proprietario_id,validita_inizio,login_operazione)
	    (select null, gest.elem_id,gest.elem_code,gest.elem_code2,gest.elem_code3,
        	 	gest.bil_id,faseBilElabId,
                enteProprietarioId,dataInizioVal,loginOperazione
    	 from  siac_t_bil_elem gest
	     where gest.ente_proprietario_id=enteProprietarioId
	     and   gest.elem_tipo_id=bilElemGestTipoId
	     and   gest.bil_id=bilancioId
	     --and   gest.ente_proprietario_id=prev.ente_proprietario_id
	     --and   gest.bil_id=prev.bil_id
	     and   gest.data_cancellazione is null
	     and   exists (select 1 from siac_r_bil_elem_stato rstato -- 15.11.2016 Anto JIRA-SIAC-4161
                  					 where rstato.elem_id=gest.elem_id
				                     and   rstato.elem_stato_id!=bilElemStatoANId
					                 and   rstato.data_cancellazione is null
					                 and   rstato.validita_fine isnull
				                     )
    	 and   date_trunc('day',dataElaborazione)>=date_trunc('day',gest.validita_inizio)
	   	 and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',gest.validita_fine) or gest.validita_fine is null)
         and   not exists (select  1 from siac_t_bil_elem prev
  						   where  prev.ente_proprietario_id=gest.ente_proprietario_id
                           and    prev.bil_id=gest.bil_id
                           and    prev.elem_tipo_id=bilElemPrevTipoId
                           and    prev.elem_code=gest.elem_code
						   and    prev.elem_code2=gest.elem_code2
					       and    prev.elem_code3=gest.elem_code3
					       and    prev.data_cancellazione is null
					       and   exists (select 1 from siac_r_bil_elem_stato rstato -- 15.11.2016 Anto JIRA-SIAC-4161
                  					 where rstato.elem_id=prev.elem_id
				                     and   rstato.elem_stato_id!=bilElemStatoANId
					                 and   rstato.data_cancellazione is null
					                 and   rstato.validita_fine isnull
				                     )
				    	   and    date_trunc('day',dataElaborazione)>=date_trunc('day',prev.validita_inizio)
				      	   and    ( date_trunc('day',dataElaborazione)<=date_trunc('day',prev.validita_fine) or prev.validita_fine is null)
                           order by prev.elem_id limit 1)
    	 order by gest.elem_code::integer,gest.elem_code2::integer,gest.elem_code3
	    );

  	    codResult:=null;
 	    insert into fase_bil_t_elaborazione_log
        (fase_bil_elab_id,fase_bil_elab_log_operazione,
         validita_inizio, login_operazione, ente_proprietario_id
        )
	    values
        (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
        returning fase_bil_elab_log_id into codResult;

        if codResult is null then
     	 raise exception ' Errore in inserimento LOG.';
        end if;

	end if;

    codResult:=null;
    strMessaggio:='Popolamento fase_bil_t_prev_approva_str_elem_gest_nuovo.Verifica esistenza capitoli di previsione da approvare.';
    select 1 into codResult
    from fase_bil_t_prev_approva_str_elem_gest_nuovo fase
    where fase.ente_proprietario_id=enteProprietarioId
    and   fase.bil_id=bilancioId
    and   fase.fase_bil_elab_id=faseBilElabId
    and   fase.data_cancellazione is null
    and   fase.validita_fine is null
    order by fase.fase_bil_prev_str_nuovo_id limit 1;


    if codResult is not null then
 	-- inserimento nuove strutture
    -- capitoli previsione non esistenti in gestione
     strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||'.';

	 codResult:=null;
	 insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
     returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;


    for elemBilPrev in
    (select elem_id, elem_code,elem_code2,elem_code3
     from fase_bil_t_prev_approva_str_elem_gest_nuovo
     where ente_proprietario_id=enteProprietarioId
     and   bil_id=bilancioId
     and   fase_bil_elab_id=faseBilElabId
     and   data_cancellazione is NULL
     and   validita_fine is null
     order by elem_code::integer,elem_code2::integer,elem_code3
    )
    loop
    	bilElemIdRet:=null;
        strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			  '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                              ||elemBilPrev.elem_code2||' '
                                              ||elemBilPrev.elem_code3||' : siac_t_bil_elem.' ;
        -- siac_t_bil_elem
    	insert into siac_t_bil_elem
	    (elem_code,elem_code2,elem_code3, elem_desc,elem_desc2,
    	 elem_tipo_id, bil_id,ordine,livello,
	     validita_inizio , ente_proprietario_id,login_operazione)
        (select prev.elem_code,prev.elem_code2,prev.elem_code3,prev.elem_desc, prev.elem_desc2,
	            bilElemGestTipoId,bilancioId,prev.ordine,prev.livello,
                dataInizioVal,prev.ente_proprietario_id,loginOperazione
         from siac_t_bil_elem prev
         where prev.elem_id=elemBilPrev.elem_id)
         returning elem_id into bilElemIdRet;

        if bilElemIdRet is null then raise exception ' Inserimento non effettuato.';  end if;

        codResult:=null;
        strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			  '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                              ||elemBilPrev.elem_code2||' '
                                              ||elemBilPrev.elem_code3||' : siac_r_bil_elem_stato.' ;

        -- siac_r_bil_elem_stato
	    strMessaggio:='Inserimento siac_r_bil_elem_stato.';
	    insert into siac_r_bil_elem_stato
    	(elem_id,elem_stato_id,validita_inizio,ente_proprietario_id,login_operazione)
    	(select bilElemIdRet,stato.elem_stato_id,dataInizioVal,stato.ente_proprietario_id, loginOperazione
         from siac_r_bil_elem_stato stato
         where stato.elem_id=elemBilPrev.elem_id
         and   stato.data_cancellazione is null
         and   date_trunc('day',dataElaborazione)>=date_trunc('day',stato.validita_inizio)
	   	 and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',stato.validita_fine) or stato.validita_fine is null)
         )
         returning bil_elem_stato_id into codResult;
         if codResult is null then raise exception ' Inserimento non effettuato.'; end if;

         codResult:=null;
         -- siac_r_bil_elem_categoria
         strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			   '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                              ||elemBilPrev.elem_code2||' '
                                              ||elemBilPrev.elem_code3||' : siac_r_bil_elem_categoria.' ;

         insert into siac_r_bil_elem_categoria
	     (elem_id,  elem_cat_id, validita_inizio,ente_proprietario_id, login_operazione)
         (select bilElemIdRet, cat.elem_cat_id,dataInizioVal,cat.ente_proprietario_id,loginOperazione
          from siac_r_bil_elem_categoria cat
          where cat.elem_id=elemBilPrev.elem_id
          and   cat.data_cancellazione is null
          and   date_trunc('day',dataElaborazione)>=date_trunc('day',cat.validita_inizio)
	   	  and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',cat.validita_fine) or cat.validita_fine is null)
         )
         returning bil_elem_r_cat_id into codResult;
         if codResult is null then raise exception ' Inserimento non effettuato.'; end if;


         -- 02.03.2016 Dani: leggo categoria capitolo inserita.
         select d.elem_cat_code into categoriaCapCode
         from siac_r_bil_elem_categoria r, siac_d_bil_elem_categoria d where
         d.elem_cat_id=r.elem_cat_id
         and r.bil_elem_r_cat_id=codResult;

         codResult:=null;
         -- siac_r_bil_elem_attr (escludere FLAG_PER_MEM)
         strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			   '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                              ||elemBilPrev.elem_code2||' '
                                              ||elemBilPrev.elem_code3||' : siac_r_bil_elem_attr.' ;
         insert into siac_r_bil_elem_attr
         ( elem_id,attr_id, tabella_id,boolean,percentuale,testo,numerico,
           validita_inizio,ente_proprietario_id,login_operazione
         )
         (select bilElemIdRet, attr.attr_id,attr.tabella_id,attr.boolean,attr.percentuale,attr.testo,attr.numerico,
                 dataInizioVal,attr.ente_proprietario_id, loginOperazione
          from siac_r_bil_elem_attr attr
          where attr.elem_id=elemBilPrev.elem_id
          and   attr.attr_id!=flagPerMemAttrId
          and   attr.data_cancellazione is null
          and   date_trunc('day',dataElaborazione)>=date_trunc('day',attr.validita_inizio)
	   	  and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',attr.validita_fine) or attr.validita_fine is null)
          );

          select 1 into codResult
          from siac_r_bil_elem_attr
          where elem_id=bilElemIdRet
          and   data_cancellazione is null
          and   validita_fine is null
          order by elem_id
          limit 1;
          if codResult is null then raise exception ' Nessun attributo inserito.'; end if;

/* 31.07.2017 Sofia - gestione vincoli e atti di legge commentata
         codResult:=null;
         -- siac_r_vincolo_bil_elem
         strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			   '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                              ||elemBilPrev.elem_code2||' '
                                              ||elemBilPrev.elem_code3||' : siac_r_vincolo_bil_elem.' ;
         insert into siac_r_vincolo_bil_elem
         ( elem_id,vincolo_id, validita_inizio,ente_proprietario_id,login_operazione
         )
         (select bilElemIdRet, v.vincolo_id, dataInizioVal,v.ente_proprietario_id, loginOperazione
          from siac_r_vincolo_bil_elem v
          where v.elem_id=elemBilPrev.elem_id
          and   v.data_cancellazione is null
          and   date_trunc('day',dataElaborazione)>=date_trunc('day',v.validita_inizio)
	   	  and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v.validita_fine) or v.validita_fine is null)
          );

          codResult:=null;
          strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                               ||elemBilPrev.elem_code2||' '
                                               ||elemBilPrev.elem_code3||' : siac_r_vincolo_bil_elem.Verifica inserimento.' ;
          select  1  into codResult
          from 	siac_r_vincolo_bil_elem v
          where v.elem_id=elemBilPrev.elem_id
          and   v.data_cancellazione is null
          and   date_trunc('day',dataElaborazione)>=date_trunc('day',v.validita_inizio)
	   	  and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v.validita_fine) or v.validita_fine is null)
          and   not exists (select 1 from siac_r_vincolo_bil_elem v1
	                        where v1.elem_id= bilElemIdRet
    	                    and   v1.data_cancellazione is null
				            and   date_trunc('day',dataElaborazione)>=date_trunc('day',v1.validita_inizio)
				  	   	    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v1.validita_fine) or v1.validita_fine is null)
                            order by v1.elem_id
                            limit 1
                            )
          order by v.elem_id
          limit 1;
          if codResult is not null then raise exception ' Non effettuato.'; end if;

 04.03.2019 Sofia jira siac-6630 - tolto commento  */
        /** 04.03.2019 Sofia jira siac-6630 - inizio - tolto commento **/
         codResult:=null;
         -- siac_r_bil_elem_atto_legge
         strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			   '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                              ||elemBilPrev.elem_code2||' '
                                              ||elemBilPrev.elem_code3||' : siac_r_bil_elem_atto_legge.' ;
         insert into siac_r_bil_elem_atto_legge
         ( elem_id,attolegge_id, descrizione, gerarchia,finanziamento_inizio,finanziamento_fine,
           validita_inizio,ente_proprietario_id,login_operazione
         )
         (select bilElemIdRet, v.attolegge_id, v.descrizione,v.gerarchia,v.finanziamento_inizio,v.finanziamento_fine,
                 dataInizioVal,v.ente_proprietario_id, loginOperazione
          from siac_r_bil_elem_atto_legge v
          where v.elem_id=elemBilPrev.elem_id
          and   v.data_cancellazione is null
          and   date_trunc('day',dataElaborazione)>=date_trunc('day',v.validita_inizio)
	   	  and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v.validita_fine) or v.validita_fine is null)
          );


          codResult:=null;
          strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                               ||elemBilPrev.elem_code2||' '
                                               ||elemBilPrev.elem_code3||' : siac_r_bil_elem_atto_legge.Verifica inserimento.' ;
          select 1  into codResult
          from 	siac_r_bil_elem_atto_legge v
          where v.elem_id=elemBilPrev.elem_id
          and   v.data_cancellazione is null
          and   date_trunc('day',dataElaborazione)>=date_trunc('day',v.validita_inizio)
	   	  and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v.validita_fine) or v.validita_fine is null)
          and   not exists (select 1 from siac_r_bil_elem_atto_legge v1
	                        where v1.elem_id= bilElemIdRet
    	                    and   v1.data_cancellazione is null
				            and   date_trunc('day',dataElaborazione)>=date_trunc('day',v1.validita_inizio)
				  	   	    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v1.validita_fine) or v1.validita_fine is null)
                            order by v1.elem_id
                            limit 1
                            )
          order by v.elem_id
          limit 1;
          if codResult is not null then raise exception ' Non effettuato.'; end if;
/*  04.03.2019 Sofia jira siac-6630 - tolto commento
31.07.2017 Sofia - chiusura
*/
          strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                               ||elemBilPrev.elem_code2||' '
                                               ||elemBilPrev.elem_code3||' : siac_r_bil_elem_rel_tempo.' ;
		-- siac-8383 Sofia 14.10.2021 
		-- elem_id_old deve essere ricalcolato in base al suo stesso equivalente di gestione in annobilancio-1
		-- attenzione anche al controllo dopo la insert o da commentare o da correggere											   
/* 		  insert into siac_r_bil_elem_rel_tempo
          (elem_id, elem_id_old, validita_inizio, ente_proprietario_id,login_operazione)
          (select bilElemIdRet,v.elem_id_old, dataInizioVal,v.ente_proprietario_id, loginOperazione
           from siac_r_bil_elem_rel_tempo v
           where v.elem_id=elemBilPrev.elem_id
	       and   v.data_cancellazione is null
           and   date_trunc('day',dataElaborazione)>=date_trunc('day',v.validita_inizio)
	   	   and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v.validita_fine) or v.validita_fine is null));*/

	   	  -- siac-8383 Sofia 25.10.2021
	   	  insert into siac_r_bil_elem_rel_tempo
          (elem_id, elem_id_old, validita_inizio, ente_proprietario_id,login_operazione)
          (select bilElemIdRet,enew.elem_id, dataInizioVal,v.ente_proprietario_id, loginOperazione
           from siac_r_bil_elem_rel_tempo v,siac_t_bil_elem e,siac_t_bil_elem enew
           where v.elem_id=elemBilPrev.elem_id
           and   e.elem_id=v.elem_id
           AND   r.elem_id=v.elem_old_id 
           AND   enew.elem_tipo_id=bilElemGestTipoId
           AND   enew.bil_id=bilancioPrecId
           AND   enew.elem_code=e.elem_code 
           AND   enew.elem_code2=e.elem_code2
           AND   enew.elem_code3=e.elem_code3
           AND   enew.data_cancellazione IS null
	       and   v.data_cancellazione is null
           and   date_trunc('day',dataElaborazione)>=date_trunc('day',v.validita_inizio)
	   	   and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v.validita_fine) or v.validita_fine is null));
	
          /* 	   	  -- siac-8383 Sofia 25.10.2021
           codResult:=null;
          strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                               ||elemBilPrev.elem_code2||' '
                                               ||elemBilPrev.elem_code3||' : siac_r_bil_elem_rel_tempo.Verifica inserimento.' ;
          select 1  into codResult
          from 	siac_r_bil_elem_rel_tempo v
          where v.elem_id=elemBilPrev.elem_id
          and   v.data_cancellazione is null
          and   date_trunc('day',dataElaborazione)>=date_trunc('day',v.validita_inizio)
	   	  and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v.validita_fine) or v.validita_fine is null)
          and   not exists (select 1 from siac_r_bil_elem_rel_tempo v1
	                        where v1.elem_id= bilElemIdRet
    	                    and   v1.data_cancellazione is null
				            and   date_trunc('day',dataElaborazione)>=date_trunc('day',v1.validita_inizio)
				  	   	    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v1.validita_fine) or v1.validita_fine is null)
                            order by v1.elem_id
                            limit 1
                            )
          order by v.elem_id
          limit 1;
          if codResult is not null then raise exception ' Non effettuato.'; end if;*/


	      codResult:=null;
	      -- siac_r_bil_elem_class
          strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                               ||elemBilPrev.elem_code2||' '
                                               ||elemBilPrev.elem_code3||' : siac_r_bil_elem_class.' ;
		/*
         insert into siac_r_bil_elem_class
         (elem_id,classif_id, validita_inizio, ente_proprietario_id,login_operazione)
         (select bilElemIdRet, class.classif_id,dataInizioVal,class.ente_proprietario_id,loginOperazione
          from siac_r_bil_elem_class class ,
          where class.elem_id=elemBilPrev.elem_id
          and   class.data_cancellazione is null
          and   date_trunc('day',dataElaborazione)>=date_trunc('day',class.validita_inizio)
	   	  and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',class.validita_fine) or class.validita_fine is null));
          */

          /** JIRA-SIAC-4167 - aggiunto controllo su validita classificatore **/
         insert into siac_r_bil_elem_class
         (elem_id,classif_id, validita_inizio, ente_proprietario_id,login_operazione)
         (select bilElemIdRet, class.classif_id,dataInizioVal,class.ente_proprietario_id,loginOperazione
          from siac_r_bil_elem_class class,siac_t_class c
          where class.elem_id=elemBilPrev.elem_id
          and   c.classif_id=class.classif_id
          and   class.data_cancellazione is null
          and   date_trunc('day',dataElaborazione)>=date_trunc('day',class.validita_inizio)
	   	  and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',class.validita_fine) or class.validita_fine is null)
          and   c.data_cancellazione is null
          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
	   	  and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null));





          select 1 into codResult
          from siac_r_bil_elem_class
          where elem_id=bilElemIdRet
          and   data_cancellazione is null
          and   validita_fine is null
          order by elem_id
          limit 1;
          if codResult is null then raise exception ' Nessun classificatore inserito.'; end if;

          -- controlli sui classificatori obbligatori
          -- CL_CDC, CL_CDR
          codResult:=null;
          strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                               ||elemBilPrev.elem_code2||' '
                                               ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_CDC||' '||CL_CDR||'.' ;
           /*
          select 1 into codResult
          from siac_r_bil_elem_class r, siac_t_class c
          where r.elem_id=bilElemIdRet
          and   c.classif_id=r.classif_id
          and   c.classif_tipo_id in (cdcTipoId, cdrTipoId)
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          order by r.elem_id
          limit 1;
          if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
			*/

            /** JIRA-SIAC-4167  **/
		  select 1 into codResult
          from siac_r_bil_elem_class r, siac_t_class c
          where r.elem_id=bilElemIdRet
          and   c.classif_id=r.classif_id
          and   c.classif_tipo_id in (cdcTipoId, cdrTipoId)
          and   c.data_cancellazione is null
          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
	   	  and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
          order by r.elem_id
          limit 1;

          if codResult is null then
           strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
           insert into fase_bil_t_prev_apertura_segnala
           (elem_id,
	        elem_code,
			elem_code2,
			elem_code3,
		    bil_id,
		    fase_bil_elab_id,
		    segnala_codice,
			segnala_desc,
			validita_inizio,
			ente_proprietario_id,
		    login_operazione)
           (select capitolo.elem_id,
                   capitolo.elem_code,
                   capitolo.elem_code2,
                   capitolo.elem_code3,
                   capitolo.bil_id,
                   faseBilElabId,
                   'SAC',
                   'Sac mancante',
                   dataInizioVal,
                   capitolo.ente_proprietario_id,
                   loginOperazione
            from siac_t_bil_elem capitolo
            where  capitolo.elem_id=bilElemIdRet
            )
            returning fase_bil_prev_ape_seg_id into codresult;

            if codResult is null then raise exception 'Nessuno inserimento effettuato.'; end if;
          end if;


   	      -- CL_PDC_FIN_QUINTO, CL_PDC_FIN_QUARTO
		  codResult:=null;
          strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                               ||elemBilPrev.elem_code2||' '
                                               ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_PDC_FIN_QUARTO||' '||CL_PDC_FIN_QUINTO||'.' ;

          /*
          select 1 into codResult
          from siac_r_bil_elem_class r, siac_t_class c
          where r.elem_id=bilElemIdRet
          and   c.classif_id=r.classif_id
          and   c.classif_tipo_id in (pdcFinIVId, pdcFinVId)
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          order by r.elem_id
          limit 1;

          -- 02.03.2016 Dani. l'obbligatorieta  del classificatore vale solo per capitolo STANDARD
		  if categoriaCapCode = CATEGORIA_STD then
	          if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
          end if;
			*/

/** JIRA-SIAC-4167 **/
          select 1 into codResult
          from siac_r_bil_elem_class r, siac_t_class c
          where r.elem_id=bilElemIdRet
          and   c.classif_id=r.classif_id
          and   c.classif_tipo_id in (pdcFinIVId, pdcFinVId)
          and   c.data_cancellazione is null
          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
	   	  and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
          order by r.elem_id
          limit 1;



          -- Obbligatorieta  del classificatore vale solo per capitolo STANDARD
		  if categoriaCapCode = CATEGORIA_STD then
	      --  JIRA-SIAC-4167  if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
           if codResult is null then
          	strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
            insert into fase_bil_t_prev_apertura_segnala
            (elem_id,
	         elem_code,
		 	 elem_code2,
			 elem_code3,
		     bil_id,
		     fase_bil_elab_id,
		     segnala_codice,
			 segnala_desc,
			 validita_inizio,
			 ente_proprietario_id,
		     login_operazione)
            (select capitolo.elem_id,
                    capitolo.elem_code,
                    capitolo.elem_code2,
                    capitolo.elem_code3,
                    capitolo.bil_id,
                    faseBilElabId,
                    'PDCFIN',
                    'PdcFin mancante',
                    dataInizioVal,
                    capitolo.ente_proprietario_id,
                    loginOperazione
             from siac_t_bil_elem capitolo
             where  capitolo.elem_id=bilElemIdRet
             )
             returning fase_bil_prev_ape_seg_id into codresult;

             if codResult is null then raise exception 'Nessuno inserimento effettuato.'; end if;
           end if;
          end if;

          if euElemTipo=TIPO_ELEM_EU then
	          -- CL_PROGRAMMA
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_PROGRAMMA||'.' ;
	          /*
              select 1 into codResult
    	      from siac_r_bil_elem_class r, siac_t_class c
        	  where r.elem_id=bilElemIdRet
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=programmaTipoId
              and   c.data_cancellazione is null
         	  and   c.validita_fine is null
              order by r.elem_id
        	  limit 1;
              -- 02.03.2016 Dani. l'obbligatorieta del classificatore vale solo per capitolo STANDARD
              if categoriaCapCode = CATEGORIA_STD then
                  if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;
				*/
/** JIRA-SIAC-4167 **/
			  select 1 into codResult
    	      from siac_r_bil_elem_class r, siac_t_class c
        	  where r.elem_id=bilElemIdRet
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=programmaTipoId
              and   c.data_cancellazione is null
         	  and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
	   	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              order by r.elem_id
        	  limit 1;



              -- Obbligatorieta  del classificatore vale solo per capitolo STANDARD
              if categoriaCapCode = CATEGORIA_STD then
                  -- JIRA-SIAC-4167 if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
                  if codResult is null then

                   strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_PROGRAMMA,
     	                   CL_PROGRAMMA||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

            	   if codResult is null then raise exception 'Nessuno inserimento effettuato.'; end if;
                  end if;
              end if;



    	      -- CL_MACROAGGREGATO
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_MACROAGGREGATO||'.' ;
	          /*
              select 1 into codResult
    	      from siac_r_bil_elem_class r, siac_t_class c
        	  where r.elem_id=bilElemIdRet
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=macroAggrTipoId
              and   c.data_cancellazione is null
          	  and   c.validita_fine is null
              order by r.elem_id
        	  limit 1;
          -- 02.03.2016 Dani. l'obbligatorieta  del classificatore vale solo per capitolo STANDARD
              if categoriaCapCode = CATEGORIA_STD then
		          if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;
				*/

                /** JIRA-SIAC-4167 **/
              select 1 into codResult
    	      from siac_r_bil_elem_class r, siac_t_class c
        	  where r.elem_id=bilElemIdRet
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=macroAggrTipoId
              and   c.data_cancellazione is null
          	  and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
	   	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              order by r.elem_id
        	  limit 1;

              -- Obbligatorieta del classificatore vale solo per capitolo STANDARD
              if categoriaCapCode = CATEGORIA_STD then
		          -- JIRA-SIAC-4167 if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
                  if codResult is null then

                   strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_MACROAGGREGATO,
     	                   CL_MACROAGGREGATO||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

            	   if codResult is null then raise exception 'Nessuno inserimento effettuato.';  end if;

                  end if;
              end if;

			  -- CL_COFOG
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_COFOG||'.' ;

			  -- 02.03.2016 Dani: definizione classificatore neseccaria solo se presente in previsione
              /*
              select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=cofogTipoId
              and   c.data_cancellazione is null
		      and   c.validita_fine is null
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=cofogTipoId
					             and   c.data_cancellazione is null
							     and   c.validita_fine is null
                                 )
			  order by r.elem_id limit 1;
	          if codResult is not null then raise exception ' Nessuno inserimento effettuato.'; end if;
				*/

                select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=cofogTipoId
              and   r.data_cancellazione is null
		      and   date_trunc('day',dataElaborazione)>=date_trunc('day',r.validita_inizio)
	   	      and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',r.validita_fine) or r.validita_fine is null)
              and   c.data_cancellazione is null
		      and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
	   	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=cofogTipoId
					             and   c.data_cancellazione is null
							     and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
				  	   	         and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                                 )
			  order by r.elem_id limit 1;

              -- --JIRA-SIAC-4167 14.11.2016 Sofia
	          if codResult is not null then
                   codResult:=null;
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_COFOG,
     	                   CL_COFOG||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

              	   if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;

              end if;



        	  -- CL_RICORRENTE_SPESA
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_RICORRENTE_SPESA||'.' ;
			  -- 02.03.2016 Dani: definizione classificatore neseccaria solo se presente in previsione
              /*
              select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=ricorrenteSpesaId
              and   c.data_cancellazione is null
		      and   c.validita_fine is null
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=ricorrenteSpesaId
					             and   c.data_cancellazione is null
							     and   c.validita_fine is null
                                 )
			  order by r.elem_id limit 1;
	          if codResult is not null then raise exception ' Nessuno inserimento effettuato.'; end if;
				*/
              select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=ricorrenteSpesaId
              and   r.data_cancellazione is null
		      and   date_trunc('day',dataElaborazione)>=date_trunc('day',r.validita_inizio)
	   	      and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',r.validita_fine) or r.validita_fine is null)
              and   c.data_cancellazione is null
		      and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
	   	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=ricorrenteSpesaId
					             and   c.data_cancellazione is null
							     and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
					   	         and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                                )
			  order by r.elem_id limit 1;

              -- JIRA-SIAC-4167 14.11.2016 Sofia
      		  if codResult is not null then
                   codResult:=null;
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_RICORRENTE_SPESA,
     	                   CL_RICORRENTE_SPESA||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

              	   if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;

	          -- CL_SIOPE_SPESA_TERZO
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_SIOPE_SPESA_TERZO||'.' ;
				/*
              select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=siopeSpesaTipoId
              and   c.data_cancellazione is null
		      and   c.validita_fine is null
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=siopeSpesaTipoId
					             and   c.data_cancellazione is null
							     and   c.validita_fine is null
--                                 order by r.elem_id
--                                 limit 1
                                 )
			  order by r.elem_id
              limit 1;

	          if codResult is not null then raise exception ' Nessuno inserimento effettuato.'; end if;
				*/

                select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=siopeSpesaTipoId
              and   r.data_cancellazione is null
              and   date_trunc('day',dataElaborazione)>=date_trunc('day',r.validita_inizio)
  	   	      and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',r.validita_fine) or r.validita_fine is null)
              and   c.data_cancellazione is null
              and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
  	   	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=siopeSpesaTipoId
					             and   c.data_cancellazione is null
							     and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
				  	   	         and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                               )
			  order by r.elem_id
              limit 1;

              -- JIRA-SIAC-4167 14.11.2016 Sofia
              if codResult is not null then
                   codResult:=null;
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_SIOPE_SPESA_TERZO,
     	                   CL_SIOPE_SPESA_TERZO||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

              	   if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;


    	      -- CL_TRANSAZIONE_UE_SPESA
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_TRANSAZIONE_UE_SPESA||'.' ;

			  -- 02.03.2016 Dani: definizione classificatore neseccaria solo se presente in previsione
              /*
              select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=transazioneUeSpesaId
              and   c.data_cancellazione is null
		      and   c.validita_fine is null
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=transazioneUeSpesaId
					             and   c.data_cancellazione is null
							     and   c.validita_fine is null
                                 )
			  order by r.elem_id limit 1;
	          if codResult is not null then raise exception ' Nessuno inserimento effettuato.'; end if;
              */
select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=transazioneUeSpesaId
              and   r.data_cancellazione is null
		      and   date_trunc('day',dataElaborazione)>=date_trunc('day',r.validita_inizio)
  	   	      and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',r.validita_fine) or r.validita_fine is null)
              and   c.data_cancellazione is null
		      and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
  	   	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=transazioneUeSpesaId
					             and   c.data_cancellazione is null
							     and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
					     	     and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                               )
			  order by r.elem_id limit 1;

			  -- JIRA-SIAC-4167 14.11.2016 Sofia
              if codResult is not null then
                   codResult:=null;
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_TRANSAZIONE_UE_SPESA,
     	                   CL_TRANSAZIONE_UE_SPESA||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

              	   if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;
          else

    	      -- CL_CATEGORIA
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_CATEGORIA||'.' ;
	          /*
              select 1 into codResult
    	      from siac_r_bil_elem_class r, siac_t_class c
        	  where r.elem_id=bilElemIdRet
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=categoriaTipoId
              and   c.data_cancellazione is null
		      and   c.validita_fine is null
              order by r.elem_id
        	  limit 1;
          -- 02.03.2016 Dani. l'obbligatorieta  del classificatore vale solo per capitolo STANDARD
              if categoriaCapCode = CATEGORIA_STD then
				  if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;
				*/
              select 1 into codResult
    	      from siac_r_bil_elem_class r, siac_t_class c
        	  where r.elem_id=bilElemIdRet
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=categoriaTipoId
              and   r.data_cancellazione is null
		      and   date_trunc('day',dataElaborazione)>=date_trunc('day',r.validita_inizio)
    	      and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',r.validita_fine) or r.validita_fine is null)
              and   c.data_cancellazione is null
		      and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
    	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              order by r.elem_id
        	  limit 1;

              -- Obbligatorieta  del classificatore vale solo per capitolo STANDARD
              if categoriaCapCode = CATEGORIA_STD then
                  -- JIRA-SIAC-4167 14.11.2016 Sofia
				  -- if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
                  if codResult is null then
                   codResult:=null;
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_CATEGORIA,
     	                   CL_CATEGORIA||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

              	   if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;
              end if;


        	  -- CL_RICORRENTE_ENTRATA
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_RICORRENTE_ENTRATA||'.' ;
			  -- 02.03.2016 Dani: definizione classificatore neseccaria solo se presente in previsione
              /*
              select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=ricorrenteEntrataId
              and   c.data_cancellazione is null
		      and   c.validita_fine is null
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=ricorrenteEntrataId
					             and   c.data_cancellazione is null
							     and   c.validita_fine is null
                                 )
			  order by r.elem_id limit 1;
	          if codResult is not null then raise exception ' Nessuno inserimento effettuato.'; end if;
				*/
                select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=ricorrenteEntrataId
              and   r.data_cancellazione is null
		      and   date_trunc('day',dataElaborazione)>=date_trunc('day',r.validita_inizio)
    	      and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',r.validita_fine) or r.validita_fine is null)
              and   c.data_cancellazione is null
              and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
    	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=ricorrenteEntrataId
					             and   c.data_cancellazione is null
							     and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
					   	         and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                                )
			  order by r.elem_id limit 1;

              -- JIRA-SIAC-4167 14.11.2016 Sofia
              if codResult is not null then
                   codResult:=null;
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_RICORRENTE_ENTRATA,
     	                   CL_RICORRENTE_ENTRATA||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

              	   if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;



	          -- CL_SIOPE_ENTRATA_TERZO
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_SIOPE_ENTRATA_TERZO||'.' ;
				/*
	          select 1 into codResult
    	      from siac_r_bil_elem_class r, siac_t_class c
        	  where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=siopeEntrataTipoId
              and   c.data_cancellazione is null
		      and   c.validita_fine is null
              and   not exists (select 1
				      	        from siac_r_bil_elem_class r, siac_t_class c
				        	    where r.elem_id=bilElemIdRet
					            and   c.classif_id=r.classif_id
					   	        and   c.classif_tipo_id=siopeEntrataTipoId
			                    and   c.data_cancellazione is null
							    and   c.validita_fine is null
                                order by r.elem_id
                                limit 1)
			  order by r.elem_id
              limit 1;
	          if codResult is not null then raise exception ' Nessuno inserimento effettuato.'; end if;
				*/

select 1 into codResult
    	      from siac_r_bil_elem_class r, siac_t_class c
        	  where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=siopeEntrataTipoId
              and   r.data_cancellazione is null
		      and   date_trunc('day',dataElaborazione)>=date_trunc('day',r.validita_inizio)
    	      and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',r.validita_fine) or r.validita_fine is null)
              and   c.data_cancellazione is null
		      and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
    	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              and   not exists (select 1
				      	        from siac_r_bil_elem_class r, siac_t_class c
				        	    where r.elem_id=bilElemIdRet
					            and   c.classif_id=r.classif_id
					   	        and   c.classif_tipo_id=siopeEntrataTipoId
			                    and   c.data_cancellazione is null
							    and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
    	      				    and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                                order by r.elem_id
                                limit 1)
			  order by r.elem_id
              limit 1;

              -- JIRA-SIAC-4167 14.11.2016 Sofia
              if codResult is not null then
                   codResult:=null;
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_SIOPE_ENTRATA_TERZO,
     	                   CL_SIOPE_ENTRATA_TERZO||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

              	   if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;

    	      -- CL_TRANSAZIONE_UE_ENTRATA
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_TRANSAZIONE_UE_ENTRATA||'.' ;

			  -- 02.03.2016 Dani: definizione classificatore neseccaria solo se presente in previsione
          /*
              select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=transazioneUeEntrataId
              and   c.data_cancellazione is null
		      and   c.validita_fine is null
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=transazioneUeEntrataId
					             and   c.data_cancellazione is null
							     and   c.validita_fine is null
                                 )
			  order by r.elem_id limit 1;
	          if codResult is not null then raise exception ' Nessuno inserimento effettuato.'; end if;
          end if;
			*/

            select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=transazioneUeEntrataId
              and   r.data_cancellazione is null
		      and   date_trunc('day',dataElaborazione)>=date_trunc('day',r.validita_inizio)
    	      and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',r.validita_fine) or r.validita_fine is null)
              and   c.data_cancellazione is null
              and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
    	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=transazioneUeEntrataId
					             and   c.data_cancellazione is null
							     and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
				    	         and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                                )
			  order by r.elem_id limit 1;

              -- JIRA-SIAC-4167 14.11.2016 Sofia
              if codResult is not null then
                   codResult:=null;
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_TRANSAZIONE_UE_ENTRATA,
     	                   CL_TRANSAZIONE_UE_ENTRATA||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

              	   if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;

          end if;

          strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                               ||elemBilPrev.elem_code2||' '
                                               ||elemBilPrev.elem_code3||' : aggiornamento relazione tra elem_id_prev e elem_id_gest.' ;
          update fase_bil_t_prev_approva_str_elem_gest_nuovo set elem_gest_id=bilElemIdRet
          where elem_id=elemBilPrev.elem_id
          and   fase_bil_elab_id=faseBilElabId;

  end loop;

  strMessaggio:='Conclusione inserimento nuove strutture per tipo='||bilElemGestTipo||'.';
  codResult:=null;
  insert into fase_bil_t_elaborazione_log
  (fase_bil_elab_id,fase_bil_elab_log_operazione,
   validita_inizio, login_operazione, ente_proprietario_id
  )
  values
  (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
  returning fase_bil_elab_log_id into codResult;

  if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
  end if;

 end if;

 if checkGest=true then

 	codResult:=null;
    strMessaggio:='Verifica esistenza elementi di bilancio di gestione equivalenti da aggiornare da previsione.';
	select 1 into codResult
    from fase_bil_t_prev_approva_str_elem_gest_esiste fase
    where fase.ente_proprietario_id=enteProprietarioId
    and   fase.bil_id=bilancioId
    and   fase.fase_bil_elab_id=faseBilElabId
    and   fase.data_cancellazione is null
    and   fase.validita_fine is null
    and   fase.elem_prev_id is not null
    order by fase.fase_bil_prev_str_esiste_id
    limit 1;
    codResult:=null;
    insert into fase_bil_t_elaborazione_log
    (fase_bil_elab_id,fase_bil_elab_log_operazione,
	   validita_inizio, login_operazione, ente_proprietario_id
    )
 	values
	(faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
	 returning fase_bil_elab_log_id into codResult;

	if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
	end if;

    if codResult is not null then
    -- popolamento tabelle bck per salvataggio precedenti strutture
    -- siac_t_bil_elem
	  codResult:=null;
      strMessaggio:='Backup vecchie struttura per capitoli di gestione equivalente esistenti - INIZIO.';
	  insert into fase_bil_t_elaborazione_log
	  (fase_bil_elab_id,fase_bil_elab_log_operazione,
	   validita_inizio, login_operazione, ente_proprietario_id
	  )
	  values
	  (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
	  returning fase_bil_elab_log_id into codResult;

	  if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
	  end if;

    strMessaggio:='Backup vecchia struttura [siac_t_bil_elem] per capitoli di gestione equivalente.';
    insert into bck_fase_bil_t_prev_approva_bil_elem
    (elem_prev_id, elem_bck_id,elem_bck_code,elem_bck_code2, elem_bck_code3,
     elem_bck_desc,elem_bck_desc2, elem_bck_bil_id, elem_bck_id_padre, elem_bck_tipo_id, elem_bck_livello,
     elem_bck_ordine, elem_bck_data_creazione, elem_bck_data_modifica, elem_bck_login_operazione,
     elem_bck_validita_inizio, elem_bck_validita_fine,fase_bil_elab_id,
     ente_proprietario_id, login_operazione,validita_inizio)
    (select fase.elem_prev_id,elem.elem_id, elem.elem_code,elem.elem_code2,elem.elem_code3,
            elem.elem_desc,elem.elem_desc2, elem.bil_id, elem.elem_id_padre, elem.elem_tipo_id, elem.livello,
            elem.ordine, elem.data_creazione, elem.data_modifica, elem.login_operazione,
            elem.validita_inizio, elem.validita_fine,faseBilElabId,
            elem.ente_proprietario_id, loginOperazione,dataInizioVal
	 from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_t_bil_elem elem
     where fase.ente_proprietario_id=enteProprietarioId
     and   fase.bil_id=bilancioId
     and   fase.fase_bil_elab_id=faseBilElabId
     and   elem.elem_id=fase.elem_gest_id
     and   fase.data_cancellazione is null
     and   fase.validita_fine is null
     and   fase.elem_prev_id is not null
     );

     codResult:=null;
     strMessaggio:=strMessaggio||' Verifica inserimento.';
     select 1 into codResult
     from fase_bil_t_prev_approva_str_elem_gest_esiste fase
     where fase.ente_proprietario_id=enteProprietarioId
     and   fase.bil_id=bilancioId
     and   fase.fase_bil_elab_id=faseBilElabId
     and   fase.elem_gest_id is not null
     and   fase.elem_prev_id is not null
     and   fase.data_cancellazione is null
     and   fase.validita_fine is null
     and   not exists (select 1 from bck_fase_bil_t_prev_approva_bil_elem bck
                       where bck.fase_bil_elab_id=fase.fase_bil_elab_id
                       and   bck.elem_bck_id=fase.elem_gest_id
                       and   bck.data_cancellazione is null
                       and   bck.validita_fine is null);
     if codResult is not null then raise exception ' Elementi mancanti di backup.'; end if;


--- 29.06.2016 Sofia gestione backup per stato, classificatori, attributi e categoria
--  che non devono essere cancallati ma sovrascritti
	  -- bck per attributi e classificatori, stato e categoria
     strMessaggio:='Backup vecchia struttura [siac_r_bil_elem_stato] per capitoli di gestione equivalente.';
     insert into bck_fase_bil_t_prev_approva_bil_elem_stato
     (elem_bck_id,elem_bck_stato_id,
      elem_bck_data_creazione, elem_bck_data_modifica, elem_bck_login_operazione,
      elem_bck_validita_inizio, elem_bck_validita_fine,fase_bil_elab_id,
      ente_proprietario_id, login_operazione,validita_inizio)
     (select elem.elem_id, elem.elem_stato_id,
			 elem.data_creazione, elem.data_modifica, elem.login_operazione,
             elem.validita_inizio, elem.validita_fine,faseBilElabId,
             elem.ente_proprietario_id, loginOperazione,dataInizioVal
	  from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_r_bil_elem_stato elem
      where fase.ente_proprietario_id=enteProprietarioId
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   elem.elem_id=fase.elem_gest_id
      and   fase.data_cancellazione is null
      and   fase.validita_fine is null
      and   fase.elem_prev_id is not null
      );

      codResult:=null;
      strMessaggio:=strMessaggio||' Verifica inserimento.';
      select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase
      where fase.ente_proprietario_id=enteProprietarioId
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_gest_id is not null
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   fase.validita_fine is null
      and   not exists (select 1 from bck_fase_bil_t_prev_approva_bil_elem_stato bck
                        where bck.fase_bil_elab_id=fase.fase_bil_elab_id
                        and   bck.elem_bck_id=fase.elem_gest_id
                        and   bck.data_cancellazione is null
                        and   bck.validita_fine is null);
      if codResult is not null then raise exception ' Elementi mancanti di backup.'; end if;


      strMessaggio:='Backup vecchia struttura [siac_r_bil_elem_attr] per capitoli di gestione equivalente.';
      insert into bck_fase_bil_t_prev_approva_bil_elem_attr
      (elem_bck_id,elem_bck_attr_id,elem_bck_tabella_id,
       elem_bck_boolean,elem_bck_percentuale,
       elem_bck_testo,elem_bck_numerico,
       elem_bck_data_creazione, elem_bck_data_modifica, elem_bck_login_operazione,
       elem_bck_validita_inizio, elem_bck_validita_fine,fase_bil_elab_id,
       ente_proprietario_id, login_operazione,validita_inizio)
      (select fase.elem_gest_id, elem.attr_id, elem.tabella_id,
      		  elem."boolean",elem.percentuale, elem.testo, elem.numerico,
			  elem.data_creazione, elem.data_modifica, elem.login_operazione,
              elem.validita_inizio, elem.validita_fine,faseBilElabId,
              elem.ente_proprietario_id, loginOperazione,dataInizioVal
	   from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_r_bil_elem_attr elem
       where fase.ente_proprietario_id=enteProprietarioId
       and   fase.bil_id=bilancioId
       and   fase.fase_bil_elab_id=faseBilElabId
       and   elem.elem_id=fase.elem_gest_id
       and   fase.data_cancellazione is null
       and   fase.validita_fine is null
       and   fase.elem_prev_id is not null
      );

      codResult:=null;
      strMessaggio:=strMessaggio||' Verifica inserimento.';
      select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase
      where fase.ente_proprietario_id=enteProprietarioId
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_gest_id is not null
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   fase.validita_fine is null
      and   not exists (select 1 from bck_fase_bil_t_prev_approva_bil_elem_attr bck
                        where bck.fase_bil_elab_id=fase.fase_bil_elab_id
                        and   bck.elem_bck_id=fase.elem_gest_id
                        and   bck.data_cancellazione is null
                        and   bck.validita_fine is null);
      if codResult is not null then raise exception ' Elementi mancanti di backup.'; end if;

      strMessaggio:='Backup vecchia struttura [siac_r_bil_elem_class] per capitoli di gestione equivalente.';
      insert into bck_fase_bil_t_prev_approva_bil_elem_class
      (elem_bck_id,elem_bck_classif_id,
       elem_bck_data_creazione, elem_bck_data_modifica, elem_bck_login_operazione,
       elem_bck_validita_inizio, elem_bck_validita_fine,fase_bil_elab_id,
       ente_proprietario_id, login_operazione,validita_inizio)
      (select fase.elem_gest_id, elem.classif_id,
			  elem.data_creazione, elem.data_modifica, elem.login_operazione,
              elem.validita_inizio, elem.validita_fine,faseBilElabId,
              elem.ente_proprietario_id, loginOperazione,dataInizioVal
	   from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_r_bil_elem_class elem
       where fase.ente_proprietario_id=enteProprietarioId
       and   fase.bil_id=bilancioId
       and   fase.fase_bil_elab_id=faseBilElabId
       and   elem.elem_id=fase.elem_gest_id
       and   fase.data_cancellazione is null
       and   fase.validita_fine is null
       and   fase.elem_prev_id is not null
      );

      codResult:=null;
      strMessaggio:=strMessaggio||' Verifica inserimento.';
      select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase
      where fase.ente_proprietario_id=enteProprietarioId
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_gest_id is not null
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   fase.validita_fine is null
      and   not exists (select 1 from bck_fase_bil_t_prev_approva_bil_elem_class bck
                        where bck.fase_bil_elab_id=fase.fase_bil_elab_id
                        and   bck.elem_bck_id=fase.elem_gest_id
                        and   bck.data_cancellazione is null
                        and   bck.validita_fine is null);
      if codResult is not null then raise exception ' Elementi mancanti di backup.'; end if;

      strMessaggio:='Backup vecchia struttura [siac_r_bil_elem_categoria] per capitoli di gestione equivalente.';
      insert into bck_fase_bil_t_prev_approva_bil_elem_categ
      (elem_bck_id,elem_bck_cat_id,
       elem_bck_data_creazione, elem_bck_data_modifica, elem_bck_login_operazione,
       elem_bck_validita_inizio, elem_bck_validita_fine,fase_bil_elab_id,
       ente_proprietario_id, login_operazione,validita_inizio)
      (select fase.elem_gest_id, elem.elem_cat_id,
			  elem.data_creazione, elem.data_modifica, elem.login_operazione,
              elem.validita_inizio, elem.validita_fine,faseBilElabId,
              elem.ente_proprietario_id, loginOperazione,dataInizioVal
	   from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_r_bil_elem_categoria elem
      where fase.ente_proprietario_id=enteProprietarioId
       and   fase.bil_id=bilancioId
       and   fase.fase_bil_elab_id=faseBilElabId
       and   elem.elem_id=fase.elem_gest_id
       and   fase.data_cancellazione is null
       and   fase.validita_fine is null
       and   fase.elem_gest_id is not null
       and   fase.elem_prev_id is not null
      );

      codResult:=null;
      strMessaggio:=strMessaggio||' Verifica inserimento.';
      select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase
      where fase.ente_proprietario_id=enteProprietarioId
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_gest_id is not null
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   fase.validita_fine is null
      and   not exists (select 1 from bck_fase_bil_t_prev_approva_bil_elem_categ bck
                        where bck.fase_bil_elab_id=fase.fase_bil_elab_id
                        and   bck.elem_bck_id=fase.elem_gest_id
                        and   bck.data_cancellazione is null
                        and   bck.validita_fine is null);
      if codResult is not null then raise exception ' Elementi mancanti di backup.'; end if;

---------

     codResult:=null;
     strMessaggio:='Backup vecchie struttura per capitoli di gestione equivalente esistenti - FINE.';
     insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
      returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;


	 codResult:=null;
     strMessaggio:='Inizio cancellazione logica vecchie strutture gestione esistenti.';
     insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
      returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

     -- cancellazione logica precendenti relazioni
     -- siac_r_bil_elem_stato
/*     strMessaggio:='Cancellazione logica vecchie strutture gestione esistenti [siac_r_bil_elem_stato].';
     update siac_r_bil_elem_stato canc  set
      data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
     where canc.ente_proprietario_id=enteProprietarioId
     and   canc.data_cancellazione is null and canc.validita_fine is null
     and   exists (select 1 from fase_bil_t_prev_approva_str_elem_gest_esiste fase
                   where fase.ente_proprietario_id=enteProprietarioId
                   and   fase.bil_id=bilancioId
                   and   fase.fase_bil_elab_id=faseBilElabId
                   and   fase.elem_gest_id=canc.elem_id
                   and   fase.elem_prev_id is not null
                   and   fase.data_cancellazione is null
                   order by fase.fase_bil_prev_str_esiste_id
                   limit 1);

     -- siac_r_bil_elem_categoria
     strMessaggio:='Cancellazione logica vecchie strutture gestione esistenti [siac_r_bil_elem_categoria].';
     update  siac_r_bil_elem_categoria canc set
          data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
     where canc.ente_proprietario_id=enteProprietarioId
     and   canc.data_cancellazione is null and canc.validita_fine is null
     and   exists (select 1 from fase_bil_t_prev_approva_str_elem_gest_esiste fase
                   where fase.ente_proprietario_id=enteProprietarioId
                   and   fase.bil_id=bilancioId
                   and   fase.fase_bil_elab_id=faseBilElabId
                   and   fase.elem_gest_id=canc.elem_id
                   and   fase.elem_prev_id is not null
                   and   fase.data_cancellazione is null
                   order by fase.fase_bil_prev_str_esiste_id
                   limit 1);
     -- siac_r_bil_elem_attr
     strMessaggio:='Cancellazione logica vecchie strutture gestione esistenti [siac_r_bil_elem_attr].';
     update siac_r_bil_elem_attr canc set
          data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
     where canc.ente_proprietario_id=enteProprietarioId
     and   canc.data_cancellazione is null and canc.validita_fine is null
     and   exists (select 1 from fase_bil_t_prev_approva_str_elem_gest_esiste fase
                   where fase.ente_proprietario_id=enteProprietarioId
                   and   fase.bil_id=bilancioId
                   and   fase.fase_bil_elab_id=faseBilElabId
                   and   fase.elem_gest_id=canc.elem_id
                   and   fase.elem_prev_id is not null
                   and   fase.data_cancellazione is null
                   order by fase.fase_bil_prev_str_esiste_id
                   limit 1);

     -- siac_r_bil_elem_class
     strMessaggio:='Cancellazione logica vecchie strutture gestione esistenti [siac_r_bil_elem_class].';
     update siac_r_bil_elem_class canc set
              data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
     where canc.ente_proprietario_id=enteProprietarioId
     and   canc.data_cancellazione is null and canc.validita_fine is null
     and   exists (select 1 from fase_bil_t_prev_approva_str_elem_gest_esiste fase
                   where fase.ente_proprietario_id=enteProprietarioId
                   and   fase.bil_id=bilancioId
                   and   fase.fase_bil_elab_id=faseBilElabId
                   and   fase.elem_gest_id=canc.elem_id
                   and   fase.elem_prev_id is not null
                   and   fase.data_cancellazione is null
                   order by fase.fase_bil_prev_str_esiste_id
                   limit 1);*/
/* 31.07.2017 Sofia - gestione vincoli atti di legge commentata
     -- siac_r_vincolo_bil_elem
     strMessaggio:='Cancellazione logica vecchie strutture gestione esistenti [siac_r_vincolo_bil_elem].';
     update siac_r_vincolo_bil_elem canc set
              data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
     where canc.ente_proprietario_id=enteProprietarioId
     and   canc.data_cancellazione is null and canc.validita_fine is null
     and   exists (select 1 from  fase_bil_t_prev_approva_str_elem_gest_esiste fase
                   where fase.ente_proprietario_id=enteProprietarioId
                   and   fase.bil_id=bilancioId
                   and   fase.fase_bil_elab_id=faseBilElabId
                   and   fase.elem_gest_id=canc.elem_id
                   and   fase.elem_prev_id is not null
                   and   fase.data_cancellazione is null
                   order by fase.fase_bil_prev_str_esiste_id
                   limit 1);
  04.03.2019 Sofia jira siac-6630 - tolto commento  **/
     /**  04.03.2019 Sofia jira siac-6630 - inizio   tolto commento **/

     -- siac_r_bil_elem_atto_legge
     strMessaggio:='Cancellazione logica vecchie strutture gestione esistenti [siac_r_bil_elem_atto_legge].';
     update siac_r_bil_elem_atto_legge canc set
              data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
     where canc.ente_proprietario_id=enteProprietarioId
     and   canc.data_cancellazione is null and canc.validita_fine is null
     and   exists (select 1 from fase_bil_t_prev_approva_str_elem_gest_esiste fase
                   where fase.ente_proprietario_id=enteProprietarioId
                   and   fase.bil_id=bilancioId
                   and   fase.fase_bil_elab_id=faseBilElabId
                   and   fase.elem_gest_id=canc.elem_id
                   and   fase.elem_prev_id is not null
                   and   fase.data_cancellazione is null
                   order by fase.fase_bil_prev_str_esiste_id
                   limit 1);
/*  04.03.2019 Sofia jira siac-6630 - tolto commento
31.07.2017 Sofia - chiusura
*/
	 -- siac_r_bil_elem_rel_tempo
     strMessaggio:='Cancellazione logica vecchie strutture gestione esistenti [siac_r_bil_elem_rel_tempo].';
	 update 	siac_r_bil_elem_rel_tempo canc set
		    data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
	 where canc.ente_proprietario_id=enteProprietarioId
     and   canc.data_cancellazione is null and canc.validita_fine is null
     and   exists (select 1 from fase_bil_t_prev_approva_str_elem_gest_esiste fase
                   where fase.ente_proprietario_id=enteProprietarioId
                   and   fase.bil_id=bilancioId
                   and   fase.fase_bil_elab_id=faseBilElabId
                   and   fase.elem_gest_id=canc.elem_id
                   and   fase.elem_prev_id is not null
                   and   fase.data_cancellazione is null
                   order by fase.fase_bil_prev_str_esiste_id
                   limit 1);

	 codResult:=null;
     strMessaggio:='Fine cancellazione logica vecchie strutture gestione esistenti.';
     insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
      returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

     -- cancellazione logica precendenti relazioni

     -- aggiornamento siac_t_bil_elem
     strMessaggio:='Aggiornamento nuova struttura gestione esistente da previsione equivalente [siac_t_bil_elem].';
     update siac_t_bil_elem gest set
     (elem_desc, elem_desc2, ordine, livello, login_operazione)=
     (prev.elem_desc,prev.elem_desc2,prev.ordine,prev.livello,loginOperazione)
     from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_t_bil_elem prev
     where  gest.ente_proprietario_id=enteProprietarioId
     and    gest.elem_id=fase.elem_gest_id
     and    prev.elem_id=fase.elem_prev_id
     and    fase.ente_proprietario_id=enteProprietarioid
     and    fase.bil_id=bilancioId
     and    fase.fase_bil_elab_id=faseBilElabId
     and    fase.data_cancellazione is null
     and    fase.elem_prev_id is not null;

	 codResult:=null;
     insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
      returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

     codResult:=null;
     strMessaggio:='Inizio inserimento nuove strutture gestione esistenti da previsione equivalente.';
     insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
      returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

     -- inserimento nuove relazioni
     -- siac_r_bil_elem_stato
     /*strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_stato].';
     insert into siac_r_bil_elem_stato
     (elem_id,elem_stato_id,validita_inizio,ente_proprietario_id,login_operazione)
     (select fase.elem_gest_id, stato.elem_stato_id , dataInizioVal, stato.ente_proprietario_id, loginOperazione
      from siac_r_bil_elem_stato stato, fase_bil_t_prev_approva_str_elem_gest_esiste fase
      where stato.elem_id=fase.elem_prev_id
      and   fase.ente_proprietario_id=enteProprietarioid
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.data_cancellazione is null
      and   fase.elem_prev_id is not null
      and   stato.data_cancellazione is null
      and   stato.validita_fine is null);*/

      strMessaggio:='Aggiornamento strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_stato].';
      update siac_r_bil_elem_stato statoCor
      set elem_stato_id=stato.elem_stato_id,
          data_modifica=dataInizioVal,
          login_operazione=loginOperazione
      from siac_r_bil_elem_stato stato, fase_bil_t_prev_approva_str_elem_gest_esiste fase
      where stato.elem_id=fase.elem_prev_id
      and   statoCor.elem_id=fase.elem_gest_id
      and   fase.ente_proprietario_id=enteProprietarioid
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.data_cancellazione is null
      and   fase.elem_prev_id is not null
      and   stato.data_cancellazione is null
      and   stato.validita_fine is null
      and   statoCor.data_cancellazione is null
      and   statoCor.validita_fine is null;

     -- siac_r_bil_elem_attr ( escludere FLAG_PER_MEM )
     -- devo cancellare e reinserire
     strMessaggio:='Cancellazione strutture gestione esistenti per reinserimento da previsione equivalente [siac_r_bil_elem_attr].';
     delete from siac_r_bil_elem_attr attr
     using  fase_bil_t_prev_approva_str_elem_gest_esiste fase
     where attr.elem_id=fase.elem_gest_id
     and   fase.ente_proprietario_id=enteProprietarioid
     and   fase.bil_id=bilancioId
     and   fase.fase_bil_elab_id=faseBilElabId
     and   fase.data_cancellazione is null
     and   fase.elem_prev_id is not null
     and   attr.data_cancellazione is null
     and   attr.validita_fine is null;

     strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_attr].';
     insert into siac_r_bil_elem_attr
     (elem_id,attr_id,tabella_id,boolean,percentuale,
      testo,numerico,validita_inizio,
      ente_proprietario_id,login_operazione)
     (select fase.elem_gest_id, attr.attr_id , attr.tabella_id,attr.boolean,attr.percentuale,
            attr.testo,attr.numerico,
            dataInizioVal, attr.ente_proprietario_id, loginOperazione
      from siac_r_bil_elem_attr attr, fase_bil_t_prev_approva_str_elem_gest_esiste fase
      where attr.elem_id=fase.elem_prev_id
      and   attr.attr_id!=flagPerMemAttrId
      and   fase.ente_proprietario_id=enteProprietarioid
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.data_cancellazione is null
      and   fase.elem_prev_id is not null
      and   attr.data_cancellazione is null
      and   attr.validita_fine is null);

     -- siac_r_bil_elem_categoria
/*     strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_categoria].';
     insert into siac_r_bil_elem_categoria
     (elem_id,elem_cat_id,validita_inizio,ente_proprietario_id,login_operazione)
     (select fase.elem_gest_id, cat.elem_cat_id , dataInizioVal, cat.ente_proprietario_id, loginOperazione
      from siac_r_bil_elem_categoria cat, fase_bil_t_prev_approva_str_elem_gest_esiste fase
      where cat.elem_id=fase.elem_prev_id
      and   fase.ente_proprietario_id=enteProprietarioid
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.data_cancellazione is null
      and   fase.elem_prev_id is not null
      and   cat.data_cancellazione is null
      and   cat.validita_fine is null);*/

      strMessaggio:='Aggiornamento strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_categoria].';
      update siac_r_bil_elem_categoria catCor
      set elem_cat_id=cat.elem_cat_id,
          data_modifica=dataInizioVal,
          login_operazione=loginOperazione
      from siac_r_bil_elem_categoria cat, fase_bil_t_prev_approva_str_elem_gest_esiste fase
      where cat.elem_id=fase.elem_prev_id
      and   catCor.elem_id=fase.elem_gest_id
      and   fase.ente_proprietario_id=enteProprietarioid
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.data_cancellazione is null
      and   fase.elem_prev_id is not null
      and   cat.data_cancellazione is null
      and   cat.validita_fine is null
      and   catCor.data_cancellazione is null
      and   catCor.validita_fine is null;


     -- siac_r_bil_elem_class
     -- cancellare e reinserire
     strMessaggio:='Cancellazione strutture gestione esistenti [siac_r_bil_elem_class].';
     delete from siac_r_bil_elem_class class
     using fase_bil_t_prev_approva_str_elem_gest_esiste fase
     where class.elem_id=fase.elem_gest_id
     and   fase.ente_proprietario_id=enteProprietarioid
     and   fase.bil_id=bilancioId
     and   fase.fase_bil_elab_id=faseBilElabId
     and   fase.data_cancellazione is null
     and   fase.elem_prev_id is not null
     and   class.data_cancellazione is null
     and   class.validita_fine is null;

     strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].';
	 insert into siac_r_bil_elem_class
     (elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
     (select fase.elem_gest_id, class.classif_id , dataInizioVal, class.ente_proprietario_id, loginOperazione
      from siac_r_bil_elem_class class, fase_bil_t_prev_approva_str_elem_gest_esiste fase,siac_t_class c
      where class.elem_id=fase.elem_prev_id
      and   fase.ente_proprietario_id=enteProprietarioid
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      -- JIRA-SIAC-4167 14.11.2016 Anto
      and   c.classif_id=class.classif_id
      and   c.data_cancellazione is null
      and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
      and   fase.data_cancellazione is null
      and   fase.elem_prev_id is not null
      and   class.data_cancellazione is null
      and   class.validita_fine is null);

/* 31.07.2017 Sofia - gestione vincoli atti di legge commentata

      -- siac_r_vincolo_bil_elem
      strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_vincolo_bil_elem].';
 	  insert into siac_r_vincolo_bil_elem
      ( elem_id,vincolo_id, validita_inizio,ente_proprietario_id,login_operazione)
      (select fase.elem_gest_id, v.vincolo_id, dataInizioVal,v.ente_proprietario_id, loginOperazione
       from siac_r_vincolo_bil_elem v,fase_bil_t_prev_approva_str_elem_gest_esiste fase
       where v.elem_id=fase.elem_prev_id
	   and   fase.ente_proprietario_id=enteProprietarioid
       and   fase.bil_id=bilancioId
       and   fase.fase_bil_elab_id=faseBilElabId
	   and   fase.data_cancellazione is null
       and   fase.elem_prev_id is not null
       and   v.data_cancellazione is null
       and   v.validita_fine is null
       );
 04.03.2019 Sofia jira siac-6630 - tolto commento  */

       /**  04.03.2019 Sofia jira siac-6630 - inizio  - tolto commento **/
       -- siac_r_bil_elem_atto_legge
       strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_atto_legge].';
       insert into siac_r_bil_elem_atto_legge
       ( elem_id,attolegge_id, descrizione, gerarchia,finanziamento_inizio,finanziamento_fine,
         validita_inizio,ente_proprietario_id,login_operazione
       )
       ( select fase.elem_gest_id,v.attolegge_id,v.descrizione, v.gerarchia,v.finanziamento_inizio,v.finanziamento_fine,
               dataInizioVal,v.ente_proprietario_id, loginOperazione
         from   siac_r_bil_elem_atto_legge v,fase_bil_t_prev_approva_str_elem_gest_esiste fase
         where v.elem_id=fase.elem_prev_id
	     and   fase.ente_proprietario_id=enteProprietarioid
         and   fase.bil_id=bilancioId
         and   fase.fase_bil_elab_id=faseBilElabId
  	     and   fase.data_cancellazione is null
         and   fase.elem_prev_id is not null
         and   v.data_cancellazione is null
         and   v.validita_fine is null
       );

/*31.07.2017 Sofia - chiusura -  04.03.2019 Sofia jira siac-6630 - inizio  tolto commento
*/
       -- siac_r_bil_elem_rel_tempo
       strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_rel_tempo].';
-- siac-8383 Sofia 14.10.2021 
		-- elem_id_old deve essere ricalcolato in base al suo stesso equivalente di gestione in annobilancio-1
		-- attenzione anche al controllo dopo la insert o da commentare o da correggere	   
/*       insert into siac_r_bil_elem_rel_tempo
       (elem_id, elem_id_old, validita_inizio, ente_proprietario_id,login_operazione)
       ( select fase.elem_gest_id,v.elem_id_old,
               dataInizioVal,v.ente_proprietario_id, loginOperazione
         from   siac_r_bil_elem_rel_tempo v,fase_bil_t_prev_approva_str_elem_gest_esiste fase
         where v.elem_id=fase.elem_prev_id
	     and   fase.ente_proprietario_id=enteProprietarioid
         and   fase.bil_id=bilancioId
         and   fase.fase_bil_elab_id=faseBilElabId
  	     and   fase.data_cancellazione is null
         and   fase.elem_prev_id is not null
         and   v.data_cancellazione is null
         and   v.validita_fine is null
       );*/

       -- siac-8383 Sofia 14.10.2021
       insert into siac_r_bil_elem_rel_tempo
       (elem_id, elem_id_old, validita_inizio, ente_proprietario_id,login_operazione)
       ( select fase.elem_gest_id,enew.elem_id,
               dataInizioVal,v.ente_proprietario_id, loginOperazione
         from   siac_r_bil_elem_rel_tempo v,fase_bil_t_prev_approva_str_elem_gest_esiste fase,
                siac_t_bil_elem e,siac_t_bil_elem enew
         where v.elem_id=fase.elem_prev_id
	     and   fase.ente_proprietario_id=enteProprietarioid
         and   fase.bil_id=bilancioId
         and   fase.fase_bil_elab_id=faseBilElabId
         AND   e.elem_id=v.elem_id_old 
         AND   enew.bil_id=bilancioPrecId
         AND   enew.elem_tipo_id=bilElemGestTipoId
         AND   enew.elem_code=e.elem_code
         AND   enew.elem_code2=e.elem_code2
         AND   enew.elem_code3=e.elem_code3
  	     and   fase.data_cancellazione is null
         and   fase.elem_prev_id is not null
         and   v.data_cancellazione is null
         and   v.validita_fine is NULL
         AND   enew.data_cancellazione IS NULL 
       );
      
       codResult:=null;
       strMessaggio:='Fine inserimento nuove strutture gestione esistenti da previsione equivalente.';
       insert into fase_bil_t_elaborazione_log
       (fase_bil_elab_id,fase_bil_elab_log_operazione,
        validita_inizio, login_operazione, ente_proprietario_id
       )
       values
       (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
        returning fase_bil_elab_log_id into codResult;

       if codResult is null then
      	raise exception ' Errore in inserimento LOG.';
       end if;

       -- verifica dati inseriti
       codResult:=null;
       strMessaggio:='Inizio verifica inserimento nuove strutture gestione esistenti da previsione equivalente.';
       insert into fase_bil_t_elaborazione_log
       (fase_bil_elab_id,fase_bil_elab_log_operazione,
        validita_inizio, login_operazione, ente_proprietario_id
       )
       values
       (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
        returning fase_bil_elab_log_id into codResult;

       if codResult is null then
      	raise exception ' Errore in inserimento LOG.';
       end if;

       codResult:=null;
       strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_stato].Verifica esistenza relazione stati.';
       select 1 into codResult
       from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
       where fase.ente_proprietario_id=enteProprietarioId
--    and   fase.elem_gest_id=elem.elem_id
       and   fase.bil_id=bilancioId
       and   fase.fase_bil_elab_id=faseBilElabId
       and   fase.elem_prev_id is not null
       and   fase.data_cancellazione is null
       and   not exists (select 1 from siac_r_bil_elem_stato stato
                 		 where stato.elem_id=fase.elem_gest_id--elem.elem_id
                         and   stato.data_cancellazione is null
                         and   stato.validita_fine is null
                         order by stato.elem_id
                         limit 1)
       order by fase.fase_bil_prev_str_esiste_id
       limit 1;

       if codResult is not null then
    	raise exception ' Elementi di bilancio assenti di relazione.';
       end if;

	  codResult:=null;
      strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_attr].Verifica esistenza attributi.';
      select 1 into codResult
      from  fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
      where fase.ente_proprietario_id=enteProprietarioId
--    and   fase.elem_gest_id=elem.elem_id
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   not exists (select 1 from siac_r_bil_elem_attr attr
     		 		    where attr.elem_id=fase.elem_gest_id--elem.elem_id
					    and   attr.attr_id!=flagPerMemAttrId
                        and   attr.data_cancellazione is null
                        and   attr.validita_fine is null
                        order by attr.elem_id
                        limit 1)
	  order by fase.fase_bil_prev_str_esiste_id
      limit 1;

      if codResult is not null then
    	raise exception ' Elementi di bilancio assenti di relazione.';
      end if;

	  codResult:=null;
      strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni classificatori.';
      select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
      where fase.ente_proprietario_id=enteProprietarioId
--    and   fase.elem_gest_id=elem.elem_id
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   not exists ( select 1 from siac_r_bil_elem_class class,siac_t_class c
      				     where class.elem_id=fase.elem_gest_id--elem.elem_id
                         and   class.data_cancellazione is null
                         and   class.validita_fine is null

                               -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   c.classif_id=class.classif_id
                          and   c.data_cancellazione is null
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)

                         order by class.elem_id
                         limit 1)
	  order by fase.fase_bil_prev_str_esiste_id
      limit 1;


      if codResult is not null then
    	raise exception ' Elementi di bilancio assenti di relazione.';
      end if;

      codResult:=null;
      strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_categoria].Verifica esistenza relazioni categoria.';
      select distinct 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
      where fase.ente_proprietario_id=enteProprietarioId
--    and   fase.elem_gest_id=elem.elem_id
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   not exists ( select 1 from siac_r_bil_elem_categoria class
                         where class.elem_id=fase.elem_gest_id--elem.elem_id
                         and   class.data_cancellazione is null
                         and   class.validita_fine is null);


      if codResult is not null then
    	raise exception ' Elementi di bilancio assenti di relazione.';
      end if;

	  -- verifica se esistono elementi senza classificatori obbligatori (**)
      -- controlli sui classificatori obbligatori
      -- CL_CDC, CL_CDR
      codResult:=null;
      strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni struttura amministrativa.';
      select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
      where fase.ente_proprietario_id=enteProprietarioId
--    and   fase.elem_gest_id=elem.elem_id
      and   fase.elem_prev_id is not null
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.data_cancellazione is null
      and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
                       where class.elem_id=fase.elem_gest_id--elem.elem_id
                       and   c.classif_id=class.classif_id
                       and   c.classif_tipo_id in (cdcTipoId, cdrTipoId)
                       and   class.data_cancellazione is null
                       and   class.validita_fine is null
                       and   c.data_cancellazione is null
                       and   c.validita_fine is null
                       order by class.elem_id
                       limit 1)
	  order by fase.fase_bil_prev_str_esiste_id
      limit 1;
		/*
      if codResult is not null then
    	raise exception ' Elementi di bilancio assenti di relazione.';
      end if;
		*/

        if codResult is not null then
           strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
           insert into fase_bil_t_prev_apertura_segnala
           (elem_id,
	        elem_code,
			elem_code2,
			elem_code3,
		    bil_id,
		    fase_bil_elab_id,
		    segnala_codice,
			segnala_desc,
			validita_inizio,
			ente_proprietario_id,
		    login_operazione)
           (select fase.elem_gest_id,
                   fase.elem_code,
                   fase.elem_code2,
                   fase.elem_code3,
                   fase.bil_id,
                   faseBilElabId,
                   'SAC',
                   'Sac mancante',
                   dataInizioVal,
                   fase.ente_proprietario_id,
                   loginOperazione
             from fase_bil_t_prev_approva_str_elem_gest_esiste fase
             where fase.ente_proprietario_id=enteProprietarioId
             and   fase.elem_prev_id is not null
             and   fase.bil_id=bilancioId
             and   fase.fase_bil_elab_id=faseBilElabId
             and   fase.data_cancellazione is null
             and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
                                where class.elem_id=fase.elem_gest_id
                                and   c.classif_id=class.classif_id
                                and   c.classif_tipo_id in (cdcTipoId, cdrTipoId)
                                and   class.data_cancellazione is null
                                and   class.validita_fine is null
                                and   c.data_cancellazione is null
                                and   c.validita_fine is null
                                order by class.elem_id
                                limit 1)
            );
          end if;



      -- CL_PDC_FIN_QUINTO, CL_PDC_FIN_QUARTO
      codResult:=null;
	  strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_PDC_FIN_QUARTO||' '||CL_PDC_FIN_QUINTO||'.';

      --02.03.2016 Dani Il classificatore deve essere obbligatoriamente presente solo se capitolo gestione STD
	  select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase
      , siac_r_bil_elem_categoria rcat
	  , siac_d_bil_elem_categoria cat
      where fase.ente_proprietario_id=enteProprietarioId
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   rcat.elem_id=fase.elem_gest_id
      and   rcat.data_cancellazione is null
      and   rcat.validita_fine is null
      and   rcat.elem_cat_id=cat.elem_cat_id
      and   cat.elem_cat_code = CATEGORIA_STD
/*      and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
                     where class.elem_id=fase.elem_prev_id
                     and   c.classif_id=class.classif_id
                     and   c.classif_tipo_id in (pdcFinIVId, pdcFinVId)
                     and   class.data_cancellazione is null
                     and   class.validita_fine is null
                     and   c.data_cancellazione is null
                     and   c.validita_fine is null
                     order by class.elem_id
                     limit 1)*/
      and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
                       where class.elem_id=fase.elem_gest_id
                       and   c.classif_id=class.classif_id
                       and   c.classif_tipo_id in (pdcFinIVId, pdcFinVId)
                       and   class.data_cancellazione is null
                       and   class.validita_fine is null
                       and   c.data_cancellazione is null
                       and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)

                       order by class.elem_id
                       limit 1)
	  order by fase.fase_bil_prev_str_esiste_id
      limit 1;

      /*
      if codResult is not null then
    	raise exception ' Elementi di bilancio assenti di relazione.';
      end if;
		*/
     --  JIRA-SIAC-4167  if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
      if codResult is not null then
          	strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
            insert into fase_bil_t_prev_apertura_segnala
             (elem_id,
	         elem_code,
		 	 elem_code2,
			 elem_code3,
		     bil_id,
		     fase_bil_elab_id,
		     segnala_codice,
			 segnala_desc,
			 validita_inizio,
			 ente_proprietario_id,
		     login_operazione)
            (select fase.elem_gest_id,
                    fase.elem_code,
                    fase.elem_code2,
                    fase.elem_code3,
                    fase.bil_id,
                    faseBilElabId,
                    'PDCFIN',
                    'PdcFin mancante',
                    dataInizioVal,
                    fase.ente_proprietario_id,
                    loginOperazione
              from fase_bil_t_prev_approva_str_elem_gest_esiste fase,
                   siac_r_bil_elem_categoria rcat, siac_d_bil_elem_categoria cat
              where fase.ente_proprietario_id=enteProprietarioId
              and   fase.bil_id=bilancioId
              and   fase.fase_bil_elab_id=faseBilElabId
              and   fase.elem_prev_id is not null
              and   fase.data_cancellazione is null
              and   rcat.elem_id=fase.elem_gest_id
              and   rcat.data_cancellazione is null
              and   rcat.validita_fine is null
              and   rcat.elem_cat_id=cat.elem_cat_id
              and   cat.elem_cat_code = CATEGORIA_STD
              and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
                                 where class.elem_id=fase.elem_gest_id
                                 and   c.classif_id=class.classif_id
                                 and   c.classif_tipo_id in (pdcFinIVId, pdcFinVId)
                                 and   class.data_cancellazione is null
                                 and   class.validita_fine is null
                                 and   c.data_cancellazione is null
                                 and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
                                 and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                                 and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                       order by class.elem_id
                       limit 1)
             );
      end if;

/* 31.07.2017 Sofia gestione vincoli  atti legge commentata
	  codResult:=null;
      strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_vincolo_bil_elem].Verifica esistenza relazioni vincoli.';
      select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase, -- siac_t_bil_elem elem,
           siac_r_vincolo_bil_elem v
      where fase.ente_proprietario_id=enteProprietarioId
--    and   fase.elem_gest_id=elem.elem_id
      and   v.elem_id=fase.elem_prev_id
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   v.data_cancellazione is null
      and   v.validita_fine is null
      and   not exists ( select 1 from siac_r_vincolo_bil_elem class
                         where class.elem_id=fase.elem_gest_id
                         and   class.data_cancellazione is null
                         and   class.validita_fine is null
                         order by class.elem_id
                         limit 1
                       )
	  order by fase.fase_bil_prev_str_esiste_id
      limit 1;


      if codResult is not null then
    	raise exception ' Elementi di bilancio assenti di relazione.';
      end if;
 04.03.2019 Sofia jira siac-6630 - tolto commento */
      /**  04.03.2019 Sofia jira siac-6630 - inizio  - tolto commento **/
	  codResult:=null;
      strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_atto_legge].Verifica esistenza relazioni atti di legge.';
      select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase, --siac_t_bil_elem elem,
           siac_r_bil_elem_atto_legge v
      where fase.ente_proprietario_id=enteProprietarioId
--    and   fase.elem_gest_id=elem.elem_id
      and   v.elem_id=fase.elem_prev_id
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   v.data_cancellazione is null
      and   v.validita_fine is null
      and   not exists ( select 1 from siac_r_bil_elem_atto_legge class
                         where class.elem_id=fase.elem_gest_id--elem.elem_id
                         and   class.data_cancellazione is null
                         and   class.validita_fine is null
                         order by class.elem_id
                         limit 1)
	  order by fase.fase_bil_prev_str_esiste_id
      limit 1;


      if codResult is not null then
    	raise exception ' Elementi di bilancio assenti di relazione.';
      end if;
/*  04.03.2019 Sofia jira siac-6630 - tolto commento
31.07.2017 Sofia - chiusura
*/

      /* 25.10.2021 Sofia SIAC-8380 
	  codResult:=null;
      strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_rel_tempo].Verifica esistenza relazioni.';
      select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase, --siac_t_bil_elem elem,
           siac_r_bil_elem_rel_tempo v
      where fase.ente_proprietario_id=enteProprietarioId
--    and   fase.elem_gest_id=elem.elem_id
      and   v.elem_id=fase.elem_prev_id
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   v.data_cancellazione is null
      and   v.validita_fine is null
      and   not exists ( select 1 from siac_r_bil_elem_rel_tempo class
                         where class.elem_id=fase.elem_gest_id--elem.elem_id
                         and   class.data_cancellazione is null
                         and   class.validita_fine is null
                         order by class.elem_id
                         limit 1)
	  order by fase.fase_bil_prev_str_esiste_id
      limit 1;


      if codResult is not null then
    	raise exception ' Elementi di bilancio assenti di relazione.';
      end if;**/


	  if euElemTipo=TIPO_ELEM_EU then

		-- 02.03.2016 Dani Classificatore necessario solo per capitolo di categoria STD

		-- CL_PROGRAMMA
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_PROGRAMMA||'.';
        select 1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_r_bil_elem_categoria rcat, siac_d_bil_elem_categoria cat
    	where fase.ente_proprietario_id=enteProprietarioId
---	    and   fase.elem_gest_id=elem.elem_id
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
    	and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        and   rcat.elem_id=fase.elem_gest_id
        and   rcat.data_cancellazione is null
        and   rcat.validita_fine is null
        and   rcat.elem_cat_id=cat.elem_cat_id
        and   cat.elem_cat_code = CATEGORIA_STD
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id--elem.elem_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=programmaTipoId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           --order by class.elem_id
                           limit 1)
		--order by fase.fase_bil_prev_str_esiste_id
	    limit 1;
		/*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
		*/

        if codResult is not null then

         strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
         insert into fase_bil_t_prev_apertura_segnala
		 (elem_id,
		  elem_code,
		  elem_code2,
		  elem_code3,
		  bil_id,
		  fase_bil_elab_id,
		  segnala_codice,
		  segnala_desc,
		  validita_inizio,
		  ente_proprietario_id,
	  	  login_operazione)
	      (select fase.elem_gest_id,
                  fase.elem_code,
                  fase.elem_code2,
                  fase.elem_code3,
                  fase.bil_id,
                  faseBilElabId,
                  CL_PROGRAMMA,
                  CL_PROGRAMMA||' mancante',
 	              dataInizioVal,
             	  fase.ente_proprietario_id,
	              loginOperazione
           from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_r_bil_elem_categoria rcat, siac_d_bil_elem_categoria cat
    	   where fase.ente_proprietario_id=enteProprietarioId
           and   fase.bil_id=bilancioId
           and   fase.fase_bil_elab_id=faseBilElabId
    	   and   fase.elem_prev_id is not null
	       and   fase.data_cancellazione is null
           and   rcat.elem_id=fase.elem_gest_id
           and   rcat.data_cancellazione is null
           and   rcat.validita_fine is null
           and   rcat.elem_cat_id=cat.elem_cat_id
           and   cat.elem_cat_code = CATEGORIA_STD
    	   and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
          	                  where class.elem_id=fase.elem_gest_id
            	              and   c.classif_id=class.classif_id
                	          and   c.classif_tipo_id=programmaTipoId
                    	      and   class.data_cancellazione is null
	                          and   class.validita_fine is null
    	                      and   c.data_cancellazione is null
        	                  and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                              and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                              and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           --order by class.elem_id
                           limit 1)
	        );
        end if;


		-- 02.03.2016 Dani Classificatore necessario solo per capitolo di categoria STD
        -- CL_MACROAGGREGATO
        codResult:=null;
	    strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_MACROAGGREGATO||'.';
        select 1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
        , siac_r_bil_elem_categoria rcat
        , siac_d_bil_elem_categoria cat
    	where fase.ente_proprietario_id=enteProprietarioId
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
    	and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        and   rcat.elem_id=fase.elem_gest_id
        and   rcat.data_cancellazione is null
        and   rcat.validita_fine is null
        and   rcat.elem_cat_id=cat.elem_cat_id
        and   cat.elem_cat_code = CATEGORIA_STD
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=macroAggrTipoId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)

                           order by class.elem_id
                           limit 1)
		order by fase.fase_bil_prev_str_esiste_id
	    limit 1;
        /*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
		*/
       if codResult is not null then

      	strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
        insert into fase_bil_t_prev_apertura_segnala
		(elem_id,
	     elem_code,
	     elem_code2,
	     elem_code3,
	     bil_id,
	     fase_bil_elab_id,
	     segnala_codice,
	     segnala_desc,
	     validita_inizio,
	     ente_proprietario_id,
	     login_operazione)
	    (select fase.elem_gest_id,
                fase.elem_code,
                fase.elem_code2,
                fase.elem_code3,
                fase.bil_id,
                faseBilElabId,
                CL_MACROAGGREGATO,
                CL_MACROAGGREGATO||' mancante',
                dataInizioVal,
  	            fase.ente_proprietario_id,
	            loginOperazione
	      from fase_bil_t_prev_approva_str_elem_gest_esiste fase,
               siac_r_bil_elem_categoria rcat, siac_d_bil_elem_categoria cat
    	  where fase.ente_proprietario_id=enteProprietarioId
          and   fase.bil_id=bilancioId
          and   fase.fase_bil_elab_id=faseBilElabId
    	  and   fase.elem_prev_id is not null
	      and   fase.data_cancellazione is null
          and   rcat.elem_id=fase.elem_gest_id
          and   rcat.data_cancellazione is null
          and   rcat.validita_fine is null
          and   rcat.elem_cat_id=cat.elem_cat_id
          and   cat.elem_cat_code = CATEGORIA_STD
    	  and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	                 where class.elem_id=fase.elem_gest_id
            	             and   c.classif_id=class.classif_id
                             and   c.classif_tipo_id=macroAggrTipoId
                    	     and   class.data_cancellazione is null
	                         and   class.validita_fine is null
    	                     and   c.data_cancellazione is null
        	                 and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                             and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                             and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                             order by class.elem_id
                             limit 1)
         );
      end if;


  	    -- CL_COFOG
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_COFOG||'.';
        select 1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    	where fase.ente_proprietario_id=enteProprietarioId
--	    and   fase.elem_gest_id=elem.elem_id
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
    	and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        -- 02.03.2016 Dani se classificatore definito in previsione deve essere stato ribaltato su gestione
        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	           where class.elem_id=fase.elem_prev_id
                       and   c.classif_id=class.classif_id
               	       and   c.classif_tipo_id=cofogTipoId
                  	   and   class.data_cancellazione is null
	                   and   class.validita_fine is null
    	               and   c.data_cancellazione is null
        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                       order by class.elem_id
                       limit 1)
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id--elem.elem_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=cofogTipoId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           order by class.elem_id
                           limit 1)
		order by fase.fase_bil_prev_str_esiste_id
	    limit 1;
/*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
*/

		if codResult is not null then
           strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
       	   insert into fase_bil_t_prev_apertura_segnala
           (elem_id,
            elem_code,
	 	    elem_code2,
	        elem_code3,
		    bil_id,
		    fase_bil_elab_id,
		    segnala_codice,
		    segnala_desc,
		    validita_inizio,
		    ente_proprietario_id,
	  	    login_operazione)
	       (select fase.elem_gest_id,
                   fase.elem_code,
                   fase.elem_code2,
                   fase.elem_code3,
	               fase.bil_id,
     	           faseBilElabId,
	               CL_COFOG,
     	           CL_COFOG||' mancante',
                   dataInizioVal,
                   fase.ente_proprietario_id,
	               loginOperazione
	        from fase_bil_t_prev_approva_str_elem_gest_esiste fase
    	    where fase.ente_proprietario_id=enteProprietarioId
            and   fase.bil_id=bilancioId
            and   fase.fase_bil_elab_id=faseBilElabId
    	    and   fase.elem_prev_id is not null
	        and   fase.data_cancellazione is null
            and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
           	               where class.elem_id=fase.elem_prev_id
                           and   c.classif_id=class.classif_id
               	           and    c.classif_tipo_id=cofogTipoId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
                           and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                           and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                       order by class.elem_id
                       limit 1)
      	   and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
         	                  where class.elem_id=fase.elem_gest_id
            	              and   c.classif_id=class.classif_id
                	          and   c.classif_tipo_id=cofogTipoId
                    	      and   class.data_cancellazione is null
	                          and   class.validita_fine is null
    	                      and   c.data_cancellazione is null
        	                  and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                              and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                              and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           order by class.elem_id
                           limit 1)
           );
        end if;

 	    -- CL_RICORRENTE_SPESA
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_RICORRENTE_SPESA||'.';
        select  1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    	where fase.ente_proprietario_id=enteProprietarioId
--	    and   fase.elem_gest_id=elem.elem_id
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
    	and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        -- 02.03.2016 Dani se classificatore definito in previsione deve essere stato ribaltato su gestione
        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	           where class.elem_id=fase.elem_prev_id
                       and   c.classif_id=class.classif_id
               	       and   c.classif_tipo_id=ricorrenteSpesaId
                  	   and   class.data_cancellazione is null
	                   and   class.validita_fine is null
    	               and   c.data_cancellazione is null
        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                       order by class.elem_id
                       limit 1)
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id--elem.elem_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=ricorrenteSpesaId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           order by class.elem_id
                           limit 1)
		order by fase.fase_bil_prev_str_esiste_id
	    limit 1;
/*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
*/

          if codResult is not null then
              strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
       	      insert into fase_bil_t_prev_apertura_segnala
		      (elem_id,
			   elem_code,
			   elem_code2,
			   elem_code3,
			   bil_id,
			   fase_bil_elab_id,
			   segnala_codice,
		 	   segnala_desc,
			   validita_inizio,
			   ente_proprietario_id,
	  		   login_operazione)
	          (select fase.elem_gest_id,
                      fase.elem_code,
                      fase.elem_code2,
                      fase.elem_code3,
                      fase.bil_id,
 	                  faseBilElabId,
	                  CL_RICORRENTE_SPESA,
     	              CL_RICORRENTE_SPESA||' mancante',
         	          dataInizioVal,
             	      fase.ente_proprietario_id,
	                  loginOperazione
               from fase_bil_t_prev_approva_str_elem_gest_esiste fase
       	       where fase.ente_proprietario_id=enteProprietarioId
               and   fase.bil_id=bilancioId
               and   fase.fase_bil_elab_id=faseBilElabId
       	       and   fase.elem_prev_id is not null
	           and   fase.data_cancellazione is null
               and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	                  where class.elem_id=fase.elem_prev_id
                              and   c.classif_id=class.classif_id
                   	          and   c.classif_tipo_id=ricorrenteSpesaId
                  	          and   class.data_cancellazione is null
	                          and   class.validita_fine is null
    	                      and   c.data_cancellazione is null
        	                  and   c.validita_fine is null
                              -- JIRA-SIAC-4167 14.11.2016 Anto
                              and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                              and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                              order by class.elem_id
                              limit 1)
    	      and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	                     where class.elem_id=fase.elem_gest_id--elem.elem_id
            	                 and   c.classif_id=class.classif_id
                	             and   c.classif_tipo_id=ricorrenteSpesaId
                    	         and   class.data_cancellazione is null
	                             and   class.validita_fine is null
    	                         and   c.data_cancellazione is null
        	                     and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                                 and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                                 and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                                 order by class.elem_id
                                 limit 1)
              );
        end if;


        -- CL_SIOPE_SPESA_TERZO
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_SIOPE_SPESA_TERZO||'.';
        select  1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    	where fase.ente_proprietario_id=enteProprietarioId
--	    and   fase.elem_prev_id=elem.elem_id
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
    	and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        and exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	         where class.elem_id=fase.elem_prev_id--elem.elem_id
                     and   c.classif_id=class.classif_id
                     and   c.classif_tipo_id=siopeSpesaTipoId
                     and   class.data_cancellazione is null
	                 and   class.validita_fine is null
    	             and   c.data_cancellazione is null
        	         and   c.validita_fine is null
                          -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                     order by class.elem_id
                     limit 1)
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=siopeSpesaTipoId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           order by class.elem_id
                           limit 1)
		order by fase.fase_bil_prev_str_esiste_id
	    limit 1;
        /*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
		*/
        if codResult is not null then
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select fase.elem_gest_idd,
                           fase.elem_code,
                           fase.elem_code2,
                           fase.elem_code3,
	                       fase.bil_id,
     	                   faseBilElabId,
	                       CL_SIOPE_SPESA_TERZO,
     	                   CL_SIOPE_SPESA_TERZO||' mancante',
         	               dataInizioVal,
             	           fase.ente_proprietario_id,
	                       loginOperazione
	                from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    				where fase.ente_proprietario_id=enteProprietarioId
			        and   fase.bil_id=bilancioId
			        and   fase.fase_bil_elab_id=faseBilElabId
				   	and   fase.elem_prev_id is not null
				    and   fase.data_cancellazione is null
			        and exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        				         where class.elem_id=fase.elem_prev_id--elem.elem_id
			                     and   c.classif_id=class.classif_id
				                 and   c.classif_tipo_id=siopeSpesaTipoId
			                     and   class.data_cancellazione is null
				                 and   class.validita_fine is null
			    	             and   c.data_cancellazione is null
			        	         and   c.validita_fine is null
            		              -- JIRA-SIAC-4167 14.11.2016 Anto
		                         and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
        		                 and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                			     order by class.elem_id
			                     limit 1)
			    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        				               where class.elem_id=fase.elem_gest_id
            	        			   and   c.classif_id=class.classif_id
			                	       and   c.classif_tipo_id=siopeSpesaTipoId
			                    	   and   class.data_cancellazione is null
				                       and   class.validita_fine is null
			    	                   and   c.data_cancellazione is null
			        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
            				           and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
				                       and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
			                           order by class.elem_id
            				          limit 1)
                   );

              end if;

 	    -- CL_TRANSAZIONE_UE_SPESA
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_TRANSAZIONE_UE_SPESA||'.';
        select  1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    	where fase.ente_proprietario_id=enteProprietarioId
--	    and   fase.elem_gest_id=elem.elem_id
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
    	and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        -- 02.03.2016 Dani se classificatore definito in previsione deve essere stato ribaltato su gestione
        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	           where class.elem_id=fase.elem_prev_id
                       and   c.classif_id=class.classif_id
               	       and   c.classif_tipo_id=transazioneUeSpesaId
                  	   and   class.data_cancellazione is null
	                   and   class.validita_fine is null
    	               and   c.data_cancellazione is null
        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                       order by class.elem_id
                       limit 1)
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id--elem.elem_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=transazioneUeSpesaId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           order by class.elem_id
                           limit 1)
		order by fase.fase_bil_prev_str_esiste_id
	    limit 1;
        /*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
        */
        if codResult is not null then
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select fase.elem_gest_id,
                           fase.elem_code,
                           fase.elem_code2,
                           fase.elem_code3,
	                       fase.bil_id,
     	                   faseBilElabId,
	                       CL_TRANSAZIONE_UE_SPESA,
     	                   CL_TRANSAZIONE_UE_SPESA||' mancante',
         	               dataInizioVal,
             	           fase.ente_proprietario_id,
	                       loginOperazione
	                from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    				where fase.ente_proprietario_id=enteProprietarioId
			        and   fase.bil_id=bilancioId
			        and   fase.fase_bil_elab_id=faseBilElabId
			    	and   fase.elem_prev_id is not null
				    and   fase.data_cancellazione is null
			        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        				           where class.elem_id=fase.elem_prev_id
			                       and   c.classif_id=class.classif_id
            			   	       and   c.classif_tipo_id=transazioneUeSpesaId
			                  	   and   class.data_cancellazione is null
	        			           and   class.validita_fine is null
			    	               and   c.data_cancellazione is null
			        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
            		               and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
		                           and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
			                       order by class.elem_id
			                       limit 1)
			    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        				               where class.elem_id=fase.elem_gest_id--elem.elem_id
            	        			   and   c.classif_id=class.classif_id
			                	       and   c.classif_tipo_id=transazioneUeSpesaId
            			        	   and   class.data_cancellazione is null
	                    			   and   class.validita_fine is null
			    	                   and   c.data_cancellazione is null
        				               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                        			  and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
			                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
            			              order by class.elem_id
                        			   limit 1)
                   );
              end if;





     else
        -- CL_CATEGORIA
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_CATEGORIA||'.';

        --02.03.2016 Dani Il classificatore deve essere obbligatoriamente presente solo se capitolo STD
        select distinct 1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_r_bil_elem_categoria rcat, siac_d_bil_elem_categoria cat
    	where fase.ente_proprietario_id=enteProprietarioId
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
    	and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        and   rcat.elem_id=fase.elem_gest_id
        and   rcat.data_cancellazione is null
        and   rcat.validita_fine is null
        and   rcat.elem_cat_id=cat.elem_cat_id
        and   cat.elem_cat_code = CATEGORIA_STD
/*        and   exists (    select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_prev_id--elem.elem_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=categoriaTipoId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
--                           order by class.elem_id
                           limit 1)*/
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id--elem.elem_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=categoriaTipoId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
--                           order by class.elem_id
                           limit 1)
--		order by fase.fase_bil_prev_str_esiste_id
--	    limit 1
        ;

        /*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
		*/
       -- JIRA-SIAC-4167 14.11.2016 Sofia
       -- if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
       if codResult is not null then
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select fase.elem_gest_id,
                           fase.elem_code,
                           fase.elem_code2,
                           fase.elem_code3,
	                       fase.bil_id,
     	                   faseBilElabId,
	                       CL_CATEGORIA,
     	                   CL_CATEGORIA||' mancante',
         	               dataInizioVal,
             	           fase.ente_proprietario_id,
	                       loginOperazione
	                from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_r_bil_elem_categoria rcat, siac_d_bil_elem_categoria cat
    				where fase.ente_proprietario_id=enteProprietarioId
			        and   fase.bil_id=bilancioId
			        and   fase.fase_bil_elab_id=faseBilElabId
			    	and   fase.elem_prev_id is not null
				    and   fase.data_cancellazione is null
			        and   rcat.elem_id=fase.elem_gest_id
			        and   rcat.data_cancellazione is null
			        and   rcat.validita_fine is null
			        and   rcat.elem_cat_id=cat.elem_cat_id
			        and   cat.elem_cat_code = CATEGORIA_STD
			    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        				               where class.elem_id=fase.elem_gest_id
			            	           and   c.classif_id=class.classif_id
				               	       and   c.classif_tipo_id=categoriaTipoId
			                    	   and   class.data_cancellazione is null
				                       and   class.validita_fine is null
			    	                   and   c.data_cancellazione is null
				       	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
			                           and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
            			               and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
   									 )
                   );

        end if;

     	-- CL_RICORRENTE_ENTRATA
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_RICORRENTE_ENTRATA||'.';
        select  1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    	where fase.ente_proprietario_id=enteProprietarioId
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
--	    and   fase.elem_gest_id=elem.elem_id --Dani 19.02.2016
    	and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        -- 02.03.2016 Dani se classificatore definito in previsione deve essere stato ribaltato su gestione
        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	           where class.elem_id=fase.elem_prev_id
                       and   c.classif_id=class.classif_id
               	       and   c.classif_tipo_id=ricorrenteEntrataId
                  	   and   class.data_cancellazione is null
	                   and   class.validita_fine is null
    	               and   c.data_cancellazione is null
        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                       order by class.elem_id
                       limit 1)
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id--elem.elem_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=ricorrenteEntrataId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           order by class.elem_id
                           limit 1)
		order by fase.fase_bil_prev_str_esiste_id
	    limit 1;
        /*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
		*/
        if codResult is not null then
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select fase.elem_gest_id,
                           fase.elem_code,
                           fase.elem_code2,
                           fase.elem_code3,
	                       fase.bil_id,
     	                   faseBilElabId,
	                       CL_RICORRENTE_ENTRATA,
     	                   CL_RICORRENTE_ENTRATA||' mancante',
         	               dataInizioVal,
             	           fase.ente_proprietario_id,
	                       loginOperazione
	                from fase_bil_t_prev_approva_str_elem_gest_esiste fase
			    	where fase.ente_proprietario_id=enteProprietarioId
				    and   fase.bil_id=bilancioId
			        and   fase.fase_bil_elab_id=faseBilElabId
			    	and   fase.elem_prev_id is not null
				    and   fase.data_cancellazione is null
			        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        				           where class.elem_id=fase.elem_prev_id
			                       and   c.classif_id=class.classif_id
			               	       and   c.classif_tipo_id=ricorrenteEntrataId
			                  	   and   class.data_cancellazione is null
				                   and   class.validita_fine is null
			    	               and   c.data_cancellazione is null
			        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
            		              and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
		                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
        			               order by class.elem_id
                    			   limit 1)
				  	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	    			           where class.elem_id=fase.elem_gest_id
            	    				   and   c.classif_id=class.classif_id
			                	       and   c.classif_tipo_id=ricorrenteEntrataId
            			        	   and   class.data_cancellazione is null
	                    			   and   class.validita_fine is null
			    	                   and   c.data_cancellazione is null
        				               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                        			   and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
			                           and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              				           order by class.elem_id
                           			limit 1)
                   );

          end if;



	    -- CL_SIOPE_ENTRATA_TERZO
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_SIOPE_ENTRATA_TERZO||'.';
        select  1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    	where fase.ente_proprietario_id=enteProprietarioId
--	    and   fase.elem_prev_id=elem.elem_id
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
    	and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	           where class.elem_id=fase.elem_prev_id
                       and   c.classif_id=class.classif_id
               	       and   c.classif_tipo_id=siopeEntrataTipoId
                  	   and   class.data_cancellazione is null
	                   and   class.validita_fine is null
    	               and   c.data_cancellazione is null
        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                       order by class.elem_id
                       limit 1)
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=siopeEntrataTipoId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           order by class.elem_id
	                       limit 1)
		order by fase.fase_bil_prev_str_esiste_id
	    limit 1;
        /*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
		*/
        if codResult is not null then
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select fase.elem_gest_id,
                           fase.elem_code,
                           fase.elem_code2,
                           fase.elem_code3,
	                       fase.bil_id,
     	                   faseBilElabId,
	                       CL_SIOPE_ENTRATA_TERZO,
     	                   CL_SIOPE_ENTRATA_TERZO||' mancante',
         	               dataInizioVal,
             	           fase.ente_proprietario_id,
	                       loginOperazione
	                from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    				where fase.ente_proprietario_id=enteProprietarioId
			        and   fase.bil_id=bilancioId
			        and   fase.fase_bil_elab_id=faseBilElabId
			    	and   fase.elem_prev_id is not null
				    and   fase.data_cancellazione is null
			        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        				           where class.elem_id=fase.elem_prev_id
			                       and   c.classif_id=class.classif_id
			               	       and   c.classif_tipo_id=siopeEntrataTipoId
			                  	   and   class.data_cancellazione is null
				                   and   class.validita_fine is null
			    	               and   c.data_cancellazione is null
			        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
            		              and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                    		      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
			                       order by class.elem_id
            			           limit 1)
			    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
			        	               where class.elem_id=fase.elem_gest_id
            				           and   c.classif_id=class.classif_id
			                	       and   c.classif_tipo_id=siopeEntrataTipoId
            			        	   and   class.data_cancellazione is null
				                       and   class.validita_fine is null
			    	                   and   c.data_cancellazione is null
        				               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
				                       and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
 	              				       and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
			                           order by class.elem_id
	        			               limit 1)
                   );
              end if;

	    -- CL_TRANSAZIONE_UE_ENTRATA
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_TRANSAZIONE_UE_ENTRATA||'.';
        select 1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    	where fase.ente_proprietario_id=enteProprietarioId
--	    and   fase.elem_gest_id=elem.elem_id
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
        and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        -- 02.03.2016 Dani se classificatore definito in previsione deve essere stato ribaltato su gestione
        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	           where class.elem_id=fase.elem_prev_id
                       and   c.classif_id=class.classif_id
               	       and   c.classif_tipo_id=transazioneUeEntrataId
                  	   and   class.data_cancellazione is null
	                   and   class.validita_fine is null
    	               and   c.data_cancellazione is null
        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                       order by class.elem_id
                       limit 1)
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id--elem.elem_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=transazioneUeEntrataId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           order by class.elem_id
	                       limit 1)
		order by fase.fase_bil_prev_str_esiste_id
	    limit 1;

        if codResult is not null then
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select fase.elem_gest_id,
                           fase.elem_code,
                           fase.elem_code2,
                           fase.elem_code3,
	                       fase.bil_id,
     	                   faseBilElabId,
	                       CL_TRANSAZIONE_UE_ENTRATA,
     	                   CL_TRANSAZIONE_UE_ENTRATA||' mancante',
         	               dataInizioVal,
             	           fase.ente_proprietario_id,
	                       loginOperazione
	                from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    				where fase.ente_proprietario_id=enteProprietarioId
			        and   fase.bil_id=bilancioId
			        and   fase.fase_bil_elab_id=faseBilElabId
			        and   fase.elem_prev_id is not null
				    and   fase.data_cancellazione is null
			        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        				           where class.elem_id=fase.elem_prev_id
			                       and   c.classif_id=class.classif_id
			               	       and   c.classif_tipo_id=transazioneUeEntrataId
			                  	   and   class.data_cancellazione is null
				                   and   class.validita_fine is null
			    	               and   c.data_cancellazione is null
			        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
			                       and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
			                       and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
			                       order by class.elem_id
			                       limit 1)
			    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        				               where class.elem_id=fase.elem_gest_id
			            	           and   c.classif_id=class.classif_id
			                	       and   c.classif_tipo_id=transazioneUeEntrataId
			                    	   and   class.data_cancellazione is null
				                       and   class.validita_fine is null
			    	                   and   c.data_cancellazione is null
			        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
            				           and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
				                       and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                			           order by class.elem_id
				                       limit 1)
                   );
         end if;

        /*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
        */
     end if;

     codResult:=null;
     strMessaggio:='Fine verifica inserimento nuove strutture gestione esistenti da previsione equivalente.';
     insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
      returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

   end if;

 end if;

 strMessaggio:='Aggiornamento fase elaborazione [fase_bil_t_elaborazione].';
 update fase_bil_t_elaborazione set
      fase_bil_elab_esito='IN2',
      fase_bil_elab_esito_msg='ELABORAZIONE FASE BILANCIO '||APPROVA_PREV_SU_GEST||' IN CORSO : AGGIORNAMENTO STRUTTURE COMPLETATO.'
 where fase_bil_elab_id=faseBilElabId;

 codResult:=null;
 insert into fase_bil_t_elaborazione_log
 (fase_bil_elab_id,fase_bil_elab_log_operazione,
  validita_inizio, login_operazione, ente_proprietario_id
 )
 values
 (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
  returning fase_bil_elab_log_id into codResult;

  if codResult is null then
  	raise exception ' Errore in inserimento LOG.';
  end if;


 faseBilElabIdRet:= faseBilElabId;
 messaggioRisultato:=strMessaggioFinale||'OK .';
return;

exception
    when RAISE_EXCEPTION THEN
    	raise notice '% % ERRORE : %',strMessaggioFinale,strMessaggio,
	        	substring(upper(SQLERRM) from 1 for 500);
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'ERRORE :'||' '||substring(upper(SQLERRM) from 1 for 500) ;
        codiceRisultato:=-1;
        return;

	when no_data_found THEN
		raise notice ' % % Nessun elemento trovato.' ,strMessaggioFinale,strMessaggio;
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'Nessun elemento trovato.' ;
        codiceRisultato:=-1;
		return;
	when others  THEN
		raise notice '% % Errore DB % %',strMessaggioFinale,strMessaggio,SQLSTATE,
	        	substring(upper(SQLERRM) from 1 for 50);
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'Errore DB '||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 50) ;
        codiceRisultato:=-1;
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

alter function 
  siac.fnc_fasi_bil_prev_apertura_struttura 
  ( INTEGER,
    VARCHAR,
	VARCHAR,
    VARCHAR,
    BOOLEAN,
    INTEGER,
    VARCHAR,
    TIMESTAMP,
    OUT INTEGER,
    OUT INTEGER,
    OUT VARCHAR) OWNER TO siac;

alter function 
 siac.fnc_fasi_bil_provv_apertura_struttura 
 ( INTEGER,
   VARCHAR,
   VARCHAR,
   BOOLEAN,
   INTEGER,
   VARCHAR,
   TIMESTAMP,
   OUT  INTEGER,
   OUT  INTEGER,
   OUT VARCHAR )   OWNER TO siac;

alter function 
siac.fnc_fasi_bil_prev_approva_struttura 
(
   integer,
   varchar,
   varchar,
   varchar,
   varchar,
   boolean,
   integer,
   varchar,
   timestamp,
   out  integer,
   out  integer,
   out varchar
)   OWNER TO siac;   
-- SIAC-8383 - 11.11.2021 Sofia - fine

--SIAC-8191 INIZIO
CREATE TABLE IF NOT EXISTS siac.siac_r_bil_elem_previsione_impacc 
(
	bil_elem_prev_id serial NOT NULL,
	elem_id integer NOT NULL,
	importo_prev_anno1 numeric null,
	importo_prev_anno2 numeric null,
	importo_prev_anno3 numeric null,
	importo_prev_note  varchar(500) null ,
    validita_inizio timestamp NOT NULL,
	validita_fine timestamp NULL,
	ente_proprietario_id int4 NOT NULL,
	data_creazione timestamp NOT NULL DEFAULT now(),
	data_modifica timestamp NOT NULL DEFAULT now(),
	data_cancellazione timestamp NULL,
	login_operazione varchar(200) NOT null,
	CONSTRAINT pk_siac_r_bil_elem_prev PRIMARY KEY (bil_elem_prev_id),
	CONSTRAINT siac_t_bil_elem_siac_r_bil_elem_prev FOREIGN KEY (elem_id) REFERENCES siac.siac_t_bil_elem(elem_id),
	CONSTRAINT siac_t_ente_proprietario_siac_r_bil_elem_prev FOREIGN KEY (ente_proprietario_id) REFERENCES siac.siac_t_ente_proprietario(ente_proprietario_id)
);
select fnc_dba_create_index(
'siac_r_bil_elem_previsione_impacc'::text,
  'idx_siac_r_bil_elem_prev_1'::text,
  'elem_id,  validita_inizio, ente_proprietario_id'::text,
  'data_cancellazione IS NULL',
  true
);
select fnc_dba_create_index(
'siac_r_bil_elem_previsione_impacc'::text,
  'siac_r_bil_elem_prev_fk_elem_id_idx'::text,
  'elem_id'::text,
  '',
  false
);
select fnc_dba_create_index(
'siac_r_bil_elem_previsione_impacc'::text,
  'siac_r_bil_elem_prev_fk_ente_proprietario_id_idx'::text,
  'ente_proprietario_id'::text,
  '',
  false
);

alter table siac.siac_r_bil_elem_previsione_impacc  OWNER to siac;

drop view if exists siac.siac_v_dwh_bil_elem_previsione_impacc;
drop view if exists siac.siac_v_dwh_bil_elem_prev_impacc;
drop view if exists siac.siac_v_dwh_bil_elem_prev_iacc;
CREATE OR REPLACE VIEW siac.siac_v_dwh_bil_elem_prev_iacc  
(
ente_proprietario_id,
ente_denominazione,
bil_anno,
elem_tipo_code_capitolo,
elem_tipo_desc_capitolo,
elem_code_capitolo,
elem_code_articolo,
elem_code_ueb,
elem_importo_prev_anno1,
elem_importo_prev_anno2,
elem_importo_prev_anno3,
elem_importo_prev_note
)
as
select ente.ente_proprietario_id,
       ente.ente_denominazione, 
       per.anno::varchar(4) bil_anno,
       tipo.elem_tipo_code elem_tipo_code_capitolo,
       tipo.elem_tipo_desc elem_tipo_desc_capitolo,
       e.elem_code elem_code_capitolo,
       e.elem_code2 elem_code_articolo,
       e.elem_code3 elem_code_ueb,
       r.importo_prev_anno1 elem_importo_prev_anno1,
       r.importo_prev_anno2 elem_importo_prev_anno2,
       r.importo_prev_anno3 elem_importo_prev_anno3,
       r.importo_prev_note
from siac_r_bil_elem_previsione_impacc r,
     siac_t_bil_elem e,siac_d_bil_elem_tipo tipo,
     siac_t_bil bil,siac_t_periodo per,
     siac_t_ente_proprietario ente
where  e.ente_proprietario_id=ente.ente_proprietario_id 
and    e.elem_id=r.elem_id
and    tipo.elem_tipo_id=e.elem_tipo_id
and    bil.bil_id=e.bil_id
and    per.periodo_id=bil.periodo_id
and    r.data_cancellazione is null 
and    r.validita_fine is null 
and    e.data_cancellazione is null;


alter view siac.siac_v_dwh_bil_elem_prev_iacc  OWNER to siac;

INSERT INTO siac_t_azione (azione_code, azione_desc, azione_tipo_id, gruppo_azioni_id, urlapplicazione, validita_inizio, ente_proprietario_id, login_operazione)
SELECT 'OP-GESC090-prevImpegnatoAccertatoCap','Ricerca Capitoli Previsione a Chiudere per Impegnato/Accertato',a.azione_tipo_id,b.gruppo_azioni_id,'/../siacbilapp/azioneRichiesta.do',now(),a.ente_proprietario_id,'admin-SIAC-8191'
FROM siac_d_azione_tipo a JOIN siac_d_gruppo_azioni b ON (b.ente_proprietario_id = a.ente_proprietario_id)
WHERE a.azione_tipo_code = 'ATTIVITA_SINGOLA'
AND b.gruppo_azioni_code = 'BIL_ALTRO'
AND NOT EXISTS (
  SELECT 1
  FROM siac_t_azione z
  WHERE z.azione_code = 'OP-GESC090-prevImpegnatoAccertatoCap'
  AND z.ente_proprietario_id = a.ente_proprietario_id
);

INSERT INTO siac_t_azione (azione_code, azione_desc, azione_tipo_id, gruppo_azioni_id, urlapplicazione, validita_inizio, ente_proprietario_id, login_operazione)
SELECT 'OP-FLUSSO-PREVISIONE-IMP-ACC','Gestione capitoli per impegnato accertato',a.azione_tipo_id,b.gruppo_azioni_id,'/../siacintegser/ElaboraFileService',now(),a.ente_proprietario_id,'admin-SIAC-8191'
FROM siac_d_azione_tipo a JOIN siac_d_gruppo_azioni b ON (b.ente_proprietario_id = a.ente_proprietario_id)
WHERE a.azione_tipo_code = 'AZIONE_SECONDARIA'
AND b.gruppo_azioni_code = 'BIL_ALTRO'
AND NOT EXISTS (
  SELECT 1
  FROM siac_t_azione z
  WHERE z.azione_code = 'OP-FLUSSO-PREVISIONE-IMP-ACC'
  AND z.ente_proprietario_id = a.ente_proprietario_id
);

INSERT INTO siac_d_file_tipo (file_tipo_code, file_tipo_desc, azione_id, validita_inizio, ente_proprietario_id, login_operazione)
SELECT 'PREVISIONE-IMP-ACC','Capitoli previsione a chiudere impegnato/accertato',a.azione_id, now(),a.ente_proprietario_id,'admin-SIAC-8191'
FROM siac_t_azione a
WHERE a.azione_code = 'OP-FLUSSO-PREVISIONE-IMP-ACC'
AND NOT EXISTS (
  SELECT 1
  FROM siac_d_file_tipo z
  WHERE z.file_tipo_code = 'PREVISIONE-IMP-ACC'
  AND z.ente_proprietario_id = a.ente_proprietario_id
);

INSERT INTO siac_d_gestione_tipo (gestione_tipo_code, gestione_tipo_desc, validita_inizio, ente_proprietario_id, login_operazione)
SELECT tmp.code, tmp.descr, to_timestamp('2017-01-01', 'YYYY-MM-DD'), tep.ente_proprietario_id, 'admin'
FROM siac_t_ente_proprietario tep
CROSS JOIN (VALUES ('UPLOAD_MULTIPLI_PREVISIONE_CHIUDERE', 'permetti upload multipli nella previsione a chiudere')) AS tmp(code, descr)
WHERE NOT EXISTS (
	SELECT 1
	FROM siac_d_gestione_tipo dgt
	WHERE dgt.ente_proprietario_id = tep.ente_proprietario_id
	AND dgt.gestione_tipo_code = tmp.code
)
ORDER BY tep.ente_proprietario_id, tmp.code;

INSERT INTO siac_d_gestione_livello (gestione_livello_code, gestione_livello_desc, gestione_tipo_id, validita_inizio, ente_proprietario_id, login_operazione)
SELECT tmp.code, tmp.descr, dgt.gestione_tipo_id, to_timestamp('2017-01-01', 'YYYY-MM-DD'), tep.ente_proprietario_id, 'admin'
FROM siac_t_ente_proprietario tep
JOIN siac_d_gestione_tipo dgt ON dgt.ente_proprietario_id = tep.ente_proprietario_id
CROSS JOIN (VALUES ('FALSE', 'codice TRUE per abilitare FALSE per disabilitare', 'UPLOAD_MULTIPLI_PREVISIONE_CHIUDERE')) AS tmp(code, descr, tipo)
WHERE dgt.gestione_tipo_code = tmp.tipo
AND NOT EXISTS (
	SELECT 1
	FROM siac_d_gestione_livello dgl
	WHERE dgl.ente_proprietario_id = tep.ente_proprietario_id
	AND dgl.gestione_tipo_id = dgt.gestione_tipo_id
	AND dgl.gestione_livello_code = tmp.code
)
ORDER BY tep.ente_proprietario_id, tmp.code;

INSERT INTO siac_r_gestione_ente (gestione_livello_id, validita_inizio, ente_proprietario_id, login_operazione)
SELECT dgl.gestione_livello_id, to_timestamp('2017-01-01', 'YYYY-MM-DD'), tep.ente_proprietario_id, 'admin'
FROM siac_t_ente_proprietario tep
JOIN siac_d_gestione_livello dgl ON dgl.ente_proprietario_id = tep.ente_proprietario_id
JOIN siac_d_gestione_tipo dgt on dgt.gestione_tipo_id  = dgl.gestione_tipo_id 
--CROSS JOIN (VALUES ('TRUE')) AS tmp(livello)
where dgt.gestione_tipo_code  = 'UPLOAD_MULTIPLI_PREVISIONE_CHIUDERE'
and dgl.gestione_livello_code ='FALSE'
AND NOT EXISTS (
	SELECT 1
	FROM siac_r_gestione_ente rge
	WHERE rge.ente_proprietario_id = tep.ente_proprietario_id
	AND rge.gestione_livello_id = dgl.gestione_livello_id
	AND rge.data_cancellazione IS NULL
);
--SIAC 8191 FINE

--SIAC-8298 - MAURIZIO - INIZIO

INSERT INTO
  siac.siac_t_azione
(
  azione_code,
  azione_desc,
  azione_tipo_id,
  gruppo_azioni_id,
  urlapplicazione,
  verificauo,
  validita_inizio,
  ente_proprietario_id,
  login_operazione
)
select 'OP-REP-ReportVariazioniBilancio-2022',
'Sezione report variazioni bilancio',
a.azione_tipo_id,b.gruppo_azioni_id,
'/../siacrepapp/azioneRichiestaContentOnly.do',
FALSE,
now(),
a.ente_proprietario_id,
'SIAC-8298'
 from siac_d_azione_tipo a, siac_d_gruppo_azioni b
where
b.ente_proprietario_id=A.ente_proprietario_id
and
a.azione_tipo_code='AZIONE_SECONDARIA'
and b.gruppo_azioni_code='REPORTISTICA' and
not exists (select 1 from siac_t_azione z where z.azione_code='OP-REP-ReportVariazioniBilancio-2022'
and z.ente_proprietario_id=a.ente_proprietario_id);


insert into siac_r_ruolo_op_azione
(
  ruolo_op_id,
  azione_id,
  validita_inizio,
  validita_fine,
  ente_proprietario_id,
  data_cancellazione,
  login_operazione
)
select 
rop.ruolo_op_id,
a0.azione_id,
now(),
null,
a0.ente_proprietario_id,
null,
'SIAC-8298' 
from siac_t_azione a0,
(select ra.ruolo_op_id from siac_t_azione a, 
siac_r_ruolo_op_azione ra
where ra.azione_id=a.azione_id
and a.azione_code='OP-GESC004-ricVar'
and ra.data_cancellazione is NULL
and ra.validita_fine IS NULL
) rop
where a0.azione_code = 'OP-REP-ReportVariazioniBilancio-2022'
and not exists (
select 1 from siac_r_ruolo_op_azione ra0
where ra0.azione_id=a0.azione_id
and ra0.ruolo_op_id=rop.ruolo_op_id);

--SIAC-8298 - MAURIZIO - FINE


-- SIAC-8480 Sofia 23.11.2021 Inizio 
drop function if exists siac.fnc_fasi_bil_prev_approva_struttura (
  annobilancio integer,
  fasebilancio varchar,
  euelemtipo varchar,
  bilelemprevtipo varchar,
  bilelemgesttipo varchar,
  checkgest boolean,
  enteproprietarioid integer,
  loginoperazione varchar,
  dataelaborazione timestamp,
  out fasebilelabidret integer,
  out codicerisultato integer,
  out messaggiorisultato varchar
);


CREATE OR REPLACE FUNCTION siac.fnc_fasi_bil_prev_approva_struttura (
  annobilancio integer,
  fasebilancio varchar,
  euelemtipo varchar,
  bilelemprevtipo varchar,
  bilelemgesttipo varchar,
  checkgest boolean,
  enteproprietarioid integer,
  loginoperazione varchar,
  dataelaborazione timestamp,
  out fasebilelabidret integer,
  out codicerisultato integer,
  out messaggiorisultato varchar
)
RETURNS record AS
$body$
DECLARE


	strMessaggio VARCHAR(1500):='';
	strMessaggioFinale VARCHAR(1500):='';


    FLAG_PER_MEM CONSTANT varchar := 'FlagPerMemoria';

	elemBilPrev record;

	-- CLASSIFICATORI
	CL_MACROAGGREGATO CONSTANT varchar :='MACROAGGREGATO';
	CL_PROGRAMMA CONSTANT varchar :='PROGRAMMA';
    CL_CATEGORIA CONSTANT varchar :='CATEGORIA';
    CL_CDC CONSTANT varchar :='CDC';
    CL_CDR CONSTANT varchar :='CDR';
	CL_RICORRENTE_SPESA CONSTANT varchar:='RICORRENTE_SPESA';
    CL_RICORRENTE_ENTRATA CONSTANT varchar:='RICORRENTE_ENTRATA';
	CL_TRANSAZIONE_UE_SPESA CONSTANT varchar:='TRANSAZIONE_UE_SPESA';
  	CL_TRANSAZIONE_UE_ENTRATA CONSTANT varchar:='TRANSAZIONE_UE_ENTRATA';


    CL_PDC_FIN_QUARTO     CONSTANT varchar :='PDC_IV';
    CL_PDC_FIN_QUINTO     CONSTANT varchar :='PDC_V';
	CL_COFOG 			  CONSTANT varchar :='GRUPPO_COFOG';
	CL_SIOPE_SPESA_TERZO  CONSTANT varchar:='SIOPE_SPESA_I';
    CL_SIOPE_ENTRATA_TERZO  CONSTANT varchar:='SIOPE_ENTRATA_I';

	TIPO_ELAB_P CONSTANT varchar :='P'; -- previsione
    TIPO_ELAB_G CONSTANT varchar :='G'; -- gestione

    TIPO_ELEM_EU CONSTANT varchar:='U';

	APPROVA_PREV_SU_GEST CONSTANT varchar:='APROVA_PREV';

    GESTIONE_FASE       CONSTANT varchar:='G';
    PREVISIONE_FASE     CONSTANT varchar:='P'; -- 13.10.2016 Sofia
    PROVVISORIO_FASE    CONSTANT varchar:='E'; -- 13.10.2016 Sofia
    PROVVISORIO_EP_FASE    CONSTANT varchar:='EP'; -- 13.10.2016 Sofia


	macroAggrTipoId     integer:=null;
    programmaTipoId      integer:=null;
    categoriaTipoId      integer:=null;
    cdcTipoId            integer:=null;
    cdrTipoId            integer:=null;
    ricorrenteSpesaId    integer:=null;
    transazioneUeSpesaId INTEGER:=null;
    ricorrenteEntrataId    integer:=null;
    transazioneUeEntrataId INTEGER:=null;

    pdcFinIVId             integer:=null;
    pdcFinVId             integer:=null;
    cofogTipoId          integer:=null;
    siopeSpesaTipoId          integer:=null;
    siopeEntrataTipoId          integer:=null;

    bilElemGestTipoId integer:=null;
    bilElemPrevTipoId integer:=null;
    bilElemIdRet      integer:=null;
    bilancioId        integer:=null;
    periodoId         integer:=null;
    flagPerMemAttrId  integer:=null;

	codResult         integer:=null;
	dataInizioVal     timestamp:=null;
    faseBilElabId     integer:=null;

    CATEGORIA_STD     constant varchar := 'STD';
    categoriaCapCode  varchar :=null;

    faseOpNew         varchar(15):=null; -- 13.10.2016 Sofia

    -- 04.11.2016 anto JIRA-SIAC-4161
    bilElemStatoAN CONSTANT varchar:='AN';
    -- 04.11.2016 anto JIRA-SIAC-4161
	bilElemStatoANId  integer:=null;

    -- anto JIRA-SIAC-4167 15.11.2016
    dataInizioValClass timestamp:=null;
    dataFineValClass   timestamp:=null;
   
    -- 25.10.2021 Sofia SIAC-8383
    bilancioPrecId     integer:=null;


BEGIN



    messaggioRisultato:='';
    codiceRisultato:=0;
    faseBilElabIdRet:=0;

--    dataInizioVal:=date_trunc('DAY', now());
    dataInizioVal:= clock_timestamp(); -- now();

    -- 12.12.2016 Sofia
	dataInizioValClass:= clock_timestamp();
    dataFineValClass:=(annoBilancio||'-01-01')::timestamp;

	strMessaggioFinale:='Approvazione bilancio di previsione.Aggiornamento struttura Gestione '||bilElemGestTipo||' da Previsione '||bilElemPrevTipo||
    					'.Anno bilancio='||annoBilancio::varchar||'.';

    -- inserimento fase_bil_t_elaborazione
	strMessaggio:='Inserimento fase elaborazione [fase_bil_t_elaborazione].';
    insert into fase_bil_t_elaborazione
    (fase_bil_elab_esito, fase_bil_elab_esito_msg,
     fase_bil_elab_tipo_id,
     ente_proprietario_id,validita_inizio, login_operazione)
    (select 'IN','ELABORAZIONE FASE BILANCIO '||APPROVA_PREV_SU_GEST||' IN CORSO : AGGIORNAMENTO STRUTTURE.',
            tipo.fase_bil_elab_tipo_id,enteProprietarioId, dataInizioVal, loginOperazione
     from fase_bil_d_elaborazione_tipo tipo
     where tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.fase_bil_elab_tipo_code=APPROVA_PREV_SU_GEST
     and   tipo.data_cancellazione is null
     and   tipo.validita_fine is null)
     returning fase_bil_elab_id into faseBilElabId;

     if faseBilElabId is null then
     	raise exception ' Inserimento non effettuato.';
     end if;

	 codResult:=null;
	 insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
     returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;




    strMessaggio:='Lettura bilElemStatoAN  per tipo='||bilElemStatoAN||'.';
	select tipo.elem_stato_id into strict bilElemStatoANId
    from siac_d_bil_elem_stato tipo
    where tipo.elem_stato_code=bilElemStatoAN
    and   tipo.ente_proprietario_id=enteProprietarioId
    and   tipo.data_cancellazione is null
    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);


	strMessaggio:='Lettura bilElemPrevTipo  per tipo='||bilElemPrevTipo||'.';
	select tipo.elem_tipo_id into strict bilElemPrevTipoId
    from siac_d_bil_elem_tipo tipo
    where tipo.elem_tipo_code=bilElemPrevTipo
    and   tipo.ente_proprietario_id=enteProprietarioId
    and   tipo.data_cancellazione is null
    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

	strMessaggio:='Lettura bilElemGestTipo  per tipo='||bilElemGestTipo||'.';
	select tipo.elem_tipo_id into strict bilElemGestTipoId
    from siac_d_bil_elem_tipo tipo
    where tipo.elem_tipo_code=bilElemGestTipo
    and   tipo.ente_proprietario_id=enteProprietarioId
    and   tipo.data_cancellazione is null
    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);


    -- lettura classificatori Tipo Id
	strMessaggio:='Lettura flagPerMemAttrId  per attr='||FLAG_PER_MEM||'.';
	select attr.attr_id into strict flagPerMemAttrId
    from siac_t_attr attr
    where attr.ente_proprietario_id=enteProprietarioId
	and   attr.attr_code=FLAG_PER_MEM
    and   attr.data_cancellazione is null
    and   date_trunc('day',dataElaborazione)>=date_trunc('day',attr.validita_inizio)
    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',attr.validita_fine) or attr.validita_fine is null);

	strMessaggio:='Lettura cdcTipoId  per classif='||CL_CDC||'.';
	select tipo.classif_tipo_id into strict cdcTipoId
    from siac_d_class_tipo tipo
    where tipo.ente_proprietario_id=enteProprietarioId
    and   tipo.classif_tipo_code=CL_CDC
    and   tipo.data_cancellazione is null
    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

	strMessaggio:='Lettura cdcTipoId  per classif='||CL_CDR||'.';
	select tipo.classif_tipo_id into strict cdrTipoId
    from siac_d_class_tipo tipo
    where tipo.ente_proprietario_id=enteProprietarioId
    and   tipo.classif_tipo_code=CL_CDR
    and   tipo.data_cancellazione is null
    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

    strMessaggio:='Lettura pdcFinIVId  per classif='||CL_PDC_FIN_QUARTO||'.';
	select tipo.classif_tipo_id into strict pdcFinIVId
    from siac_d_class_tipo tipo
    where tipo.ente_proprietario_id=enteProprietarioId
    and   tipo.classif_tipo_code=CL_PDC_FIN_QUARTO
    and   tipo.data_cancellazione is null
    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

    strMessaggio:='Lettura pdcFinVId  per classif='||CL_PDC_FIN_QUINTO||'.';
	select tipo.classif_tipo_id into strict pdcFinVId
    from siac_d_class_tipo tipo
    where tipo.ente_proprietario_id=enteProprietarioId
    and   tipo.classif_tipo_code=CL_PDC_FIN_QUINTO
    and   tipo.data_cancellazione is null
    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

	if euElemTipo=TIPO_ELEM_EU then
		strMessaggio:='Lettura macroAggrTipoId  per classif='||CL_MACROAGGREGATO||'.';
		select tipo.classif_tipo_id into strict macroAggrTipoId
	    from siac_d_class_tipo tipo
    	where tipo.ente_proprietario_id=enteProprietarioId
	    and   tipo.classif_tipo_code=CL_MACROAGGREGATO
    	and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    	and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

		strMessaggio:='Lettura programmaTipoId  per classif='||CL_PROGRAMMA||'.';
		select tipo.classif_tipo_id into strict programmaTipoId
	    from siac_d_class_tipo tipo
    	where tipo.ente_proprietario_id=enteProprietarioId
	    and   tipo.classif_tipo_code=CL_PROGRAMMA
    	and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    	and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

        strMessaggio:='Lettura ricorrenteSpesaId  per classif='||CL_RICORRENTE_SPESA||'.';
		select tipo.classif_tipo_id into strict ricorrenteSpesaId
    	from siac_d_class_tipo tipo
	    where tipo.ente_proprietario_id=enteProprietarioId
    	and   tipo.classif_tipo_code=CL_RICORRENTE_SPESA
	    and   tipo.data_cancellazione is null
    	and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
	    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

	    strMessaggio:='Lettura transazioneUeSpesaId  per classif='||CL_TRANSAZIONE_UE_SPESA||'.';
		select tipo.classif_tipo_id into strict transazioneUeSpesaId
    	from siac_d_class_tipo tipo
	    where tipo.ente_proprietario_id=enteProprietarioId
    	and   tipo.classif_tipo_code=CL_TRANSAZIONE_UE_SPESA
	    and   tipo.data_cancellazione is null
    	and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
	    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

        strMessaggio:='Lettura cofogTipoId  per classif='||CL_COFOG||'.';
		select tipo.classif_tipo_id into strict cofogTipoId
	    from siac_d_class_tipo tipo
    	where tipo.ente_proprietario_id=enteProprietarioId
	    and   tipo.classif_tipo_code=CL_COFOG
    	and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    	and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

	    strMessaggio:='Lettura siopeSpesaTipoId  per classif='||CL_SIOPE_SPESA_TERZO||'.';
		select tipo.classif_tipo_id into strict siopeSpesaTipoId
	    from siac_d_class_tipo tipo
    	where tipo.ente_proprietario_id=enteProprietarioId
	    and   tipo.classif_tipo_code=CL_SIOPE_SPESA_TERZO
    	and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    	and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

    else

		strMessaggio:='Lettura categoriaTipoId  per classif='||CL_CATEGORIA||'.';
		select tipo.classif_tipo_id into strict categoriaTipoId
	    from siac_d_class_tipo tipo
    	where tipo.ente_proprietario_id=enteProprietarioId
	    and   tipo.classif_tipo_code=CL_CATEGORIA
    	and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    	and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

        strMessaggio:='Lettura ricorrenteEntrataId  per classif='||CL_RICORRENTE_ENTRATA||'.';
		select tipo.classif_tipo_id into strict ricorrenteEntrataId
    	from siac_d_class_tipo tipo
	    where tipo.ente_proprietario_id=enteProprietarioId
    	and   tipo.classif_tipo_code=CL_RICORRENTE_ENTRATA
	    and   tipo.data_cancellazione is null
    	and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
	    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

	    strMessaggio:='Lettura transazioneUeEntrataId  per classif='||CL_TRANSAZIONE_UE_ENTRATA||'.';
		select tipo.classif_tipo_id into strict transazioneUeEntrataId
    	from siac_d_class_tipo tipo
	    where tipo.ente_proprietario_id=enteProprietarioId
    	and   tipo.classif_tipo_code=CL_TRANSAZIONE_UE_ENTRATA
	    and   tipo.data_cancellazione is null
    	and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
	    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);

	    strMessaggio:='Lettura siopeEntrataTipoId  per classif='||CL_SIOPE_ENTRATA_TERZO||'.';
		select tipo.classif_tipo_id into strict siopeEntrataTipoId
	    from siac_d_class_tipo tipo
    	where tipo.ente_proprietario_id=enteProprietarioId
	    and   tipo.classif_tipo_code=CL_SIOPE_ENTRATA_TERZO
    	and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
    	and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);


    end if;

    -- fine lettura classificatori Tipo Id
    strMessaggio:='Inserimento LOG per lettura classificatori tipo.';
	codResult:=null;
	insert into fase_bil_t_elaborazione_log
    (fase_bil_elab_id,fase_bil_elab_log_operazione,
     validita_inizio, login_operazione, ente_proprietario_id
    )
    values
    (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
    returning fase_bil_elab_log_id into codResult;

    if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
    end if;

  	strMessaggio:='Lettura bilancioId e periodoId  per annoBilancio='||annoBilancio::varchar||'.';
    select bil.bil_id , per.periodo_id into strict bilancioId, periodoId
    from siac_t_bil bil, siac_t_periodo per
    where bil.ente_proprietario_id=enteProprietarioId
    and   per.periodo_id=bil.periodo_id
    and   per.anno::INTEGER=annoBilancio;

    
    -- 25.10.2021 Sofia SIAC-8383
    strMessaggio:='Lettura bilancioId per annoBilancio-1='||(annoBilancio-1)::varchar||'.';
    select bil.bil_id into strict bilancioPrecId
    from siac_t_bil bil, siac_t_periodo per
    where bil.ente_proprietario_id=enteProprietarioId
    and   per.periodo_id=bil.periodo_id
    and   per.anno::INTEGER=annoBilancio-1;

   
	codResult:=null;
	insert into fase_bil_t_elaborazione_log
    (fase_bil_elab_id,fase_bil_elab_log_operazione,
     validita_inizio, login_operazione, ente_proprietario_id
    )
    values
    (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
    returning fase_bil_elab_log_id into codResult;

    if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
    end if;

	-- 13.10.2016 Sofia testo il tipo elaborazione
    -- faseBilancio=PROVVISORIO_FASE    -- gestione da gestione   -- provvisorio
    -- faseBilancio=PROVVISORIO_EP_FASE -- gestione da previsione -- provvisorio
	-- faseBilancio=GESTIONE_FASE       -- gestione da previsione -- definitivo
    if faseBilancio=PROVVISORIO_FASE or faseBilancio=PROVVISORIO_EP_FASE then
    	faseOpNew:=PROVVISORIO_FASE;
    elsif faseBilancio=GESTIONE_FASE then
    	faseOpNew:=GESTIONE_FASE;
    end if;

--- 29.06.2016 Sofia - aggiunta gestione fase
--- cancellazione della precedente presente se diversa da G
--- inserimento della nuova G se non gia presente
-- 	strMessaggio:='Cancellazione fase tipo diversa da '||GESTIONE_FASE||' per bilancio annoBilancio='||annoBilancio::varchar||'.';
--  13.10.2016 Sofia
 	strMessaggio:='Cancellazione fase tipo diversa da '||faseOpNew||' per bilancio annoBilancio='||annoBilancio::varchar||'.';
    delete from siac_r_bil_fase_operativa r
    where r.ente_proprietario_id=enteproprietarioid
    and   r.data_cancellazione is null
    and   r.validita_fine is null
    and   r.bil_id=bilancioId
    and   exists (select 1 from siac_d_fase_operativa d
                  where  d.fase_operativa_id=r.fase_operativa_id
                  and    d.fase_operativa_code!=faseOpNew);
--                  and    d.fase_operativa_code!=GESTIONE_FASE); -- 13.10.2016 Sofia

--   	strMessaggio:='Inserimento fase tipo='||GESTIONE_FASE||' per bilancio annoBilancio='||annoBilancio::varchar||'.';
-- 13.10.2016 Sofia
   	strMessaggio:='Inserimento fase tipo='||faseOpNew||' per bilancio annoBilancio='||annoBilancio::varchar||'.';
	insert into siac_r_bil_fase_operativa
	(bil_id,fase_operativa_id, validita_inizio, ente_proprietario_id, login_operazione )
	(select bilancioId,f.fase_operativa_id,dataInizioVal,f.ente_proprietario_id,loginOperazione
	 from siac_d_fase_operativa f
     where f.ente_proprietario_id=enteProprietarioId
--	 and   f.fase_operativa_code=GESTIONE_FASE
	 and   f.fase_operativa_code=faseOpNew      -- 13.10.2016 Sofia
	 and   not exists (select 1 from siac_r_bil_fase_operativa r
     	 		       where  r.bil_id=bilancioId
                       and    r.data_cancellazione is null));

---

	codResult:=null;
	insert into fase_bil_t_elaborazione_log
    (fase_bil_elab_id,fase_bil_elab_log_operazione,
     validita_inizio, login_operazione, ente_proprietario_id
    )
    values
    (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
    returning fase_bil_elab_log_id into codResult;

    if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
    end if;

	-- pulizia e popolamento tabella appoggio

	-- capitoli previsione non esistenti in gestione
-- 16.02.2016 Danie e Anto: la chiusura del record non  necessaria andando sempre per bilancio id
--    strMessaggio:='Pulizia fase_bil_t_prev_approva_str_elem_gest_nuovo.';
--    update fase_bil_t_prev_approva_str_elem_gest_nuovo g set data_cancellazione=now()
--    where ente_proprietario_id=enteProprietarioId
--    and   bil_id=bilancioId;

	codResult:=null;
	insert into fase_bil_t_elaborazione_log
    (fase_bil_elab_id,fase_bil_elab_log_operazione,
     validita_inizio, login_operazione, ente_proprietario_id
    )
    values
    (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
    returning fase_bil_elab_log_id into codResult;

    if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
    end if;

    -- capitoli previsione esistenti in gestione
	strMessaggio:='Pulizia fase_bil_t_prev_approva_str_elem_gest_esiste.';
    update fase_bil_t_prev_approva_str_elem_gest_esiste set data_cancellazione=now()
    where ente_proprietario_id=enteProprietarioId
    and   bil_id=bilancioId;


	codResult:=null;
	insert into fase_bil_t_elaborazione_log
    (fase_bil_elab_id,fase_bil_elab_log_operazione,
     validita_inizio, login_operazione, ente_proprietario_id
    )
    values
    (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
    returning fase_bil_elab_log_id into codResult;

    if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
    end if;

    strMessaggio:='Popolamento fase_bil_t_prev_approva_str_elem_gest_nuovo.';
    insert into fase_bil_t_prev_approva_str_elem_gest_nuovo
    (elem_id,elem_code,elem_code2, elem_code3,
     bil_id,fase_bil_elab_id,
     ente_proprietario_id,validita_inizio,login_operazione)
    (select prev.elem_id, prev.elem_code,prev.elem_code2,prev.elem_code3,
            prev.bil_id,faseBilElabId,
            prev.ente_proprietario_id, dataInizioVal,loginOperazione
     from siac_t_bil_elem prev
     where prev.ente_proprietario_id=enteProprietarioId
     and   prev.elem_tipo_id=bilElemPrevTipoId
     and   prev.bil_id=bilancioId
     and   prev.data_cancellazione is null
     and   exists (select 1 from siac_r_bil_elem_stato rstato -- 15.11.2016 Anto JIRA-SIAC-4161
                  					 where rstato.elem_id=prev.elem_id
				                     and   rstato.elem_stato_id!=bilElemStatoANId
					                 and   rstato.data_cancellazione is null
					                 and   rstato.validita_fine is null
				                     )

     and   date_trunc('day',dataElaborazione)>=date_trunc('day',prev.validita_inizio)
     and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',prev.validita_fine) or prev.validita_fine is null)
     and   not exists (select 1 from siac_t_bil_elem gest
                       where gest.ente_proprietario_id=prev.ente_proprietario_id
                       and   gest.bil_id=prev.bil_id
                       and   gest.elem_tipo_id=bilElemGestTipoId
                       and   gest.elem_code=prev.elem_code
                       and   gest.elem_code2=prev.elem_code2
                       and   gest.elem_code3=prev.elem_code3
                       and   gest.data_cancellazione is null

                       and   exists (select 1 from siac_r_bil_elem_stato rstato -- 15.11.2016 Anto JIRA-SIAC-4161
                  					 where rstato.elem_id=gest.elem_id
				                     and   rstato.elem_stato_id!=bilElemStatoANId
					                 and   rstato.data_cancellazione is null
					                 and   rstato.validita_fine isnull
				                     )

                       and   date_trunc('day',dataElaborazione)>=date_trunc('day',gest.validita_inizio)
   			 		   and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',gest.validita_fine) or gest.validita_fine is null)
                       order by gest.elem_id limit 1
                      )
     order by prev.elem_code::integer,prev.elem_code2::integer,prev.elem_code3
     );


	 codResult:=null;
	 insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
     returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

    if checkGest=true then

    	strMessaggio:='Popolamento fase_bil_t_prev_approva_str_elem_gest_esiste - previsione con gestione eq esistente.';
	    insert into fase_bil_t_prev_approva_str_elem_gest_esiste
    	(elem_prev_id, elem_gest_id,elem_code,elem_code2, elem_code3,
         bil_id,fase_bil_elab_id,
         ente_proprietario_id,validita_inizio,login_operazione)
	    (select prev.elem_id, gest.elem_id,prev.elem_code,prev.elem_code2,prev.elem_code3,
                prev.bil_id,faseBilElabId,
                enteProprietarioId, dataInizioVal,loginOperazione
    	 from siac_t_bil_elem prev, siac_t_bil_elem gest
	     where prev.ente_proprietario_id=enteProprietarioId
	     and   prev.elem_tipo_id=bilElemPrevTipoId
	     and   prev.bil_id=bilancioId
	     and   gest.ente_proprietario_id=prev.ente_proprietario_id
	     and   gest.bil_id=prev.bil_id
         and   gest.elem_tipo_id=bilElemGestTipoId
    	 and   gest.elem_code=prev.elem_code
	     and   gest.elem_code2=prev.elem_code2
	     and   gest.elem_code3=prev.elem_code3
		 and   prev.data_cancellazione is null
	     and   date_trunc('day',dataElaborazione)>=date_trunc('day',prev.validita_inizio)
    	 and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',prev.validita_fine) or prev.validita_fine is null)
	     and   gest.data_cancellazione is null
    	 and   date_trunc('day',dataElaborazione)>=date_trunc('day',gest.validita_inizio)
	   	 and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',gest.validita_fine) or gest.validita_fine is null)
	   	 and   exists (select 1 from siac_r_bil_elem_stato rstato -- 15.11.2016 Anto JIRA-SIAC-4161
                  					 where rstato.elem_id=prev.elem_id
				                     and   rstato.elem_stato_id!=bilElemStatoANId
					                 and   rstato.data_cancellazione is null
					                 and   rstato.validita_fine isnull
				                     )
		and   exists (select 1 from siac_r_bil_elem_stato rstato -- 15.11.2016 Anto JIRA-SIAC-4161
                  					 where rstato.elem_id=gest.elem_id
				                     and   rstato.elem_stato_id!=bilElemStatoANId
					                 and   rstato.data_cancellazione is null
					                 and   rstato.validita_fine isnull
				                     )
    	 order by prev.elem_code::integer,prev.elem_code2::integer,prev.elem_code3
	    );


		codResult:=null;
		insert into fase_bil_t_elaborazione_log
	    (fase_bil_elab_id,fase_bil_elab_log_operazione,
	     validita_inizio, login_operazione, ente_proprietario_id
	    )
	    values
	    (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
	    returning fase_bil_elab_log_id into codResult;

	    if codResult is null then
    	 	raise exception ' Errore in inserimento LOG.';
	    end if;

        -- capitoli gestione esistenti senza capitolo eq in previsione
    	strMessaggio:='Popolamento fase_bil_t_prev_approva_str_elem_gest_esiste - gestione senza previsione eq esistente.';
	    insert into fase_bil_t_prev_approva_str_elem_gest_esiste
    	(elem_prev_id, elem_gest_id,elem_code,elem_code2, elem_code3,
         bil_id,fase_bil_elab_id,
         ente_proprietario_id,validita_inizio,login_operazione)
	    (select null, gest.elem_id,gest.elem_code,gest.elem_code2,gest.elem_code3,
        	 	gest.bil_id,faseBilElabId,
                enteProprietarioId,dataInizioVal,loginOperazione
    	 from  siac_t_bil_elem gest
	     where gest.ente_proprietario_id=enteProprietarioId
	     and   gest.elem_tipo_id=bilElemGestTipoId
	     and   gest.bil_id=bilancioId
	     --and   gest.ente_proprietario_id=prev.ente_proprietario_id
	     --and   gest.bil_id=prev.bil_id
	     and   gest.data_cancellazione is null
	     and   exists (select 1 from siac_r_bil_elem_stato rstato -- 15.11.2016 Anto JIRA-SIAC-4161
                  					 where rstato.elem_id=gest.elem_id
				                     and   rstato.elem_stato_id!=bilElemStatoANId
					                 and   rstato.data_cancellazione is null
					                 and   rstato.validita_fine isnull
				                     )
    	 and   date_trunc('day',dataElaborazione)>=date_trunc('day',gest.validita_inizio)
	   	 and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',gest.validita_fine) or gest.validita_fine is null)
         and   not exists (select  1 from siac_t_bil_elem prev
  						   where  prev.ente_proprietario_id=gest.ente_proprietario_id
                           and    prev.bil_id=gest.bil_id
                           and    prev.elem_tipo_id=bilElemPrevTipoId
                           and    prev.elem_code=gest.elem_code
						   and    prev.elem_code2=gest.elem_code2
					       and    prev.elem_code3=gest.elem_code3
					       and    prev.data_cancellazione is null
					       and   exists (select 1 from siac_r_bil_elem_stato rstato -- 15.11.2016 Anto JIRA-SIAC-4161
                  					 where rstato.elem_id=prev.elem_id
				                     and   rstato.elem_stato_id!=bilElemStatoANId
					                 and   rstato.data_cancellazione is null
					                 and   rstato.validita_fine isnull
				                     )
				    	   and    date_trunc('day',dataElaborazione)>=date_trunc('day',prev.validita_inizio)
				      	   and    ( date_trunc('day',dataElaborazione)<=date_trunc('day',prev.validita_fine) or prev.validita_fine is null)
                           order by prev.elem_id limit 1)
    	 order by gest.elem_code::integer,gest.elem_code2::integer,gest.elem_code3
	    );

  	    codResult:=null;
 	    insert into fase_bil_t_elaborazione_log
        (fase_bil_elab_id,fase_bil_elab_log_operazione,
         validita_inizio, login_operazione, ente_proprietario_id
        )
	    values
        (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
        returning fase_bil_elab_log_id into codResult;

        if codResult is null then
     	 raise exception ' Errore in inserimento LOG.';
        end if;

	end if;

    codResult:=null;
    strMessaggio:='Popolamento fase_bil_t_prev_approva_str_elem_gest_nuovo.Verifica esistenza capitoli di previsione da approvare.';
    select 1 into codResult
    from fase_bil_t_prev_approva_str_elem_gest_nuovo fase
    where fase.ente_proprietario_id=enteProprietarioId
    and   fase.bil_id=bilancioId
    and   fase.fase_bil_elab_id=faseBilElabId
    and   fase.data_cancellazione is null
    and   fase.validita_fine is null
    order by fase.fase_bil_prev_str_nuovo_id limit 1;


    if codResult is not null then
 	-- inserimento nuove strutture
    -- capitoli previsione non esistenti in gestione
     strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||'.';

	 codResult:=null;
	 insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
     returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;


    for elemBilPrev in
    (select elem_id, elem_code,elem_code2,elem_code3
     from fase_bil_t_prev_approva_str_elem_gest_nuovo
     where ente_proprietario_id=enteProprietarioId
     and   bil_id=bilancioId
     and   fase_bil_elab_id=faseBilElabId
     and   data_cancellazione is NULL
     and   validita_fine is null
     order by elem_code::integer,elem_code2::integer,elem_code3
    )
    loop
    	bilElemIdRet:=null;
        strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			  '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                              ||elemBilPrev.elem_code2||' '
                                              ||elemBilPrev.elem_code3||' : siac_t_bil_elem.' ;
        -- siac_t_bil_elem
    	insert into siac_t_bil_elem
	    (elem_code,elem_code2,elem_code3, elem_desc,elem_desc2,
    	 elem_tipo_id, bil_id,ordine,livello,
	     validita_inizio , ente_proprietario_id,login_operazione)
        (select prev.elem_code,prev.elem_code2,prev.elem_code3,prev.elem_desc, prev.elem_desc2,
	            bilElemGestTipoId,bilancioId,prev.ordine,prev.livello,
                dataInizioVal,prev.ente_proprietario_id,loginOperazione
         from siac_t_bil_elem prev
         where prev.elem_id=elemBilPrev.elem_id)
         returning elem_id into bilElemIdRet;

        if bilElemIdRet is null then raise exception ' Inserimento non effettuato.';  end if;

        codResult:=null;
        strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			  '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                              ||elemBilPrev.elem_code2||' '
                                              ||elemBilPrev.elem_code3||' : siac_r_bil_elem_stato.' ;

        -- siac_r_bil_elem_stato
	    strMessaggio:='Inserimento siac_r_bil_elem_stato.';
	    insert into siac_r_bil_elem_stato
    	(elem_id,elem_stato_id,validita_inizio,ente_proprietario_id,login_operazione)
    	(select bilElemIdRet,stato.elem_stato_id,dataInizioVal,stato.ente_proprietario_id, loginOperazione
         from siac_r_bil_elem_stato stato
         where stato.elem_id=elemBilPrev.elem_id
         and   stato.data_cancellazione is null
         and   date_trunc('day',dataElaborazione)>=date_trunc('day',stato.validita_inizio)
	   	 and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',stato.validita_fine) or stato.validita_fine is null)
         )
         returning bil_elem_stato_id into codResult;
         if codResult is null then raise exception ' Inserimento non effettuato.'; end if;

         codResult:=null;
         -- siac_r_bil_elem_categoria
         strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			   '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                              ||elemBilPrev.elem_code2||' '
                                              ||elemBilPrev.elem_code3||' : siac_r_bil_elem_categoria.' ;

         insert into siac_r_bil_elem_categoria
	     (elem_id,  elem_cat_id, validita_inizio,ente_proprietario_id, login_operazione)
         (select bilElemIdRet, cat.elem_cat_id,dataInizioVal,cat.ente_proprietario_id,loginOperazione
          from siac_r_bil_elem_categoria cat
          where cat.elem_id=elemBilPrev.elem_id
          and   cat.data_cancellazione is null
          and   date_trunc('day',dataElaborazione)>=date_trunc('day',cat.validita_inizio)
	   	  and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',cat.validita_fine) or cat.validita_fine is null)
         )
         returning bil_elem_r_cat_id into codResult;
         if codResult is null then raise exception ' Inserimento non effettuato.'; end if;


         -- 02.03.2016 Dani: leggo categoria capitolo inserita.
         select d.elem_cat_code into categoriaCapCode
         from siac_r_bil_elem_categoria r, siac_d_bil_elem_categoria d where
         d.elem_cat_id=r.elem_cat_id
         and r.bil_elem_r_cat_id=codResult;

         codResult:=null;
         -- siac_r_bil_elem_attr (escludere FLAG_PER_MEM)
         strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			   '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                              ||elemBilPrev.elem_code2||' '
                                              ||elemBilPrev.elem_code3||' : siac_r_bil_elem_attr.' ;
         insert into siac_r_bil_elem_attr
         ( elem_id,attr_id, tabella_id,boolean,percentuale,testo,numerico,
           validita_inizio,ente_proprietario_id,login_operazione
         )
         (select bilElemIdRet, attr.attr_id,attr.tabella_id,attr.boolean,attr.percentuale,attr.testo,attr.numerico,
                 dataInizioVal,attr.ente_proprietario_id, loginOperazione
          from siac_r_bil_elem_attr attr
          where attr.elem_id=elemBilPrev.elem_id
          and   attr.attr_id!=flagPerMemAttrId
          and   attr.data_cancellazione is null
          and   date_trunc('day',dataElaborazione)>=date_trunc('day',attr.validita_inizio)
	   	  and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',attr.validita_fine) or attr.validita_fine is null)
          );

          select 1 into codResult
          from siac_r_bil_elem_attr
          where elem_id=bilElemIdRet
          and   data_cancellazione is null
          and   validita_fine is null
          order by elem_id
          limit 1;
          if codResult is null then raise exception ' Nessun attributo inserito.'; end if;

/* 31.07.2017 Sofia - gestione vincoli e atti di legge commentata
         codResult:=null;
         -- siac_r_vincolo_bil_elem
         strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			   '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                              ||elemBilPrev.elem_code2||' '
                                              ||elemBilPrev.elem_code3||' : siac_r_vincolo_bil_elem.' ;
         insert into siac_r_vincolo_bil_elem
         ( elem_id,vincolo_id, validita_inizio,ente_proprietario_id,login_operazione
         )
         (select bilElemIdRet, v.vincolo_id, dataInizioVal,v.ente_proprietario_id, loginOperazione
          from siac_r_vincolo_bil_elem v
          where v.elem_id=elemBilPrev.elem_id
          and   v.data_cancellazione is null
          and   date_trunc('day',dataElaborazione)>=date_trunc('day',v.validita_inizio)
	   	  and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v.validita_fine) or v.validita_fine is null)
          );

          codResult:=null;
          strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                               ||elemBilPrev.elem_code2||' '
                                               ||elemBilPrev.elem_code3||' : siac_r_vincolo_bil_elem.Verifica inserimento.' ;
          select  1  into codResult
          from 	siac_r_vincolo_bil_elem v
          where v.elem_id=elemBilPrev.elem_id
          and   v.data_cancellazione is null
          and   date_trunc('day',dataElaborazione)>=date_trunc('day',v.validita_inizio)
	   	  and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v.validita_fine) or v.validita_fine is null)
          and   not exists (select 1 from siac_r_vincolo_bil_elem v1
	                        where v1.elem_id= bilElemIdRet
    	                    and   v1.data_cancellazione is null
				            and   date_trunc('day',dataElaborazione)>=date_trunc('day',v1.validita_inizio)
				  	   	    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v1.validita_fine) or v1.validita_fine is null)
                            order by v1.elem_id
                            limit 1
                            )
          order by v.elem_id
          limit 1;
          if codResult is not null then raise exception ' Non effettuato.'; end if;

 04.03.2019 Sofia jira siac-6630 - tolto commento  */
        /** 04.03.2019 Sofia jira siac-6630 - inizio - tolto commento **/
         codResult:=null;
         -- siac_r_bil_elem_atto_legge
         strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			   '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                              ||elemBilPrev.elem_code2||' '
                                              ||elemBilPrev.elem_code3||' : siac_r_bil_elem_atto_legge.' ;
         insert into siac_r_bil_elem_atto_legge
         ( elem_id,attolegge_id, descrizione, gerarchia,finanziamento_inizio,finanziamento_fine,
           validita_inizio,ente_proprietario_id,login_operazione
         )
         (select bilElemIdRet, v.attolegge_id, v.descrizione,v.gerarchia,v.finanziamento_inizio,v.finanziamento_fine,
                 dataInizioVal,v.ente_proprietario_id, loginOperazione
          from siac_r_bil_elem_atto_legge v
          where v.elem_id=elemBilPrev.elem_id
          and   v.data_cancellazione is null
          and   date_trunc('day',dataElaborazione)>=date_trunc('day',v.validita_inizio)
	   	  and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v.validita_fine) or v.validita_fine is null)
          );


          codResult:=null;
          strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                               ||elemBilPrev.elem_code2||' '
                                               ||elemBilPrev.elem_code3||' : siac_r_bil_elem_atto_legge.Verifica inserimento.' ;
          select 1  into codResult
          from 	siac_r_bil_elem_atto_legge v
          where v.elem_id=elemBilPrev.elem_id
          and   v.data_cancellazione is null
          and   date_trunc('day',dataElaborazione)>=date_trunc('day',v.validita_inizio)
	   	  and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v.validita_fine) or v.validita_fine is null)
          and   not exists (select 1 from siac_r_bil_elem_atto_legge v1
	                        where v1.elem_id= bilElemIdRet
    	                    and   v1.data_cancellazione is null
				            and   date_trunc('day',dataElaborazione)>=date_trunc('day',v1.validita_inizio)
				  	   	    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v1.validita_fine) or v1.validita_fine is null)
                            order by v1.elem_id
                            limit 1
                            )
          order by v.elem_id
          limit 1;
          if codResult is not null then raise exception ' Non effettuato.'; end if;
/*  04.03.2019 Sofia jira siac-6630 - tolto commento
31.07.2017 Sofia - chiusura
*/
          strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                               ||elemBilPrev.elem_code2||' '
                                               ||elemBilPrev.elem_code3||' : siac_r_bil_elem_rel_tempo.' ;
		-- siac-8383 Sofia 14.10.2021 
		-- elem_id_old deve essere ricalcolato in base al suo stesso equivalente di gestione in annobilancio-1
		-- attenzione anche al controllo dopo la insert o da commentare o da correggere											   
/* 		  insert into siac_r_bil_elem_rel_tempo
          (elem_id, elem_id_old, validita_inizio, ente_proprietario_id,login_operazione)
          (select bilElemIdRet,v.elem_id_old, dataInizioVal,v.ente_proprietario_id, loginOperazione
           from siac_r_bil_elem_rel_tempo v
           where v.elem_id=elemBilPrev.elem_id
	       and   v.data_cancellazione is null
           and   date_trunc('day',dataElaborazione)>=date_trunc('day',v.validita_inizio)
	   	   and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v.validita_fine) or v.validita_fine is null));*/

	   	  -- siac-8383 Sofia 25.10.2021
		  -- SIAC-8480 Sofia 22.11.2021
	   	  insert into siac_r_bil_elem_rel_tempo
          (elem_id, elem_id_old, validita_inizio, ente_proprietario_id,login_operazione)
          (select bilElemIdRet,enew.elem_id, dataInizioVal,v.ente_proprietario_id, loginOperazione
           from siac_r_bil_elem_rel_tempo v,siac_t_bil_elem e,siac_t_bil_elem enew
           where v.elem_id=elemBilPrev.elem_id
           and   e.elem_id=v.elem_id
           AND   enew.elem_id=v.elem_id_old 
           AND   enew.elem_tipo_id=bilElemGestTipoId
           AND   enew.bil_id=bilancioPrecId
           AND   enew.elem_code=e.elem_code 
           AND   enew.elem_code2=e.elem_code2
           AND   enew.elem_code3=e.elem_code3
           AND   enew.data_cancellazione IS null
	       and   v.data_cancellazione is null
           and   date_trunc('day',dataElaborazione)>=date_trunc('day',v.validita_inizio)
	   	   and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v.validita_fine) or v.validita_fine is null));
	
          /* 	   	  -- siac-8383 Sofia 25.10.2021
           codResult:=null;
          strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                               ||elemBilPrev.elem_code2||' '
                                               ||elemBilPrev.elem_code3||' : siac_r_bil_elem_rel_tempo.Verifica inserimento.' ;
          select 1  into codResult
          from 	siac_r_bil_elem_rel_tempo v
          where v.elem_id=elemBilPrev.elem_id
          and   v.data_cancellazione is null
          and   date_trunc('day',dataElaborazione)>=date_trunc('day',v.validita_inizio)
	   	  and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v.validita_fine) or v.validita_fine is null)
          and   not exists (select 1 from siac_r_bil_elem_rel_tempo v1
	                        where v1.elem_id= bilElemIdRet
    	                    and   v1.data_cancellazione is null
				            and   date_trunc('day',dataElaborazione)>=date_trunc('day',v1.validita_inizio)
				  	   	    and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',v1.validita_fine) or v1.validita_fine is null)
                            order by v1.elem_id
                            limit 1
                            )
          order by v.elem_id
          limit 1;
          if codResult is not null then raise exception ' Non effettuato.'; end if;*/


	      codResult:=null;
	      -- siac_r_bil_elem_class
          strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                               ||elemBilPrev.elem_code2||' '
                                               ||elemBilPrev.elem_code3||' : siac_r_bil_elem_class.' ;
		/*
         insert into siac_r_bil_elem_class
         (elem_id,classif_id, validita_inizio, ente_proprietario_id,login_operazione)
         (select bilElemIdRet, class.classif_id,dataInizioVal,class.ente_proprietario_id,loginOperazione
          from siac_r_bil_elem_class class ,
          where class.elem_id=elemBilPrev.elem_id
          and   class.data_cancellazione is null
          and   date_trunc('day',dataElaborazione)>=date_trunc('day',class.validita_inizio)
	   	  and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',class.validita_fine) or class.validita_fine is null));
          */

          /** JIRA-SIAC-4167 - aggiunto controllo su validita classificatore **/
         insert into siac_r_bil_elem_class
         (elem_id,classif_id, validita_inizio, ente_proprietario_id,login_operazione)
         (select bilElemIdRet, class.classif_id,dataInizioVal,class.ente_proprietario_id,loginOperazione
          from siac_r_bil_elem_class class,siac_t_class c
          where class.elem_id=elemBilPrev.elem_id
          and   c.classif_id=class.classif_id
          and   class.data_cancellazione is null
          and   date_trunc('day',dataElaborazione)>=date_trunc('day',class.validita_inizio)
	   	  and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',class.validita_fine) or class.validita_fine is null)
          and   c.data_cancellazione is null
          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
	   	  and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null));





          select 1 into codResult
          from siac_r_bil_elem_class
          where elem_id=bilElemIdRet
          and   data_cancellazione is null
          and   validita_fine is null
          order by elem_id
          limit 1;
          if codResult is null then raise exception ' Nessun classificatore inserito.'; end if;

          -- controlli sui classificatori obbligatori
          -- CL_CDC, CL_CDR
          codResult:=null;
          strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                               ||elemBilPrev.elem_code2||' '
                                               ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_CDC||' '||CL_CDR||'.' ;
           /*
          select 1 into codResult
          from siac_r_bil_elem_class r, siac_t_class c
          where r.elem_id=bilElemIdRet
          and   c.classif_id=r.classif_id
          and   c.classif_tipo_id in (cdcTipoId, cdrTipoId)
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          order by r.elem_id
          limit 1;
          if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
			*/

            /** JIRA-SIAC-4167  **/
		  select 1 into codResult
          from siac_r_bil_elem_class r, siac_t_class c
          where r.elem_id=bilElemIdRet
          and   c.classif_id=r.classif_id
          and   c.classif_tipo_id in (cdcTipoId, cdrTipoId)
          and   c.data_cancellazione is null
          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
	   	  and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
          order by r.elem_id
          limit 1;

          if codResult is null then
           strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
           insert into fase_bil_t_prev_apertura_segnala
           (elem_id,
	        elem_code,
			elem_code2,
			elem_code3,
		    bil_id,
		    fase_bil_elab_id,
		    segnala_codice,
			segnala_desc,
			validita_inizio,
			ente_proprietario_id,
		    login_operazione)
           (select capitolo.elem_id,
                   capitolo.elem_code,
                   capitolo.elem_code2,
                   capitolo.elem_code3,
                   capitolo.bil_id,
                   faseBilElabId,
                   'SAC',
                   'Sac mancante',
                   dataInizioVal,
                   capitolo.ente_proprietario_id,
                   loginOperazione
            from siac_t_bil_elem capitolo
            where  capitolo.elem_id=bilElemIdRet
            )
            returning fase_bil_prev_ape_seg_id into codresult;

            if codResult is null then raise exception 'Nessuno inserimento effettuato.'; end if;
          end if;


   	      -- CL_PDC_FIN_QUINTO, CL_PDC_FIN_QUARTO
		  codResult:=null;
          strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                               ||elemBilPrev.elem_code2||' '
                                               ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_PDC_FIN_QUARTO||' '||CL_PDC_FIN_QUINTO||'.' ;

          /*
          select 1 into codResult
          from siac_r_bil_elem_class r, siac_t_class c
          where r.elem_id=bilElemIdRet
          and   c.classif_id=r.classif_id
          and   c.classif_tipo_id in (pdcFinIVId, pdcFinVId)
          and   c.data_cancellazione is null
          and   c.validita_fine is null
          order by r.elem_id
          limit 1;

          -- 02.03.2016 Dani. l'obbligatorieta  del classificatore vale solo per capitolo STANDARD
		  if categoriaCapCode = CATEGORIA_STD then
	          if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
          end if;
			*/

/** JIRA-SIAC-4167 **/
          select 1 into codResult
          from siac_r_bil_elem_class r, siac_t_class c
          where r.elem_id=bilElemIdRet
          and   c.classif_id=r.classif_id
          and   c.classif_tipo_id in (pdcFinIVId, pdcFinVId)
          and   c.data_cancellazione is null
          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
	   	  and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
          order by r.elem_id
          limit 1;



          -- Obbligatorieta  del classificatore vale solo per capitolo STANDARD
		  if categoriaCapCode = CATEGORIA_STD then
	      --  JIRA-SIAC-4167  if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
           if codResult is null then
          	strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
            insert into fase_bil_t_prev_apertura_segnala
            (elem_id,
	         elem_code,
		 	 elem_code2,
			 elem_code3,
		     bil_id,
		     fase_bil_elab_id,
		     segnala_codice,
			 segnala_desc,
			 validita_inizio,
			 ente_proprietario_id,
		     login_operazione)
            (select capitolo.elem_id,
                    capitolo.elem_code,
                    capitolo.elem_code2,
                    capitolo.elem_code3,
                    capitolo.bil_id,
                    faseBilElabId,
                    'PDCFIN',
                    'PdcFin mancante',
                    dataInizioVal,
                    capitolo.ente_proprietario_id,
                    loginOperazione
             from siac_t_bil_elem capitolo
             where  capitolo.elem_id=bilElemIdRet
             )
             returning fase_bil_prev_ape_seg_id into codresult;

             if codResult is null then raise exception 'Nessuno inserimento effettuato.'; end if;
           end if;
          end if;

          if euElemTipo=TIPO_ELEM_EU then
	          -- CL_PROGRAMMA
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_PROGRAMMA||'.' ;
	          /*
              select 1 into codResult
    	      from siac_r_bil_elem_class r, siac_t_class c
        	  where r.elem_id=bilElemIdRet
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=programmaTipoId
              and   c.data_cancellazione is null
         	  and   c.validita_fine is null
              order by r.elem_id
        	  limit 1;
              -- 02.03.2016 Dani. l'obbligatorieta del classificatore vale solo per capitolo STANDARD
              if categoriaCapCode = CATEGORIA_STD then
                  if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;
				*/
/** JIRA-SIAC-4167 **/
			  select 1 into codResult
    	      from siac_r_bil_elem_class r, siac_t_class c
        	  where r.elem_id=bilElemIdRet
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=programmaTipoId
              and   c.data_cancellazione is null
         	  and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
	   	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              order by r.elem_id
        	  limit 1;



              -- Obbligatorieta  del classificatore vale solo per capitolo STANDARD
              if categoriaCapCode = CATEGORIA_STD then
                  -- JIRA-SIAC-4167 if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
                  if codResult is null then

                   strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_PROGRAMMA,
     	                   CL_PROGRAMMA||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

            	   if codResult is null then raise exception 'Nessuno inserimento effettuato.'; end if;
                  end if;
              end if;



    	      -- CL_MACROAGGREGATO
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_MACROAGGREGATO||'.' ;
	          /*
              select 1 into codResult
    	      from siac_r_bil_elem_class r, siac_t_class c
        	  where r.elem_id=bilElemIdRet
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=macroAggrTipoId
              and   c.data_cancellazione is null
          	  and   c.validita_fine is null
              order by r.elem_id
        	  limit 1;
          -- 02.03.2016 Dani. l'obbligatorieta  del classificatore vale solo per capitolo STANDARD
              if categoriaCapCode = CATEGORIA_STD then
		          if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;
				*/

                /** JIRA-SIAC-4167 **/
              select 1 into codResult
    	      from siac_r_bil_elem_class r, siac_t_class c
        	  where r.elem_id=bilElemIdRet
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=macroAggrTipoId
              and   c.data_cancellazione is null
          	  and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
	   	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              order by r.elem_id
        	  limit 1;

              -- Obbligatorieta del classificatore vale solo per capitolo STANDARD
              if categoriaCapCode = CATEGORIA_STD then
		          -- JIRA-SIAC-4167 if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
                  if codResult is null then

                   strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_MACROAGGREGATO,
     	                   CL_MACROAGGREGATO||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

            	   if codResult is null then raise exception 'Nessuno inserimento effettuato.';  end if;

                  end if;
              end if;

			  -- CL_COFOG
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_COFOG||'.' ;

			  -- 02.03.2016 Dani: definizione classificatore neseccaria solo se presente in previsione
              /*
              select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=cofogTipoId
              and   c.data_cancellazione is null
		      and   c.validita_fine is null
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=cofogTipoId
					             and   c.data_cancellazione is null
							     and   c.validita_fine is null
                                 )
			  order by r.elem_id limit 1;
	          if codResult is not null then raise exception ' Nessuno inserimento effettuato.'; end if;
				*/

                select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=cofogTipoId
              and   r.data_cancellazione is null
		      and   date_trunc('day',dataElaborazione)>=date_trunc('day',r.validita_inizio)
	   	      and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',r.validita_fine) or r.validita_fine is null)
              and   c.data_cancellazione is null
		      and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
	   	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=cofogTipoId
					             and   c.data_cancellazione is null
							     and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
				  	   	         and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                                 )
			  order by r.elem_id limit 1;

              -- --JIRA-SIAC-4167 14.11.2016 Sofia
	          if codResult is not null then
                   codResult:=null;
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_COFOG,
     	                   CL_COFOG||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

              	   if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;

              end if;



        	  -- CL_RICORRENTE_SPESA
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_RICORRENTE_SPESA||'.' ;
			  -- 02.03.2016 Dani: definizione classificatore neseccaria solo se presente in previsione
              /*
              select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=ricorrenteSpesaId
              and   c.data_cancellazione is null
		      and   c.validita_fine is null
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=ricorrenteSpesaId
					             and   c.data_cancellazione is null
							     and   c.validita_fine is null
                                 )
			  order by r.elem_id limit 1;
	          if codResult is not null then raise exception ' Nessuno inserimento effettuato.'; end if;
				*/
              select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=ricorrenteSpesaId
              and   r.data_cancellazione is null
		      and   date_trunc('day',dataElaborazione)>=date_trunc('day',r.validita_inizio)
	   	      and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',r.validita_fine) or r.validita_fine is null)
              and   c.data_cancellazione is null
		      and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
	   	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=ricorrenteSpesaId
					             and   c.data_cancellazione is null
							     and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
					   	         and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                                )
			  order by r.elem_id limit 1;

              -- JIRA-SIAC-4167 14.11.2016 Sofia
      		  if codResult is not null then
                   codResult:=null;
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_RICORRENTE_SPESA,
     	                   CL_RICORRENTE_SPESA||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

              	   if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;

	          -- CL_SIOPE_SPESA_TERZO
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_SIOPE_SPESA_TERZO||'.' ;
				/*
              select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=siopeSpesaTipoId
              and   c.data_cancellazione is null
		      and   c.validita_fine is null
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=siopeSpesaTipoId
					             and   c.data_cancellazione is null
							     and   c.validita_fine is null
--                                 order by r.elem_id
--                                 limit 1
                                 )
			  order by r.elem_id
              limit 1;

	          if codResult is not null then raise exception ' Nessuno inserimento effettuato.'; end if;
				*/

                select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=siopeSpesaTipoId
              and   r.data_cancellazione is null
              and   date_trunc('day',dataElaborazione)>=date_trunc('day',r.validita_inizio)
  	   	      and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',r.validita_fine) or r.validita_fine is null)
              and   c.data_cancellazione is null
              and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
  	   	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=siopeSpesaTipoId
					             and   c.data_cancellazione is null
							     and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
				  	   	         and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                               )
			  order by r.elem_id
              limit 1;

              -- JIRA-SIAC-4167 14.11.2016 Sofia
              if codResult is not null then
                   codResult:=null;
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_SIOPE_SPESA_TERZO,
     	                   CL_SIOPE_SPESA_TERZO||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

              	   if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;


    	      -- CL_TRANSAZIONE_UE_SPESA
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_TRANSAZIONE_UE_SPESA||'.' ;

			  -- 02.03.2016 Dani: definizione classificatore neseccaria solo se presente in previsione
              /*
              select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=transazioneUeSpesaId
              and   c.data_cancellazione is null
		      and   c.validita_fine is null
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=transazioneUeSpesaId
					             and   c.data_cancellazione is null
							     and   c.validita_fine is null
                                 )
			  order by r.elem_id limit 1;
	          if codResult is not null then raise exception ' Nessuno inserimento effettuato.'; end if;
              */
select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=transazioneUeSpesaId
              and   r.data_cancellazione is null
		      and   date_trunc('day',dataElaborazione)>=date_trunc('day',r.validita_inizio)
  	   	      and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',r.validita_fine) or r.validita_fine is null)
              and   c.data_cancellazione is null
		      and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
  	   	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=transazioneUeSpesaId
					             and   c.data_cancellazione is null
							     and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
					     	     and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                               )
			  order by r.elem_id limit 1;

			  -- JIRA-SIAC-4167 14.11.2016 Sofia
              if codResult is not null then
                   codResult:=null;
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_TRANSAZIONE_UE_SPESA,
     	                   CL_TRANSAZIONE_UE_SPESA||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

              	   if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;
          else

    	      -- CL_CATEGORIA
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_CATEGORIA||'.' ;
	          /*
              select 1 into codResult
    	      from siac_r_bil_elem_class r, siac_t_class c
        	  where r.elem_id=bilElemIdRet
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=categoriaTipoId
              and   c.data_cancellazione is null
		      and   c.validita_fine is null
              order by r.elem_id
        	  limit 1;
          -- 02.03.2016 Dani. l'obbligatorieta  del classificatore vale solo per capitolo STANDARD
              if categoriaCapCode = CATEGORIA_STD then
				  if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;
				*/
              select 1 into codResult
    	      from siac_r_bil_elem_class r, siac_t_class c
        	  where r.elem_id=bilElemIdRet
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=categoriaTipoId
              and   r.data_cancellazione is null
		      and   date_trunc('day',dataElaborazione)>=date_trunc('day',r.validita_inizio)
    	      and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',r.validita_fine) or r.validita_fine is null)
              and   c.data_cancellazione is null
		      and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
    	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              order by r.elem_id
        	  limit 1;

              -- Obbligatorieta  del classificatore vale solo per capitolo STANDARD
              if categoriaCapCode = CATEGORIA_STD then
                  -- JIRA-SIAC-4167 14.11.2016 Sofia
				  -- if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
                  if codResult is null then
                   codResult:=null;
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_CATEGORIA,
     	                   CL_CATEGORIA||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

              	   if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;
              end if;


        	  -- CL_RICORRENTE_ENTRATA
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_RICORRENTE_ENTRATA||'.' ;
			  -- 02.03.2016 Dani: definizione classificatore neseccaria solo se presente in previsione
              /*
              select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=ricorrenteEntrataId
              and   c.data_cancellazione is null
		      and   c.validita_fine is null
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=ricorrenteEntrataId
					             and   c.data_cancellazione is null
							     and   c.validita_fine is null
                                 )
			  order by r.elem_id limit 1;
	          if codResult is not null then raise exception ' Nessuno inserimento effettuato.'; end if;
				*/
                select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=ricorrenteEntrataId
              and   r.data_cancellazione is null
		      and   date_trunc('day',dataElaborazione)>=date_trunc('day',r.validita_inizio)
    	      and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',r.validita_fine) or r.validita_fine is null)
              and   c.data_cancellazione is null
              and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
    	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=ricorrenteEntrataId
					             and   c.data_cancellazione is null
							     and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
					   	         and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                                )
			  order by r.elem_id limit 1;

              -- JIRA-SIAC-4167 14.11.2016 Sofia
              if codResult is not null then
                   codResult:=null;
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_RICORRENTE_ENTRATA,
     	                   CL_RICORRENTE_ENTRATA||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

              	   if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;



	          -- CL_SIOPE_ENTRATA_TERZO
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_SIOPE_ENTRATA_TERZO||'.' ;
				/*
	          select 1 into codResult
    	      from siac_r_bil_elem_class r, siac_t_class c
        	  where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=siopeEntrataTipoId
              and   c.data_cancellazione is null
		      and   c.validita_fine is null
              and   not exists (select 1
				      	        from siac_r_bil_elem_class r, siac_t_class c
				        	    where r.elem_id=bilElemIdRet
					            and   c.classif_id=r.classif_id
					   	        and   c.classif_tipo_id=siopeEntrataTipoId
			                    and   c.data_cancellazione is null
							    and   c.validita_fine is null
                                order by r.elem_id
                                limit 1)
			  order by r.elem_id
              limit 1;
	          if codResult is not null then raise exception ' Nessuno inserimento effettuato.'; end if;
				*/

select 1 into codResult
    	      from siac_r_bil_elem_class r, siac_t_class c
        	  where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=siopeEntrataTipoId
              and   r.data_cancellazione is null
		      and   date_trunc('day',dataElaborazione)>=date_trunc('day',r.validita_inizio)
    	      and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',r.validita_fine) or r.validita_fine is null)
              and   c.data_cancellazione is null
		      and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
    	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              and   not exists (select 1
				      	        from siac_r_bil_elem_class r, siac_t_class c
				        	    where r.elem_id=bilElemIdRet
					            and   c.classif_id=r.classif_id
					   	        and   c.classif_tipo_id=siopeEntrataTipoId
			                    and   c.data_cancellazione is null
							    and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
    	      				    and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                                order by r.elem_id
                                limit 1)
			  order by r.elem_id
              limit 1;

              -- JIRA-SIAC-4167 14.11.2016 Sofia
              if codResult is not null then
                   codResult:=null;
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_SIOPE_ENTRATA_TERZO,
     	                   CL_SIOPE_ENTRATA_TERZO||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

              	   if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;

    	      -- CL_TRANSAZIONE_UE_ENTRATA
              codResult:=null;
        	  strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        				    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                	                               ||elemBilPrev.elem_code2||' '
                    	                           ||elemBilPrev.elem_code3||' : verifica classificatore '||CL_TRANSAZIONE_UE_ENTRATA||'.' ;

			  -- 02.03.2016 Dani: definizione classificatore neseccaria solo se presente in previsione
          /*
              select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=transazioneUeEntrataId
              and   c.data_cancellazione is null
		      and   c.validita_fine is null
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=transazioneUeEntrataId
					             and   c.data_cancellazione is null
							     and   c.validita_fine is null
                                 )
			  order by r.elem_id limit 1;
	          if codResult is not null then raise exception ' Nessuno inserimento effettuato.'; end if;
          end if;
			*/

            select 1 into codResult
              from  siac_r_bil_elem_class r, siac_t_class c
              where r.elem_id=elemBilPrev.elem_id
	          and   c.classif_id=r.classif_id
    	      and   c.classif_tipo_id=transazioneUeEntrataId
              and   r.data_cancellazione is null
		      and   date_trunc('day',dataElaborazione)>=date_trunc('day',r.validita_inizio)
    	      and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',r.validita_fine) or r.validita_fine is null)
              and   c.data_cancellazione is null
              and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
    	      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              and   not exists ( select distinct 1
					    	     from siac_r_bil_elem_class r, siac_t_class c
					       	     where r.elem_id=bilElemIdRet
						         and   c.classif_id=r.classif_id
					   	         and   c.classif_tipo_id=transazioneUeEntrataId
					             and   c.data_cancellazione is null
							     and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
				    	         and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                                )
			  order by r.elem_id limit 1;

              -- JIRA-SIAC-4167 14.11.2016 Sofia
              if codResult is not null then
                   codResult:=null;
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select capitolo.elem_id,
                           capitolo.elem_code,
                           capitolo.elem_code2,
                           capitolo.elem_code3,
	                       capitolo.bil_id,
     	                   faseBilElabId,
	                       CL_TRANSAZIONE_UE_ENTRATA,
     	                   CL_TRANSAZIONE_UE_ENTRATA||' mancante',
         	               dataInizioVal,
             	           capitolo.ente_proprietario_id,
	                       loginOperazione
	                from siac_t_bil_elem capitolo
	                where  capitolo.elem_id=bilElemIdRet
                   )
	               returning fase_bil_prev_ape_seg_id into codresult;

              	   if codResult is  null then raise exception ' Nessuno inserimento effettuato.'; end if;
              end if;

          end if;

          strMessaggio:='Inserimento nuove strutture per tipo='||bilElemGestTipo||
        			    '.Elemento di bilancio '||elemBilPrev.elem_code||' '
                                               ||elemBilPrev.elem_code2||' '
                                               ||elemBilPrev.elem_code3||' : aggiornamento relazione tra elem_id_prev e elem_id_gest.' ;
          update fase_bil_t_prev_approva_str_elem_gest_nuovo set elem_gest_id=bilElemIdRet
          where elem_id=elemBilPrev.elem_id
          and   fase_bil_elab_id=faseBilElabId;

  end loop;

  strMessaggio:='Conclusione inserimento nuove strutture per tipo='||bilElemGestTipo||'.';
  codResult:=null;
  insert into fase_bil_t_elaborazione_log
  (fase_bil_elab_id,fase_bil_elab_log_operazione,
   validita_inizio, login_operazione, ente_proprietario_id
  )
  values
  (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
  returning fase_bil_elab_log_id into codResult;

  if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
  end if;

 end if;

 if checkGest=true then

 	codResult:=null;
    strMessaggio:='Verifica esistenza elementi di bilancio di gestione equivalenti da aggiornare da previsione.';
	select 1 into codResult
    from fase_bil_t_prev_approva_str_elem_gest_esiste fase
    where fase.ente_proprietario_id=enteProprietarioId
    and   fase.bil_id=bilancioId
    and   fase.fase_bil_elab_id=faseBilElabId
    and   fase.data_cancellazione is null
    and   fase.validita_fine is null
    and   fase.elem_prev_id is not null
    order by fase.fase_bil_prev_str_esiste_id
    limit 1;
    codResult:=null;
    insert into fase_bil_t_elaborazione_log
    (fase_bil_elab_id,fase_bil_elab_log_operazione,
	   validita_inizio, login_operazione, ente_proprietario_id
    )
 	values
	(faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
	 returning fase_bil_elab_log_id into codResult;

	if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
	end if;

    if codResult is not null then
    -- popolamento tabelle bck per salvataggio precedenti strutture
    -- siac_t_bil_elem
	  codResult:=null;
      strMessaggio:='Backup vecchie struttura per capitoli di gestione equivalente esistenti - INIZIO.';
	  insert into fase_bil_t_elaborazione_log
	  (fase_bil_elab_id,fase_bil_elab_log_operazione,
	   validita_inizio, login_operazione, ente_proprietario_id
	  )
	  values
	  (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
	  returning fase_bil_elab_log_id into codResult;

	  if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
	  end if;

    strMessaggio:='Backup vecchia struttura [siac_t_bil_elem] per capitoli di gestione equivalente.';
    insert into bck_fase_bil_t_prev_approva_bil_elem
    (elem_prev_id, elem_bck_id,elem_bck_code,elem_bck_code2, elem_bck_code3,
     elem_bck_desc,elem_bck_desc2, elem_bck_bil_id, elem_bck_id_padre, elem_bck_tipo_id, elem_bck_livello,
     elem_bck_ordine, elem_bck_data_creazione, elem_bck_data_modifica, elem_bck_login_operazione,
     elem_bck_validita_inizio, elem_bck_validita_fine,fase_bil_elab_id,
     ente_proprietario_id, login_operazione,validita_inizio)
    (select fase.elem_prev_id,elem.elem_id, elem.elem_code,elem.elem_code2,elem.elem_code3,
            elem.elem_desc,elem.elem_desc2, elem.bil_id, elem.elem_id_padre, elem.elem_tipo_id, elem.livello,
            elem.ordine, elem.data_creazione, elem.data_modifica, elem.login_operazione,
            elem.validita_inizio, elem.validita_fine,faseBilElabId,
            elem.ente_proprietario_id, loginOperazione,dataInizioVal
	 from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_t_bil_elem elem
     where fase.ente_proprietario_id=enteProprietarioId
     and   fase.bil_id=bilancioId
     and   fase.fase_bil_elab_id=faseBilElabId
     and   elem.elem_id=fase.elem_gest_id
     and   fase.data_cancellazione is null
     and   fase.validita_fine is null
     and   fase.elem_prev_id is not null
     );

     codResult:=null;
     strMessaggio:=strMessaggio||' Verifica inserimento.';
     select 1 into codResult
     from fase_bil_t_prev_approva_str_elem_gest_esiste fase
     where fase.ente_proprietario_id=enteProprietarioId
     and   fase.bil_id=bilancioId
     and   fase.fase_bil_elab_id=faseBilElabId
     and   fase.elem_gest_id is not null
     and   fase.elem_prev_id is not null
     and   fase.data_cancellazione is null
     and   fase.validita_fine is null
     and   not exists (select 1 from bck_fase_bil_t_prev_approva_bil_elem bck
                       where bck.fase_bil_elab_id=fase.fase_bil_elab_id
                       and   bck.elem_bck_id=fase.elem_gest_id
                       and   bck.data_cancellazione is null
                       and   bck.validita_fine is null);
     if codResult is not null then raise exception ' Elementi mancanti di backup.'; end if;


--- 29.06.2016 Sofia gestione backup per stato, classificatori, attributi e categoria
--  che non devono essere cancallati ma sovrascritti
	  -- bck per attributi e classificatori, stato e categoria
     strMessaggio:='Backup vecchia struttura [siac_r_bil_elem_stato] per capitoli di gestione equivalente.';
     insert into bck_fase_bil_t_prev_approva_bil_elem_stato
     (elem_bck_id,elem_bck_stato_id,
      elem_bck_data_creazione, elem_bck_data_modifica, elem_bck_login_operazione,
      elem_bck_validita_inizio, elem_bck_validita_fine,fase_bil_elab_id,
      ente_proprietario_id, login_operazione,validita_inizio)
     (select elem.elem_id, elem.elem_stato_id,
			 elem.data_creazione, elem.data_modifica, elem.login_operazione,
             elem.validita_inizio, elem.validita_fine,faseBilElabId,
             elem.ente_proprietario_id, loginOperazione,dataInizioVal
	  from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_r_bil_elem_stato elem
      where fase.ente_proprietario_id=enteProprietarioId
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   elem.elem_id=fase.elem_gest_id
      and   fase.data_cancellazione is null
      and   fase.validita_fine is null
      and   fase.elem_prev_id is not null
      );

      codResult:=null;
      strMessaggio:=strMessaggio||' Verifica inserimento.';
      select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase
      where fase.ente_proprietario_id=enteProprietarioId
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_gest_id is not null
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   fase.validita_fine is null
      and   not exists (select 1 from bck_fase_bil_t_prev_approva_bil_elem_stato bck
                        where bck.fase_bil_elab_id=fase.fase_bil_elab_id
                        and   bck.elem_bck_id=fase.elem_gest_id
                        and   bck.data_cancellazione is null
                        and   bck.validita_fine is null);
      if codResult is not null then raise exception ' Elementi mancanti di backup.'; end if;


      strMessaggio:='Backup vecchia struttura [siac_r_bil_elem_attr] per capitoli di gestione equivalente.';
      insert into bck_fase_bil_t_prev_approva_bil_elem_attr
      (elem_bck_id,elem_bck_attr_id,elem_bck_tabella_id,
       elem_bck_boolean,elem_bck_percentuale,
       elem_bck_testo,elem_bck_numerico,
       elem_bck_data_creazione, elem_bck_data_modifica, elem_bck_login_operazione,
       elem_bck_validita_inizio, elem_bck_validita_fine,fase_bil_elab_id,
       ente_proprietario_id, login_operazione,validita_inizio)
      (select fase.elem_gest_id, elem.attr_id, elem.tabella_id,
      		  elem."boolean",elem.percentuale, elem.testo, elem.numerico,
			  elem.data_creazione, elem.data_modifica, elem.login_operazione,
              elem.validita_inizio, elem.validita_fine,faseBilElabId,
              elem.ente_proprietario_id, loginOperazione,dataInizioVal
	   from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_r_bil_elem_attr elem
       where fase.ente_proprietario_id=enteProprietarioId
       and   fase.bil_id=bilancioId
       and   fase.fase_bil_elab_id=faseBilElabId
       and   elem.elem_id=fase.elem_gest_id
       and   fase.data_cancellazione is null
       and   fase.validita_fine is null
       and   fase.elem_prev_id is not null
      );

      codResult:=null;
      strMessaggio:=strMessaggio||' Verifica inserimento.';
      select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase
      where fase.ente_proprietario_id=enteProprietarioId
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_gest_id is not null
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   fase.validita_fine is null
      and   not exists (select 1 from bck_fase_bil_t_prev_approva_bil_elem_attr bck
                        where bck.fase_bil_elab_id=fase.fase_bil_elab_id
                        and   bck.elem_bck_id=fase.elem_gest_id
                        and   bck.data_cancellazione is null
                        and   bck.validita_fine is null);
      if codResult is not null then raise exception ' Elementi mancanti di backup.'; end if;

      strMessaggio:='Backup vecchia struttura [siac_r_bil_elem_class] per capitoli di gestione equivalente.';
      insert into bck_fase_bil_t_prev_approva_bil_elem_class
      (elem_bck_id,elem_bck_classif_id,
       elem_bck_data_creazione, elem_bck_data_modifica, elem_bck_login_operazione,
       elem_bck_validita_inizio, elem_bck_validita_fine,fase_bil_elab_id,
       ente_proprietario_id, login_operazione,validita_inizio)
      (select fase.elem_gest_id, elem.classif_id,
			  elem.data_creazione, elem.data_modifica, elem.login_operazione,
              elem.validita_inizio, elem.validita_fine,faseBilElabId,
              elem.ente_proprietario_id, loginOperazione,dataInizioVal
	   from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_r_bil_elem_class elem
       where fase.ente_proprietario_id=enteProprietarioId
       and   fase.bil_id=bilancioId
       and   fase.fase_bil_elab_id=faseBilElabId
       and   elem.elem_id=fase.elem_gest_id
       and   fase.data_cancellazione is null
       and   fase.validita_fine is null
       and   fase.elem_prev_id is not null
      );

      codResult:=null;
      strMessaggio:=strMessaggio||' Verifica inserimento.';
      select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase
      where fase.ente_proprietario_id=enteProprietarioId
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_gest_id is not null
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   fase.validita_fine is null
      and   not exists (select 1 from bck_fase_bil_t_prev_approva_bil_elem_class bck
                        where bck.fase_bil_elab_id=fase.fase_bil_elab_id
                        and   bck.elem_bck_id=fase.elem_gest_id
                        and   bck.data_cancellazione is null
                        and   bck.validita_fine is null);
      if codResult is not null then raise exception ' Elementi mancanti di backup.'; end if;

      strMessaggio:='Backup vecchia struttura [siac_r_bil_elem_categoria] per capitoli di gestione equivalente.';
      insert into bck_fase_bil_t_prev_approva_bil_elem_categ
      (elem_bck_id,elem_bck_cat_id,
       elem_bck_data_creazione, elem_bck_data_modifica, elem_bck_login_operazione,
       elem_bck_validita_inizio, elem_bck_validita_fine,fase_bil_elab_id,
       ente_proprietario_id, login_operazione,validita_inizio)
      (select fase.elem_gest_id, elem.elem_cat_id,
			  elem.data_creazione, elem.data_modifica, elem.login_operazione,
              elem.validita_inizio, elem.validita_fine,faseBilElabId,
              elem.ente_proprietario_id, loginOperazione,dataInizioVal
	   from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_r_bil_elem_categoria elem
      where fase.ente_proprietario_id=enteProprietarioId
       and   fase.bil_id=bilancioId
       and   fase.fase_bil_elab_id=faseBilElabId
       and   elem.elem_id=fase.elem_gest_id
       and   fase.data_cancellazione is null
       and   fase.validita_fine is null
       and   fase.elem_gest_id is not null
       and   fase.elem_prev_id is not null
      );

      codResult:=null;
      strMessaggio:=strMessaggio||' Verifica inserimento.';
      select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase
      where fase.ente_proprietario_id=enteProprietarioId
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_gest_id is not null
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   fase.validita_fine is null
      and   not exists (select 1 from bck_fase_bil_t_prev_approva_bil_elem_categ bck
                        where bck.fase_bil_elab_id=fase.fase_bil_elab_id
                        and   bck.elem_bck_id=fase.elem_gest_id
                        and   bck.data_cancellazione is null
                        and   bck.validita_fine is null);
      if codResult is not null then raise exception ' Elementi mancanti di backup.'; end if;

---------

     codResult:=null;
     strMessaggio:='Backup vecchie struttura per capitoli di gestione equivalente esistenti - FINE.';
     insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
      returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;


	 codResult:=null;
     strMessaggio:='Inizio cancellazione logica vecchie strutture gestione esistenti.';
     insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
      returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

     -- cancellazione logica precendenti relazioni
     -- siac_r_bil_elem_stato
/*     strMessaggio:='Cancellazione logica vecchie strutture gestione esistenti [siac_r_bil_elem_stato].';
     update siac_r_bil_elem_stato canc  set
      data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
     where canc.ente_proprietario_id=enteProprietarioId
     and   canc.data_cancellazione is null and canc.validita_fine is null
     and   exists (select 1 from fase_bil_t_prev_approva_str_elem_gest_esiste fase
                   where fase.ente_proprietario_id=enteProprietarioId
                   and   fase.bil_id=bilancioId
                   and   fase.fase_bil_elab_id=faseBilElabId
                   and   fase.elem_gest_id=canc.elem_id
                   and   fase.elem_prev_id is not null
                   and   fase.data_cancellazione is null
                   order by fase.fase_bil_prev_str_esiste_id
                   limit 1);

     -- siac_r_bil_elem_categoria
     strMessaggio:='Cancellazione logica vecchie strutture gestione esistenti [siac_r_bil_elem_categoria].';
     update  siac_r_bil_elem_categoria canc set
          data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
     where canc.ente_proprietario_id=enteProprietarioId
     and   canc.data_cancellazione is null and canc.validita_fine is null
     and   exists (select 1 from fase_bil_t_prev_approva_str_elem_gest_esiste fase
                   where fase.ente_proprietario_id=enteProprietarioId
                   and   fase.bil_id=bilancioId
                   and   fase.fase_bil_elab_id=faseBilElabId
                   and   fase.elem_gest_id=canc.elem_id
                   and   fase.elem_prev_id is not null
                   and   fase.data_cancellazione is null
                   order by fase.fase_bil_prev_str_esiste_id
                   limit 1);
     -- siac_r_bil_elem_attr
     strMessaggio:='Cancellazione logica vecchie strutture gestione esistenti [siac_r_bil_elem_attr].';
     update siac_r_bil_elem_attr canc set
          data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
     where canc.ente_proprietario_id=enteProprietarioId
     and   canc.data_cancellazione is null and canc.validita_fine is null
     and   exists (select 1 from fase_bil_t_prev_approva_str_elem_gest_esiste fase
                   where fase.ente_proprietario_id=enteProprietarioId
                   and   fase.bil_id=bilancioId
                   and   fase.fase_bil_elab_id=faseBilElabId
                   and   fase.elem_gest_id=canc.elem_id
                   and   fase.elem_prev_id is not null
                   and   fase.data_cancellazione is null
                   order by fase.fase_bil_prev_str_esiste_id
                   limit 1);

     -- siac_r_bil_elem_class
     strMessaggio:='Cancellazione logica vecchie strutture gestione esistenti [siac_r_bil_elem_class].';
     update siac_r_bil_elem_class canc set
              data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
     where canc.ente_proprietario_id=enteProprietarioId
     and   canc.data_cancellazione is null and canc.validita_fine is null
     and   exists (select 1 from fase_bil_t_prev_approva_str_elem_gest_esiste fase
                   where fase.ente_proprietario_id=enteProprietarioId
                   and   fase.bil_id=bilancioId
                   and   fase.fase_bil_elab_id=faseBilElabId
                   and   fase.elem_gest_id=canc.elem_id
                   and   fase.elem_prev_id is not null
                   and   fase.data_cancellazione is null
                   order by fase.fase_bil_prev_str_esiste_id
                   limit 1);*/
/* 31.07.2017 Sofia - gestione vincoli atti di legge commentata
     -- siac_r_vincolo_bil_elem
     strMessaggio:='Cancellazione logica vecchie strutture gestione esistenti [siac_r_vincolo_bil_elem].';
     update siac_r_vincolo_bil_elem canc set
              data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
     where canc.ente_proprietario_id=enteProprietarioId
     and   canc.data_cancellazione is null and canc.validita_fine is null
     and   exists (select 1 from  fase_bil_t_prev_approva_str_elem_gest_esiste fase
                   where fase.ente_proprietario_id=enteProprietarioId
                   and   fase.bil_id=bilancioId
                   and   fase.fase_bil_elab_id=faseBilElabId
                   and   fase.elem_gest_id=canc.elem_id
                   and   fase.elem_prev_id is not null
                   and   fase.data_cancellazione is null
                   order by fase.fase_bil_prev_str_esiste_id
                   limit 1);
  04.03.2019 Sofia jira siac-6630 - tolto commento  **/
     /**  04.03.2019 Sofia jira siac-6630 - inizio   tolto commento **/

     -- siac_r_bil_elem_atto_legge
     strMessaggio:='Cancellazione logica vecchie strutture gestione esistenti [siac_r_bil_elem_atto_legge].';
     update siac_r_bil_elem_atto_legge canc set
              data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
     where canc.ente_proprietario_id=enteProprietarioId
     and   canc.data_cancellazione is null and canc.validita_fine is null
     and   exists (select 1 from fase_bil_t_prev_approva_str_elem_gest_esiste fase
                   where fase.ente_proprietario_id=enteProprietarioId
                   and   fase.bil_id=bilancioId
                   and   fase.fase_bil_elab_id=faseBilElabId
                   and   fase.elem_gest_id=canc.elem_id
                   and   fase.elem_prev_id is not null
                   and   fase.data_cancellazione is null
                   order by fase.fase_bil_prev_str_esiste_id
                   limit 1);
/*  04.03.2019 Sofia jira siac-6630 - tolto commento
31.07.2017 Sofia - chiusura
*/
	 -- siac_r_bil_elem_rel_tempo
     strMessaggio:='Cancellazione logica vecchie strutture gestione esistenti [siac_r_bil_elem_rel_tempo].';
	 update 	siac_r_bil_elem_rel_tempo canc set
		    data_cancellazione=now(), validita_fine=now(), login_operazione=loginOperazione
	 where canc.ente_proprietario_id=enteProprietarioId
     and   canc.data_cancellazione is null and canc.validita_fine is null
     and   exists (select 1 from fase_bil_t_prev_approva_str_elem_gest_esiste fase
                   where fase.ente_proprietario_id=enteProprietarioId
                   and   fase.bil_id=bilancioId
                   and   fase.fase_bil_elab_id=faseBilElabId
                   and   fase.elem_gest_id=canc.elem_id
                   and   fase.elem_prev_id is not null
                   and   fase.data_cancellazione is null
                   order by fase.fase_bil_prev_str_esiste_id
                   limit 1);

	 codResult:=null;
     strMessaggio:='Fine cancellazione logica vecchie strutture gestione esistenti.';
     insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
      returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

     -- cancellazione logica precendenti relazioni

     -- aggiornamento siac_t_bil_elem
     strMessaggio:='Aggiornamento nuova struttura gestione esistente da previsione equivalente [siac_t_bil_elem].';
     update siac_t_bil_elem gest set
     (elem_desc, elem_desc2, ordine, livello, login_operazione)=
     (prev.elem_desc,prev.elem_desc2,prev.ordine,prev.livello,loginOperazione)
     from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_t_bil_elem prev
     where  gest.ente_proprietario_id=enteProprietarioId
     and    gest.elem_id=fase.elem_gest_id
     and    prev.elem_id=fase.elem_prev_id
     and    fase.ente_proprietario_id=enteProprietarioid
     and    fase.bil_id=bilancioId
     and    fase.fase_bil_elab_id=faseBilElabId
     and    fase.data_cancellazione is null
     and    fase.elem_prev_id is not null;

	 codResult:=null;
     insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
      returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

     codResult:=null;
     strMessaggio:='Inizio inserimento nuove strutture gestione esistenti da previsione equivalente.';
     insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
      returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

     -- inserimento nuove relazioni
     -- siac_r_bil_elem_stato
     /*strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_stato].';
     insert into siac_r_bil_elem_stato
     (elem_id,elem_stato_id,validita_inizio,ente_proprietario_id,login_operazione)
     (select fase.elem_gest_id, stato.elem_stato_id , dataInizioVal, stato.ente_proprietario_id, loginOperazione
      from siac_r_bil_elem_stato stato, fase_bil_t_prev_approva_str_elem_gest_esiste fase
      where stato.elem_id=fase.elem_prev_id
      and   fase.ente_proprietario_id=enteProprietarioid
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.data_cancellazione is null
      and   fase.elem_prev_id is not null
      and   stato.data_cancellazione is null
      and   stato.validita_fine is null);*/

      strMessaggio:='Aggiornamento strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_stato].';
      update siac_r_bil_elem_stato statoCor
      set elem_stato_id=stato.elem_stato_id,
          data_modifica=dataInizioVal,
          login_operazione=loginOperazione
      from siac_r_bil_elem_stato stato, fase_bil_t_prev_approva_str_elem_gest_esiste fase
      where stato.elem_id=fase.elem_prev_id
      and   statoCor.elem_id=fase.elem_gest_id
      and   fase.ente_proprietario_id=enteProprietarioid
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.data_cancellazione is null
      and   fase.elem_prev_id is not null
      and   stato.data_cancellazione is null
      and   stato.validita_fine is null
      and   statoCor.data_cancellazione is null
      and   statoCor.validita_fine is null;

     -- siac_r_bil_elem_attr ( escludere FLAG_PER_MEM )
     -- devo cancellare e reinserire
     strMessaggio:='Cancellazione strutture gestione esistenti per reinserimento da previsione equivalente [siac_r_bil_elem_attr].';
     delete from siac_r_bil_elem_attr attr
     using  fase_bil_t_prev_approva_str_elem_gest_esiste fase
     where attr.elem_id=fase.elem_gest_id
     and   fase.ente_proprietario_id=enteProprietarioid
     and   fase.bil_id=bilancioId
     and   fase.fase_bil_elab_id=faseBilElabId
     and   fase.data_cancellazione is null
     and   fase.elem_prev_id is not null
     and   attr.data_cancellazione is null
     and   attr.validita_fine is null;

     strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_attr].';
     insert into siac_r_bil_elem_attr
     (elem_id,attr_id,tabella_id,boolean,percentuale,
      testo,numerico,validita_inizio,
      ente_proprietario_id,login_operazione)
     (select fase.elem_gest_id, attr.attr_id , attr.tabella_id,attr.boolean,attr.percentuale,
            attr.testo,attr.numerico,
            dataInizioVal, attr.ente_proprietario_id, loginOperazione
      from siac_r_bil_elem_attr attr, fase_bil_t_prev_approva_str_elem_gest_esiste fase
      where attr.elem_id=fase.elem_prev_id
      and   attr.attr_id!=flagPerMemAttrId
      and   fase.ente_proprietario_id=enteProprietarioid
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.data_cancellazione is null
      and   fase.elem_prev_id is not null
      and   attr.data_cancellazione is null
      and   attr.validita_fine is null);

     -- siac_r_bil_elem_categoria
/*     strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_categoria].';
     insert into siac_r_bil_elem_categoria
     (elem_id,elem_cat_id,validita_inizio,ente_proprietario_id,login_operazione)
     (select fase.elem_gest_id, cat.elem_cat_id , dataInizioVal, cat.ente_proprietario_id, loginOperazione
      from siac_r_bil_elem_categoria cat, fase_bil_t_prev_approva_str_elem_gest_esiste fase
      where cat.elem_id=fase.elem_prev_id
      and   fase.ente_proprietario_id=enteProprietarioid
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.data_cancellazione is null
      and   fase.elem_prev_id is not null
      and   cat.data_cancellazione is null
      and   cat.validita_fine is null);*/

      strMessaggio:='Aggiornamento strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_categoria].';
      update siac_r_bil_elem_categoria catCor
      set elem_cat_id=cat.elem_cat_id,
          data_modifica=dataInizioVal,
          login_operazione=loginOperazione
      from siac_r_bil_elem_categoria cat, fase_bil_t_prev_approva_str_elem_gest_esiste fase
      where cat.elem_id=fase.elem_prev_id
      and   catCor.elem_id=fase.elem_gest_id
      and   fase.ente_proprietario_id=enteProprietarioid
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.data_cancellazione is null
      and   fase.elem_prev_id is not null
      and   cat.data_cancellazione is null
      and   cat.validita_fine is null
      and   catCor.data_cancellazione is null
      and   catCor.validita_fine is null;


     -- siac_r_bil_elem_class
     -- cancellare e reinserire
     strMessaggio:='Cancellazione strutture gestione esistenti [siac_r_bil_elem_class].';
     delete from siac_r_bil_elem_class class
     using fase_bil_t_prev_approva_str_elem_gest_esiste fase
     where class.elem_id=fase.elem_gest_id
     and   fase.ente_proprietario_id=enteProprietarioid
     and   fase.bil_id=bilancioId
     and   fase.fase_bil_elab_id=faseBilElabId
     and   fase.data_cancellazione is null
     and   fase.elem_prev_id is not null
     and   class.data_cancellazione is null
     and   class.validita_fine is null;

     strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].';
	 insert into siac_r_bil_elem_class
     (elem_id,classif_id,validita_inizio,ente_proprietario_id,login_operazione)
     (select fase.elem_gest_id, class.classif_id , dataInizioVal, class.ente_proprietario_id, loginOperazione
      from siac_r_bil_elem_class class, fase_bil_t_prev_approva_str_elem_gest_esiste fase,siac_t_class c
      where class.elem_id=fase.elem_prev_id
      and   fase.ente_proprietario_id=enteProprietarioid
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      -- JIRA-SIAC-4167 14.11.2016 Anto
      and   c.classif_id=class.classif_id
      and   c.data_cancellazione is null
      and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
      and   fase.data_cancellazione is null
      and   fase.elem_prev_id is not null
      and   class.data_cancellazione is null
      and   class.validita_fine is null);

/* 31.07.2017 Sofia - gestione vincoli atti di legge commentata

      -- siac_r_vincolo_bil_elem
      strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_vincolo_bil_elem].';
 	  insert into siac_r_vincolo_bil_elem
      ( elem_id,vincolo_id, validita_inizio,ente_proprietario_id,login_operazione)
      (select fase.elem_gest_id, v.vincolo_id, dataInizioVal,v.ente_proprietario_id, loginOperazione
       from siac_r_vincolo_bil_elem v,fase_bil_t_prev_approva_str_elem_gest_esiste fase
       where v.elem_id=fase.elem_prev_id
	   and   fase.ente_proprietario_id=enteProprietarioid
       and   fase.bil_id=bilancioId
       and   fase.fase_bil_elab_id=faseBilElabId
	   and   fase.data_cancellazione is null
       and   fase.elem_prev_id is not null
       and   v.data_cancellazione is null
       and   v.validita_fine is null
       );
 04.03.2019 Sofia jira siac-6630 - tolto commento  */

       /**  04.03.2019 Sofia jira siac-6630 - inizio  - tolto commento **/
       -- siac_r_bil_elem_atto_legge
       strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_atto_legge].';
       insert into siac_r_bil_elem_atto_legge
       ( elem_id,attolegge_id, descrizione, gerarchia,finanziamento_inizio,finanziamento_fine,
         validita_inizio,ente_proprietario_id,login_operazione
       )
       ( select fase.elem_gest_id,v.attolegge_id,v.descrizione, v.gerarchia,v.finanziamento_inizio,v.finanziamento_fine,
               dataInizioVal,v.ente_proprietario_id, loginOperazione
         from   siac_r_bil_elem_atto_legge v,fase_bil_t_prev_approva_str_elem_gest_esiste fase
         where v.elem_id=fase.elem_prev_id
	     and   fase.ente_proprietario_id=enteProprietarioid
         and   fase.bil_id=bilancioId
         and   fase.fase_bil_elab_id=faseBilElabId
  	     and   fase.data_cancellazione is null
         and   fase.elem_prev_id is not null
         and   v.data_cancellazione is null
         and   v.validita_fine is null
       );

/*31.07.2017 Sofia - chiusura -  04.03.2019 Sofia jira siac-6630 - inizio  tolto commento
*/
       -- siac_r_bil_elem_rel_tempo
       strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_rel_tempo].';
-- siac-8383 Sofia 14.10.2021 
		-- elem_id_old deve essere ricalcolato in base al suo stesso equivalente di gestione in annobilancio-1
		-- attenzione anche al controllo dopo la insert o da commentare o da correggere	   
/*       insert into siac_r_bil_elem_rel_tempo
       (elem_id, elem_id_old, validita_inizio, ente_proprietario_id,login_operazione)
       ( select fase.elem_gest_id,v.elem_id_old,
               dataInizioVal,v.ente_proprietario_id, loginOperazione
         from   siac_r_bil_elem_rel_tempo v,fase_bil_t_prev_approva_str_elem_gest_esiste fase
         where v.elem_id=fase.elem_prev_id
	     and   fase.ente_proprietario_id=enteProprietarioid
         and   fase.bil_id=bilancioId
         and   fase.fase_bil_elab_id=faseBilElabId
  	     and   fase.data_cancellazione is null
         and   fase.elem_prev_id is not null
         and   v.data_cancellazione is null
         and   v.validita_fine is null
       );*/

       -- siac-8383 Sofia 14.10.2021
       insert into siac_r_bil_elem_rel_tempo
       (elem_id, elem_id_old, validita_inizio, ente_proprietario_id,login_operazione)
       ( select fase.elem_gest_id,enew.elem_id,
               dataInizioVal,v.ente_proprietario_id, loginOperazione
         from   siac_r_bil_elem_rel_tempo v,fase_bil_t_prev_approva_str_elem_gest_esiste fase,
                siac_t_bil_elem e,siac_t_bil_elem enew
         where v.elem_id=fase.elem_prev_id
	     and   fase.ente_proprietario_id=enteProprietarioid
         and   fase.bil_id=bilancioId
         and   fase.fase_bil_elab_id=faseBilElabId
         AND   e.elem_id=v.elem_id_old 
         AND   enew.bil_id=bilancioPrecId
         AND   enew.elem_tipo_id=bilElemGestTipoId
         AND   enew.elem_code=e.elem_code
         AND   enew.elem_code2=e.elem_code2
         AND   enew.elem_code3=e.elem_code3
  	     and   fase.data_cancellazione is null
         and   fase.elem_prev_id is not null
         and   v.data_cancellazione is null
         and   v.validita_fine is NULL
         AND   enew.data_cancellazione IS NULL 
       );
      
       codResult:=null;
       strMessaggio:='Fine inserimento nuove strutture gestione esistenti da previsione equivalente.';
       insert into fase_bil_t_elaborazione_log
       (fase_bil_elab_id,fase_bil_elab_log_operazione,
        validita_inizio, login_operazione, ente_proprietario_id
       )
       values
       (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
        returning fase_bil_elab_log_id into codResult;

       if codResult is null then
      	raise exception ' Errore in inserimento LOG.';
       end if;

       -- verifica dati inseriti
       codResult:=null;
       strMessaggio:='Inizio verifica inserimento nuove strutture gestione esistenti da previsione equivalente.';
       insert into fase_bil_t_elaborazione_log
       (fase_bil_elab_id,fase_bil_elab_log_operazione,
        validita_inizio, login_operazione, ente_proprietario_id
       )
       values
       (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
        returning fase_bil_elab_log_id into codResult;

       if codResult is null then
      	raise exception ' Errore in inserimento LOG.';
       end if;

       codResult:=null;
       strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_stato].Verifica esistenza relazione stati.';
       select 1 into codResult
       from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
       where fase.ente_proprietario_id=enteProprietarioId
--    and   fase.elem_gest_id=elem.elem_id
       and   fase.bil_id=bilancioId
       and   fase.fase_bil_elab_id=faseBilElabId
       and   fase.elem_prev_id is not null
       and   fase.data_cancellazione is null
       and   not exists (select 1 from siac_r_bil_elem_stato stato
                 		 where stato.elem_id=fase.elem_gest_id--elem.elem_id
                         and   stato.data_cancellazione is null
                         and   stato.validita_fine is null
                         order by stato.elem_id
                         limit 1)
       order by fase.fase_bil_prev_str_esiste_id
       limit 1;

       if codResult is not null then
    	raise exception ' Elementi di bilancio assenti di relazione.';
       end if;

	  codResult:=null;
      strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_attr].Verifica esistenza attributi.';
      select 1 into codResult
      from  fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
      where fase.ente_proprietario_id=enteProprietarioId
--    and   fase.elem_gest_id=elem.elem_id
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   not exists (select 1 from siac_r_bil_elem_attr attr
     		 		    where attr.elem_id=fase.elem_gest_id--elem.elem_id
					    and   attr.attr_id!=flagPerMemAttrId
                        and   attr.data_cancellazione is null
                        and   attr.validita_fine is null
                        order by attr.elem_id
                        limit 1)
	  order by fase.fase_bil_prev_str_esiste_id
      limit 1;

      if codResult is not null then
    	raise exception ' Elementi di bilancio assenti di relazione.';
      end if;

	  codResult:=null;
      strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni classificatori.';
      select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
      where fase.ente_proprietario_id=enteProprietarioId
--    and   fase.elem_gest_id=elem.elem_id
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   not exists ( select 1 from siac_r_bil_elem_class class,siac_t_class c
      				     where class.elem_id=fase.elem_gest_id--elem.elem_id
                         and   class.data_cancellazione is null
                         and   class.validita_fine is null

                               -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   c.classif_id=class.classif_id
                          and   c.data_cancellazione is null
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)

                         order by class.elem_id
                         limit 1)
	  order by fase.fase_bil_prev_str_esiste_id
      limit 1;


      if codResult is not null then
    	raise exception ' Elementi di bilancio assenti di relazione.';
      end if;

      codResult:=null;
      strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_categoria].Verifica esistenza relazioni categoria.';
      select distinct 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
      where fase.ente_proprietario_id=enteProprietarioId
--    and   fase.elem_gest_id=elem.elem_id
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   not exists ( select 1 from siac_r_bil_elem_categoria class
                         where class.elem_id=fase.elem_gest_id--elem.elem_id
                         and   class.data_cancellazione is null
                         and   class.validita_fine is null);


      if codResult is not null then
    	raise exception ' Elementi di bilancio assenti di relazione.';
      end if;

	  -- verifica se esistono elementi senza classificatori obbligatori (**)
      -- controlli sui classificatori obbligatori
      -- CL_CDC, CL_CDR
      codResult:=null;
      strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni struttura amministrativa.';
      select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
      where fase.ente_proprietario_id=enteProprietarioId
--    and   fase.elem_gest_id=elem.elem_id
      and   fase.elem_prev_id is not null
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.data_cancellazione is null
      and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
                       where class.elem_id=fase.elem_gest_id--elem.elem_id
                       and   c.classif_id=class.classif_id
                       and   c.classif_tipo_id in (cdcTipoId, cdrTipoId)
                       and   class.data_cancellazione is null
                       and   class.validita_fine is null
                       and   c.data_cancellazione is null
                       and   c.validita_fine is null
                       order by class.elem_id
                       limit 1)
	  order by fase.fase_bil_prev_str_esiste_id
      limit 1;
		/*
      if codResult is not null then
    	raise exception ' Elementi di bilancio assenti di relazione.';
      end if;
		*/

        if codResult is not null then
           strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
           insert into fase_bil_t_prev_apertura_segnala
           (elem_id,
	        elem_code,
			elem_code2,
			elem_code3,
		    bil_id,
		    fase_bil_elab_id,
		    segnala_codice,
			segnala_desc,
			validita_inizio,
			ente_proprietario_id,
		    login_operazione)
           (select fase.elem_gest_id,
                   fase.elem_code,
                   fase.elem_code2,
                   fase.elem_code3,
                   fase.bil_id,
                   faseBilElabId,
                   'SAC',
                   'Sac mancante',
                   dataInizioVal,
                   fase.ente_proprietario_id,
                   loginOperazione
             from fase_bil_t_prev_approva_str_elem_gest_esiste fase
             where fase.ente_proprietario_id=enteProprietarioId
             and   fase.elem_prev_id is not null
             and   fase.bil_id=bilancioId
             and   fase.fase_bil_elab_id=faseBilElabId
             and   fase.data_cancellazione is null
             and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
                                where class.elem_id=fase.elem_gest_id
                                and   c.classif_id=class.classif_id
                                and   c.classif_tipo_id in (cdcTipoId, cdrTipoId)
                                and   class.data_cancellazione is null
                                and   class.validita_fine is null
                                and   c.data_cancellazione is null
                                and   c.validita_fine is null
                                order by class.elem_id
                                limit 1)
            );
          end if;



      -- CL_PDC_FIN_QUINTO, CL_PDC_FIN_QUARTO
      codResult:=null;
	  strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_PDC_FIN_QUARTO||' '||CL_PDC_FIN_QUINTO||'.';

      --02.03.2016 Dani Il classificatore deve essere obbligatoriamente presente solo se capitolo gestione STD
	  select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase
      , siac_r_bil_elem_categoria rcat
	  , siac_d_bil_elem_categoria cat
      where fase.ente_proprietario_id=enteProprietarioId
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   rcat.elem_id=fase.elem_gest_id
      and   rcat.data_cancellazione is null
      and   rcat.validita_fine is null
      and   rcat.elem_cat_id=cat.elem_cat_id
      and   cat.elem_cat_code = CATEGORIA_STD
/*      and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
                     where class.elem_id=fase.elem_prev_id
                     and   c.classif_id=class.classif_id
                     and   c.classif_tipo_id in (pdcFinIVId, pdcFinVId)
                     and   class.data_cancellazione is null
                     and   class.validita_fine is null
                     and   c.data_cancellazione is null
                     and   c.validita_fine is null
                     order by class.elem_id
                     limit 1)*/
      and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
                       where class.elem_id=fase.elem_gest_id
                       and   c.classif_id=class.classif_id
                       and   c.classif_tipo_id in (pdcFinIVId, pdcFinVId)
                       and   class.data_cancellazione is null
                       and   class.validita_fine is null
                       and   c.data_cancellazione is null
                       and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)

                       order by class.elem_id
                       limit 1)
	  order by fase.fase_bil_prev_str_esiste_id
      limit 1;

      /*
      if codResult is not null then
    	raise exception ' Elementi di bilancio assenti di relazione.';
      end if;
		*/
     --  JIRA-SIAC-4167  if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
      if codResult is not null then
          	strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
            insert into fase_bil_t_prev_apertura_segnala
             (elem_id,
	         elem_code,
		 	 elem_code2,
			 elem_code3,
		     bil_id,
		     fase_bil_elab_id,
		     segnala_codice,
			 segnala_desc,
			 validita_inizio,
			 ente_proprietario_id,
		     login_operazione)
            (select fase.elem_gest_id,
                    fase.elem_code,
                    fase.elem_code2,
                    fase.elem_code3,
                    fase.bil_id,
                    faseBilElabId,
                    'PDCFIN',
                    'PdcFin mancante',
                    dataInizioVal,
                    fase.ente_proprietario_id,
                    loginOperazione
              from fase_bil_t_prev_approva_str_elem_gest_esiste fase,
                   siac_r_bil_elem_categoria rcat, siac_d_bil_elem_categoria cat
              where fase.ente_proprietario_id=enteProprietarioId
              and   fase.bil_id=bilancioId
              and   fase.fase_bil_elab_id=faseBilElabId
              and   fase.elem_prev_id is not null
              and   fase.data_cancellazione is null
              and   rcat.elem_id=fase.elem_gest_id
              and   rcat.data_cancellazione is null
              and   rcat.validita_fine is null
              and   rcat.elem_cat_id=cat.elem_cat_id
              and   cat.elem_cat_code = CATEGORIA_STD
              and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
                                 where class.elem_id=fase.elem_gest_id
                                 and   c.classif_id=class.classif_id
                                 and   c.classif_tipo_id in (pdcFinIVId, pdcFinVId)
                                 and   class.data_cancellazione is null
                                 and   class.validita_fine is null
                                 and   c.data_cancellazione is null
                                 and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
                                 and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                                 and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                       order by class.elem_id
                       limit 1)
             );
      end if;

/* 31.07.2017 Sofia gestione vincoli  atti legge commentata
	  codResult:=null;
      strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_vincolo_bil_elem].Verifica esistenza relazioni vincoli.';
      select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase, -- siac_t_bil_elem elem,
           siac_r_vincolo_bil_elem v
      where fase.ente_proprietario_id=enteProprietarioId
--    and   fase.elem_gest_id=elem.elem_id
      and   v.elem_id=fase.elem_prev_id
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   v.data_cancellazione is null
      and   v.validita_fine is null
      and   not exists ( select 1 from siac_r_vincolo_bil_elem class
                         where class.elem_id=fase.elem_gest_id
                         and   class.data_cancellazione is null
                         and   class.validita_fine is null
                         order by class.elem_id
                         limit 1
                       )
	  order by fase.fase_bil_prev_str_esiste_id
      limit 1;


      if codResult is not null then
    	raise exception ' Elementi di bilancio assenti di relazione.';
      end if;
 04.03.2019 Sofia jira siac-6630 - tolto commento */
      /**  04.03.2019 Sofia jira siac-6630 - inizio  - tolto commento **/
	  codResult:=null;
      strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_atto_legge].Verifica esistenza relazioni atti di legge.';
      select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase, --siac_t_bil_elem elem,
           siac_r_bil_elem_atto_legge v
      where fase.ente_proprietario_id=enteProprietarioId
--    and   fase.elem_gest_id=elem.elem_id
      and   v.elem_id=fase.elem_prev_id
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   v.data_cancellazione is null
      and   v.validita_fine is null
      and   not exists ( select 1 from siac_r_bil_elem_atto_legge class
                         where class.elem_id=fase.elem_gest_id--elem.elem_id
                         and   class.data_cancellazione is null
                         and   class.validita_fine is null
                         order by class.elem_id
                         limit 1)
	  order by fase.fase_bil_prev_str_esiste_id
      limit 1;


      if codResult is not null then
    	raise exception ' Elementi di bilancio assenti di relazione.';
      end if;
/*  04.03.2019 Sofia jira siac-6630 - tolto commento
31.07.2017 Sofia - chiusura
*/

      /* 25.10.2021 Sofia SIAC-8380 
	  codResult:=null;
      strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_rel_tempo].Verifica esistenza relazioni.';
      select 1 into codResult
      from fase_bil_t_prev_approva_str_elem_gest_esiste fase, --siac_t_bil_elem elem,
           siac_r_bil_elem_rel_tempo v
      where fase.ente_proprietario_id=enteProprietarioId
--    and   fase.elem_gest_id=elem.elem_id
      and   v.elem_id=fase.elem_prev_id
      and   fase.bil_id=bilancioId
      and   fase.fase_bil_elab_id=faseBilElabId
      and   fase.elem_prev_id is not null
      and   fase.data_cancellazione is null
      and   v.data_cancellazione is null
      and   v.validita_fine is null
      and   not exists ( select 1 from siac_r_bil_elem_rel_tempo class
                         where class.elem_id=fase.elem_gest_id--elem.elem_id
                         and   class.data_cancellazione is null
                         and   class.validita_fine is null
                         order by class.elem_id
                         limit 1)
	  order by fase.fase_bil_prev_str_esiste_id
      limit 1;


      if codResult is not null then
    	raise exception ' Elementi di bilancio assenti di relazione.';
      end if;**/


	  if euElemTipo=TIPO_ELEM_EU then

		-- 02.03.2016 Dani Classificatore necessario solo per capitolo di categoria STD

		-- CL_PROGRAMMA
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_PROGRAMMA||'.';
        select 1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_r_bil_elem_categoria rcat, siac_d_bil_elem_categoria cat
    	where fase.ente_proprietario_id=enteProprietarioId
---	    and   fase.elem_gest_id=elem.elem_id
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
    	and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        and   rcat.elem_id=fase.elem_gest_id
        and   rcat.data_cancellazione is null
        and   rcat.validita_fine is null
        and   rcat.elem_cat_id=cat.elem_cat_id
        and   cat.elem_cat_code = CATEGORIA_STD
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id--elem.elem_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=programmaTipoId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           --order by class.elem_id
                           limit 1)
		--order by fase.fase_bil_prev_str_esiste_id
	    limit 1;
		/*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
		*/

        if codResult is not null then

         strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
         insert into fase_bil_t_prev_apertura_segnala
		 (elem_id,
		  elem_code,
		  elem_code2,
		  elem_code3,
		  bil_id,
		  fase_bil_elab_id,
		  segnala_codice,
		  segnala_desc,
		  validita_inizio,
		  ente_proprietario_id,
	  	  login_operazione)
	      (select fase.elem_gest_id,
                  fase.elem_code,
                  fase.elem_code2,
                  fase.elem_code3,
                  fase.bil_id,
                  faseBilElabId,
                  CL_PROGRAMMA,
                  CL_PROGRAMMA||' mancante',
 	              dataInizioVal,
             	  fase.ente_proprietario_id,
	              loginOperazione
           from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_r_bil_elem_categoria rcat, siac_d_bil_elem_categoria cat
    	   where fase.ente_proprietario_id=enteProprietarioId
           and   fase.bil_id=bilancioId
           and   fase.fase_bil_elab_id=faseBilElabId
    	   and   fase.elem_prev_id is not null
	       and   fase.data_cancellazione is null
           and   rcat.elem_id=fase.elem_gest_id
           and   rcat.data_cancellazione is null
           and   rcat.validita_fine is null
           and   rcat.elem_cat_id=cat.elem_cat_id
           and   cat.elem_cat_code = CATEGORIA_STD
    	   and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
          	                  where class.elem_id=fase.elem_gest_id
            	              and   c.classif_id=class.classif_id
                	          and   c.classif_tipo_id=programmaTipoId
                    	      and   class.data_cancellazione is null
	                          and   class.validita_fine is null
    	                      and   c.data_cancellazione is null
        	                  and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                              and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                              and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           --order by class.elem_id
                           limit 1)
	        );
        end if;


		-- 02.03.2016 Dani Classificatore necessario solo per capitolo di categoria STD
        -- CL_MACROAGGREGATO
        codResult:=null;
	    strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_MACROAGGREGATO||'.';
        select 1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
        , siac_r_bil_elem_categoria rcat
        , siac_d_bil_elem_categoria cat
    	where fase.ente_proprietario_id=enteProprietarioId
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
    	and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        and   rcat.elem_id=fase.elem_gest_id
        and   rcat.data_cancellazione is null
        and   rcat.validita_fine is null
        and   rcat.elem_cat_id=cat.elem_cat_id
        and   cat.elem_cat_code = CATEGORIA_STD
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=macroAggrTipoId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)

                           order by class.elem_id
                           limit 1)
		order by fase.fase_bil_prev_str_esiste_id
	    limit 1;
        /*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
		*/
       if codResult is not null then

      	strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
        insert into fase_bil_t_prev_apertura_segnala
		(elem_id,
	     elem_code,
	     elem_code2,
	     elem_code3,
	     bil_id,
	     fase_bil_elab_id,
	     segnala_codice,
	     segnala_desc,
	     validita_inizio,
	     ente_proprietario_id,
	     login_operazione)
	    (select fase.elem_gest_id,
                fase.elem_code,
                fase.elem_code2,
                fase.elem_code3,
                fase.bil_id,
                faseBilElabId,
                CL_MACROAGGREGATO,
                CL_MACROAGGREGATO||' mancante',
                dataInizioVal,
  	            fase.ente_proprietario_id,
	            loginOperazione
	      from fase_bil_t_prev_approva_str_elem_gest_esiste fase,
               siac_r_bil_elem_categoria rcat, siac_d_bil_elem_categoria cat
    	  where fase.ente_proprietario_id=enteProprietarioId
          and   fase.bil_id=bilancioId
          and   fase.fase_bil_elab_id=faseBilElabId
    	  and   fase.elem_prev_id is not null
	      and   fase.data_cancellazione is null
          and   rcat.elem_id=fase.elem_gest_id
          and   rcat.data_cancellazione is null
          and   rcat.validita_fine is null
          and   rcat.elem_cat_id=cat.elem_cat_id
          and   cat.elem_cat_code = CATEGORIA_STD
    	  and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	                 where class.elem_id=fase.elem_gest_id
            	             and   c.classif_id=class.classif_id
                             and   c.classif_tipo_id=macroAggrTipoId
                    	     and   class.data_cancellazione is null
	                         and   class.validita_fine is null
    	                     and   c.data_cancellazione is null
        	                 and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                             and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                             and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                             order by class.elem_id
                             limit 1)
         );
      end if;


  	    -- CL_COFOG
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_COFOG||'.';
        select 1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    	where fase.ente_proprietario_id=enteProprietarioId
--	    and   fase.elem_gest_id=elem.elem_id
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
    	and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        -- 02.03.2016 Dani se classificatore definito in previsione deve essere stato ribaltato su gestione
        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	           where class.elem_id=fase.elem_prev_id
                       and   c.classif_id=class.classif_id
               	       and   c.classif_tipo_id=cofogTipoId
                  	   and   class.data_cancellazione is null
	                   and   class.validita_fine is null
    	               and   c.data_cancellazione is null
        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                       order by class.elem_id
                       limit 1)
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id--elem.elem_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=cofogTipoId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           order by class.elem_id
                           limit 1)
		order by fase.fase_bil_prev_str_esiste_id
	    limit 1;
/*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
*/

		if codResult is not null then
           strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
       	   insert into fase_bil_t_prev_apertura_segnala
           (elem_id,
            elem_code,
	 	    elem_code2,
	        elem_code3,
		    bil_id,
		    fase_bil_elab_id,
		    segnala_codice,
		    segnala_desc,
		    validita_inizio,
		    ente_proprietario_id,
	  	    login_operazione)
	       (select fase.elem_gest_id,
                   fase.elem_code,
                   fase.elem_code2,
                   fase.elem_code3,
	               fase.bil_id,
     	           faseBilElabId,
	               CL_COFOG,
     	           CL_COFOG||' mancante',
                   dataInizioVal,
                   fase.ente_proprietario_id,
	               loginOperazione
	        from fase_bil_t_prev_approva_str_elem_gest_esiste fase
    	    where fase.ente_proprietario_id=enteProprietarioId
            and   fase.bil_id=bilancioId
            and   fase.fase_bil_elab_id=faseBilElabId
    	    and   fase.elem_prev_id is not null
	        and   fase.data_cancellazione is null
            and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
           	               where class.elem_id=fase.elem_prev_id
                           and   c.classif_id=class.classif_id
               	           and    c.classif_tipo_id=cofogTipoId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
                           and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                           and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                       order by class.elem_id
                       limit 1)
      	   and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
         	                  where class.elem_id=fase.elem_gest_id
            	              and   c.classif_id=class.classif_id
                	          and   c.classif_tipo_id=cofogTipoId
                    	      and   class.data_cancellazione is null
	                          and   class.validita_fine is null
    	                      and   c.data_cancellazione is null
        	                  and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                              and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                              and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           order by class.elem_id
                           limit 1)
           );
        end if;

 	    -- CL_RICORRENTE_SPESA
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_RICORRENTE_SPESA||'.';
        select  1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    	where fase.ente_proprietario_id=enteProprietarioId
--	    and   fase.elem_gest_id=elem.elem_id
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
    	and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        -- 02.03.2016 Dani se classificatore definito in previsione deve essere stato ribaltato su gestione
        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	           where class.elem_id=fase.elem_prev_id
                       and   c.classif_id=class.classif_id
               	       and   c.classif_tipo_id=ricorrenteSpesaId
                  	   and   class.data_cancellazione is null
	                   and   class.validita_fine is null
    	               and   c.data_cancellazione is null
        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                       order by class.elem_id
                       limit 1)
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id--elem.elem_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=ricorrenteSpesaId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           order by class.elem_id
                           limit 1)
		order by fase.fase_bil_prev_str_esiste_id
	    limit 1;
/*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
*/

          if codResult is not null then
              strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
       	      insert into fase_bil_t_prev_apertura_segnala
		      (elem_id,
			   elem_code,
			   elem_code2,
			   elem_code3,
			   bil_id,
			   fase_bil_elab_id,
			   segnala_codice,
		 	   segnala_desc,
			   validita_inizio,
			   ente_proprietario_id,
	  		   login_operazione)
	          (select fase.elem_gest_id,
                      fase.elem_code,
                      fase.elem_code2,
                      fase.elem_code3,
                      fase.bil_id,
 	                  faseBilElabId,
	                  CL_RICORRENTE_SPESA,
     	              CL_RICORRENTE_SPESA||' mancante',
         	          dataInizioVal,
             	      fase.ente_proprietario_id,
	                  loginOperazione
               from fase_bil_t_prev_approva_str_elem_gest_esiste fase
       	       where fase.ente_proprietario_id=enteProprietarioId
               and   fase.bil_id=bilancioId
               and   fase.fase_bil_elab_id=faseBilElabId
       	       and   fase.elem_prev_id is not null
	           and   fase.data_cancellazione is null
               and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	                  where class.elem_id=fase.elem_prev_id
                              and   c.classif_id=class.classif_id
                   	          and   c.classif_tipo_id=ricorrenteSpesaId
                  	          and   class.data_cancellazione is null
	                          and   class.validita_fine is null
    	                      and   c.data_cancellazione is null
        	                  and   c.validita_fine is null
                              -- JIRA-SIAC-4167 14.11.2016 Anto
                              and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                              and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                              order by class.elem_id
                              limit 1)
    	      and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	                     where class.elem_id=fase.elem_gest_id--elem.elem_id
            	                 and   c.classif_id=class.classif_id
                	             and   c.classif_tipo_id=ricorrenteSpesaId
                    	         and   class.data_cancellazione is null
	                             and   class.validita_fine is null
    	                         and   c.data_cancellazione is null
        	                     and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                                 and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                                 and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                                 order by class.elem_id
                                 limit 1)
              );
        end if;


        -- CL_SIOPE_SPESA_TERZO
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_SIOPE_SPESA_TERZO||'.';
        select  1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    	where fase.ente_proprietario_id=enteProprietarioId
--	    and   fase.elem_prev_id=elem.elem_id
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
    	and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        and exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	         where class.elem_id=fase.elem_prev_id--elem.elem_id
                     and   c.classif_id=class.classif_id
                     and   c.classif_tipo_id=siopeSpesaTipoId
                     and   class.data_cancellazione is null
	                 and   class.validita_fine is null
    	             and   c.data_cancellazione is null
        	         and   c.validita_fine is null
                          -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                     order by class.elem_id
                     limit 1)
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=siopeSpesaTipoId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           order by class.elem_id
                           limit 1)
		order by fase.fase_bil_prev_str_esiste_id
	    limit 1;
        /*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
		*/
        if codResult is not null then
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select fase.elem_gest_idd,
                           fase.elem_code,
                           fase.elem_code2,
                           fase.elem_code3,
	                       fase.bil_id,
     	                   faseBilElabId,
	                       CL_SIOPE_SPESA_TERZO,
     	                   CL_SIOPE_SPESA_TERZO||' mancante',
         	               dataInizioVal,
             	           fase.ente_proprietario_id,
	                       loginOperazione
	                from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    				where fase.ente_proprietario_id=enteProprietarioId
			        and   fase.bil_id=bilancioId
			        and   fase.fase_bil_elab_id=faseBilElabId
				   	and   fase.elem_prev_id is not null
				    and   fase.data_cancellazione is null
			        and exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        				         where class.elem_id=fase.elem_prev_id--elem.elem_id
			                     and   c.classif_id=class.classif_id
				                 and   c.classif_tipo_id=siopeSpesaTipoId
			                     and   class.data_cancellazione is null
				                 and   class.validita_fine is null
			    	             and   c.data_cancellazione is null
			        	         and   c.validita_fine is null
            		              -- JIRA-SIAC-4167 14.11.2016 Anto
		                         and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
        		                 and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                			     order by class.elem_id
			                     limit 1)
			    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        				               where class.elem_id=fase.elem_gest_id
            	        			   and   c.classif_id=class.classif_id
			                	       and   c.classif_tipo_id=siopeSpesaTipoId
			                    	   and   class.data_cancellazione is null
				                       and   class.validita_fine is null
			    	                   and   c.data_cancellazione is null
			        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
            				           and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
				                       and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
			                           order by class.elem_id
            				          limit 1)
                   );

              end if;

 	    -- CL_TRANSAZIONE_UE_SPESA
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_TRANSAZIONE_UE_SPESA||'.';
        select  1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    	where fase.ente_proprietario_id=enteProprietarioId
--	    and   fase.elem_gest_id=elem.elem_id
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
    	and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        -- 02.03.2016 Dani se classificatore definito in previsione deve essere stato ribaltato su gestione
        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	           where class.elem_id=fase.elem_prev_id
                       and   c.classif_id=class.classif_id
               	       and   c.classif_tipo_id=transazioneUeSpesaId
                  	   and   class.data_cancellazione is null
	                   and   class.validita_fine is null
    	               and   c.data_cancellazione is null
        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                       order by class.elem_id
                       limit 1)
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id--elem.elem_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=transazioneUeSpesaId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           order by class.elem_id
                           limit 1)
		order by fase.fase_bil_prev_str_esiste_id
	    limit 1;
        /*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
        */
        if codResult is not null then
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select fase.elem_gest_id,
                           fase.elem_code,
                           fase.elem_code2,
                           fase.elem_code3,
	                       fase.bil_id,
     	                   faseBilElabId,
	                       CL_TRANSAZIONE_UE_SPESA,
     	                   CL_TRANSAZIONE_UE_SPESA||' mancante',
         	               dataInizioVal,
             	           fase.ente_proprietario_id,
	                       loginOperazione
	                from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    				where fase.ente_proprietario_id=enteProprietarioId
			        and   fase.bil_id=bilancioId
			        and   fase.fase_bil_elab_id=faseBilElabId
			    	and   fase.elem_prev_id is not null
				    and   fase.data_cancellazione is null
			        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        				           where class.elem_id=fase.elem_prev_id
			                       and   c.classif_id=class.classif_id
            			   	       and   c.classif_tipo_id=transazioneUeSpesaId
			                  	   and   class.data_cancellazione is null
	        			           and   class.validita_fine is null
			    	               and   c.data_cancellazione is null
			        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
            		               and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
		                           and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
			                       order by class.elem_id
			                       limit 1)
			    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        				               where class.elem_id=fase.elem_gest_id--elem.elem_id
            	        			   and   c.classif_id=class.classif_id
			                	       and   c.classif_tipo_id=transazioneUeSpesaId
            			        	   and   class.data_cancellazione is null
	                    			   and   class.validita_fine is null
			    	                   and   c.data_cancellazione is null
        				               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                        			  and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
			                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
            			              order by class.elem_id
                        			   limit 1)
                   );
              end if;





     else
        -- CL_CATEGORIA
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_CATEGORIA||'.';

        --02.03.2016 Dani Il classificatore deve essere obbligatoriamente presente solo se capitolo STD
        select distinct 1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_r_bil_elem_categoria rcat, siac_d_bil_elem_categoria cat
    	where fase.ente_proprietario_id=enteProprietarioId
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
    	and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        and   rcat.elem_id=fase.elem_gest_id
        and   rcat.data_cancellazione is null
        and   rcat.validita_fine is null
        and   rcat.elem_cat_id=cat.elem_cat_id
        and   cat.elem_cat_code = CATEGORIA_STD
/*        and   exists (    select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_prev_id--elem.elem_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=categoriaTipoId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
--                           order by class.elem_id
                           limit 1)*/
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id--elem.elem_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=categoriaTipoId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
--                           order by class.elem_id
                           limit 1)
--		order by fase.fase_bil_prev_str_esiste_id
--	    limit 1
        ;

        /*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
		*/
       -- JIRA-SIAC-4167 14.11.2016 Sofia
       -- if codResult is null then raise exception ' Nessuno inserimento effettuato.'; end if;
       if codResult is not null then
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select fase.elem_gest_id,
                           fase.elem_code,
                           fase.elem_code2,
                           fase.elem_code3,
	                       fase.bil_id,
     	                   faseBilElabId,
	                       CL_CATEGORIA,
     	                   CL_CATEGORIA||' mancante',
         	               dataInizioVal,
             	           fase.ente_proprietario_id,
	                       loginOperazione
	                from fase_bil_t_prev_approva_str_elem_gest_esiste fase, siac_r_bil_elem_categoria rcat, siac_d_bil_elem_categoria cat
    				where fase.ente_proprietario_id=enteProprietarioId
			        and   fase.bil_id=bilancioId
			        and   fase.fase_bil_elab_id=faseBilElabId
			    	and   fase.elem_prev_id is not null
				    and   fase.data_cancellazione is null
			        and   rcat.elem_id=fase.elem_gest_id
			        and   rcat.data_cancellazione is null
			        and   rcat.validita_fine is null
			        and   rcat.elem_cat_id=cat.elem_cat_id
			        and   cat.elem_cat_code = CATEGORIA_STD
			    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        				               where class.elem_id=fase.elem_gest_id
			            	           and   c.classif_id=class.classif_id
				               	       and   c.classif_tipo_id=categoriaTipoId
			                    	   and   class.data_cancellazione is null
				                       and   class.validita_fine is null
			    	                   and   c.data_cancellazione is null
				       	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
			                           and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
            			               and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
   									 )
                   );

        end if;

     	-- CL_RICORRENTE_ENTRATA
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_RICORRENTE_ENTRATA||'.';
        select  1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    	where fase.ente_proprietario_id=enteProprietarioId
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
--	    and   fase.elem_gest_id=elem.elem_id --Dani 19.02.2016
    	and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        -- 02.03.2016 Dani se classificatore definito in previsione deve essere stato ribaltato su gestione
        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	           where class.elem_id=fase.elem_prev_id
                       and   c.classif_id=class.classif_id
               	       and   c.classif_tipo_id=ricorrenteEntrataId
                  	   and   class.data_cancellazione is null
	                   and   class.validita_fine is null
    	               and   c.data_cancellazione is null
        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                       order by class.elem_id
                       limit 1)
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id--elem.elem_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=ricorrenteEntrataId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           order by class.elem_id
                           limit 1)
		order by fase.fase_bil_prev_str_esiste_id
	    limit 1;
        /*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
		*/
        if codResult is not null then
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select fase.elem_gest_id,
                           fase.elem_code,
                           fase.elem_code2,
                           fase.elem_code3,
	                       fase.bil_id,
     	                   faseBilElabId,
	                       CL_RICORRENTE_ENTRATA,
     	                   CL_RICORRENTE_ENTRATA||' mancante',
         	               dataInizioVal,
             	           fase.ente_proprietario_id,
	                       loginOperazione
	                from fase_bil_t_prev_approva_str_elem_gest_esiste fase
			    	where fase.ente_proprietario_id=enteProprietarioId
				    and   fase.bil_id=bilancioId
			        and   fase.fase_bil_elab_id=faseBilElabId
			    	and   fase.elem_prev_id is not null
				    and   fase.data_cancellazione is null
			        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        				           where class.elem_id=fase.elem_prev_id
			                       and   c.classif_id=class.classif_id
			               	       and   c.classif_tipo_id=ricorrenteEntrataId
			                  	   and   class.data_cancellazione is null
				                   and   class.validita_fine is null
			    	               and   c.data_cancellazione is null
			        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
            		              and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
		                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
        			               order by class.elem_id
                    			   limit 1)
				  	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	    			           where class.elem_id=fase.elem_gest_id
            	    				   and   c.classif_id=class.classif_id
			                	       and   c.classif_tipo_id=ricorrenteEntrataId
            			        	   and   class.data_cancellazione is null
	                    			   and   class.validita_fine is null
			    	                   and   c.data_cancellazione is null
        				               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                        			   and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
			                           and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
              				           order by class.elem_id
                           			limit 1)
                   );

          end if;



	    -- CL_SIOPE_ENTRATA_TERZO
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_SIOPE_ENTRATA_TERZO||'.';
        select  1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    	where fase.ente_proprietario_id=enteProprietarioId
--	    and   fase.elem_prev_id=elem.elem_id
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
    	and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	           where class.elem_id=fase.elem_prev_id
                       and   c.classif_id=class.classif_id
               	       and   c.classif_tipo_id=siopeEntrataTipoId
                  	   and   class.data_cancellazione is null
	                   and   class.validita_fine is null
    	               and   c.data_cancellazione is null
        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                       order by class.elem_id
                       limit 1)
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=siopeEntrataTipoId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           order by class.elem_id
	                       limit 1)
		order by fase.fase_bil_prev_str_esiste_id
	    limit 1;
        /*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
		*/
        if codResult is not null then
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select fase.elem_gest_id,
                           fase.elem_code,
                           fase.elem_code2,
                           fase.elem_code3,
	                       fase.bil_id,
     	                   faseBilElabId,
	                       CL_SIOPE_ENTRATA_TERZO,
     	                   CL_SIOPE_ENTRATA_TERZO||' mancante',
         	               dataInizioVal,
             	           fase.ente_proprietario_id,
	                       loginOperazione
	                from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    				where fase.ente_proprietario_id=enteProprietarioId
			        and   fase.bil_id=bilancioId
			        and   fase.fase_bil_elab_id=faseBilElabId
			    	and   fase.elem_prev_id is not null
				    and   fase.data_cancellazione is null
			        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        				           where class.elem_id=fase.elem_prev_id
			                       and   c.classif_id=class.classif_id
			               	       and   c.classif_tipo_id=siopeEntrataTipoId
			                  	   and   class.data_cancellazione is null
				                   and   class.validita_fine is null
			    	               and   c.data_cancellazione is null
			        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
            		              and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                    		      and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
			                       order by class.elem_id
            			           limit 1)
			    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
			        	               where class.elem_id=fase.elem_gest_id
            				           and   c.classif_id=class.classif_id
			                	       and   c.classif_tipo_id=siopeEntrataTipoId
            			        	   and   class.data_cancellazione is null
				                       and   class.validita_fine is null
			    	                   and   c.data_cancellazione is null
        				               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
				                       and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
 	              				       and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
			                           order by class.elem_id
	        			               limit 1)
                   );
              end if;

	    -- CL_TRANSAZIONE_UE_ENTRATA
        codResult:=null;
        strMessaggio:='Inserimento nuove strutture gestione esistenti da previsione equivalente [siac_r_bil_elem_class].Verifica esistenza relazioni '||CL_TRANSAZIONE_UE_ENTRATA||'.';
        select 1 into codResult
	    from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    	where fase.ente_proprietario_id=enteProprietarioId
--	    and   fase.elem_gest_id=elem.elem_id
        and   fase.bil_id=bilancioId
        and   fase.fase_bil_elab_id=faseBilElabId
        and   fase.elem_prev_id is not null
	    and   fase.data_cancellazione is null
        -- 02.03.2016 Dani se classificatore definito in previsione deve essere stato ribaltato su gestione
        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	           where class.elem_id=fase.elem_prev_id
                       and   c.classif_id=class.classif_id
               	       and   c.classif_tipo_id=transazioneUeEntrataId
                  	   and   class.data_cancellazione is null
	                   and   class.validita_fine is null
    	               and   c.data_cancellazione is null
        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                       order by class.elem_id
                       limit 1)
    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        	               where class.elem_id=fase.elem_gest_id--elem.elem_id
            	           and   c.classif_id=class.classif_id
                	       and   c.classif_tipo_id=transazioneUeEntrataId
                    	   and   class.data_cancellazione is null
	                       and   class.validita_fine is null
    	                   and   c.data_cancellazione is null
        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
                          and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
                          and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                           order by class.elem_id
	                       limit 1)
		order by fase.fase_bil_prev_str_esiste_id
	    limit 1;

        if codResult is not null then
	               strMessaggio:=strMessaggio||' Inserimento segnalazione mancanza classif.';
              	   insert into fase_bil_t_prev_apertura_segnala
		           (elem_id,
			        elem_code,
			 	    elem_code2,
				    elem_code3,
				    bil_id,
				    fase_bil_elab_id,
			        segnala_codice,
		 		    segnala_desc,
				    validita_inizio,
				    ente_proprietario_id,
	  		        login_operazione)
	               (select fase.elem_gest_id,
                           fase.elem_code,
                           fase.elem_code2,
                           fase.elem_code3,
	                       fase.bil_id,
     	                   faseBilElabId,
	                       CL_TRANSAZIONE_UE_ENTRATA,
     	                   CL_TRANSAZIONE_UE_ENTRATA||' mancante',
         	               dataInizioVal,
             	           fase.ente_proprietario_id,
	                       loginOperazione
	                from fase_bil_t_prev_approva_str_elem_gest_esiste fase--, siac_t_bil_elem elem
    				where fase.ente_proprietario_id=enteProprietarioId
			        and   fase.bil_id=bilancioId
			        and   fase.fase_bil_elab_id=faseBilElabId
			        and   fase.elem_prev_id is not null
				    and   fase.data_cancellazione is null
			        and   exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        				           where class.elem_id=fase.elem_prev_id
			                       and   c.classif_id=class.classif_id
			               	       and   c.classif_tipo_id=transazioneUeEntrataId
			                  	   and   class.data_cancellazione is null
				                   and   class.validita_fine is null
			    	               and   c.data_cancellazione is null
			        	           and   c.validita_fine is null
                            -- JIRA-SIAC-4167 14.11.2016 Anto
			                       and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
			                       and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
			                       order by class.elem_id
			                       limit 1)
			    	and   not exists ( select 1 from siac_r_bil_elem_class class , siac_t_class c
        				               where class.elem_id=fase.elem_gest_id
			            	           and   c.classif_id=class.classif_id
			                	       and   c.classif_tipo_id=transazioneUeEntrataId
			                    	   and   class.data_cancellazione is null
				                       and   class.validita_fine is null
			    	                   and   c.data_cancellazione is null
			        	               and   c.validita_fine is null
                                -- JIRA-SIAC-4167 14.11.2016 Anto
            				           and   date_trunc('day',dataInizioValClass)>=date_trunc('day',c.validita_inizio)
				                       and   ( date_trunc('day',dataFineValClass)<=date_trunc('day',c.validita_fine) or c.validita_fine is null)
                			           order by class.elem_id
				                       limit 1)
                   );
         end if;

        /*
	    if codResult is not null then
    		raise exception ' Elementi di bilancio assenti di relazione.';
	    end if;
        */
     end if;

     codResult:=null;
     strMessaggio:='Fine verifica inserimento nuove strutture gestione esistenti da previsione equivalente.';
     insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
      returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

   end if;

 end if;

 strMessaggio:='Aggiornamento fase elaborazione [fase_bil_t_elaborazione].';
 update fase_bil_t_elaborazione set
      fase_bil_elab_esito='IN2',
      fase_bil_elab_esito_msg='ELABORAZIONE FASE BILANCIO '||APPROVA_PREV_SU_GEST||' IN CORSO : AGGIORNAMENTO STRUTTURE COMPLETATO.'
 where fase_bil_elab_id=faseBilElabId;

 codResult:=null;
 insert into fase_bil_t_elaborazione_log
 (fase_bil_elab_id,fase_bil_elab_log_operazione,
  validita_inizio, login_operazione, ente_proprietario_id
 )
 values
 (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
  returning fase_bil_elab_log_id into codResult;

  if codResult is null then
  	raise exception ' Errore in inserimento LOG.';
  end if;


 faseBilElabIdRet:= faseBilElabId;
 messaggioRisultato:=strMessaggioFinale||'OK .';
return;

exception
    when RAISE_EXCEPTION THEN
    	raise notice '% % ERRORE : %',strMessaggioFinale,strMessaggio,
	        	substring(upper(SQLERRM) from 1 for 500);
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'ERRORE :'||' '||substring(upper(SQLERRM) from 1 for 500) ;
        codiceRisultato:=-1;
        return;

	when no_data_found THEN
		raise notice ' % % Nessun elemento trovato.' ,strMessaggioFinale,strMessaggio;
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'Nessun elemento trovato.' ;
        codiceRisultato:=-1;
		return;
	when others  THEN
		raise notice '% % Errore DB % %',strMessaggioFinale,strMessaggio,SQLSTATE,
	        	substring(upper(SQLERRM) from 1 for 50);
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'Errore DB '||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 50) ;
        codiceRisultato:=-1;
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

alter function 
siac.fnc_fasi_bil_prev_approva_struttura 
(
   integer,
   varchar,
   varchar,
   varchar,
   varchar,
   boolean,
   integer,
   varchar,
   timestamp,
   out  integer,
   out  integer,
   out varchar
)   OWNER TO siac;
-- SIAC-8480 Sofia 23.11.2021 fine 


--SIAC-8484 - Maurizio - INIZIO

--Configurazione menu' per i report di Previsione 2022.

--Enti locali
insert into siac_t_azione (
  azione_code,  azione_desc,
  azione_tipo_id,  
  gruppo_azioni_id,  
  urlapplicazione,  nomeprocesso,  nometask ,  verificauo,
  validita_inizio,  validita_fine,  ente_proprietario_id,
  data_creazione,  data_modifica,  data_cancellazione,  login_operazione)
select 'OP-GESREP1-BilPrev-2022', 'Reportistica Bilancio di Previsione 2022 (Enti Locali)',
	(select a.azione_tipo_id from siac_d_azione_tipo a
    	where a.azione_tipo_code='ATTIVITA_SINGOLA'
        	and a.ente_proprietario_id=ente.ente_proprietario_id
            and a.data_cancellazione IS NULL),
    (select b.gruppo_azioni_id from siac_d_gruppo_azioni b
    	where b.gruppo_azioni_code='BIL_CAP_PREV'
        	and b.ente_proprietario_id=ente.ente_proprietario_id
            and b.data_cancellazione IS NULL),
    '/../siacrepapp/azioneRichiesta.do', NULL, NULL , FALSE, 
    now(), NULL, ente.ente_proprietario_id,
    now(), now(), NULL, 'SIAC-8484'
from siac_t_ente_proprietario ente
where ente.data_cancellazione IS NULL
	and not exists (select 1
    	from siac_t_azione az
        where az.ente_proprietario_id=ente.ente_proprietario_id
        	and az.azione_code='OP-GESREP1-BilPrev-2022');  

-- Regione.
insert into   siac_t_azione (
  azione_code,  azione_desc,
  azione_tipo_id,  
  gruppo_azioni_id,  
  urlapplicazione,  nomeprocesso,  nometask ,  verificauo,
  validita_inizio,  validita_fine,  ente_proprietario_id,
  data_creazione,  data_modifica,  data_cancellazione,  login_operazione)
select 'OP-GESREP2-BilPrev-2022', 'Reportistica Bilancio di Previsione 2022 (Regione)',
	(select a.azione_tipo_id from siac_d_azione_tipo a
    	where a.azione_tipo_code='ATTIVITA_SINGOLA'
        	and a.ente_proprietario_id=ente.ente_proprietario_id
            and a.data_cancellazione IS NULL),
    (select b.gruppo_azioni_id from siac_d_gruppo_azioni b
    	where b.gruppo_azioni_code='BIL_CAP_PREV'
        	and b.ente_proprietario_id=ente.ente_proprietario_id
            and b.data_cancellazione IS NULL),
    '/../siacrepapp/azioneRichiesta.do', NULL, NULL , FALSE, 
    now(), NULL, ente.ente_proprietario_id,
    now(), now(), NULL, 'SIAC-8484'
from siac_t_ente_proprietario ente
where ente.data_cancellazione IS NULL
	and not exists (select 1
    	from siac_t_azione az
        where az.ente_proprietario_id=ente.ente_proprietario_id
        	and az.azione_code='OP-GESREP2-BilPrev-2022'); 
			
			
--INSERIMENTO DELLA CONFIGURAZIONE DEI RUOLI COPIANDOLI DALLE CARTELLE 2021.	
insert into siac_r_ruolo_op_azione (
ruolo_op_id ,  azione_id ,  validita_inizio,  validita_fine ,
  ente_proprietario_id ,  data_creazione,  data_modifica ,
  data_cancellazione,  login_operazione )
select ruolo.ruolo_op_id, (select azione_id from siac_t_azione a  
				where a.azione_code='OP-GESREP1-BilPrev-2022'
                	and a.ente_proprietario_id=ruolo.ente_proprietario_id
                    and a.data_cancellazione IS NULL), now(), NULL,
       ruolo.ente_proprietario_id, now(), now(),
       NULL, 'SIAC-8484'
from siac_r_ruolo_op_azione ruolo, 
	siac_t_azione az,
    siac_t_ente_proprietario ente
where ruolo.azione_id=az.azione_id
	and ente.ente_proprietario_id=az.ente_proprietario_id
	and az.azione_code='OP-GESREP1-BilPrev-2021'
    and ruolo.data_cancellazione IS NULL
    and ruolo.validita_fine IS NULL
    and az.data_cancellazione IS NULL
    and az.validita_fine IS NULL
    and ente.data_cancellazione IS NULL
    and ente.validita_fine IS NULL 
    and not exists (select 1
    	from siac_r_ruolo_op_azione ruolo1, 
			siac_t_azione az1
		where ruolo1.azione_id=az1.azione_id
        	and az1.azione_code='OP-GESREP1-BilPrev-2022');		

insert into siac_r_ruolo_op_azione (
ruolo_op_id ,  azione_id ,  validita_inizio,  validita_fine ,
  ente_proprietario_id ,  data_creazione,  data_modifica ,
  data_cancellazione,  login_operazione )
select ruolo.ruolo_op_id, (select azione_id from siac_t_azione a  
				where a.azione_code='OP-GESREP2-BilPrev-2022'
                	and a.ente_proprietario_id=ruolo.ente_proprietario_id
                    and a.data_cancellazione IS NULL), now(), NULL,
       ruolo.ente_proprietario_id, now(), now(),
       NULL, 'SIAC-8484'
from siac_r_ruolo_op_azione ruolo, 
	siac_t_azione az,
    siac_t_ente_proprietario ente
where ruolo.azione_id=az.azione_id
	and ente.ente_proprietario_id=az.ente_proprietario_id
	and az.azione_code='OP-GESREP2-BilPrev-2021'
    and ruolo.data_cancellazione IS NULL
    and ruolo.validita_fine IS NULL
    and az.data_cancellazione IS NULL
    and az.validita_fine IS NULL
    and ente.data_cancellazione IS NULL
    and ente.validita_fine IS NULL 
    and not exists (select 1
    	from siac_r_ruolo_op_azione ruolo1, 
			siac_t_azione az1
		where ruolo1.azione_id=az1.azione_id
        	and az1.azione_code='OP-GESREP2-BilPrev-2022');			
			
--SIAC-8484 - Maurizio - FINE


--SIAC-8250 - Maurizio - INIZIO

CREATE OR REPLACE FUNCTION siac."BILR147_Allegato_B_Fondo_Pluriennale_vincolato_Rend" (
  p_ente_prop_id integer,
  p_anno varchar
)
RETURNS TABLE (
  bil_anno varchar,
  missione_tipo_code varchar,
  missione_tipo_desc varchar,
  missione_code varchar,
  missione_desc varchar,
  programma_tipo_code varchar,
  programma_tipo_desc varchar,
  programma_code varchar,
  programma_desc varchar,
  fondo_plur_anno_prec_a numeric,
  spese_impe_anni_prec_b numeric,
  quota_fond_plur_anni_prec_c numeric,
  spese_da_impeg_anno1_d numeric,
  spese_da_impeg_anno2_e numeric,
  spese_da_impeg_anni_succ_f numeric,
  riacc_colonna_x numeric,
  riacc_colonna_y numeric,
  fondo_plur_anno_g numeric
) AS
$body$
DECLARE

classifBilRec record;
var_fondo_plur_anno_prec_a numeric;
var_spese_impe_anni_prec_b numeric;

annoCapImp varchar;
annoCapImp1 varchar;
annoCapImp2 varchar;
tipoImpComp varchar;
tipoImpCassa varchar;
tipoImpRes varchar;
elemTipoCode varchar;
DEF_NULL	constant varchar:=''; 
RTN_MESSAGGIO varchar(1000):=DEF_NULL;
annoPrec varchar;
annoProspInt integer;
annoBilInt integer;
conflagfpv boolean ;
a_dacapfpv boolean ;
h_dacapfpv boolean ;
flagretrocomp boolean ;

h_count integer :=0;
v_fam_missioneprogramma varchar :='00001';
v_fam_titolomacroaggregato varchar := '00002';
bilancio_id integer;
bilancio_id_anno1 integer;

BEGIN

annoCapImp:= p_anno; 
annoCapImp1:= ((p_anno::INTEGER)+1)::VARCHAR;   
annoCapImp2:= ((p_anno::INTEGER)+2)::VARCHAR; 
annoPrec:= ((p_anno::INTEGER)-1)::VARCHAR; 

TipoImpComp='STA';  -- competenza
TipoImpCassa='SCA'; -- cassa
TipoImpRes='STR';   -- residui
elemTipoCode:='CAP-UG'; -- tipo capitolo gestione

annoBilInt=p_anno::INTEGER;

bil_anno='';
missione_tipo_code='';
missione_tipo_desc='';
missione_code='';
missione_desc='';
programma_tipo_code='';
programma_tipo_desc='';
programma_code='';
programma_desc='';

var_fondo_plur_anno_prec_a=0;
var_spese_impe_anni_prec_b=0;
quota_fond_plur_anni_prec_c=0;
spese_da_impeg_anno1_d=0;
spese_da_impeg_anno2_e=0;
spese_da_impeg_anni_succ_f=0;
fondo_plur_anno_g=0;
var_fondo_plur_anno_prec_a:=0;
var_spese_impe_anni_prec_b=0;
quota_fond_plur_anni_prec_c=0;
spese_da_impeg_anno1_d=0;
spese_da_impeg_anno2_e=0;  
spese_da_impeg_anni_succ_f=0;

--Leggo l'id dell'anno bilancio
select bil.bil_id
into bilancio_id
from siac_t_bil bil,
	siac_t_periodo per
where bil.periodo_id=per.periodo_id
	and bil.ente_proprietario_id=p_ente_prop_id
    and per.anno = p_anno
    and bil.data_cancellazione IS NULL
    and per.data_cancellazione IS NULL;    

--Leggo l'id dell'anno bilancio +1
select bil.bil_id
into bilancio_id_anno1
from siac_t_bil bil,
	siac_t_periodo per
where bil.periodo_id=per.periodo_id
	and bil.ente_proprietario_id=p_ente_prop_id
    and per.anno = annoCapImp1
    and bil.data_cancellazione IS NULL
    and per.data_cancellazione IS NULL;   
            
/*
	11/11/2021 SIAC-8250.
Funzione riscritta per rendere le query piu' leggibili.
In seguito sono state applicate le nuove regole per i vari campi indicate 
nella Jira.

Colonna A: NON MODIFICATA.
	Stanziamento Capitoli di Spesa FPV in Spesa (Anno Bilancio -1).
	Se per un codice PROGRAMMA non esiste un valore allora si prende il valore
    eventualmente caricato sulle variabili.

Colonna B: NON MODIFICATA. 
	Somma Importo VINCOLO Impegni definitivi (D, N) con anno bilancio 
	corrente e anno impegno = anno bilancio con Vincolo FPVCC+ FPVSC.
    
Colonna X: MODIFICATA
	Somma importo Modifiche non annullate su Impegni definitivi (D, N) 
	con anno bilancio corrente e anno impegno = anno bilancio 
    con Vincolo FPVCC o FPVSC
	Modifiche tipo: tutti  tranne ROR reimputazione, REANNO, AGG, RidCoi   
     
Colonna Y: MODIFICATA
	Somma importo Modifiche non annullate su Impegni definitivi (D, N) 
	con anno bilancio corrente e  anno impegno > anno bilancio 
    con Vincolo FPVCC o FPVSC
	Modifiche tipo: tutti  tranne ROR reimputazione, REANNO, AGG, RidCoi.
 
Colonna D: MODIFICATA
    Importo VINCOLO degli impegni con:
    Anno Bilancio corrente, Anno competenza dell’impegno = anno bilancio + 1
    con vincolo verso Accertamento competenza anno bilancio oppure con vinciolo AMM 
    +
    Impegni non nati da aggiudicazione e
    Anno di bilancio= anno corrente +1 e
    Anno di impegno = anno corrente +1 e
    Anno Riaccertamento = anno corrente (SIA DA ROR CHE REANNO).

    Il valore da considerare e' l'importo iniziale dell’impegno 
    con Impegno origine esercizio anno bilancio SENZA VINCOLO O CON VINCOLO VERSO 
    ACCERTAMENTO /AMM 
    (COMPET. anno bilancio -cioe' verso anno accertamento anno bilancio) 
    QUINDI NON SONO DA PRENDERE GLI IMPEGNI REIMPUTATI IL CUI IMPEGNO ORIGINE 
    ERA VINCOLATO A FPVCC/FPVSC  E NON SONO DA CONSIDERARE GLI IMPEGNI CHE 
    NASCONO NEL anno bilancio+1 A SEGUITO DI RIDUZIONE PER AGGIUDICAZIONE  
       
Colonna E: MODIFICATA
	Come colonna D ma gli anni sono anno bilancio +2
    
Colonna F: MODIFICATA
	Come colonna D ma gli anni sono > anno bilancio +2    

Colonna G: NON MODIFICATA
	La formula non e' cambiata (colonna_G =colonna_C+colonna_D+colonna_E+colonna_F)
    ma e' cambiato il modo di calcolare gli addendi.
    
*/        

return query           
with struttura as (
  select v1.missione_tipo_desc			missione_tipo_desc,
          v1.missione_code				missione_code,
          v1.missione_desc				missione_desc,
          v1.programma_tipo_desc		programma_tipo_desc,
          v1.programma_code				programma_code,
          v1.programma_desc				programma_desc,
          v1.programma_id					programma_id,
          v1.ente_proprietario_id
  from "fnc_bilr_struttura_cap_bilancio_spese"(p_ente_prop_id, 
                                                      p_anno, '') v1
		/* 03/08/2021: il seguente controllo era stato inserito nella
           versione originale della procedura.
           Viene lasciato anche se non sono sicuro sia corretto */
        /* ANNA 31-05 inizio */
  where  v1.missione_code::integer <= 19
 		/* ANNA 31-05 fine */  
  group by v1.missione_tipo_desc, v1.missione_code, v1.missione_desc, 
            	v1.programma_tipo_desc, v1.programma_code, v1.programma_desc,
                v1.programma_id,
                v1.ente_proprietario_id 
            order by missione_code,programma_code  ),                      
fpv_anno_prec_da_variabili as (
select  
  importi.repimp_desc programma_code,
 sum(coalesce(importi.repimp_importo,0)) spese_fpv_anni_prec     
from 	siac_t_report					report,
		siac_t_report_importi 			importi,
		siac_r_report_importi 			r_report_importi,		
        siac_t_periodo 					anno_comp
where 	r_report_importi.rep_id			=	report.rep_id
        and r_report_importi.repimp_id		=	importi.repimp_id	
        and importi.periodo_id 				=	anno_comp.periodo_id              	
        and report.ente_proprietario_id		=	p_ente_prop_id
		and importi.bil_id					=	bilancio_id 			
      	and report.rep_codice				=	'BILR147'   				
      	and report.data_cancellazione IS NULL
        and importi.data_cancellazione IS NULL
        and r_report_importi.data_cancellazione IS NULL
        and anno_comp.data_cancellazione IS NULL
        group by importi.repimp_desc),
/*
	22/02/2019: SIAC-6623.
    	E' stato richiesto di estrarre gli importi FPV dell'anno precedente dai capitoli.
        Se per un codice PROGRAMMA non esiste un valore allora si prende il valore
        eventualmente caricato sulle variabili (fpv_anno_prec_da_variabili). 
*/        
 fpv_anno_prec_da_capitoli as (               
select 	 t_class.classif_code programma_code,
	sum(capitolo_importi.elem_det_importo) importo_fpv_anno_prec
from 		siac_t_bil_elem_det 		capitolo_importi,
         	siac_d_bil_elem_det_tipo 	capitolo_imp_tipo,
         	siac_t_periodo 				capitolo_imp_periodo,
            siac_t_bil_elem 			capitolo,
            siac_t_bil					t_bil,
            siac_t_periodo				t_periodo_bil,
            siac_d_bil_elem_tipo 		tipo_elemento,
	 		siac_d_bil_elem_stato 		stato_capitolo, 
     		siac_r_bil_elem_stato 		r_capitolo_stato,
	 		siac_d_bil_elem_categoria 	cat_del_capitolo,
     		siac_r_bil_elem_categoria 	r_cat_capitolo,
            siac_r_bil_elem_class r_bil_elem_class,
            siac_t_class t_class, 
            siac_d_class_tipo d_class_tipo
where capitolo.elem_id = capitolo_importi.elem_id 
	and	capitolo.bil_id = t_bil.bil_id
	and t_periodo_bil.periodo_id =t_bil.periodo_id	
	and	capitolo.elem_tipo_id = tipo_elemento.elem_tipo_id
	and	capitolo_importi.elem_det_tipo_id = capitolo_imp_tipo.elem_det_tipo_id 		
	and	capitolo_imp_periodo.periodo_id = capitolo_importi.periodo_id 
	and	capitolo.elem_id = r_capitolo_stato.elem_id			
	and	r_capitolo_stato.elem_stato_id = stato_capitolo.elem_stato_id
	and	capitolo.elem_id = r_cat_capitolo.elem_id				
	and	r_cat_capitolo.elem_cat_id = cat_del_capitolo.elem_cat_id	
    and d_class_tipo.classif_tipo_id=t_class.classif_tipo_id
    and capitolo.elem_id = r_bil_elem_class.elem_id
    and r_bil_elem_class.classif_id = t_class.classif_id
	and capitolo_importi.ente_proprietario_id = p_ente_prop_id 					
	and	tipo_elemento.elem_tipo_code = 'CAP-UG' -- prendere i capitoli di GESTIONE
	and	t_periodo_bil.anno = annoPrec	--anno bilancio -1	
	and	capitolo_imp_periodo.anno = annoPrec	--anno bilancio -1		  	
	and	stato_capitolo.elem_stato_code = 'VA'								
	and	cat_del_capitolo.elem_cat_code in ('FPV','FPVC')
	and capitolo_imp_tipo.elem_det_tipo_code = 'STA'	
    and d_class_tipo.classif_tipo_code='PROGRAMMA'			
	and	capitolo_importi.data_cancellazione 		is null
	and	capitolo_imp_tipo.data_cancellazione 		is null
	and	capitolo_imp_periodo.data_cancellazione 	is null
	and	capitolo.data_cancellazione 				is null
	and	tipo_elemento.data_cancellazione 			is null
	and	stato_capitolo.data_cancellazione 			is null 
	and	r_capitolo_stato.data_cancellazione 		is null
	and cat_del_capitolo.data_cancellazione 		is null
	and	r_cat_capitolo.data_cancellazione 			is null
	and t_bil.data_cancellazione 					is null
	and t_periodo_bil.data_cancellazione 			is null
    and r_bil_elem_class.data_cancellazione 		is null
    and t_class.data_cancellazione 					is null
    and d_class_tipo.data_cancellazione 		is null        
GROUP BY t_class.classif_code ),
tbimpaprec as (
select 
--sum(coalesce(f.movgest_ts_det_importo,0)) spese_impe_anni_prec
--Spese impegnate negli esercizi precedenti e imputate all'esercizio N e coperte dal fondo pluriennale vincolato
-- si prendono le quote di impegni di competenza   
-- gli impegni considerati devono inoltre essere vincolati a fondo
-- l'importo considerato e' quello attuale
sum(coalesce(r_movgest_ts.movgest_ts_importo ,0)) spese_impe_anni_prec,
 class.classif_code programma_code
          from siac_t_movgest mov,              
            siac_t_movgest_ts mov_ts, 
            siac_t_movgest_ts_det mov_ts_det,
            siac_d_movgest_ts_det_tipo d_mov_ts_det_tipo, 
            siac_t_bil_elem bil_elem, 
            siac_r_movgest_bil_elem r_mov_bil_elem,
            siac_r_movgest_ts_stato r_mov_ts_stato, 
            siac_d_movgest_stato d_mov_stato,
            siac_r_bil_elem_class r_bil_elem_class,
            siac_t_class class, 
            siac_d_class_tipo d_class_tipo, 
            siac_r_movgest_ts_atto_amm r_mov_ts_atto,
            siac_t_atto_amm atto,
            siac_d_movgest_tipo d_mov_tipo,
            siac_r_movgest_ts r_movgest_ts, 
            siac_t_avanzovincolo av_vincolo, 
            siac_d_avanzovincolo_tipo av_vincolo_tipo
          where mov.movgest_id = mov_ts.movgest_id  
          and mov_ts.movgest_ts_id = mov_ts_det.movgest_ts_id
          and mov_ts_det.movgest_ts_det_tipo_id =d_mov_ts_det_tipo.movgest_ts_det_tipo_id
          and d_mov_tipo.movgest_tipo_id=mov.movgest_tipo_id
          and r_mov_ts_stato.movgest_ts_id=mov_ts.movgest_ts_id
          and r_mov_ts_stato.movgest_stato_id=d_mov_stato.movgest_stato_id
          and r_bil_elem_class.classif_id = class.classif_id
          and class.classif_tipo_id=d_class_tipo.classif_tipo_id
          and r_bil_elem_class.elem_id = r_mov_bil_elem.elem_id
          and r_mov_ts_atto.movgest_ts_id=mov_ts.movgest_ts_id
          and r_mov_ts_atto.attoamm_id = atto.attoamm_id
          and bil_elem.elem_id=r_mov_bil_elem.elem_id
          and r_mov_bil_elem.movgest_id=mov.movgest_id 
          and r_movgest_ts.avav_id=av_vincolo.avav_id     
          and av_vincolo.avav_tipo_id=av_vincolo_tipo.avav_tipo_id            
          and mov_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
          and mov.ente_proprietario_id= p_ente_prop_id    
          and mov.bil_id = bilancio_id            
          and d_class_tipo.classif_tipo_code='PROGRAMMA'
          and mov.movgest_anno = annoBilInt 
          and d_mov_ts_det_tipo.movgest_ts_det_tipo_code='I'
          and d_mov_stato.movgest_stato_code in ('D', 'N')
          and d_mov_tipo.movgest_tipo_code='I' --Impegni      
          and av_vincolo_tipo.avav_tipo_code like'FPV%'
          and mov_ts.movgest_ts_id_padre is NULL  
          and r_mov_bil_elem.data_cancellazione is null
          and r_mov_bil_elem.validita_fine is NULL          
          and r_mov_ts_stato.data_cancellazione is null
          and r_mov_ts_stato.validita_fine is null
          and d_mov_tipo.data_cancellazione is null
          and d_mov_tipo.validita_fine is null              
          and r_bil_elem_class.data_cancellazione is null
          and r_bil_elem_class.validita_fine is null
          and r_mov_ts_atto.data_cancellazione is null
          and r_mov_ts_atto.validita_fine is null          
          and r_movgest_ts.data_cancellazione is null
          and r_movgest_ts.validita_fine is null            
          	--21/05/2020 SIAC-7643 
            --aggiunti i test sulle date che mancavano
          and mov.data_cancellazione is null
          and mov.validita_fine is NULL
          and mov_ts.data_cancellazione is null
          and mov_ts.validita_fine is NULL   
          and mov_ts_det.data_cancellazione is null
          and mov_ts_det.validita_fine is NULL   
          and d_mov_ts_det_tipo.data_cancellazione is null
          and d_mov_ts_det_tipo.validita_fine is NULL   
          and bil_elem.data_cancellazione is null
          and bil_elem.validita_fine is NULL   
          and d_mov_stato.data_cancellazione is null
          and d_mov_stato.validita_fine is NULL   
          and class.data_cancellazione is null
          and class.validita_fine is NULL   
          and d_class_tipo.data_cancellazione is null
          and d_class_tipo.validita_fine is NULL   
          and atto.data_cancellazione is null
          and atto.validita_fine is NULL   
          and av_vincolo.data_cancellazione is null
          --and av_vincolo.validita_fine is NULL 
          and av_vincolo_tipo.data_cancellazione is null
          and av_vincolo_tipo.validita_fine is NULL              
          group by class.classif_code
          ),
tbriaccx as (
--Riaccertamento degli impegni di cui alla lettera b) effettuata nel corso dell'eserczio N (cd. economie di impegno)
--riduzioni su impegni di competenza con anno atto minore dell'anno di bilancio 
--e coperti anche solo parzialmente da fondo                                 
  select sum(COALESCE(mov_ts_det_mod.movgest_ts_det_importo,0)*-1) riacc_colonna_x,
   class.classif_code programma_code
      from siac_r_modifica_stato r_mod_stato, 
      	siac_t_movgest_ts_det_mod mov_ts_det_mod,
      	siac_t_movgest_ts mov_ts, 
      	siac_d_modifica_stato d_mod_stato,
        siac_t_movgest mov, 
        siac_d_movgest_tipo d_mov_tipo,       
        siac_t_modifica modif, 
        siac_d_modifica_tipo d_modif_tipo,
        siac_d_modifica_stato d_modif_stato, 
        siac_t_bil_elem t_bil_elem, 
        siac_r_movgest_bil_elem r_mov_bil_elem,
        siac_r_bil_elem_class r_bil_elem_class, 
        siac_t_class class, 
        siac_d_class_tipo d_class_tipo,
        siac_r_movgest_ts_atto_amm r_movgest_ts_atto_amm,
        siac_t_atto_amm atto_amm ,
        siac_r_movgest_ts_stato r_mov_ts_stato, 
        siac_d_movgest_stato d_mov_stato    
      where mov_ts_det_mod.mod_stato_r_id=r_mod_stato.mod_stato_r_id
        and mov_ts_det_mod.movgest_ts_id = mov_ts.movgest_ts_id
        and mov.movgest_tipo_id=d_mov_tipo.movgest_tipo_id
        and d_mod_stato.mod_stato_id=r_mod_stato.mod_stato_id
        and mov.movgest_id=mov_ts.movgest_id        
        and modif.mod_id=r_mod_stato.mod_id
        and modif.mod_tipo_id=d_modif_tipo.mod_tipo_id
        and d_modif_stato.mod_stato_id=r_mod_stato.mod_stato_id
        and r_movgest_ts_atto_amm.movgest_ts_id=mov_ts.movgest_ts_id
        and r_movgest_ts_atto_amm.attoamm_id = atto_amm.attoamm_id
        and t_bil_elem.elem_id=r_mov_bil_elem.elem_id
        and r_mov_bil_elem.movgest_id=mov.movgest_id
        and r_bil_elem_class.elem_id=t_bil_elem.elem_id
        and r_bil_elem_class.classif_id=class.classif_id
        and class.classif_tipo_id=d_class_tipo.classif_tipo_id
        and r_mov_ts_stato.movgest_ts_id = mov_ts_det_mod.movgest_ts_id
        and r_mov_ts_stato.movgest_stato_id = d_mov_stato.movgest_stato_id        
        and r_mod_stato.ente_proprietario_id=p_ente_prop_id
        and mov.bil_id = bilancio_id
        	--anno dell'impegno = anno del bilancio
        and mov.movgest_anno = annoBilInt 
        and d_mod_stato.mod_stato_code='V'
        and d_mov_tipo.movgest_tipo_code='I' 
        and d_modif_stato.mod_stato_code='V'
        --11/11/2021 SIAC-8250.
        --cambiano i filtri sul tipo modifica.
        -- devo prendere le Modifiche tipo:
        --tutte  tranne ROR reimputazione, REANNO, AGG, RidCoi.
        --REIMP e' ROR - Reimputazione 
      /*  and 
        ( d_modif_tipo.mod_tipo_code like  'ECON%'
           or d_modif_tipo.mod_tipo_desc like  'ROR%'
        )      
        and d_modif_tipo.mod_tipo_code <> 'REIMP' */          
        and d_modif_tipo.mod_tipo_code not in('REIMP', 'REANNO',
        		'RIDCOI', 'AGG') 
        and d_class_tipo.classif_tipo_code='PROGRAMMA'
        and d_mov_stato.movgest_stato_code in ('D', 'N')
        and r_mov_ts_stato.data_cancellazione is NULL
        and r_mov_ts_stato.validita_fine is null
        and mov_ts.movgest_ts_id_padre is null
        and r_mod_stato.data_cancellazione is null
        and r_mod_stato.validita_fine is null
        and mov_ts_det_mod.data_cancellazione is null
        and mov_ts_det_mod.validita_fine is null
        and mov_ts.data_cancellazione is null
        and mov_ts.validita_fine is null
        and d_mod_stato.data_cancellazione is null
        and d_mod_stato.validita_fine is null
        and mov.data_cancellazione is null
        and mov.validita_fine is null
        and d_mov_tipo.data_cancellazione is null
        and d_mov_tipo.validita_fine is null
        and modif.data_cancellazione is null
        and modif.validita_fine is null
        and d_modif_tipo.data_cancellazione is null
        and d_modif_tipo.validita_fine is null
        and d_modif_stato.data_cancellazione is null
        and d_modif_stato.validita_fine is null
        and t_bil_elem.data_cancellazione is null
        and t_bil_elem.validita_fine is null
        and r_mov_bil_elem.data_cancellazione is null
        and r_mov_bil_elem.validita_fine is null
        and r_bil_elem_class.data_cancellazione is null
        and r_bil_elem_class.validita_fine is null
        and class.data_cancellazione is null
        and class.validita_fine is null
        and d_class_tipo.data_cancellazione is null
        and d_class_tipo.validita_fine is null
        and r_movgest_ts_atto_amm.data_cancellazione is null
        and r_movgest_ts_atto_amm.validita_fine is null
        and d_mov_stato.data_cancellazione is null
        and d_mov_stato.validita_fine is null
        and exists (select 
                  1 
                  from siac_r_movgest_ts r_movgest_ts, 
                      siac_t_avanzovincolo av_vincolo, 
                      siac_d_avanzovincolo_tipo av_vincolo_tipo
              where r_movgest_ts.avav_id=av_vincolo.avav_id     
                  and av_vincolo.avav_tipo_id=av_vincolo_tipo.avav_tipo_id                                 
                  and mov_ts_det_mod.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                  and r_movgest_ts.ente_proprietario_id=p_ente_prop_id
                  and av_vincolo_tipo.avav_tipo_code like'FPV%' 
                  and r_movgest_ts.data_cancellazione is null
                  and r_movgest_ts.validita_fine is null 
                 )
      group by class.classif_code
      ),
tbriaccy as 
--Riaccertamento degli impegni di cui alla lettera b) effettuata nel corso dell'eserczio N (cd. economie di impegno) su impegni pluriennali finanziati dal FPV e imputati agli esercizi successivi  a N
--riduzioni su impegni di competenza con anno atto minore dell'anno di bilancio 
--e coperti anche solo parzialmente da fondo                 
( select sum(COALESCE(movgest_ts_det_mod.movgest_ts_det_importo,0)*-1) riacc_colonna_y,
	class.classif_code programma_code
      from siac_r_modifica_stato r_mod_stato, 
      siac_t_movgest_ts_det_mod movgest_ts_det_mod,
      siac_t_movgest_ts mov_ts, 
      siac_d_modifica_stato d_mod_stato,
      siac_t_movgest mov, 
      siac_d_movgest_tipo d_mov_tipo, 
      siac_t_modifica modif, 
      siac_d_modifica_tipo d_mod_tipo,
      siac_d_modifica_stato d_modif_stato, 
      siac_t_bil_elem t_bil_elem, 
      siac_r_movgest_bil_elem r_mov_bil_elem,
      siac_r_bil_elem_class r_bil_elem_class, 
      siac_t_class class, 
      siac_d_class_tipo d_class_tipo,
      siac_r_movgest_ts_atto_amm r_mov_ts_atto_amm, 
      siac_t_atto_amm atto_amm ,
      siac_r_movgest_ts_stato r_mov_ts_stato, 
      siac_d_movgest_stato d_mov_stato    
      where movgest_ts_det_mod.mod_stato_r_id=r_mod_stato.mod_stato_r_id
        and movgest_ts_det_mod.movgest_ts_id = mov_ts.movgest_ts_id
        and mov.movgest_tipo_id=d_mov_tipo.movgest_tipo_id
        and d_mod_stato.mod_stato_id=r_mod_stato.mod_stato_id
        and mov.movgest_id=mov_ts.movgest_id        
        and modif.mod_id=r_mod_stato.mod_id
        and modif.mod_tipo_id=d_mod_tipo.mod_tipo_id
        and d_modif_stato.mod_stato_id=r_mod_stato.mod_stato_id
        and r_mov_ts_atto_amm.movgest_ts_id=mov_ts.movgest_ts_id
        and r_mov_ts_atto_amm.attoamm_id = atto_amm.attoamm_id        
        and t_bil_elem.elem_id=r_mov_bil_elem.elem_id
        and r_mov_bil_elem.movgest_id=mov.movgest_id
        and r_bil_elem_class.elem_id=t_bil_elem.elem_id
        and r_bil_elem_class.classif_id=class.classif_id
        and class.classif_tipo_id=d_class_tipo.classif_tipo_id
        and r_mod_stato.ente_proprietario_id=p_ente_prop_id
        and mov.bil_id = bilancio_id
        	--anno dell'impegno > anno del bilancio
        and mov.movgest_anno > annoBilInt 
        and d_mod_stato.mod_stato_code='V'
        and d_mov_tipo.movgest_tipo_code='I'
        and d_modif_stato.mod_stato_code='V'
        --11/11/2021 SIAC-8250.
        --cambiano i filtri sul tipo modifica.
        -- devo prendere le Modifiche tipo:
        --tutte  tranne ROR reimputazione, REANNO, AGG, RidCoi.
        --REIMP e' ROR - Reimputazione         
  /*      and 
        ( d_mod_tipo.mod_tipo_code like  'ECON%'
           or d_mod_tipo.mod_tipo_desc like  'ROR%'
        )
        and d_mod_tipo.mod_tipo_code <> 'REIMP' */
        and d_mod_tipo.mod_tipo_code not in('REIMP', 'REANNO',
        'RIDCOI', 'AGG')         
        and d_class_tipo.classif_tipo_code='PROGRAMMA'
        and r_mov_ts_stato.movgest_ts_id = mov_ts.movgest_ts_id
        and r_mov_ts_stato.movgest_stato_id = d_mov_stato.movgest_stato_id
        and d_mov_stato.movgest_stato_code in ('D', 'N')
        and r_mov_ts_stato.data_cancellazione is NULL
        and r_mov_ts_stato.validita_fine is null
        and mov_ts.movgest_ts_id_padre is null
        and r_mod_stato.data_cancellazione is null
        and r_mod_stato.validita_fine is null
        and movgest_ts_det_mod.data_cancellazione is null
        and movgest_ts_det_mod.validita_fine is null
        and mov_ts.data_cancellazione is null
        and mov_ts.validita_fine is null
        and d_mod_stato.data_cancellazione is null
        and d_mod_stato.validita_fine is null
        and mov.data_cancellazione is null
        and mov.validita_fine is null
        and d_mov_tipo.data_cancellazione is null
        and d_mov_tipo.validita_fine is null
        and modif.data_cancellazione is null
        and modif.validita_fine is null
        and d_mod_tipo.data_cancellazione is null
        and d_mod_tipo.validita_fine is null
        and d_modif_stato.data_cancellazione is null
        and d_modif_stato.validita_fine is null
        and t_bil_elem.data_cancellazione is null
        and t_bil_elem.validita_fine is null
        and r_mov_bil_elem.data_cancellazione is null
        and r_mov_bil_elem.validita_fine is null
        and r_bil_elem_class.data_cancellazione is null
        and r_bil_elem_class.validita_fine is null
        and class.data_cancellazione is null
        and class.validita_fine is null
        and d_class_tipo.data_cancellazione is null
        and d_class_tipo.validita_fine is null
        and r_mov_ts_atto_amm.data_cancellazione is null
        and r_mov_ts_atto_amm.validita_fine is null
        and exists (select 
                  1 
                  from siac_r_movgest_ts r_movgest_ts, 
                  siac_t_avanzovincolo av_vincolo, 
                  siac_d_avanzovincolo_tipo av_vincolo_tipo
              where r_movgest_ts.avav_id=av_vincolo.avav_id     
                  and av_vincolo.avav_tipo_id=av_vincolo_tipo.avav_tipo_id 
                  and mov_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id
                  and r_movgest_ts.ente_proprietario_id=p_ente_prop_id
                  and av_vincolo_tipo.avav_tipo_code like'FPV%'                                      
                  and r_movgest_ts.data_cancellazione is null
                  and r_movgest_ts.validita_fine is null )
      group by class.classif_code
      ),
imp_colonna_d as 
      -- Spese impegnate nell'esercizio N con imputazione all'esercizio N+1 e 
      -- coperte dal fondo pluriennale vincolato
      -- impegni anno + 1 con atto nell'anno legati ad accertamenti 
      -- di competenza oppure ad avanzo
      (
      select sum(x.spese_da_impeg_anno1_d) as spese_da_impeg_anno1_d, 
      x.programma_code as programma_code from (
               ( --impegni dell'anno bilancio con anno = anno bilancio + 1
               	 -- legati accertamenti con anno = anno bilancio
              select sum(COALESCE(r_mov_ts.movgest_ts_importo,0))
                      as spese_da_impeg_anno1_d, 
                      		class.classif_code as programma_code
                        from siac_t_movgest mov,                           
                        siac_t_movgest_ts mov_ts, 
                        siac_t_movgest_ts_det mov_ts_det,
                        siac_d_movgest_ts_det_tipo d_mov_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_mov_bil_elem,
                        siac_r_movgest_ts_stato r_mov_ts_stato, 
                        siac_d_movgest_stato d_mov_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_r_movgest_ts_atto_amm r_mov_ts_atto,
                        siac_t_atto_amm atto, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_mov_ts,                          
                        siac_t_movgest_ts acc_ts,
                        siac_t_movgest acc,
                        siac_r_movgest_ts_stato r_acc_ts_stato,
                        siac_d_movgest_stato d_acc_stato
                      where mov.movgest_id = mov_ts.movgest_id  
                        and mov_ts.movgest_ts_id = mov_ts_det.movgest_ts_id
                        and mov_ts_det.movgest_ts_det_tipo_id =d_mov_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=mov.movgest_tipo_id
                        and r_mov_ts_stato.movgest_ts_id=mov_ts.movgest_ts_id
                        and r_mov_ts_stato.movgest_stato_id=d_mov_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = class.classif_id
                        and class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_mov_bil_elem.elem_id
                        and r_mov_ts_atto.movgest_ts_id=mov_ts_det.movgest_ts_id
                        and r_mov_ts_atto.attoamm_id = atto.attoamm_id                        
                        and t_bil_elem.elem_id=r_mov_bil_elem.elem_id
                        and r_mov_bil_elem.movgest_id=mov.movgest_id 
                        and mov_ts_det.movgest_ts_id = r_mov_ts.movgest_ts_b_id 
                        and r_mov_ts.movgest_ts_a_id = acc_ts.movgest_ts_id
                        and acc_ts.movgest_id = acc.movgest_id
                        and r_acc_ts_stato.movgest_ts_id=acc_ts.movgest_ts_id
                        and r_acc_ts_stato.movgest_stato_id=d_acc_stato.movgest_stato_id                                                
                        and mov.ente_proprietario_id= p_ente_prop_id    
                        and mov.bil_id = bilancio_id  
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and mov.movgest_anno = annoBilInt + 1
                        and d_mov_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_mov_stato.movgest_stato_code in ('D', 'N')
                        and d_mov_tipo.movgest_tipo_code='I' --Impegno
                        and acc.movgest_anno = annoBilInt
                        and d_acc_stato.movgest_stato_code in ('D', 'N')                        
                        and mov_ts.movgest_ts_id_padre is NULL                         
                        and r_mov_bil_elem.data_cancellazione is null
                        and r_mov_bil_elem.validita_fine is NULL          
                        and r_mov_ts_stato.data_cancellazione is null
                        and r_mov_ts_stato.validita_fine is null
                        and mov_ts_det.data_cancellazione is null
                        and mov_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null
                        and r_mov_ts_atto.data_cancellazione is null
                        and r_mov_ts_atto.validita_fine is null                        
                        and r_mov_ts.data_cancellazione is null
                        and r_mov_ts.validita_fine is null                         
                        and acc_ts.movgest_ts_id_padre is null                        
                        and acc.validita_fine is null
                        and acc.data_cancellazione is null
                        and acc_ts.validita_fine is null
                        and acc_ts.data_cancellazione is null                                                
                        and r_acc_ts_stato.validita_fine is null
                        and r_acc_ts_stato.data_cancellazione is null
                        	--21/05/2020 SIAC-7643 
            				--aggiunti i test sulle date che mancavano
                        and mov.validita_fine is null
                        and mov.data_cancellazione is null
                        and mov_ts.validita_fine is null
                        and mov_ts.data_cancellazione is null
                        and d_mov_ts_det_tipo.validita_fine is null
                        and d_mov_ts_det_tipo.data_cancellazione is null
                        and t_bil_elem.validita_fine is null
                        and t_bil_elem.data_cancellazione is null
                        and class.validita_fine is null
                        and class.data_cancellazione is null
                        and d_class_tipo.validita_fine is null
                        and d_class_tipo.data_cancellazione is null
                        and atto.validita_fine is null
                        and atto.data_cancellazione is null                        
                           group by class.classif_code)
              union(
              	 --impegni dell'anno bilancio con anno = anno bilancio + 1
               	 -- legati a vincoli di tipo AAM - Avanzo Vincolato
              select sum(COALESCE(r_mov_ts.movgest_ts_importo,0)) AS
                          spese_da_impeg_anno1_d, 
                          class.classif_code as programma_code
                        from siac_t_movgest mov,  
                            siac_t_movgest_ts mov_ts, 
                            siac_t_movgest_ts_det mov_ts_det,
                            siac_d_movgest_ts_det_tipo d_mov_ts_det_tipo, 
                            siac_t_bil_elem t_bil_elem, 
                            siac_r_movgest_bil_elem r_mov_bil_elem,
                            siac_r_movgest_ts_stato r_mov_ts_stato, 
                            siac_d_movgest_stato d_mov_stato,
                            siac_r_bil_elem_class r_bil_elem_class,
                            siac_t_class class, 
                            siac_d_class_tipo d_class_tipo, 
                            siac_r_movgest_ts_atto_amm r_mov_ts_atto,
                            siac_t_atto_amm atto, 
                            siac_d_movgest_tipo d_mov_tipo,
                            siac_r_movgest_ts r_mov_ts, 
                            siac_t_avanzovincolo av_vincolo, 
                            siac_d_avanzovincolo_tipo av_vincolo_tipo 
                        where mov.movgest_id = mov_ts.movgest_id  
                          and mov_ts.movgest_ts_id = mov_ts_det.movgest_ts_id
                          and mov_ts_det.movgest_ts_det_tipo_id =d_mov_ts_det_tipo.movgest_ts_det_tipo_id
                          and d_mov_tipo.movgest_tipo_id=mov.movgest_tipo_id
                          and r_mov_ts_stato.movgest_ts_id=mov_ts.movgest_ts_id
                          and r_mov_ts_stato.movgest_stato_id=d_mov_stato.movgest_stato_id
                          and r_bil_elem_class.classif_id = class.classif_id
                          and class.classif_tipo_id=d_class_tipo.classif_tipo_id
                          and r_bil_elem_class.elem_id = r_mov_bil_elem.elem_id
                          and r_mov_ts_atto.movgest_ts_id=mov_ts.movgest_ts_id
                          and r_mov_ts_atto.attoamm_id = atto.attoamm_id
                          and t_bil_elem.elem_id=r_mov_bil_elem.elem_id
                          and mov_ts.movgest_ts_id = r_mov_ts.movgest_ts_b_id 
                          and r_mov_bil_elem.movgest_id=mov.movgest_id 
                          and r_mov_ts.avav_id=av_vincolo.avav_id     
                          and av_vincolo.avav_tipo_id=av_vincolo_tipo.avav_tipo_id 
                          and mov.ente_proprietario_id= p_ente_prop_id      
                          and mov.bil_id = bilancio_id            
                          and d_class_tipo.classif_tipo_code='PROGRAMMA'
                          and mov.movgest_anno = annoBilInt + 1
                          and d_mov_ts_det_tipo.movgest_ts_det_tipo_code='A'
                          and d_mov_stato.movgest_stato_code in ('D', 'N')
                          and d_mov_tipo.movgest_tipo_code='I' 
                          and av_vincolo_tipo.avav_tipo_code = 'AAM'
                          --and r.attoamm_anno = p_anno   
                          and mov_ts.movgest_ts_id_padre is NULL                              
                          and r_mov_bil_elem.data_cancellazione is null
                          and r_mov_bil_elem.validita_fine is NULL          
                          and r_mov_ts_stato.data_cancellazione is null
                          and r_mov_ts_stato.validita_fine is null
                          and mov_ts_det.data_cancellazione is null
                          and mov_ts_det.validita_fine is null
                          and d_mov_tipo.data_cancellazione is null
                          and d_mov_tipo.validita_fine is null              
                          and r_bil_elem_class.data_cancellazione is null
                          and r_bil_elem_class.validita_fine is null
                          and r_mov_ts_atto.data_cancellazione is null
                          and r_mov_ts_atto.validita_fine is null                                                                               
                          and r_mov_ts.data_cancellazione is null
                          and r_mov_ts.validita_fine is null 
                              --21/05/2020 SIAC-7643 
                              --aggiunti i test sulle date che mancavano                        
                          and mov.validita_fine is null
                          and mov.data_cancellazione is null
                          and d_mov_ts_det_tipo.validita_fine is null
                          and d_mov_ts_det_tipo.data_cancellazione is null
                          and t_bil_elem.validita_fine is null
                          and t_bil_elem.data_cancellazione is null
                          and d_mov_stato.validita_fine is null
                          and d_mov_stato.data_cancellazione is null
                          and class.validita_fine is null
                          and class.data_cancellazione is null
                          and d_class_tipo.validita_fine is null
                          and d_class_tipo.data_cancellazione is null
                          --and av_vincolo.validita_fine is null
                          and av_vincolo.data_cancellazione is null
                          and av_vincolo_tipo.validita_fine is null
                          and av_vincolo_tipo.data_cancellazione is null
                      group by class.classif_code
              )--- Impegni da riaccertamento - reimputazione nel bilancio successivo 
    		union(
    --   Importo iniziale di impegni in
    --    anno_bilancio=anno corrente +1
    --    anno_impegno=anno corrente +1
    --    che arrivano da rimputazione impegni in anno_bilancio=anno corrente 
    --    esiste movgest_Ts_id in fase_bil_t_reimputazione.movgestnew_ts_id
    --    e fase_bil_t_reimputazione.movgest_ts_id per cui 
    --    non esiste siac_r_movgest_ts, su movgest_ts_b_id (senza vincolo )
    --    oppure esiste vincolo AAM
    --    oppure esiste vincolo su accertamento con anno_accertamento=anno corrente  
	-- Ed inoltre Importo iniziale di impegni in
	--anno_bilancio=anno corrente +1
	--anno_impegno=anno corrente+1
	--che non siano nati da riaggiudicazione quindi movgest_Ts_id che non sia 
    --presente in siac_r_movgest_aggiudicazione.movgest_ts_b_id               
              select sum(COALESCE(mov_ts_det.movgest_ts_det_importo,0)) AS
                    spese_da_impeg_anno1_d, 
                    class.classif_code as programma_code
                from siac_t_movgest mov,  
                siac_t_movgest_ts mov_ts, 
                siac_t_movgest_ts_det mov_ts_det,
                siac_d_movgest_ts_det_tipo d_mov_ts_det_tipo, 
                siac_t_bil_elem t_bil_elem, 
                siac_r_movgest_bil_elem r_mov_bil_elem,
                siac_r_movgest_ts_stato r_mov_ts_stato, 
                siac_d_movgest_stato d_mov_stato,
                siac_r_bil_elem_class r_bil_elem_class,
                siac_t_class class, 
                siac_d_class_tipo d_class_tipo, 
                siac_d_movgest_tipo d_mov_tipo
                where mov.movgest_id = mov_ts.movgest_id  
                  and mov_ts.movgest_ts_id = mov_ts_det.movgest_ts_id
                  and mov_ts_det.movgest_ts_det_tipo_id =d_mov_ts_det_tipo.movgest_ts_det_tipo_id
                  and d_mov_tipo.movgest_tipo_id=mov.movgest_tipo_id
                  and r_mov_ts_stato.movgest_ts_id=mov_ts.movgest_ts_id
                  and r_mov_ts_stato.movgest_stato_id=d_mov_stato.movgest_stato_id
                  and r_bil_elem_class.classif_id = class.classif_id
                  and class.classif_tipo_id=d_class_tipo.classif_tipo_id
                  and r_bil_elem_class.elem_id = r_mov_bil_elem.elem_id
                  and t_bil_elem.elem_id=r_mov_bil_elem.elem_id
                  and r_mov_bil_elem.movgest_id=mov_ts.movgest_id                                                  
                  and mov.ente_proprietario_id= p_ente_prop_id  
                  and mov.bil_id = bilancio_id_anno1 --anno successivo     
                  and d_class_tipo.classif_tipo_code='PROGRAMMA'
                  and mov.movgest_anno = annoBilInt + 1
                  and d_mov_ts_det_tipo.movgest_ts_det_tipo_code='I' --importo iniziale
                  and d_mov_stato.movgest_stato_code <> 'A'
                  and d_mov_tipo.movgest_tipo_code='I'   
                  and mov_ts.movgest_ts_id_padre is NULL    
                  and r_mov_bil_elem.data_cancellazione is null
                  and r_mov_bil_elem.validita_fine is NULL          
                  and r_mov_ts_stato.data_cancellazione is null
                  and r_mov_ts_stato.validita_fine is null
                  and mov_ts_det.data_cancellazione is null
                  and mov_ts_det.validita_fine is null
                  and d_mov_tipo.data_cancellazione is null
                  and d_mov_tipo.validita_fine is null              
                  and r_bil_elem_class.data_cancellazione is null
                  and r_bil_elem_class.validita_fine is null                 
                  and mov.validita_fine is null
                  and mov.data_cancellazione is null
                  and d_mov_ts_det_tipo.validita_fine is null
                  and d_mov_ts_det_tipo.data_cancellazione is null
                  and t_bil_elem.validita_fine is null
                  and t_bil_elem.data_cancellazione is null
                  and d_mov_stato.validita_fine is null
                  and d_mov_stato.data_cancellazione is null
                  and class.validita_fine is null
                  and class.data_cancellazione is null
                  and d_class_tipo.validita_fine is null
                  and d_class_tipo.data_cancellazione is null       
                  and ((mov_ts.movgest_ts_id in  (
                          --impegni che arrivano da reimputazione 
                    select reimp.movgestnew_ts_id
                    from fase_bil_t_reimputazione reimp
                    where reimp.ente_proprietario_id=p_ente_prop_id
                        and reimp.bil_id=bilancio_id  --anno bilancio       
                        and ((--non esiste su siac_r_movgest_ts 
                              not exists (select 1
                                from siac_r_movgest_ts r_mov_ts
                                where r_mov_ts.movgest_ts_b_id= reimp.movgest_ts_id
                                    and r_mov_ts.ente_proprietario_id=p_ente_prop_id
                                    and r_mov_ts.data_cancellazione IS NULL)) OR
                              (--oppure esiste con un vincolo di tipo AAM
                               exists ( select 1
                                from siac_r_movgest_ts r_mov_ts1,
                                  siac_t_avanzovincolo av_vincolo, 
                                  siac_d_avanzovincolo_tipo av_vincolo_tipo   
                                where r_mov_ts1.movgest_ts_b_id= reimp.movgest_ts_id
                                  and r_mov_ts1.avav_id=av_vincolo.avav_id    
                                  and av_vincolo.avav_tipo_id=av_vincolo_tipo.avav_tipo_id
                                  and r_mov_ts1.ente_proprietario_id=p_ente_prop_id
                                  and av_vincolo_tipo.avav_tipo_code='AAM'
                                  and r_mov_ts1.data_cancellazione IS NULL
                                  and av_vincolo.data_cancellazione IS NULL)) OR
                                (--oppure esiste con un vincolo con accertamento anno bilancio
                                 exists (select 1
                                    from siac_r_movgest_ts r_mov_ts2,
                                        siac_t_movgest_ts acc_ts,
                                        siac_t_movgest acc,
                                        siac_r_movgest_ts_stato r_acc_ts_stato,
                                        siac_d_movgest_stato d_acc_stato
                                    where r_mov_ts2.movgest_ts_b_id=reimp.movgest_ts_id
                                        and r_mov_ts2.movgest_ts_a_id = acc_ts.movgest_ts_id
                                        and acc_ts.movgest_id = acc.movgest_id
                                        and r_acc_ts_stato.movgest_ts_id=acc_ts.movgest_ts_id
                                        and r_acc_ts_stato.movgest_stato_id=d_acc_stato.movgest_stato_id 
                                        and r_mov_ts2.ente_proprietario_id=p_ente_prop_id
                                        and acc.movgest_anno = annoBilInt 
                                        and d_acc_stato.movgest_stato_code in ('D', 'N') 
                                        and acc_ts.data_cancellazione IS NULL
                                        and acc.data_cancellazione IS NULL
                                        and r_acc_ts_stato.data_cancellazione IS NULL
                                        and d_acc_stato.data_cancellazione IS NULL))))) AND
              --OPPURE impegni che non devono essere nati da riaggiudicazione
                      (not exists(select 1
                                   from siac_r_movgest_aggiudicazione riagg
                                   where riagg.movgest_id_da=mov_ts.movgest_ts_id
                                    and riagg.ente_proprietario_id=p_ente_prop_id
                                    and riagg.data_cancellazione IS NULL)))
              group by class.classif_code)    
              ) as x
                group by x.programma_code 
            ),
imp_colonna_e as (      
    select sum(x.spese_da_impeg_anno2_e) as spese_da_impeg_anno2_e , 
           x.programma_code as programma_code from (
               ( --impegni dell'anno bilancio con anno = anno bilancio + 2
               	 -- legati accertamenti con anno = anno bilancio
              select sum(COALESCE(r_movgest_ts.movgest_ts_importo,0))
                      as spese_da_impeg_anno2_e, 
                     		 class.classif_code as programma_code
                        from siac_t_movgest mov,  
                        siac_t_movgest_ts mov_ts, 
                        siac_t_movgest_ts_det mov_ts_det,
                        siac_d_movgest_ts_det_tipo d_mov_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_mov_bil_elem,
                        siac_r_movgest_ts_stato r_mov_ts_stato, 
                        siac_d_movgest_stato d_mov_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_r_movgest_ts_atto_amm r_mov_ts_atto,
                        siac_t_atto_amm atto, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, 
                        siac_t_movgest_ts acc_ts,
                        siac_t_movgest acc,
                        siac_r_movgest_ts_stato rstacc,
                        siac_d_movgest_stato dstacc
                where mov.movgest_id = mov_ts.movgest_id  
                        and mov_ts.movgest_ts_id = mov_ts_det.movgest_ts_id
                        and mov_ts_det.movgest_ts_det_tipo_id =d_mov_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=mov.movgest_tipo_id
                        and r_mov_ts_stato.movgest_ts_id=mov_ts.movgest_ts_id
                        and r_mov_ts_stato.movgest_stato_id=d_mov_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = class.classif_id
                        and class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_mov_bil_elem.elem_id
                        and r_mov_ts_atto.movgest_ts_id=mov_ts.movgest_ts_id
                        and r_mov_ts_atto.attoamm_id = atto.attoamm_id
                        and t_bil_elem.elem_id=r_mov_bil_elem.elem_id 
                        and r_mov_bil_elem.movgest_id=mov.movgest_id 
                        and mov_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and r_movgest_ts.movgest_ts_a_id = acc_ts.movgest_ts_id
                        and acc_ts.movgest_id = acc.movgest_id
                        and rstacc.movgest_ts_id=acc_ts.movgest_ts_id
                        and rstacc.movgest_stato_id=dstacc.movgest_stato_id                        
                        and mov.ente_proprietario_id=p_ente_prop_id
                        and mov.bil_id = bilancio_id
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and mov.movgest_anno = annoBilInt + 2
                        and d_mov_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_mov_stato.movgest_stato_code in ('D', 'N')
                        and d_mov_tipo.movgest_tipo_code='I' 
                        and acc.movgest_anno = annoBilInt
                        and dstacc.movgest_stato_code in ('D', 'N')
                        --and atto.attoamm_anno = p_anno   
                        and mov.data_cancellazione is null
                        and mov_ts.data_cancellazione is null
                        and mov_ts.movgest_ts_id_padre is NULL                            
                        and r_mov_bil_elem.data_cancellazione is null
                        and r_mov_bil_elem.validita_fine is NULL          
                        and r_mov_ts_stato.data_cancellazione is null
                        and r_mov_ts_stato.validita_fine is null
                        and mov_ts_det.data_cancellazione is null
                        and mov_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null
                        and r_mov_ts_atto.data_cancellazione is null
                        and r_mov_ts_atto.validita_fine is null                        
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null                         
                        and acc_ts.movgest_ts_id_padre is null                        
                        and acc.validita_fine is null
                        and acc.data_cancellazione is null
                        and acc_ts.validita_fine is null
                        and acc_ts.data_cancellazione is null
                        and rstacc.validita_fine is null
                        and rstacc.data_cancellazione is null
                            --21/05/2020 SIAC-7643 
            				--aggiunti i test sulle date che mancavano                        
                        and d_mov_ts_det_tipo.validita_fine is null
                        and d_mov_ts_det_tipo.data_cancellazione is null
                        and t_bil_elem.validita_fine is null
                        and t_bil_elem.data_cancellazione is null
                        and d_mov_stato.validita_fine is null
                        and d_mov_stato.data_cancellazione is null
                        and class.validita_fine is null
                        and class.data_cancellazione is null
                        and d_class_tipo.validita_fine is null
                        and d_class_tipo.data_cancellazione is null
                        and atto.validita_fine is null
                        and atto.data_cancellazione is null                        
                           group by class.classif_code )
              union(
              	 --impegni dell'anno bilancio con anno = anno bilancio + 2
               	 -- legati a vincoli di tipo AAM - Avanzo Vincolato              
              select sum(COALESCE(r_mov_ts.movgest_ts_importo,0)) AS
                      		spese_da_impeg_anno2_e, 
                      		class.classif_code as programma_code
                        from siac_t_movgest mov,                            
                          siac_t_movgest_ts mov_ts, 
                          siac_t_movgest_ts_det mov_ts_det,
                          siac_d_movgest_ts_det_tipo d_mov_ts_det_tipo, 
                          siac_t_bil_elem t_bil_elem, 
                          siac_r_movgest_bil_elem r_mov_bil_elem,
                          siac_r_movgest_ts_stato r_mov_ts_stato,
                          siac_d_movgest_stato d_mov_stato,
                          siac_r_bil_elem_class r_bil_elem_class,
                          siac_t_class class, 
                          siac_d_class_tipo d_class_tipo, 
                          siac_r_movgest_ts_atto_amm r_mov_ts_atto,
                          siac_t_atto_amm atto, 
                          siac_d_movgest_tipo d_mov_tipo,
                          siac_r_movgest_ts r_mov_ts, 
                          siac_t_avanzovincolo av_vincolo, 
                          siac_d_avanzovincolo_tipo d_av_vincolo_tipo 
                        where mov.movgest_id = mov_ts.movgest_id  
                          and mov_ts.movgest_ts_id = mov_ts_det.movgest_ts_id
                          and mov_ts_det.movgest_ts_det_tipo_id =d_mov_ts_det_tipo.movgest_ts_det_tipo_id
                          and d_mov_tipo.movgest_tipo_id=mov.movgest_tipo_id
                          and r_mov_ts_stato.movgest_ts_id=mov_ts.movgest_ts_id
                          and r_mov_ts_stato.movgest_stato_id=d_mov_stato.movgest_stato_id
                          and r_bil_elem_class.classif_id = class.classif_id
                          and class.classif_tipo_id=d_class_tipo.classif_tipo_id
                          and r_bil_elem_class.elem_id = r_mov_bil_elem.elem_id
                          and r_mov_ts_atto.movgest_ts_id=mov_ts.movgest_ts_id
                          and r_mov_ts_atto.attoamm_id = atto.attoamm_id                          
                          and t_bil_elem.elem_id=r_mov_bil_elem.elem_id
                          and mov_ts.movgest_ts_id = r_mov_ts.movgest_ts_b_id 
                          and r_mov_ts.avav_id=av_vincolo.avav_id     
                          and av_vincolo.avav_tipo_id=d_av_vincolo_tipo.avav_tipo_id 
                          and r_mov_bil_elem.movgest_id=mov.movgest_id 
                          and mov.ente_proprietario_id= p_ente_prop_id     
                          and mov.bil_id = bilancio_id  
                          and d_class_tipo.classif_tipo_code='PROGRAMMA'
                          and mov.movgest_anno = annoBilInt + 2
                          and d_mov_ts_det_tipo.movgest_ts_det_tipo_code='A'
                          and d_mov_stato.movgest_stato_code in ('D', 'N')
                          and d_mov_tipo.movgest_tipo_code='I' 
                          and d_av_vincolo_tipo.avav_tipo_code = 'AAM'
                          --and atto.attoamm_anno = p_anno   
                          and mov_ts.movgest_ts_id_padre is NULL                              
                          and r_mov_bil_elem.data_cancellazione is null
                          and r_mov_bil_elem.validita_fine is NULL          
                          and r_mov_ts_stato.data_cancellazione is null
                          and r_mov_ts_stato.validita_fine is null
                          and mov_ts_det.data_cancellazione is null
                          and mov_ts_det.validita_fine is null
                          and d_mov_tipo.data_cancellazione is null
                          and d_mov_tipo.validita_fine is null              
                          and r_bil_elem_class.data_cancellazione is null
                          and r_bil_elem_class.validita_fine is null
                          and r_mov_ts_atto.data_cancellazione is null
                          and r_mov_ts_atto.validita_fine is null                
                          and r_mov_ts.data_cancellazione is null
                          and r_mov_ts.validita_fine is null
                              --21/05/2020 SIAC-7643 
                              --aggiunti i test sulle date che mancavano                        
                          and mov.validita_fine is null
                          and mov.data_cancellazione is null
                          and d_mov_ts_det_tipo.validita_fine is null
                          and d_mov_ts_det_tipo.data_cancellazione is null
                          and t_bil_elem.validita_fine is null
                          and t_bil_elem.data_cancellazione is null
                          and d_mov_stato.validita_fine is null
                          and d_mov_stato.data_cancellazione is null
                          and class.validita_fine is null
                          and class.data_cancellazione is null
                          and d_class_tipo.validita_fine is null
                          and d_class_tipo.data_cancellazione is null
                          --and av_vincolo.validita_fine is null
                          and av_vincolo.data_cancellazione is null
                          and d_av_vincolo_tipo.validita_fine is null
                          and d_av_vincolo_tipo.data_cancellazione is null  
                          and atto.validita_fine is null
                          and atto.data_cancellazione is null                                                  
                     group by class.classif_code
              )  
               union(
    --   Importo iniziale di impegni in
    --    anno_bilancio=anno corrente +1
    --    anno_impegno=anno corrente +2
    --    che arrivano da rimputazione impegni in anno_bilancio=anno corrente 
    --    esiste movgest_Ts_id in fase_bil_t_reimputazione.movgestnew_ts_id
    --    e fase_bil_t_reimputazione.movgest_ts_id per cui 
    --    non esiste siac_r_movgest_ts, su movgest_ts_b_id (senza vincolo )
    --    oppure esiste vincolo AAM
    --    oppure esiste vincolo su accertamento con anno_accertamento=anno corrente  
	-- Ed inoltre Importo iniziale di impegni in
	--anno_bilancio=anno corrente +1
	--anno_impegno=anno corrente+1
	--che non siano nati da riaggiudicazione quindi movgest_Ts_id che non sia 
    --presente in siac_r_movgest_aggiudicazione.movgest_ts_b_id               
				select sum(COALESCE(mov_ts_det.movgest_ts_det_importo,0)) AS
                    spese_da_impeg_anno1_e, 
                    class.classif_code as programma_code
                from siac_t_movgest mov,  
                siac_t_movgest_ts mov_ts, 
                siac_t_movgest_ts_det mov_ts_det,
                siac_d_movgest_ts_det_tipo d_mov_ts_det_tipo, 
                siac_t_bil_elem t_bil_elem, 
                siac_r_movgest_bil_elem r_mov_bil_elem,
                siac_r_movgest_ts_stato r_mov_ts_stato, 
                siac_d_movgest_stato d_mov_stato,
                siac_r_bil_elem_class r_bil_elem_class,
                siac_t_class class, 
                siac_d_class_tipo d_class_tipo, 
                siac_d_movgest_tipo d_mov_tipo
                where mov.movgest_id = mov_ts.movgest_id  
                  and mov_ts.movgest_ts_id = mov_ts_det.movgest_ts_id
                  and mov_ts_det.movgest_ts_det_tipo_id =d_mov_ts_det_tipo.movgest_ts_det_tipo_id
                  and d_mov_tipo.movgest_tipo_id=mov.movgest_tipo_id
                  and r_mov_ts_stato.movgest_ts_id=mov_ts.movgest_ts_id
                  and r_mov_ts_stato.movgest_stato_id=d_mov_stato.movgest_stato_id
                  and r_bil_elem_class.classif_id = class.classif_id
                  and class.classif_tipo_id=d_class_tipo.classif_tipo_id
                  and r_bil_elem_class.elem_id = r_mov_bil_elem.elem_id
                  and t_bil_elem.elem_id=r_mov_bil_elem.elem_id
                  and r_mov_bil_elem.movgest_id=mov_ts.movgest_id                                                  
                  and mov.ente_proprietario_id= p_ente_prop_id  
                  and mov.bil_id = bilancio_id_anno1 --anno successivo     
                  and d_class_tipo.classif_tipo_code='PROGRAMMA'
                  and mov.movgest_anno = annoBilInt + 2
                  and d_mov_ts_det_tipo.movgest_ts_det_tipo_code='I' --importo iniziale
                  and d_mov_stato.movgest_stato_code <> 'A'
                  and d_mov_tipo.movgest_tipo_code='I'   
                  and mov_ts.movgest_ts_id_padre is NULL    
                  and r_mov_bil_elem.data_cancellazione is null
                  and r_mov_bil_elem.validita_fine is NULL          
                  and r_mov_ts_stato.data_cancellazione is null
                  and r_mov_ts_stato.validita_fine is null
                  and mov_ts_det.data_cancellazione is null
                  and mov_ts_det.validita_fine is null
                  and d_mov_tipo.data_cancellazione is null
                  and d_mov_tipo.validita_fine is null              
                  and r_bil_elem_class.data_cancellazione is null
                  and r_bil_elem_class.validita_fine is null                 
                  and mov.validita_fine is null
                  and mov.data_cancellazione is null
                  and d_mov_ts_det_tipo.validita_fine is null
                  and d_mov_ts_det_tipo.data_cancellazione is null
                  and t_bil_elem.validita_fine is null
                  and t_bil_elem.data_cancellazione is null
                  and d_mov_stato.validita_fine is null
                  and d_mov_stato.data_cancellazione is null
                  and class.validita_fine is null
                  and class.data_cancellazione is null
                  and d_class_tipo.validita_fine is null
                  and d_class_tipo.data_cancellazione is null       
                  and ((mov_ts.movgest_ts_id in  (
                          --impegni che arrivano da reimputazione 
                    select reimp.movgestnew_ts_id
                    from fase_bil_t_reimputazione reimp
                    where reimp.ente_proprietario_id=p_ente_prop_id
                        and reimp.bil_id=bilancio_id  --anno bilancio       
                        and ((--non esiste su siac_r_movgest_ts 
                              not exists (select 1
                                from siac_r_movgest_ts r_mov_ts
                                where r_mov_ts.movgest_ts_b_id= reimp.movgest_ts_id
                                    and r_mov_ts.ente_proprietario_id=p_ente_prop_id
                                    and r_mov_ts.data_cancellazione IS NULL)) OR
                              (--oppure esiste con un vincolo di tipo AAM
                               exists ( select 1
                                from siac_r_movgest_ts r_mov_ts1,
                                  siac_t_avanzovincolo av_vincolo, 
                                  siac_d_avanzovincolo_tipo av_vincolo_tipo   
                                where r_mov_ts1.movgest_ts_b_id= reimp.movgest_ts_id
                                  and r_mov_ts1.avav_id=av_vincolo.avav_id    
                                  and av_vincolo.avav_tipo_id=av_vincolo_tipo.avav_tipo_id
                                  and r_mov_ts1.ente_proprietario_id=p_ente_prop_id
                                  and av_vincolo_tipo.avav_tipo_code='AAM'
                                  and r_mov_ts1.data_cancellazione IS NULL
                                  and av_vincolo.data_cancellazione IS NULL)) OR
                                (--oppure esiste con un vincolo 
                                 --con accertamento anno bilancio
                                 exists (select 1
                                    from siac_r_movgest_ts r_mov_ts2,
                                        siac_t_movgest_ts acc_ts,
                                        siac_t_movgest acc,
                                        siac_r_movgest_ts_stato r_acc_ts_stato,
                                        siac_d_movgest_stato d_acc_stato
                                    where r_mov_ts2.movgest_ts_b_id=reimp.movgest_ts_id
                                        and r_mov_ts2.movgest_ts_a_id = acc_ts.movgest_ts_id
                                        and acc_ts.movgest_id = acc.movgest_id
                                        and r_acc_ts_stato.movgest_ts_id=acc_ts.movgest_ts_id
                                        and r_acc_ts_stato.movgest_stato_id=d_acc_stato.movgest_stato_id 
                                        and r_mov_ts2.ente_proprietario_id=p_ente_prop_id
                                        and acc.movgest_anno = annoBilInt 
                                        and d_acc_stato.movgest_stato_code in ('D', 'N') 
                                        and acc_ts.data_cancellazione IS NULL
                                        and acc.data_cancellazione IS NULL
                                        and r_acc_ts_stato.data_cancellazione IS NULL
                                        and d_acc_stato.data_cancellazione IS NULL))))) AND
              --OPPURE impegni che non devono essere nati da riaggiudicazione
                      (not exists(select 1
                                   from siac_r_movgest_aggiudicazione riagg
                                   where riagg.movgest_id_da=mov_ts.movgest_ts_id
                                    and riagg.ente_proprietario_id=p_ente_prop_id
                                    and riagg.data_cancellazione IS NULL)))
              group by class.classif_code                 
              ) 
              ) as x
                group by x.programma_code 
                ),
imp_colonna_f as (
      select sum(x.spese_da_impeg_anni_succ_f) as spese_da_impeg_anni_succ_f , x.programma_code as programma_code from (
               (
 				 --impegni dell'anno bilancio con anno > anno bilancio + 2
               	 -- legati accertamenti con anno = anno bilancio               
              select sum(COALESCE(r_mov_ts.movgest_ts_importo,0))
                      		as spese_da_impeg_anni_succ_f, 
                      		class.classif_code as programma_code
                        from siac_t_movgest mov,  
                          siac_t_movgest_ts mov_ts, 
                          siac_t_movgest_ts_det mov_ts_det,
                          siac_d_movgest_ts_det_tipo d_mov_ts_det_tipo, 
                          siac_t_bil_elem t_bil_elem, 
                          siac_r_movgest_bil_elem r_mov_bil_elem,
                          siac_r_movgest_ts_stato r_mov_ts_stato, 
                          siac_d_movgest_stato d_mov_stato,
                          siac_r_bil_elem_class r_bil_elem_class,
                          siac_t_class class, 
                          siac_d_class_tipo d_class_tipo, 
                          siac_r_movgest_ts_atto_amm r_mov_ts_atto,
                          siac_t_atto_amm atto, 
                          siac_d_movgest_tipo d_mov_tipo,
                          siac_r_movgest_ts r_mov_ts, 
                          siac_t_movgest_ts acc_ts,
                          siac_t_movgest acc,
                          siac_r_movgest_ts_stato r_acc_ts_stato,
                          siac_d_movgest_stato d_acc_stato
                        where mov.movgest_id = mov_ts.movgest_id  
                            and mov_ts.movgest_ts_id = mov_ts_det.movgest_ts_id
                            and mov_ts_det.movgest_ts_det_tipo_id =d_mov_ts_det_tipo.movgest_ts_det_tipo_id
                            and d_mov_tipo.movgest_tipo_id=mov.movgest_tipo_id
                            and r_mov_ts_stato.movgest_ts_id=mov_ts.movgest_ts_id
                            and r_mov_ts_stato.movgest_stato_id=d_mov_stato.movgest_stato_id
                            and r_bil_elem_class.classif_id = class.classif_id
                            and class.classif_tipo_id=d_class_tipo.classif_tipo_id
                            and r_bil_elem_class.elem_id = r_mov_bil_elem.elem_id
                            and r_mov_ts_atto.movgest_ts_id=mov_ts.movgest_ts_id
                            and r_mov_ts_atto.attoamm_id = atto.attoamm_id
                            and t_bil_elem.elem_id=r_mov_bil_elem.elem_id
                            and mov_ts.movgest_ts_id = r_mov_ts.movgest_ts_b_id
                            and r_mov_ts.movgest_ts_a_id = acc_ts.movgest_ts_id
                            and acc_ts.movgest_id = acc.movgest_id
                            and r_acc_ts_stato.movgest_ts_id=acc_ts.movgest_ts_id
                            and r_acc_ts_stato.movgest_stato_id=d_acc_stato.movgest_stato_id
                            and r_mov_bil_elem.movgest_id=mov.movgest_id 
                            and mov.ente_proprietario_id= p_ente_prop_id 
                            and mov.bil_id = bilancio_id     
                            and d_class_tipo.classif_tipo_code='PROGRAMMA'
                            and mov.movgest_anno > annoBilInt + 2
                            and d_mov_ts_det_tipo.movgest_ts_det_tipo_code='A'
                            and d_mov_stato.movgest_stato_code in ('D', 'N')
                            and d_mov_tipo.movgest_tipo_code='I' 
                            and acc.movgest_anno = annoBilInt
                            and d_acc_stato.movgest_stato_code in ('D', 'N')                        
                            --and atto.attoamm_anno = p_anno   
                            and mov_ts.movgest_ts_id_padre is NULL  
                            and mov_ts.data_cancellazione is null
                            and mov_ts.validita_fine is NULL                           
                            and r_mov_bil_elem.data_cancellazione is null
                            and r_mov_bil_elem.validita_fine is NULL          
                            and r_mov_ts_stato.data_cancellazione is null
                            and r_mov_ts_stato.validita_fine is null
                            and mov_ts_det.data_cancellazione is null
                            and mov_ts_det.validita_fine is null
                            and d_mov_tipo.data_cancellazione is null
                            and d_mov_tipo.validita_fine is null              
                            and r_bil_elem_class.data_cancellazione is null
                            and r_bil_elem_class.validita_fine is null
                            and r_mov_ts_atto.data_cancellazione is null
                            and r_mov_ts_atto.validita_fine is null                         
                            and r_mov_ts.data_cancellazione is null
                            and r_mov_ts.validita_fine is null                         
                            and acc_ts.movgest_ts_id_padre is null                        
                            and acc.validita_fine is null
                            and acc.data_cancellazione is null
                            and acc_ts.validita_fine is null
                            and acc_ts.data_cancellazione is null                                                
                            and r_acc_ts_stato.validita_fine is null
                            and r_acc_ts_stato.data_cancellazione is null                                                
                                --21/05/2020 SIAC-7643 
                                --aggiunti i test sulle date che mancavano                        
                            and mov.validita_fine is null
                            and mov.data_cancellazione is null
                            and d_mov_ts_det_tipo.validita_fine is null
                            and d_mov_ts_det_tipo.data_cancellazione is null
                            and t_bil_elem.validita_fine is null
                            and t_bil_elem.data_cancellazione is null
                            and d_mov_stato.validita_fine is null
                            and d_mov_stato.data_cancellazione is null
                            and class.validita_fine is null
                            and class.data_cancellazione is null
                            and d_class_tipo.validita_fine is null
                            and d_class_tipo.data_cancellazione is null 
                            and atto.validita_fine is null
                            and atto.data_cancellazione is null                                                                                                                                                   
                           group by class.classif_code)
              union(
              	 --impegni dell'anno bilancio con anno > anno bilancio + 2
               	 -- legati a vincoli di tipo AAM - Avanzo Vincolato              
              select sum(COALESCE(r_mov_ts.movgest_ts_importo,0)) AS
                          spese_da_impeg_anni_succ_f, 
                          class.classif_code as programma_code
                        from siac_t_movgest mov,                            
                          siac_t_movgest_ts mov_ts, 
                          siac_t_movgest_ts_det mov_ts_det,
                          siac_d_movgest_ts_det_tipo d_mov_ts_det_tipo, 
                          siac_t_bil_elem t_bil_elem, 
                          siac_r_movgest_bil_elem r_mov_bil_elem,
                          siac_r_movgest_ts_stato r_mov_ts_stato, 
                          siac_d_movgest_stato d_mov_stato,
                          siac_r_bil_elem_class r_bil_elem_class,
                          siac_t_class class, 
                          siac_d_class_tipo d_class_tipo, 
                          siac_r_movgest_ts_atto_amm r_mov_ts_atto,
                          siac_t_atto_amm atto, 
						  siac_d_movgest_tipo d_mov_tipo,
                          siac_r_movgest_ts r_mov_ts, 
                          siac_t_avanzovincolo av_vincolo, 
                          siac_d_avanzovincolo_tipo d_av_vincolo_tipo 	
                        where mov.movgest_id = mov_ts.movgest_id  
                          and mov_ts.movgest_ts_id = mov_ts_det.movgest_ts_id
                          and mov_ts_det.movgest_ts_det_tipo_id =d_mov_ts_det_tipo.movgest_ts_det_tipo_id
                          and d_mov_tipo.movgest_tipo_id=mov.movgest_tipo_id
                          and r_mov_ts_stato.movgest_ts_id=mov_ts.movgest_ts_id
                          and r_mov_ts_stato.movgest_stato_id=d_mov_stato.movgest_stato_id
                          and r_bil_elem_class.classif_id = class.classif_id
                          and class.classif_tipo_id=d_class_tipo.classif_tipo_id
                          and r_bil_elem_class.elem_id = r_mov_bil_elem.elem_id
                          and r_mov_ts_atto.movgest_ts_id=mov_ts.movgest_ts_id
                          and r_mov_ts_atto.attoamm_id = atto.attoamm_id
                          and t_bil_elem.elem_id=r_mov_bil_elem.elem_id
                          and av_vincolo.avav_tipo_id=d_av_vincolo_tipo.avav_tipo_id 
                          and mov_ts.movgest_ts_id = r_mov_ts.movgest_ts_b_id 
                          and r_mov_ts.avav_id=av_vincolo.avav_id  
                          and r_mov_bil_elem.movgest_id=mov.movgest_id 
                          and mov.ente_proprietario_id= p_ente_prop_id    
                          and mov.bil_id = bilancio_id   
                          and d_class_tipo.classif_tipo_code='PROGRAMMA'
                          and mov.movgest_anno > annoBilInt + 2
                          and d_mov_ts_det_tipo.movgest_ts_det_tipo_code='A'
                          and d_mov_stato.movgest_stato_code in ('D', 'N')
                          and d_mov_tipo.movgest_tipo_code='I' 
                          and d_av_vincolo_tipo.avav_tipo_code = 'AAM' 
                          --and atto.attoamm_anno = p_anno   
                          and mov_ts.movgest_ts_id_padre is NULL    
                          and mov_ts.data_cancellazione is null
                          and mov_ts.validita_fine is NULL   
                          and r_mov_bil_elem.data_cancellazione is null
                          and r_mov_bil_elem.validita_fine is NULL          
                          and r_mov_ts_stato.data_cancellazione is null
                          and r_mov_ts_stato.validita_fine is null
                          and mov_ts_det.data_cancellazione is null
                          and mov_ts_det.validita_fine is null
                          and d_mov_tipo.data_cancellazione is null
                          and d_mov_tipo.validita_fine is null              
                          and r_bil_elem_class.data_cancellazione is null
                          and r_bil_elem_class.validita_fine is null
                          and r_mov_ts_atto.data_cancellazione is null
                          and r_mov_ts_atto.validita_fine is null
                          and r_mov_ts.data_cancellazione is null
                          and r_mov_ts.validita_fine is null 
                              --21/05/2020 SIAC-7643 
                              --aggiunti i test sulle date che mancavano                        
                          and mov.validita_fine is null
                          and mov.data_cancellazione is null
                          and d_mov_ts_det_tipo.validita_fine is null
                          and d_mov_ts_det_tipo.data_cancellazione is null
                          and t_bil_elem.validita_fine is null
                          and t_bil_elem.data_cancellazione is null
                          and d_mov_stato.validita_fine is null
                          and d_mov_stato.data_cancellazione is null
                          and class.validita_fine is null
                          and class.data_cancellazione is null
                          and d_class_tipo.validita_fine is null
                          and d_class_tipo.data_cancellazione is null
                          --and av_vincolo.validita_fine is null
                          and av_vincolo.data_cancellazione is null
                          and d_av_vincolo_tipo.validita_fine is null
                          and d_av_vincolo_tipo.data_cancellazione is null   
                          and atto.validita_fine is null
                          and atto.data_cancellazione is null                       
                  group by class.classif_code
              )
              union(
    --   Importo iniziale di impegni in
    --    anno_bilancio=anno corrente +1
    --    anno_impegno > anno corrente +2
    --    che arrivano da rimputazione impegni in anno_bilancio=anno corrente 
    --    esiste movgest_Ts_id in fase_bil_t_reimputazione.movgestnew_ts_id
    --    e fase_bil_t_reimputazione.movgest_ts_id per cui 
    --    non esiste siac_r_movgest_ts, su movgest_ts_b_id (senza vincolo )
    --    oppure esiste vincolo AAM
    --    oppure esiste vincolo su accertamento con anno_accertamento=anno corrente  
	-- Ed inoltre Importo iniziale di impegni in
	--anno_bilancio=anno corrente +1
	--anno_impegno=anno corrente+1
	--che non siano nati da riaggiudicazione quindi movgest_Ts_id che non sia 
    --presente in siac_r_movgest_aggiudicazione.movgest_ts_b_id              
             select sum(COALESCE(mov_ts_det.movgest_ts_det_importo,0)) AS
                    spese_da_impeg_anno1_e, 
                    class.classif_code as programma_code
                from siac_t_movgest mov,  
                siac_t_movgest_ts mov_ts, 
                siac_t_movgest_ts_det mov_ts_det,
                siac_d_movgest_ts_det_tipo d_mov_ts_det_tipo, 
                siac_t_bil_elem t_bil_elem, 
                siac_r_movgest_bil_elem r_mov_bil_elem,
                siac_r_movgest_ts_stato r_mov_ts_stato, 
                siac_d_movgest_stato d_mov_stato,
                siac_r_bil_elem_class r_bil_elem_class,
                siac_t_class class, 
                siac_d_class_tipo d_class_tipo, 
                siac_d_movgest_tipo d_mov_tipo
                where mov.movgest_id = mov_ts.movgest_id  
                  and mov_ts.movgest_ts_id = mov_ts_det.movgest_ts_id
                  and mov_ts_det.movgest_ts_det_tipo_id =d_mov_ts_det_tipo.movgest_ts_det_tipo_id
                  and d_mov_tipo.movgest_tipo_id=mov.movgest_tipo_id
                  and r_mov_ts_stato.movgest_ts_id=mov_ts.movgest_ts_id
                  and r_mov_ts_stato.movgest_stato_id=d_mov_stato.movgest_stato_id
                  and r_bil_elem_class.classif_id = class.classif_id
                  and class.classif_tipo_id=d_class_tipo.classif_tipo_id
                  and r_bil_elem_class.elem_id = r_mov_bil_elem.elem_id
                  and t_bil_elem.elem_id=r_mov_bil_elem.elem_id
                  and r_mov_bil_elem.movgest_id=mov_ts.movgest_id                                                  
                  and mov.ente_proprietario_id= p_ente_prop_id  
                  and mov.bil_id = bilancio_id_anno1 --anno successivo     
                  and d_class_tipo.classif_tipo_code='PROGRAMMA'
                  and mov.movgest_anno > annoBilInt + 2
                  and d_mov_ts_det_tipo.movgest_ts_det_tipo_code='I' --importo iniziale
                  and d_mov_stato.movgest_stato_code <> 'A'
                  and d_mov_tipo.movgest_tipo_code='I'   
                  and mov_ts.movgest_ts_id_padre is NULL    
                  and r_mov_bil_elem.data_cancellazione is null
                  and r_mov_bil_elem.validita_fine is NULL          
                  and r_mov_ts_stato.data_cancellazione is null
                  and r_mov_ts_stato.validita_fine is null
                  and mov_ts_det.data_cancellazione is null
                  and mov_ts_det.validita_fine is null
                  and d_mov_tipo.data_cancellazione is null
                  and d_mov_tipo.validita_fine is null              
                  and r_bil_elem_class.data_cancellazione is null
                  and r_bil_elem_class.validita_fine is null                 
                  and mov.validita_fine is null
                  and mov.data_cancellazione is null
                  and d_mov_ts_det_tipo.validita_fine is null
                  and d_mov_ts_det_tipo.data_cancellazione is null
                  and t_bil_elem.validita_fine is null
                  and t_bil_elem.data_cancellazione is null
                  and d_mov_stato.validita_fine is null
                  and d_mov_stato.data_cancellazione is null
                  and class.validita_fine is null
                  and class.data_cancellazione is null
                  and d_class_tipo.validita_fine is null
                  and d_class_tipo.data_cancellazione is null       
                  and ((mov_ts.movgest_ts_id in  (
                          --impegni che arrivano da reimputazione 
                    select reimp.movgestnew_ts_id
                    from fase_bil_t_reimputazione reimp
                    where reimp.ente_proprietario_id=p_ente_prop_id
                        and reimp.bil_id=bilancio_id  --anno bilancio       
                        and ((--non esiste su siac_r_movgest_ts 
                              not exists (select 1
                                from siac_r_movgest_ts r_mov_ts
                                where r_mov_ts.movgest_ts_b_id= reimp.movgest_ts_id
                                    and r_mov_ts.ente_proprietario_id=p_ente_prop_id
                                    and r_mov_ts.data_cancellazione IS NULL)) OR
                              (--oppure esiste con un vincolo di tipo AAM
                               exists ( select 1
                                from siac_r_movgest_ts r_mov_ts1,
                                  siac_t_avanzovincolo av_vincolo, 
                                  siac_d_avanzovincolo_tipo av_vincolo_tipo   
                                where r_mov_ts1.movgest_ts_b_id= reimp.movgest_ts_id
                                  and r_mov_ts1.avav_id=av_vincolo.avav_id    
                                  and av_vincolo.avav_tipo_id=av_vincolo_tipo.avav_tipo_id
                                  and r_mov_ts1.ente_proprietario_id=p_ente_prop_id
                                  and av_vincolo_tipo.avav_tipo_code='AAM'
                                  and r_mov_ts1.data_cancellazione IS NULL
                                  and av_vincolo.data_cancellazione IS NULL)) OR
                                (--oppure esiste con un vincolo 
                                 --con accertamento anno bilancio
                                 exists (select 1
                                    from siac_r_movgest_ts r_mov_ts2,
                                        siac_t_movgest_ts acc_ts,
                                        siac_t_movgest acc,
                                        siac_r_movgest_ts_stato r_acc_ts_stato,
                                        siac_d_movgest_stato d_acc_stato
                                    where r_mov_ts2.movgest_ts_b_id=reimp.movgest_ts_id
                                        and r_mov_ts2.movgest_ts_a_id = acc_ts.movgest_ts_id
                                        and acc_ts.movgest_id = acc.movgest_id
                                        and r_acc_ts_stato.movgest_ts_id=acc_ts.movgest_ts_id
                                        and r_acc_ts_stato.movgest_stato_id=d_acc_stato.movgest_stato_id 
                                        and r_mov_ts2.ente_proprietario_id=p_ente_prop_id
                                        and acc.movgest_anno = annoBilInt 
                                        and d_acc_stato.movgest_stato_code in ('D', 'N') 
                                        and acc_ts.data_cancellazione IS NULL
                                        and acc.data_cancellazione IS NULL
                                        and r_acc_ts_stato.data_cancellazione IS NULL
                                        and d_acc_stato.data_cancellazione IS NULL))))) AND
              --OPPURE impegni che non devono essere nati da riaggiudicazione
                      (not exists(select 1
                                   from siac_r_movgest_aggiudicazione riagg
                                   where riagg.movgest_id_da=mov_ts.movgest_ts_id
                                    and riagg.ente_proprietario_id=p_ente_prop_id
                                    and riagg.data_cancellazione IS NULL)))
              group by class.classif_code
              )   
              ) as x
                group by x.programma_code 
                )                               
select 
p_anno::varchar  bil_anno ,
''::varchar  missione_tipo_code ,
struttura.missione_tipo_desc ,
struttura.missione_code ,
struttura.missione_desc ,
''::varchar programma_tipo_code ,
struttura.programma_tipo_desc ,
struttura.programma_code ,
struttura.programma_desc ,
	--22/02/2019: SIAC-6623. 
--coalesce(fpv_anno_prec_da_variabili.spese_fpv_anni_prec,0) as fondo_plur_anno_prec_a,
COALESCE(fpv_anno_prec_da_capitoli.importo_fpv_anno_prec,
	coalesce(fpv_anno_prec_da_variabili.spese_fpv_anni_prec,0)) fondo_plur_anno_prec_a,
--coalesce(var_spese_impe_anni_prec_b,0) as spese_impe_anni_prec_b,
coalesce(tbimpaprec.spese_impe_anni_prec,0) as spese_impe_anni_prec_b,
	--22/02/2019: SIAC-6623. 
--coalesce(fpv_anno_prec_da_variabili.spese_fpv_anni_prec,0)-coalesce(tbimpaprec.spese_impe_anni_prec,0)-coalesce(tbriaccx.riacc_colonna_x,0) - coalesce(tbriaccy.riacc_colonna_y,0)  as quota_fond_plur_anni_prec_c,
COALESCE(fpv_anno_prec_da_capitoli.importo_fpv_anno_prec,
	coalesce(fpv_anno_prec_da_variabili.spese_fpv_anni_prec,0))-coalesce(tbimpaprec.spese_impe_anni_prec,0)-coalesce(tbriaccx.riacc_colonna_x,0) - coalesce(tbriaccy.riacc_colonna_y,0)  as quota_fond_plur_anni_prec_c,
coalesce(imp_colonna_d.spese_da_impeg_anno1_d,0) spese_da_impeg_anno1_d,
coalesce(imp_colonna_e.spese_da_impeg_anno2_e,0) spese_da_impeg_anno2_e,
coalesce(imp_colonna_f.spese_da_impeg_anni_succ_f,0) spese_da_impeg_anni_succ_f,
coalesce(tbriaccx.riacc_colonna_x,0) riacc_colonna_x,
coalesce(tbriaccy.riacc_colonna_y,0) riacc_colonna_y,
	--22/02/2019: SIAC-6623.
--coalesce(fpv_anno_prec_da_variabili.spese_fpv_anni_prec,0)-coalesce(tbimpaprec.spese_impe_anni_prec,0)-coalesce(tbriaccx.riacc_colonna_x,0) - coalesce(tbriaccy.riacc_colonna_y,0) +
--coalesce(imp_colonna_d.spese_da_impeg_anno1_d,0) + coalesce(imp_colonna_e.spese_da_impeg_anno2_e,0)+coalesce(imp_colonna_f.spese_da_impeg_anni_succ_f,0)
COALESCE(fpv_anno_prec_da_capitoli.importo_fpv_anno_prec,
	coalesce(fpv_anno_prec_da_variabili.spese_fpv_anni_prec,0))-coalesce(tbimpaprec.spese_impe_anni_prec,0)-coalesce(tbriaccx.riacc_colonna_x,0) - coalesce(tbriaccy.riacc_colonna_y,0) +
coalesce(imp_colonna_d.spese_da_impeg_anno1_d,0) + 
coalesce(imp_colonna_e.spese_da_impeg_anno2_e,0)+
coalesce(imp_colonna_f.spese_da_impeg_anni_succ_f,0)
as fondo_plur_anno_g 
from struttura left join tbimpaprec     
	on struttura.programma_code=tbimpaprec.programma_code
left join fpv_anno_prec_da_variabili 
	on struttura.programma_code=fpv_anno_prec_da_variabili.programma_code
left join tbriaccx     
	on struttura.programma_code=tbriaccx.programma_code
left join tbriaccy   
	on struttura.programma_code=tbriaccy.programma_code
left join imp_colonna_d   
	on struttura.programma_code=imp_colonna_d.programma_code
left join imp_colonna_e   
	on struttura.programma_code=imp_colonna_e.programma_code
left join imp_colonna_f   
	on struttura.programma_code=imp_colonna_f.programma_code
    	--22/02/2019: SIAC-6623.
left join fpv_anno_prec_da_capitoli
	on struttura.programma_code=fpv_anno_prec_da_capitoli.programma_code;
          

raise notice 'fine OK';
    exception
    when no_data_found THEN
    raise notice 'nessun dato trovato per struttura bilancio';
    return;
    when others  THEN
  	RTN_MESSAGGIO:='struttura bilancio altro errore';
 	RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
    return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--SIAC-8250 - Maurizio - FINE
