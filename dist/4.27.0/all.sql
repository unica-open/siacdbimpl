/*
*SPDX-FileCopyrightText: Copyright 2020 | CSI Piemonte
*SPDX-License-Identifier: EUPL-1.2
*/

-- SIAC-7749 - Sofia 02.09.2020 - Inizio
 update siac_t_bil_elem e
 set    elem_desc=replace(replace(e.elem_desc,chr(10),''),chr(13),''),
        data_modifica=now(),
        login_operazione=e.login_operazione||'-SIAC-7749'
 from siac_d_bil_elem_tipo tipo,siac_t_ente_proprietario ente
 where ente.ente_proprietario_id in (2,3,4,5,10,11,14,16)
 and   tipo.ente_proprietario_id=ente.ente_proprietario_id
 and   tipo.elem_tipo_code in ('CAP-UG','CAP-EG','CAP-UP','CAP-EP')
 and   e.elem_tipo_id=tipo.elem_tipo_id;
-- SIAC-7749 - Sofia 02.09.2020 - Fine
--SIAC-7556-ENG inizio
INSERT INTO siac.siac_t_azione (azione_code, azione_desc, azione_tipo_id, gruppo_azioni_id, urlapplicazione, validita_inizio, ente_proprietario_id, login_operazione)
SELECT 'OP-CRUSCOTTO-PAGOPA','Ricerca Elaborazioni PagoPA',a.azione_tipo_id,b.gruppo_azioni_id,'/../siacbilapp/azioneRichiesta.do',now(),a.ente_proprietario_id,'admin'
FROM siac.siac_d_azione_tipo a JOIN siac.siac_d_gruppo_azioni b ON (b.ente_proprietario_id = a.ente_proprietario_id)
WHERE a.azione_tipo_code = 'ATTIVITA_SINGOLA'
AND b.gruppo_azioni_code = 'FUN_ACCESSORIE'
AND NOT EXISTS (
  SELECT 1
  FROM siac.siac_t_azione z
  WHERE z.azione_code = 'OP-CRUSCOTTO-PAGOPA'
  AND z.ente_proprietario_id = a.ente_proprietario_id
);
--SIAC-7556-ENG fine


 -- SIAC-7556 - Chiara 04.09.2020 - Inizio
 INSERT INTO siac.siac_t_azione (azione_code, azione_desc, azione_tipo_id, gruppo_azioni_id, urlapplicazione, validita_inizio, ente_proprietario_id, login_operazione)
SELECT 'OP-CRUSCOTTO-PAGOPA','Ricerca Elaborazioni PagoPA',a.azione_tipo_id,b.gruppo_azioni_id,'/../siacbilapp/azioneRichiesta.do',now(),a.ente_proprietario_id,'admin'
FROM siac.siac_d_azione_tipo a JOIN siac.siac_d_gruppo_azioni b ON (b.ente_proprietario_id = a.ente_proprietario_id)
WHERE a.azione_tipo_code = 'ATTIVITA_SINGOLA'
AND b.gruppo_azioni_code = 'FUN_ACCESSORIE'
AND NOT EXISTS (
  SELECT 1
  FROM siac.siac_t_azione z
  WHERE z.azione_code = 'OP-CRUSCOTTO-PAGOPA'
  AND z.ente_proprietario_id = a.ente_proprietario_id
);
-- SIAC-7556 - Chiara 04.09.2020 - Fine


-- SIAC-7349 - Chiara 04.09.2020 - Inizio
-- DDL
DROP VIEW if exists siac.siac_v_dwh_bil_elem_comp_tipo;
DROP VIEW if exists siac.siac_v_dwh_bil_elem_comp_cap;
--ALTER TABLE siac.siac_d_bil_elem_det_comp_tipo  DROP if exists elem_det_comp_tipo_imp_id;
--drop table if exists siac.siac_d_bil_elem_det_comp_tipo_imp;






CREATE TABLE IF NOT EXISTS  siac.siac_d_bil_elem_det_comp_tipo_imp
(
                elem_det_comp_tipo_imp_id SERIAL,
                elem_det_comp_tipo_imp_code VARCHAR(200) NOT NULL,
                elem_det_comp_tipo_imp_desc VARCHAR(500) NOT NULL,
                validita_inizio TIMESTAMP DEFAULT now() NOT NULL,
                validita_fine TIMESTAMP,
                ente_proprietario_id INTEGER NOT NULL,
                data_creazione TIMESTAMP DEFAULT now() NOT NULL,
                data_modifica TIMESTAMP DEFAULT now() NOT NULL,
                data_cancellazione TIMESTAMP,
                login_operazione VARCHAR(200) NOT NULL,
                CONSTRAINT pk_siac_d_bil_elem_det_comp_tipo_imp PRIMARY KEY (elem_det_comp_tipo_imp_id)
);
COMMENT ON TABLE siac.siac_d_bil_elem_det_comp_tipo_imp IS 'Impegnabile del Componente in fase di assunzione di nuovi impegni ';  
COMMENT ON COLUMN siac.siac_d_bil_elem_det_comp_tipo_imp.elem_det_comp_tipo_imp_code IS ' Valore ammessi Si, No, Automatica';

SELECT * FROM  fnc_dba_add_fk_constraint('siac_d_bil_elem_det_comp_tipo_imp', 'siac_t_ente_proprietario_siac_d_bil_elem_det_comp_tipo_imp', 'ente_proprietario_id', 'siac_t_ente_proprietario', 'ente_proprietario_id');	

SELECT * FROM fnc_dba_create_index('siac_d_bil_elem_det_comp_tipo_imp', 'siac_d_bil_elem_det_comp_tipo_imp_fk_ente_proprietario_id_idx','ente_proprietario_id', null, false);
SELECT * FROM fnc_dba_create_index('siac_d_bil_elem_det_comp_tipo_imp', 'siac_d_bil_elem_det_comp_tipo_imp_idx_1','elem_det_comp_tipo_imp_code,validita_inizio, ente_proprietario_id', 'data_cancellazione is null', false);

 
 
 ALTER TABLE siac.siac_d_bil_elem_det_comp_tipo_imp OWNER TO siac;
 


SELECT * FROM  fnc_dba_add_column_params ( 'siac_d_bil_elem_det_comp_tipo', 'elem_det_comp_tipo_imp_id', 'INTEGER');
SELECT * FROM fnc_dba_create_index('siac_d_bil_elem_det_comp_tipo', 'siac_d_bil_elem_det_comp_tipo_fk_imp_id_idx','elem_det_comp_tipo_imp_id', null, false);
SELECT * FROM  fnc_dba_add_fk_constraint('siac_d_bil_elem_det_comp_tipo', 'siac_d_bil_elem_det_comp_tipo_elem_det_comp_tipo_imp', 'elem_det_comp_tipo_imp_id', 'siac_d_bil_elem_det_comp_tipo_imp', 'elem_det_comp_tipo_imp_id');

ALTER TABLE siac_d_bil_elem_det_comp_tipo  ALTER COLUMN elem_det_comp_tipo_gest_aut DROP NOT NULL;
  
 

-- Table: siac.siac_r_movgest_ts_det_mod

-- DROP TABLE siac.siac_r_movgest_ts_det_mod;



CREATE TABLE IF NOT EXISTS siac.siac_r_movgest_ts_det_mod
(
	
	movgest_ts_det_mod_r_id SERIAL,
	movgest_ts_det_mod_entrata_id integer NOT NULL,
	movgest_ts_det_mod_spesa_id integer NOT NULL,
	movgest_ts_det_mod_importo numeric,
	movgest_ts_det_mod_impo_residuo numeric,
    validita_inizio timestamp without time zone NOT NULL,
    validita_fine timestamp without time zone,
    ente_proprietario_id integer NOT NULL,
    data_creazione timestamp without time zone NOT NULL DEFAULT now(),
    data_modifica timestamp without time zone NOT NULL DEFAULT now(),
    data_cancellazione timestamp without time zone,
    login_operazione character varying(200) NOT NULL,
    CONSTRAINT pk_r_movgest_ts_det_mod PRIMARY KEY (movgest_ts_det_mod_r_id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;
COMMENT ON TABLE siac.siac_r_movgest_ts_det_mod IS 'Associazione delle modifiche tra impegni e accertamenti';

ALTER TABLE siac.siac_r_movgest_ts_det_mod
    OWNER to siac;
	
SELECT * FROM  fnc_dba_add_fk_constraint('siac_r_movgest_ts_det_mod', 'siac_t_ente_proprietario_siac_r_movgest_ts_det_mod', 'ente_proprietario_id', 'siac_t_ente_proprietario', 'ente_proprietario_id');	
SELECT * FROM  fnc_dba_add_fk_constraint('siac_r_movgest_ts_det_mod', 'siac_t_movgest_ts_det_mod_siac_r_movgest_ts_det_mod_entrata', 'movgest_ts_det_mod_entrata_id', 'siac_t_movgest_ts_det_mod', 'movgest_ts_det_mod_id');	
SELECT * FROM  fnc_dba_add_fk_constraint('siac_r_movgest_ts_det_mod', 'siac_t_movgest_ts_det_mod_siac_r_movgest_ts_det_mod_spesa', 'movgest_ts_det_mod_spesa_id', 'siac_t_movgest_ts_det_mod', 'movgest_ts_det_mod_id');	
	
	
SELECT * FROM fnc_dba_create_index('siac_r_movgest_ts_det_mod', 'idx_siac_r_movgest_ts_det_mod_1','movgest_ts_det_mod_entrata_id, movgest_ts_det_mod_spesa_id,validita_inizio, ente_proprietario_id', 'data_cancellazione is null', false);
SELECT * FROM fnc_dba_create_index('siac_r_movgest_ts_det_mod', 'siac_r_movgest_ts_det_mod_imp_fk_ente_proprietario_id_idx','ente_proprietario_id', null, false);
SELECT * FROM fnc_dba_create_index('siac_r_movgest_ts_det_mod', 'siac_r_movgest_ts_det_mod_imp_mod_entrata_id_idx','movgest_ts_det_mod_entrata_id', null, false);
SELECT * FROM fnc_dba_create_index('siac_r_movgest_ts_det_mod', 'siac_r_movgest_ts_det_mod_imp_mod_spesa_id_idx','movgest_ts_det_mod_spesa_id', null, false);
 
 
 

-- View: siac.siac_v_dwh_bil_elem_comp_cap

-- DROP VIEW siac.siac_v_dwh_bil_elem_comp_cap;


CREATE OR REPLACE VIEW siac.siac_v_dwh_bil_elem_comp_cap
 AS
 SELECT ente.ente_proprietario_id,
    ente.ente_denominazione,
    query.elem_anno_bilancio,
    query.elem_tipo_code_capitolo,
    query.elem_tipo_desc_capitolo,
    query.elem_code_capitolo,
    query.elem_code_articolo,
    query.elem_code_ueb,
    query.elem_stato_code_capitolo,
    query.elem_stato_desc_capitolo,
    query.elem_det_anno,
    query.elem_det_importo,
    query.elem_det_comp_importo,
    query.elem_det_comp_tipo_code,
    query.elem_det_comp_tipo_desc,
    query.elem_det_comp_macro_tipo_code,
    query.elem_det_comp_macro_tipo_desc,
    query.elem_det_comp_sotto_tipo_code,
    query.elem_det_comp_sotto_tipo_desc,
    query.elem_det_comp_tipo_ambito_code,
    query.elem_det_comp_tipo_ambito_desc,
    query.elem_det_comp_tipo_fonte_code,
    query.elem_det_comp_tipo_fonte_desc,
    query.elem_det_comp_tipo_fase_code,
    query.elem_det_comp_tipo_fase_desc,
    query.elem_det_comp_tipo_def_code,
    query.elem_det_comp_tipo_def_desc,
    query.elem_det_comp_tipo_gest_aut,
	query.elem_det_comp_tipo_imp_code, 
	query.elem_det_comp_tipo_imp_desc,
    query.elem_det_comp_tipo_anno
   FROM ( WITH comp_tipo AS (
                 SELECT macro.elem_det_comp_macro_tipo_code,
                    macro.elem_det_comp_macro_tipo_desc,
                    sotto_tipo.elem_det_comp_sotto_tipo_code,
                    sotto_tipo.elem_det_comp_sotto_tipo_desc,
                    tipo.elem_det_comp_tipo_code,
                    tipo.elem_det_comp_tipo_desc,
                    ambito_tipo.elem_det_comp_tipo_ambito_code,
                    ambito_tipo.elem_det_comp_tipo_ambito_desc,
                    fonte_tipo.elem_det_comp_tipo_fonte_code,
                    fonte_tipo.elem_det_comp_tipo_fonte_desc,
                    fase_tipo.elem_det_comp_tipo_fase_code,
                    fase_tipo.elem_det_comp_tipo_fase_desc,
                    def_tipo.elem_det_comp_tipo_def_code,
                    def_tipo.elem_det_comp_tipo_def_desc,
                     CASE
                     WHEN tipo.elem_det_comp_tipo_gest_aut = true THEN 'Solo automatica'::text
                     ELSE 'Manuale'::text
                      END::character varying(50) AS elem_det_comp_tipo_gest_aut,
					imp_tipo.elem_det_comp_tipo_imp_code, 
					imp_tipo.elem_det_comp_tipo_imp_desc,						
                    per.anno::integer AS elem_det_comp_tipo_anno,
                    tipo.elem_det_comp_tipo_id,
                    per.periodo_id AS elem_det_comp_periodo_id
                   FROM siac_d_bil_elem_det_comp_tipo_stato stato,
                    siac_d_bil_elem_det_comp_macro_tipo macro,
                    siac_d_bil_elem_det_comp_tipo tipo
                     LEFT JOIN siac_d_bil_elem_det_comp_sotto_tipo sotto_tipo ON tipo.elem_det_comp_sotto_tipo_id = sotto_tipo.elem_det_comp_sotto_tipo_id
                     LEFT JOIN siac_d_bil_elem_det_comp_tipo_ambito ambito_tipo ON tipo.elem_det_comp_tipo_ambito_id = ambito_tipo.elem_det_comp_tipo_ambito_id
                     LEFT JOIN siac_d_bil_elem_det_comp_tipo_fonte fonte_tipo ON tipo.elem_det_comp_tipo_fonte_id = fonte_tipo.elem_det_comp_tipo_fonte_id
                     LEFT JOIN siac_d_bil_elem_det_comp_tipo_fase fase_tipo ON tipo.elem_det_comp_tipo_fase_id = fase_tipo.elem_det_comp_tipo_fase_id
                     LEFT JOIN siac_d_bil_elem_det_comp_tipo_def def_tipo ON tipo.elem_det_comp_tipo_def_id = def_tipo.elem_det_comp_tipo_def_id
					 --SIAC-7349
					 LEFT JOIN siac_d_bil_elem_det_comp_tipo_imp imp_tipo ON tipo.elem_det_comp_tipo_imp_id = imp_tipo.elem_det_comp_tipo_imp_id
                     LEFT JOIN siac_t_periodo per ON tipo.periodo_id = per.periodo_id
                  WHERE stato.elem_det_comp_tipo_stato_id = tipo.elem_det_comp_tipo_stato_id AND macro.elem_det_comp_macro_tipo_id = tipo.elem_det_comp_macro_tipo_id AND tipo.data_cancellazione IS NULL
                ), capitolo AS (
                 SELECT e.elem_code,
                    e.elem_code2,
                    e.elem_code3,
                    tipo.elem_tipo_code,
                    tipo.elem_tipo_desc,
                    stato.elem_stato_code,
                    stato.elem_stato_desc,
                    per.anno AS elem_anno_bilancio,
                    per_det.anno AS elem_det_anno,
                    det.elem_det_importo,
                    e.elem_id,
                    det.elem_det_id,
                    det.elem_det_tipo_id,
                    bil.bil_id,
                    per.periodo_id,
                    per_det.periodo_id AS periodo_det_id,
                    e.ente_proprietario_id
                   FROM siac_t_bil_elem e,
                    siac_d_bil_elem_tipo tipo,
                    siac_r_bil_elem_stato rs,
                    siac_d_bil_elem_stato stato,
                    siac_t_bil bil,
                    siac_t_periodo per,
                    siac_t_bil_elem_det det,
                    siac_d_bil_elem_det_tipo tipo_det,
                    siac_t_periodo per_det
                  WHERE (tipo.elem_tipo_code::text = ANY (ARRAY['CAP-UG'::character varying::text, 'CAP-UP'::character varying::text])) AND e.elem_tipo_id = tipo.elem_tipo_id AND rs.elem_id = e.elem_id AND stato.elem_stato_id = rs.elem_stato_id AND bil.bil_id = e.bil_id AND per.periodo_id = bil.periodo_id AND det.elem_id = e.elem_id AND tipo_det.elem_det_tipo_id = det.elem_det_tipo_id AND tipo_det.elem_det_tipo_code::text = 'STA'::text AND per_det.periodo_id = det.periodo_id AND e.data_cancellazione IS NULL AND det.data_cancellazione IS NULL AND rs.data_cancellazione IS NULL AND rs.validita_fine IS NULL
                ), capitolo_det_comp AS (
                 SELECT comp.elem_det_comp_id,
                    comp.elem_det_id,
                    comp.elem_det_comp_tipo_id,
                    comp.elem_det_importo,
                    comp.validita_inizio,
                    comp.validita_fine,
                    comp.ente_proprietario_id,
                    comp.data_creazione,
                    comp.data_modifica,
                    comp.data_cancellazione,
                    comp.login_operazione
                   FROM siac_t_bil_elem_det_comp comp
                  WHERE comp.data_cancellazione IS NULL
                )
         SELECT capitolo.elem_code AS elem_code_capitolo,
            capitolo.elem_code2 AS elem_code_articolo,
            capitolo.elem_code3 AS elem_code_ueb,
            capitolo.elem_tipo_code AS elem_tipo_code_capitolo,
            capitolo.elem_tipo_desc AS elem_tipo_desc_capitolo,
            capitolo.elem_stato_code AS elem_stato_code_capitolo,
            capitolo.elem_stato_desc AS elem_stato_desc_capitolo,
            capitolo.elem_anno_bilancio,
            capitolo.elem_det_anno,
            capitolo.elem_det_importo,
            capitolo.elem_id,
            capitolo.elem_det_id,
            capitolo.elem_det_tipo_id,
            capitolo.bil_id,
            capitolo.periodo_id,
            capitolo.periodo_det_id,
            capitolo.ente_proprietario_id,
            capitolo_det_comp.elem_det_importo AS elem_det_comp_importo,
            comp_tipo.elem_det_comp_macro_tipo_code,
            comp_tipo.elem_det_comp_macro_tipo_desc,
            comp_tipo.elem_det_comp_sotto_tipo_code,
            comp_tipo.elem_det_comp_sotto_tipo_desc,
            comp_tipo.elem_det_comp_tipo_code,
            comp_tipo.elem_det_comp_tipo_desc,
            comp_tipo.elem_det_comp_tipo_ambito_code,
            comp_tipo.elem_det_comp_tipo_ambito_desc,
            comp_tipo.elem_det_comp_tipo_fonte_code,
            comp_tipo.elem_det_comp_tipo_fonte_desc,
            comp_tipo.elem_det_comp_tipo_fase_code,
            comp_tipo.elem_det_comp_tipo_fase_desc,
            comp_tipo.elem_det_comp_tipo_def_code,
            comp_tipo.elem_det_comp_tipo_def_desc,
			comp_tipo.elem_det_comp_tipo_gest_aut,
			comp_tipo.elem_det_comp_tipo_imp_code, 
			comp_tipo.elem_det_comp_tipo_imp_desc,
            comp_tipo.elem_det_comp_tipo_anno,
            comp_tipo.elem_det_comp_periodo_id
           FROM capitolo,
            capitolo_det_comp,
            comp_tipo
          WHERE capitolo.elem_det_id = capitolo_det_comp.elem_det_id AND comp_tipo.elem_det_comp_tipo_id = capitolo_det_comp.elem_det_comp_tipo_id) query,
    siac_t_ente_proprietario ente
  WHERE query.ente_proprietario_id = ente.ente_proprietario_id;

ALTER TABLE siac.siac_v_dwh_bil_elem_comp_cap
    OWNER TO siac;
	
	
-- View: siac.siac_v_dwh_bil_elem_comp_tipo

-- DROP VIEW siac.siac_v_dwh_bil_elem_comp_tipo;

CREATE OR REPLACE VIEW siac.siac_v_dwh_bil_elem_comp_tipo
 AS
 SELECT ente.ente_proprietario_id,
    ente.ente_denominazione,
    tipo.elem_det_comp_tipo_code,
    tipo.elem_det_comp_tipo_desc,
    macro.elem_det_comp_macro_tipo_code,
    macro.elem_det_comp_macro_tipo_desc,
    sotto_tipo.elem_det_comp_sotto_tipo_code,
    sotto_tipo.elem_det_comp_sotto_tipo_desc,
    ambito_tipo.elem_det_comp_tipo_ambito_code,
    ambito_tipo.elem_det_comp_tipo_ambito_desc,
    fonte_tipo.elem_det_comp_tipo_fonte_code,
    fonte_tipo.elem_det_comp_tipo_fonte_desc,
    fase_tipo.elem_det_comp_tipo_fase_code,
    fase_tipo.elem_det_comp_tipo_fase_desc,
    def_tipo.elem_det_comp_tipo_def_code,
    def_tipo.elem_det_comp_tipo_def_desc,
         CASE
            WHEN tipo.elem_det_comp_tipo_gest_aut = true THEN 'Solo automatica'::text
            ELSE 'Manuale'::text
        END::character varying(50) AS elem_det_comp_tipo_gest_aut,
	imp_tipo.elem_det_comp_tipo_imp_code, 
	imp_tipo.elem_det_comp_tipo_imp_desc,
    per.anno::integer AS elem_det_comp_tipo_anno,
    stato.elem_det_comp_tipo_stato_code,
    stato.elem_det_comp_tipo_stato_desc,
    tipo.validita_inizio,
    tipo.validita_fine
   FROM siac_t_ente_proprietario ente,
    siac_d_bil_elem_det_comp_tipo_stato stato,
    siac_d_bil_elem_det_comp_macro_tipo macro,
    siac_d_bil_elem_det_comp_tipo tipo
     LEFT JOIN siac_d_bil_elem_det_comp_sotto_tipo sotto_tipo ON tipo.elem_det_comp_sotto_tipo_id = sotto_tipo.elem_det_comp_sotto_tipo_id
     LEFT JOIN siac_d_bil_elem_det_comp_tipo_ambito ambito_tipo ON tipo.elem_det_comp_tipo_ambito_id = ambito_tipo.elem_det_comp_tipo_ambito_id
     LEFT JOIN siac_d_bil_elem_det_comp_tipo_fonte fonte_tipo ON tipo.elem_det_comp_tipo_fonte_id = fonte_tipo.elem_det_comp_tipo_fonte_id
     LEFT JOIN siac_d_bil_elem_det_comp_tipo_fase fase_tipo ON tipo.elem_det_comp_tipo_fase_id = fase_tipo.elem_det_comp_tipo_fase_id
     LEFT JOIN siac_d_bil_elem_det_comp_tipo_def def_tipo ON tipo.elem_det_comp_tipo_def_id = def_tipo.elem_det_comp_tipo_def_id
	 --SIAC-7349
	 LEFT JOIN siac_d_bil_elem_det_comp_tipo_imp imp_tipo ON tipo.elem_det_comp_tipo_imp_id = imp_tipo.elem_det_comp_tipo_imp_id
     LEFT JOIN siac_t_periodo per ON tipo.periodo_id = per.periodo_id
  WHERE stato.ente_proprietario_id = ente.ente_proprietario_id AND stato.elem_det_comp_tipo_stato_id = tipo.elem_det_comp_tipo_stato_id AND macro.elem_det_comp_macro_tipo_id = tipo.elem_det_comp_macro_tipo_id AND tipo.data_cancellazione IS NULL;

ALTER TABLE siac.siac_v_dwh_bil_elem_comp_tipo
    OWNER TO siac;

	

-- /DDL

-- DML

--- impegnabile
insert into siac_d_bil_elem_det_comp_tipo_imp
(
	elem_det_comp_tipo_imp_code,
    elem_det_comp_tipo_imp_desc,
    validita_inizio,
    login_operazione,
    ente_proprietario_id
)
select
    '01',
    'Si',
    now(),
    'SIAC-7349',
    ente.ente_proprietario_id
from siac_t_ente_proprietario ente
where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16)
and   not exists
(
select 1
from siac_d_bil_elem_det_comp_tipo_imp tipo
where tipo.ente_proprietario_id=ente.ente_proprietario_id
and   tipo.elem_det_comp_tipo_imp_code='01'
and   tipo.elem_det_comp_tipo_imp_desc='Si'
and   tipo.data_cancellazione is null
and   tipo.validita_fine is null
);


insert into siac_d_bil_elem_det_comp_tipo_imp
(
	elem_det_comp_tipo_imp_code,
    elem_det_comp_tipo_imp_desc,
    validita_inizio,
    login_operazione,
    ente_proprietario_id
)
select
    '02',
    'No',
    now(),
    'SIAC-7349',
    ente.ente_proprietario_id
from siac_t_ente_proprietario ente
where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16)
and   not exists
(
select 1
from siac_d_bil_elem_det_comp_tipo_imp tipo
where tipo.ente_proprietario_id=ente.ente_proprietario_id
and   tipo.elem_det_comp_tipo_imp_code='02'
and   tipo.elem_det_comp_tipo_imp_desc='No'
and   tipo.data_cancellazione is null
and   tipo.validita_fine is null
);




insert into siac_d_bil_elem_det_comp_tipo_imp
(
	elem_det_comp_tipo_imp_code,
    elem_det_comp_tipo_imp_desc,
    validita_inizio,
    login_operazione,
    ente_proprietario_id
)
select
    '03',
    'Auto',
    now(),
    'SIAC-7349',
    ente.ente_proprietario_id
from siac_t_ente_proprietario ente
where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16)
and   not exists
(
select 1
from siac_d_bil_elem_det_comp_tipo_imp tipo
where tipo.ente_proprietario_id=ente.ente_proprietario_id
and   tipo.elem_det_comp_tipo_imp_code='03'
and   tipo.elem_det_comp_tipo_imp_desc='Auto'
and   tipo.data_cancellazione is null
and   tipo.validita_fine is null
);


UPDATE siac.siac_d_bil_elem_det_comp_tipo tabella
   SET  elem_det_comp_tipo_imp_id= (SELECT elem_det_comp_tipo_imp_id FROM siac.siac_d_bil_elem_det_comp_tipo_imp tipo where elem_det_comp_tipo_imp_desc ='Si' and tabella.ente_proprietario_id = tipo.ente_proprietario_id)
	WHERE  elem_det_comp_macro_tipo_id IN ( SELECT elem_det_comp_macro_tipo_id FROM siac.siac_d_bil_elem_det_comp_macro_tipo macro	where elem_det_comp_macro_tipo_desc in ('Fresco','Avanzo') and tabella.ente_proprietario_id = macro.ente_proprietario_id);

 UPDATE siac.siac_d_bil_elem_det_comp_tipo tabella
   SET  elem_det_comp_tipo_imp_id= (SELECT elem_det_comp_tipo_imp_id FROM siac.siac_d_bil_elem_det_comp_tipo_imp tipo where elem_det_comp_tipo_imp_desc ='No' and tabella.ente_proprietario_id = tipo.ente_proprietario_id)
	WHERE  elem_det_comp_macro_tipo_id = ( SELECT elem_det_comp_macro_tipo_id 	FROM siac.siac_d_bil_elem_det_comp_macro_tipo macro	where elem_det_comp_macro_tipo_desc ='Da attribuire' and tabella.ente_proprietario_id = macro.ente_proprietario_id);


UPDATE siac.siac_d_bil_elem_det_comp_tipo tabella
   SET  elem_det_comp_tipo_imp_id= (SELECT elem_det_comp_tipo_imp_id FROM siac.siac_d_bil_elem_det_comp_tipo_imp tipo where elem_det_comp_tipo_imp_desc ='No' and tabella.ente_proprietario_id = tipo.ente_proprietario_id)
	WHERE  elem_det_comp_macro_tipo_id = ( SELECT elem_det_comp_macro_tipo_id FROM siac.siac_d_bil_elem_det_comp_macro_tipo macro	where elem_det_comp_macro_tipo_desc ='FPV' and tabella.ente_proprietario_id = macro.ente_proprietario_id)
	AND  elem_det_comp_sotto_tipo_id = ( SELECT elem_det_comp_sotto_tipo_id FROM siac.siac_d_bil_elem_det_comp_sotto_tipo sotto	where elem_det_comp_sotto_tipo_desc ='Cumulato' and tabella.ente_proprietario_id = sotto.ente_proprietario_id);


UPDATE siac.siac_d_bil_elem_det_comp_tipo tabella
   SET  elem_det_comp_tipo_imp_id= (SELECT elem_det_comp_tipo_imp_id FROM siac.siac_d_bil_elem_det_comp_tipo_imp tipo where elem_det_comp_tipo_imp_desc ='Auto' and tabella.ente_proprietario_id = tipo.ente_proprietario_id)
	WHERE  elem_det_comp_macro_tipo_id = ( SELECT elem_det_comp_macro_tipo_id  FROM siac.siac_d_bil_elem_det_comp_macro_tipo macro	where elem_det_comp_macro_tipo_desc ='FPV' and tabella.ente_proprietario_id = macro.ente_proprietario_id)
	AND  elem_det_comp_sotto_tipo_id =( SELECT elem_det_comp_sotto_tipo_id 	FROM siac.siac_d_bil_elem_det_comp_sotto_tipo sotto	where elem_det_comp_sotto_tipo_desc ='Applicato' and tabella.ente_proprietario_id = sotto.ente_proprietario_id)
	AND  elem_det_comp_tipo_fase_id  IN ( SELECT elem_det_comp_tipo_fase_id FROM siac.siac_d_bil_elem_det_comp_tipo_fase fase	where elem_det_comp_tipo_fase_desc IN ('Gestione','ROR effettivo')and tabella.ente_proprietario_id = fase.ente_proprietario_id);
	-- /DML

select * from fnc_dba_add_column_params ( 'siac_r_movgest_bil_elem', 'elem_det_comp_tipo_id', 'INTEGER');
select * from fnc_dba_add_fk_constraint('siac_r_movgest_bil_elem', 'siac_t_bil_elem_det_comp_tipo_siac_r_movgest_bil_elem', 'elem_det_comp_tipo_id', 'siac_d_bil_elem_det_comp_tipo', 'elem_det_comp_tipo_id');
	

-- function da eseguire presenti nella cartella SIAC-7349 MR 22/05/2020

-- Start fnc_siac_disponibilitaimpegnareugcomp_anno1
CREATE OR REPLACE FUNCTION siac.fnc_siac_disponibilitaimpegnareugcomp_anno1(
	id_in integer,
	idcomp_in integer)
    RETURNS numeric
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$
DECLARE

COMPONENTE_IMPEGNABILE varchar:='Si';

dispImpegnare numeric:=0;
enteProprietarioId integer:=0;
flagImpegnabileComponente varchar:=null;
annoBilancio varchar:=null;
stanzEffettivoRec record;
diCuiImpegnatoRec record;

strMessaggio varchar(1500):=null;
 ---    ANNASILVIA CMTO FORZATURA
ente_prop_in NUMERIC:=0;

BEGIN

 	strMessaggio:='Calcolo disponibile impegnare elem_id='||id_in||
        	          'idcomp_in='||idcomp_in||'.';

	strMessaggio:='Calcolo disponibile impegnare elem_id='||id_in||'idcomp_in='||idcomp_in||
    			  '.Lettura anno di bilancio e tipo elemento bilancio.';
    
 
    -- 04.08.2017 Sofia HD-INC000001937155- commentato in seguito ad approvazione bilancio di previsione
    ---    ANNASILVIA CMTO FORZATURA 13-01-2017 INIZIO 

    /*    select a.ente_proprietario_id 
        into ente_prop_in from siac_t_bil_elem a
        where a.elem_id = id_in;

        if ente_prop_in = 3 then
            	dispImpegnare := 9999999999;
    			return dispImpegnare;
        end if;*/
    ---    ANNASILVIA CMTO FORZATURA 13-01-2017 FINE 
    -- 04.08.2017 Sofia HD-INC000001937155- commentato in seguito ad approvazione bilancio di previsione

    

	select per.anno, bilElem.ente_proprietario_id into strict annoBilancio, enteProprietarioId
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;
    
    --SIAC-7349 
    --Se componente ha flag impegnabile = No o AUTO, restituire dispImpegnare=0
    select tipo.elem_det_comp_tipo_imp_desc into flagImpegnabileComponente
    from siac_d_bil_elem_det_comp_tipo componente 
    join siac_d_bil_elem_det_comp_tipo_imp tipo
    on tipo.elem_det_comp_tipo_imp_id = componente.elem_det_comp_tipo_imp_id
    where componente.elem_det_comp_tipo_id=idcomp_in
    and componente.ente_proprietario_id=enteProprietarioId
    and tipo.ente_proprietario_id=enteProprietarioId;
    /*and componente.validita_fine is null
    and componente.data_cancellazione is null
    and tipo.validita_fine is null 
    and tipo.data_cancellazione is null*/

    if flagImpegnabileComponente <> COMPONENTE_IMPEGNABILE THEN
        dispImpegnare=0;
        return dispImpegnare;
    end if;


    strMessaggio:='Calcolo disponibilita impegnare elem_id='||id_in||
    			  '.Calcolo stanziamento effettivo per anno='||annoBilancio|| 
				   ' idcomp_in='||idcomp_in||'.';

    select * into stanzEffettivoRec
	from fnc_siac_stanz_effettivo_ug_anno_comp (id_in,annoBilancio,idcomp_in);

    strMessaggio:='Calcolo disponibilita impegnare elem_id='||id_in||
                  '.Calcolo impegnato per anno='||annobilancio|| 
				  ' idcomp_in='||idcomp_in||'.';

    select * into diCuiImpegnatoRec
    from fnc_siac_dicuiimpegnatoug_comp_anno_comp (id_in,annoBilancio,idcomp_in);

   if stanzEffettivoRec.massimoimpegnabile is null then
     dispImpegnare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;
   ELSE
     if stanzEffettivoRec.massimoimpegnabile<stanzEffettivoRec.stanzEffettivo then
     	dispImpegnare:=stanzEffettivoRec.massimoImpegnabile-diCuiImpegnatoRec.diCuiImpegnato;
     else
	    dispImpegnare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;
     end if;
   end if;

return dispImpegnare;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return -1;
    when no_data_found then
			RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return -1;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return -1;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_disponibilitaimpegnareugcomp_anno1(integer, integer)
    OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitaimpegnareugcomp_anno1(integer, integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitaimpegnareugcomp_anno1(integer, integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitaimpegnareugcomp_anno1(integer, integer) TO siac;

-----End fnc_siac_disponibilitaimpegnareugcomp_anno1


---Start fnc_siac_disponibilitaimpegnareugcomp_anno2
CREATE OR REPLACE FUNCTION siac.fnc_siac_disponibilitaimpegnareugcomp_anno2(
	id_in integer,
	idcomp_in integer)
    RETURNS numeric
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$
DECLARE

COMPONENTE_IMPEGNABILE varchar:='Si';

dispImpegnare numeric:=0;
annoBilancio varchar:=null;
enteProprietarioId integer:=0;
flagImpegnabileComponente varchar:=null;
stanzEffettivoRec record;
diCuiImpegnatoRec record;

strMessaggio varchar(1500):=null;
 ---    ANNASILVIA CMTO FORZATURA
ente_prop_in NUMERIC:=0;
BEGIN

 	strMessaggio:='Calcolo disponibile impegnare elem_id='||id_in||
        	          'idcomp_in='||idcomp_in||'.';

	strMessaggio:='Calcolo disponibile impegnare elem_id='||id_in||'idcomp_in='||idcomp_in||
    			  '.Lettura anno di bilancio e tipo elemento bilancio.';

 
-- 04.08.2017 Sofia HD-INC000001937155- commentato in seguito ad approvazione bilancio di previsione
---    ANNASILVIA CMTO FORZATURA 13-01-2017 INIZIO 
     
/*    select a.ente_proprietario_id 
    into ente_prop_in from siac_t_bil_elem a
    where a.elem_id = id_in;
    
    if ente_prop_in = 3 then
        	dispImpegnare := 9999999999;
			return dispImpegnare;
    end if;*/
---    ANNASILVIA CMTO FORZATURA 13-01-2017 FINE 
-- 04.08.2017 Sofia HD-INC000001937155- commentato in seguito ad approvazione bilancio di previsione
 
	select per.anno, bilElem.ente_proprietario_id into strict annoBilancio, enteProprietarioId
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;
    
    --SIAC-7349 
    --Se componente ha flag impegnabile = No o AUTO, restituire dispImpegnare=0
    select tipo.elem_det_comp_tipo_imp_desc into flagImpegnabileComponente
    from siac_d_bil_elem_det_comp_tipo componente 
    join siac_d_bil_elem_det_comp_tipo_imp tipo
    on tipo.elem_det_comp_tipo_imp_id = componente.elem_det_comp_tipo_imp_id
    where componente.elem_det_comp_tipo_id=idcomp_in
    and componente.ente_proprietario_id=enteProprietarioId
    and tipo.ente_proprietario_id=enteProprietarioId;
    /*and componente.validita_fine is null
    and componente.data_cancellazione is null
    and tipo.validita_fine is null 
    and tipo.data_cancellazione is null*/

    if flagImpegnabileComponente <> COMPONENTE_IMPEGNABILE THEN
        dispImpegnare=0;
        return dispImpegnare;
    end if;

    annoBilancio:=((annoBilancio::INTEGER)+1)::varchar;

    strMessaggio:='Calcolo disponibilita impegnare elem_id='||id_in||
    			  '.Calcolo stanziamento effettivo per anno='||annoBilancio|| 
				   ' idcomp_in='||idcomp_in||'.';

    select * into stanzEffettivoRec
	from fnc_siac_stanz_effettivo_ug_anno_comp (id_in,annoBilancio,idcomp_in);

    strMessaggio:='Calcolo disponibilita impegnare elem_id='||id_in||
                  '.Calcolo impegnato per anno='||annobilancio|| 
				  ' idcomp_in='||idcomp_in||'.';

    select * into diCuiImpegnatoRec
    from fnc_siac_dicuiimpegnatoug_comp_anno_comp (id_in,annoBilancio,idcomp_in);

   if stanzEffettivoRec.massimoimpegnabile is null then
     dispImpegnare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;
   ELSE
     if stanzEffettivoRec.massimoimpegnabile<stanzEffettivoRec.stanzEffettivo then
     	dispImpegnare:=stanzEffettivoRec.massimoImpegnabile-diCuiImpegnatoRec.diCuiImpegnato;
     else
	    dispImpegnare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;
     end if;
   end if;

return dispImpegnare;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return -1;
    when no_data_found then
			RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return -1;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return -1;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_disponibilitaimpegnareugcomp_anno2(integer, integer)
    OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitaimpegnareugcomp_anno2(integer, integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitaimpegnareugcomp_anno2(integer, integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitaimpegnareugcomp_anno2(integer, integer) TO siac;
--end fnc_siac_disponibilitaimpegnareugcomp_anno2


--Start fnc_siac_disponibilitaimpegnareugcomp_anno3
CREATE OR REPLACE FUNCTION siac.fnc_siac_disponibilitaimpegnareugcomp_anno3(
	id_in integer,
	idcomp_in integer)
    RETURNS numeric
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$
DECLARE

COMPONENTE_IMPEGNABILE varchar:='Si';

dispImpegnare numeric:=0;
annoBilancio varchar:=null;
enteProprietarioId integer:=0;
flagImpegnabileComponente varchar:=null;
stanzEffettivoRec record;
diCuiImpegnatoRec record;

strMessaggio varchar(1500):=null;
 ---    ANNASILVIA CMTO FORZATURA
ente_prop_in NUMERIC:=0;

BEGIN

 	strMessaggio:='Calcolo disponibile impegnare elem_id='||id_in||
        	          'idcomp_in='||idcomp_in||'.';

	strMessaggio:='Calcolo disponibile impegnare elem_id='||id_in||'idcomp_in='||idcomp_in||
    			  '.Lettura anno di bilancio e tipo elemento bilancio.';
 
-- 04.08.2017 Sofia HD-INC000001937155- commentato in seguito ad approvazione bilancio di previsione
---    ANNASILVIA CMTO FORZATURA 13-01-2017 INIZIO 
     
/*    select a.ente_proprietario_id 
    into ente_prop_in from siac_t_bil_elem a
    where a.elem_id = id_in;
    
    if ente_prop_in = 3 then
        	dispImpegnare := 9999999999;
			return dispImpegnare;
    end if;
*/	
---    ANNASILVIA CMTO FORZATURA 13-01-2017 FINE 
-- 04.08.2017 Sofia HD-INC000001937155- commentato in seguito ad approvazione bilancio di previsione

	select per.anno, bilElem.ente_proprietario_id into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;
    
    --SIAC-7349 
    --Se componente ha flag impegnabile = No o AUTO, restituire dispImpegnare=0
    select tipo.elem_det_comp_tipo_imp_desc into flagImpegnabileComponente
    from siac_d_bil_elem_det_comp_tipo componente 
    join siac_d_bil_elem_det_comp_tipo_imp tipo
    on tipo.elem_det_comp_tipo_imp_id = componente.elem_det_comp_tipo_imp_id
    where componente.elem_det_comp_tipo_id=idcomp_in
    and componente.ente_proprietario_id=enteProprietarioId
    and tipo.ente_proprietario_id=enteProprietarioId;
    /*and componente.validita_fine is null
    and componente.data_cancellazione is null
    and tipo.validita_fine is null 
    and tipo.data_cancellazione is null*/

    if flagImpegnabileComponente <> COMPONENTE_IMPEGNABILE THEN
        dispImpegnare=0;
        return dispImpegnare;
    end if;

    annoBilancio:=((annoBilancio::INTEGER)+2)::varchar;

    strMessaggio:='Calcolo disponibilita impegnare elem_id='||id_in||
    			  '.Calcolo stanziamento effettivo per anno='||annoBilancio|| 
				   ' idcomp_in='||idcomp_in||'.';

    select * into stanzEffettivoRec
	from fnc_siac_stanz_effettivo_ug_anno_comp (id_in,annoBilancio,idcomp_in);

    strMessaggio:='Calcolo disponibilita impegnare elem_id='||id_in||
                  '.Calcolo impegnato per anno='||annobilancio||
       	          ' idcomp_in='||idcomp_in||'.';

    select * into diCuiImpegnatoRec
    from fnc_siac_dicuiimpegnatoug_comp_anno_comp (id_in,annoBilancio,idcomp_in);

    if stanzEffettivoRec.massimoimpegnabile is null then
     dispImpegnare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;
    ELSE
     if stanzEffettivoRec.massimoimpegnabile<stanzEffettivoRec.stanzEffettivo then
     	dispImpegnare:=stanzEffettivoRec.massimoImpegnabile-diCuiImpegnatoRec.diCuiImpegnato;
     else
	    dispImpegnare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;
     end if;
    end if;

return dispImpegnare;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return -1;
    when no_data_found then
			RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return -1;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return -1;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_disponibilitaimpegnareugcomp_anno3(integer, integer)
    OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitaimpegnareugcomp_anno3(integer, integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitaimpegnareugcomp_anno3(integer, integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitaimpegnareugcomp_anno3(integer, integer) TO siac;

--end fnc_siac_disponibilitaimpegnareugcomp_anno3

--Start fnc_siac_disponibilitaimpegnareup_anno1
DROP FUNCTION if exists siac.fnc_siac_disponibilitaimpegnareup_anno1(integer);
CREATE OR REPLACE FUNCTION siac.fnc_siac_disponibilitaimpegnareup_anno1(
	id_in integer)
    RETURNS numeric
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$
DECLARE

dispImpegnare numeric:=0;
annoBilancio varchar:=null;

stanzEffettivoRec record;
diCuiImpegnatoRec record;

strMessaggio varchar(1500):=null;
BEGIN

    strMessaggio:='Calcolo disponibilita impegnare elem_id='||id_in||'.';


	strMessaggio:='Calcolo disponibilita impegnare elem_id='||id_in||
    			  '.Lettura anno di bilancio.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;


    strMessaggio:='Calcolo disponibilita impegnare elem_id='||id_in||
    			  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
    select * into stanzEffettivoRec
	from fnc_siac_stanz_effettivo_up_anno (id_in,annoBilancio);

    strMessaggio:='Calcolo disponibilita impegnare elem_id='||id_in||
                  '.Calcolo impegnato per anno='||annobilancio||'.';
    select * into diCuiImpegnatoRec
    from fnc_siac_dicuiimpegnatoup_comp_anno (id_in,annoBilancio);

    if stanzEffettivoRec.massimoimpegnabile is null then
     dispImpegnare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;
    ELSE
     if stanzEffettivoRec.massimoimpegnabile<stanzEffettivoRec.stanzEffettivo then
     	dispImpegnare:=stanzEffettivoRec.massimoImpegnabile-diCuiImpegnatoRec.diCuiImpegnato;
     else
	    dispImpegnare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;
     end if;
    end if;


return dispImpegnare;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return -1;
    when no_data_found then
			RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return -1;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return -1;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_disponibilitaimpegnareup_anno1(integer)
    OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitaimpegnareup_anno1(integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitaimpegnareup_anno1(integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitaimpegnareup_anno1(integer) TO siac;

--end fnc_siac_disponibilitaimpegnareup_anno1

--Start fnc_siac_disponibilitaimpegnareup_anno2
DROP FUNCTION if exists siac.fnc_siac_disponibilitaimpegnareup_anno2(integer);
CREATE OR REPLACE FUNCTION siac.fnc_siac_disponibilitaimpegnareup_anno2(
	id_in integer)
  RETURNS numeric
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$
DECLARE

dispImpegnare numeric:=0;
annoBilancio varchar:=null;

stanzEffettivoRec record;
diCuiImpegnatoRec record;

strMessaggio varchar(1500):=null;
 ---    ANNASILVIA CMTO FORZATURA
ente_prop_in NUMERIC:=0;
BEGIN

    strMessaggio:='Calcolo disponibilita impegnare elem_id='||id_in||'.';


	strMessaggio:='Calcolo disponibilita impegnare elem_id='||id_in||
    			  '.Lettura anno di bilancio.';
  
 
-- 04.08.2017 Sofia HD-INC000001937155- commentato in seguito ad approvazione bilancio di previsione
---    ANNASILVIA CMTO FORZATURA 13-01-2017 INIZIO 
     
/*    select a.ente_proprietario_id 
    into ente_prop_in from siac_t_bil_elem a
    where a.elem_id = id_in;
    
    if ente_prop_in = 3 then
        	dispImpegnare := 9999999999;
			return dispImpegnare;
    end if;*/
---    ANNASILVIA CMTO FORZATURA 13-01-2017 FINE 
-- 04.08.2017 Sofia HD-INC000001937155- commentato in seguito ad approvazione bilancio di previsione
 
	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;

    annoBilancio:=((annoBilancio::INTEGER)+1)::varchar;

    strMessaggio:='Calcolo disponibilita impegnare elem_id='||id_in||
    			  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
    select * into stanzEffettivoRec
	from fnc_siac_stanz_effettivo_up_anno (id_in,annoBilancio);

    strMessaggio:='Calcolo disponibilita impegnare elem_id='||id_in||
                  '.Calcolo impegnato per anno='||annobilancio||'.';
    select * into diCuiImpegnatoRec
    from fnc_siac_dicuiimpegnatoup_comp_anno (id_in,annoBilancio);

   if stanzEffettivoRec.massimoimpegnabile is null then
     dispImpegnare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;
   ELSE
     if stanzEffettivoRec.massimoimpegnabile<stanzEffettivoRec.stanzEffettivo then
     	dispImpegnare:=stanzEffettivoRec.massimoImpegnabile-diCuiImpegnatoRec.diCuiImpegnato;
     else
	    dispImpegnare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;
     end if;
   end if;


return dispImpegnare;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return -1;
    when no_data_found then
			RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return -1;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return -1;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_disponibilitaimpegnareup_anno2(integer)
    OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitaimpegnareup_anno2(integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitaimpegnareup_anno2(integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitaimpegnareup_anno2(integer) TO siac;


--end fnc_siac_disponibilitaimpegnareup_anno2

--Start fnc_siac_disponibilitaimpegnareup_anno3
DROP FUNCTION if exists siac.fnc_siac_disponibilitaimpegnareup_anno3(integer);
CREATE OR REPLACE FUNCTION siac.fnc_siac_disponibilitaimpegnareup_anno3(
	id_in integer)
    RETURNS numeric
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$
DECLARE

dispImpegnare numeric:=0;
annoBilancio varchar:=null;

stanzEffettivoRec record;
diCuiImpegnatoRec record;

strMessaggio varchar(1500):=null;
 ---    ANNASILVIA CMTO FORZATURA
ente_prop_in NUMERIC:=0;

BEGIN

    strMessaggio:='Calcolo disponibilita impegnare elem_id='||id_in||'.';


	strMessaggio:='Calcolo disponibilita impegnare elem_id='||id_in||
    			  '.Lettura anno di bilancio.';
 
-- 04.08.2017 Sofia HD-INC000001937155- commentato in seguito ad approvazione bilancio di previsione
---    ANNASILVIA CMTO FORZATURA 13-01-2017 INIZIO 
     
/*    select a.ente_proprietario_id 
    into ente_prop_in from siac_t_bil_elem a
    where a.elem_id = id_in;
    
    if ente_prop_in = 3 then
        	dispImpegnare := 9999999999;
			return dispImpegnare;
    end if;
*/	
---    ANNASILVIA CMTO FORZATURA 13-01-2017 FINE 
-- 04.08.2017 Sofia HD-INC000001937155- commentato in seguito ad approvazione bilancio di previsione



	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;

    annoBilancio:=((annoBilancio::INTEGER)+2)::varchar;

    strMessaggio:='Calcolo disponibilita impegnare elem_id='||id_in||
    			  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
    select * into stanzEffettivoRec
	from fnc_siac_stanz_effettivo_up_anno (id_in,annoBilancio);

    strMessaggio:='Calcolo disponibilita impegnare elem_id='||id_in||
                  '.Calcolo impegnato per anno='||annobilancio||'.';
    select * into diCuiImpegnatoRec
    from fnc_siac_dicuiimpegnatoup_comp_anno (id_in,annoBilancio);

    if stanzEffettivoRec.massimoimpegnabile is null then
     dispImpegnare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;
    ELSE
     if stanzEffettivoRec.massimoimpegnabile<stanzEffettivoRec.stanzEffettivo then
     	dispImpegnare:=stanzEffettivoRec.massimoImpegnabile-diCuiImpegnatoRec.diCuiImpegnato;
     else
	    dispImpegnare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;
     end if;
    end if;


return dispImpegnare;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return -1;
    when no_data_found then
			RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return -1;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return -1;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_disponibilitaimpegnareup_anno3(integer)
    OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitaimpegnareup_anno3(integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitaimpegnareup_anno3(integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitaimpegnareup_anno3(integer) TO siac;
--end fnc_siac_disponibilitaimpegnareup_anno3


--Start fnc_siac_disponibilitavariareupcomp_anno1
DROP FUNCTION if exists siac.fnc_siac_disponibilitavariareupcomp_anno1(integer, integer);
CREATE OR REPLACE FUNCTION siac.fnc_siac_disponibilitavariareupcomp_anno1 (
  id_in integer,
  id_comp integer
)
    RETURNS numeric
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$
DECLARE

/*Constants*/
CAP_UP_TIPO constant varchar:='CAP-UP';

/*Variables*/
dispVariare   numeric:=0;
annoBilancio  varchar:=null;
tipoCapitolo  varchar:=null;
stanzEffettivoRec record;
diCuiImpegnatoRec record;

strMessaggio varchar(1500):=null;
BEGIN

	strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
	' - Id componente='||id_comp||'.';

	strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
    			  '.Lettura anno di bilancio e tipo elemento bilancio.';
	
	/*Calcolo annoBilancio e TipoCapitolo*/
	select per.anno, tipo.elem_tipo_code into strict annoBilancio, tipoCapitolo
	from siac_t_bil_elem bilElem,siac_d_bil_elem_tipo tipo,
         siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in
    and   bilElem.data_cancellazione is null and bilElem.validita_fine is null
    and   tipo.elem_tipo_id=bilElem.elem_tipo_id
    and   bil.bil_id=bilElem.bil_id
    and   per.periodo_id=bil.periodo_id;

	case
      when tipoCapitolo=CAP_UP_TIPO then
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UP_TIPO||
					  'Id componente='||id_comp||
    				  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
	    
		select * into stanzEffettivoRec
		from fnc_siac_stanz_effettivo_up_anno_comp (id_in, id_comp, annoBilancio);

		
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UP_TIPO||
    	              '.Calcolo impegnato per anno='||annobilancio||'.';
	    
		select * into diCuiImpegnatoRec
    	from fnc_siac_dicuiimpegnatoup_comp_anno_comp(id_in, id_comp, annoBilancio, false); --7349 MR Evita la restituzione delle modifiche provvisorie

        dispVariare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;

    end case;


return dispVariare;

exception
   when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return -1;
   when too_many_rows then
    	RAISE EXCEPTION '% Diversi records presenti in archivio.',strMessaggio;
        return -1;
    when no_data_found then
			RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return -1;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return -1;
END;
$BODY$;


ALTER FUNCTION siac.fnc_siac_disponibilitavariareupcomp_anno1 (id_in integer, id_comp integer)
  OWNER TO siac;
 
--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariareupcomp_anno1 (id_in integer, id_comp integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariareupcomp_anno1 (id_in integer, id_comp integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariareupcomp_anno1 (id_in integer, id_comp integer) TO siac;
--end fnc_siac_disponibilitavariareupcomp_anno1

--Start fnc_siac_disponibilitavariareupcomp_anno2
DROP FUNCTION if exists siac.fnc_siac_disponibilitavariareupcomp_anno2(integer, integer);
CREATE OR REPLACE FUNCTION siac.fnc_siac_disponibilitavariareupcomp_anno2 (
  id_in integer,
  id_comp integer
)
    RETURNS numeric
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$
DECLARE

/*Constants*/
CAP_UP_TIPO constant varchar:='CAP-UP';

/*Variables*/
dispVariare   numeric:=0;
annoBilancio  varchar:=null;
tipoCapitolo  varchar:=null;
stanzEffettivoRec record;
diCuiImpegnatoRec record;

strMessaggio varchar(1500):=null;
BEGIN

	strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
	' - Id componente='||id_comp||'.';

	strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
    			  '.Lettura anno di bilancio e tipo elemento bilancio.';
	
	/*Calcolo annoBilancio e TipoCapitolo*/
	select per.anno, tipo.elem_tipo_code into strict annoBilancio, tipoCapitolo
	from siac_t_bil_elem bilElem,siac_d_bil_elem_tipo tipo,
         siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in
    and   bilElem.data_cancellazione is null and bilElem.validita_fine is null
    and   tipo.elem_tipo_id=bilElem.elem_tipo_id
    and   bil.bil_id=bilElem.bil_id
    and   per.periodo_id=bil.periodo_id;

	case
      when tipoCapitolo=CAP_UP_TIPO then
	  	/*Incremento anno di bilancio +1 - riferito all'anno 2*/
	  	annoBilancio:=((annoBilancio::INTEGER)+1)::varchar;
		
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UP_TIPO||
					  'Id componente='||id_comp||
    				  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
	    select * into stanzEffettivoRec
		from fnc_siac_stanz_effettivo_up_anno_comp (id_in, id_comp, annoBilancio);

		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UP_TIPO||
    	              '.Calcolo impegnato per anno='||annobilancio||'.';
	    select * into diCuiImpegnatoRec
    	from fnc_siac_dicuiimpegnatoup_comp_anno_comp(id_in, id_comp, annoBilancio, false); --7349 MR Evita la restituzione delle modifiche provvisorie

        dispVariare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;

    end case;


return dispVariare;

exception
   when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return -1;
   when too_many_rows then
    	RAISE EXCEPTION '% Diversi records presenti in archivio.',strMessaggio;
        return -1;
    when no_data_found then
			RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return -1;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return -1;
END;
$BODY$;


ALTER FUNCTION siac.fnc_siac_disponibilitavariareupcomp_anno2 (id_in integer, id_comp integer)
  OWNER TO siac;
 
--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariareupcomp_anno2 (id_in integer, id_comp integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariareupcomp_anno2 (id_in integer, id_comp integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariareupcomp_anno2 (id_in integer, id_comp integer) TO siac;
--end fnc_siac_disponibilitavariareupcomp_anno2
  

--Start fnc_siac_disponibilitavariareupcomp_anno3
DROP FUNCTION if exists siac.fnc_siac_disponibilitavariareupcomp_anno3(integer, integer);
CREATE OR REPLACE FUNCTION siac.fnc_siac_disponibilitavariareupcomp_anno3 (
  id_in integer,
  id_comp integer
)
    RETURNS numeric
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$
DECLARE


/*Constants*/
CAP_UP_TIPO constant varchar:='CAP-UP';


/*Variables*/
dispVariare   numeric:=0;
annoBilancio  varchar:=null;
tipoCapitolo  varchar:=null;
stanzEffettivoRec record;
diCuiImpegnatoRec record;

strMessaggio varchar(1500):=null;
BEGIN

	strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
	' - Id componente='||id_comp||'.';

	strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
    			  '.Lettura anno di bilancio e tipo elemento bilancio.';

	/*Calcolo annoBilancio e TipoCapitolo*/
	select per.anno, tipo.elem_tipo_code into strict annoBilancio, tipoCapitolo
	from siac_t_bil_elem bilElem,siac_d_bil_elem_tipo tipo,
         siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in
    and   bilElem.data_cancellazione is null and bilElem.validita_fine is null
    and   tipo.elem_tipo_id=bilElem.elem_tipo_id
    and   bil.bil_id=bilElem.bil_id
    and   per.periodo_id=bil.periodo_id;

	case
      when tipoCapitolo=CAP_UP_TIPO then
	  	
		  annoBilancio:=((annoBilancio::INTEGER)+2)::varchar; /*Anno + 2*/
		
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
    		          'Tipo elemento di bilancio='||CAP_UP_TIPO||
					  'Id componente='||id_comp||
    				  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
		select * into stanzEffettivoRec
		from fnc_siac_stanz_effettivo_up_anno_comp (id_in, id_comp, annoBilancio);	
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
    		          'Tipo elemento di bilancio='||CAP_UP_TIPO||
    	              '.Calcolo impegnato per anno='||annobilancio||'.';
		select * into diCuiImpegnatoRec
    	from fnc_siac_dicuiimpegnatoup_comp_anno_comp(id_in, id_comp, annoBilancio, false); --7349 MR Evita la restituzione delle modifiche provvisorie	
    	dispVariare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;

    end case;


return dispVariare;

exception
   when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return -1;
   when too_many_rows then
    	RAISE EXCEPTION '% Diversi records presenti in archivio.',strMessaggio;
        return -1;
    when no_data_found then
			RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return -1;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return -1;
END;
$BODY$;


ALTER FUNCTION siac.fnc_siac_disponibilitavariareupcomp_anno3 (id_in integer, id_comp integer)
  OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariareupcomp_anno3 (id_in integer, id_comp integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariareupcomp_anno3 (id_in integer, id_comp integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariareupcomp_anno3 (id_in integer, id_comp integer) TO siac;
--end fnc_siac_disponibilitavariareupcomp_anno3



--Start fnc_siac_dicuiimpegnatoug_comp_anno_comp
CREATE OR REPLACE FUNCTION siac.fnc_siac_dicuiimpegnatoug_comp_anno_comp (
  id_in integer,
  anno_in varchar,
  idcomp_in integer,
  verifica_mod_prov boolean = true
)
RETURNS TABLE (
  annocompetenza varchar,
  dicuiimpegnato numeric
) AS
$body$
DECLARE


-- constant
TIPO_CAP_UG constant varchar:='CAP-UG';
NVL_STR     constant varchar:='';
STA_IMP     constant varchar:='STA';

TIPO_IMP    constant varchar:='I';
TIPO_IMP_T  constant varchar:='T';

STATO_DEF   constant varchar:='D';
STATO_N     constant varchar:='N';
STATO_P     constant varchar:='P';
STATO_A     constant varchar:='A';
IMPORTO_ATT constant varchar:='A';

STATO_MOD_V  constant varchar:='V';
STATO_ATTO_P constant varchar:='PROVVISORIO';

-- anna_economie inizio
STATO_ATTO_D constant varchar:='DEFINITIVO';
attoAmmStatoDId integer:=0;
importoModifINS  numeric:=0;
-- anna_economie fine

strMessaggio varchar(1500):=NVL_STR;

bilancioId integer:=0;
enteProprietarioId INTEGER:=0;
annoBilancio varchar:=null;

movGestTipoId integer:=0;
movGestTsTipoId integer:=0;
movGestStatoId integer:=0;
movGestTsDetTipoId integer:=0;

movGestTsId integer:=0;

importoAttuale numeric:=0;
importoCurAttuale numeric:=0;
importoModifNeg  numeric:=0;

modStatoVId integer:=0;
attoAmmStatoPId integer:=0;

movGestIdRec record;

esisteRmovgestidelemid INTEGER:=0;

BEGIN

select el.elem_id into esisteRmovgestidelemid from siac_r_movgest_bil_elem el, siac_t_movgest mv
where
mv.movgest_id=el.movgest_id
and el.elem_id=id_in
and mv.movgest_anno=anno_in::integer
and el.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
;

 -- 02.02.2016 Sofia JIRA 2947
if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;

if esisteRmovgestidelemid <>0 then

 annoCompetenza:=null;
 diCuiImpegnato:=0;

 strMessaggio:='Calcolo impegnato di competenza elem_id='||id_in||'.Controllo parametri.';

 if anno_in is null or anno_in=NVL_STR then
	 RAISE EXCEPTION '% Anno di competenza mancante.',strMessaggio;
 end if;

 if id_in is null or id_in=0 then
	 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
 end if;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
			   ||'.Calcolo bilancioId enteProprietarioId  annoBilancio.';

 select bil.bil_id,  bil.ente_proprietario_id,  per.anno
        into strict bilancioId, enteProprietarioId, annoBilancio
 from siac_t_bil bil,siac_t_bil_elem bilElem, siac_t_periodo per
 where bilElem.elem_id=id_in
 and   bilElem.data_cancellazione is null
 and   bil.bil_id=bilElem.bil_id
 and   per.periodo_id=bil.periodo_id;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo movGestTipoId.';
 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
 from  siac_d_movgest_tipo tipoMovGest
 where tipoMovGest.ente_proprietario_id=enteProprietarioId
 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo movGestTsTipoId.';

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo movGestTsStatoId.';

 select movGestStato.movgest_stato_id into strict movGestStatoId
 from siac_d_movgest_stato movGestStato
 where movGestStato.ente_proprietario_id=enteProprietarioId
 and   movGestStato.movgest_stato_code=STATO_A;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo movGestTsDetTipoId.';

 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT;

 -- 16.03.2017 Sofia JIRA-SIAC-4614
 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo modStatoVId.';
 select d.mod_stato_id into strict modStatoVId
 from siac_d_modifica_stato d
 where d.ente_proprietario_id=enteProprietarioId
 and   d.mod_stato_code=STATO_MOD_V;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo attoAmmStatoPId.';
 select d.attoamm_stato_id into strict attoAmmStatoPId
 from siac_d_atto_amm_stato d
 where d.ente_proprietario_id=enteProprietarioId
 and   d.attoamm_stato_code=STATO_ATTO_P;
 -- 16.03.2017 Sofia JIRA-SIAC-4614

 -- anna_economie inizio
 select d.attoamm_stato_id into strict attoAmmStatoDId
 from siac_d_atto_amm_stato d
 where d.ente_proprietario_id=enteProprietarioId
 and   d.attoamm_stato_code=STATO_ATTO_D;
 -- anna_economie fine

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'. Inizio calcolo totale importo attuale impegni per anno_in='||anno_in||'.';

 --nuovo G
   	importoCurAttuale:=0;

    select tb.importo into importoCurAttuale
 from (
  select
      coalesce(sum(e.movgest_ts_det_importo),0)  importo
      , c.movgest_ts_tipo_id
    from
      siac_r_movgest_bil_elem a,
      siac_t_movgest b,
      siac_t_movgest_ts c,
      siac_r_movgest_ts_stato d,
      siac_t_movgest_ts_det e
      ,siac_d_movgest_ts_det_tipo f
      where
      b.movgest_id=a.movgest_id and
      a.elem_id=id_in and
	  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349
      and b.bil_id = bilancioId
      and b.movgest_tipo_id=movGestTipoId
	  and d.movgest_stato_id<>movGestStatoId
	  and b.movgest_anno = anno_in::integer
      and c.movgest_id=b.movgest_id
      and d.movgest_ts_id=c.movgest_ts_id
      and d.validita_fine is null
      and e.movgest_ts_id=c.movgest_ts_id
	and a.data_cancellazione is null
    and b.data_cancellazione is null
    and c.data_cancellazione is null
     and e.data_cancellazione is null
     and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
    and e.movgest_ts_det_tipo_id=movGestTsDetTipoId
    group by
   c.movgest_ts_tipo_id
    ) tb, siac_d_movgest_ts_tipo t
    where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
    order by t.movgest_ts_tipo_code desc
    limit 1;


 -- 02.02.2016 Sofia JIRA 2947
 if importoCurAttuale is null then importoCurAttuale:=0; end if;

 -- 16.03.2017 Sofia JIRA-SIAC-4614
-- if importoCurAttuale>0 then
 if importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

  strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'. Calcolo totale modifiche negative su atti provvisori per anno_in='||anno_in||'.';

 select tb.importo into importoModifNeg
 from
 (
 	select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
	from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
    	 siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
	     siac_t_movgest_ts_det_mod moddet,
    	 siac_t_modifica mod, siac_r_modifica_stato rmodstato,
	     siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
         siac_d_modifica_tipo tipom
	where rbil.elem_id=id_in
	 and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
	and	  mov.movgest_id=rbil.movgest_id
	and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
    and   mov.movgest_anno=anno_in::integer
    and   mov.bil_id=bilancioId
	and   ts.movgest_id=mov.movgest_id
	and   rstato.movgest_ts_id=ts.movgest_ts_id
	and   rstato.movgest_stato_id!=movGestStatoId -- impegno non annullato
	and   tsdet.movgest_ts_id=ts.movgest_ts_id
	and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
	and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
	and   moddet.movgest_ts_det_importo<0 -- importo negativo
	and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
	and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
	and   mod.mod_id=rmodstato.mod_id
	and   atto.attoamm_id=mod.attoamm_id
	and   attostato.attoamm_id=atto.attoamm_id
	and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
    and   tipom.mod_tipo_id=mod.mod_tipo_id
    and   tipom.mod_tipo_code <> 'ECONB'
	-- date
	and rbil.data_cancellazione is null
	and rbil.validita_fine is null
	and mov.data_cancellazione is null
	and mov.validita_fine is null
	and ts.data_cancellazione is null
	and ts.validita_fine is null
	and rstato.data_cancellazione is null
	and rstato.validita_fine is null
	and tsdet.data_cancellazione is null
	and tsdet.validita_fine is null
	and moddet.data_cancellazione is null
	and moddet.validita_fine is null
	and mod.data_cancellazione is null
	and mod.validita_fine is null
	and rmodstato.data_cancellazione is null
	and rmodstato.validita_fine is null
	and attostato.data_cancellazione is null
	and attostato.validita_fine is null
	and atto.data_cancellazione is null
	and atto.validita_fine is null
    group by ts.movgest_ts_tipo_id
  ) tb, siac_d_movgest_ts_tipo tipo
  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
  order by tipo.movgest_ts_tipo_code desc
  limit 1;
  -- 21.06.2017 Sofia - aggiunto parametro verifica_mod_prov, ripreso da prod CmTo dove era stato implementato
  if importoModifNeg is null or verifica_mod_prov is false then importoModifNeg:=0; end if;

  -- anna_economie inizio
   select tb.importo into importoModifINS
 from
 (
 	select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
	from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
    	 siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
	     siac_t_movgest_ts_det_mod moddet,
    	 siac_t_modifica mod, siac_r_modifica_stato rmodstato,
	     siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
         siac_d_modifica_tipo tipom
	where rbil.elem_id=id_in
	and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
	and	  mov.movgest_id=rbil.movgest_id
	and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
    and   mov.movgest_anno=anno_in::integer
    and   mov.bil_id=bilancioId
	and   ts.movgest_id=mov.movgest_id
	and   rstato.movgest_ts_id=ts.movgest_ts_id
	and   rstato.movgest_stato_id!=movGestStatoId -- impegno non annullato
	and   tsdet.movgest_ts_id=ts.movgest_ts_id
	and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
	and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
	and   moddet.movgest_ts_det_importo<0 -- importo negativo
	and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
	and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
	and   mod.mod_id=rmodstato.mod_id
	and   atto.attoamm_id=mod.attoamm_id
	and   attostato.attoamm_id=atto.attoamm_id
	and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
    and   tipom.mod_tipo_id=mod.mod_tipo_id
    and   tipom.mod_tipo_code = 'ECONB'
	-- date
	and rbil.data_cancellazione is null
	and rbil.validita_fine is null
	and mov.data_cancellazione is null
	and mov.validita_fine is null
	and ts.data_cancellazione is null
	and ts.validita_fine is null
	and rstato.data_cancellazione is null
	and rstato.validita_fine is null
	and tsdet.data_cancellazione is null
	and tsdet.validita_fine is null
	and moddet.data_cancellazione is null
	and moddet.validita_fine is null
	and mod.data_cancellazione is null
	and mod.validita_fine is null
	and rmodstato.data_cancellazione is null
	and rmodstato.validita_fine is null
	and attostato.data_cancellazione is null
	and attostato.validita_fine is null
	and atto.data_cancellazione is null
	and atto.validita_fine is null
    group by ts.movgest_ts_tipo_id
  ) tb, siac_d_movgest_ts_tipo tipo
  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
  order by tipo.movgest_ts_tipo_code desc
  limit 1;
  
  if importoModifINS is null then importoModifINS:=0; end if;
  
  -- anna_economie fine

 end if;

 --nuovo G
 importoAttuale:=importoAttuale+importoCurAttuale+abs(importoModifNeg); -- 16.03.2017 Sofia JIRA-SIAC-4614
 --fine nuovoG

 -- anna_economie inizio
 importoAttuale:=importoAttuale+abs(importoModifINS);
 -- anna_economie fine 

 annoCompetenza:=anno_in;
 diCuiImpegnato:=importoAttuale;

 return next;

else

annoCompetenza:=anno_in;
diCuiImpegnato:=0;

return next;

end if;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return;
	when no_data_found then
	    RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100 ROWS 1000;

ALTER FUNCTION siac.fnc_siac_dicuiimpegnatoug_comp_anno_comp(integer, varchar, integer, boolean)
    OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoug_comp_anno_comp(integer, varchar, integer, boolean) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoug_comp_anno_comp(integer, varchar, integer, boolean) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoug_comp_anno_comp(integer, varchar, integer, boolean) TO siac;

--end fnc_siac_dicuiimpegnatoug_comp_anno_comp


--Start fnc_siac_dicuiimpegnatoup_annisucc
/*
*SPDX-FileCopyrightText: Copyright 2020 | CSI Piemonte
*SPDX-License-Identifier: EUPL-1.2
*/
CREATE OR REPLACE FUNCTION siac.fnc_siac_dicuiimpegnatoup_annisucc (
  id_in integer
)
RETURNS numeric AS
$body$
DECLARE
annoBilancio varchar:=null;
annoEsercizio varchar:=null;
annoMovimento varchar:=null;
impegnatoDefinitivo numeric:=0;
elemIdGestEq integer:=0;
bilIdElemGestEq integer:=0;
NVL_STR     constant varchar:='';
faseOpCode varchar(20):=NVL_STR;
bilancioId integer:=0;
elemTipoCode VARCHAR(20):=NVL_STR;
elemCode varchar(50):=NVL_STR;
elemCode2 varchar(50):=NVL_STR;
elemCode3 varchar(50):=NVL_STR;
enteProprietarioId INTEGER:=0;
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
FASE_OP_BIL_PREV constant VARCHAR:='P';
STATO_A     constant varchar:='A';
STATO_P     constant varchar:='P';
TIPO_IMP    constant varchar:='I';
movGestStatoIdAnnullato integer:=0;
movGestStatoIdProvvisorio integer:=0;
movGestTipoId integer:=0;
IMPORTO_ATT constant varchar:='A';
movGestTsDetTipoId integer:=0;
IMPORTO_INIZIALE constant varchar:='I';
movGestTsDetTipoIdIniziale integer:=0;
STATO_MOD_V  constant varchar:='V';
modStatoVId integer:=0;
attoAmmStatoPId integer:=0;
STATO_ATTO_P constant varchar:='PROVVISORIO';
STATO_ATTO_D constant varchar:='DEFINITIVO';
attoAmmStatoDId integer:=0;
importoCurAttuale numeric:=0;
esisteRmovgestidelemid INTEGER:=0;
importoModifDelta  numeric:=0;
impegniDaRibaltamento integer:=0;
pluriennaliDaRibaltamento integer:=0;
flagNMaggioreNPiu2 integer:=0;
importoImpegnato integer:=0;

strMessaggio varchar(1500):=null;
BEGIN

    strMessaggio:='Calcolo totale impegnato per anni successivi elem_id='||id_in||'.';

	-- Controllo parametri in input
	if id_in is null or id_in=0 then
		 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
	end if;

	strMessaggio:='Calcolo totale impegnato  elem_id='||id_in||'. Lettura anno di bilancio del capitolo UP.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;


	strMessaggio:='Calcolo totale impegnato  elem_id='||id_in||'. Determina capitolo di gestione equivalente in anno esercizio di calcolato. Calcolo bilancioId e elem_tipo_code.';
	 select bilelem.elem_code, bilElem.elem_code2, bilElem.elem_code3, bil.bil_id ,tipoBilElem.elem_tipo_code, per.anno , bil.ente_proprietario_id
	 into strict elemCode, elemCode2, elemCode3, bilancioId, elemTipoCode , annoBilancio,enteProprietarioId
	 from 	siac_t_bil_elem bilElem,
	 		siac_d_bil_elem_tipo tipoBilElem,
		  	siac_t_bil bil, siac_t_periodo per
	 where bilElem.elem_id=id_in
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
	   and bil.bil_id=bilElem.bil_id
	   and per.periodo_id=bil.periodo_id;

	 if elemTipoCode is not null and elemTipoCode!=NVL_STR and elemTipoCode!=TIPO_CAP_UP then
			RAISE EXCEPTION '% elemTipoCode=%  non ammesso per tipo di calcolo.',strMessaggio,elemTipoCode;
	 end if;

	 strMessaggio:='Calcolo totale impegnato  elem_id='||id_in||'. Determina capitolo di gestione equivalente in anno esercizio calcolato. Calcolo fase operativa per bilancioId='||bilancioId||' , per ente='||enteProprietarioId||' e per elem_id='||id_in||'.';

	 select  faseOp.fase_operativa_code into  faseOpCode
	 from siac_r_bil_fase_operativa bilFase, siac_d_fase_operativa faseOp
	 where bilFase.bil_id =bilancioId
	   and bilfase.data_cancellazione is null
	   and bilFase.validita_fine is null
	   and faseOp.fase_operativa_id=bilFase.fase_operativa_id
	   and faseOp.data_cancellazione is null
	 order by bilFase.bil_fase_operativa_id desc;

	 if NOT FOUND THEN
	   RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
	 end if;

	 strMessaggio:='Calcolo impegnato  elem_id='||id_in||'. Calcolo movGestTipoId per movgest_tipo_code=IMPEGNO';
	 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
	 from  siac_d_movgest_tipo tipoMovGest
	 where tipoMovGest.ente_proprietario_id=enteProprietarioId
	 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

	 strMessaggio:='Calcolo impegnato competenza anni successivi elem_id='||id_in||
				  '. Calcolo movGestTsStatoIdAnnullato per movgest_stato_code=ANNULLATO'
				  '. Calcolo movGestTsStatoIdProvvisorio per movgest_stato_code=PROVVISORIO';

	 select movGestStato.movgest_stato_id into strict movGestStatoIdAnnullato
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_A;

	 select  movGestStato.movgest_stato_id into strict movGestStatoIdProvvisorio
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_P;

	 strMessaggio:='Calcolo impegnato competenza anni successivi elem_id='||id_in||
				  '. Calcolo movGestTsDetTipoId per movgest_ts_det_tipo_code=IMPORTO ATTUALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT; --'A'

	 strMessaggio:='Calcolo impegnato competenza anni successivi elem_id='||id_in||
				  '. Calcolo movGestTsDetTipoIdIniziale per movgest_ts_det_tipo_code=IMPORTO INIZIALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoIdIniziale
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_INIZIALE; --'I'

	 strMessaggio:='Calcolo impegnato competenza anni successivi elem_id='||id_in||
              '. Calcolo modStatoVId per mod_stato_code=VALIDO.';
	 select d.mod_stato_id into strict modStatoVId
	 from siac_d_modifica_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.mod_stato_code=STATO_MOD_V;

	 strMessaggio:='Calcolo impegnato competenza anni successivi elem_id='||id_in||
				  '. Calcolo attoAmmStatoPId per attoamm_stato_code=PROVVISORIO';
	 select d.attoamm_stato_id into strict attoAmmStatoPId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_P;

	 strMessaggio:='Calcolo impegnato competenza anni successivi elem_id='||id_in||'. Calcolo attoAmmStatoDId per attoamm_stato_code=DEFINITIVO';
	 select d.attoamm_stato_id into strict attoAmmStatoDId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_D;

 	-- Calcolo Impegnato definitivo - Anno > N+2:
	-- - Se presenti i movimenti gestione provenienti dal ribaltamento
	--		Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in e anno movimento > N+2 e anno esercizio N
	-- - Se non presenti i movimenti gestione provenienti dal ribaltamento
	-- 		Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in e anno movimento > N+2 e anno esercizio N-1
	-- Il capitolo usato per determinare gli impegni e' quello UG Equivalente

	-- Verifica se presenti i movimenti di gestione provenienti dal ribaltamento
	-- Per "ribaltamento" si intende  il batch di ribaltamento residui che gira prima del ROR
	--		e che "copia" gli impegni dell'anno N-1 nel bilancio dell'anno N (di solito il 2 gennaio)
	-- Per verificare che il batch di ribaltamento sia stato eseguito controllo le seguenti tabelle
	-- 		fase_bil_t_gest_apertura_liq_imp per gli impegni residui
	--  	fase_bil_t_gest_apertura_pluri per i pluriennli (sia impegni che accertamenti)
	-- In entrambe c'e' sia il bil_id che il bil_id_orig ovvero l'anno nuovo su cui si stanno ribaltando i movimenti e l'anno prec
	-- c'e' anche un campo fl_elab che ti dice se i dati sono stati elaborati con scarto o con successo
	strMessaggio:='Calcolo totale impegnato anni successivi elem_id='||id_in||
				 '.Verifica se presenti i movimenti di gestione provenienti dal ribaltamento per anno di esercizio N.';

	impegniDaRibaltamento:=0;
	pluriennaliDaRibaltamento:=0;
	importoCurAttuale:=0;
	importoModifDelta:=0;

	select  count(*) into impegniDaRibaltamento
	from fase_bil_t_gest_apertura_liq_imp fb
	where
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;

	select  count(*) into  pluriennaliDaRibaltamento
	from fase_bil_t_gest_apertura_pluri fb
	where
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;

	if impegniDaRibaltamento>0 and pluriennaliDaRibaltamento>0 then

	-- - Se presenti i movimenti gestione provenienti dal ribaltamento
	--		ImpegnatoDefinitivo = Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in
	--		e anno movimento > N+2 e anno esercizio N

		annoEsercizio:=annoBilancio;
		annoMovimento:=((annoBilancio::INTEGER)+2)::varchar;
		flagNMaggioreNPiu2:=1;
	else

		-- - Se non presenti i movimenti gestione provenienti dal ribaltamento
		-- 	ImpegnatoDefinitivo = Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in
		-- 	e anno movimento > N+2 e anno esercizio N-1

		annoEsercizio:=((annoBilancio::INTEGER)-1)::varchar;
		annoMovimento:=((annoBilancio::INTEGER)+2)::varchar;
		flagNMaggioreNPiu2:=1;
	end if;

	strMessaggio:='Calcolo totale impegnato anni successivi elem_id='||id_in||'. Determina capitolo di gestione equivalente in anno esercizio calcolato.';
				   --Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    -- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo impegnato competenza UP anni successivi.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;
	else

		strMessaggio:='Calcolo totale impegnato anni successivi elem_id='||id_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq||
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento||
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno>annoMovimento::integer
			--and el.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349, punto 21/04/2020
			;

		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;

		if esisteRmovgestidelemid <>0 then
 			impegnatoDefinitivo:=0;
			strMessaggio:='Calcolo totale impegnato anni successivi elem_id='||id_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq||
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

			importoCurAttuale:=0;
			select tb.importo into importoCurAttuale
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq  -- UID del capitolo di gestione equivalente
				  --and a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  -- SIAC-7737 GS 31/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  -- and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno > annoMovimento::integer -- anno dell impegno > annoMovimento
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;

			-- 02.02.2016 Sofia JIRA 2947
			 if importoCurAttuale is null then importoCurAttuale:=0; end if;

			 -- 16.03.2017 Sofia JIRA-SIAC-4614
			-- if importoCurAttuale>0 then

			 /*COMMENTO MLR adeguamento 7349 SPRINT-5
			 Non e' piu' richiesto di restituire all'impegnato le modifiche provvisorie 
				if importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

				strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq||
				'. Calcolo totale modifiche su atti provvisori per annoMovimento='||annoMovimento||'.';

				select tb.importo into importoModifDelta
				 from
				 (
					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil,
					 	 siac_t_movgest mov,
					 	 siac_t_movgest_ts ts,
						 siac_r_movgest_ts_stato rstato,
					  	 siac_t_movgest_ts_det tsdet,
						 siac_t_movgest_ts_det_mod moddet,
						 siac_t_modifica mod,
					 	 siac_r_modifica_stato rmodstato,
						 siac_r_atto_amm_stato attostato,
					 	 siac_t_atto_amm atto,
						 siac_d_modifica_tipo tipom
					where
						rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
						--and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349 in questo caso, non sulla componente
						and	  mov.movgest_id=rbil.movgest_id
						and   mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
						and   mov.movgest_anno>annoMovimento::integer -- anno dell impegno = annoMovimento
						and   mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
						and   ts.movgest_id=mov.movgest_id
						and   rstato.movgest_ts_id=ts.movgest_ts_id
						and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- Impegno non ANNULLATO
						and   rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
					    and   tsdet.movgest_ts_id=ts.movgest_ts_id
						and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
					 	and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
						and   tipom.mod_tipo_id=mod.mod_tipo_id
						and   tipom.mod_tipo_code <> 'ECONB'
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
						group by ts.movgest_ts_tipo_id
					  ) tb, siac_d_movgest_ts_tipo tipo
					  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					  order by tipo.movgest_ts_tipo_code desc
					  limit 1;

 				if importoModifDelta is null then importoModifDelta:=0; end if;


			end if;		*/
		end if;
	end if;
    --FIX 7349 SPRINT5
    importoModifDelta:=0;
    --END FIX
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente per l'anno N-1
	impegnatoDefinitivo:=impegnatoDefinitivo+importoCurAttuale-(importoModifDelta);

	return impegnatoDefinitivo;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return -1;
    when no_data_found then
	RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return -1;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return -1;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100;


ALTER FUNCTION siac.fnc_siac_dicuiimpegnatoup_annisucc (id_in integer)
  OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_annisucc (id_in integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_annisucc (id_in integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_annisucc (id_in integer) TO siac;
    
--end fnc_siac_dicuiimpegnatoup_annisucc

--Start fnc_siac_dicuiimpegnatoup_annoprec
/*
*SPDX-FileCopyrightText: Copyright 2020 | CSI Piemonte
*SPDX-License-Identifier: EUPL-1.2
*/
CREATE OR REPLACE FUNCTION siac.fnc_siac_dicuiimpegnatoup_annoprec (
  id_in integer
)
RETURNS numeric AS
$body$
DECLARE
annoBilancio varchar:=null;
annoEsercizio varchar:=null;
annoMovimento varchar:=null;
impegnatoDefinitivo numeric:=0;
elemIdGestEq integer:=0;
bilIdElemGestEq integer:=0;
NVL_STR     constant varchar:='';
faseOpCode varchar(20):=NVL_STR;
bilancioId integer:=0;
elemTipoCode VARCHAR(20):=NVL_STR;
elemCode varchar(50):=NVL_STR;
elemCode2 varchar(50):=NVL_STR;
elemCode3 varchar(50):=NVL_STR;
enteProprietarioId INTEGER:=0;
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
FASE_OP_BIL_PREV constant VARCHAR:='P';
STATO_A     constant varchar:='A';
STATO_P     constant varchar:='P';
TIPO_IMP    constant varchar:='I';
movGestStatoIdAnnullato integer:=0;
movGestStatoIdProvvisorio integer:=0;
movGestTipoId integer:=0;
IMPORTO_ATT constant varchar:='A';
movGestTsDetTipoId integer:=0;
IMPORTO_INIZIALE constant varchar:='I';
movGestTsDetTipoIdIniziale integer:=0;
STATO_MOD_V  constant varchar:='V';
modStatoVId integer:=0;
attoAmmStatoPId integer:=0;
STATO_ATTO_P constant varchar:='PROVVISORIO';
STATO_ATTO_D constant varchar:='DEFINITIVO';
attoAmmStatoDId integer:=0;
importoCurAttuale numeric:=0;
esisteRmovgestidelemid INTEGER:=0;
importoModifDelta  numeric:=0;
impegniDaRibaltamento integer:=0;
pluriennaliDaRibaltamento integer:=0;
flagNMaggioreNPiu2 integer:=0;
importoImpegnato integer:=0;

strMessaggio varchar(1500):=null;
BEGIN



    strMessaggio:='Calcolo totale impegnato anno precedente elem_id='||id_in||'.';

	-- Controllo parametri in input
	if id_in is null or id_in=0 then
		 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
	end if;

	strMessaggio:='Calcolo totale impegnato anno precedente elem_id='||id_in||'. Lettura anno di bilancio del capitolo UP.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;


	strMessaggio:='Calcolo totale impegnato anno precedente elem_id='||id_in||'. Determina capitolo di gestione equivalente in anno esercizio di calcolato. Calcolo bilancioId e elem_tipo_code.';
	 select bilelem.elem_code, bilElem.elem_code2, bilElem.elem_code3, bil.bil_id ,tipoBilElem.elem_tipo_code, per.anno , bil.ente_proprietario_id
	 into strict elemCode, elemCode2, elemCode3, bilancioId, elemTipoCode , annoBilancio,enteProprietarioId
	 from 	siac_t_bil_elem bilElem,
	 		siac_d_bil_elem_tipo tipoBilElem,
		  	siac_t_bil bil, siac_t_periodo per
	 where bilElem.elem_id=id_in
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
	   and bil.bil_id=bilElem.bil_id
	   and per.periodo_id=bil.periodo_id;

	 if elemTipoCode is not null and elemTipoCode!=NVL_STR and elemTipoCode!=TIPO_CAP_UP then
			RAISE EXCEPTION '% elemTipoCode=%  non ammesso per tipo di calcolo.',strMessaggio,elemTipoCode;
	 end if;

	 strMessaggio:='Calcolo totale impegnato anno precedente elem_id='||id_in||'. Determina capitolo di gestione equivalente in anno esercizio calcolato. Calcolo fase operativa per bilancioId='||bilancioId||' , per ente='||enteProprietarioId||' e per elem_id='||id_in||'.';

	 select  faseOp.fase_operativa_code into  faseOpCode
	 from siac_r_bil_fase_operativa bilFase, siac_d_fase_operativa faseOp
	 where bilFase.bil_id =bilancioId
	   and bilfase.data_cancellazione is null
	   and bilFase.validita_fine is null
	   and faseOp.fase_operativa_id=bilFase.fase_operativa_id
	   and faseOp.data_cancellazione is null
	 order by bilFase.bil_fase_operativa_id desc;

	 if NOT FOUND THEN
	   RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
	 end if;

	 strMessaggio:='Calcolo impegnato anno precedente elem_id='||id_in||'. Calcolo movGestTipoId per movgest_tipo_code=IMPEGNO';
	 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
	 from  siac_d_movgest_tipo tipoMovGest
	 where tipoMovGest.ente_proprietario_id=enteProprietarioId
	 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

	 strMessaggio:='Calcolo impegnato anno precedente elem_id='||id_in||
				  '. Calcolo movGestTsStatoIdAnnullato per movgest_stato_code=ANNULLATO'
				  '. Calcolo movGestTsStatoIdProvvisorio per movgest_stato_code=PROVVISORIO';

	 select movGestStato.movgest_stato_id into strict movGestStatoIdAnnullato
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_A;

	 select  movGestStato.movgest_stato_id into strict movGestStatoIdProvvisorio
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_P;

	 strMessaggio:='Calcolo impegnato anno precedente elem_id='||id_in||
				  '. Calcolo movGestTsDetTipoId per movgest_ts_det_tipo_code=IMPORTO ATTUALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT; --'A'

	 strMessaggio:='Calcolo impegnato anno precedente elem_id='||id_in||
				  '. Calcolo movGestTsDetTipoIdIniziale per movgest_ts_det_tipo_code=IMPORTO INIZIALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoIdIniziale
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_INIZIALE; --'I'

	 strMessaggio:='Calcolo impegnato anno precedente elem_id='||id_in||
              '. Calcolo modStatoVId per mod_stato_code=VALIDO.';
	 select d.mod_stato_id into strict modStatoVId
	 from siac_d_modifica_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.mod_stato_code=STATO_MOD_V;

	 strMessaggio:='Calcolo impegnato anno precedente elem_id='||id_in||
				  '. Calcolo attoAmmStatoPId per attoamm_stato_code=PROVVISORIO';
	 select d.attoamm_stato_id into strict attoAmmStatoPId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_P;

	 strMessaggio:='Calcolo impegnato anno precedente elem_id='||id_in||'. Calcolo attoAmmStatoDId per attoamm_stato_code=DEFINITIVO';
	 select d.attoamm_stato_id into strict attoAmmStatoDId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_D;

 	-- Calcolo Impegnato per  Anno = N-1 :

	importoCurAttuale:=0;
	importoModifDelta:=0;
	annoEsercizio:=((annoBilancio::INTEGER)-1)::varchar;
	annoMovimento:=((annoBilancio::INTEGER)-1)::varchar;


	strMessaggio:='Calcolo totale impegnato anno precedente elem_id='||id_in||'. Determina capitolo di gestione equivalente in anno esercizio calcolato.';
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo impegnato anno precedente UP.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;
	else

		strMessaggio:='Calcolo totale impegnato anno precedente elem_id='||id_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq||
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento||
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno=annoMovimento::integer
			--and el.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349, punto 21/04/2020
			;

		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;

		if esisteRmovgestidelemid <>0 then
 			impegnatoDefinitivo:=0;
			strMessaggio:='Calcolo totale impegnato anno precedente elem_id='||id_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq||
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

			importoCurAttuale:=0;
			select tb.importo into importoCurAttuale
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq  -- UID del capitolo di gestione equivalente
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  -- SIAC-7737 GS 31/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  -- and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno = annoMovimento::integer -- anno dell impegno = annoMovimento
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;

			-- 02.02.2016 Sofia JIRA 2947
			 if importoCurAttuale is null then importoCurAttuale:=0; end if;

			 -- 16.03.2017 Sofia JIRA-SIAC-4614
			-- if importoCurAttuale>0 then

			 /*COMMENTO MLR adeguamento 7349 SPRINT-5
			 Non si deve piu' restituire le modifiche provvisorie e le ECONB all'impegnato
			 
				if importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

				strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq||
				'. Calcolo totale modifiche su atti provvisori per annoMovimento='||annoMovimento||'.';

				select tb.importo into importoModifDelta
				 from
				 (
					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil,
					 	 siac_t_movgest mov,
					 	 siac_t_movgest_ts ts,
						 siac_r_movgest_ts_stato rstato,
					  	 siac_t_movgest_ts_det tsdet,
						 siac_t_movgest_ts_det_mod moddet,
						 siac_t_modifica mod,
					 	 siac_r_modifica_stato rmodstato,
						 siac_r_atto_amm_stato attostato,
					 	 siac_t_atto_amm atto,
						 siac_d_modifica_tipo tipom
					where
						rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
						--and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349 in questo caso, non sulla componente
						and	  mov.movgest_id=rbil.movgest_id
						and   mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
						and   mov.movgest_anno>annoMovimento::integer -- anno dell impegno = annoMovimento
						and   mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
						and   ts.movgest_id=mov.movgest_id
						and   rstato.movgest_ts_id=ts.movgest_ts_id
						and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- Impegno non ANNULLATO
						and   rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
					    and   tsdet.movgest_ts_id=ts.movgest_ts_id
						and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
						and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
						and   tipom.mod_tipo_id=mod.mod_tipo_id
						and   tipom.mod_tipo_code <> 'ECONB'
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
						group by ts.movgest_ts_tipo_id
					  ) tb, siac_d_movgest_ts_tipo tipo
					  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					  order by tipo.movgest_ts_tipo_code desc
					  limit 1;

 				if importoModifDelta is null then importoModifDelta:=0; end if;


			end if;		*/
		end if;
	end if;
    --FIX 7349 SPRINT 5
    importoModifDelta:=0;
    --END FIX
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente per l'anno N-1
	impegnatoDefinitivo:=impegnatoDefinitivo+importoCurAttuale-(importoModifDelta);

	return impegnatoDefinitivo;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        impegnatoDefinitivo:=0;
        return impegnatoDefinitivo;
    when no_data_found then
    	RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        impegnatoDefinitivo:=0;
        return impegnatoDefinitivo;
    when others  THEN
    	RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        impegnatoDefinitivo:=0;
        return impegnatoDefinitivo;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100;


ALTER FUNCTION siac.fnc_siac_dicuiimpegnatoup_annoprec (id_in integer)
  OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_annoprec(integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_annoprec(integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_annoprec(integer) TO siac;
--end fnc_siac_dicuiimpegnatoup_annoprec

--Start fnc_siac_dicuiimpegnatoup_comp_anno_comp
CREATE OR REPLACE FUNCTION siac.fnc_siac_dicuiimpegnatoup_comp_anno_comp(
	id_in integer,
	id_comp integer,
	anno_in character varying,
	verifica_mod_prov boolean = true)
    RETURNS TABLE(annocompetenza character varying, dicuiimpegnato numeric) 
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$
DECLARE
/* 
Calcolo dell'impegnato di un capitolo di previsione id_in su una componente id_comp per l'anno anno_it,
utile al calcolo della disponibilita' a variare
quindi non tiene conto di grandezze da considerare solo per disponibilita' ad impegnare: limite massimo impegnabile e modifiche di impegno negative su provvedimento provvisorio
*/

-- constant
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
NVL_STR     constant varchar:='';
STA_IMP     constant varchar:='STA';

FASE_OP_BIL_PREV constant VARCHAR:='P';

STATO_ATTO_P constant varchar:='PROVVISORIO';
STATO_ATTO_D constant varchar:='DEFINITIVO';

STATO_MOD_V  constant varchar:='V';

TIPO_IMP    constant varchar:='I';
TIPO_IMP_T  constant varchar:='T';

STATO_DEF   constant varchar:='D';
STATO_N     constant varchar:='N';
STATO_P     constant varchar:='P';
STATO_A     constant varchar:='A';
IMPORTO_ATT constant varchar:='A';

strMessaggio varchar(1500):=NVL_STR;

attoAmmStatoDId integer:=0;
attoAmmStatoPId integer:=0;
bilancioId integer:=0;
enteProprietarioId INTEGER:=0;
annoBilancio varchar:=null;

modStatoVId integer:=0;
movGestTipoId integer:=0;
movGestTsTipoId integer:=0;
movGestStatoId integer:=0;
movGestTsDetTipoId integer:=0;
movGestStatoIdProvvisorio integer:=0;
movGestTsId integer:=0;


importoAttuale numeric:=0;
importoCurAttuale numeric:=0;
importoModifDelta  numeric:=0;
importoModifINS numeric:=0; --aggiunta per ECONB

movGestIdRec record;

elemTipoCode VARCHAR(20):=NVL_STR;
faseOpCode varchar(20):=NVL_STR;
elemCode varchar(50):=NVL_STR;
elemCode2 varchar(50):=NVL_STR;
elemCode3 varchar(50):=NVL_STR;

elemIdGestEq integer:=0;
bilIdElemGestEq integer:=0;

BEGIN

 annoCompetenza:=null;
 diCuiImpegnato:=0;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.Controllo parametri.';

 if anno_in is null or anno_in=NVL_STR then
	 RAISE EXCEPTION '% Anno di competenza mancante.',strMessaggio;
 end if;

 if id_in is null or id_in=0 then
	 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
 end if;

 strMessaggio:='Calcolo impegnato competenza UP elem_id='||id_in||'.';

 strMessaggio:='Calcolo impegnato competenza UP.Calcolo bilancioId e elem_tipo_code per elem_id='||id_in||'.';
 select bilelem.elem_code, bilElem.elem_code2, bilElem.elem_code3, bil.bil_id ,tipoBilElem.elem_tipo_code, per.anno , bil.ente_proprietario_id
       into strict elemCode, elemCode2, elemCode3, bilancioId, elemTipoCode , annoBilancio,enteProprietarioId
 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo tipoBilElem,
      siac_t_bil bil, siac_t_periodo per
 where bilElem.elem_id=id_in
   and bilElem.data_cancellazione is null
   and bilElem.validita_fine is null
   and tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
   and bil.bil_id=bilElem.bil_id
   and per.periodo_id=bil.periodo_id;

 if elemTipoCode is not null and elemTipoCode!=NVL_STR and elemTipoCode!=TIPO_CAP_UP then
        RAISE EXCEPTION '% elemTipoCode=%  non ammesso per tipo di calcolo.',strMessaggio,elemTipoCode;
 end if;

 strMessaggio:='Calcolo impegnato competenza UP.Calcolo fase operativa per bilancioId='||bilancioId
               ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

 select  faseOp.fase_operativa_code into  faseOpCode
 from siac_r_bil_fase_operativa bilFase, siac_d_fase_operativa faseOp
 where bilFase.bil_id =bilancioId
   and bilfase.data_cancellazione is null
   and bilFase.validita_fine is null
   and faseOp.fase_operativa_id=bilFase.fase_operativa_id
   and faseOp.data_cancellazione is null
 order by bilFase.bil_fase_operativa_id desc;

 if NOT FOUND THEN
   RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
 end if;

 strMessaggio:='Calcolo impegnato competenza UP.Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode
              ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
 -- lettura elemento bil di gestione equivalente
 if faseOpCode is not null and faseOpCode!=NVL_STR then
  	if  faseOpCode = FASE_OP_BIL_PREV then
      	-- lettura bilancioId annoBilancio precedente per lettura elemento di bilancio equivalente
            	select bil.bil_id into strict bilIdElemGestEq
                from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
                where per.anno=((annoBilancio::integer)-1)::varchar
                  and per.ente_proprietario_id=enteProprietarioId
                  and bil.periodo_id=per.periodo_id
                  and perTipo.periodo_tipo_id=per.periodo_tipo_id
                  and perTipo.periodo_tipo_code='SY';
    else
        	bilIdElemGestEq:=bilancioId;
    end if;
 else
	 RAISE EXCEPTION '% Fase non valida.',strMessaggio;
 end if;

 -- lettura elemIdGestEq
 strMessaggio:='Calcolo impegnato competenza UP.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
              ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

 select bilelem.elem_id into elemIdGestEq
 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
 where bilElem.elem_code=elemCode
   and bilElem.elem_code2=elemCode2
   and bilElem.elem_code3=elemCode3
   and bilElem.ente_proprietario_id=enteProprietarioId
   and bilElem.data_cancellazione is null
   and bilElem.validita_fine is null
   and bilElem.bil_id=bilIdElemGestEq
   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

if NOT FOUND THEN
else
 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'.Calcolo movGestTipoId.';
 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
 from  siac_d_movgest_tipo tipoMovGest
 where tipoMovGest.ente_proprietario_id=enteProprietarioId
 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'.Calcolo movGestTsTipoId.';
 select movGestTsTipo.movgest_ts_tipo_id into strict movGestTsTipoId
 from siac_d_movgest_ts_tipo movGestTsTipo
 where movGestTsTipo.ente_proprietario_id=enteProprietarioId
 and   movGestTsTipo.movgest_ts_tipo_code=TIPO_IMP_T;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
               ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'.Calcolo movGestTsStatoId.';

 select movGestStato.movgest_stato_id into strict movGestStatoId
 from siac_d_movgest_stato movGestStato
 where movGestStato.ente_proprietario_id=enteProprietarioId
 and   movGestStato.movgest_stato_code=STATO_A;
 
 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||id_comp
				  ||'. Calcolo attoAmmStatoPId per attoamm_stato_code=PROVVISORIO';
	  select d.attoamm_stato_id into strict attoAmmStatoPId
	  from siac_d_atto_amm_stato d
	  where d.ente_proprietario_id=enteProprietarioId
	  and d.attoamm_stato_code=STATO_ATTO_P;
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||id_comp
				  ||'. Calcolo attoAmmStatoDId per attoamm_stato_code=DEFINTIVO';
	  
	  select d.attoamm_stato_id into strict attoAmmStatoDId
	  from siac_d_atto_amm_stato d
	  where d.ente_proprietario_id=enteProprietarioId
	  and  d.attoamm_stato_code=STATO_ATTO_D;
	
	select  movGestStato.movgest_stato_id into strict movGestStatoIdProvvisorio
	  from siac_d_movgest_stato movGestStato
	  where movGestStato.ente_proprietario_id=enteProprietarioId
	  and   movGestStato.movgest_stato_code=STATO_P;
	 
	select d.mod_stato_id into strict modStatoVId
	  from siac_d_modifica_stato d
	  where d.ente_proprietario_id=enteProprietarioId
	  and   d.mod_stato_code=STATO_MOD_V;

	  

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
               ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'.Calcolo movGestTsDetTipoId.';

 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
              ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'. Inizio ciclo per anno_in='||anno_in||'.';
 for movGestIdRec in
 (
     select movGestRel.movgest_id
     from siac_r_movgest_bil_elem movGestRel
     where movGestRel.elem_id=elemIdGestEq
     and   movGestRel.data_cancellazione is null
	 and movGestRel.elem_det_comp_tipo_id=id_comp
     and   exists (select 1 from siac_t_movgest movGest
   				   where movGest.movgest_id=movGestRel.movgest_id
			       and	 movGest.bil_id = bilIdElemGestEq
			       and   movGest.movgest_tipo_id=movGestTipoId
				   and   movGest.movgest_anno = anno_in::integer
                   and   movGest.data_cancellazione is null
                   and   movGest.validita_fine is null)
 )
 loop
   	importoCurAttuale:=0;

    strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
				      ||'.Per elemento gest equivalente elem_id='||elemIdGestEq
                      ||'.Calcolo impegnato anno_in='||anno_in
                      ||'.Lettura siac_t_movgest_ts movGestTs.movgest_id='||movGestIdRec.movgest_id||'.';

    select movgestts.movgest_ts_id into  movGestTsId
    from siac_t_movgest_ts movGestTs
    where movGestTs.movgest_id = movGestIdRec.movgest_id
    and   movGestTs.data_cancellazione is null
    and   movGestTs.movgest_ts_tipo_id=movGestTsTipoId
    and   exists (select 1 from siac_r_movgest_ts_stato movGestTsRel
                  where movGestTsRel.movgest_ts_id=movGestTs.movgest_ts_id
                  and   movGestTsRel.movgest_stato_id!=movGestStatoId
                  and   movGestTsRel.validita_fine is null
                  and   movGestTsRel.data_cancellazione is null);
	


    strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
				      ||'.Per elemento gest equivalente elem_id='||elemIdGestEq
                      ||'.Calcolo accertato anno_in='||anno_in||'.Somma siac_t_movgest_ts_det movGestTs.movgest_id='||movGestIdRec.movgest_id||'.';
    if NOT FOUND then
    else
       select coalesce(sum(movGestTsDet.movgest_ts_det_importo),0) into importoCurAttuale
           from siac_t_movgest_ts_det movGestTsDet
           where movGestTsDet.movgest_ts_id=movGestTsId
           and   movGestTsDet.movgest_ts_det_tipo_id=movGestTsDetTipoId;
		   
	   if importoCurAttuale>=0 then  

		  select tb.importo into importoModifDelta
				from
				(
					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil,
					 	siac_t_movgest mov,
					 	siac_t_movgest_ts ts,
						siac_r_movgest_ts_stato rstato,
					  siac_t_movgest_ts_det tsdet,
						siac_t_movgest_ts_det_mod moddet,
						siac_t_modifica mod,
					 	siac_r_modifica_stato rmodstato,
						siac_r_atto_amm_stato attostato,
					 	siac_t_atto_amm atto,
						siac_d_modifica_tipo tipom
					where
						rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
						and rbil.elem_det_comp_tipo_id=id_comp::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
						and	 mov.movgest_id=rbil.movgest_id
						and  mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
						and  mov.movgest_anno=anno_in::integer -- anno dell impegno = annoMovimento
						and  mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
						and  ts.movgest_id=mov.movgest_id
						and  rstato.movgest_ts_id=ts.movgest_ts_id
						and  rstato.movgest_stato_id!=movGestStatoId -- Impegno non ANNULLATO
						and  rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
					  and  tsdet.movgest_ts_id=ts.movgest_ts_id
						and  moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and  moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
						and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
						and   tipom.mod_tipo_id=mod.mod_tipo_id
						and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
						group by ts.movgest_ts_tipo_id
					  ) tb, siac_d_movgest_ts_tipo tipo
					  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					  order by tipo.movgest_ts_tipo_code desc
					  limit 1;
				-- 14.05.2020 Manuel - aggiunto parametro verifica_mod_prov
				if importoModifDelta is null or verifica_mod_prov is false then importoModifDelta:=0; end if;
		
		/*Aggiunta delle modifiche ECONB*/
				 -- anna_economie inizio
   				select tb.importo into importoModifINS
 				from
 				(
 					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
 			   	 	siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
				    siac_t_movgest_ts_det_mod moddet,
 			   	 	siac_t_modifica mod, siac_r_modifica_stato rmodstato,
				    siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
 			        siac_d_modifica_tipo tipom
				where rbil.elem_id=elemIdGestEq
				and rbil.elem_det_comp_tipo_id=id_comp::integer --SIAC-7349
				and	  mov.movgest_id=rbil.movgest_id
				and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
 			   	and   mov.movgest_anno=anno_in::integer
 			   	and   mov.bil_id=bilancioId
				and   ts.movgest_id=mov.movgest_id
				and   rstato.movgest_ts_id=ts.movgest_ts_id
				and   rstato.movgest_stato_id!=movGestStatoId -- impegno non annullato
				and   tsdet.movgest_ts_id=ts.movgest_ts_id
				and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
				and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
				and   moddet.movgest_ts_det_importo<0 -- importo negativo
				and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
				and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
				and   mod.mod_id=rmodstato.mod_id
				and   atto.attoamm_id=mod.attoamm_id
				and   attostato.attoamm_id=atto.attoamm_id
				and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
 			   and   tipom.mod_tipo_id=mod.mod_tipo_id
 			   and   tipom.mod_tipo_code = 'ECONB'
				-- date
				and rbil.data_cancellazione is null
				and rbil.validita_fine is null
				and mov.data_cancellazione is null
				and mov.validita_fine is null
				and ts.data_cancellazione is null
				and ts.validita_fine is null
				and rstato.data_cancellazione is null
				and rstato.validita_fine is null
				and tsdet.data_cancellazione is null
				and tsdet.validita_fine is null
				and moddet.data_cancellazione is null
				and moddet.validita_fine is null
				and mod.data_cancellazione is null
				and mod.validita_fine is null
				and rmodstato.data_cancellazione is null
				and rmodstato.validita_fine is null
				and attostato.data_cancellazione is null
				and attostato.validita_fine is null
				and atto.data_cancellazione is null
				and atto.validita_fine is null
 			   group by ts.movgest_ts_tipo_id
 			 ) tb, siac_d_movgest_ts_tipo tipo
 			 where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
 			 order by tipo.movgest_ts_tipo_code desc
 			 limit 1;
			 
			 if importoModifINS is null then 
			 	importoModifINS = 0;
			 end if;
		   
		   
		   
		   end if;
		   
    end if;

    importoAttuale:=importoAttuale+importoCurAttuale-(importoModifDelta);
  --aggiunta per ECONB
	importoAttuale:=importoAttuale+abs(importoModifINS);
 end loop;
end if;

annoCompetenza:=anno_in;
diCuiImpegnato:=importoAttuale;

return next;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return;
	when no_data_found then
	    RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_dicuiimpegnatoup_comp_anno_comp(integer, integer, character varying, boolean)
    OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_comp_anno_comp(integer, integer, character varying, boolean) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_comp_anno_comp(integer, integer, character varying, boolean) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_comp_anno_comp(integer, integer, character varying, boolean) TO siac;
--end fnc_siac_dicuiimpegnatoup_comp_anno_comp    
    
--Start fnc_siac_impegnatodefinitivoup_comp_annisucc_nostanz
CREATE OR REPLACE FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp_annisucc_nostanz(
	id_in integer,
	idcomp_in INT[])
    RETURNS TABLE(
    	elemdetcompid integer, 
    	elemdetcompdesc character varying,
    	impegnatodefinitivo numeric,
		elemdetcompmacrotipodesc character varying) 
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$
DECLARE


annoBilancio varchar:=null;
annoEsercizio varchar:=null;
annoMovimento varchar:=null;

elemIdGestEq integer:=0;
bilIdElemGestEq integer:=0;
NVL_STR     constant varchar:='';
faseOpCode varchar(20):=NVL_STR;
bilancioId integer:=0;
elemTipoCode VARCHAR(20):=NVL_STR;
elemCode varchar(50):=NVL_STR;
elemCode2 varchar(50):=NVL_STR;
elemCode3 varchar(50):=NVL_STR;
enteProprietarioId INTEGER:=0;
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
FASE_OP_BIL_PREV constant VARCHAR:='P';
STATO_A     constant varchar:='A';
STATO_P     constant varchar:='P';
TIPO_IMP    constant varchar:='I';
movGestStatoIdAnnullato integer:=0;
movGestStatoIdProvvisorio integer:=0;
movGestTipoId integer:=0;
IMPORTO_ATT constant varchar:='A';
movGestTsDetTipoId integer:=0;
IMPORTO_INIZIALE constant varchar:='I';
movGestTsDetTipoIdIniziale integer:=0;
STATO_MOD_V  constant varchar:='V';
modStatoVId integer:=0;
attoAmmStatoPId integer:=0;
STATO_ATTO_P constant varchar:='PROVVISORIO';
STATO_ATTO_D constant varchar:='DEFINITIVO';
attoAmmStatoDId integer:=0;
importoCurAttuale numeric:=0;
esisteRmovgestidelemid INTEGER:=0;
importoModifDelta  numeric:=0;
importoModifINS numeric:=0; --aggiunta per ECONB
impegniDaRibaltamento integer:=0;
pluriennaliDaRibaltamento integer:=0;
flagNMaggioreNPiu2 integer:=0;
flagDeltaPagamenti integer:=0;
importoImpegnato numeric:=0;
importoPagatoDelta numeric:=0;
ordStatoAId          integer:=null;
ordTsDetTipoAId      integer:=null;
-- stati ordinativi
STATO_ORD_A    constant varchar:='A'; -- ANNULLATO
-- importoAttuale ordinativi
ORD_TS_DET_TIPO_A  constant varchar:='A';

sidcomp_in  varchar:=null;
strMessaggio varchar(1500):=null;

impComponenteRec record;

BEGIN

/* Calcola impegnato definitivo per quelle componenti per le quali pur non essendoci stanziamento
 * esistono quote di impegnato nell'anno > N+2 
 * Le componenti per le quali esiste stanziamento (e quindi da non considerare) sono passate in input nell'array idcomp_in
 * NOTA: per problemi Java/Hibernate idcomp_in non puo' essere un array vuoto, quindi 
 *		l'array in input conterra' sempre la componente fittizia idcomp = -1
 */
-- CALCOLO IMPEGNATO DEFINITIVO 
-- Stiamo sempre parlando di impegnato sul capitolo di gestione equivalente	
-- I valori di impegnato dovranno essere calcolati tenendo conto del solo impegnato definitivo.
-- Escluse dal calcolo quindi:
--     le modifiche di impegno provvisorie (modifiche con provvedimento in stato provvisorio - di qualsiasi segno
--     gli  impegni in stato provvisorio

	sidcomp_in:=array_to_string(idcomp_in, ',');
    strMessaggio:='Calcolo totale impegnato definitovo elem_id='||id_in|| ' escludo idcomp_in='||sidcomp_in|| '.';

	-- Controllo parametri in input
	if id_in is null or id_in=0 then
		 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
	end if;
 
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in||
    			  '.Lettura anno di bilancio del capitolo UP.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;
		  

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in||
    			  '. Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId e elem_tipo_code.';
	 select bilelem.elem_code, bilElem.elem_code2, bilElem.elem_code3, bil.bil_id ,tipoBilElem.elem_tipo_code, per.anno , bil.ente_proprietario_id
	 into strict elemCode, elemCode2, elemCode3, bilancioId, elemTipoCode , annoBilancio,enteProprietarioId
	 from 	siac_t_bil_elem bilElem, 
	 		siac_d_bil_elem_tipo tipoBilElem,
		  	siac_t_bil bil, siac_t_periodo per
	 where bilElem.elem_id=id_in
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
	   and bil.bil_id=bilElem.bil_id
	   and per.periodo_id=bil.periodo_id;

	 if elemTipoCode is not null and elemTipoCode!=NVL_STR and elemTipoCode!=TIPO_CAP_UP then
			RAISE EXCEPTION '% elemTipoCode=%  non ammesso per tipo di calcolo.',strMessaggio,elemTipoCode;
	 end if;

	 strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in||
				   '. Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   'Calcolo fase operativa per bilancioId='||bilancioId
				   ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select  faseOp.fase_operativa_code into  faseOpCode
	 from siac_r_bil_fase_operativa bilFase, siac_d_fase_operativa faseOp
	 where bilFase.bil_id =bilancioId
	   and bilfase.data_cancellazione is null
	   and bilFase.validita_fine is null
	   and faseOp.fase_operativa_id=bilFase.fase_operativa_id
	   and faseOp.data_cancellazione is null
	 order by bilFase.bil_fase_operativa_id desc;

	 if NOT FOUND THEN
	   RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
	 end if;

	 strMessaggio:='Calcolo impegnato definitivo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTipoId per movgest_tipo_code=IMPEGNO';
	 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
	 from  siac_d_movgest_tipo tipoMovGest
	 where tipoMovGest.ente_proprietario_id=enteProprietarioId
	 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTsStatoIdAnnullato per movgest_stato_code=ANNULLATO'
				  ||'. Calcolo movGestTsStatoIdProvvisorio per movgest_stato_code=PROVVISORIO';

	 select movGestStato.movgest_stato_id into strict movGestStatoIdAnnullato
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_A;

	 select  movGestStato.movgest_stato_id into strict movGestStatoIdProvvisorio
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_P; 
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTsDetTipoId per movgest_ts_det_tipo_code=IMPORTO ATTUALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTsDetTipoIdIniziale per movgest_ts_det_tipo_code=IMPORTO INIZIALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoIdIniziale
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_INIZIALE;
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
              ||'. Calcolo modStatoVId per mod_stato_code=VALIDO.';
	 select d.mod_stato_id into strict modStatoVId
	 from siac_d_modifica_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.mod_stato_code=STATO_MOD_V;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo attoAmmStatoPId per attoamm_stato_code=PROVVISORIO';
	 select d.attoamm_stato_id into strict attoAmmStatoPId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_P;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo attoAmmStatoDId per attoamm_stato_code=DEFINITIVO';
	 select d.attoamm_stato_id into strict attoAmmStatoDId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_D;

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in||
				 '.Verifica se presenti i movimenti di gestione provenienti dal ribaltamento per anno di esercizio N.';
	
	impegniDaRibaltamento:=0;
	pluriennaliDaRibaltamento:=0;
	importoCurAttuale:=0;	
	importoModifDelta:=0;
	importoModifINS := 0;
	
	select  count(*) into impegniDaRibaltamento 
	from fase_bil_t_gest_apertura_liq_imp fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;

	select  count(*) into  pluriennaliDaRibaltamento
	from fase_bil_t_gest_apertura_pluri fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;
				
	if impegniDaRibaltamento>0 and pluriennaliDaRibaltamento>0 then

	--  Se presenti i movimenti gestione provenienti dal ribaltamento 
	--		ImpegnatoDefinitivo = Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in 
	--		e anno movimento > N+2 e anno esercizio N

		annoEsercizio:=annoBilancio;
		annoMovimento:=((annoBilancio::INTEGER)+2)::varchar;
		flagNMaggioreNPiu2:=1;
	else

		--  Se non presenti i movimenti gestione provenienti dal ribaltamento 
		-- 	ImpegnatoDefinitivo = Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in 
		-- 	e anno movimento > N+2 e anno esercizio N-1

		annoEsercizio:=((annoBilancio::INTEGER)-1)::varchar;
		annoMovimento:=((annoBilancio::INTEGER)+2)::varchar;
		flagNMaggioreNPiu2:=1;
	end if;
	
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in||
				   '.Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    -- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo impegnato competenza UP.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else
	
		strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento|| 
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid 
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno>annoMovimento::integer 
			and NOT (el.elem_det_comp_tipo_id = ANY( idcomp_in)) --SIAC-7349
			;
		
		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;
	
		if esisteRmovgestidelemid <>0 then
 			impegnatoDefinitivo:=0;
			strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

/*			importoCurAttuale:=0;			
			select tb.importo into importoCurAttuale
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
				  NOT ( a.elem_det_comp_tipo_id = ANY( idcomp_in))--SIAC-7349 non deve essere sulla componente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno > annoMovimento::integer -- anno dell impegno > annoMovimento 
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		
*/

			/* Versione con group by per le componenti non da escludere e ciclo per ogni componente */
			for impComponenteRec in
			 (
				select tb.elem_det_comp_tipo_id as compId, 
				 g.elem_det_comp_tipo_desc as compDesc, 
				 tb.importo as importoCurAttuale,
				 h.elem_det_comp_macro_tipo_desc as compMacroTipoDesc 
				 -- tb.importo into importoCurAttuale
				from (
				  select
					  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id, a.elem_det_comp_tipo_id
				  from
					  siac_r_movgest_bil_elem a,
					  siac_t_movgest b,
					  siac_t_movgest_ts c,
					  siac_r_movgest_ts_stato d,
					  siac_t_movgest_ts_det e,
					  siac_d_movgest_ts_det_tipo f
				  where
					  b.movgest_id=a.movgest_id 
					  and a.elem_id=elemIdGestEq 
					  and NOT( a.elem_det_comp_tipo_id = ANY(idcomp_in)) --SIAC-7349 --id componente diversa da quella ricevuta in input
					  and b.bil_id = bilIdElemGestEq
					  and b.movgest_tipo_id=movGestTipoId
					  and d.movgest_stato_id<>movGestStatoIdAnnullato
					  and d.movgest_stato_id<>movGestStatoIdProvvisorio
					  and b.movgest_anno > annoMovimento::integer -- per gli anni oltre N+2
					  and c.movgest_id=b.movgest_id
					  and d.movgest_ts_id=c.movgest_ts_id
					  and d.validita_fine is null
					  and e.movgest_ts_id=c.movgest_ts_id
					  and a.data_cancellazione is null
					  and b.data_cancellazione is null
					  and c.data_cancellazione is null
					  and e.data_cancellazione is null
					  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
					  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId
					  group by 	c.movgest_ts_tipo_id, 
								a.elem_det_comp_tipo_id -- SIAC-7349
						) tb, 
					siac_d_movgest_ts_tipo t,
					siac_d_bil_elem_det_comp_tipo g,
				 	siac_d_bil_elem_det_comp_macro_tipo h
				where 
					tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
					and g.elem_det_comp_tipo_id = tb.elem_det_comp_tipo_id --SIAC-7349 recupera anche la descrizione della componente
					and g.elem_det_comp_macro_tipo_id = h.elem_det_comp_macro_tipo_id --SIAC-7349 recupera anche la descrizione del macrotipo della componente
				 order by t.movgest_ts_tipo_code desc
 			) 
			loop
			

					-- 02.02.2016 Sofia JIRA 2947
					 if impComponenteRec.importoCurAttuale is null then impComponenteRec.importoCurAttuale:=0; end if;

					 -- 16.03.2017 Sofia JIRA-SIAC-4614
					-- if importoCurAttuale>0 then
					 if impComponenteRec.importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

						strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'  impComponenteRec.compId='||impComponenteRec.compId||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Calcolo totale modifiche su atti provvisori per annoMovimento='||annoMovimento||'.';

						select tb.importo into importoModifDelta
						 from
						 (
							select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
							from siac_r_movgest_bil_elem rbil, 
								 siac_t_movgest mov,
								 siac_t_movgest_ts ts,
								 siac_r_movgest_ts_stato rstato,
								 siac_t_movgest_ts_det tsdet,
								 siac_t_movgest_ts_det_mod moddet,
								 siac_t_modifica mod, 
								 siac_r_modifica_stato rmodstato,
								 siac_r_atto_amm_stato attostato, 
								 siac_t_atto_amm atto,
								 siac_d_modifica_tipo tipom
							where 
								rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
								and rbil.elem_det_comp_tipo_id=impComponenteRec.compId --SIAC-7349 deve essere sulla compoenente del record 
								and	  mov.movgest_id=rbil.movgest_id
								and   mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
								and   mov.movgest_anno>annoMovimento::integer -- anno dell impegno = annoMovimento 
								and   mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
								and   ts.movgest_id=mov.movgest_id
								and   rstato.movgest_ts_id=ts.movgest_ts_id
								and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- Impegno non ANNULLATO
								and   rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
								and   tsdet.movgest_ts_id=ts.movgest_ts_id
								and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
								and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
								-- SIAC-7349 Prendo tutti gli importi, sia con segno negativo che con segno positivo
								-- La loro somma produce il valore importoModifDelta che devo sottrarre all'impegnato calcolato
								-- ad esempio: modifiche su atto provv +100, -322 -> somma -222 si tratta di un delta che devo sottrarre
								-- all'impegnato calcolato = impegnato calcolato - (-222) = +222 (aggiungo quello che avevo tolto)
								-- and   moddet.movgest_ts_det_importo<0 -- importo negativo
								and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
								and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
								and   mod.mod_id=rmodstato.mod_id
								and   atto.attoamm_id=mod.attoamm_id
								and   attostato.attoamm_id=atto.attoamm_id
								and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
								and   tipom.mod_tipo_id=mod.mod_tipo_id
								and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
								-- date
								and rbil.data_cancellazione is null
								and rbil.validita_fine is null
								and mov.data_cancellazione is null
								and mov.validita_fine is null
								and ts.data_cancellazione is null
								and ts.validita_fine is null
								and rstato.data_cancellazione is null
								and rstato.validita_fine is null
								and tsdet.data_cancellazione is null
								and tsdet.validita_fine is null
								and moddet.data_cancellazione is null
								and moddet.validita_fine is null
								and mod.data_cancellazione is null
								and mod.validita_fine is null
								and rmodstato.data_cancellazione is null
								and rmodstato.validita_fine is null
								and attostato.data_cancellazione is null
								and attostato.validita_fine is null
								and atto.data_cancellazione is null
								and atto.validita_fine is null
								group by ts.movgest_ts_tipo_id
							  ) tb, siac_d_movgest_ts_tipo tipo
							  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
							  order by tipo.movgest_ts_tipo_code desc
							  limit 1;		

						if importoModifDelta is null then importoModifDelta:=0; end if;
						  /*Aggiunta delle modifiche ECONB*/
						 -- anna_economie inizio
						select tb.importo into importoModifINS
						from
						(
							select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
							from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
							siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
							siac_t_movgest_ts_det_mod moddet,
							siac_t_modifica mod, siac_r_modifica_stato rmodstato,
							siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
							siac_d_modifica_tipo tipom
						where rbil.elem_id=elemIdGestEq
						and rbil.elem_det_comp_tipo_id=impComponenteRec.compId --SIAC-7349
						and	  mov.movgest_id=rbil.movgest_id
						and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
						and   mov.movgest_anno=annoMovimento::integer
						and   mov.bil_id=bilancioId
						and   ts.movgest_id=mov.movgest_id
						and   rstato.movgest_ts_id=ts.movgest_ts_id
						and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- impegno non annullato
						and   tsdet.movgest_ts_id=ts.movgest_ts_id
						and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
						and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
					   and   tipom.mod_tipo_id=mod.mod_tipo_id
					   and   tipom.mod_tipo_code = 'ECONB'
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
					   group by ts.movgest_ts_tipo_id
					 ) tb, siac_d_movgest_ts_tipo tipo
					 where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					 order by tipo.movgest_ts_tipo_code desc
					 limit 1;

					 if importoModifINS is null then 
						importoModifINS = 0;
					 end if;


					end if;		
	

			elemDetCompId:=impComponenteRec.compId;
			elemdetcompdesc:=impComponenteRec.compDesc;
			elemdetcompmacrotipodesc:=impComponenteRec.compMacroTipoDesc;
			impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente  
			impegnatoDefinitivo:=impegnatoDefinitivo+impComponenteRec.importoCurAttuale-(importoModifDelta);
			--aggiunta per ECONB
			impegnatoDefinitivo:=impegnatoDefinitivo+abs(importoModifINS);
			return next;	



	end loop;
	end if;
	end if;

	return;
 

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
		return;
	when no_data_found then
		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
		return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
		return;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp_annisucc_nostanz(integer, INT[])
    OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp_annisucc_nostanz(integer, INT[]) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp_annisucc_nostanz(integer, INT[]) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp_annisucc_nostanz(integer, INT[]) TO siac;
--end fnc_siac_impegnatodefinitivoup_comp_annisucc_nostanz


--Start fnc_siac_impegnatodefinitivoup_comp
CREATE OR REPLACE FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp(
	id_in integer,
	idcomp_in integer)
    RETURNS TABLE(indiceannualita integer, elemdetcompid integer, impegnatodefinitivo numeric) 
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$
DECLARE

annoBilancio varchar:=null;
annoEsercizio varchar:=null;
annoMovimento varchar:=null;

elemIdGestEq integer:=0;
bilIdElemGestEq integer:=0;
NVL_STR     constant varchar:='';
faseOpCode varchar(20):=NVL_STR;
bilancioId integer:=0;
elemTipoCode VARCHAR(20):=NVL_STR;
elemCode varchar(50):=NVL_STR;
elemCode2 varchar(50):=NVL_STR;
elemCode3 varchar(50):=NVL_STR;
enteProprietarioId INTEGER:=0;
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
FASE_OP_BIL_PREV constant VARCHAR:='P';
STATO_A     constant varchar:='A';
STATO_P     constant varchar:='P';
TIPO_IMP    constant varchar:='I';
movGestStatoIdAnnullato integer:=0;
movGestStatoIdProvvisorio integer:=0;
movGestTipoId integer:=0;
IMPORTO_ATT constant varchar:='A';
movGestTsDetTipoId integer:=0;
IMPORTO_INIZIALE constant varchar:='I';
movGestTsDetTipoIdIniziale integer:=0;
STATO_MOD_V  constant varchar:='V';
modStatoVId integer:=0;
attoAmmStatoPId integer:=0;
STATO_ATTO_P constant varchar:='PROVVISORIO';
STATO_ATTO_D constant varchar:='DEFINITIVO';
attoAmmStatoDId integer:=0;
importoCurAttuale numeric:=0;
esisteRmovgestidelemid INTEGER:=0;
importoModifDelta  numeric:=0;
importoModifINS numeric:=0; --aggiunta per ECONB
impegniDaRibaltamento integer:=0;
pluriennaliDaRibaltamento integer:=0;
flagNMaggioreNPiu2 integer:=0;
flagDeltaPagamenti integer:=0;
importoImpegnato numeric:=0;
importoPagatoDelta numeric:=0;
ordStatoAId          integer:=null;
ordTsDetTipoAId      integer:=null;
-- stati ordinativi
STATO_ORD_A    constant varchar:='A'; -- ANNULLATO
-- importoAttuale ordinativi
ORD_TS_DET_TIPO_A  constant varchar:='A';

strMessaggio varchar(1500):=null;
BEGIN


    strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in|| 'idcomp_in='||idcomp_in|| '.';

	-- Controllo parametri in input
	if id_in is null or id_in=0 then
		 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
	end if;
	if idcomp_in is null or idcomp_in=0 then
		 RAISE EXCEPTION '% Identificativo componente mancante.',strMessaggio;
	end if;
 
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
    			  '.Lettura anno di bilancio del capitolo UP.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;
		  

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
    			  '. Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId e elem_tipo_code.';
	 select bilelem.elem_code, bilElem.elem_code2, bilElem.elem_code3, bil.bil_id ,tipoBilElem.elem_tipo_code, per.anno , bil.ente_proprietario_id
	 into strict elemCode, elemCode2, elemCode3, bilancioId, elemTipoCode , annoBilancio,enteProprietarioId
	 from 	siac_t_bil_elem bilElem, 
	 		siac_d_bil_elem_tipo tipoBilElem,
		  	siac_t_bil bil, siac_t_periodo per
	 where bilElem.elem_id=id_in
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
	   and bil.bil_id=bilElem.bil_id
	   and per.periodo_id=bil.periodo_id;

	 if elemTipoCode is not null and elemTipoCode!=NVL_STR and elemTipoCode!=TIPO_CAP_UP then
			RAISE EXCEPTION '% elemTipoCode=%  non ammesso per tipo di calcolo.',strMessaggio,elemTipoCode;
	 end if;

	 strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				   '. Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   'Calcolo fase operativa per bilancioId='||bilancioId
				   ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select  faseOp.fase_operativa_code into  faseOpCode
	 from siac_r_bil_fase_operativa bilFase, siac_d_fase_operativa faseOp
	 where bilFase.bil_id =bilancioId
	   and bilfase.data_cancellazione is null
	   and bilFase.validita_fine is null
	   and faseOp.fase_operativa_id=bilFase.fase_operativa_id
	   and faseOp.data_cancellazione is null
	 order by bilFase.bil_fase_operativa_id desc;

	 if NOT FOUND THEN
	   RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
	 end if;

	 strMessaggio:='Calcolo impegnato definitivo elem_id='||id_in||'idcomp_in='||idcomp_in
				  ||'. Calcolo movGestTipoId per movgest_tipo_code=IMPEGNO';
	 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
	 from  siac_d_movgest_tipo tipoMovGest
	 where tipoMovGest.ente_proprietario_id=enteProprietarioId
	 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||idcomp_in
				  ||'. Calcolo movGestTsStatoIdAnnullato per movgest_stato_code=ANNULLATO'
				  ||'. Calcolo movGestTsStatoIdProvvisorio per movgest_stato_code=PROVVISORIO';

	 select movGestStato.movgest_stato_id into strict movGestStatoIdAnnullato
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_A;

	 select  movGestStato.movgest_stato_id into strict movGestStatoIdProvvisorio
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_P; 
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||idcomp_in
				  ||'. Calcolo movGestTsDetTipoId per movgest_ts_det_tipo_code=IMPORTO ATTUALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||idcomp_in
				  ||'. Calcolo movGestTsDetTipoIdIniziale per movgest_ts_det_tipo_code=IMPORTO INIZIALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoIdIniziale
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_INIZIALE;
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||idcomp_in
              ||'. Calcolo modStatoVId per mod_stato_code=VALIDO.';
	 select d.mod_stato_id into strict modStatoVId
	 from siac_d_modifica_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.mod_stato_code=STATO_MOD_V;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||idcomp_in
				  ||'. Calcolo attoAmmStatoPId per attoamm_stato_code=PROVVISORIO';
	 select d.attoamm_stato_id into strict attoAmmStatoPId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_P;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||idcomp_in
				  ||'. Calcolo attoAmmStatoDId per attoamm_stato_code=DEFINITIVO';
	 select d.attoamm_stato_id into strict attoAmmStatoDId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_D;

 
--- CICLO SU TUTTE LE POSSIBILI ANNUALITA': N-1, N, N+1, N+2 e >N+2
FOR loop_counter IN  0..6  LOOP
CASE loop_counter

 WHEN 0 THEN


	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
    			  '.Determina anno esercizio ed anno movimento per i quali calcolare.';
    annoEsercizio:=((annoBilancio::INTEGER)-1)::varchar;
    annoMovimento:=((annoBilancio::INTEGER)-1)::varchar;
	flagNMaggioreNPiu2:=0;
	
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				   '.Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    -- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo impegnato competenza UP.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else

		strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento|| 
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid 
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno=annoMovimento::integer
			and el.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
			;
		
		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;
		
		if esisteRmovgestidelemid <>0 then
 			impegnatoDefinitivo:=0;
			strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

			importoCurAttuale:=0;			
			select tb.importo into importoCurAttuale
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
				  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno = annoMovimento::integer -- anno dell impegno = annoMovimento
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		

			-- 02.02.2016 Sofia JIRA 2947
			 if importoCurAttuale is null then importoCurAttuale:=0; end if;

			 -- 16.03.2017 Sofia JIRA-SIAC-4614
			-- if importoCurAttuale>0 then
			 if importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

				strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Calcolo totale modifiche su atti provvisori per annoMovimento='||annoMovimento||'.';

				select tb.importo into importoModifDelta
				 from
				 (
					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, 
					 	 siac_t_movgest mov,
					 	 siac_t_movgest_ts ts,
						 siac_r_movgest_ts_stato rstato,
					  	 siac_t_movgest_ts_det tsdet,
						 siac_t_movgest_ts_det_mod moddet,
						 siac_t_modifica mod, 
					 	 siac_r_modifica_stato rmodstato,
						 siac_r_atto_amm_stato attostato, 
					 	 siac_t_atto_amm atto,
						 siac_d_modifica_tipo tipom
					where 
						rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
						and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
						and	  mov.movgest_id=rbil.movgest_id
						and   mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
						and   mov.movgest_anno=annoMovimento::integer -- anno dell impegno = annoMovimento
						and   mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
						and   ts.movgest_id=mov.movgest_id
						and   rstato.movgest_ts_id=ts.movgest_ts_id
						and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- Impegno non ANNULLATO
						and   rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
					    and   tsdet.movgest_ts_id=ts.movgest_ts_id
						and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
						-- SIAC-7349 Prendo tutti gli importi, sia con segno negativo che con segno positivo
					 	-- La loro somma produce il valore importoModifDelta che devo sottrarre all'impegnato calcolato
					 	-- ad esempio: modifiche su atto provv +100, -322 -> somma -222 si tratta di un delta che devo sottrarre
					 	-- all'impegnato calcolato = impegnato calcolato - (-222) = +222 (aggiungo quello che avevo tolto)
					 	-- and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
						and   tipom.mod_tipo_id=mod.mod_tipo_id
						and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
						group by ts.movgest_ts_tipo_id
					  ) tb, siac_d_movgest_ts_tipo tipo
					  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					  order by tipo.movgest_ts_tipo_code desc
					  limit 1;		
					  
 				if importoModifDelta is null then importoModifDelta:=0; end if;
				 /*Aggiunta delle modifiche ECONB*/
				 -- anna_economie inizio
   				select tb.importo into importoModifINS
 				from
 				(
 					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
 			   	 	siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
				    siac_t_movgest_ts_det_mod moddet,
 			   	 	siac_t_modifica mod, siac_r_modifica_stato rmodstato,
				    siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
 			        siac_d_modifica_tipo tipom
				where rbil.elem_id=elemIdGestEq
				and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
				and	  mov.movgest_id=rbil.movgest_id
				and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
 			   	and   mov.movgest_anno=annoMovimento::integer
 			   	and   mov.bil_id=bilancioId
				and   ts.movgest_id=mov.movgest_id
				and   rstato.movgest_ts_id=ts.movgest_ts_id
				and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- impegno non annullato
				and   tsdet.movgest_ts_id=ts.movgest_ts_id
				and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
				and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
				and   moddet.movgest_ts_det_importo<0 -- importo negativo
				and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
				and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
				and   mod.mod_id=rmodstato.mod_id
				and   atto.attoamm_id=mod.attoamm_id
				and   attostato.attoamm_id=atto.attoamm_id
				and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
 			   and   tipom.mod_tipo_id=mod.mod_tipo_id
 			   and   tipom.mod_tipo_code = 'ECONB'
				-- date
				and rbil.data_cancellazione is null
				and rbil.validita_fine is null
				and mov.data_cancellazione is null
				and mov.validita_fine is null
				and ts.data_cancellazione is null
				and ts.validita_fine is null
				and rstato.data_cancellazione is null
				and rstato.validita_fine is null
				and tsdet.data_cancellazione is null
				and tsdet.validita_fine is null
				and moddet.data_cancellazione is null
				and moddet.validita_fine is null
				and mod.data_cancellazione is null
				and mod.validita_fine is null
				and rmodstato.data_cancellazione is null
				and rmodstato.validita_fine is null
				and attostato.data_cancellazione is null
				and attostato.validita_fine is null
				and atto.data_cancellazione is null
				and atto.validita_fine is null
 			   group by ts.movgest_ts_tipo_id
 			 ) tb, siac_d_movgest_ts_tipo tipo
 			 where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
 			 order by tipo.movgest_ts_tipo_code desc
 			 limit 1;
			 
			 if importoModifINS is null then 
			 	importoModifINS = 0;
			 end if;

		
			end if;		
		end if;
	end if;

	-- restituisco il record risultato
	indiceAnnualita:=loop_counter;
	elemDetCompId:=idcomp_in;
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente per l'anno N-1
	impegnatoDefinitivo:=impegnatoDefinitivo+importoCurAttuale-(importoModifDelta);

	--aggiunta per ECONB
	impegnatoDefinitivo:=impegnatoDefinitivo+abs(importoModifINS);

	return next;

	
	
 WHEN 1,2,3 THEN

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				 '.Verifica se presenti i movimenti di gestione provenienti dal ribaltamento per anno di esercizio N.';
	
	impegniDaRibaltamento:=0;
	pluriennaliDaRibaltamento:=0;
	importoCurAttuale:=0;	
	importoModifDelta:=0;
	importoModifINS:=0;
	
	select  count(*) into impegniDaRibaltamento 
	from fase_bil_t_gest_apertura_liq_imp fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;

	select  count(*) into  pluriennaliDaRibaltamento
	from fase_bil_t_gest_apertura_pluri fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;
				
	if impegniDaRibaltamento>0 and pluriennaliDaRibaltamento>0 then

		--  Se presenti i movimenti gestione provenienti dal ribaltamento:
		--	ImpegnatoDefinitivo = 	Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in 
		--			e anno movimento [N | N+1 | N+2] e anno esercizio N

		annoEsercizio:=annoBilancio;
		annoMovimento:=((annoBilancio::INTEGER)+loop_counter-1)::varchar;
		flagNMaggioreNPiu2:=0;
	else

		--  Se non presenti i movimenti gestione provenienti dal ribaltamento
		--	ImpegnatoDefinitivo = Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in 
		-- 			e anno movimento [N | N+1 | N+2] e anno esercizio N-1  

		annoEsercizio:=((annoBilancio::INTEGER)-1)::varchar;
		annoMovimento:=((annoBilancio::INTEGER)+loop_counter-1)::varchar;
		flagNMaggioreNPiu2:=0;
	end if;
	
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				   '.Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    -- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo impegnato competenza UP.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else

		strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento|| 
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid 
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno=annoMovimento::integer
			and el.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
			;
		
		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;
		
		if esisteRmovgestidelemid <>0 then
 			impegnatoDefinitivo:=0;
			strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

					
			select tb.importo into importoCurAttuale
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
				  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno = annoMovimento::integer -- anno dell impegno = annoMovimento
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		

			-- 02.02.2016 Sofia JIRA 2947
			 if importoCurAttuale is null then importoCurAttuale:=0; end if;

			 -- 16.03.2017 Sofia JIRA-SIAC-4614
			-- if importoCurAttuale>0 then
			 if importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

				strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Calcolo totale modifiche su atti provvisori per annoMovimento='||annoMovimento||'.';

				select tb.importo into importoModifDelta
				 from
				 (
					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, 
					 	 siac_t_movgest mov,
					 	 siac_t_movgest_ts ts,
						 siac_r_movgest_ts_stato rstato,
					  	 siac_t_movgest_ts_det tsdet,
						 siac_t_movgest_ts_det_mod moddet,
						 siac_t_modifica mod, 
					 	 siac_r_modifica_stato rmodstato,
						 siac_r_atto_amm_stato attostato, 
					 	 siac_t_atto_amm atto,
						 siac_d_modifica_tipo tipom
					where 
						rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
						and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
						and	  mov.movgest_id=rbil.movgest_id
						and   mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
						and   mov.movgest_anno=annoMovimento::integer -- anno dell impegno = annoMovimento
						and   mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
						and   ts.movgest_id=mov.movgest_id
						and   rstato.movgest_ts_id=ts.movgest_ts_id
						and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- Impegno non ANNULLATO
						and   rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
					    and   tsdet.movgest_ts_id=ts.movgest_ts_id
						and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
						-- SIAC-7349 Prendo tutti gli importi, sia con segno negativo che con segno positivo
					 	-- La loro somma produce il valore importoModifDelta che devo sottrarre all'impegnato calcolato
					 	-- ad esempio: modifiche su atto provv +100, -322 -> somma -222 si tratta di un delta che devo sottrarre
					 	-- all'impegnato calcolato = impegnato calcolato - (-222) = +222 (aggiungo quello che avevo tolto)
					 	-- and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
						and   tipom.mod_tipo_id=mod.mod_tipo_id
						and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
						group by ts.movgest_ts_tipo_id
					  ) tb, siac_d_movgest_ts_tipo tipo
					  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					  order by tipo.movgest_ts_tipo_code desc
					  limit 1;		
					  
 				if importoModifDelta is null then importoModifDelta:=0; end if;
				  /*Aggiunta delle modifiche ECONB*/
				 -- anna_economie inizio
   				select tb.importo into importoModifINS
 				from
 				(
 					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
 			   	 	siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
				    siac_t_movgest_ts_det_mod moddet,
 			   	 	siac_t_modifica mod, siac_r_modifica_stato rmodstato,
				    siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
 			        siac_d_modifica_tipo tipom
				where rbil.elem_id=elemIdGestEq
				and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
				and	  mov.movgest_id=rbil.movgest_id
				and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
 			   	and   mov.movgest_anno=annoMovimento::integer
 			   	and   mov.bil_id=bilancioId
				and   ts.movgest_id=mov.movgest_id
				and   rstato.movgest_ts_id=ts.movgest_ts_id
				and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- impegno non annullato
				and   tsdet.movgest_ts_id=ts.movgest_ts_id
				and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
				and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
				and   moddet.movgest_ts_det_importo<0 -- importo negativo
				and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
				and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
				and   mod.mod_id=rmodstato.mod_id
				and   atto.attoamm_id=mod.attoamm_id
				and   attostato.attoamm_id=atto.attoamm_id
				and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
 			   and   tipom.mod_tipo_id=mod.mod_tipo_id
 			   and   tipom.mod_tipo_code = 'ECONB'
				-- date
				and rbil.data_cancellazione is null
				and rbil.validita_fine is null
				and mov.data_cancellazione is null
				and mov.validita_fine is null
				and ts.data_cancellazione is null
				and ts.validita_fine is null
				and rstato.data_cancellazione is null
				and rstato.validita_fine is null
				and tsdet.data_cancellazione is null
				and tsdet.validita_fine is null
				and moddet.data_cancellazione is null
				and moddet.validita_fine is null
				and mod.data_cancellazione is null
				and mod.validita_fine is null
				and rmodstato.data_cancellazione is null
				and rmodstato.validita_fine is null
				and attostato.data_cancellazione is null
				and attostato.validita_fine is null
				and atto.data_cancellazione is null
				and atto.validita_fine is null
 			   group by ts.movgest_ts_tipo_id
 			 ) tb, siac_d_movgest_ts_tipo tipo
 			 where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
 			 order by tipo.movgest_ts_tipo_code desc
 			 limit 1;
			 
			 if importoModifINS is null then 
			 	importoModifINS = 0;
			 end if;

		
			end if;		
		end if;
	end if;

	indiceAnnualita:=loop_counter;
	elemDetCompId:=idcomp_in;
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente per l'anno N-1
	impegnatoDefinitivo:=impegnatoDefinitivo+importoCurAttuale-(importoModifDelta);
	
	impegnatoDefinitivo:=impegnatoDefinitivo+abs(importoModifINS);
	
	return next;

 	
 WHEN 4 THEN
 	
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				 '.Verifica se presenti i movimenti di gestione provenienti dal ribaltamento per anno di esercizio N.';
	
	impegniDaRibaltamento:=0;
	pluriennaliDaRibaltamento:=0;
	importoCurAttuale:=0;	
	importoModifDelta:=0;
	importoModifINS := 0;
	
	select  count(*) into impegniDaRibaltamento 
	from fase_bil_t_gest_apertura_liq_imp fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;

	select  count(*) into  pluriennaliDaRibaltamento
	from fase_bil_t_gest_apertura_pluri fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;
				
	if impegniDaRibaltamento>0 and pluriennaliDaRibaltamento>0 then

	--  Se presenti i movimenti gestione provenienti dal ribaltamento 
	--		ImpegnatoDefinitivo = Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in 
	--		e anno movimento > N+2 e anno esercizio N

		annoEsercizio:=annoBilancio;
		annoMovimento:=((annoBilancio::INTEGER)+2)::varchar;
		flagNMaggioreNPiu2:=1;
	else

		--  Se non presenti i movimenti gestione provenienti dal ribaltamento 
		-- 	ImpegnatoDefinitivo = Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in 
		-- 	e anno movimento > N+2 e anno esercizio N-1

		annoEsercizio:=((annoBilancio::INTEGER)-1)::varchar;
		annoMovimento:=((annoBilancio::INTEGER)+2)::varchar;
		flagNMaggioreNPiu2:=1;
	end if;

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				   '.Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    -- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo impegnato competenza UP.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else

		strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento|| 
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid 
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno>annoMovimento::integer 
			and el.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
			;
		
		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;
		
		if esisteRmovgestidelemid <>0 then
 			impegnatoDefinitivo:=0;
			strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

			importoCurAttuale:=0;			
			select tb.importo into importoCurAttuale
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
				  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno > annoMovimento::integer -- anno dell impegno > annoMovimento 
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		

			-- 02.02.2016 Sofia JIRA 2947
			 if importoCurAttuale is null then importoCurAttuale:=0; end if;

			 -- 16.03.2017 Sofia JIRA-SIAC-4614
			-- if importoCurAttuale>0 then
			 if importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

				strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Calcolo totale modifiche su atti provvisori per annoMovimento='||annoMovimento||'.';

				select tb.importo into importoModifDelta
				 from
				 (
					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, 
					 	 siac_t_movgest mov,
					 	 siac_t_movgest_ts ts,
						 siac_r_movgest_ts_stato rstato,
					  	 siac_t_movgest_ts_det tsdet,
						 siac_t_movgest_ts_det_mod moddet,
						 siac_t_modifica mod, 
					 	 siac_r_modifica_stato rmodstato,
						 siac_r_atto_amm_stato attostato, 
					 	 siac_t_atto_amm atto,
						 siac_d_modifica_tipo tipom
					where 
						rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
						and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
						and	  mov.movgest_id=rbil.movgest_id
						and   mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
						and   mov.movgest_anno>annoMovimento::integer -- anno dell impegno = annoMovimento 
						and   mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
						and   ts.movgest_id=mov.movgest_id
						and   rstato.movgest_ts_id=ts.movgest_ts_id
						and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- Impegno non ANNULLATO
						and   rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
					    and   tsdet.movgest_ts_id=ts.movgest_ts_id
						and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
						-- SIAC-7349 Prendo tutti gli importi, sia con segno negativo che con segno positivo
					 	-- La loro somma produce il valore importoModifDelta che devo sottrarre all'impegnato calcolato
					 	-- ad esempio: modifiche su atto provv +100, -322 -> somma -222 si tratta di un delta che devo sottrarre
					 	-- all'impegnato calcolato = impegnato calcolato - (-222) = +222 (aggiungo quello che avevo tolto)
					 	-- and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
						and   tipom.mod_tipo_id=mod.mod_tipo_id
						and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
						group by ts.movgest_ts_tipo_id
					  ) tb, siac_d_movgest_ts_tipo tipo
					  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					  order by tipo.movgest_ts_tipo_code desc
					  limit 1;		
					  
 				if importoModifDelta is null then importoModifDelta:=0; end if;
				  /*Aggiunta delle modifiche ECONB*/
				 -- anna_economie inizio
   				select tb.importo into importoModifINS
 				from
 				(
 					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
 			   	 	siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
				    siac_t_movgest_ts_det_mod moddet,
 			   	 	siac_t_modifica mod, siac_r_modifica_stato rmodstato,
				    siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
 			        siac_d_modifica_tipo tipom
				where rbil.elem_id=elemIdGestEq
				and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
				and	  mov.movgest_id=rbil.movgest_id
				and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
 			   	and   mov.movgest_anno=annoMovimento::integer
 			   	and   mov.bil_id=bilancioId
				and   ts.movgest_id=mov.movgest_id
				and   rstato.movgest_ts_id=ts.movgest_ts_id
				and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- impegno non annullato
				and   tsdet.movgest_ts_id=ts.movgest_ts_id
				and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
				and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
				and   moddet.movgest_ts_det_importo<0 -- importo negativo
				and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
				and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
				and   mod.mod_id=rmodstato.mod_id
				and   atto.attoamm_id=mod.attoamm_id
				and   attostato.attoamm_id=atto.attoamm_id
				and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
 			   and   tipom.mod_tipo_id=mod.mod_tipo_id
 			   and   tipom.mod_tipo_code = 'ECONB'
				-- date
				and rbil.data_cancellazione is null
				and rbil.validita_fine is null
				and mov.data_cancellazione is null
				and mov.validita_fine is null
				and ts.data_cancellazione is null
				and ts.validita_fine is null
				and rstato.data_cancellazione is null
				and rstato.validita_fine is null
				and tsdet.data_cancellazione is null
				and tsdet.validita_fine is null
				and moddet.data_cancellazione is null
				and moddet.validita_fine is null
				and mod.data_cancellazione is null
				and mod.validita_fine is null
				and rmodstato.data_cancellazione is null
				and rmodstato.validita_fine is null
				and attostato.data_cancellazione is null
				and attostato.validita_fine is null
				and atto.data_cancellazione is null
				and atto.validita_fine is null
 			   group by ts.movgest_ts_tipo_id
 			 ) tb, siac_d_movgest_ts_tipo tipo
 			 where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
 			 order by tipo.movgest_ts_tipo_code desc
 			 limit 1;
			 
			 if importoModifINS is null then 
			 	importoModifINS = 0;
			 end if;

		
			end if;		
		end if;
	end if;

	indiceAnnualita:=loop_counter;
	elemDetCompId:=idcomp_in;
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente per l'anno N-1
	impegnatoDefinitivo:=impegnatoDefinitivo+importoCurAttuale-(importoModifDelta);
	--aggiunta per ECONB
	impegnatoDefinitivo:=impegnatoDefinitivo+abs(importoModifINS);
	return next;

 WHEN 5 THEN
	-- Calcolo Residuo Iniziale: 
	--  Se presenti i movimenti gestione provenienti dal ribaltamento 
	--	 	Sommatoria dell'importo iniziale di tutti gli Impegni assunti sul capitolo in questione su idcomp_in
	--		con anno movimento < N e anno esercizio N.
	--  Se non presenti i movimenti gestione provenienti dal ribaltamento 
	-- 		Sommatoria di tutti gli Impegni (valore effettivo aka finale) assunti sul capitolo in questione su incomp_in
	--		con anno movimento < N e anno esercizio N-1 diminuiti dalla sommatoria del pagato sui medesimi impegni nell'esercizio N-1.

	impegniDaRibaltamento:=0;
	pluriennaliDaRibaltamento:=0;
	importoImpegnato:=0;	
	importoPagatoDelta:=0;
	
	select  count(*) into impegniDaRibaltamento 
	from fase_bil_t_gest_apertura_liq_imp fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;

	select  count(*) into  pluriennaliDaRibaltamento
	from fase_bil_t_gest_apertura_pluri fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;
				
	if impegniDaRibaltamento>0 and pluriennaliDaRibaltamento>0 then

		--  Se presenti i movimenti gestione provenienti dal ribaltamento 
		--		Residuo Iniziale = 
		--	 		Sommatoria dell'importo iniziale di tutti gli Impegni assunti sul capitolo in questione su idcomp_in
		--			con anno movimento < N e anno esercizio N.

		annoEsercizio:=annoBilancio;
		annoMovimento:=annoBilancio;
 		flagDeltaPagamenti:=0; -- non e' necessario scomputare il pagato
		
 	else

		--  Se non presenti i movimenti gestione provenienti dal ribaltamento 
		-- 		Residuo Iniziale =	
		--			Sommatoria di tutti gli Impegni (valore effettivo aka finale) assunti sul capitolo in questione su incomp_in
		--			con anno movimento < N e anno esercizio N-1  
		--			diminuiti dalla sommatoria del pagato sui medesimi impegni nell'esercizio N-1.

		annoEsercizio:=((annoBilancio::INTEGER)-1)::varchar;
		annoMovimento:=annoBilancio;
		flagDeltaPagamenti:=1; -- bisogna sottrarre la sommatoria del pagato sui medesimi impegni nell'esercizio N-1

	end if;

	strMessaggio:='Calcolo residuo iniziale elem_id='||id_in||'idcomp_in='||idcomp_in||
				   '.Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    -- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo residuo iniziale.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else

		strMessaggio:='Calcolo residuo iniziale elem_id='||id_in||'idcomp_in='||idcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento||'.'; 

		impegnatoDefinitivo:=0;
		strMessaggio:='Calcolo residuo iniziale elem_id='||id_in||'idcomp_in='||idcomp_in||
			'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
			'. Inizio calcolo totale importo  impegni per annoMovimento='||annoMovimento||'.';

		if impegniDaRibaltamento>0 and pluriennaliDaRibaltamento>0 then
			--  Sommatoria dell'importo iniziale di tutti gli Impegni assunti sul capitolo in questione 
			--	su Componente X con anno movimento < N e anno esercizio N

		importoImpegnato:=0;			
		select tb.importo into importoImpegnato
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
				  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno < annoMovimento::integer -- anno dell impegno < annoMovimento 
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoIdIniziale -- considerare l'importo iniziale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		
			-- 02.02.2016 Sofia JIRA 2947
			if importoImpegnato is null then importoImpegnato:=0; end if;

		else
			-- Sommatoria di tutti gli Impegni assunti (valore effettivo aka finale) sul capitolo in questione su Componente X 
			-- con anno movimento < N e anno esercizio N-1
			-- diminuiti dalla sommatoria del pagato sui medesimi impegni nell'esercizio N-1.
			importoImpegnato:=0;			
			select tb.importo into importoImpegnato
				from (
				  select
					  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
				  from
					  siac_r_movgest_bil_elem a,
					  siac_t_movgest b,
					  siac_t_movgest_ts c,
					  siac_r_movgest_ts_stato d,
					  siac_t_movgest_ts_det e,
					  siac_d_movgest_ts_det_tipo f
				  where
					  b.movgest_id=a.movgest_id and
					  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
					  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
					  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
					  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
					  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
					  and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
					  and b.movgest_anno < annoMovimento::integer -- anno dell impegno < annoMovimento 
					  and c.movgest_id=b.movgest_id
					  and d.movgest_ts_id=c.movgest_ts_id
					  and d.validita_fine is null
					  and e.movgest_ts_id=c.movgest_ts_id
					  and a.data_cancellazione is null
					  and b.data_cancellazione is null
					  and c.data_cancellazione is null
					  and e.data_cancellazione is null
					  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
					  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
					  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
				where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
				order by t.movgest_ts_tipo_code desc
				limit 1;	

			-- 16.03.2017 Sofia JIRA-SIAC-4614
			-- if importoImpegnato>0 then
			if importoImpegnato>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

				strMessaggio:='Calcolo residuo iniziale elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Calcolo sommatoria del pagato sui medesimi impegni nell''esercizio N-1.';

			   strMessaggio:='Lettura identificativo ord_stato_code='||STATO_ORD_A||'.';
			   select ordstato.ord_stato_id into ordStatoAId
			   from siac_d_ordinativo_stato ordstato
			   where ordstato.ente_proprietario_id=enteProprietarioId
			   and   ordstato.ord_stato_code=STATO_ORD_A;

			   select tipo.ord_ts_det_tipo_id into ordTsDetTipoAId
			   from siac_d_ordinativo_ts_det_tipo tipo
			   where tipo.ente_proprietario_id=enteProprietarioId
			   and   tipo.ord_ts_det_tipo_code=ORD_TS_DET_TIPO_A;

				select coalesce(sum(e.ord_ts_det_importo),0) into importoPagatoDelta
				from  
					 siac_r_movgest_bil_elem a,  --rmov,
					 siac_t_movgest b, -- mov, 
					 siac_t_movgest_ts c, --ts,
					 siac_r_liquidazione_movgest rliq,
					 siac_r_liquidazione_ord rord, 
					 siac_t_ordinativo_ts ordts, 
					 siac_t_ordinativo ord,
					 siac_r_ordinativo_stato rordstato,
					 siac_t_ordinativo_ts_det e, --tsdet,
					 siac_r_movgest_ts_stato d
				where
					b.movgest_id=a.movgest_id and
					a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
					a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
					and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
					and ord.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
					and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
					and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
					and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
					and b.movgest_anno < annoMovimento::integer -- anno dell impegno < annoMovimento 
					and c.movgest_id=b.movgest_id
					and d.movgest_ts_id=c.movgest_ts_id	
					and   rliq.movgest_ts_id=c.movgest_ts_id
					and   rord.liq_id=rliq.liq_id
					and   ordts.ord_ts_id=rord.sord_id
					and   ord.ord_id=ordts.ord_id
					and   rordstato.ord_id=ord.ord_id
					and   rordstato.ord_stato_id!=ordStatoAId -- non deve essere Annullato
					and   e.ord_ts_id=ordts.ord_ts_id
					and   e.ord_ts_det_tipo_id=ordTsDetTipoAId -- importo attuale
					and   e.data_cancellazione is null
					and   e.validita_fine is null
					and   b.data_cancellazione is null
					and   b.validita_fine is null
					and   c.data_cancellazione is null
					and   c.validita_fine is null
					and   a.data_cancellazione is null
					and   a.validita_fine is null
					and   rord.data_cancellazione is null
					and   rord.validita_fine is null
					and   rliq.data_cancellazione is null
					and   rliq.validita_fine is null
					and   ordts.data_cancellazione is null
					and   ordts.validita_fine is null
					and   ord.data_cancellazione is null
					and   ord.validita_fine is null
					and   rordstato.data_cancellazione is null
					and   rordstato.validita_fine is null
					and   d.data_cancellazione is null
					and   d.validita_fine is null;

				if importoPagatoDelta is null then importoPagatoDelta:=0; end if;

			end if;		
		end if;
	end if;

	indiceAnnualita:=loop_counter;
	elemDetCompId:=idcomp_in;
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente per l'anno N-1
	if flagDeltaPagamenti != 0 then
		impegnatoDefinitivo:=impegnatoDefinitivo+importoImpegnato-(importoPagatoDelta);
	else 
		impegnatoDefinitivo:=impegnatoDefinitivo+importoImpegnato;
	end if;
	return next;

	

 WHEN 6 THEN
	-- Calcolo Residuo Finale (In presenza della colonna finale e in assenza di qualsiasi colonna):
	--  Se presenti i movimenti gestione provenienti dal ribaltamento 
	--		Sommatoria dell'importo attuale di tutti gli Impegni assunti sul capitolo in questione su idcomp_in 
	--		con anno movimento < N e anno esercizio N.
	--  Se non presenti i movimenti gestione provenienti dal ribaltamento 
	-- 		Sommatoria di tutti gli Impegni (valore effettivo aka finale aka attuale) assunti sul capitolo in questione su incomp_in 
	--		con anno movimento < N e anno esercizio N-1 diminuiti dalla sommatoria del pagato sui medesimi impegni nell'esercizio N-1.

	impegniDaRibaltamento:=0;
	pluriennaliDaRibaltamento:=0;
	importoImpegnato:=0;	
	importoPagatoDelta:=0;
	
	select  count(*) into impegniDaRibaltamento 
	from fase_bil_t_gest_apertura_liq_imp fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;

	select  count(*) into  pluriennaliDaRibaltamento
	from fase_bil_t_gest_apertura_pluri fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;
				
	if impegniDaRibaltamento>0 and pluriennaliDaRibaltamento>0 then

		--  Se presenti i movimenti gestione provenienti dal ribaltamento 
		--		Residuo Finale = 
		--	 		Sommatoria dell'importo attuale di tutti gli Impegni assunti sul capitolo in questione su idcomp_in
		--			con anno movimento < N e anno esercizio N.

		annoEsercizio:=annoBilancio;
		annoMovimento:=annoBilancio;
 		flagDeltaPagamenti:=0; -- non e' necessario scomputare il pagato
		
 	else

		--  Se non presenti i movimenti gestione provenienti dal ribaltamento 
		-- 		Residuo Finale =	
		--			Sommatoria di tutti gli Impegni (valore effettivo aka finale) assunti sul capitolo in questione su incomp_in
		--			con anno movimento < N e anno esercizio N-1  
		--			diminuiti dalla sommatoria del pagato sui medesimi impegni nell'esercizio N-1.

		annoEsercizio:=((annoBilancio::INTEGER)-1)::varchar;
		annoMovimento:=annoBilancio;
		flagDeltaPagamenti:=1; -- bisogna sottrarre la sommatoria del pagato sui medesimi impegni nell'esercizio N-1

	end if;

	strMessaggio:='Calcolo residuo finale elem_id='||id_in||'idcomp_in='||idcomp_in||
				   '.Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    -- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo residuo finale.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else

		strMessaggio:='Calcolo residuo finale elem_id='||id_in||'idcomp_in='||idcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento||'.'; 

		impegnatoDefinitivo:=0;
		strMessaggio:='Calcolo residuo finale elem_id='||id_in||'idcomp_in='||idcomp_in||
			'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
			'. Inizio calcolo totale importo  impegni per annoMovimento='||annoMovimento||'.';

		if impegniDaRibaltamento>0 and pluriennaliDaRibaltamento>0 then
			--  Sommatoria dell'importo attuale di tutti gli Impegni assunti sul capitolo in questione 
			--	su Componente X con anno movimento < N e anno esercizio N

		importoImpegnato:=0;			
		select tb.importo into importoImpegnato
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
				  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno < annoMovimento::integer -- anno dell impegno < annoMovimento 
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		
			-- 02.02.2016 Sofia JIRA 2947
			if importoImpegnato is null then importoImpegnato:=0; end if;

		else
			-- Sommatoria di tutti gli Impegni assunti (valore effettivo aka finale) sul capitolo in questione su Componente X 
			-- con anno movimento < N e anno esercizio N-1
			-- diminuiti dalla sommatoria del pagato sui medesimi impegni nell'esercizio N-1.
			importoImpegnato:=0;			
			select tb.importo into importoImpegnato
				from (
				  select
					  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
				  from
					  siac_r_movgest_bil_elem a,
					  siac_t_movgest b,
					  siac_t_movgest_ts c,
					  siac_r_movgest_ts_stato d,
					  siac_t_movgest_ts_det e,
					  siac_d_movgest_ts_det_tipo f
				  where
					  b.movgest_id=a.movgest_id and
					  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
					  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
					  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
					  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
					  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
					  and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
					  and b.movgest_anno < annoMovimento::integer -- anno dell impegno < annoMovimento 
					  and c.movgest_id=b.movgest_id
					  and d.movgest_ts_id=c.movgest_ts_id
					  and d.validita_fine is null
					  and e.movgest_ts_id=c.movgest_ts_id
					  and a.data_cancellazione is null
					  and b.data_cancellazione is null
					  and c.data_cancellazione is null
					  and e.data_cancellazione is null
					  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
					  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
					  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
				where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
				order by t.movgest_ts_tipo_code desc
				limit 1;	

			-- 16.03.2017 Sofia JIRA-SIAC-4614
			-- if importoImpegnato>0 then
			if importoImpegnato>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

				strMessaggio:='Calcolo residuo finale elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Calcolo sommatoria del pagato sui medesimi impegni nell''esercizio N-1.';

			   strMessaggio:='Lettura identificativo ord_stato_code='||STATO_ORD_A||'.';
			   select ordstato.ord_stato_id into ordStatoAId
			   from siac_d_ordinativo_stato ordstato
			   where ordstato.ente_proprietario_id=enteProprietarioId
			   and   ordstato.ord_stato_code=STATO_ORD_A;

			   select tipo.ord_ts_det_tipo_id into ordTsDetTipoAId
			   from siac_d_ordinativo_ts_det_tipo tipo
			   where tipo.ente_proprietario_id=enteProprietarioId
			   and   tipo.ord_ts_det_tipo_code=ORD_TS_DET_TIPO_A;

				select coalesce(sum(e.ord_ts_det_importo),0) into importoPagatoDelta
				from  
					 siac_r_movgest_bil_elem a,  --rmov,
					 siac_t_movgest b, -- mov, 
					 siac_t_movgest_ts c, --ts,
					 siac_r_liquidazione_movgest rliq,
					 siac_r_liquidazione_ord rord, 
					 siac_t_ordinativo_ts ordts, 
					 siac_t_ordinativo ord,
					 siac_r_ordinativo_stato rordstato,
					 siac_t_ordinativo_ts_det e, --tsdet,
					 siac_r_movgest_ts_stato d
				where
					b.movgest_id=a.movgest_id and
					a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
					a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
					and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
					and ord.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
					and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
					and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
					and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
					and b.movgest_anno < annoMovimento::integer -- anno dell impegno < annoMovimento 
					and c.movgest_id=b.movgest_id
					and d.movgest_ts_id=c.movgest_ts_id	
					and   rliq.movgest_ts_id=c.movgest_ts_id
					and   rord.liq_id=rliq.liq_id
					and   ordts.ord_ts_id=rord.sord_id
					and   ord.ord_id=ordts.ord_id
					and   rordstato.ord_id=ord.ord_id
					and   rordstato.ord_stato_id!=ordStatoAId -- non deve essere Annullato
					and   e.ord_ts_id=ordts.ord_ts_id
					and   e.ord_ts_det_tipo_id=ordTsDetTipoAId -- importo attuale
					and   e.data_cancellazione is null
					and   e.validita_fine is null
					and   b.data_cancellazione is null
					and   b.validita_fine is null
					and   c.data_cancellazione is null
					and   c.validita_fine is null
					and   a.data_cancellazione is null
					and   a.validita_fine is null
					and   rord.data_cancellazione is null
					and   rord.validita_fine is null
					and   rliq.data_cancellazione is null
					and   rliq.validita_fine is null
					and   ordts.data_cancellazione is null
					and   ordts.validita_fine is null
					and   ord.data_cancellazione is null
					and   ord.validita_fine is null
					and   rordstato.data_cancellazione is null
					and   rordstato.validita_fine is null
					and   d.data_cancellazione is null
					and   d.validita_fine is null;

				if importoPagatoDelta is null then importoPagatoDelta:=0; end if;

			end if;		
		end if;
	end if;

	indiceAnnualita:=loop_counter;
	elemDetCompId:=idcomp_in;
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente per l'anno N-1
	if flagDeltaPagamenti != 0 then
		impegnatoDefinitivo:=impegnatoDefinitivo+importoImpegnato-(importoPagatoDelta);
	else 
		impegnatoDefinitivo:=impegnatoDefinitivo+importoImpegnato;
	end if;
	return next;

END CASE;
END LOOP;

return;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
		return;
	when no_data_found then
		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
		return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
		return;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp(integer, integer)
    OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp(integer, integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp(integer, integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp(integer, integer) TO siac;
--end fnc_siac_impegnatodefinitivoup_comp


--Start fnc_siac_stanz_effettivo_ug_anno_comp
CREATE OR REPLACE FUNCTION siac.fnc_siac_stanz_effettivo_ug_anno_comp (
  id_in integer,
  anno_comp_in character varying,
  idcomp_in integer
)
RETURNS TABLE (
  elemid integer,
  annocompetenza character varying,
  stanzeffettivo numeric,
  stanzeffettivocassa numeric,
  massimoimpegnabile numeric
)
LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$
DECLARE

-- constant
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
NVL_STR     constant varchar:='';
STA_IMP     constant varchar:='STA';
STA_IMP_SCA     constant varchar:='SCA';
STA_IMP_MI     constant varchar:='MI'; -- tipo importo massimo impegnabile

-- fasi di bilancio
FASE_BIL_PREV  constant varchar:='P'; -- previsione
FASE_BIL_PROV  constant varchar:='E'; -- esercizio provvisorio
FASE_BIL_GEST  constant varchar:='G'; -- esercizio gestione
FASE_BIL_CONS  constant varchar:='O'; -- esercizio consuntivo
FASE_BIL_CHIU  constant varchar:='C'; -- esercizio chiuso

-- stati variazioni di importo
STATO_VAR_G    constant varchar:='G'; -- GIUNTA
STATO_VAR_C    constant varchar:='C'; -- CONSIGLIO
STATO_VAR_B    constant varchar:='B'; -- BOZZA
STATO_VAR_D    constant varchar:='D'; -- DEFINITIVA
STATO_VAR_P    constant varchar:='P'; -- PRE-DEFINITIVA -- 31.03.2016 Sofia JIRA-SIAC-3304

bilancioId integer:=0;
bilElemId  integer:=0;
bilElemPrevId  integer:=0;
strMessaggio varchar(1500):=NVL_STR;
bilFaseOperativa varchar(10):=NVL_STR;
annoBilancio varchar(10):=NVL_STR;

stanziamentoPrev numeric:=0;
stanziamentoPrevCassa numeric:=0;

stanziamento numeric:=0;
stanziamentoEff numeric:=0;
deltaMenoPrev numeric:=0;
varImpGestione numeric:=0;
deltaMenoGest numeric:=0;
deltaMenoPrevCassa numeric:=0;
varImpGestioneCassa numeric:=0;
deltaMenoGestCassa numeric:=0;
stanziamentoEffCassa numeric:=0;
stanziamentoCassa numeric:=0;
stanzMassimoImpegnabile numeric:=null;

periodoId integer:=0;
periodoCompId integer:=0;
enteProprietarioId integer:=0;
detCompCap integer:=0; --SIAC-7349 Numero dettagli componente per capitolo di previsione equivalente - fix per componente assente

BEGIN

 annoCompetenza:=null;
 stanzEffettivo:=null;
 stanzEffettivoCassa:=null;
 elemId:=null;
 massimoImpegnabile:=null;

 -- controllo parametri
 -- anno_comp_in obbligatorio
 -- id_in obbligatorio
 -- idcomp_in obbligatorio

 strMessaggio:='Calcolo stanziamento effettivo.Controllo parametri.';

 if anno_comp_in is null or anno_comp_in=NVL_STR then
    	RAISE EXCEPTION '% Anno di competenza mancante.',strMessaggio;
 end if;

 if id_in is null or id_in=0 then
    	RAISE EXCEPTION '% Id_in  mancante.',strMessaggio;
 end if;

 if idcomp_in is null or idcomp_in=0 then
    	RAISE EXCEPTION '% Id_in  mancante.',strMessaggio;
 end if;

 strMessaggio:='Lettura identificativo bilancioId, annoBilancio e enteProprietarioId da elemento di bilancio elem_id='||id_in||'.';
 select bil.bil_id, per.anno, bilElem.ente_proprietario_id
               into strict bilancioId, annoBilancio, enteProprietarioId
 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo tipoBilElem,
             siac_t_bil bil, siac_t_periodo per
 where bilElem.elem_id=id_in
        and   bilElem.data_cancellazione is null
        and   bilElem.validita_fine is null
        and   tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
        and   tipoBilElem.elem_tipo_code = TIPO_CAP_UG
        and   bil.bil_id=bilElem.bil_id
        and   per.periodo_id=bil.periodo_id;

  bilElemId:=id_in;

  if bilancioId is not null and bilancioId!=0 then
  strMessaggio:='Lettura identificativo annoBilancio enteProprietarioId periodoId elemento di bilancio elem_id='||id_in
              ||' per bilancioId='||bilancioId||'.';

  select per.anno,  bil.ente_proprietario_id, per.periodo_id
        into strict annoBilancio, enteProprietarioId, periodoId
  from siac_t_bil bil, siac_t_periodo per
  where bil.bil_id=bilancioId and
        per.periodo_id=bil.periodo_id;
 end if;

 if bilElemId is null or bilElemId=0 then
   strMessaggio:='Lettura identificativo elemento di bilancio '||ele_code_in||'/'||ele_code2_in||'/'||ele_code3_in||'.';
   if bilancioId is not null and bilancioId!=0 then
 	 strMessaggio:='Lettura identificativo elemento di bilancio '||ele_code_in||'/'||ele_code2_in||'/'||ele_code3_in
                    ||'  per bilancioId='||bilancioId||' .';
     select bilElem.elem_id into strict bilElemId
     from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo tipoBilElem
     where bilElem.bil_id=bilancioId
     and   bilElem.elem_code=ele_code_in
     and   bilElem.elem_code2=ele_code2_in
     and   bilElem.elem_code3=ele_code3_in
     and   bilElem.data_cancellazione is null
     and   bilElem.validita_fine is null
     and   tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
     and   tipoBilElem.elem_tipo_code = TIPO_CAP_UG;
   else
	 strMessaggio:='Lettura identificativo elemento di bilancio '||ele_code_in||'/'||ele_code2_in||'/'||ele_code3_in
                    ||'  bilancioId periodoId per annoBilancioIn='||anno_in||' enteProprietarioIn'||ente_prop_in||' .';
     select bilElem.elem_id, bilelem.bil_id, per.periodo_id
            into strict bilElemId, bilancioId, periodoId
     from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo tipoBilElem,
          siac_t_bil bil, siac_t_periodo per, siac_d_periodo_tipo tipoPer
     where per.anno=anno_in
     and   per.ente_proprietario_id=ente_prop_in
     and   tipoPer.periodo_tipo_id=per.periodo_tipo_id
     and   tipoPer.periodo_tipo_code='SY'
     and   bil.periodo_id=per.periodo_id
     and   bilElem.bil_id=bil.bil_id
     and   bilElem.elem_code=ele_code_in
     and   bilElem.elem_code2=ele_code2_in
     and   bilElem.elem_code3=ele_code3_in
     and   bilElem.data_cancellazione is null
     and   bilElem.validita_fine is null
     and   tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
     and   tipoBilElem.elem_tipo_code = TIPO_CAP_UG;

     annoBilancio:=anno_in;
     enteProprietarioId:=ente_prop_in;

   end if;

 end  if;

 strMessaggio:='Lettura fase di bilancio corrente per  anno bilancio='||annoBilancio||' bilancioId='||bilancioId
                ||' per elem_id='||bilElemId||' .';

 select faseop.fase_operativa_code into strict bilFaseOperativa
 from siac_d_fase_operativa faseOp, siac_r_bil_fase_operativa bilFaseOp
 where bilfaseop.bil_id=bilancioId and
       bilfaseop.data_cancellazione is null and
       bilfaseop.validita_fine is null  and
       faseOp.ente_proprietario_id=bilFaseOp.ente_proprietario_id and
       faseOp.fase_operativa_id = bilfaseop.fase_operativa_id and
       faseOp.data_cancellazione is null and
       faseOp.validita_fine is null;

 if bilFaseOperativa in ( FASE_BIL_PREV ) then
    	return next;
        return;
 elsif bilFaseOperativa not in ( FASE_BIL_PROV, FASE_BIL_GEST,FASE_BIL_CONS,FASE_BIL_CHIU) then
    	RAISE EXCEPTION '% Fase non ammessa per il calcolo richiesto.',strMessaggio;
 end if;

if anno_comp_in!=annoBilancio then
 	strMessaggio:='Lettura periodoCompId per anno_comp_in='||anno_comp_in||' elem_id='||bilElemId||'.';

 	select  per.periodo_id into strict periodoCompId
    from siac_t_periodo per, siac_d_periodo_tipo perTipo
    where per.anno=anno_comp_in
    and   per.ente_proprietario_id=enteProprietarioId
    and   perTipo.periodo_tipo_id=per.periodo_tipo_id
    and   perTipo.periodo_tipo_code='SY';
 else
     periodoCompId:=periodoId;
 end if;

 if bilFaseOperativa = FASE_BIL_PROV then
    -- [stanziamento previsione - 'delta-previsione' + variazioni def di gestione]
		
    	strMessaggio:='Lettura elemento di bilancio equivalente di previsione per elem_id='||bilElemId||'.';
	    select bilElemPrev.elem_id into  bilElemPrevId
    	from siac_t_bil_elem bilElemPrev, siac_d_bil_elem_tipo tipoPrev,
        	 siac_t_bil_elem bilElemGest
    	where bilElemGest.elem_id=bilElemId and
              bilElemPrev.elem_code=bilElemGest.elem_code and
              bilElemPrev.elem_code2=bilElemGest.elem_code2 and
              bilElemPrev.elem_code3=bilElemGest.elem_code3 and
              bilElemPrev.ente_proprietario_id=bilElemGest.ente_proprietario_id and
              bilElemPrev.bil_id=bilElemGest.bil_id and
              bilElemPrev.data_cancellazione is null and bilElemPrev.validita_fine is null and
              tipoPrev.elem_tipo_id=bilElemPrev.elem_tipo_id and
              tipoPrev.elem_tipo_code=TIPO_CAP_UP;

        if NOT FOUND then
         bilElemPrevId:=0;
        else
			--SIAC-7349 controllo se esiste la componente nel capitolo di previsione equivalente
			strMessaggio:='Lettura numero stanziamenti di previsione per elem_id='||bilElemPrevId||
																' anno_comp_in='||anno_comp_in||
																' idcomp_in='||idcomp_in|| '.';
			
			select count(comp.elem_det_id) into detCompCap
			 from siac_t_bil_elem_det importiPrev,
				  siac_d_bil_elem_det_tipo tipoImpPrev,
				  siac_t_bil_elem_det_comp comp,
				  siac_d_bil_elem_det_comp_tipo comptipo
			 where importiPrev.elem_id=bilElemPrevId AND
				   comp.elem_det_id = importiPrev.elem_det_id and
				   importiPrev.data_cancellazione is null and importiPrev.validita_fine is null and
				   tipoImpPrev.elem_det_tipo_id=importiPrev.elem_det_tipo_id and
				   tipoImpPrev.elem_det_tipo_code=STA_IMP and
				   comp.data_cancellazione is null and comp.validita_fine is null and
				   importiPrev.periodo_id=periodoCompId
				   and comptipo.data_cancellazione is null and comptipo.validita_fine is null  
				   and comp.elem_det_comp_tipo_id = comptipo.elem_det_comp_tipo_id
				   and comptipo.elem_det_comp_tipo_id = idcomp_in                                                 
					-- SIAC-7349 Aggiunto non exists per escludere le componenti che sono collegate come "nuovi dettagli" tramite variazione in stato diverso da definitivo
				   and not (exists ( 
					select siactbilel4_.elem_det_var_comp_id
					from 	siac_t_bil_elem_det_var_comp siactbilel4_
							cross join siac_t_bil_elem_det_var siactbilel5_
							cross join siac_r_variazione_stato siacrvaria6_
							cross join siac_d_variazione_stato siacdvaria7_
					where 	siactbilel4_.elem_det_var_id=siactbilel5_.elem_det_var_id
						and siactbilel5_.variazione_stato_id=siacrvaria6_.variazione_stato_id
						and siacrvaria6_.variazione_stato_tipo_id=siacdvaria7_.variazione_stato_tipo_id
						and siactbilel4_.elem_det_comp_id=comp.elem_det_comp_id
						and siactbilel4_.elem_det_flag='N'
						and siacdvaria7_.variazione_stato_tipo_code<>'D'
						and siactbilel4_.data_cancellazione is null
						and siactbilel5_.data_cancellazione is null
						and siacrvaria6_.data_cancellazione is null
					));
					
				   
			--SIAC-7349                                                   
			if detCompCap = 0 then
				stanziamentoPrev:=0;
				deltaMenoPrev:=0;
				
			
			else
        	
				strMessaggio:='Lettura stanziamenti di previsione per elem_id='||bilElemPrevId||
																' anno_comp_in='||anno_comp_in||
																' idcomp_in='||idcomp_in|| '.';
	   
				select comp.elem_det_importo  into strict stanziamentoPrev
				from siac_t_bil_elem_det importiPrev,
				  siac_d_bil_elem_det_tipo tipoImpPrev,
				  siac_t_bil_elem_det_comp comp,
				  siac_d_bil_elem_det_comp_tipo comptipo
				where importiPrev.elem_id=bilElemPrevId AND
				   comp.elem_det_id = importiPrev.elem_det_id and
				   importiPrev.data_cancellazione is null and importiPrev.validita_fine is null and
				   tipoImpPrev.elem_det_tipo_id=importiPrev.elem_det_tipo_id and
				   tipoImpPrev.elem_det_tipo_code=STA_IMP and
				   comp.data_cancellazione is null and comp.validita_fine is null and
				   importiPrev.periodo_id=periodoCompId
				and comptipo.data_cancellazione is null and comptipo.validita_fine is null  
				and comp.elem_det_comp_tipo_id = comptipo.elem_det_comp_tipo_id
				and comptipo.elem_det_comp_tipo_id = idcomp_in
				-- SIAC-7349 Aggiunto non exists per escludere le componenti che sono collegate come "nuovi dettagli" tramite variazione in stato diverso da definitivo
				and not (exists (
					select siactbilel4_.elem_det_var_comp_id
					from 	siac_t_bil_elem_det_var_comp siactbilel4_
							cross join siac_t_bil_elem_det_var siactbilel5_
							cross join siac_r_variazione_stato siacrvaria6_
							cross join siac_d_variazione_stato siacdvaria7_
					where 	siactbilel4_.elem_det_var_id=siactbilel5_.elem_det_var_id
						and siactbilel5_.variazione_stato_id=siacrvaria6_.variazione_stato_id
						and siacrvaria6_.variazione_stato_tipo_id=siacdvaria7_.variazione_stato_tipo_id
						and siactbilel4_.elem_det_comp_id=comp.elem_det_comp_id
						and siactbilel4_.elem_det_flag='N'
						and siacdvaria7_.variazione_stato_tipo_code<>'D'
						and siactbilel4_.data_cancellazione is null
						and siactbilel5_.data_cancellazione is null
						and siacrvaria6_.data_cancellazione is null
					));

				 --- calcolo dei 'delta-previsione', variazioni agli importi del CAP-UP in stato
				 --- diverso da BOZZA,DEFINTIVO,ANNULLATO
				 --- 31.03.2016 Sofia SIAC-3304 aggiunto stato P
				 strMessaggio:='Lettura variazioni delta-meno-prev per elem_id='||bilElemPrevId||' anno_comp_in='||
								anno_comp_in||
								' idcomp_in='||idcomp_in|| '.';
				/* SIAC-7349*/
       	 
				select   coalesce(sum(abs(bilElemDetVarComp.elem_det_importo)),0) into strict deltaMenoPrev
				from siac_t_variazione var,
					  siac_r_variazione_stato statoVar,
					  siac_d_variazione_stato tipoStatoVar,
					  siac_t_bil_elem_det_var bilElemDetVar,
					  siac_d_bil_elem_det_tipo bilElemDetVarTipo,
					  siac_t_bil_elem_det_var_comp bilElemDetVarComp,
					  siac_d_bil_elem_det_comp_tipo bilElemDetCompTipo --adeguamento 
				where bilElemDetVar.elem_id=bilElemPrevId and
					   bilElemDetVar.data_cancellazione is null and bilElemDetVar.validita_fine is null and
					   bilElemDetVar.periodo_id=periodoCompId and
					   bilElemDetVar.elem_det_importo<0 AND
					   bilElemDetVar.elem_det_tipo_id=bilElemDetVarTipo.elem_det_tipo_id and
					   bilElemDetVarTipo.elem_det_tipo_code=STA_IMP and
					   bilElemDetVar.variazione_stato_id=statoVar.variazione_stato_id and
					   statoVar.data_cancellazione is null and statoVar.validita_fine is null and
					   tipoStatoVar.variazione_stato_tipo_id=statoVar.variazione_stato_tipo_id and
					   -- tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_B,STATO_VAR_P) and -- 1109015 Sofia aggiunto STATO_VAR_B
					   tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_P) and -- Sofia 26072016 JIRA-SIAC-3887
					   var.variazione_id=statoVar.variazione_id and
					   var.data_cancellazione is null and var.validita_fine is null and
					   var.bil_id= bilancioId and
					   bilElemDetVarComp.data_cancellazione is null and bilElemDetVarComp.validita_fine is null and
					   bilElemDetVarComp.elem_det_var_id = bilElemDetVar.elem_det_var_id				
					and bilElemDetCompTipo.elem_det_comp_tipo_id = idcomp_in; --adeguamento
			end if;                                                   

  end if;
        --- calcolo variazioni applicate alla gestione, variazioni agli importi CAP-UG
      	strMessaggio:='Lettura variazioni di gestione per elem_id='||bilElemId||' anno_comp_in='||
                       anno_comp_in||
					   ' idcomp_in='||idcomp_in|| '.';

		select coalesce(sum(bilElemDetVarComp.elem_det_importo),0) into strict varImpGestione
        from siac_t_variazione var,
             siac_r_variazione_stato statoVar,
             siac_d_variazione_stato tipoStatoVar,
             siac_t_bil_elem_det_var bilElemDetVar,
             siac_d_bil_elem_det_tipo bilElemDetVarTipo,
             siac_t_bil_elem_det_var_comp bilElemDetVarComp,
             siac_d_bil_elem_det_comp_tipo bilElemDetCompTipo, --adeguamento
             siac_t_bil_elem_det_comp bilElemDetComp
          where bilElemDetVar.elem_id=bilElemId and
              bilElemDetVar.data_cancellazione is null and bilElemDetVar.validita_fine is null and
              bilElemDetVar.periodo_id=periodoCompId and
  	          bilElemDetVar.elem_det_tipo_id=bilElemDetVarTipo.elem_det_tipo_id and
              bilElemDetVarTipo.elem_det_tipo_code=STA_IMP and
              bilElemDetVar.variazione_stato_id=statoVar.variazione_stato_id and
              statoVar.data_cancellazione is null and statoVar.validita_fine is null and
              tipoStatoVar.variazione_stato_tipo_id=statoVar.variazione_stato_tipo_id and
              tipoStatoVar.variazione_stato_tipo_code=STATO_VAR_D and
              var.variazione_id=statoVar.variazione_id and
              var.data_cancellazione is null and var.validita_fine is null and
              var.bil_id=bilancioId and
              bilElemDetVarComp.elem_det_var_id = bilElemDetVar.elem_det_var_id
              and bilElemDetVarComp.elem_det_comp_id = bilElemDetComp.elem_det_comp_id
			  and bilElemDetComp.elem_det_comp_tipo_id =  bilElemDetCompTipo.elem_det_comp_tipo_id
			  and bilElemDetCompTipo.elem_det_comp_tipo_id = idcomp_in --adeguamento
			  and bilElemDetVarComp.data_cancellazione is null and bilElemDetVarComp.validita_fine is null 
              and bilElemDetComp.data_cancellazione is null and bilElemDetComp.validita_fine is null;

	    if anno_comp_in=annoBilancio then
         if bilElemPrevId!=0 then

/* SIAC-7349 la cassa non ci serve?
          strMessaggio:='Lettura stanziamenti di previsione cassa per elem_id='||bilElemPrevId||' anno_comp_in='||anno_comp_in||'.';
          select importiprev.elem_det_importo into strict stanziamentoPrevCassa
	      from siac_t_bil_elem_det importiPrev, siac_d_bil_elem_det_tipo tipoImpPrev
	      where importiPrev.elem_id=bilElemPrevId AND
		   	    importiPrev.data_cancellazione is null and importiPrev.validita_fine is null and
     	   	    tipoImpPrev.elem_det_tipo_id=importiPrev.elem_det_tipo_id and
	            tipoImpPrev.elem_det_tipo_code=STA_IMP_SCA and
	            importiPrev.periodo_id=periodoCompId;
*/

          --- calcolo dei 'delta-previsione', variazioni agli importi di cassa del CAP-UP in stato
	      --- diverso da BOZZA,DEFINTIVO,ANNULLATO
          --- 31.03.2016 Sofia SIAC-3304 aggiunto stato P
/* SIAC-7349 la cassa non ci serve?
          strMessaggio:='Lettura variazioni delta-meno-prev cassa per elem_id='||bilElemPrevId||' anno_comp_in='||
                         anno_comp_in||'.';
       	  select coalesce(sum(abs(bilElemDetVar.elem_det_importo)),0) into strict deltaMenoPrevCassa
          from siac_t_variazione var,
               siac_r_variazione_stato statoVar, siac_d_variazione_stato tipoStatoVar,
               siac_t_bil_elem_det_var bilElemDetVar, siac_d_bil_elem_det_tipo bilElemDetVarTipo
          where bilElemDetVar.elem_id=bilElemPrevId and
          	    bilElemDetVar.data_cancellazione is null and bilElemDetVar.validita_fine is null and
                bilElemDetVar.periodo_id=periodoCompId and
		        bilElemDetVar.elem_det_importo<0 AND
  	            bilElemDetVar.elem_det_tipo_id=bilElemDetVarTipo.elem_det_tipo_id and
                bilElemDetVarTipo.elem_det_tipo_code=STA_IMP_SCA and
                bilElemDetVar.variazione_stato_id=statoVar.variazione_stato_id and
                statoVar.data_cancellazione is null and statoVar.validita_fine is null and
                tipoStatoVar.variazione_stato_tipo_id=statoVar.variazione_stato_tipo_id and
--                tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_B,STATO_VAR_P) and --1109015 Sofia aggiunto STATO_VAR_B
                tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_P) and -- 26072016 Sofia JIRA-SIAC-3887
                var.variazione_id=statoVar.variazione_id and
                var.data_cancellazione is null and var.validita_fine is null and
                var.bil_id=bilancioId;
*/
         end if;

         --- calcolo variazioni applicate alla gestione, variazioni agli importi di cassa CAP-UG
       	 strMessaggio:='Lettura variazioni di gestione cassa per elem_id='||bilElemId||' anno_comp_in='||
                        anno_comp_in||'.';
/* SIAC-7349 la cassa non ci serve?
       	 select coalesce(sum(bilElemDetVar.elem_det_importo),0) into strict varImpGestioneCassa
         from siac_t_variazione var,
          	  siac_r_variazione_stato statoVar, siac_d_variazione_stato tipoStatoVar,
              siac_t_bil_elem_det_var bilElemDetVar, siac_d_bil_elem_det_tipo bilElemDetVarTipo
         where bilElemDetVar.elem_id=bilElemId and
         	   bilElemDetVar.data_cancellazione is null and bilElemDetVar.validita_fine is null and
               bilElemDetVar.periodo_id=periodoCompId and
  	           bilElemDetVar.elem_det_tipo_id=bilElemDetVarTipo.elem_det_tipo_id and
               bilElemDetVarTipo.elem_det_tipo_code=STA_IMP_SCA and
               bilElemDetVar.variazione_stato_id=statoVar.variazione_stato_id and
               statoVar.data_cancellazione is null and statoVar.validita_fine is null and
               tipoStatoVar.variazione_stato_tipo_id=statoVar.variazione_stato_tipo_id and
               tipoStatoVar.variazione_stato_tipo_code=STATO_VAR_D and
               var.variazione_id=statoVar.variazione_id and
               var.data_cancellazione is null and var.validita_fine is null and
               var.bil_id=bilancioId;
*/
       end if;

	   /*  04.07.2016 Sofia ID-INC000001114035 non considerare le variazioni di gestione
	   -- stanziamenti di previsione competenza e cassa adeguati a
       -- relativi 'delta-meno' e variazioni def. applicate alle gestione

       stanziamentoPrev:= stanziamentoPrev-deltaMenoPrev+varImpGestione;
       stanziamentoPrevCassa:= stanziamentoPrevCassa-deltaMenoPrevCassa+varImpGestioneCassa; */

	   /*  04.07.2016 Sofia ID-INC000001114035 */
       stanziamentoPrev:= stanziamentoPrev-deltaMenoPrev;
       stanziamentoPrevCassa:= stanziamentoPrevCassa-deltaMenoPrevCassa;

 end if;

 if bilFaseOperativa in ( FASE_BIL_PROV, FASE_BIL_GEST,FASE_BIL_CONS,FASE_BIL_CHIU) then
       strMessaggio:='Lettura stanziamenti di gestione per elem_id='||bilElemId||
	   					' anno_comp_in='||anno_comp_in||
						' idcomp_in='||idcomp_in|| '.';
/* SIAC-7349
       select importiGest.elem_det_importo into strict stanziamento
	   from siac_t_bil_elem_det importiGest, siac_d_bil_elem_det_tipo tipoImp
	   where importiGest.elem_id=bilElemId AND
       	     importiGest.data_cancellazione is null and importiGest.validita_fine is null and
    	 	 tipoImp.elem_det_tipo_id=importiGest.elem_det_tipo_id and
             tipoImp.elem_det_tipo_code=STA_IMP and
    	     importiGest.periodo_id=periodoCompId;
*/
       select comp.elem_det_importo	into strict stanziamento
	   from siac_t_bil_elem_det importiGest,
       		siac_d_bil_elem_det_tipo tipoImp,
                siac_t_bil_elem_det_comp comp,
		siac_d_bil_elem_det_comp_tipo comptipo
	   where importiGest.elem_id=bilElemId AND
       	     importiGest.data_cancellazione is null and importiGest.validita_fine is null and
    	     tipoImp.elem_det_tipo_id=importiGest.elem_det_tipo_id and
             tipoImp.elem_det_tipo_code=STA_IMP and
    	     importiGest.periodo_id=periodoCompId and
             comp.elem_det_id = importiGest.elem_det_id and
	     	 comp.elem_det_comp_tipo_id = comptipo.elem_det_comp_tipo_id and
	         comp.data_cancellazione is null and comp.validita_fine is null and
             comptipo.data_cancellazione is null
            -- posso avere anche componenti non piu' valide
			 -- and comptipo.validita_fine is null and
			 and comptipo.elem_det_comp_tipo_id = idcomp_in
			-- SIAC-7349 Aggiunto non exists per escludere le componenti che sono collegate come "nuovi dettagli" tramite variazione in stato diverso da definitivo
			and not (exists (
				select siactbilel4_.elem_det_var_comp_id
				from 	siac_t_bil_elem_det_var_comp siactbilel4_
						cross join siac_t_bil_elem_det_var siactbilel5_
						cross join siac_r_variazione_stato siacrvaria6_
						cross join siac_d_variazione_stato siacdvaria7_
				where 	siactbilel4_.elem_det_var_id=siactbilel5_.elem_det_var_id
					and siactbilel5_.variazione_stato_id=siacrvaria6_.variazione_stato_id
					and siacrvaria6_.variazione_stato_tipo_id=siacdvaria7_.variazione_stato_tipo_id
					and siactbilel4_.elem_det_comp_id=comp.elem_det_comp_id
					and siactbilel4_.elem_det_flag='N'
					and siacdvaria7_.variazione_stato_tipo_code<>'D'
					and siactbilel4_.data_cancellazione is null
					and siactbilel5_.data_cancellazione is null
					and siacrvaria6_.data_cancellazione is null
				));

       --- calcolo dei 'delta-gestione', variazioni agli importi del CAP-UG in stato
 	   --- diverso da BOZZA,DEFINTIVO,ANNULLATO
       strMessaggio:='Lettura variazioni delta-meno-gest per elem_id='||bilElemId||' anno_comp_in='||
                           anno_comp_in||
						' idcomp_in='||idcomp_in|| '.';
       --- 31.03.2016 Sofia SIAC-3304 aggiunto stato P
/* SIAC-7349
       select coalesce(sum(abs(bilElemDetVar.elem_det_importo)),0) into strict deltaMenoGest
       from siac_t_variazione var,
            siac_r_variazione_stato statoVar, siac_d_variazione_stato tipoStatoVar,
	        siac_t_bil_elem_det_var bilElemDetVar, siac_d_bil_elem_det_tipo bilElemDetVarTipo
       where bilElemDetVar.elem_id=bilElemId and
             bilElemDetVar.data_cancellazione is null and bilElemDetVar.validita_fine is null and
             bilElemDetVar.periodo_id=periodoCompId and
			 bilElemDetVar.elem_det_importo<0 AND
  	    	 bilElemDetVar.elem_det_tipo_id=bilElemDetVarTipo.elem_det_tipo_id and
	         bilElemDetVarTipo.elem_det_tipo_code=STA_IMP and
    	     bilElemDetVar.variazione_stato_id=statoVar.variazione_stato_id and
	         statoVar.data_cancellazione is null and statoVar.validita_fine is null and
    	     tipoStatoVar.variazione_stato_tipo_id=statoVar.variazione_stato_tipo_id and
--  	         tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_B,STATO_VAR_P) and --1109015 Sofia aggiunto STATO_VAR_B
--  	         tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_P) and -- 26072016 Sofia JIRA-SIAC-3887
  	         tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_P,STATO_VAR_B) and -- 14.102016 Sofia JIRA-SIAC-4099 riaggiunto B
        	 var.variazione_id=statoVar.variazione_id and
             var.data_cancellazione is null and var.validita_fine is null and
	         var.bil_id=bilancioId;
*/
       select coalesce(sum(abs(bilElemDetVarComp.elem_det_importo)),0) into strict deltaMenoGest
       from siac_t_variazione var,
            siac_r_variazione_stato statoVar,
            siac_d_variazione_stato tipoStatoVar,
	        siac_t_bil_elem_det_var bilElemDetVar,
            siac_d_bil_elem_det_tipo bilElemDetVarTipo,
            siac_t_bil_elem_det_var_comp bilElemDetVarComp,
            siac_d_bil_elem_det_comp_tipo bilElemDetCompTipo, --adeguamento
            siac_t_bil_elem_det_comp bilElemDetComp
       where bilElemDetVar.elem_id=bilElemId and
             bilElemDetVar.data_cancellazione is null and bilElemDetVar.validita_fine is null and
             bilElemDetVar.periodo_id=periodoCompId and
			 bilElemDetVar.elem_det_importo<0 AND
  	    	 bilElemDetVar.elem_det_tipo_id=bilElemDetVarTipo.elem_det_tipo_id and
	         bilElemDetVarTipo.elem_det_tipo_code=STA_IMP and
    	     bilElemDetVar.variazione_stato_id=statoVar.variazione_stato_id and
	         statoVar.data_cancellazione is null and statoVar.validita_fine is null and
    	     tipoStatoVar.variazione_stato_tipo_id=statoVar.variazione_stato_tipo_id and
--  	         tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_B,STATO_VAR_P) and --1109015 Sofia aggiunto STATO_VAR_B
--  	         tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_P) and -- 26072016 Sofia JIRA-SIAC-3887
  	         tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_P,STATO_VAR_B) and -- 14.102016 Sofia JIRA-SIAC-4099 riaggiunto B
        	 var.variazione_id=statoVar.variazione_id and
             var.data_cancellazione is null and var.validita_fine is null and
	         var.bil_id=bilancioId and
             bilElemDetVarComp.elem_det_var_id = bilElemDetVar.elem_det_var_id
             and bilElemDetVarComp.elem_det_comp_id = bilElemDetComp.elem_det_comp_id
			 and bilElemDetVarComp.data_cancellazione is null and bilElemDetVarComp.validita_fine is null  
             and bilElemDetComp.data_cancellazione is null and bilElemDetComp.validita_fine is null  
			 and bilElemDetComp.elem_det_comp_tipo_id =  bilElemDetCompTipo.elem_det_comp_tipo_id
			 and bilElemDetCompTipo.elem_det_comp_tipo_id = idcomp_in; --adeguamento

      if anno_comp_in=annoBilancio then
        strMessaggio:='Lettura stanziamenti di gestione cassa per elem_id='||bilElemId||' anno_comp_in='||anno_comp_in||'.';
/* SIAC-7349 la cassa non ci serve?
        select importiGest.elem_det_importo into strict stanziamentoCassa
		from siac_t_bil_elem_det importiGest, siac_d_bil_elem_det_tipo tipoImp
	    where importiGest.elem_id=bilElemId AND
       		  importiGest.data_cancellazione is null and importiGest.validita_fine is null and
	   		  tipoImp.elem_det_tipo_id=importiGest.elem_det_tipo_id and
	          tipoImp.elem_det_tipo_code=STA_IMP_SCA and
	    	  importiGest.periodo_id=periodoCompId;
*/
         --- calcolo dei 'delta-gestione', variazioni agli importi di cassa del CAP-UG in stato
 	     --- diverso da BOZZA,DEFINTIVO,ANNULLATO
       	strMessaggio:='Lettura variazioni delta-meno-gest cassa per elem_id='||bilElemId||' anno_comp_in='||
                           anno_comp_in||'.';
	             --- 31.03.2016 Sofia SIAC-3304 aggiunto stato P
/* SIAC-7349 la cassa non ci serve?
        select coalesce(sum(abs(bilElemDetVar.elem_det_importo)),0) into strict deltaMenoGestCassa
        from siac_t_variazione var,
        	 siac_r_variazione_stato statoVar, siac_d_variazione_stato tipoStatoVar,
	         siac_t_bil_elem_det_var bilElemDetVar, siac_d_bil_elem_det_tipo bilElemDetVarTipo
        where bilElemDetVar.elem_id=bilElemId and
              bilElemDetVar.data_cancellazione is null and bilElemDetVar.validita_fine is null and
              bilElemDetVar.periodo_id=periodoCompId and
		      bilElemDetVar.elem_det_importo<0 AND
  	          bilElemDetVar.elem_det_tipo_id=bilElemDetVarTipo.elem_det_tipo_id and
	          bilElemDetVarTipo.elem_det_tipo_code=STA_IMP_SCA and
    	      bilElemDetVar.variazione_stato_id=statoVar.variazione_stato_id and
	          statoVar.data_cancellazione is null and statoVar.validita_fine is null and
    	      tipoStatoVar.variazione_stato_tipo_id=statoVar.variazione_stato_tipo_id and
--   	          tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_B,STATO_VAR_P) and -- 1109015 Sofia aggiunto STATO_VAR_B
--   	          tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_P) and -- 26072016 Sofia JIRA-SIAC-3887
   	          tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_P,STATO_VAR_B) and -- 14102016 Sofia JIRA-SIAC-4099
       	      var.variazione_id=statoVar.variazione_id and
              var.data_cancellazione is null and var.validita_fine is null and
	          var.bil_id=bilancioId;
*/
        end if;
        -- importo massimo impegnabile
        stanzMassimoImpegnabile:=null;
        strMessaggio:='Lettura massimo impegnabile per elem_id='||bilElemId||
							' anno_comp_in='||anno_comp_in||
							' idcomp_in='||idcomp_in|| '.';

		select importiGest.elem_det_importo into stanzMassimoImpegnabile
		from siac_t_bil_elem_det importiGest, siac_d_bil_elem_det_tipo tipoImp
     	where importiGest.elem_id=bilElemId AND
              importiGest.data_cancellazione is null and importiGest.validita_fine is null and
	   	 	  tipoImp.elem_det_tipo_id=importiGest.elem_det_tipo_id and
		      tipoImp.elem_det_tipo_code=STA_IMP_MI and
	    	  importiGest.periodo_id=periodoCompId;

 end if;

 strMessaggio:='Stanziamento effettivo elem_id='||bilElemId ||
						' idcomp_in='||idcomp_in|| '.';
 case
  ---    ANNASILVIA CMTO FORZATURA 13-01-2017 aggiunta condizione  and ente_prop_in <> 3
  ---    10/02/2017 - richiesta REGP (DI MICHELE) - eliminare controllo tra previsione e gestione
  ---    in esercizio provvisorio
--   when bilFaseOperativa=FASE_BIL_PROV and ente_prop_in = 0 then
-- 01.06.2017 Sofia HD-INC000001805128 CmTo richiede di attivare il controllo
   when bilFaseOperativa=FASE_BIL_PROV and enteProprietarioId = 3 then

--   		if stanziamentoPrev>stanziamento then
--      26072016 Sofia JIRA-SIAC-3887
   		if stanziamentoPrev>stanziamento-deltaMenoGest then

             /*  04.07.2016 Sofia ID-INC000001114035 non considerare le variazioni di gestione
                 nello stanziamento non sono considerate le variazioni di gestione,
                 se poi lo stanziamento effettivo e quello di gestione allora
                 consideriamo i deltamenoGest per abbatterlo ulteriormente */
        	 --stanziamentoEff:=stanziamento;
             -- stanziamentoEff abbattutto dai 'delta-gestione'
	         stanziamentoEff:=stanziamento-deltaMenoGest;
        else stanziamentoEff:=stanziamentoPrev;
        end if;

        if anno_comp_in=annoBilancio then
 --       if stanziamentoPrevCassa>stanziamentoCassa then
        --      26072016 Sofia JIRA-SIAC-3887
         if stanziamentoPrevCassa>stanziamentoCassa-deltaMenoGestCassa then
           /*  04.07.2016 Sofia ID-INC000001114035 non considerare le variazioni di gestione
               nello stanziamento non sono considerate le variazioni di gestione,
               se poi lo stanziamento effettivo e quello di gestione allora
               consideriamo i deltamenoGest per abbatterlo ulteriormente */
        	/*  stanziamentoEffCassa:=stanziamentoCassa; */
              stanziamentoEffCassa:=stanziamentoCassa-deltaMenoGestCassa;
         else stanziamentoEffCassa:=stanziamentoPrevCassa;
         end if;
        end if;
   ELSE
        /*  04.07.2016 Sofia ID-INC000001114035
   		stanziamentoEff:=stanziamento; */
        stanziamentoEff:=stanziamento-deltaMenoGest;
        if anno_comp_in=annoBilancio then
          /*  04.07.2016 Sofia ID-INC000001114035
          stanziamentoEffCassa:=stanziamentoCassa; */
          stanziamentoEffCassa:=stanziamentoCassa-deltaMenoGestCassa;
        end if;
 end case;
  /*  04.07.2016 Sofia ID-INC000001114035 spostato sopra per considerare i deltaMenoGest
     solo se lo stanziamento effettivo da considerare e quello di gestione
 -- stanziamentoEff abbattutto dai 'delta-gestione'
 stanziamentoEff:=stanziamentoEff-deltaMenoGest;
 if anno_comp_in=annoBilancio then
  stanziamentoEffCassa:=stanziamentoEffCassa-deltaMenoGestCassa;
 end if; */

 strMessaggio:='Stanziamento effettivo elem_id='||bilElemId||
			 			'anno_comp_in='||anno_comp_in||
						' idcomp_in='||idcomp_in|| '.';
 elemId:=bilElemId;
 annoCompetenza:=anno_comp_in;
 stanzEffettivo:=stanziamentoEff;
 if anno_comp_in=annoBilancio then
     stanzEffettivoCassa:=stanziamentoEffCassa;
 end if;
 if stanzMassimoImpegnabile is not null then
 	massimoImpegnabile:=stanzMassimoImpegnabile;
 end if;

 return next;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return;
	when no_data_found then
	    RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return;
        
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_stanz_effettivo_ug_anno_comp (id_in integer, anno_comp_in character varying, idcomp_in integer)
  OWNER TO siac;
--GRANT EXECUTE ON FUNCTION siac.fnc_siac_stanz_effettivo_ug_anno_comp(integer, character varying, integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_stanz_effettivo_ug_anno_comp(integer, character varying, integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_stanz_effettivo_ug_anno_comp(integer, character varying, integer) TO siac;
--end fnc_siac_stanz_effettivo_ug_anno_comp


--Start fnc_siac_stanz_effettivo_up_anno_comp
CREATE OR REPLACE FUNCTION siac.fnc_siac_stanz_effettivo_up_anno_comp (
  id_in integer,
  id_comp integer,
  anno_comp_in varchar
  
)
RETURNS TABLE (
  elemid integer,
  annocompetenza varchar,
  stanzeffettivo numeric,
  stanzeffettivocassa numeric,
  massimoimpegnabile numeric
)
LANGUAGE 'plpgsql'
COST 100
VOLATILE
ROWS 1000
AS $BODY$
DECLARE


-- constant
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
NVL_STR     constant varchar:='';
STA_IMP     constant varchar:='STA';
STA_IMP_SCA     constant varchar:='SCA';
STA_IMP_MI     constant varchar:='MI'; -- tipo importo massimo impegnabile

-- fasi di bilancio
FASE_BIL_PREV  constant varchar:='P'; -- previsione
FASE_BIL_PROV  constant varchar:='E'; -- esercizio provvisorio
FASE_BIL_GEST  constant varchar:='G'; -- esercizio gestione
FASE_BIL_CONS  constant varchar:='O'; -- esercizio consuntivo
FASE_BIL_CHIU  constant varchar:='C'; -- esercizio chiuso

-- stati variazioni di importo
STATO_VAR_G    constant varchar:='G'; -- GIUNTA
STATO_VAR_C    constant varchar:='C'; -- CONSIGLIO
STATO_VAR_D    constant varchar:='D'; -- DEFINITIVA
STATO_VAR_B    constant varchar:='B'; -- BOZZA
--- 31.03.2016 Sofia SIAC-3304 aggiunto stato P
STATO_VAR_P    constant varchar:='P'; -- PRE-DEFINITIVO

bilancioId integer:=0;
bilElemId  integer:=0;
bilElemGestId  integer:=0;

strMessaggio varchar(1500):=NVL_STR;

bilFaseOperativa varchar(10):=NVL_STR;
annoBilancio varchar(10):=NVL_STR;

stanziamentoPrev numeric:=0;
stanziamentoPrevCassa numeric:=0;
stanziamento numeric:=0;
stanziamentoEff numeric:=0;
deltaMenoPrev numeric:=0;
varImpGestione numeric:=0;
deltaMenoGest numeric:=0;
deltaMenoPrevCassa numeric:=0;
varImpGestioneCassa numeric:=0;
deltaMenoGestCassa numeric:=0;
stanziamentoEffCassa numeric:=0;
stanziamentoCassa numeric:=0;
stanzMassimoImpegnabile numeric:=null;
enteProprietarioId INTEGER:=0;
periodoId integer:=0;
periodoCompId integer:=0;

BEGIN

     annoCompetenza:=null;
     stanzEffettivo:=null;
     stanzEffettivoCassa:=null;
     elemId:=null;
     massimoImpegnabile:=null;

      -- controllo parametri
      -- anno_comp_in obbligatorio
      -- se id_in non serve altro
      -- diversamente deve essere passato
      -- ente_prop_id, anno_in o bil_id_in
      --  e  la chiave logica del capitolo
      -- ele_code_in,ele_code2_in,ele_code3_in

     strMessaggio:='Calcolo stanziamento effettivo.Controllo parametri.';

     if anno_comp_in is null or anno_comp_in=NVL_STR then
         	RAISE EXCEPTION '% Anno di competenza mancante.',strMessaggio;
     end if;
 
     if id_comp is null or id_comp=0 then
         	RAISE EXCEPTION '% Id componente mancante.',strMessaggio;
     end if;

     if id_in is null or id_in=0 then

          if  ( (bil_id_in is null or bil_id_in=0) and (ente_prop_in is null or ente_prop_in=0)) then
         	     RAISE EXCEPTION '% Id ente proprietario mancante.',strMessaggio;
          end if;

          if ele_code_in is null or ele_code_in=NVL_STR or ele_code2_in is null or ele_code2_in=NVL_STR or ele_code3_in is null or ele_code3_in=NVL_STR then
         	     RAISE EXCEPTION '% Chiave logica elem.Bil. mancante.',strMessaggio;
          end if;

          if ( (bil_id_in is null or bil_id_in=0 ) and (anno_in is null or anno_in=NVL_STR)) then
         	     RAISE EXCEPTION '% Anno bilancio mancante.',strMessaggio;
          end if;
     end if;


     if id_in is not null and id_in!=0 then

          strMessaggio:='Lettura identificativo bilancioId, annoBilancio e enteProprietarioId da elemento di bilancio elem_id='||id_in||'.';
         	select bil.bil_id, per.anno, bilElem.ente_proprietario_id
                    into strict bilancioId, annoBilancio, enteProprietarioId
             from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo tipoBilElem,
                  siac_t_bil bil, siac_t_periodo per
             where bilElem.elem_id=id_in
             and   bilElem.data_cancellazione is null
             and   bilElem.validita_fine is null
             and   tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
             and   tipoBilElem.elem_tipo_code = TIPO_CAP_UP
             and   bil.bil_id=bilElem.bil_id
             and   per.periodo_id=bil.periodo_id;
             bilElemId:=id_in;
     else
          if bil_id_in is not null and bil_id_in!=0  then
      	     bilancioId:=bil_id_in;
          end if;
     end if;

     if bilancioId is not null and bilancioId!=0 then
          strMessaggio:='Lettura identificativo annoBilancio enteProprietarioId periodoId elemento di bilancio elem_id='||id_in
                   ||' per bilancioId='||bilancioId||'.';

          select per.anno,  bil.ente_proprietario_id, per.periodo_id into strict annoBilancio, enteProprietarioId, periodoId
          from siac_t_bil bil, siac_t_periodo per
          where bil.bil_id=bilancioId 
                and per.periodo_id=bil.periodo_id;
     end if;

     if bilElemId is null or bilElemId=0 then
          strMessaggio:='Lettura identificativo elemento di bilancio '||ele_code_in||'/'||ele_code2_in||'/'||ele_code3_in||'.';
          if bilancioId is not null and bilancioId!=0 then
      	     strMessaggio:='Lettura identificativo elemento di bilancio '||ele_code_in||'/'||ele_code2_in||'/'||ele_code3_in
                         ||'  per bilancioId='||bilancioId||' .';
               select bilElem.elem_id into strict bilElemId
               from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo tipoBilElem
               where bilElem.bil_id=bilancioId
               and   bilElem.elem_code=ele_code_in
               and   bilElem.elem_code2=ele_code2_in
               and   bilElem.elem_code3=ele_code3_in
               and   bilElem.data_cancellazione is null
               and   bilElem.validita_fine is null
               and   tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
               and   tipoBilElem.elem_tipo_code = TIPO_CAP_UP;
          else
     	     strMessaggio:='Lettura identificativo elemento di bilancio '||ele_code_in||'/'||ele_code2_in||'/'||ele_code3_in
                         ||'  bilancioId periodoId per annoBilancioIn='||anno_in||' enteProprietarioIn'||ente_prop_in||' .';
               select bilElem.elem_id, bilelem.bil_id, per.periodo_id into strict bilElemId, bilancioId, periodoId
               from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo tipoBilElem,
               siac_t_bil bil, siac_t_periodo per, siac_d_periodo_tipo tipoPer
               where per.anno=anno_in
               and   per.ente_proprietario_id=ente_prop_in
               and   tipoPer.periodo_tipo_id=per.periodo_tipo_id
               and   tipoPer.periodo_tipo_code='SY'
               and   bil.periodo_id=per.periodo_id
               and   bilElem.bil_id=bil.bil_id
               and   bilElem.elem_code=ele_code_in
               and   bilElem.elem_code2=ele_code2_in
               and   bilElem.elem_code3=ele_code3_in
               and   bilElem.data_cancellazione is null
               and   bilElem.validita_fine is null
               and   tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
               and   tipoBilElem.elem_tipo_code = TIPO_CAP_UP;

               annoBilancio:=anno_in;
               enteProprietarioId:=ente_prop_in;

          end if;    
     end if;

     strMessaggio:='Lettura fase di bilancio corrente per  anno bilancio='||annoBilancio||' bilancioId='||bilancioId||'.';
     select faseop.fase_operativa_code into strict bilFaseOperativa
     from siac_d_fase_operativa faseOp, siac_r_bil_fase_operativa bilFaseOp
     where bilfaseop.bil_id=bilancioId 
          and bilfaseop.data_cancellazione is null
          and bilfaseop.validita_fine is null
          and faseOp.fase_operativa_id = bilfaseop.fase_operativa_id
          and faseOp.data_cancellazione is null
          and faseOp.validita_fine is null;


     if bilFaseOperativa not in ( FASE_BIL_PREV, FASE_BIL_PROV, FASE_BIL_GEST,FASE_BIL_CONS,FASE_BIL_CHIU) then
        	RAISE EXCEPTION '% Fase non ammessa per il calcolo richiesto.',strMessaggio;
     end if;

     if anno_comp_in!=annoBilancio then
      	strMessaggio:='Lettura periodoCompId per anno_comp_in='||anno_comp_in||' elem_id='||bilElemId||'.';
          select  per.periodo_id into strict periodoCompId
          from siac_t_periodo per, siac_d_periodo_tipo perTipo
          where per.anno=anno_comp_in
          and   per.ente_proprietario_id=enteProprietarioId
          and   perTipo.periodo_tipo_id=per.periodo_tipo_id
          and   perTipo.periodo_tipo_code='SY';
     else
          periodoCompId:=periodoId;
     end if;

     if bilFaseOperativa = FASE_BIL_PROV then
          strMessaggio:='Lettura elemento di bilancio equivalente di gestione per elem_id='||bilElemId||'.';
          select bilElemGest.elem_id into  bilElemGestId
          from siac_t_bil_elem bilElemPrev, siac_d_bil_elem_tipo tipoGest,
               siac_t_bil_elem bilElemGest
          where bilElemPrev.elem_id=bilElemId
          and bilElemGest.elem_code=bilElemPrev.elem_code
          and bilElemGest.elem_code2=bilElemPrev.elem_code2 
          and bilElemGest.elem_code3=bilElemPrev.elem_code3
          and bilElemGest.ente_proprietario_id=bilElemPrev.ente_proprietario_id
          and bilElemGest.bil_id=bilElemPrev.bil_id
          and bilElemGest.data_cancellazione is null 
          and bilElemGest.validita_fine is null
          and tipoGest.elem_tipo_id=bilElemGest.elem_tipo_id
          and tipoGest.elem_tipo_code=TIPO_CAP_UG;

          if NOT FOUND then
          	bilElemGestId:=0;
          end if;
     end if;

     strMessaggio:='Lettura stanziamenti di previsione per elem_id='||bilElemId||' anno_comp_in='||anno_comp_in||'.';

     /*SIAC - 7349*/
     select comp.elem_det_importo  into strict stanziamentoPrev
     from siac_t_bil_elem_det importiPrev,
     	siac_d_bil_elem_det_tipo tipoImpPrev,
     	siac_t_bil_elem_det_comp comp,
     	siac_d_bil_elem_det_comp_tipo comptipo
     where importiPrev.elem_id=bilElemId
     	and comp.elem_det_id = importiPrev.elem_det_id
          and importiPrev.data_cancellazione is null 
          and importiPrev.validita_fine is null
     	and tipoImpPrev.elem_det_tipo_id=importiPrev.elem_det_tipo_id 
          and tipoImpPrev.elem_det_tipo_code=STA_IMP
     	and comp.data_cancellazione is null and comp.validita_fine is null
          and importiPrev.periodo_id=periodoCompId
     	and comptipo.data_cancellazione is null 
          and comptipo.validita_fine is null  
     	and comp.elem_det_comp_tipo_id = comptipo.elem_det_comp_tipo_id
     	and comptipo.elem_det_comp_tipo_id = id_comp
	-- SIAC-7349 Aggiunto non exists per escludere le componenti che sono collegate come "nuovi dettagli" tramite variazione in stato diverso da definitivo
		and not (exists (
			select siactbilel4_.elem_det_var_comp_id
			from 	siac_t_bil_elem_det_var_comp siactbilel4_
					cross join siac_t_bil_elem_det_var siactbilel5_
					cross join siac_r_variazione_stato siacrvaria6_
					cross join siac_d_variazione_stato siacdvaria7_
			where 	siactbilel4_.elem_det_var_id=siactbilel5_.elem_det_var_id
				and siactbilel5_.variazione_stato_id=siacrvaria6_.variazione_stato_id
				and siacrvaria6_.variazione_stato_tipo_id=siacdvaria7_.variazione_stato_tipo_id
				and siactbilel4_.elem_det_comp_id=comp.elem_det_comp_id
				and siactbilel4_.elem_det_flag='N'
				and siacdvaria7_.variazione_stato_tipo_code<>'D'
				and siactbilel4_.data_cancellazione is null
				and siactbilel5_.data_cancellazione is null
				and siacrvaria6_.data_cancellazione is null
			));

     if anno_comp_in=annoBilancio then
           strMessaggio:='Lettura stanziamenti di previsione cassa per elem_id='||bilElemId||' anno_comp_in='||anno_comp_in||'.';
           select importiprev.elem_det_importo into strict stanziamentoPrevCassa
           from siac_t_bil_elem_det importiPrev, siac_d_bil_elem_det_tipo tipoImpPrev
           where importiPrev.elem_id=bilElemId
      	     and importiPrev.data_cancellazione is null 
               and importiPrev.validita_fine is null
        	   	and tipoImpPrev.elem_det_tipo_id=importiPrev.elem_det_tipo_id
     	     and tipoImpPrev.elem_det_tipo_code=STA_IMP_SCA
     	     and importiPrev.periodo_id=periodoCompId;
     end if;


  
     if bilFaseOperativa in (FASE_BIL_PROV,FASE_BIL_PREV) then --1
          --- calcolo dei 'delta-previsione', variazioni agli importi del CAP-UP in stato
     	--- diverso da BOZZA,DEFINTIVO,ANNULLATO
        	strMessaggio:='Lettura variazioni delta-meno-prev per elem_id='||bilElemId||' anno_comp_in='||
                            anno_comp_in||'.';
     
     	/*SIAC - 7349*/
         /*ERRORE RISCONTRATO NEL TEST FASE DI PREV - mr*/
	     /*select   coalesce(sum(abs(bilElemDetVarComp.elem_det_importo)),0) into strict deltaMenoPrev
          from siac_t_variazione var,
              	siac_r_variazione_stato statoVar,
	     	siac_d_variazione_stato tipoStatoVar,
               siac_t_bil_elem_det_var bilElemDetVar,
	     	siac_d_bil_elem_det_tipo bilElemDetVarTipo,
               siac_t_bil_elem_det_var_comp bilElemDetVarComp,
               siac_d_bil_elem_det_comp_tipo bilElemDetCompTipo, 
               siac_t_bil_elem_det_comp bilElemDetComp
              where bilElemDetVar.elem_id=bilElemId
             	     and bilElemDetVar.data_cancellazione is null 
                    and bilElemDetVar.validita_fine is null
                    and bilElemDetVar.periodo_id=periodoCompId
	     	     and bilElemDetVar.elem_det_importo<0
  	               and bilElemDetVar.elem_det_tipo_id=bilElemDetVarTipo.elem_det_tipo_id
                    and bilElemDetVarTipo.elem_det_tipo_code=STA_IMP
                    and bilElemDetVar.variazione_stato_id=statoVar.variazione_stato_id
                    and statoVar.data_cancellazione is null 
                    and statoVar.validita_fine is null
                    and tipoStatoVar.variazione_stato_tipo_id=statoVar.variazione_stato_tipo_id
                    and tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_B,STATO_VAR_P) -- 1109015 Sofia aggiunto STATO_VAR_B
	     		and tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_P) -- Sofia 26072016 JIRA-SIAC-3887
                    and var.variazione_id=statoVar.variazione_id
                    and var.data_cancellazione is null and var.validita_fine is null
                    and var.bil_id= bilancioId
	     		and bilElemDetVarComp.data_cancellazione is null and bilElemDetVarComp.validita_fine is null
	     		and bilElemDetComp.data_cancellazione is null and bilElemDetComp.validita_fine is null
                    and bilElemDetVarComp.elem_det_var_id = bilElemDetVar.elem_det_var_id
                    and bilElemDetComp.elem_det_comp_tipo_id =  bilElemDetCompTipo.elem_det_comp_tipo_id
	     		and bilElemDetCompTipo.elem_det_comp_tipo_id = id_comp; --adeguamento*/
          
          select  coalesce(sum(abs(bilElemDetVarComp.elem_det_importo)),0) into strict deltaMenoPrev
			from siac_t_variazione var,
			siac_r_variazione_stato statoVar,
			siac_d_variazione_stato tipoStatoVar,
			siac_t_bil_elem_det_var bilElemDetVar,
			siac_d_bil_elem_det_tipo bilElemDetVarTipo,
			siac_t_bil_elem_det_var_comp bilElemDetVarComp,
			siac_d_bil_elem_det_comp_tipo bilElemDetCompTipo --adeguamento 
			where bilElemDetVar.elem_id=bilElemId and
			bilElemDetVar.data_cancellazione is null and bilElemDetVar.validita_fine is null and
			bilElemDetVar.periodo_id=periodoCompId and
			bilElemDetVar.elem_det_importo<0 AND
			bilElemDetVar.elem_det_tipo_id=bilElemDetVarTipo.elem_det_tipo_id and
			bilElemDetVarTipo.elem_det_tipo_code=STA_IMP and
			bilElemDetVar.variazione_stato_id=statoVar.variazione_stato_id and
			statoVar.data_cancellazione is null and statoVar.validita_fine is null and
			tipoStatoVar.variazione_stato_tipo_id=statoVar.variazione_stato_tipo_id and
			-- tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_B,STATO_VAR_P) and -- 1109015 Sofia aggiunto STATO_VAR_B
			tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_P) and -- Sofia 26072016 JIRA-SIAC-3887
			var.variazione_id=statoVar.variazione_id and
			var.data_cancellazione is null and var.validita_fine is null and
			var.bil_id= bilancioId and
			bilElemDetVarComp.data_cancellazione is null and bilElemDetVarComp.validita_fine is null and
			bilElemDetVarComp.elem_det_var_id = bilElemDetVar.elem_det_var_id				
			and bilElemDetCompTipo.elem_det_comp_tipo_id = id_comp;                  

          if  bilFaseOperativa =FASE_BIL_PROV and bilElemGestId!=0 then --2
          --- calcolo variazioni applicate alla gestione, variazioni agli importi CAP-UG
               strMessaggio:='Lettura variazioni di gestione per elem_id='||bilElemGestId||' anno_comp_in='||
                       anno_comp_in||'.';
	
	          select coalesce(sum(bilElemDetVarComp.elem_det_importo),0) into strict varImpGestione
                  from siac_t_variazione var,
                       siac_r_variazione_stato statoVar,
                       siac_d_variazione_stato tipoStatoVar,
                       siac_t_bil_elem_det_var bilElemDetVar,
                       siac_d_bil_elem_det_tipo bilElemDetVarTipo,
                       siac_t_bil_elem_det_var_comp bilElemDetVarComp,
                       siac_d_bil_elem_det_comp_tipo bilElemDetCompTipo, --adeguamento
                       siac_t_bil_elem_det_comp bilElemDetComp
                     -- where bilElemDetVar.elem_id=bilElemId --SIAC-7349 Fix TC su calcolo disponibilita' variare - GS - 10/07/2020
                    where bilElemDetVar.elem_id=bilElemGestId --SIAC-7349 Fix TC su calcolo disponibilita' variare - GS - 10/07/2020
                    and bilElemDetVar.data_cancellazione is null 
                    and bilElemDetVar.validita_fine is null
                    and bilElemDetVar.periodo_id=periodoCompId
  	               and bilElemDetVar.elem_det_tipo_id=bilElemDetVarTipo.elem_det_tipo_id
                    and bilElemDetVarTipo.elem_det_tipo_code=STA_IMP
                    and bilElemDetVar.variazione_stato_id=statoVar.variazione_stato_id
                    and statoVar.data_cancellazione is null and statoVar.validita_fine is null
                    and tipoStatoVar.variazione_stato_tipo_id=statoVar.variazione_stato_tipo_id
                    and tipoStatoVar.variazione_stato_tipo_code=STATO_VAR_D
                    and var.variazione_id=statoVar.variazione_id
                    and var.data_cancellazione is null 
                    and var.validita_fine is null
                    and var.bil_id=bilancioId
                    and bilElemDetVarComp.elem_det_var_id = bilElemDetVar.elem_det_var_id
                    and bilElemDetVarComp.elem_det_comp_id = bilElemDetComp.elem_det_comp_id
	          	and bilElemDetComp.elem_det_comp_tipo_id =  bilElemDetCompTipo.elem_det_comp_tipo_id
	          	and bilElemDetCompTipo.elem_det_comp_tipo_id = id_comp --adeguamento
	          	and bilElemDetVarComp.data_cancellazione is null 
                    and bilElemDetVarComp.validita_fine is null 
                    and bilElemDetComp.data_cancellazione is null 
                    and bilElemDetComp.validita_fine is null;


          end if; --2
     end if; --1

     if bilFaseOperativa in ( FASE_BIL_PROV) and bilElemGestId!=0 then

          strMessaggio:='Lettura stanziamenti di gestione per elem_id='||bilElemGestId||' anno_comp_in='||anno_comp_in||'.';
     	--SIAC-7349
     	select comp.elem_det_importo	into strict stanziamento
     	from siac_t_bil_elem_det importiGest,
       	siac_d_bil_elem_det_tipo tipoImp,
          siac_t_bil_elem_det_comp comp,
		siac_d_bil_elem_det_comp_tipo comptipo
		-- where importiGest.elem_id=bilElemId --SIAC-7349 Fix TC su calcolo disponibilita' variare - GS - 10/07/2020
        where importiGest.elem_id=bilElemGestId --SIAC-7349 Fix TC su calcolo disponibilita' variare - GS - 10/07/2020    	
       	and importiGest.data_cancellazione is null 
          and importiGest.validita_fine is null
    	     and tipoImp.elem_det_tipo_id=importiGest.elem_det_tipo_id
          and tipoImp.elem_det_tipo_code=STA_IMP
    	     and importiGest.periodo_id=periodoCompId
          and comp.elem_det_id = importiGest.elem_det_id
	     and comp.elem_det_comp_tipo_id = comptipo.elem_det_comp_tipo_id
	     and comp.data_cancellazione is null 
          and comp.validita_fine is null
          and comptipo.data_cancellazione is null 
          and comptipo.validita_fine is null
	     and comptipo.elem_det_comp_tipo_id = id_comp
		-- SIAC-7349 Aggiunto non exists per escludere le componenti che sono collegate come "nuovi dettagli" tramite variazione in stato diverso da definitivo
		and not (exists (
			select siactbilel4_.elem_det_var_comp_id
			from 	siac_t_bil_elem_det_var_comp siactbilel4_
					cross join siac_t_bil_elem_det_var siactbilel5_
					cross join siac_r_variazione_stato siacrvaria6_
					cross join siac_d_variazione_stato siacdvaria7_
			where 	siactbilel4_.elem_det_var_id=siactbilel5_.elem_det_var_id
				and siactbilel5_.variazione_stato_id=siacrvaria6_.variazione_stato_id
				and siacrvaria6_.variazione_stato_tipo_id=siacdvaria7_.variazione_stato_tipo_id
				and siactbilel4_.elem_det_comp_id=comp.elem_det_comp_id
				and siactbilel4_.elem_det_flag='N'
				and siacdvaria7_.variazione_stato_tipo_code<>'D'
				and siactbilel4_.data_cancellazione is null
				and siactbilel5_.data_cancellazione is null
				and siacrvaria6_.data_cancellazione is null
			));	     
	     
	     
	     
          --- calcolo dei 'delta-gestione', variazioni agli importi del CAP-UG in stato
          --- diverso da BOZZA,DEFINTIVO,ANNULLATO
          strMessaggio:='Lettura variazioni delta-meno-gest per elem_id='||bilElemGestId||' anno_comp_in='||
                           anno_comp_in||'.';
		
     	--SIAC-7349
     	select coalesce(sum(abs(bilElemDetVarComp.elem_det_importo)),0) into strict deltaMenoGest
          from siac_t_variazione var,
          siac_r_variazione_stato statoVar,
          siac_d_variazione_stato tipoStatoVar,
	     siac_t_bil_elem_det_var bilElemDetVar,
          siac_d_bil_elem_det_tipo bilElemDetVarTipo,
          siac_t_bil_elem_det_var_comp bilElemDetVarComp,
          siac_d_bil_elem_det_comp_tipo bilElemDetCompTipo, --adeguamento
          siac_t_bil_elem_det_comp bilElemDetComp
     	  -- where bilElemDetVar.elem_id=bilElemId --SIAC-7349 Fix TC su calcolo disponibilita' variare - GS - 10/07/2020
          where bilElemDetVar.elem_id=bilElemGestId --SIAC-7349 Fix TC su calcolo disponibilita' variare - GS - 10/07/2020    	
          and bilElemDetVar.data_cancellazione is null 
          and bilElemDetVar.validita_fine is null
          and bilElemDetVar.periodo_id=periodoCompId
		and bilElemDetVar.elem_det_importo<0
  	    	and bilElemDetVar.elem_det_tipo_id=bilElemDetVarTipo.elem_det_tipo_id
	     and bilElemDetVarTipo.elem_det_tipo_code=STA_IMP
    	     and bilElemDetVar.variazione_stato_id=statoVar.variazione_stato_id
	     and statoVar.data_cancellazione is null 
          and statoVar.validita_fine is null
    	     and tipoStatoVar.variazione_stato_tipo_id=statoVar.variazione_stato_tipo_id
       	--and tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_B,STATO_VAR_P) and --1109015 Sofia aggiunto STATO_VAR_B
      	--and tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_P) and -- 26072016 Sofia JIRA-SIAC-3887
       	and tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_P,STATO_VAR_B) -- 14.102016 Sofia JIRA-SIAC-4099 riaggiunto B
          and var.variazione_id=statoVar.variazione_id
          and var.data_cancellazione is null and var.validita_fine is null
     	and var.bil_id=bilancioId
          and bilElemDetVarComp.elem_det_var_id = bilElemDetVar.elem_det_var_id
          and bilElemDetVarComp.elem_det_comp_id = bilElemDetComp.elem_det_comp_id
     	and bilElemDetVarComp.data_cancellazione is null 
          and bilElemDetVarComp.validita_fine is null  
          and bilElemDetComp.data_cancellazione is null 
          and bilElemDetComp.validita_fine is null  
     	and bilElemDetComp.elem_det_comp_tipo_id =  bilElemDetCompTipo.elem_det_comp_tipo_id
     	and bilElemDetCompTipo.elem_det_comp_tipo_id = id_comp; --adeguamento

     end if;


     stanziamentoPrev:= stanziamentoPrev-deltaMenoPrev;




     strMessaggio:='Stanziamento effettivo elem_id='||bilElemId||'.';
     case
          when bilFaseOperativa=FASE_BIL_PROV then
 --  		
   		     if stanziamentoPrev>stanziamento-deltaMenoGest then
                    stanziamentoEff:=stanziamento-deltaMenoGest;
               else 
                    stanziamentoEff:=stanziamentoPrev;
               end if;

               if anno_comp_in=annoBilancio then
--             if stanziamentoPrevCassa>stanziamentoCassa then 26072016 Sofia JIRA-SIAC-3887
                    if stanziamentoPrevCassa>stanziamentoCassa-deltaMenoGestCassa then
                    /* 04.07.2016 Sofia ID-INC000001114035
        	          stanziamentoEffCassa:=stanziamentoCassa; **/
                         stanziamentoEffCassa:=stanziamentoCassa-deltaMenoGestCassa;
                    else 
                         stanziamentoEffCassa:=stanziamentoPrevCassa;
                    end if;
               end if;
     else

   	     stanziamentoEff:=stanziamentoPrev;
          if anno_comp_in=annoBilancio then
               stanziamentoEffCassa:=stanziamentoPrevCassa;
          end if;

     end case;

  /* 04.07.2016 Sofia ID-INC000001114035
 -- stanziamentoEff abbattutto dai 'delta-gestione'
 stanziamentoEff:=stanziamentoEff-deltaMenoGest;
 if anno_comp_in = annoBilancio then
  stanziamentoEffCassa:=stanziamentoEffCassa-deltaMenoGestCassa;
 end if; */



     elemId:=bilElemId;
     annoCompetenza:=anno_comp_in;
     stanzEffettivo:=stanziamentoEff;
     if anno_comp_in = annoBilancio then
     stanzEffettivoCassa:=stanziamentoEffCassa;
     end if;
     if stanzMassimoImpegnabile is not null then
        	massimoImpegnabile:=stanzMassimoImpegnabile;
     end if;

     return next;


     exception
         when RAISE_EXCEPTION THEN
             RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
             return;
     	when no_data_found then
     		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
             return;
     	when others  THEN
      		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
             return;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_stanz_effettivo_up_anno_comp (id_in integer, id_comp integer, anno_comp_in varchar)
  OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_stanz_effettivo_up_anno_comp (id_in integer, id_comp integer, anno_comp_in varchar) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_stanz_effettivo_up_anno_comp (id_in integer, id_comp integer, anno_comp_in varchar) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_stanz_effettivo_up_anno_comp (id_in integer, id_comp integer, anno_comp_in varchar) TO siac;
--end fnc_siac_stanz_effettivo_up_anno_comp

--Start fnc_siac_disponibilitavariareugcomp_anno1
DROP FUNCTION if exists fnc_siac_disponibilitavariareugcomp_anno1(integer, integer);
CREATE OR REPLACE FUNCTION siac.fnc_siac_disponibilitavariareugcomp_anno1 (
  id_in integer,
  id_comp integer
)
    RETURNS numeric
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE
AS $BODY$
DECLARE

/*Constants*/
CAP_UG_TIPO constant varchar:='CAP-UG';

/*Variables*/
dispVariare   numeric:=0;
annoBilancio  varchar:=null;
tipoCapitolo  varchar:=null;
stanzEffettivoRec record;
diCuiImpegnatoRec record;

strMessaggio varchar(1500):=null;
BEGIN

	strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
	' - Id componente='||id_comp||'.';

	strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
    			  '.Lettura anno di bilancio e tipo elemento bilancio.';

	/*Calcolo annoBilancio e TipoCapitolo*/
	select per.anno, tipo.elem_tipo_code into strict annoBilancio, tipoCapitolo
	from siac_t_bil_elem bilElem,siac_d_bil_elem_tipo tipo,
         siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in
    and   bilElem.data_cancellazione is null and bilElem.validita_fine is null
    and   tipo.elem_tipo_id=bilElem.elem_tipo_id
    and   bil.bil_id=bilElem.bil_id
    and   per.periodo_id=bil.periodo_id;

	case
      when tipoCapitolo=CAP_UG_TIPO then
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UG_TIPO||
					  'Id componente='||id_comp||
    				  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';

		select * into stanzEffettivoRec
		from fnc_siac_stanz_effettivo_ug_anno_comp (id_in, annoBilancio, id_comp);


		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UG_TIPO||
    	              '.Calcolo impegnato per anno='||annobilancio||'.';

		select * into diCuiImpegnatoRec
    	from fnc_siac_dicuiimpegnatoug_comp_anno_comp(id_in, annoBilancio, id_comp, false); --7349 Nel caso di disp var passo il parametro a false per non restituire le modifiche in negativo

        dispVariare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;

    end case;


return dispVariare;

exception
   when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return -1;
   when too_many_rows then
    	RAISE EXCEPTION '% Diversi records presenti in archivio.',strMessaggio;
        return -1;
    when no_data_found then
			RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return -1;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return -1;
END;
$BODY$;


ALTER FUNCTION siac.fnc_siac_disponibilitavariareugcomp_anno1 (id_in integer, id_comp integer)
  OWNER TO siac;
--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariareugcomp_anno1 (id_in integer, id_comp integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariareugcomp_anno1 (id_in integer, id_comp integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariareugcomp_anno1 (id_in integer, id_comp integer) TO siac;
--end fnc_siac_disponibilitavariareugcomp_anno1

--Start fnc_siac_disponibilitavariareugcomp_anno2
DROP FUNCTION if exists fnc_siac_disponibilitavariareugcomp_anno2(integer, integer);
CREATE OR REPLACE FUNCTION siac.fnc_siac_disponibilitavariareugcomp_anno2 (
  id_in integer,
  id_comp integer
)
    RETURNS numeric
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE
AS $BODY$
DECLARE

/*Constants*/
CAP_UG_TIPO constant varchar:='CAP-UG';

/*Variables*/
dispVariare   numeric:=0;
annoBilancio  varchar:=null;
tipoCapitolo  varchar:=null;
stanzEffettivoRec record;
diCuiImpegnatoRec record;

strMessaggio varchar(1500):=null;
BEGIN

	strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
	' - Id componente='||id_comp||'.';

	strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
    			  '.Lettura anno di bilancio e tipo elemento bilancio.';

	/*Calcolo annoBilancio e TipoCapitolo*/
	select per.anno, tipo.elem_tipo_code into strict annoBilancio, tipoCapitolo
	from siac_t_bil_elem bilElem,siac_d_bil_elem_tipo tipo,
         siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in
    and   bilElem.data_cancellazione is null and bilElem.validita_fine is null
    and   tipo.elem_tipo_id=bilElem.elem_tipo_id
    and   bil.bil_id=bilElem.bil_id
    and   per.periodo_id=bil.periodo_id;

	case
      when tipoCapitolo=CAP_UG_TIPO then
	  	/*Incremento anno di bilancio +1 - riferito all'anno 2*/
	  	annoBilancio:=((annoBilancio::INTEGER)+1)::varchar;

		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UG_TIPO||
					  'Id componente='||id_comp||
    				  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
	    select * into stanzEffettivoRec
		from fnc_siac_stanz_effettivo_ug_anno_comp (id_in, annoBilancio, id_comp);

		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UG_TIPO||
    	              '.Calcolo impegnato per anno='||annobilancio||'.';
	    select * into diCuiImpegnatoRec
    	from fnc_siac_dicuiimpegnatoug_comp_anno_comp(id_in, annoBilancio, id_comp, false); --7349 Nel caso di disp var passo il parametro a false per non restituire le modifiche in negativo

        dispVariare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;

    end case;


return dispVariare;

exception
   when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return -1;
   when too_many_rows then
    	RAISE EXCEPTION '% Diversi records presenti in archivio.',strMessaggio;
        return -1;
    when no_data_found then
			RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return -1;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return -1;
END;
$BODY$;


ALTER FUNCTION siac.fnc_siac_disponibilitavariareugcomp_anno2 (id_in integer, id_comp integer)
  OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariareugcomp_anno2 (id_in integer, id_comp integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariareugcomp_anno2 (id_in integer, id_comp integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariareugcomp_anno2 (id_in integer, id_comp integer) TO siac;
--end fnc_siac_disponibilitavariareugcomp_anno2

--Start fnc_siac_disponibilitavariareugcomp_anno3
DROP FUNCTION if exists fnc_siac_disponibilitavariareugcomp_anno3(integer, integer);
CREATE OR REPLACE FUNCTION siac.fnc_siac_disponibilitavariareugcomp_anno3 (
  id_in integer,
  id_comp integer
)
    RETURNS numeric
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE
AS $BODY$
DECLARE


/*Constants*/
CAP_UG_TIPO constant varchar:='CAP-UG';


/*Variables*/
dispVariare   numeric:=0;
annoBilancio  varchar:=null;
tipoCapitolo  varchar:=null;
stanzEffettivoRec record;
diCuiImpegnatoRec record;

strMessaggio varchar(1500):=null;
BEGIN

	strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
	' - Id componente='||id_comp||'.';

	strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
    			  '.Lettura anno di bilancio e tipo elemento bilancio.';

	/*Calcolo annoBilancio e TipoCapitolo*/
	select per.anno, tipo.elem_tipo_code into strict annoBilancio, tipoCapitolo
	from siac_t_bil_elem bilElem,siac_d_bil_elem_tipo tipo,
         siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in
    and   bilElem.data_cancellazione is null and bilElem.validita_fine is null
    and   tipo.elem_tipo_id=bilElem.elem_tipo_id
    and   bil.bil_id=bilElem.bil_id
    and   per.periodo_id=bil.periodo_id;

	case
      when tipoCapitolo=CAP_UG_TIPO then

		  annoBilancio:=((annoBilancio::INTEGER)+2)::varchar; /*Anno + 2*/

		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
    		          'Tipo elemento di bilancio='||CAP_UG_TIPO||
					  'Id componente='||id_comp||
    				  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
		select * into stanzEffettivoRec
		from fnc_siac_stanz_effettivo_ug_anno_comp (id_in, annoBilancio, id_comp);
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
    		          'Tipo elemento di bilancio='||CAP_UG_TIPO||
    	              '.Calcolo impegnato per anno='||annobilancio||'.';
		select * into diCuiImpegnatoRec
    	from fnc_siac_dicuiimpegnatoug_comp_anno_comp(id_in, annoBilancio, id_comp, false); --7349 Nel caso di disp var passo il parametro a false per non restituire le modifiche in negativo
    	dispVariare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;

    end case;


return dispVariare;

exception
   when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return -1;
   when too_many_rows then
    	RAISE EXCEPTION '% Diversi records presenti in archivio.',strMessaggio;
        return -1;
    when no_data_found then
			RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return -1;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return -1;
END;
$BODY$;


ALTER FUNCTION siac.fnc_siac_disponibilitavariareugcomp_anno3 (id_in integer, id_comp integer)
  OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariareugcomp_anno3 (id_in integer, id_comp integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariareugcomp_anno3 (id_in integer, id_comp integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariareugcomp_anno3 (id_in integer, id_comp integer) TO siac;
--end fnc_siac_disponibilitavariareugcomp_anno3


--Start fnc_siac_impegnatodefinitivoug_comp
CREATE OR REPLACE FUNCTION siac.fnc_siac_impegnatodefinitivoug_comp (
  id_in integer,
  idcomp_in integer
)
RETURNS TABLE (
  indiceannualita integer,
  elemdetcompid integer,
  impegnatodefinitivo numeric
) AS
$body$
DECLARE


annoBilancio varchar:=null;
annoEsercizio varchar:=null;
annoMovimento varchar:=null;

elemIdGestEq integer:=0;
bilIdElemGestEq integer:=0;
NVL_STR     constant varchar:='';
faseOpCode varchar(20):=NVL_STR;
bilancioId integer:=0;
elemTipoCode VARCHAR(20):=NVL_STR;
elemCode varchar(50):=NVL_STR;
elemCode2 varchar(50):=NVL_STR;
elemCode3 varchar(50):=NVL_STR;
enteProprietarioId INTEGER:=0;
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
FASE_OP_BIL_PREV constant VARCHAR:='P';
STATO_A     constant varchar:='A';
STATO_P     constant varchar:='P';
TIPO_IMP    constant varchar:='I';
movGestStatoIdAnnullato integer:=0;
movGestStatoIdProvvisorio integer:=0;
movGestTipoId integer:=0;
IMPORTO_ATT constant varchar:='A';
movGestTsDetTipoId integer:=0;
IMPORTO_INIZIALE constant varchar:='I';
movGestTsDetTipoIdIniziale integer:=0;
STATO_MOD_V  constant varchar:='V';
modStatoVId integer:=0;
attoAmmStatoPId integer:=0;
STATO_ATTO_P constant varchar:='PROVVISORIO';
STATO_ATTO_D constant varchar:='DEFINITIVO';
attoAmmStatoDId integer:=0;
importoCurAttuale numeric:=0;
esisteRmovgestidelemid INTEGER:=0;
importoModifDelta  numeric:=0;
importoModifINS numeric:=0; --aggiunta per ECONB

flagNMaggioreNPiu2 integer:=0;
flagDeltaPagamenti integer:=0;
importoImpegnato numeric:=0;
importoPagatoDelta numeric:=0;
ordStatoAId          integer:=null;
ordTsDetTipoAId      integer:=null;
-- stati ordinativi
STATO_ORD_A    constant varchar:='A'; -- ANNULLATO
-- importoAttuale ordinativi
ORD_TS_DET_TIPO_A  constant varchar:='A';

strMessaggio varchar(1500):=null;
BEGIN
-- CALCOLO IMPEGNATO DEFINITIVO 
-- IN TUTTI I CASI:
-- I valori di impegnato dovranno essere calcolati tenendo conto del solo impegnato definitivo.
-- Escluse dal calcolo quindi:
--		- le modifiche di impegno provvisorie (modifiche con provvedimento in stato provvisorio - di qualsiasi segno
-- 		- gli  impegni in stato provvisorio

    strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in|| 'idcomp_in='||idcomp_in|| '.';

	-- Controllo parametri in input
	if id_in is null or id_in=0 then
		 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
	end if;
	if idcomp_in is null or idcomp_in=0 then
		 RAISE EXCEPTION '% Identificativo componente mancante.',strMessaggio;
	end if;
 
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
    			  '.Lettura anno di bilancio del capitolo UG.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;
		  

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
    			  '. Determina capitolo dati del capitolo di gestione in anno esercizio calcolato' || 
				   '. Calcolo bilancioId e elem_tipo_code.';
	 select bilelem.elem_code, bilElem.elem_code2, bilElem.elem_code3, bil.bil_id ,tipoBilElem.elem_tipo_code, per.anno , bil.ente_proprietario_id
	 into strict elemCode, elemCode2, elemCode3, bilancioId, elemTipoCode , annoBilancio,enteProprietarioId
	 from 	siac_t_bil_elem bilElem, 
	 		siac_d_bil_elem_tipo tipoBilElem,
		  	siac_t_bil bil, siac_t_periodo per
	 where bilElem.elem_id=id_in
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
	   and bil.bil_id=bilElem.bil_id
	   and per.periodo_id=bil.periodo_id;

	 if elemTipoCode is not null and elemTipoCode!=NVL_STR and elemTipoCode!=TIPO_CAP_UG then
			RAISE EXCEPTION '% elemTipoCode=%  non ammesso per tipo di calcolo.',strMessaggio,elemTipoCode;
	 end if;

	 strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				   'Calcolo fase operativa per bilancioId='||bilancioId
				   ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select  faseOp.fase_operativa_code into  faseOpCode
	 from siac_r_bil_fase_operativa bilFase, siac_d_fase_operativa faseOp
	 where bilFase.bil_id =bilancioId
	   and bilfase.data_cancellazione is null
	   and bilFase.validita_fine is null
	   and faseOp.fase_operativa_id=bilFase.fase_operativa_id
	   and faseOp.data_cancellazione is null
	 order by bilFase.bil_fase_operativa_id desc;

	 if NOT FOUND THEN
	   RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
	 end if;

	 strMessaggio:='Calcolo impegnato definitivo elem_id='||id_in||'idcomp_in='||idcomp_in
				  ||'. Calcolo movGestTipoId per movgest_tipo_code=IMPEGNO';
	 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
	 from  siac_d_movgest_tipo tipoMovGest
	 where tipoMovGest.ente_proprietario_id=enteProprietarioId
	 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||idcomp_in
				  ||'. Calcolo movGestTsStatoIdAnnullato per movgest_stato_code=ANNULLATO'
				  ||'. Calcolo movGestTsStatoIdProvvisorio per movgest_stato_code=PROVVISORIO';

	 select movGestStato.movgest_stato_id into strict movGestStatoIdAnnullato
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_A;

	 select  movGestStato.movgest_stato_id into strict movGestStatoIdProvvisorio
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_P; 
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||idcomp_in
				  ||'. Calcolo movGestTsDetTipoId per movgest_ts_det_tipo_code=IMPORTO ATTUALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||idcomp_in
				  ||'. Calcolo movGestTsDetTipoIdIniziale per movgest_ts_det_tipo_code=IMPORTO INIZIALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoIdIniziale
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_INIZIALE;
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||idcomp_in
              ||'. Calcolo modStatoVId per mod_stato_code=VALIDO.';
	 select d.mod_stato_id into strict modStatoVId
	 from siac_d_modifica_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.mod_stato_code=STATO_MOD_V;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||idcomp_in
				  ||'. Calcolo attoAmmStatoPId per attoamm_stato_code=PROVVISORIO';
	 select d.attoamm_stato_id into strict attoAmmStatoPId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_P;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||idcomp_in
				  ||'. Calcolo attoAmmStatoDId per attoamm_stato_code=DEFINITIVO';
	 select d.attoamm_stato_id into strict attoAmmStatoDId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_D;

 
--- CICLO SU TUTTE LE POSSIBILI ANNUALITA': N-1, N, N+1, N+2 e >N+2
FOR loop_counter IN  0..6  LOOP
CASE loop_counter

 WHEN 0 THEN
	-- Calcolo Impegnato definitivo - Anno N-1: 
	-- Sommatoria di tutti gli Impegni assunti sul capitolo di previsione id_in su Componente idcomp_in
	-- con anno movimento N-1 e anno esercizio N-1.
	-- I valori di impegnato dovranno essere calcolati tenendo conto del solo impegnato definitivo.
	-- Escluse dal calcolo quindi:
	--		- le modifiche di impegno provvisorie (modifiche con provvedimento in stato provvisorio - di qualsiasi segno)
	-- 		- gli  impegni in stato provvisorio

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
    			  '.Determina anno esercizio ed anno movimento per i quali calcolare.';
    annoEsercizio:=((annoBilancio::INTEGER)-1)::varchar;
    annoMovimento:=((annoBilancio::INTEGER)-1)::varchar;
	flagNMaggioreNPiu2:=0;
	
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				   '. Calcolo bilancioId per annoEsercizio='||annoEsercizio
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
         -- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- verifica esistenza capitolo ed assegna a  elemIdGestEq
	 strMessaggio:='Calcolo impegnato competenza UG.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;


	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else

		strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento|| 
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid 
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno=annoMovimento::integer
			and el.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
			;
		
		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;
		
		if esisteRmovgestidelemid <>0 then
 			impegnatoDefinitivo:=0;
			strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

			importoCurAttuale:=0;			
			select tb.importo into importoCurAttuale
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
				  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  -- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  -- and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno = annoMovimento::integer -- anno dell impegno = annoMovimento
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		

			-- 02.02.2016 Sofia JIRA 2947
			 if importoCurAttuale is null then importoCurAttuale:=0; end if;

			 -- 16.03.2017 Sofia JIRA-SIAC-4614
			-- if importoCurAttuale>0 then
			 if importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

				strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Calcolo totale modifiche su atti provvisori per annoMovimento='||annoMovimento||'.';

				select tb.importo into importoModifDelta
				 from
				 (
					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, 
					 	 siac_t_movgest mov,
					 	 siac_t_movgest_ts ts,
						 siac_r_movgest_ts_stato rstato,
					  	 siac_t_movgest_ts_det tsdet,
						 siac_t_movgest_ts_det_mod moddet,
						 siac_t_modifica mod, 
					 	 siac_r_modifica_stato rmodstato,
						 siac_r_atto_amm_stato attostato, 
					 	 siac_t_atto_amm atto,
						 siac_d_modifica_tipo tipom
					where 
						rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
						and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
						and	  mov.movgest_id=rbil.movgest_id
						and   mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
						and   mov.movgest_anno=annoMovimento::integer -- anno dell impegno = annoMovimento
						and   mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
						and   ts.movgest_id=mov.movgest_id
						and   rstato.movgest_ts_id=ts.movgest_ts_id
						and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- Impegno non ANNULLATO
						-- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
						-- and   rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
					    and   tsdet.movgest_ts_id=ts.movgest_ts_id
						and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
						and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
						and   tipom.mod_tipo_id=mod.mod_tipo_id
						and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
						group by ts.movgest_ts_tipo_id
					  ) tb, siac_d_movgest_ts_tipo tipo
					  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					  order by tipo.movgest_ts_tipo_code desc
					  limit 1;		
					  
 				if importoModifDelta is null then importoModifDelta:=0; end if;
				 /*Aggiunta delle modifiche ECONB*/
				 -- anna_economie inizio
   				select tb.importo into importoModifINS
 				from
 				(
 					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
 			   	 	siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
				    siac_t_movgest_ts_det_mod moddet,
 			   	 	siac_t_modifica mod, siac_r_modifica_stato rmodstato,
				    siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
 			        siac_d_modifica_tipo tipom
				where rbil.elem_id=elemIdGestEq
				and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
				and	  mov.movgest_id=rbil.movgest_id
				and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
 			   	and   mov.movgest_anno=annoMovimento::integer
 			   	and   mov.bil_id=bilancioId
				and   ts.movgest_id=mov.movgest_id
				and   rstato.movgest_ts_id=ts.movgest_ts_id
				and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- impegno non annullato
				and   tsdet.movgest_ts_id=ts.movgest_ts_id
				and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
				and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
				and   moddet.movgest_ts_det_importo<0 -- importo negativo
				and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
				and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
				and   mod.mod_id=rmodstato.mod_id
				and   atto.attoamm_id=mod.attoamm_id
				and   attostato.attoamm_id=atto.attoamm_id
				and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
 			   and   tipom.mod_tipo_id=mod.mod_tipo_id
 			   and   tipom.mod_tipo_code = 'ECONB'
				-- date
				and rbil.data_cancellazione is null
				and rbil.validita_fine is null
				and mov.data_cancellazione is null
				and mov.validita_fine is null
				and ts.data_cancellazione is null
				and ts.validita_fine is null
				and rstato.data_cancellazione is null
				and rstato.validita_fine is null
				and tsdet.data_cancellazione is null
				and tsdet.validita_fine is null
				and moddet.data_cancellazione is null
				and moddet.validita_fine is null
				and mod.data_cancellazione is null
				and mod.validita_fine is null
				and rmodstato.data_cancellazione is null
				and rmodstato.validita_fine is null
				and attostato.data_cancellazione is null
				and attostato.validita_fine is null
				and atto.data_cancellazione is null
				and atto.validita_fine is null
 			   group by ts.movgest_ts_tipo_id
 			 ) tb, siac_d_movgest_ts_tipo tipo
 			 where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
 			 order by tipo.movgest_ts_tipo_code desc
 			 limit 1;
			 
			 if importoModifINS is null then 
			 	importoModifINS = 0;
			 end if;

		
			end if;		
		end if;
	end if;

	
	-- restituisco il record risultato
	
	--FIX Adeguamento 7349 MR
	-- Non dobbiamo piu' restituire al impegnato le modifiche provvisorie e le ECONB
	importoModifDelta:=0;
	importoModifINS:=0;
	--
	
	indiceAnnualita:=loop_counter;
	elemDetCompId:=idcomp_in;
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente per l'anno N-1
	impegnatoDefinitivo:=impegnatoDefinitivo+importoCurAttuale-(importoModifDelta);

	--aggiunta per ECONB
	impegnatoDefinitivo:=impegnatoDefinitivo+abs(importoModifINS);

	return next;

	
	
 WHEN 1,2,3 THEN
 	-- Calcolo Impegnato definitivo - Anno N: 
	-- - Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in e anno movimento N e anno esercizio N

	-- Calcolo Impegnato definitivo - Anno N+1: 
	-- - Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in e anno movimento N+1 e anno esercizio N

	-- Calcolo Impegnato definitivo - Anno N+2: 
	-- - Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in e anno movimento N+2 e anno esercizio N
	
	-- I valori di impegnato dovranno essere calcolati tenendo conto del solo impegnato definitivo.
	-- Escluse dal calcolo quindi:
	--		- le modifiche di impegno provvisorie (modifiche con provvedimento in stato provvisorio - di qualsiasi segno)
	-- 		- gli  impegni in stato provvisorio

	importoCurAttuale:=0;	
	importoModifDelta:=0;
	importoModifINS:=0;

				
	--	ImpegnatoDefinitivo = 	Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in 
	--			e anno movimento [N | N+1 | N+2] e anno esercizio N

	annoEsercizio:=annoBilancio;
	annoMovimento:=((annoBilancio::INTEGER)+loop_counter-1)::varchar;
	flagNMaggioreNPiu2:=0;
	
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				   '.Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId per e per annoEsercizio='||annoEsercizio
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    	-- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo impegnato competenza UG.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else

		strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento|| 
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid 
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno=annoMovimento::integer
			and el.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
			;
		
		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;
		
		if esisteRmovgestidelemid <>0 then
 			impegnatoDefinitivo:=0;
			strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

					
			select tb.importo into importoCurAttuale
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
				  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  -- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  -- and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno = annoMovimento::integer -- anno dell impegno = annoMovimento
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		

			-- 02.02.2016 Sofia JIRA 2947
			 if importoCurAttuale is null then importoCurAttuale:=0; end if;

			 -- 16.03.2017 Sofia JIRA-SIAC-4614
			-- if importoCurAttuale>0 then
			 if importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

				strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Calcolo totale modifiche su atti provvisori per annoMovimento='||annoMovimento||'.';

				select tb.importo into importoModifDelta
				 from
				 (
					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, 
					 	 siac_t_movgest mov,
					 	 siac_t_movgest_ts ts,
						 siac_r_movgest_ts_stato rstato,
					  	 siac_t_movgest_ts_det tsdet,
						 siac_t_movgest_ts_det_mod moddet,
						 siac_t_modifica mod, 
					 	 siac_r_modifica_stato rmodstato,
						 siac_r_atto_amm_stato attostato, 
					 	 siac_t_atto_amm atto,
						 siac_d_modifica_tipo tipom
					where 
						rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
						and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
						and	  mov.movgest_id=rbil.movgest_id
						and   mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
						and   mov.movgest_anno=annoMovimento::integer -- anno dell impegno = annoMovimento
						and   mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
						and   ts.movgest_id=mov.movgest_id
						and   rstato.movgest_ts_id=ts.movgest_ts_id
						and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- Impegno non ANNULLATO
						-- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  		-- and   rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
					    and   tsdet.movgest_ts_id=ts.movgest_ts_id
						and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
						and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
						and   tipom.mod_tipo_id=mod.mod_tipo_id
						and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
						group by ts.movgest_ts_tipo_id
					  ) tb, siac_d_movgest_ts_tipo tipo
					  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					  order by tipo.movgest_ts_tipo_code desc
					  limit 1;		
					  
 				if importoModifDelta is null then importoModifDelta:=0; end if;
				  /*Aggiunta delle modifiche ECONB*/
				 -- anna_economie inizio
   				select tb.importo into importoModifINS
 				from
 				(
 					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
 			   	 	siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
				    siac_t_movgest_ts_det_mod moddet,
 			   	 	siac_t_modifica mod, siac_r_modifica_stato rmodstato,
				    siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
 			        siac_d_modifica_tipo tipom
				where rbil.elem_id=elemIdGestEq
				and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
				and	  mov.movgest_id=rbil.movgest_id
				and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
 			   	and   mov.movgest_anno=annoMovimento::integer
 			   	and   mov.bil_id=bilancioId
				and   ts.movgest_id=mov.movgest_id
				and   rstato.movgest_ts_id=ts.movgest_ts_id
				and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- impegno non annullato
				and   tsdet.movgest_ts_id=ts.movgest_ts_id
				and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
				and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
				and   moddet.movgest_ts_det_importo<0 -- importo negativo
				and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
				and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
				and   mod.mod_id=rmodstato.mod_id
				and   atto.attoamm_id=mod.attoamm_id
				and   attostato.attoamm_id=atto.attoamm_id
				and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
 			   and   tipom.mod_tipo_id=mod.mod_tipo_id
 			   and   tipom.mod_tipo_code = 'ECONB'
				-- date
				and rbil.data_cancellazione is null
				and rbil.validita_fine is null
				and mov.data_cancellazione is null
				and mov.validita_fine is null
				and ts.data_cancellazione is null
				and ts.validita_fine is null
				and rstato.data_cancellazione is null
				and rstato.validita_fine is null
				and tsdet.data_cancellazione is null
				and tsdet.validita_fine is null
				and moddet.data_cancellazione is null
				and moddet.validita_fine is null
				and mod.data_cancellazione is null
				and mod.validita_fine is null
				and rmodstato.data_cancellazione is null
				and rmodstato.validita_fine is null
				and attostato.data_cancellazione is null
				and attostato.validita_fine is null
				and atto.data_cancellazione is null
				and atto.validita_fine is null
 			   group by ts.movgest_ts_tipo_id
 			 ) tb, siac_d_movgest_ts_tipo tipo
 			 where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
 			 order by tipo.movgest_ts_tipo_code desc
 			 limit 1;
			 
			 if importoModifINS is null then 
			 	importoModifINS = 0;
			 end if;

		
			end if;		
		end if;
	end if;
	
	--FIX Adeguamento 7349 MR
	-- Non dobbiamo piu' restituire al impegnato le modifiche provvisorie e le ECONB
	importoModifDelta:=0;
	importoModifINS:=0;
	--
	
	indiceAnnualita:=loop_counter;
	elemDetCompId:=idcomp_in;
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente per l'anno N-1
	impegnatoDefinitivo:=impegnatoDefinitivo+importoCurAttuale-(importoModifDelta);
	--aggiunta per ECONB
	impegnatoDefinitivo:=impegnatoDefinitivo+abs(importoModifINS);
	
	return next;

 	
 WHEN 4 THEN
 	-- Calcolo Impegnato definitivo - Anno > N+2:
 	-- - Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in e anno movimento > N+2 e anno esercizio N
	-- I valori di impegnato dovranno essere calcolati tenendo conto del solo impegnato definitivo.
	-- Escluse dal calcolo quindi:
	--		- le modifiche di impegno provvisorie (modifiche con provvedimento in stato provvisorio - di qualsiasi segno)
	-- 		- gli  impegni in stato provvisorio

	importoCurAttuale:=0;	
	importoModifDelta:=0;
	importoModifINS := 0;
	
				
 	--	ImpegnatoDefinitivo = Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in 
	--	e anno movimento > N+2 e anno esercizio N

	annoEsercizio:=annoBilancio;
	annoMovimento:=((annoBilancio::INTEGER)+2)::varchar;
	flagNMaggioreNPiu2:=1;

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				   '.Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId per annoEsercizio='||annoEsercizio
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    -- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo impegnato competenza UG.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else

		strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento|| 
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid 
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno>annoMovimento::integer 
			and el.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
			;
		
		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;
		
		if esisteRmovgestidelemid <>0 then
 			impegnatoDefinitivo:=0;
			strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

			importoCurAttuale:=0;			
			select tb.importo into importoCurAttuale
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
				  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  -- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  -- and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno > annoMovimento::integer -- anno dell impegno > annoMovimento 
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		

			-- 02.02.2016 Sofia JIRA 2947
			 if importoCurAttuale is null then importoCurAttuale:=0; end if;

			 -- 16.03.2017 Sofia JIRA-SIAC-4614
			-- if importoCurAttuale>0 then
			 if importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

				strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Calcolo totale modifiche su atti provvisori per annoMovimento='||annoMovimento||'.';

				select tb.importo into importoModifDelta
				 from
				 (
					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, 
					 	 siac_t_movgest mov,
					 	 siac_t_movgest_ts ts,
						 siac_r_movgest_ts_stato rstato,
					  	 siac_t_movgest_ts_det tsdet,
						 siac_t_movgest_ts_det_mod moddet,
						 siac_t_modifica mod, 
					 	 siac_r_modifica_stato rmodstato,
						 siac_r_atto_amm_stato attostato, 
					 	 siac_t_atto_amm atto,
						 siac_d_modifica_tipo tipom
					where 
						rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
						and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
						and	  mov.movgest_id=rbil.movgest_id
						and   mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
						and   mov.movgest_anno>annoMovimento::integer -- anno dell impegno = annoMovimento 
						and   mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
						and   ts.movgest_id=mov.movgest_id
						and   rstato.movgest_ts_id=ts.movgest_ts_id
						and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- Impegno non ANNULLATO
						-- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				        -- and   rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
					    and   tsdet.movgest_ts_id=ts.movgest_ts_id
						and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
						and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
						and   tipom.mod_tipo_id=mod.mod_tipo_id
						and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
						group by ts.movgest_ts_tipo_id
					  ) tb, siac_d_movgest_ts_tipo tipo
					  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					  order by tipo.movgest_ts_tipo_code desc
					  limit 1;		
					  
 				if importoModifDelta is null then importoModifDelta:=0; end if;
				  /*Aggiunta delle modifiche ECONB*/
				 -- anna_economie inizio
   				select tb.importo into importoModifINS
 				from
 				(
 					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
 			   	 	siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
				    siac_t_movgest_ts_det_mod moddet,
 			   	 	siac_t_modifica mod, siac_r_modifica_stato rmodstato,
				    siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
 			        siac_d_modifica_tipo tipom
				where rbil.elem_id=elemIdGestEq
				and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
				and	  mov.movgest_id=rbil.movgest_id
				and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
 			   	and   mov.movgest_anno=annoMovimento::integer
 			   	and   mov.bil_id=bilancioId
				and   ts.movgest_id=mov.movgest_id
				and   rstato.movgest_ts_id=ts.movgest_ts_id
				and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- impegno non annullato
				and   tsdet.movgest_ts_id=ts.movgest_ts_id
				and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
				and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
				and   moddet.movgest_ts_det_importo<0 -- importo negativo
				and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
				and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
				and   mod.mod_id=rmodstato.mod_id
				and   atto.attoamm_id=mod.attoamm_id
				and   attostato.attoamm_id=atto.attoamm_id
				and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
 			   and   tipom.mod_tipo_id=mod.mod_tipo_id
 			   and   tipom.mod_tipo_code = 'ECONB'
				-- date
				and rbil.data_cancellazione is null
				and rbil.validita_fine is null
				and mov.data_cancellazione is null
				and mov.validita_fine is null
				and ts.data_cancellazione is null
				and ts.validita_fine is null
				and rstato.data_cancellazione is null
				and rstato.validita_fine is null
				and tsdet.data_cancellazione is null
				and tsdet.validita_fine is null
				and moddet.data_cancellazione is null
				and moddet.validita_fine is null
				and mod.data_cancellazione is null
				and mod.validita_fine is null
				and rmodstato.data_cancellazione is null
				and rmodstato.validita_fine is null
				and attostato.data_cancellazione is null
				and attostato.validita_fine is null
				and atto.data_cancellazione is null
				and atto.validita_fine is null
 			   group by ts.movgest_ts_tipo_id
 			 ) tb, siac_d_movgest_ts_tipo tipo
 			 where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
 			 order by tipo.movgest_ts_tipo_code desc
 			 limit 1;
			 
			 if importoModifINS is null then 
			 	importoModifINS = 0;
			 end if;

		
			end if;		
		end if;
	end if;
	
	--FIX Adeguamento 7349 MR
	-- Non dobbiamo piu' restituire al impegnato le modifiche provvisorie e le ECONB
	importoModifDelta:=0;
	importoModifINS:=0;
	--
	
	
	indiceAnnualita:=loop_counter;
	elemDetCompId:=idcomp_in;
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente per l'anno N-1
	impegnatoDefinitivo:=impegnatoDefinitivo+importoCurAttuale-(importoModifDelta);
	--aggiunta per ECONB
	impegnatoDefinitivo:=impegnatoDefinitivo+abs(importoModifINS);
	return next;

 WHEN 5 THEN
	-- Calcolo Residuo Iniziale: 
	--	 Sommatoria dell'importo iniziale di tutti gli Impegni assunti sul capitolo in questione su idcomp_in
	--	con anno movimento < N e anno esercizio N.

	importoImpegnato:=0;	
	importoPagatoDelta:=0;
	
 
	--		Residuo Iniziale = 
	--	 		Sommatoria dell'importo iniziale di tutti gli Impegni assunti sul capitolo in questione su idcomp_in
	--			con anno movimento < N e anno esercizio N.

	annoEsercizio:=annoBilancio;
	annoMovimento:=annoBilancio;
	flagDeltaPagamenti:=0; -- non e' necessario scomputare il pagato
		
 	

	strMessaggio:='Calcolo residuo iniziale elem_id='||id_in||'idcomp_in='||idcomp_in||
				   '.Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId per annoEsercizio='||annoEsercizio
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    -- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo residuo iniziale.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else

		strMessaggio:='Calcolo residuo iniziale elem_id='||id_in||'idcomp_in='||idcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento||'.'; 

		impegnatoDefinitivo:=0;
		strMessaggio:='Calcolo residuo iniziale elem_id='||id_in||'idcomp_in='||idcomp_in||
			'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
			'. Inizio calcolo totale importo  impegni per annoMovimento='||annoMovimento||'.';


		importoImpegnato:=0;			
		select tb.importo into importoImpegnato
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
				  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  -- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  -- and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno < annoMovimento::integer -- anno dell impegno < annoMovimento 
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoIdIniziale -- considerare l'importo iniziale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		
			-- 02.02.2016 Sofia JIRA 2947
			if importoImpegnato is null then importoImpegnato:=0; end if;

	end if;

	indiceAnnualita:=loop_counter;
	elemDetCompId:=idcomp_in;
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente per l'anno N-1
	if flagDeltaPagamenti != 0 then
		impegnatoDefinitivo:=impegnatoDefinitivo+importoImpegnato-(importoPagatoDelta);
	else 
		impegnatoDefinitivo:=impegnatoDefinitivo+importoImpegnato;
	end if;
	return next;

	

 WHEN 6 THEN
	-- Calcolo Residuo Finale (In presenza della colonna finale e in assenza di qualsiasi colonna):
	--		Sommatoria dell'importo attuale di tutti gli Impegni assunti sul capitolo in questione su idcomp_in 
	--		con anno movimento < N e anno esercizio N.
 
	importoImpegnato:=0;	
	importoPagatoDelta:=0;
	

	--		Residuo Finale = 
	--	 		Sommatoria dell'importo attuale di tutti gli Impegni assunti sul capitolo in questione su idcomp_in
	--			con anno movimento < N e anno esercizio N.

	annoEsercizio:=annoBilancio;
	annoMovimento:=annoBilancio;
	flagDeltaPagamenti:=0; -- non e' necessario scomputare il pagato
		

	strMessaggio:='Calcolo residuo finale elem_id='||id_in||'idcomp_in='||idcomp_in||
				   '.Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId per annoEsercizio='||annoEsercizio
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    -- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo residuo finale.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else

		strMessaggio:='Calcolo residuo finale elem_id='||id_in||'idcomp_in='||idcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento||'.'; 

		impegnatoDefinitivo:=0;
		strMessaggio:='Calcolo residuo finale elem_id='||id_in||'idcomp_in='||idcomp_in||
			'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
			'. Inizio calcolo totale importo  impegni per annoMovimento='||annoMovimento||'.';

		importoImpegnato:=0;			
		select tb.importo into importoImpegnato
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
				  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  -- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  -- and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno < annoMovimento::integer -- anno dell impegno < annoMovimento 
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		
			-- 02.02.2016 Sofia JIRA 2947
			if importoImpegnato is null then importoImpegnato:=0; end if;


	end if;

	indiceAnnualita:=loop_counter;
	elemDetCompId:=idcomp_in;
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente per l'anno N-1
	if flagDeltaPagamenti != 0 then
		impegnatoDefinitivo:=impegnatoDefinitivo+importoImpegnato-(importoPagatoDelta);
	else 
		impegnatoDefinitivo:=impegnatoDefinitivo+importoImpegnato;
	end if;
	return next;

END CASE;
END LOOP;

return;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
		return;
	when no_data_found then
		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
		return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
		return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100 ROWS 1000;


ALTER FUNCTION siac.fnc_siac_impegnatodefinitivoug_comp (id_in integer, idcomp_in integer)
  OWNER TO siac;
 
--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatodefinitivoug_comp (id_in integer, idcomp_in integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatodefinitivoug_comp (id_in integer, idcomp_in integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatodefinitivoug_comp (id_in integer, idcomp_in integer) TO siac;

--End fnc_siac_impegnatodefinitivoug_comp
  
--Start fnc_siac_dicuiimpegnatoug_annisucc
/*
*SPDX-FileCopyrightText: Copyright 2020 | CSI Piemonte
*SPDX-License-Identifier: EUPL-1.2
*/
CREATE OR REPLACE FUNCTION siac.fnc_siac_dicuiimpegnatoug_annisucc (
  id_in integer
)
RETURNS numeric AS
$body$
DECLARE
annoBilancio varchar:=null;
annoEsercizio varchar:=null;
annoMovimento varchar:=null;
impegnatoDefinitivo numeric:=0; 
elemIdGestEq integer:=0;
bilIdElemGestEq integer:=0;
NVL_STR     constant varchar:='';
faseOpCode varchar(20):=NVL_STR;
bilancioId integer:=0;
elemTipoCode VARCHAR(20):=NVL_STR;
elemCode varchar(50):=NVL_STR;
elemCode2 varchar(50):=NVL_STR;
elemCode3 varchar(50):=NVL_STR;
enteProprietarioId INTEGER:=0;
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
FASE_OP_BIL_PREV constant VARCHAR:='P';
STATO_A     constant varchar:='A';
STATO_P     constant varchar:='P';
TIPO_IMP    constant varchar:='I';
movGestStatoIdAnnullato integer:=0;
movGestStatoIdProvvisorio integer:=0;
movGestTipoId integer:=0;
IMPORTO_ATT constant varchar:='A';
movGestTsDetTipoId integer:=0;
IMPORTO_INIZIALE constant varchar:='I';
movGestTsDetTipoIdIniziale integer:=0;
STATO_MOD_V  constant varchar:='V';
modStatoVId integer:=0;
attoAmmStatoPId integer:=0;
STATO_ATTO_P constant varchar:='PROVVISORIO';
STATO_ATTO_D constant varchar:='DEFINITIVO';
attoAmmStatoDId integer:=0;
importoCurAttuale numeric:=0;
esisteRmovgestidelemid INTEGER:=0;
importoModifDelta  numeric:=0;
impegniDaRibaltamento integer:=0;
pluriennaliDaRibaltamento integer:=0;
flagNMaggioreNPiu2 integer:=0;
importoImpegnato integer:=0;

strMessaggio varchar(1500):=null;
BEGIN

-- CALCOLO IMPEGNATO DEFINITIVO 
-- IN TUTTI I CASI:
-- Stiamo sempre parlando di impegnato sul capitolo di gestione equivalente	
-- I valori di impegnato dovranno essere calcolati tenendo conto del solo impegnato definitivo.
-- Escluse dal calcolo quindi:
--		- le modifiche di impegno provvisorie (modifiche con provvedimento in stato provvisorio - di qualsiasi segno
-- 		- gli  impegni in stato provvisorio

    strMessaggio:='Calcolo totale impegnato definitvo per anni successivi elem_id='||id_in||'.';

	-- Controllo parametri in input
	if id_in is null or id_in=0 then
		 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
	end if;
 
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'. Lettura anno di bilancio del capitolo UG.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;
		  

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'. Determina capitolo di gestione  in anno esercizio di calcolato. Calcolo bilancioId e elem_tipo_code.';
	 select bilelem.elem_code, bilElem.elem_code2, bilElem.elem_code3, bil.bil_id ,tipoBilElem.elem_tipo_code, per.anno , bil.ente_proprietario_id
	 into strict elemCode, elemCode2, elemCode3, bilancioId, elemTipoCode , annoBilancio,enteProprietarioId
	 from 	siac_t_bil_elem bilElem, 
	 		siac_d_bil_elem_tipo tipoBilElem,
		  	siac_t_bil bil, siac_t_periodo per
	 where bilElem.elem_id=id_in
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
	   and bil.bil_id=bilElem.bil_id
	   and per.periodo_id=bil.periodo_id;

	 if elemTipoCode is not null and elemTipoCode!=NVL_STR and elemTipoCode!=TIPO_CAP_UG then
			RAISE EXCEPTION '% elemTipoCode=%  non ammesso per tipo di calcolo.',strMessaggio,elemTipoCode;
	 end if;

	 strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'. Determina capitolo di gestione  in anno esercizio calcolato. Calcolo fase operativa per bilancioId='||bilancioId||' , per ente='||enteProprietarioId||' e per elem_id='||id_in||'.';

	 select  faseOp.fase_operativa_code into  faseOpCode
	 from siac_r_bil_fase_operativa bilFase, siac_d_fase_operativa faseOp
	 where bilFase.bil_id =bilancioId
	   and bilfase.data_cancellazione is null
	   and bilFase.validita_fine is null
	   and faseOp.fase_operativa_id=bilFase.fase_operativa_id
	   and faseOp.data_cancellazione is null
	 order by bilFase.bil_fase_operativa_id desc;

	 if NOT FOUND THEN
	   RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
	 end if;

	 strMessaggio:='Calcolo impegnato definitivo elem_id='||id_in||'. Calcolo movGestTipoId per movgest_tipo_code=IMPEGNO';
	 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
	 from  siac_d_movgest_tipo tipoMovGest
	 where tipoMovGest.ente_proprietario_id=enteProprietarioId
	 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||
				  '. Calcolo movGestTsStatoIdAnnullato per movgest_stato_code=ANNULLATO'
				  '. Calcolo movGestTsStatoIdProvvisorio per movgest_stato_code=PROVVISORIO';

	 select movGestStato.movgest_stato_id into strict movGestStatoIdAnnullato
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_A;

	 select  movGestStato.movgest_stato_id into strict movGestStatoIdProvvisorio
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_P; 
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||
				  '. Calcolo movGestTsDetTipoId per movgest_ts_det_tipo_code=IMPORTO ATTUALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT; --'A'

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||
				  '. Calcolo movGestTsDetTipoIdIniziale per movgest_ts_det_tipo_code=IMPORTO INIZIALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoIdIniziale
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_INIZIALE; --'I'
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||
              '. Calcolo modStatoVId per mod_stato_code=VALIDO.';
	 select d.mod_stato_id into strict modStatoVId
	 from siac_d_modifica_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.mod_stato_code=STATO_MOD_V;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||
				  '. Calcolo attoAmmStatoPId per attoamm_stato_code=PROVVISORIO';
	 select d.attoamm_stato_id into strict attoAmmStatoPId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_P;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'. Calcolo attoAmmStatoDId per attoamm_stato_code=DEFINITIVO';
	 select d.attoamm_stato_id into strict attoAmmStatoDId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_D;

 	-- Calcolo Impegnato definitivo - Anno > N+2:
	-- - Se presenti i movimenti gestione provenienti dal ribaltamento 
	--		Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in e anno movimento > N+2 e anno esercizio N
	-- - Se non presenti i movimenti gestione provenienti dal ribaltamento 
	-- 		Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in e anno movimento > N+2 e anno esercizio N-1
	-- I valori di impegnato dovranno essere calcolati tenendo conto del solo impegnato definitivo.
	-- Escluse dal calcolo quindi:
	--		- le modifiche di impegno provvisorie (modifiche con provvedimento in stato provvisorio - di qualsiasi segno)
	-- 		- gli  impegni in stato provvisorio

	-- Verifica se presenti i movimenti di gestione provenienti dal ribaltamento
	-- Per "ribaltamento" si intende  il batch di ribaltamento residui che gira prima del ROR 
	--		e che "copia" gli impegni dell'anno N-1 nel bilancio dell'anno N (di solito il 2 gennaio)
	-- Per verificare che il batch di ribaltamento sia stato eseguito controllo le seguenti tabelle
	-- 		fase_bil_t_gest_apertura_liq_imp per gli impegni residui
	--  	fase_bil_t_gest_apertura_pluri per i pluriennli (sia impegni che accertamenti)
	-- In entrambe c'e' sia il bil_id che il bil_id_orig ovvero l'anno nuovo su cui si stanno ribaltando i movimenti e l'anno prec
	-- c'e' anche un campo fl_elab che ti dice se i dati sono stati elaborati con scarto o con successo 
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||
				 '.Verifica se presenti i movimenti di gestione provenienti dal ribaltamento per anno di esercizio N.';
	
	impegniDaRibaltamento:=0;
	pluriennaliDaRibaltamento:=0;
	importoCurAttuale:=0;	
	importoModifDelta:=0;
	
	select  count(*) into impegniDaRibaltamento 
	from fase_bil_t_gest_apertura_liq_imp fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;

	select  count(*) into  pluriennaliDaRibaltamento
	from fase_bil_t_gest_apertura_pluri fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;
				
	if impegniDaRibaltamento>0 and pluriennaliDaRibaltamento>0 then

	-- - Se presenti i movimenti gestione provenienti dal ribaltamento 
	--		ImpegnatoDefinitivo = Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in 
	--		e anno movimento > N+2 e anno esercizio N

		annoEsercizio:=annoBilancio;
		annoMovimento:=((annoBilancio::INTEGER)+2)::varchar;
		flagNMaggioreNPiu2:=1;
	else

		-- - Se non presenti i movimenti gestione provenienti dal ribaltamento 
		-- 	ImpegnatoDefinitivo = Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in 
		-- 	e anno movimento > N+2 e anno esercizio N-1

		annoEsercizio:=((annoBilancio::INTEGER)-1)::varchar;
		annoMovimento:=((annoBilancio::INTEGER)+2)::varchar;
		flagNMaggioreNPiu2:=1;
	end if;

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'. Determina capitolo di gestione  in anno esercizio calcolato.'; 
				   --Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    -- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo impegnato competenza UG.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else

		strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento|| 
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid 
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno>annoMovimento::integer 
			--and el.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349, punto 21/04/2020
			;
		
		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;
		
		if esisteRmovgestidelemid <>0 then
 			impegnatoDefinitivo:=0;
			strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

			importoCurAttuale:=0;			
			select tb.importo into importoCurAttuale
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq  -- UID del capitolo di gestione equivalente
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  -- SIAC-7737 GS 31/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  -- and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno > annoMovimento::integer -- anno dell impegno > annoMovimento 
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		

			-- 02.02.2016 Sofia JIRA 2947
			 if importoCurAttuale is null then importoCurAttuale:=0; end if;

			 -- 16.03.2017 Sofia JIRA-SIAC-4614
			-- if importoCurAttuale>0 then
			 /*Adeguamento MR SIAC-7349 Sprint 5
			 Per il calcolo del impegnato non si tiene conto delle modifiche provvisorie
			 Queste devono essere restituite al impegno solo quando si calcola 
			 la disponibilita ad impegnare
			 if importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

				strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Calcolo totale modifiche su atti provvisori per annoMovimento='||annoMovimento||'.';

				select tb.importo into importoModifDelta
				 from
				 (
					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, 
					 	 siac_t_movgest mov,
					 	 siac_t_movgest_ts ts,
						 siac_r_movgest_ts_stato rstato,
					  	 siac_t_movgest_ts_det tsdet,
						 siac_t_movgest_ts_det_mod moddet,
						 siac_t_modifica mod, 
					 	 siac_r_modifica_stato rmodstato,
						 siac_r_atto_amm_stato attostato, 
					 	 siac_t_atto_amm atto,
						 siac_d_modifica_tipo tipom
					where 
						rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
						--and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349 in questo caso, non sulla componente
						and	  mov.movgest_id=rbil.movgest_id
						and   mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
						and   mov.movgest_anno>annoMovimento::integer -- anno dell impegno = annoMovimento 
						and   mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
						and   ts.movgest_id=mov.movgest_id
						and   rstato.movgest_ts_id=ts.movgest_ts_id
						and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- Impegno non ANNULLATO
						and   rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
					    and   tsdet.movgest_ts_id=ts.movgest_ts_id
						and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
					 	and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
						and   tipom.mod_tipo_id=mod.mod_tipo_id
						-- and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
						group by ts.movgest_ts_tipo_id
					  ) tb, siac_d_movgest_ts_tipo tipo
					  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					  order by tipo.movgest_ts_tipo_code desc
					  limit 1;		
					  
 				if importoModifDelta is null then importoModifDelta:=0; end if;

		
			end if;	*/	
		end if;
	end if;
    --FIX Sprint5 7349
    importoModifDelta:=0;
    --
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente per l'anno N-1
	impegnatoDefinitivo:=impegnatoDefinitivo+importoCurAttuale-(importoModifDelta);
	
	return impegnatoDefinitivo;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return -1;
    when no_data_found then
	RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return -1;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return -1;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100;


ALTER FUNCTION siac.fnc_siac_dicuiimpegnatoug_annisucc (id_in integer) OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoug_annisucc (id_in integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoug_annisucc (id_in integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoug_annisucc (id_in integer) TO siac;
  
--end fnc_siac_dicuiimpegnatoug_annisucc

--Start fnc_siac_dicuiimpegnatoug_annoprec
/*
*SPDX-FileCopyrightText: Copyright 2020 | CSI Piemonte
*SPDX-License-Identifier: EUPL-1.2
*/
CREATE OR REPLACE FUNCTION siac.fnc_siac_dicuiimpegnatoug_annoprec (
  id_in integer
)
RETURNS numeric AS
$body$
DECLARE
annoBilancio varchar:=null;
annoEsercizio varchar:=null;
annoMovimento varchar:=null;
impegnatoDefinitivo numeric:=0; 
elemIdGestEq integer:=0;
bilIdElemGestEq integer:=0;
NVL_STR     constant varchar:='';
faseOpCode varchar(20):=NVL_STR;
bilancioId integer:=0;
elemTipoCode VARCHAR(20):=NVL_STR;
elemCode varchar(50):=NVL_STR;
elemCode2 varchar(50):=NVL_STR;
elemCode3 varchar(50):=NVL_STR;
enteProprietarioId INTEGER:=0;
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
FASE_OP_BIL_PREV constant VARCHAR:='P';
STATO_A     constant varchar:='A';
STATO_P     constant varchar:='P';
TIPO_IMP    constant varchar:='I';
movGestStatoIdAnnullato integer:=0;
movGestStatoIdProvvisorio integer:=0;
movGestTipoId integer:=0;
IMPORTO_ATT constant varchar:='A';
movGestTsDetTipoId integer:=0;
IMPORTO_INIZIALE constant varchar:='I';
movGestTsDetTipoIdIniziale integer:=0;
STATO_MOD_V  constant varchar:='V';
modStatoVId integer:=0;
attoAmmStatoPId integer:=0;
STATO_ATTO_P constant varchar:='PROVVISORIO';
STATO_ATTO_D constant varchar:='DEFINITIVO';
attoAmmStatoDId integer:=0;
importoCurAttuale numeric:=0;
esisteRmovgestidelemid INTEGER:=0;
importoModifDelta  numeric:=0;
importoImpegnato integer:=0;

strMessaggio varchar(1500):=null;
BEGIN



    strMessaggio:='Calcolo totale impegnato per anni precedenti elem_id='||id_in||'.';

	-- Controllo parametri in input
	if id_in is null or id_in=0 then
		 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
	end if;
 
	strMessaggio:='Calcolo totale impegnato per anni precedenti elem_id='||id_in||'. Lettura anno di bilancio del capitolo UG.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;
		  

	strMessaggio:='Calcolo totale impegnato per anni precedenti elem_id='||id_in||'. Determina capitolo di gestione  in anno esercizio di calcolato. Calcolo bilancioId e elem_tipo_code.';
	 select bilelem.elem_code, bilElem.elem_code2, bilElem.elem_code3, bil.bil_id ,tipoBilElem.elem_tipo_code, per.anno , bil.ente_proprietario_id
	 into strict elemCode, elemCode2, elemCode3, bilancioId, elemTipoCode , annoBilancio,enteProprietarioId
	 from 	siac_t_bil_elem bilElem, 
	 		siac_d_bil_elem_tipo tipoBilElem,
		  	siac_t_bil bil, siac_t_periodo per
	 where bilElem.elem_id=id_in
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
	   and bil.bil_id=bilElem.bil_id
	   and per.periodo_id=bil.periodo_id;

	 if elemTipoCode is not null and elemTipoCode!=NVL_STR and elemTipoCode!=TIPO_CAP_UG then
			RAISE EXCEPTION '% elemTipoCode=%  non ammesso per tipo di calcolo.',strMessaggio,elemTipoCode;
	 end if;

	 strMessaggio:='Calcolo totale impegnato per anni precedenti elem_id='||id_in||'. Determina capitolo di gestione  in anno esercizio calcolato. Calcolo fase operativa per bilancioId='||bilancioId||' , per ente='||enteProprietarioId||' e per elem_id='||id_in||'.';

	 select  faseOp.fase_operativa_code into  faseOpCode
	 from siac_r_bil_fase_operativa bilFase, siac_d_fase_operativa faseOp
	 where bilFase.bil_id =bilancioId
	   and bilfase.data_cancellazione is null
	   and bilFase.validita_fine is null
	   and faseOp.fase_operativa_id=bilFase.fase_operativa_id
	   and faseOp.data_cancellazione is null
	 order by bilFase.bil_fase_operativa_id desc;

	 if NOT FOUND THEN
	   RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
	 end if;

	 strMessaggio:='Calcolo impegnato per anni precedenti elem_id='||id_in||'. Calcolo movGestTipoId per movgest_tipo_code=IMPEGNO';
	 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
	 from  siac_d_movgest_tipo tipoMovGest
	 where tipoMovGest.ente_proprietario_id=enteProprietarioId
	 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

	 strMessaggio:='Calcolo impegnato competenza anni precedenti elem_id='||id_in||
				  '. Calcolo movGestTsStatoIdAnnullato per movgest_stato_code=ANNULLATO'
				  '. Calcolo movGestTsStatoIdProvvisorio per movgest_stato_code=PROVVISORIO';

	 select movGestStato.movgest_stato_id into strict movGestStatoIdAnnullato
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_A;

	 select  movGestStato.movgest_stato_id into strict movGestStatoIdProvvisorio
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_P; 
	 
	 strMessaggio:='Calcolo impegnato competenza anni precedenti elem_id='||id_in||
				  '. Calcolo movGestTsDetTipoId per movgest_ts_det_tipo_code=IMPORTO ATTUALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT; --'A'

	 strMessaggio:='Calcolo impegnato competenza anni precedenti elem_id='||id_in||
				  '. Calcolo movGestTsDetTipoIdIniziale per movgest_ts_det_tipo_code=IMPORTO INIZIALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoIdIniziale
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_INIZIALE; --'I'
	 
	 strMessaggio:='Calcolo impegnato competenza anni precedenti elem_id='||id_in||
              '. Calcolo modStatoVId per mod_stato_code=VALIDO.';
	 select d.mod_stato_id into strict modStatoVId
	 from siac_d_modifica_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.mod_stato_code=STATO_MOD_V;

	 strMessaggio:='Calcolo impegnato competenza anni precedenti elem_id='||id_in||
				  '. Calcolo attoAmmStatoPId per attoamm_stato_code=PROVVISORIO';
	 select d.attoamm_stato_id into strict attoAmmStatoPId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_P;

	 strMessaggio:='Calcolo impegnato competenza anni precedenti elem_id='||id_in||'. Calcolo attoAmmStatoDId per attoamm_stato_code=DEFINITIVO';
	 select d.attoamm_stato_id into strict attoAmmStatoDId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_D;
 

	importoCurAttuale:=0;	
	importoModifDelta:=0;
	annoEsercizio:=((annoBilancio::INTEGER)-1)::varchar;
        annoMovimento:=((annoBilancio::INTEGER)-1)::varchar;


	strMessaggio:='Calcolo totale impegnato anni precedenti elem_id='||id_in||'. Determina capitolo di gestione  in anno esercizio calcolato.'; 
				   --Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    	-- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo impegnato anno precedente UG.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else

		strMessaggio:='Calcolo totale impegnato anno precedente elem_id='||id_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento|| 
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid 
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno=annoMovimento::integer 
			--and el.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349, punto 21/04/2020
			;
		
		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;
		
		if esisteRmovgestidelemid <>0 then
 			impegnatoDefinitivo:=0;
			strMessaggio:='Calcolo totale impegnato anno precedente elem_id='||id_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

			importoCurAttuale:=0;			
			select tb.importo into importoCurAttuale
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq  -- UID del capitolo di gestione equivalente
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  -- SIAC-7737 GS 31/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  -- and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno = annoMovimento::integer -- anno dell impegno = annoMovimento 
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		

			-- 02.02.2016 Sofia JIRA 2947
			 if importoCurAttuale is null then importoCurAttuale:=0; end if;

			 -- 16.03.2017 Sofia JIRA-SIAC-4614
			-- if importoCurAttuale>0 then
			 /*Adeguamento MR SIAC-7349 Sprint 5
			 	Non restituiamo le modifiche provvisorie al valore dell'impegnato
				
			 if importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

				strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Calcolo totale modifiche su atti provvisori per annoMovimento='||annoMovimento||'.';

				select tb.importo into importoModifDelta
				 from
				 (
					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, 
					 	 siac_t_movgest mov,
					 	 siac_t_movgest_ts ts,
						 siac_r_movgest_ts_stato rstato,
					  	 siac_t_movgest_ts_det tsdet,
						 siac_t_movgest_ts_det_mod moddet,
						 siac_t_modifica mod, 
					 	 siac_r_modifica_stato rmodstato,
						 siac_r_atto_amm_stato attostato, 
					 	 siac_t_atto_amm atto,
						 siac_d_modifica_tipo tipom
					where 
						rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
						--and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349 in questo caso, non sulla componente
						and	  mov.movgest_id=rbil.movgest_id
						and   mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
						and   mov.movgest_anno>annoMovimento::integer -- anno dell impegno = annoMovimento 
						and   mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
						and   ts.movgest_id=mov.movgest_id
						and   rstato.movgest_ts_id=ts.movgest_ts_id
						and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- Impegno non ANNULLATO
						and   rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
					    and   tsdet.movgest_ts_id=ts.movgest_ts_id
						and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
					 	and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
						and   tipom.mod_tipo_id=mod.mod_tipo_id
						-- and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
						group by ts.movgest_ts_tipo_id
					  ) tb, siac_d_movgest_ts_tipo tipo
					  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					  order by tipo.movgest_ts_tipo_code desc
					  limit 1;		
					  
 				if importoModifDelta is null then importoModifDelta:=0; end if;

		
			end if;	*/	
		end if;
	end if;
    --FIX Sprint5 7349
    importoModifDelta:=0;
    --
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato per l'anno N-1
	impegnatoDefinitivo:=impegnatoDefinitivo+importoCurAttuale-(importoModifDelta);
	
	return impegnatoDefinitivo;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        impegnatoDefinitivo:=0;
        return impegnatoDefinitivo;
    when no_data_found then
		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        impegnatoDefinitivo:=0;
        return impegnatoDefinitivo;
    when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        impegnatoDefinitivo:=0;
        return impegnatoDefinitivo;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100;


ALTER FUNCTION siac.fnc_siac_dicuiimpegnatoug_annoprec (id_in integer)
  OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoug_annoprec(integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoug_annoprec(integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoug_annoprec(integer) TO siac;
--end fnc_siac_dicuiimpegnatoug_annoprec

--Start fnc_siac_impegnatodefinitivoug_comp_annisucc_nostanz
/*
*SPDX-FileCopyrightText: Copyright 2020 | CSI Piemonte
*SPDX-License-Identifier: EfL-1.2
*/
-- DROP FUNCTION fnc_siac_impegnatodefinitivoug_comp_annisucc_nostanz(integer,integer[]);

CREATE OR REPLACE FUNCTION siac.fnc_siac_impegnatodefinitivoug_comp_annisucc_nostanz(
	id_in integer,
	idcomp_in INT[])
    RETURNS TABLE(
    	elemdetcompid integer, 
    	elemdetcompdesc character varying,
    	impegnatodefinitivo numeric,
	elemdetcompmacrotipodesc character varying) 
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$
DECLARE


annoBilancio varchar:=null;
annoEsercizio varchar:=null;
annoMovimento varchar:=null;

elemIdGestEq integer:=0;
bilIdElemGestEq integer:=0;
NVL_STR     constant varchar:='';
faseOpCode varchar(20):=NVL_STR;
bilancioId integer:=0;
elemTipoCode VARCHAR(20):=NVL_STR;
elemCode varchar(50):=NVL_STR;
elemCode2 varchar(50):=NVL_STR;
elemCode3 varchar(50):=NVL_STR;
enteProprietarioId INTEGER:=0;
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
FASE_OP_BIL_PREV constant VARCHAR:='P';
STATO_A     constant varchar:='A';
STATO_P     constant varchar:='P';
TIPO_IMP    constant varchar:='I';
movGestStatoIdAnnullato integer:=0;
movGestStatoIdProvvisorio integer:=0;
movGestTipoId integer:=0;
IMPORTO_ATT constant varchar:='A';
movGestTsDetTipoId integer:=0;
IMPORTO_INIZIALE constant varchar:='I';
movGestTsDetTipoIdIniziale integer:=0;
STATO_MOD_V  constant varchar:='V';
modStatoVId integer:=0;
attoAmmStatoPId integer:=0;
STATO_ATTO_P constant varchar:='PROVVISORIO';
STATO_ATTO_D constant varchar:='DEFINITIVO';
attoAmmStatoDId integer:=0;
importoCurAttuale numeric:=0;
esisteRmovgestidelemid INTEGER:=0;
importoModifDelta  numeric:=0;
importoModifINS numeric:=0; --aggiunta per ECONB
impegniDaRibaltamento integer:=0;
pluriennaliDaRibaltamento integer:=0;
flagNMaggioreNPiu2 integer:=0;
flagDeltaPagamenti integer:=0;
importoImpegnato numeric:=0;
importoPagatoDelta numeric:=0;
ordStatoAId          integer:=null;
ordTsDetTipoAId      integer:=null;
-- stati ordinativi
STATO_ORD_A    constant varchar:='A'; -- ANNULLATO
-- importoAttuale ordinativi
ORD_TS_DET_TIPO_A  constant varchar:='A';

sidcomp_in  varchar:=null;
strMessaggio varchar(1500):=null;

impComponenteRec record;

BEGIN

/* Calcola impegnato definitivo per quelle componenti per le quali pur non essendoci stanziamento
 * esistono quote di impegnato nell'anno > N+2 
 * Le componenti per le quali esiste stanziamento (e quindi da non considerare) sono passate in input nell'array idcomp_in
 * NOTA: per problemi Java/Hibernate idcomp_in non puo' essere un array vuoto, quindi 
 *		l'array in input conterra' sempre la componente fittizia idcomp = -1
 */
-- CALCOLO IMPEGNATO DEFINITIVO 
-- I valori di impegnato dovranno essere calcolati tenendo conto del solo impegnato definitivo.
-- Escluse dal calcolo quindi:
--		- le modifiche di impegno provvisorie (modifiche con provvedimento in stato provvisorio - di qualsiasi segno
-- 		- gli  impegni in stato provvisorio

	sidcomp_in:=array_to_string(idcomp_in, ',');
    	strMessaggio:='Calcolo totale impegnato definitovo elem_id='||id_in|| ' escludo idcomp_in='||sidcomp_in|| '.';

	-- Controllo parametri in input
	if id_in is null or id_in=0 then
		 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
	end if;
 
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in||
    			  '.Lettura anno di bilancio del capitolo UG.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;
		  

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in||
    				   '. Calcolo bilancioId e elem_tipo_code.';
	 select bilelem.elem_code, bilElem.elem_code2, bilElem.elem_code3, bil.bil_id ,tipoBilElem.elem_tipo_code, per.anno , bil.ente_proprietario_id
	 into strict elemCode, elemCode2, elemCode3, bilancioId, elemTipoCode , annoBilancio,enteProprietarioId
	 from 	siac_t_bil_elem bilElem, 
	 		siac_d_bil_elem_tipo tipoBilElem,
		  	siac_t_bil bil, siac_t_periodo per
	 where bilElem.elem_id=id_in
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
	   and bil.bil_id=bilElem.bil_id
	   and per.periodo_id=bil.periodo_id;

	 if elemTipoCode is not null and elemTipoCode!=NVL_STR and elemTipoCode!=TIPO_CAP_UG then
			RAISE EXCEPTION '% elemTipoCode=%  non ammesso per tipo di calcolo.',strMessaggio,elemTipoCode;
	 end if;

	 strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in||
				   'Calcolo fase operativa per bilancioId='||bilancioId
				   ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select  faseOp.fase_operativa_code into  faseOpCode
	 from siac_r_bil_fase_operativa bilFase, siac_d_fase_operativa faseOp
	 where bilFase.bil_id =bilancioId
	   and bilfase.data_cancellazione is null
	   and bilFase.validita_fine is null
	   and faseOp.fase_operativa_id=bilFase.fase_operativa_id
	   and faseOp.data_cancellazione is null
	 order by bilFase.bil_fase_operativa_id desc;

	 if NOT FOUND THEN
	   RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
	 end if;

	 strMessaggio:='Calcolo impegnato definitivo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTipoId per movgest_tipo_code=IMPEGNO';
	 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
	 from  siac_d_movgest_tipo tipoMovGest
	 where tipoMovGest.ente_proprietario_id=enteProprietarioId
	 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTsStatoIdAnnullato per movgest_stato_code=ANNULLATO'
				  ||'. Calcolo movGestTsStatoIdProvvisorio per movgest_stato_code=PROVVISORIO';

	 select movGestStato.movgest_stato_id into strict movGestStatoIdAnnullato
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_A;

	 select  movGestStato.movgest_stato_id into strict movGestStatoIdProvvisorio
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_P; 
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTsDetTipoId per movgest_ts_det_tipo_code=IMPORTO ATTUALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTsDetTipoIdIniziale per movgest_ts_det_tipo_code=IMPORTO INIZIALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoIdIniziale
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_INIZIALE;
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
              ||'. Calcolo modStatoVId per mod_stato_code=VALIDO.';
	 select d.mod_stato_id into strict modStatoVId
	 from siac_d_modifica_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.mod_stato_code=STATO_MOD_V;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo attoAmmStatoPId per attoamm_stato_code=PROVVISORIO';
	 select d.attoamm_stato_id into strict attoAmmStatoPId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_P;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo attoAmmStatoDId per attoamm_stato_code=DEFINITIVO';
	 select d.attoamm_stato_id into strict attoAmmStatoDId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_D;

 	 	-- Calcolo Impegnato definitivo - Anno > N+2:
	-- - Se presenti i movimenti gestione provenienti dal ribaltamento 
	--		Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente e anno movimento > N+2 e anno esercizio N
	-- - Se non presenti i movimenti gestione provenienti dal ribaltamento 
	-- 		Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente e anno movimento > N+2 e anno esercizio N-1
	-- I valori di impegnato dovranno essere calcolati tenendo conto del solo impegnato definitivo.
	-- Escluse dal calcolo quindi:
	--		- le modifiche di impegno provvisorie (modifiche con provvedimento in stato provvisorio - di qualsiasi segno)
	-- 		- gli  impegni in stato provvisorio

	-- Verifica se presenti i movimenti di gestione provenienti dal ribaltamento
	-- Per "ribaltamento" si intende  il batch di ribaltamento residui che gira prima del ROR 
	--		e che "copia" gli impegni dell'anno N-1 nel bilancio dell'anno N (di solito il 2 gennaio)
	-- Per verificare che il batch di ribaltamento sia stato eseguito controllo le seguenti tabelle
	-- 		fase_bil_t_gest_apertura_liq_imp per gli impegni residui
	--  	fase_bil_t_gest_apertura_pluri per i pluriennli (sia impegni che accertamenti)
	-- In entrambe c'e' sia il bil_id che il bil_id_orig ovvero l'anno nuovo su cui si stanno ribaltando i movimenti e l'anno prec
	-- c'e' anche un campo fl_elab che ti dice se i dati sono stati elaborati con scarto o con successo 

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in;
	
	importoCurAttuale:=0;	
	importoModifDelta:=0;
	importoModifINS := 0;
	

	--		ImpegnatoDefinitivo = Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in 
	--		e anno movimento > N+2 e anno esercizio N

	annoEsercizio:=annoBilancio;
	annoMovimento:=((annoBilancio::INTEGER)+2)::varchar;
	flagNMaggioreNPiu2:=1;
	
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in||
				   '.Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId per annoEsercizio='||annoEsercizio
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    	-- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo impegnato competenza UG.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else
	
		strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento|| 
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid 
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno>annoMovimento::integer 
			and NOT (el.elem_det_comp_tipo_id = ANY( idcomp_in)) --SIAC-7349
			;
		
		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;
	
		if esisteRmovgestidelemid <>0 then
 			impegnatoDefinitivo:=0;
			strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

/*			importoCurAttuale:=0;			
			select tb.importo into importoCurAttuale
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
				  NOT ( a.elem_det_comp_tipo_id = ANY( idcomp_in))--SIAC-7349 non deve essere sulla componente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno > annoMovimento::integer -- anno dell impegno > annoMovimento 
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		
*/

			/* Versione con group by per le componenti non da escludere e ciclo per ogni componente */
			for impComponenteRec in
			 (
				select tb.elem_det_comp_tipo_id as compId, 
				 g.elem_det_comp_tipo_desc as compDesc, 
				 tb.importo as importoCurAttuale,
				 h.elem_det_comp_macro_tipo_desc as compMacroTipoDesc 
				 -- tb.importo into importoCurAttuale
				from (
				  select
					  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id, a.elem_det_comp_tipo_id
				  from
					  siac_r_movgest_bil_elem a,
					  siac_t_movgest b,
					  siac_t_movgest_ts c,
					  siac_r_movgest_ts_stato d,
					  siac_t_movgest_ts_det e,
					  siac_d_movgest_ts_det_tipo f
				  where
					  b.movgest_id=a.movgest_id 
					  and a.elem_id=elemIdGestEq
					  and NOT( a.elem_det_comp_tipo_id = ANY(idcomp_in)) --SIAC-7349 --id componente diversa da quella ricevuta in input
					  and b.bil_id = bilIdElemGestEq
					  and b.movgest_tipo_id=movGestTipoId
					  and d.movgest_stato_id!=movGestStatoIdAnnullato
					  -- SIAC-7737 GS 31/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				      -- and d.movgest_stato_id!=movGestStatoIdProvvisorio
					  and b.movgest_anno > annoMovimento::integer -- per gli anni oltre N+2
					  and c.movgest_id=b.movgest_id
					  and d.movgest_ts_id=c.movgest_ts_id
					  and d.validita_fine is null
					  and e.movgest_ts_id=c.movgest_ts_id
					  and a.data_cancellazione is null
					  and b.data_cancellazione is null
					  and c.data_cancellazione is null
					  and e.data_cancellazione is null
					  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
					  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId
					  group by 	c.movgest_ts_tipo_id, 
								a.elem_det_comp_tipo_id -- SIAC-7349
						) tb, 
					siac_d_movgest_ts_tipo t,
					siac_d_bil_elem_det_comp_tipo g,
				 	siac_d_bil_elem_det_comp_macro_tipo h
				where 
					tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
					and g.elem_det_comp_tipo_id = tb.elem_det_comp_tipo_id --SIAC-7349 recupera anche la descrizione della componente
					and g.elem_det_comp_macro_tipo_id = h.elem_det_comp_macro_tipo_id --SIAC-7349 recupera anche la descrizione del macrotipo della componente
				 order by t.movgest_ts_tipo_code desc
 			) 
			loop
			

					-- 02.02.2016 Sofia JIRA 2947
					 if impComponenteRec.importoCurAttuale is null then impComponenteRec.importoCurAttuale:=0; end if;

					 -- 16.03.2017 Sofia JIRA-SIAC-4614
					-- if importoCurAttuale>0 then
					 if impComponenteRec.importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

						strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'  impComponenteRec.compId='||impComponenteRec.compId||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Calcolo totale modifiche su atti provvisori per annoMovimento='||annoMovimento||'.';

						select tb.importo into importoModifDelta
						 from
						 (
							select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
							from siac_r_movgest_bil_elem rbil, 
								 siac_t_movgest mov,
								 siac_t_movgest_ts ts,
								 siac_r_movgest_ts_stato rstato,
								 siac_t_movgest_ts_det tsdet,
								 siac_t_movgest_ts_det_mod moddet,
								 siac_t_modifica mod, 
								 siac_r_modifica_stato rmodstato,
								 siac_r_atto_amm_stato attostato, 
								 siac_t_atto_amm atto,
								 siac_d_modifica_tipo tipom
							where 
								rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
								and rbil.elem_det_comp_tipo_id=impComponenteRec.compId --SIAC-7349 deve essere sulla compoenente del record 
								and	  mov.movgest_id=rbil.movgest_id
								and   mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
								and   mov.movgest_anno>annoMovimento::integer -- anno dell impegno = annoMovimento 
								and   mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
								and   ts.movgest_id=mov.movgest_id
								and   rstato.movgest_ts_id=ts.movgest_ts_id
								and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- Impegno non ANNULLATO
								-- SIAC-7737 GS 31/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
							    -- and   rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
								and   tsdet.movgest_ts_id=ts.movgest_ts_id
								and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
								and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
								-- SIAC-7349 Prendo tutti gli importi, sia con segno negativo che con segno positivo
								-- La loro somma produce il valore importoModifDelta che devo sottrarre all'impegnato calcolato
								-- ad esempio: modifiche su atto provv +100, -322 -> somma -222 si tratta di un delta che devo sottrarre
								-- all'impegnato calcolato = impegnato calcolato - (-222) = +222 (aggiungo quello che avevo tolto)
								-- and   moddet.movgest_ts_det_importo<0 -- importo negativo
								and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
								and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
								and   mod.mod_id=rmodstato.mod_id
								and   atto.attoamm_id=mod.attoamm_id
								and   attostato.attoamm_id=atto.attoamm_id
								and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
								and   tipom.mod_tipo_id=mod.mod_tipo_id
								and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
								-- date
								and rbil.data_cancellazione is null
								and rbil.validita_fine is null
								and mov.data_cancellazione is null
								and mov.validita_fine is null
								and ts.data_cancellazione is null
								and ts.validita_fine is null
								and rstato.data_cancellazione is null
								and rstato.validita_fine is null
								and tsdet.data_cancellazione is null
								and tsdet.validita_fine is null
								and moddet.data_cancellazione is null
								and moddet.validita_fine is null
								and mod.data_cancellazione is null
								and mod.validita_fine is null
								and rmodstato.data_cancellazione is null
								and rmodstato.validita_fine is null
								and attostato.data_cancellazione is null
								and attostato.validita_fine is null
								and atto.data_cancellazione is null
								and atto.validita_fine is null
								group by ts.movgest_ts_tipo_id
							  ) tb, siac_d_movgest_ts_tipo tipo
							  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
							  order by tipo.movgest_ts_tipo_code desc
							  limit 1;		

						if importoModifDelta is null then importoModifDelta:=0; end if;
						  /*Aggiunta delle modifiche ECONB*/
						 -- anna_economie inizio
						select tb.importo into importoModifINS
						from
						(
							select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
							from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
							siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
							siac_t_movgest_ts_det_mod moddet,
							siac_t_modifica mod, siac_r_modifica_stato rmodstato,
							siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
							siac_d_modifica_tipo tipom
						where rbil.elem_id=elemIdGestEq
						and rbil.elem_det_comp_tipo_id=impComponenteRec.compId --SIAC-7349
						and	  mov.movgest_id=rbil.movgest_id
						and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
						and   mov.movgest_anno=annoMovimento::integer
						and   mov.bil_id=bilancioId
						and   ts.movgest_id=mov.movgest_id
						and   rstato.movgest_ts_id=ts.movgest_ts_id
						and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- impegno non annullato
						and   tsdet.movgest_ts_id=ts.movgest_ts_id
						and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
						and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
					   and   tipom.mod_tipo_id=mod.mod_tipo_id
					   and   tipom.mod_tipo_code = 'ECONB'
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
					   group by ts.movgest_ts_tipo_id
					 ) tb, siac_d_movgest_ts_tipo tipo
					 where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					 order by tipo.movgest_ts_tipo_code desc
					 limit 1;

					 if importoModifINS is null then 
						importoModifINS = 0;
					 end if;


					end if;		
	
			--Fix MR adeguamento sprint5
			-- Non restituiamo piu' all'impegnato il valore delle modifiche negative provvisorie
			-- e delle economie ECONB
          		importoModifDelta:=0;
            		importoModifINS:=0;
	    
			elemDetCompId:=impComponenteRec.compId;
			elemdetcompdesc:=impComponenteRec.compDesc;
			elemdetcompmacrotipodesc:=impComponenteRec.compMacroTipoDesc;
			impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente  
			impegnatoDefinitivo:=impegnatoDefinitivo+impComponenteRec.importoCurAttuale-(importoModifDelta);
			--aggiunta per ECONB
			impegnatoDefinitivo:=impegnatoDefinitivo+abs(importoModifINS);
			return next;	



	end loop;
	end if;
	end if;

	return;
 

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
		return;
	when no_data_found then
		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
		return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
		return;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_impegnatodefinitivoug_comp_annisucc_nostanz(integer, INT[])
    OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatodefinitivoug_comp_annisucc_nostanz(integer, INT[]) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatodefinitivoug_comp_annisucc_nostanz(integer, INT[]) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatodefinitivoug_comp_annisucc_nostanz(integer, INT[]) TO siac;

--end fnc_siac_impegnatodefinitivoug_comp_annisucc_nostanz

--Start siac.fnc_siac_cons_entita_impegno_from_capitolospesa
DROP FUNCTION if exists siac.fnc_siac_cons_entita_impegno_from_capitolospesa(integer, character varying, character varying,integer,integer);
CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_impegno_from_capitolospesa(
	_uid_capitolospesa integer,
	_anno character varying,
	_filtro_crp character varying,
	_limit integer,
	_page integer)
    RETURNS TABLE(
        uid integer,
        impegno_anno integer,
        impegno_numero numeric,
        impegno_desc character varying,
        impegno_stato character varying,
        impegno_importo numeric,
        soggetto_code character varying,
        soggetto_desc character varying,
        attoamm_numero integer,
        attoamm_anno character varying,
        attoamm_desc character varying,
        attoamm_tipo_code character varying,
        attoamm_tipo_desc character varying,
        attoamm_stato_desc character varying,
        attoamm_sac_code character varying,
        attoamm_sac_desc character varying,
        pdc_code character varying,
        pdc_desc character varying,
        impegno_anno_capitolo integer,
        impegno_nro_capitolo integer,
        impegno_nro_articolo integer,
        impegno_flag_prenotazione character varying,
        impegno_cup character varying,
        impegno_cig character varying,
        impegno_tipo_debito character varying,
        impegno_motivo_assenza_cig character varying,
        --11.05.2020 SIAC-7349 SR210
        impegno_componente character varying
    )
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE
    ROWS 1000
AS $BODY$
DECLARE
	_offset INTEGER := (_page) * _limit;
BEGIN

	RETURN QUERY
		with imp_sogg_attoamm as (
			with imp_sogg as (
				select distinct
					soggall.uid,
					soggall.movgest_anno,
					soggall.movgest_numero,
					soggall.movgest_desc,
					soggall.movgest_stato_desc,
					soggall.movgest_ts_id,
					soggall.movgest_ts_det_importo,
					case when soggall.zzz_soggetto_code is null then soggall.zzzz_soggetto_code else soggall.zzz_soggetto_code end soggetto_code,
					case when soggall.zzz_soggetto_desc is null then soggall.zzzz_soggetto_desc else soggall.zzz_soggetto_desc end soggetto_desc,
					soggall.pdc_code,
					soggall.pdc_desc,
                    -- 29.06.2018 Sofia jira siac-6193
					soggall.impegno_nro_capitolo,
					soggall.impegno_nro_articolo,
					soggall.impegno_anno_capitolo,
                    soggall.impegno_flag_prenotazione,
                    soggall.impegno_cig,
  					soggall.impegno_cup,
                    soggall.impegno_motivo_assenza_cig,
            		soggall.impegno_tipo_debito,
                    -- 11.05.2020 SIAC-7349 SR210
                    soggall.impegno_componente

				from (
					with za as (
						select
							zzz.uid,
							zzz.movgest_anno,
							zzz.movgest_numero,
							zzz.movgest_desc,
							zzz.movgest_stato_desc,
							zzz.movgest_ts_id,
							zzz.movgest_ts_det_importo,
							zzz.zzz_soggetto_code,
							zzz.zzz_soggetto_desc,
							zzz.pdc_code,
							zzz.pdc_desc,
                            -- 29.06.2018 Sofia jira siac-6193
                            zzz.impegno_nro_capitolo,
                            zzz.impegno_nro_articolo,
                            zzz.impegno_anno_capitolo,
                            zzz.impegno_flag_prenotazione,
                            zzz.impegno_cig,
  							zzz.impegno_cup,
                            zzz.impegno_motivo_assenza_cig,
            				zzz.impegno_tipo_debito,
                            --11/05/2020 SIAC-7349 SR210
                            zzz.impegno_componente
						from (
							with impegno as (


								select
									a.movgest_id as uid,
									a.movgest_anno,
									a.movgest_numero,
									a.movgest_desc,
									e.movgest_stato_desc,
									c.movgest_ts_id,
									f.movgest_ts_det_importo,
									q.classif_code pdc_code,
									q.classif_desc pdc_desc,
                                    -- 29.06.2018 Sofia jira siac-6193
                                    bilelem.elem_code::integer impegno_nro_capitolo,
                                    bilelem.elem_code2::integer impegno_nro_articolo,
                                    t.anno::integer impegno_anno_capitolo,
                                    c.siope_assenza_motivazione_id,
                                    c.siope_tipo_debito_id,
                                    --11.05.2020 Mr SIAC-7349 SR210 tiro fuori l'id per la join con la tabella del tipo componente
                                    b.elem_det_comp_tipo_id
                                    --
								from
									siac_t_bil_elem bilelem,
									siac_t_movgest a,
									siac_r_movgest_bil_elem b,
									siac_r_movgest_ts_stato d,
									siac_d_movgest_stato e,
									siac_t_movgest_ts_det f,
									siac_d_movgest_ts_tipo j,
									siac_d_movgest_ts_det_tipo k,
									siac_r_movgest_class p,
									siac_t_class q,
									siac_d_class_tipo r,
									siac_t_bil s,
									siac_t_periodo t,
									siac_t_movgest_ts c
								where a.movgest_id=b.movgest_id
								and c.movgest_id=a.movgest_id
								and d.movgest_ts_id=c.movgest_ts_id
								and e.movgest_stato_id=d.movgest_stato_id
								and p.movgest_ts_id = c.movgest_ts_id
								and q.classif_id = p.classif_id
								and r.classif_tipo_id = q.classif_tipo_id
								and j.movgest_ts_tipo_id=c.movgest_ts_tipo_id
								and k.movgest_ts_det_tipo_id=f.movgest_ts_det_tipo_id
								and s.bil_id = a.bil_id
								and t.periodo_id = s.periodo_id
								and now() between d.validita_inizio and coalesce(d.validita_fine, now())
								and now() between b.validita_inizio and coalesce(b.validita_fine, now())
								and now() BETWEEN p.validita_inizio and COALESCE(p.validita_fine,now())
								and f.movgest_ts_id=c.movgest_ts_id
								and a.data_cancellazione is null
								and b.data_cancellazione is null
								and c.data_cancellazione is null
								and d.data_cancellazione is null
								and e.data_cancellazione is null
								and f.data_cancellazione is null
								and p.data_cancellazione is null
								and q.data_cancellazione is null
								and r.data_cancellazione is null
								and s.data_cancellazione is null
								and t.data_cancellazione is null
								and bilelem.data_cancellazione is null
								and e.movgest_stato_code<>'A'
								and j.movgest_ts_tipo_code='T'
								and k.movgest_ts_det_tipo_code='A'
								and r.classif_tipo_code in ('PDC_I','PCD_II', 'PDC_III', 'PDC_IV', 'PDC_V')
								and b.elem_id=bilelem.elem_id
								and bilelem.elem_id=_uid_capitolospesa
                                and t.anno = _anno
							),
							siope_assenza_motivazione as
                            (
								select
									d.siope_assenza_motivazione_id,
									d.siope_assenza_motivazione_code,
									d.siope_assenza_motivazione_desc
								from siac_d_siope_assenza_motivazione d
								where d.data_cancellazione is null
							),

							siope_tipo_debito as
                            (
								select
									d.siope_tipo_debito_id,
									d.siope_tipo_debito_code,
									d.siope_tipo_debito_desc
								from siac_d_siope_tipo_debito d
								where d.data_cancellazione is null
							),
							soggetto as
                            (
								select
									g.soggetto_code,
									g.soggetto_desc,
									h.movgest_ts_id
								from
									siac_t_soggetto g,
									siac_r_movgest_ts_sog h
								where h.soggetto_id=g.soggetto_id
								and now() between h.validita_inizio and coalesce(h.validita_fine, now())
								and g.data_cancellazione is null
								and h.data_cancellazione is null
							),
							impegno_flag_prenotazione as
                            (
								select
									r.movgest_ts_id,
									r.boolean
								from
									siac_r_movgest_ts_attr r,
									siac_t_attr t
								where r.attr_id = t.attr_id
								and now() between r.validita_inizio and coalesce(r.validita_fine, now())
								and r.data_cancellazione is null
								and t.data_cancellazione is null
								and t.attr_code = 'flagPrenotazione'
							),
							impegno_cig as
                            (
								select
									r.movgest_ts_id,
									r.testo
								from
									siac_r_movgest_ts_attr r,
									siac_t_attr t
								where r.attr_id = t.attr_id
								and now() between r.validita_inizio and coalesce(r.validita_fine, now())
								and r.data_cancellazione is null
								and t.data_cancellazione is null
								and t.attr_code = 'cig'
							),
							impegno_cup as
                            (
								select
									r.movgest_ts_id,
									r.testo
								from
									siac_r_movgest_ts_attr r,
									siac_t_attr t
								where r.attr_id = t.attr_id
								and now() between r.validita_inizio and coalesce(r.validita_fine, now())
								and r.data_cancellazione is null
								and t.data_cancellazione is null
								and t.attr_code = 'cup'
							),
                            --11.05.2020 SIAC-7349 MR SR210 lista di tutte le componenti
                            componente_desc AS
                            (
                                select * from 
                                siac_d_bil_elem_det_comp_tipo tipo
                                --where tipo.data_cancellazione is NULL --da discuterne. in questo caso prende solo le componenti non cancellate
                            )
							select
								impegno.uid,
								impegno.movgest_anno,
								impegno.movgest_numero,
								impegno.movgest_desc,
								impegno.movgest_stato_desc,
								impegno.movgest_ts_id,
								impegno.movgest_ts_det_importo,
								soggetto.soggetto_code zzz_soggetto_code,
								soggetto.soggetto_desc zzz_soggetto_desc,
								impegno.pdc_code,
								impegno.pdc_desc,
                                -- 29.06.2018 Sofia jira siac-6193
                                impegno.impegno_nro_capitolo,
                                impegno.impegno_nro_articolo,
                                impegno.impegno_anno_capitolo,
                                siope_assenza_motivazione.siope_assenza_motivazione_desc impegno_motivo_assenza_cig,
                                siope_tipo_debito.siope_tipo_debito_desc impegno_tipo_debito,
                                coalesce(impegno_flag_prenotazione.boolean,'N') impegno_flag_prenotazione,
                                impegno_cig.testo  impegno_cig,
                                impegno_cup.testo  impegno_cup,
                                --11.05.2020 MR SIAC-7349 SR210
                                componente_desc.elem_det_comp_tipo_desc impegno_componente
							from impegno
                              left outer join soggetto on impegno.movgest_ts_id=soggetto.movgest_ts_id
                              left outer join impegno_flag_prenotazione on impegno.movgest_ts_id=impegno_flag_prenotazione.movgest_ts_id
                              left outer join impegno_cig on impegno.movgest_ts_id=impegno_cig.movgest_ts_id
                              left outer join impegno_cup on impegno.movgest_ts_id=impegno_cup.movgest_ts_id
                              left outer join siope_assenza_motivazione on impegno.siope_assenza_motivazione_id=siope_assenza_motivazione.siope_assenza_motivazione_id
                              left outer join siope_tipo_debito on impegno.siope_tipo_debito_id=siope_tipo_debito.siope_tipo_debito_id
                              --11.05.2020 MR SIAC-7349 SR210
                              left outer join componente_desc on impegno.elem_det_comp_tipo_id=componente_desc.elem_det_comp_tipo_id
						) as zzz
					),
					zb as (
						select
							zzzz.uid,
							zzzz.movgest_anno,
							zzzz.movgest_numero,
							zzzz.movgest_desc,
							zzzz.movgest_stato_desc,
							zzzz.movgest_ts_id,
							zzzz.movgest_ts_det_importo,
							zzzz.soggetto_code zzzz_soggetto_code,
							zzzz.soggetto_desc zzzz_soggetto_desc
						from (
							with impegno as (
								select
									a.movgest_id as uid,
									a.movgest_anno,
									a.movgest_numero,
									a.movgest_desc,
									e.movgest_stato_desc,
									c.movgest_ts_id,
									f.movgest_ts_det_importo
								from
									siac_t_movgest a,
									siac_r_movgest_bil_elem b,
									siac_t_movgest_ts c,
									siac_r_movgest_ts_stato d,
									siac_d_movgest_stato e,
									siac_t_movgest_ts_det f,
									siac_d_movgest_ts_tipo j,
									siac_d_movgest_ts_det_tipo k,
									siac_t_bil l,
									siac_t_periodo m
								where a.movgest_id=b.movgest_id
								and c.movgest_id=a.movgest_id
								and d.movgest_ts_id=c.movgest_ts_id
								and e.movgest_stato_id=d.movgest_stato_id
								and j.movgest_ts_tipo_id=c.movgest_ts_tipo_id
								and k.movgest_ts_det_tipo_id=f.movgest_ts_det_tipo_id
								and l.bil_id = a.bil_id
								and m.periodo_id = l.periodo_id
								and now() between d.validita_inizio and coalesce(d.validita_fine, now())
								and now() between b.validita_inizio and coalesce(b.validita_fine, now())
								and f.movgest_ts_id=c.movgest_ts_id
								and a.data_cancellazione is null
								and b.data_cancellazione is null
								and c.data_cancellazione is null
								and d.data_cancellazione is null
								and e.data_cancellazione is null
								and f.data_cancellazione is null
								and e.movgest_stato_code<>'A'
								and j.movgest_ts_tipo_code='T'
								and k.movgest_ts_det_tipo_code='A'
								and b.elem_id=_uid_capitolospesa
								and m.anno = _anno
							),
							soggetto as (
                                select
									l.soggetto_classe_code soggetto_code,
									l.soggetto_classe_desc soggetto_desc,
									h.movgest_ts_id
								from
									siac_r_movgest_ts_sogclasse h,
									siac_d_soggetto_classe l
								where
								    h.soggetto_classe_id=l.soggetto_classe_id
                                and now() between h.validita_inizio and coalesce(h.validita_fine, now())
								and h.data_cancellazione is null
							)
							select
								impegno.uid,
								impegno.movgest_anno,
								impegno.movgest_numero,
								impegno.movgest_desc,
								impegno.movgest_stato_desc,
								impegno.movgest_ts_id,
								impegno.movgest_ts_det_importo,
								soggetto.soggetto_code,
								soggetto.soggetto_desc
							from impegno
							left outer join soggetto on impegno.movgest_ts_id=soggetto.movgest_ts_id
						) as zzzz
					)
					select
						za.*,
						zb.zzzz_soggetto_code,
						zb.zzzz_soggetto_desc
					from za
					left join zb on za.movgest_ts_id=zb.movgest_ts_id
				) soggall
			),

			attoamm as (
				select
					movgest_ts_id,
					n.attoamm_id,
					n.attoamm_numero,
					n.attoamm_anno,
                    --29.06.2018 Sofia jira siac-6193
                    n.attoamm_oggetto,
					q.attoamm_stato_desc,
					o.attoamm_tipo_code,
					o.attoamm_tipo_desc
				from
					siac_r_movgest_ts_atto_amm m,
					siac_t_atto_amm n,
					siac_d_atto_amm_tipo o,
					siac_r_atto_amm_stato p,
					siac_d_atto_amm_stato q
				where n.attoamm_id=m.attoamm_id
				and o.attoamm_tipo_id=n.attoamm_tipo_id
				and p.attoamm_id=n.attoamm_id
				and p.attoamm_stato_id=q.attoamm_stato_id
				and now() BETWEEN m.validita_inizio and coalesce (m.validita_fine,now())
				and now() BETWEEN p.validita_inizio and coalesce (p.validita_fine,now())
				and q.attoamm_stato_code<>'ANNULLATO'
				and m.data_cancellazione is null
				and n.data_cancellazione is null
				and o.data_cancellazione is null
				and p.data_cancellazione is null
				and q.data_cancellazione is null
			)
			select
				imp_sogg.uid,
				imp_sogg.movgest_anno,
				imp_sogg.movgest_numero,
				imp_sogg.movgest_desc,
				imp_sogg.movgest_stato_desc,
				imp_sogg.movgest_ts_det_importo,
				imp_sogg.soggetto_code,
				imp_sogg.soggetto_desc,
				attoamm.attoamm_id,
				attoamm.attoamm_numero,
				attoamm.attoamm_anno,
                -- 29.06.2018 Sofia jira siac-6193
                attoamm.attoamm_oggetto,
				attoamm.attoamm_tipo_code,
				attoamm.attoamm_tipo_desc,
				attoamm.attoamm_stato_desc,
				imp_sogg.pdc_code,
				imp_sogg.pdc_desc,
                -- 29.06.2018 Sofia jira siac-6193
                imp_sogg.impegno_nro_capitolo,
           		imp_sogg.impegno_nro_articolo,
           		imp_sogg.impegno_anno_capitolo,
                imp_sogg.impegno_flag_prenotazione,
                imp_sogg.impegno_cig,
                imp_sogg.impegno_cup,
                imp_sogg.impegno_motivo_assenza_cig,
                imp_sogg.impegno_tipo_debito,
                --11.05.2020 MR SIAC-7349 SR210
                imp_sogg.impegno_componente

			from imp_sogg

			 left outer join attoamm ON imp_sogg.movgest_ts_id=attoamm.movgest_ts_id
            where (case when coalesce(_filtro_crp,'X')='R' then imp_sogg.movgest_anno<_anno::integer
                     	when coalesce(_filtro_crp,'X')='C' then imp_sogg.movgest_anno=_anno::integer
                        when coalesce(_filtro_crp,'X')='P' then imp_sogg.movgest_anno>_anno::integer
		                else true end ) -- 29.06.2018 Sofia jira siac-6193
		),
		sac_attoamm as (
			select
				y.classif_code,
				y.classif_desc,
				z.attoamm_id
			from
				siac_r_atto_amm_class z,
				siac_t_class y,
				siac_d_class_tipo x
			where z.classif_id=y.classif_id
			and x.classif_tipo_id=y.classif_tipo_id
			and now() BETWEEN z.validita_inizio and coalesce (z.validita_fine,now())
			and x.classif_tipo_code  IN ('CDC', 'CDR')
			and z.data_cancellazione is NULL
			and x.data_cancellazione is NULL
			and y.data_cancellazione is NULL
		)
		select
			imp_sogg_attoamm.uid,
			imp_sogg_attoamm.movgest_anno as impegno_anno,
			imp_sogg_attoamm.movgest_numero as impegno_numero,
			imp_sogg_attoamm.movgest_desc as impegno_desc,
			imp_sogg_attoamm.movgest_stato_desc as impegno_stato,
			imp_sogg_attoamm.movgest_ts_det_importo as impegno_importo,
			imp_sogg_attoamm.soggetto_code,
			imp_sogg_attoamm.soggetto_desc,
			imp_sogg_attoamm.attoamm_numero,
			imp_sogg_attoamm.attoamm_anno,
            -- 29.06.2018 Sofia jira siac-6193
            imp_sogg_attoamm.attoamm_oggetto attoamm_desc,
			imp_sogg_attoamm.attoamm_tipo_code,
			imp_sogg_attoamm.attoamm_tipo_desc,
			imp_sogg_attoamm.attoamm_stato_desc,
			sac_attoamm.classif_code as attoamm_sac_code,
			sac_attoamm.classif_desc as attoamm_sac_desc,
			imp_sogg_attoamm.pdc_code,
			imp_sogg_attoamm.pdc_desc,
            -- 29.06.2018 Sofia jira siac-6193
            imp_sogg_attoamm.impegno_anno_capitolo,
            imp_sogg_attoamm.impegno_nro_capitolo,
            imp_sogg_attoamm.impegno_nro_articolo,
            imp_sogg_attoamm.impegno_flag_prenotazione::varchar,
			imp_sogg_attoamm.impegno_cup,
            imp_sogg_attoamm.impegno_cig,
            imp_sogg_attoamm.impegno_tipo_debito,
            imp_sogg_attoamm.impegno_motivo_assenza_cig,
            --11.05.2020 SIAC-7349 MR SR210
            imp_sogg_attoamm.impegno_componente
		from imp_sogg_attoamm
		left outer join sac_attoamm on imp_sogg_attoamm.attoamm_id=sac_attoamm.attoamm_id
		order by
			imp_sogg_attoamm.movgest_anno,
			imp_sogg_attoamm.movgest_numero


		LIMIT _limit
		OFFSET _offset;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_cons_entita_impegno_from_capitolospesa(integer, character varying, character varying, integer, integer)
    OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_cons_entita_impegno_from_capitolospesa(integer, character varying, character varying, integer, integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_cons_entita_impegno_from_capitolospesa(integer, character varying, character varying, integer, integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_cons_entita_impegno_from_capitolospesa(integer, character varying, character varying, integer, integer) TO siac;

--end siac.fnc_siac_cons_entita_impegno_from_capitolospesa

--Start fnc_siac_dicuiimpegnatoup_anno1
DROP FUNCTION if exists siac.fnc_siac_dicuiimpegnatoup_anno1(integer);
CREATE OR REPLACE FUNCTION siac.fnc_siac_dicuiimpegnatoup_anno1 (
  id_in integer
)
RETURNS numeric AS
$body$
DECLARE

diCuiImpegnato numeric:=0;
annoBilancio varchar:=null;

diCuiImpegnatoRec record;

strMessaggio varchar(1500):=null;
BEGIN

    strMessaggio:='Calcolo totale impegnato UP elem_id='||id_in||'.';

	strMessaggio:='Calcolo totale impegnato UP elem_id='||id_in||
    			  '.Lettura anno di bilancio.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;

	/* SIAC-7349 mantengo questa chiamata perche cosi' il default del parametro verifica_mod_provv = TRUE 
	 * forza la restituzione delle modifiche provvisorie al valore dicuiimpegnato
	 * che qui servira' per il calcolo della disponibilita' ad impegnare  */
    strMessaggio:='Calcolo totale impegnato UP elem_id='||id_in||'.';
    select * into diCuiImpegnatoRec
    from  fnc_siac_dicuiimpegnatoup_comp_anno (id_in,annoBilancio);
    
    diCuiImpegnato:=diCuiImpegnatoRec.diCuiImpegnato;


return diCuiImpegnato;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        diCuiImpegnato:=0;
        return diCuiImpegnato;
	when no_data_found then
		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        diCuiImpegnato:=0;
        return diCuiImpegnato;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        diCuiImpegnato:=0;
        return diCuiImpegnato;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100;


ALTER FUNCTION siac.fnc_siac_dicuiimpegnatoup_anno1 (id_in integer)
  OWNER TO siac;
  
--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_anno1(integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_anno1(integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_anno1(integer) TO siac;
--end fnc_siac_dicuiimpegnatoup_anno1


--Start fnc_siac_dicuiimpegnatoup_anno2
DROP FUNCTION if exists siac.fnc_siac_dicuiimpegnatoup_anno2(integer);
CREATE OR REPLACE FUNCTION siac.fnc_siac_dicuiimpegnatoup_anno2 (
  id_in integer
)
RETURNS numeric AS
$body$
DECLARE

diCuiImpegnato numeric:=0;
annoBilancio varchar:=null;

diCuiImpegnatoRec record;

strMessaggio varchar(1500):=null;
BEGIN

	strMessaggio:='Calcolo totale impegnato UP elem_id='||id_in||'.';

	strMessaggio:='Calcolo totale impegnato UP elem_id='||id_in||
    			  '.Lettura anno di bilancio.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;


	/* SIAC-7349 mantengo questa chiamata perche cosi' il default del parametro verifica_mod_provv = TRUE 
	 * forza la restituzione delle modifiche provvisorie al valore dicuiimpegnato
	 * che qui servira' per il calcolo della disponibilita' ad impegnare  */
	strMessaggio:='Calcolo totale impegnato UP elem_id='||id_in||'.';
	select * into diCuiImpegnatoRec
	from  fnc_siac_dicuiimpegnatoup_comp_anno (id_in, ((annoBilancio::integer)+1)::varchar);
	
    diCuiImpegnato:=diCuiImpegnatoRec.diCuiImpegnato;


return diCuiImpegnato;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        diCuiImpegnato:=0;
        return diCuiImpegnato;
   when no_data_found then
		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        diCuiImpegnato:=0;
        return diCuiImpegnato;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        diCuiImpegnato:=0;
        return diCuiImpegnato;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100;


ALTER FUNCTION siac.fnc_siac_dicuiimpegnatoup_anno2 (id_in integer)
  OWNER TO siac;
  
--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_anno2(integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_anno2(integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_anno2(integer) TO siac;

--end fnc_siac_dicuiimpegnatoup_anno2


--Start fnc_siac_dicuiimpegnatoup_anno3
DROP FUNCTION if exists siac.fnc_siac_dicuiimpegnatoup_anno3(integer);
CREATE OR REPLACE FUNCTION siac.fnc_siac_dicuiimpegnatoup_anno3 (
  id_in integer
)
RETURNS numeric AS
$body$
DECLARE

diCuiImpegnato numeric:=0;
annoBilancio varchar:=null;

diCuiImpegnatoRec record;

strMessaggio varchar(1500):=null;
BEGIN

    strMessaggio:='Calcolo totale impegnato UP elem_id='||id_in||'.';

	strMessaggio:='Calcolo totale impegnato UP elem_id='||id_in||
    			  '.Lettura anno di bilancio.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;

	/* SIAC-7349 mantengo questa chiamata perche cosi' il default del parametro verifica_mod_provv = TRUE 
	 * forza la restituzione delle modifiche provvisorie al valore dicuiimpegnato
	 * che qui servira' per il calcolo della disponibilita' ad impegnare  */
    strMessaggio:='Calcolo totale impegnato UP elem_id='||id_in||'.';
    select * into diCuiImpegnatoRec
    from  fnc_siac_dicuiimpegnatoup_comp_anno (id_in,((annoBilancio::INTEGER)+2)::varchar);
	
    diCuiImpegnato:=diCuiImpegnatoRec.diCuiImpegnato;


    return diCuiImpegnato;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        diCuiImpegnato:=0;
        return diCuiImpegnato;
    when no_data_found then
		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        diCuiImpegnato:=0;
        return diCuiImpegnato;

	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        diCuiImpegnato:=0;
        return diCuiImpegnato;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100;


ALTER FUNCTION siac.fnc_siac_dicuiimpegnatoup_anno3 (integer)
  OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_anno3(integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_anno3(integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_anno3(integer) TO siac;

--end fnc_siac_dicuiimpegnatoup_anno3

--Start fnc_siac_dicuiimpegnatoup_comp_anno
DROP FUNCTION if exists siac.fnc_siac_dicuiimpegnatoup_comp_anno ( integer,character varying);
CREATE OR REPLACE FUNCTION siac.fnc_siac_dicuiimpegnatoup_comp_anno (
  id_in integer,
  anno_in character varying,
  verifica_mod_prov boolean = true -- SIAC-7349 se true vengono restituite all'impegnato le modifiche provvisorie 
)
RETURNS TABLE (
  annocompetenza varchar,
  dicuiimpegnato numeric
) AS
$body$
DECLARE

-- constant
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
NVL_STR     constant varchar:='';
STA_IMP     constant varchar:='STA';

FASE_OP_BIL_PREV constant VARCHAR:='P';
STATO_ATTO_P constant varchar:='PROVVISORIO';
STATO_ATTO_D constant varchar:='DEFINITIVO';
STATO_MOD_V  constant varchar:='V';
TIPO_IMP    constant varchar:='I';
TIPO_IMP_T  constant varchar:='T';

STATO_DEF   constant varchar:='D';
STATO_N     constant varchar:='N';
STATO_P     constant varchar:='P';
STATO_A     constant varchar:='A';
IMPORTO_ATT constant varchar:='A';

strMessaggio varchar(1500):=NVL_STR;

attoAmmStatoDId integer:=0; -- SIAC-7349
attoAmmStatoPId integer:=0;-- SIAC-7349
bilancioId integer:=0;
enteProprietarioId INTEGER:=0;
annoBilancio varchar:=null;
modStatoVId integer:=0; -- SIAC-7349
movGestTipoId integer:=0;
movGestTsTipoId integer:=0;
movGestStatoId integer:=0;
movGestTsDetTipoId integer:=0;
movGestStatoIdProvvisorio integer:=0; -- SIAC-7349
movGestTsId integer:=0;

importoAttuale numeric:=0;
importoCurAttuale numeric:=0;
importoModifDelta  numeric:=0;
importoModifINS numeric:=0; -- SIAC-7349 --aggiunta per ECONB

movGestIdRec record;

elemTipoCode VARCHAR(20):=NVL_STR;
faseOpCode varchar(20):=NVL_STR;
elemCode varchar(50):=NVL_STR;
elemCode2 varchar(50):=NVL_STR;
elemCode3 varchar(50):=NVL_STR;

elemIdGestEq integer:=0;
bilIdElemGestEq integer:=0;

BEGIN


 annoCompetenza:=null;
 diCuiImpegnato:=0;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.Controllo parametri.';

 if anno_in is null or anno_in=NVL_STR then
	 RAISE EXCEPTION '% Anno di competenza mancante.',strMessaggio;
 end if;

 if id_in is null or id_in=0 then
	 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
 end if;


 strMessaggio:='Calcolo impegnato competenza UP elem_id='||id_in||'.';


 strMessaggio:='Calcolo impegnato competenza UP.Calcolo bilancioId e elem_tipo_code per elem_id='||id_in||'.';
 select bilelem.elem_code, bilElem.elem_code2, bilElem.elem_code3, bil.bil_id ,tipoBilElem.elem_tipo_code, per.anno , bil.ente_proprietario_id
       into strict elemCode, elemCode2, elemCode3, bilancioId, elemTipoCode , annoBilancio,enteProprietarioId
 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo tipoBilElem,
      siac_t_bil bil, siac_t_periodo per
 where bilElem.elem_id=id_in
   and bilElem.data_cancellazione is null
   and bilElem.validita_fine is null
   and tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
   and bil.bil_id=bilElem.bil_id
   and per.periodo_id=bil.periodo_id;

 if elemTipoCode is not null and elemTipoCode!=NVL_STR and elemTipoCode!=TIPO_CAP_UP then
        RAISE EXCEPTION '% elemTipoCode=%  non ammesso per tipo di calcolo.',strMessaggio,elemTipoCode;
 end if;


 strMessaggio:='Calcolo impegnato competenza UP.Calcolo fase operativa per bilancioId='||bilancioId
               ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

 select  faseOp.fase_operativa_code into  faseOpCode
 from siac_r_bil_fase_operativa bilFase, siac_d_fase_operativa faseOp
 where bilFase.bil_id =bilancioId
   and bilfase.data_cancellazione is null
   and bilFase.validita_fine is null
   and faseOp.fase_operativa_id=bilFase.fase_operativa_id
   and faseOp.data_cancellazione is null
 order by bilFase.bil_fase_operativa_id desc;

 if NOT FOUND THEN
   RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
 end if;


 strMessaggio:='Calcolo impegnato competenza UP.Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode
              ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
 -- lettura elemento bil di gestione equivalente
 if faseOpCode is not null and faseOpCode!=NVL_STR then
  	if  faseOpCode = FASE_OP_BIL_PREV then
      	-- lettura bilancioId annoBilancio precedente per lettura elemento di bilancio equivalente
            	select bil.bil_id into strict bilIdElemGestEq
                from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
                where per.anno=((annoBilancio::integer)-1)::varchar
                  and per.ente_proprietario_id=enteProprietarioId
                  and bil.periodo_id=per.periodo_id
                  and perTipo.periodo_tipo_id=per.periodo_tipo_id
                  and perTipo.periodo_tipo_code='SY';
    else
        	bilIdElemGestEq:=bilancioId;
    end if;
 else
	 RAISE EXCEPTION '% Fase non valida.',strMessaggio;
 end if;

 -- lettura elemIdGestEq
 strMessaggio:='Calcolo impegnato competenza UP.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
              ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

 select bilelem.elem_id into elemIdGestEq
 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
 where bilElem.elem_code=elemCode
   and bilElem.elem_code2=elemCode2
   and bilElem.elem_code3=elemCode3
   and bilElem.ente_proprietario_id=enteProprietarioId
   and bilElem.data_cancellazione is null
   and bilElem.validita_fine is null
   and bilElem.bil_id=bilIdElemGestEq
   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

if NOT FOUND THEN
else
 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'.Calcolo movGestTipoId.';
 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
 from  siac_d_movgest_tipo tipoMovGest
 where tipoMovGest.ente_proprietario_id=enteProprietarioId
 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'.Calcolo movGestTsTipoId.';
 select movGestTsTipo.movgest_ts_tipo_id into strict movGestTsTipoId
 from siac_d_movgest_ts_tipo movGestTsTipo
 where movGestTsTipo.ente_proprietario_id=enteProprietarioId
 and   movGestTsTipo.movgest_ts_tipo_code=TIPO_IMP_T;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
               ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'.Calcolo movGestTsStatoId.';

 select movGestStato.movgest_stato_id into strict movGestStatoId
 from siac_d_movgest_stato movGestStato
 where movGestStato.ente_proprietario_id=enteProprietarioId
 and   movGestStato.movgest_stato_code=STATO_A;

-- SIAC-7349 INIZIO
strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'. Calcolo attoAmmStatoPId per attoamm_stato_code=PROVVISORIO';
	  select d.attoamm_stato_id into strict attoAmmStatoPId
	  from siac_d_atto_amm_stato d
	  where d.ente_proprietario_id=enteProprietarioId
	  and d.attoamm_stato_code=STATO_ATTO_P;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'. Calcolo attoAmmStatoDId per attoamm_stato_code=DEFINTIVO';

	  select d.attoamm_stato_id into strict attoAmmStatoDId
	  from siac_d_atto_amm_stato d
	  where d.ente_proprietario_id=enteProprietarioId
	  and  d.attoamm_stato_code=STATO_ATTO_D;

	select  movGestStato.movgest_stato_id into strict movGestStatoIdProvvisorio
	  from siac_d_movgest_stato movGestStato
	  where movGestStato.ente_proprietario_id=enteProprietarioId
	  and   movGestStato.movgest_stato_code=STATO_P;

	select d.mod_stato_id into strict modStatoVId
	  from siac_d_modifica_stato d
	  where d.ente_proprietario_id=enteProprietarioId
	  and   d.mod_stato_code=STATO_MOD_V;
-- SIAC-7349 FINE 

    strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
               ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'.Calcolo movGestTsDetTipoId.';

 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
              ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'. Inizio ciclo per anno_in='||anno_in||'.';
 for movGestIdRec in
 (
     select movGestRel.movgest_id
     from siac_r_movgest_bil_elem movGestRel
     where movGestRel.elem_id=elemIdGestEq
     and   movGestRel.data_cancellazione is null
     and   exists (select 1 from siac_t_movgest movGest
   				   where movGest.movgest_id=movGestRel.movgest_id
			       and	 movGest.bil_id = bilIdElemGestEq
			       and   movGest.movgest_tipo_id=movGestTipoId
				   and   movGest.movgest_anno = anno_in::integer
                   and   movGest.data_cancellazione is null
                   and   movGest.validita_fine is null)
 )
 loop
   	importoCurAttuale:=0;

    strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
				      ||'.Per elemento gest equivalente elem_id='||elemIdGestEq
                      ||'.Calcolo impegnato anno_in='||anno_in
                      ||'.Lettura siac_t_movgest_ts movGestTs.movgest_id='||movGestIdRec.movgest_id||'.';

    select movgestts.movgest_ts_id into  movGestTsId
    from siac_t_movgest_ts movGestTs
    where movGestTs.movgest_id = movGestIdRec.movgest_id
    and   movGestTs.data_cancellazione is null
    and   movGestTs.movgest_ts_tipo_id=movGestTsTipoId
    and   exists (select 1 from siac_r_movgest_ts_stato movGestTsRel
                  where movGestTsRel.movgest_ts_id=movGestTs.movgest_ts_id
                  and   movGestTsRel.movgest_stato_id!=movGestStatoId
                  and   movGestTsRel.validita_fine is null
                  and   movGestTsRel.data_cancellazione is null);

    strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
				      ||'.Per elemento gest equivalente elem_id='||elemIdGestEq
                      ||'.Calcolo accertato anno_in='||anno_in||'.Somma siac_t_movgest_ts_det movGestTs.movgest_id='||movGestIdRec.movgest_id||'.';
    if NOT FOUND then
    else
       select coalesce(sum(movGestTsDet.movgest_ts_det_importo),0) into importoCurAttuale
           from siac_t_movgest_ts_det movGestTsDet
           where movGestTsDet.movgest_ts_id=movGestTsId
           and   movGestTsDet.movgest_ts_det_tipo_id=movGestTsDetTipoId;
	   -- SIAC-7349 INIZIO 
           if importoCurAttuale>=0 then
              ----------------
              select tb.importo into importoModifDelta
	          from
	          (
	          	select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
	          	from siac_r_movgest_bil_elem rbil,
	          	 	siac_t_movgest mov,
	          	 	siac_t_movgest_ts ts,
	          		siac_r_movgest_ts_stato rstato,
	          	  siac_t_movgest_ts_det tsdet,
	          		siac_t_movgest_ts_det_mod moddet,
	          		siac_t_modifica mod,
	          	 	siac_r_modifica_stato rmodstato,
	          		siac_r_atto_amm_stato attostato,
	          	 	siac_t_atto_amm atto,
	          		siac_d_modifica_tipo tipom
	          	where
	          		rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
	          		and	 mov.movgest_id=rbil.movgest_id
	          		and  mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
	          		and  mov.movgest_anno=anno_in::integer -- anno dell impegno = annoMovimento
	          		and  mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
	          		and  ts.movgest_id=mov.movgest_id
	          		and  rstato.movgest_ts_id=ts.movgest_ts_id
	          		and  rstato.movgest_stato_id!=movGestStatoId -- Impegno non ANNULLATO
	          		and  rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
	          	  and  tsdet.movgest_ts_id=ts.movgest_ts_id
	          		and  moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
	          		and  moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
	          	 	and   moddet.movgest_ts_det_importo<0 -- importo negativo
	          		and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
	          		and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
	          		and   mod.mod_id=rmodstato.mod_id
	          		and   atto.attoamm_id=mod.attoamm_id
	          		and   attostato.attoamm_id=atto.attoamm_id
	          		and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
	          		and   tipom.mod_tipo_id=mod.mod_tipo_id
	          		and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
	          		and rbil.data_cancellazione is null
	          		and rbil.validita_fine is null
	          		and mov.data_cancellazione is null
	          		and mov.validita_fine is null
	          		and ts.data_cancellazione is null
	          		and ts.validita_fine is null
	          		and rstato.data_cancellazione is null
	          		and rstato.validita_fine is null
	          		and tsdet.data_cancellazione is null
	          		and tsdet.validita_fine is null
	          		and moddet.data_cancellazione is null
	          		and moddet.validita_fine is null
	          		and mod.data_cancellazione is null
	          		and mod.validita_fine is null
	          		and rmodstato.data_cancellazione is null
	          		and rmodstato.validita_fine is null
	          		and attostato.data_cancellazione is null
	          		and attostato.validita_fine is null
	          		and atto.data_cancellazione is null
	          		and atto.validita_fine is null
	          		group by ts.movgest_ts_tipo_id
	          	  ) tb, siac_d_movgest_ts_tipo tipo
	          	  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
	          	  order by tipo.movgest_ts_tipo_code desc
	          	  limit 1;
	      	  -- 14.05.2020 Manuel - aggiunto parametro verifica_mod_prov
	          if importoModifDelta is null or verifica_mod_prov is false then importoModifDelta:=0; end if;

                  /*Aggiunta delle modifiche ECONB*/
		        -- anna_economie inizio
	          select tb.importo into importoModifINS
		                from
		                (
		                	select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
		                	from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
	                   	siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
		                  siac_t_movgest_ts_det_mod moddet,
	                   	siac_t_modifica mod, siac_r_modifica_stato rmodstato,
		                  siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
	                    siac_d_modifica_tipo tipom
		                where rbil.elem_id=elemIdGestEq
		                and	 mov.movgest_id=rbil.movgest_id
		                and  mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
	                  and  mov.movgest_anno=anno_in::integer
	                  and  mov.bil_id=bilancioId
		                and  ts.movgest_id=mov.movgest_id
		                and  rstato.movgest_ts_id=ts.movgest_ts_id
		                and  rstato.movgest_stato_id!=movGestStatoId -- impegno non annullato
		                and  tsdet.movgest_ts_id=ts.movgest_ts_id
		                and  moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
		                and  moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
		                and   moddet.movgest_ts_det_importo<0 -- importo negativo
		                and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
		                and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
		                and   mod.mod_id=rmodstato.mod_id
		                and   atto.attoamm_id=mod.attoamm_id
		                and   attostato.attoamm_id=atto.attoamm_id
		                and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
	                   and   tipom.mod_tipo_id=mod.mod_tipo_id
	                   and   tipom.mod_tipo_code = 'ECONB'
		                -- date
		                and rbil.data_cancellazione is null
		                and rbil.validita_fine is null
		                and mov.data_cancellazione is null
		                and mov.validita_fine is null
		                and ts.data_cancellazione is null
		                and ts.validita_fine is null
		                and rstato.data_cancellazione is null
		                and rstato.validita_fine is null
		                and tsdet.data_cancellazione is null
		                and tsdet.validita_fine is null
		                and moddet.data_cancellazione is null
		                and moddet.validita_fine is null
		                and mod.data_cancellazione is null
		                and mod.validita_fine is null
		                and rmodstato.data_cancellazione is null
		                and rmodstato.validita_fine is null
		                and attostato.data_cancellazione is null
		                and attostato.validita_fine is null
		                and atto.data_cancellazione is null
		                and atto.validita_fine is null
	                   group by ts.movgest_ts_tipo_id
	                  ) tb, siac_d_movgest_ts_tipo tipo
	                  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
	                  order by tipo.movgest_ts_tipo_code desc
	                  limit 1;

       			 if importoModifINS is null then
	 	            importoModifINS = 0;
	            end if;
            end if;
    end if;
  --importoAttuale:=importoAttuale+importoCurAttuale;
  importoAttuale:=importoAttuale+importoCurAttuale-(importoModifDelta);
  --aggiunta per ECONB
  importoAttuale:=importoAttuale+abs(importoModifINS);

 end loop;
end if;

annoCompetenza:=anno_in;
diCuiImpegnato:=importoAttuale;

return next;


exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return;
	when no_data_found then
	    RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100 ROWS 1000;


ALTER FUNCTION siac.fnc_siac_dicuiimpegnatoup_comp_anno (integer, varchar, boolean)
  OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_comp_anno (integer, varchar, boolean) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_comp_anno (integer, varchar, boolean) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoup_comp_anno (integer, varchar, boolean) TO siac;

--end fnc_siac_dicuiimpegnatoup_comp_anno

--Start fnc_siac_disponibilitavariare_anno1
DROP FUNCTION if exists siac.fnc_siac_disponibilitavariare_anno1(integer);
CREATE OR REPLACE FUNCTION siac.fnc_siac_disponibilitavariare_anno1(
	id_in integer)
    RETURNS numeric
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$
DECLARE

CAP_UG_TIPO constant varchar:='CAP-UG';
CAP_UP_TIPO constant varchar:='CAP-UP';

CAP_EG_TIPO constant varchar:='CAP-EG';
CAP_EP_TIPO constant varchar:='CAP-EP';

dispImpegnare numeric:=0;
dispAccertare numeric:=0;
dispVariare   numeric:=0;
annoBilancio  varchar:=null;
tipoCapitolo  varchar:=null;

stanzEffettivoRec record;
diCuiImpegnatoRec record;
diCuiAccertatoRec record;

strMessaggio varchar(1500):=null;
BEGIN

	strMessaggio:='Calcolo disponibile variare elem_id='||id_in||'.';

	strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
    			  '.Lettura anno di bilancio e tipo elemento bilancio.';
	select per.anno, tipo.elem_tipo_code into strict annoBilancio, tipoCapitolo
	from siac_t_bil_elem bilElem,siac_d_bil_elem_tipo tipo,
         siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in
    and   bilElem.data_cancellazione is null and bilElem.validita_fine is null
    and   tipo.elem_tipo_id=bilElem.elem_tipo_id
    and   bil.bil_id=bilElem.bil_id
    and   per.periodo_id=bil.periodo_id;

	case
      when tipoCapitolo=CAP_UP_TIPO then
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UP_TIPO||
    				  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
	    select * into stanzEffettivoRec
		from fnc_siac_stanz_effettivo_up_anno (id_in,annoBilancio);
		
		/* SIAC-7349 10:44
			sia per UP che per UG, il calcolo dell'impegnato ai fini del Calcolo della disponibilita' a variare
			dobbiamo restituire le ECONB ma non le modifiche negative provvisorie 
			-> modif<0 provvisorie non riconteggiate, danno disp. al capitolo
		*/
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UP_TIPO||
    	              '.Calcolo impegnato per anno='||annobilancio||'.';
	    select * into diCuiImpegnatoRec
    	-- SIAC-7349 from fnc_siac_dicuiimpegnatoup_comp_anno (id_in,annoBilancio);
   		from fnc_siac_dicuiimpegnatoup_comp_anno (id_in,annoBilancio,false);

        dispVariare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;
      when  tipoCapitolo=CAP_EP_TIPO then
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_EP_TIPO||
    				  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
	    select * into stanzEffettivoRec
		from fnc_siac_stanz_effettivo_ep_anno (id_in,annoBilancio);

		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_EP_TIPO||
    	              '.Calcolo accertato per anno='||annobilancio||'.';
	    select * into diCuiAccertatoRec
    	from fnc_siac_dicuiaccertatoep_comp_anno (id_in,annoBilancio);

        dispVariare:=stanzEffettivoRec.stanzEffettivo-diCuiAccertatoRec.diCuiAccertato;
      when tipoCapitolo=CAP_UG_TIPO then
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UG_TIPO||
    				  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
	    select * into stanzEffettivoRec
		from fnc_siac_stanz_effettivo_ug_anno (id_in,annoBilancio);

		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UG_TIPO||
    	              '.Calcolo impegnato per anno='||annobilancio||'.';
	    select * into diCuiImpegnatoRec
    	from fnc_siac_dicuiimpegnatoug_comp_anno (id_in,annoBilancio, false);
        dispVariare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;
      when tipoCapitolo=CAP_EG_TIPO then
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_EG_TIPO||
    				  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
	    select * into stanzEffettivoRec
		from fnc_siac_stanz_effettivo_eg_anno (id_in,annoBilancio);

		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_EG_TIPO||
    	              '.Calcolo accertato per anno='||annobilancio||'.';
	    select * into diCuiAccertatoRec
    	from fnc_siac_dicuiaccertatoeg_comp_anno (id_in,annoBilancio);

        dispVariare:=stanzEffettivoRec.stanzEffettivo-diCuiAccertatoRec.diCuiAccertato;
    end case;

return dispVariare;

exception
   when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return -1;
   when too_many_rows then
    	RAISE EXCEPTION '% Diversi records presenti in archivio.',strMessaggio;
        return -1;
    when no_data_found then
			RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return -1;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return -1;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_disponibilitavariare_anno1(integer)
    OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariare_anno1(integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariare_anno1(integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariare_anno1(integer) TO siac;
--end fnc_siac_disponibilitavariare_anno1


--Start fnc_siac_disponibilitavariare_anno2
DROP FUNCTION if exists siac.fnc_siac_disponibilitavariare_anno2(integer);
CREATE OR REPLACE FUNCTION siac.fnc_siac_disponibilitavariare_anno2(
	id_in integer)
    RETURNS numeric
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$
DECLARE

CAP_UG_TIPO constant varchar:='CAP-UG';
CAP_UP_TIPO constant varchar:='CAP-UP';

CAP_EG_TIPO constant varchar:='CAP-EG';
CAP_EP_TIPO constant varchar:='CAP-EP';

dispImpegnare numeric:=0;
dispAccertare numeric:=0;
dispVariare   numeric:=0;
annoBilancio  varchar:=null;
tipoCapitolo  varchar:=null;

stanzEffettivoRec record;
diCuiImpegnatoRec record;
diCuiAccertatoRec record;

strMessaggio varchar(1500):=null;
BEGIN

	strMessaggio:='Calcolo disponibile variare elem_id='||id_in||'.';

	strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
    			  '.Lettura anno di bilancio e tipo elemento bilancio.';
	select per.anno, tipo.elem_tipo_code into strict annoBilancio, tipoCapitolo
	from siac_t_bil_elem bilElem,siac_d_bil_elem_tipo tipo,
         siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in
    and   bilElem.data_cancellazione is null and bilElem.validita_fine is null
    and   tipo.elem_tipo_id=bilElem.elem_tipo_id
    and   bil.bil_id=bilElem.bil_id
    and   per.periodo_id=bil.periodo_id;

	annoBilancio:=((annoBilancio::INTEGER)+1)::varchar;

	case
      when tipoCapitolo=CAP_UP_TIPO then
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UP_TIPO||
    				  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
	    select * into stanzEffettivoRec
		from fnc_siac_stanz_effettivo_up_anno (id_in,annoBilancio);

		/* SIAC-7349 10:44
			sia per UP che per UG, il calcolo dell'impegnato ai fini del Calcolo della disponibilita' a variare
			dobbiamo restituire le ECONB ma non le modifiche negative provvisorie 
			-> modif<0 provvisorie non riconteggiate, danno disp. al capitolo
		*/
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UP_TIPO||
    	              '.Calcolo impegnato per anno='||annobilancio||'.';
	    select * into diCuiImpegnatoRec
    	from fnc_siac_dicuiimpegnatoup_comp_anno (id_in,annoBilancio, false);
--    	from fnc_siac_dicuiimpegnatoup_comp_anno (id_in,annoBilancio); -- SIAC-7349

        dispVariare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;
      when  tipoCapitolo=CAP_EP_TIPO then
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_EP_TIPO||
    				  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
	    select * into stanzEffettivoRec
		from fnc_siac_stanz_effettivo_ep_anno (id_in,annoBilancio);

		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_EP_TIPO||
    	              '.Calcolo accertato per anno='||annobilancio||'.';
	    select * into diCuiAccertatoRec
    	from fnc_siac_dicuiaccertatoep_comp_anno (id_in,annoBilancio);

        dispVariare:=stanzEffettivoRec.stanzEffettivo-diCuiAccertatoRec.diCuiAccertato;
      when tipoCapitolo=CAP_UG_TIPO then
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UG_TIPO||
    				  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
	    select * into stanzEffettivoRec
		from fnc_siac_stanz_effettivo_ug_anno (id_in,annoBilancio);

		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UG_TIPO||
    	              '.Calcolo impegnato per anno='||annobilancio||'.';
	    select * into diCuiImpegnatoRec
    	from fnc_siac_dicuiimpegnatoug_comp_anno (id_in,annoBilancio, false);
        dispVariare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;
      when tipoCapitolo=CAP_EG_TIPO then
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_EG_TIPO||
    				  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
	    select * into stanzEffettivoRec
		from fnc_siac_stanz_effettivo_eg_anno (id_in,annoBilancio);

		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_EG_TIPO||
    	              '.Calcolo accertato per anno='||annobilancio||'.';
	    select * into diCuiAccertatoRec
    	from fnc_siac_dicuiaccertatoeg_comp_anno (id_in,annoBilancio);

        dispVariare:=stanzEffettivoRec.stanzEffettivo-diCuiAccertatoRec.diCuiAccertato;
    end case;

return dispVariare;

exception
   when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return -1;
   when too_many_rows then
    	RAISE EXCEPTION '% Diversi records presenti in archivio.',strMessaggio;
        return -1;
   when no_data_found then
			RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return -1;
   when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return -1;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_disponibilitavariare_anno2(integer)
    OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariare_anno2(integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariare_anno2(integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariare_anno2(integer) TO siac;
--end fnc_siac_disponibilitavariare_anno2

--Start fnc_siac_disponibilitavariare_anno3
DROP FUNCTION if exists siac.fnc_siac_disponibilitavariare_anno3(integer);
CREATE OR REPLACE FUNCTION siac.fnc_siac_disponibilitavariare_anno3(
	id_in integer)
    RETURNS numeric
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
AS $BODY$
DECLARE

CAP_UG_TIPO constant varchar:='CAP-UG';
CAP_UP_TIPO constant varchar:='CAP-UP';

CAP_EG_TIPO constant varchar:='CAP-EG';
CAP_EP_TIPO constant varchar:='CAP-EP';

dispImpegnare numeric:=0;
dispAccertare numeric:=0;
dispVariare   numeric:=0;
annoBilancio  varchar:=null;
tipoCapitolo  varchar:=null;

stanzEffettivoRec record;
diCuiImpegnatoRec record;
diCuiAccertatoRec record;

strMessaggio varchar(1500):=null;
BEGIN

	strMessaggio:='Calcolo disponibile variare elem_id='||id_in||'.';

	strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
    			  '.Lettura anno di bilancio e tipo elemento bilancio.';
	select per.anno, tipo.elem_tipo_code into strict annoBilancio, tipoCapitolo
	from siac_t_bil_elem bilElem,siac_d_bil_elem_tipo tipo,
         siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in
    and   bilElem.data_cancellazione is null and bilElem.validita_fine is null
    and   tipo.elem_tipo_id=bilElem.elem_tipo_id
    and   bil.bil_id=bilElem.bil_id
    and   per.periodo_id=bil.periodo_id;

	annoBilancio:=((annoBilancio::INTEGER)+2)::varchar;

	case
      when tipoCapitolo=CAP_UP_TIPO then
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UP_TIPO||
    				  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
	    select * into stanzEffettivoRec
		from fnc_siac_stanz_effettivo_up_anno (id_in,annoBilancio);

		/* SIAC-7349 10:44
			sia per UP che per UG, il calcolo dell'impegnato ai fini del Calcolo della disponibilita' a variare
			dobbiamo restituire le ECONB ma non le modifiche negative provvisorie 
			-> modif<0 provvisorie non riconteggiate, danno disp. al capitolo
		*/
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UP_TIPO||
    	              '.Calcolo impegnato per anno='||annobilancio||'.';
	    select * into diCuiImpegnatoRec
    	from fnc_siac_dicuiimpegnatoup_comp_anno (id_in,annoBilancio, false); --SIAC-7349
		-- from fnc_siac_dicuiimpegnatoup_comp_anno (id_in,annoBilancio);

        dispVariare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;
      when  tipoCapitolo=CAP_EP_TIPO then
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_EP_TIPO||
    				  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
	    select * into stanzEffettivoRec
		from fnc_siac_stanz_effettivo_ep_anno (id_in,annoBilancio);

		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_EP_TIPO||
    	              '.Calcolo accertato per anno='||annobilancio||'.';
	    select * into diCuiAccertatoRec
    	from fnc_siac_dicuiaccertatoep_comp_anno (id_in,annoBilancio);

        dispVariare:=stanzEffettivoRec.stanzEffettivo-diCuiAccertatoRec.diCuiAccertato;
      when tipoCapitolo=CAP_UG_TIPO then
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UG_TIPO||
    				  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
	    select * into stanzEffettivoRec
		from fnc_siac_stanz_effettivo_ug_anno (id_in,annoBilancio);

		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_UG_TIPO||
    	              '.Calcolo impegnato per anno='||annobilancio||'.';
	    select * into diCuiImpegnatoRec
    	from fnc_siac_dicuiimpegnatoug_comp_anno (id_in,annoBilancio, false);

        dispVariare:=stanzEffettivoRec.stanzEffettivo-diCuiImpegnatoRec.diCuiImpegnato;
      when tipoCapitolo=CAP_EG_TIPO then
		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_EG_TIPO||
    				  '.Calcolo stanziamento effettivo per anno='||annoBilancio||'.';
	    select * into stanzEffettivoRec
		from fnc_siac_stanz_effettivo_eg_anno (id_in,annoBilancio);

		strMessaggio:='Calcolo disponibile variare elem_id='||id_in||
        	          'Tipo elemento di bilancio='||CAP_EG_TIPO||
    	              '.Calcolo accertato per anno='||annobilancio||'.';
	    select * into diCuiAccertatoRec
    	from fnc_siac_dicuiaccertatoeg_comp_anno (id_in,annoBilancio);

        dispVariare:=stanzEffettivoRec.stanzEffettivo-diCuiAccertatoRec.diCuiAccertato;
    end case;

return dispVariare;

exception
   when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return -1;
   when too_many_rows then
    	RAISE EXCEPTION '% Diversi records presenti in archivio.',strMessaggio;
        return 0;
   when no_data_found then
			RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return -1;
   when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return -1;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_disponibilitavariare_anno3(integer)
    OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariare_anno3(integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariare_anno3(integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_disponibilitavariare_anno3(integer) TO siac;
--end fnc_siac_disponibilitavariare_anno3

--Start fnc_siac_impegnatodefinitivoup_comp_annisucc_nostanz
/*
*SPDX-FileCopyrightText: Copyright 2020 | CSI Piemonte
*SPDX-License-Identifier: EUPL-1.2
*/
-- DROP FUNCTION fnc_siac_impegnatodefinitivoup_comp_annisucc_nostanz(integer,integer[]);
CREATE OR REPLACE FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp_annisucc_nostanz (
  id_in integer,
  idcomp_in INT [])
RETURNS TABLE (
  elemdetcompid integer,
  elemdetcompdesc character varying,
  impegnatodefinitivo numeric,
  elemdetcompmacrotipodesc character varying
) AS
$body$
DECLARE


annoBilancio varchar:=null;
annoEsercizio varchar:=null;
annoMovimento varchar:=null;

elemIdGestEq integer:=0;
bilIdElemGestEq integer:=0;
NVL_STR     constant varchar:='';
faseOpCode varchar(20):=NVL_STR;
bilancioId integer:=0;
elemTipoCode VARCHAR(20):=NVL_STR;
elemCode varchar(50):=NVL_STR;
elemCode2 varchar(50):=NVL_STR;
elemCode3 varchar(50):=NVL_STR;
enteProprietarioId INTEGER:=0;
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
FASE_OP_BIL_PREV constant VARCHAR:='P';
STATO_A     constant varchar:='A';
STATO_P     constant varchar:='P';
TIPO_IMP    constant varchar:='I';
movGestStatoIdAnnullato integer:=0;
movGestStatoIdProvvisorio integer:=0;
movGestTipoId integer:=0;
IMPORTO_ATT constant varchar:='A';
movGestTsDetTipoId integer:=0;
IMPORTO_INIZIALE constant varchar:='I';
movGestTsDetTipoIdIniziale integer:=0;
STATO_MOD_V  constant varchar:='V';
modStatoVId integer:=0;
attoAmmStatoPId integer:=0;
STATO_ATTO_P constant varchar:='PROVVISORIO';
STATO_ATTO_D constant varchar:='DEFINITIVO';
attoAmmStatoDId integer:=0;
importoCurAttuale numeric:=0;
esisteRmovgestidelemid INTEGER:=0;
importoModifDelta  numeric:=0;
importoModifINS numeric:=0; --aggiunta per ECONB
impegniDaRibaltamento integer:=0;
pluriennaliDaRibaltamento integer:=0;
flagNMaggioreNPiu2 integer:=0;
flagDeltaPagamenti integer:=0;
importoImpegnato numeric:=0;
importoPagatoDelta numeric:=0;
ordStatoAId          integer:=null;
ordTsDetTipoAId      integer:=null;
-- stati ordinativi
STATO_ORD_A    constant varchar:='A'; -- ANNULLATO
-- importoAttuale ordinativi
ORD_TS_DET_TIPO_A  constant varchar:='A';

sidcomp_in  varchar:=null;
strMessaggio varchar(1500):=null;

impComponenteRec record;

BEGIN

/* Calcola impegnato definitivo per quelle componenti per le quali pur non essendoci stanziamento
 * esistono quote di impegnato nell'anno > N+2 
 * Le componenti per le quali esiste stanziamento (e quindi da non considerare) sono passate in input nell'array idcomp_in
 * NOTA: per problemi Java/Hibernate idcomp_in non puo' essere un array vuoto, quindi 
 *		l'array in input conterra' sempre la componente fittizia idcomp = -1
 */
-- CALCOLO IMPEGNATO DEFINITIVO 
-- Stiamo sempre parlando di impegnato sul capitolo di gestione equivalente	

	sidcomp_in:=array_to_string(idcomp_in, ',');
    	strMessaggio:='Calcolo totale impegnato definitovo elem_id='||id_in|| ' escludo idcomp_in='||sidcomp_in|| '.';

	-- Controllo parametri in input
	if id_in is null or id_in=0 then
		 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
	end if;
 
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in||
    			  '.Lettura anno di bilancio del capitolo UP.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;
		  

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in||
    			  '. Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId e elem_tipo_code.';
	 select bilelem.elem_code, bilElem.elem_code2, bilElem.elem_code3, bil.bil_id ,tipoBilElem.elem_tipo_code, per.anno , bil.ente_proprietario_id
	 into strict elemCode, elemCode2, elemCode3, bilancioId, elemTipoCode , annoBilancio,enteProprietarioId
	 from 	siac_t_bil_elem bilElem, 
	 		siac_d_bil_elem_tipo tipoBilElem,
		  	siac_t_bil bil, siac_t_periodo per
	 where bilElem.elem_id=id_in
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
	   and bil.bil_id=bilElem.bil_id
	   and per.periodo_id=bil.periodo_id;

	 if elemTipoCode is not null and elemTipoCode!=NVL_STR and elemTipoCode!=TIPO_CAP_UP then
			RAISE EXCEPTION '% elemTipoCode=%  non ammesso per tipo di calcolo.',strMessaggio,elemTipoCode;
	 end if;

	 strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in||
				   '. Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   'Calcolo fase operativa per bilancioId='||bilancioId
				   ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select  faseOp.fase_operativa_code into  faseOpCode
	 from siac_r_bil_fase_operativa bilFase, siac_d_fase_operativa faseOp
	 where bilFase.bil_id =bilancioId
	   and bilfase.data_cancellazione is null
	   and bilFase.validita_fine is null
	   and faseOp.fase_operativa_id=bilFase.fase_operativa_id
	   and faseOp.data_cancellazione is null
	 order by bilFase.bil_fase_operativa_id desc;

	 if NOT FOUND THEN
	   RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
	 end if;

	 strMessaggio:='Calcolo impegnato definitivo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTipoId per movgest_tipo_code=IMPEGNO';
	 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
	 from  siac_d_movgest_tipo tipoMovGest
	 where tipoMovGest.ente_proprietario_id=enteProprietarioId
	 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTsStatoIdAnnullato per movgest_stato_code=ANNULLATO'
				  ||'. Calcolo movGestTsStatoIdProvvisorio per movgest_stato_code=PROVVISORIO';

	 select movGestStato.movgest_stato_id into strict movGestStatoIdAnnullato
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_A;

	 select  movGestStato.movgest_stato_id into strict movGestStatoIdProvvisorio
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_P; 
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTsDetTipoId per movgest_ts_det_tipo_code=IMPORTO ATTUALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTsDetTipoIdIniziale per movgest_ts_det_tipo_code=IMPORTO INIZIALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoIdIniziale
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_INIZIALE;
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
              ||'. Calcolo modStatoVId per mod_stato_code=VALIDO.';
	 select d.mod_stato_id into strict modStatoVId
	 from siac_d_modifica_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.mod_stato_code=STATO_MOD_V;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo attoAmmStatoPId per attoamm_stato_code=PROVVISORIO';
	 select d.attoamm_stato_id into strict attoAmmStatoPId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_P;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo attoAmmStatoDId per attoamm_stato_code=DEFINITIVO';
	 select d.attoamm_stato_id into strict attoAmmStatoDId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_D;

 	-- Calcolo Impegnato definitivo - Anno > N+2:
	-- - Se presenti i movimenti gestione provenienti dal ribaltamento 
	--		Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente e anno movimento > N+2 e anno esercizio N
	-- - Se non presenti i movimenti gestione provenienti dal ribaltamento 
	-- 		Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente e anno movimento > N+2 e anno esercizio N-1
	-- Il capitolo usato per determinare gli impegni   quello UG Equivalente 

	-- Verifica se presenti i movimenti di gestione provenienti dal ribaltamento
	-- Per "ribaltamento" si intende  il batch di ribaltamento residui che gira prima del ROR 
	--	e che "copia" gli impegni dell'anno N-1 nel bilancio dell'anno N (di solito il 2 gennaio)
	-- Per verificare che il batch di ribaltamento sia stato eseguito controllo le seguenti tabelle
	-- 		fase_bil_t_gest_apertura_liq_imp per gli impegni residui
	--  	fase_bil_t_gest_apertura_pluri per i pluriennli (sia impegni che accertamenti)
	-- In entrambe c'e' sia il bil_id che il bil_id_orig ovvero l'anno nuovo su cui si stanno ribaltando i movimenti e l'anno prec
	-- c'e' anche un campo fl_elab che ti dice se i dati sono stati elaborati con scarto o con successo 

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in||
				 '.Verifica se presenti i movimenti di gestione provenienti dal ribaltamento per anno di esercizio N.';
	
	impegniDaRibaltamento:=0;
	pluriennaliDaRibaltamento:=0;
	importoCurAttuale:=0;	
	importoModifDelta:=0;
	importoModifINS := 0;
	
	select  count(*) into impegniDaRibaltamento 
	from fase_bil_t_gest_apertura_liq_imp fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;

	select  count(*) into  pluriennaliDaRibaltamento
	from fase_bil_t_gest_apertura_pluri fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;
				
	if impegniDaRibaltamento>0 and pluriennaliDaRibaltamento>0 then

	-- - Se presenti i movimenti gestione provenienti dal ribaltamento 
	-- ImpegnatoDefinitivo = Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in 
	-- e anno movimento > N+2 e anno esercizio N

		annoEsercizio:=annoBilancio;
		annoMovimento:=((annoBilancio::INTEGER)+2)::varchar;
		flagNMaggioreNPiu2:=1;
	else

		-- - Se non presenti i movimenti gestione provenienti dal ribaltamento 
		-- 	ImpegnatoDefinitivo = Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in 
		-- 	e anno movimento > N+2 e anno esercizio N-1

		annoEsercizio:=((annoBilancio::INTEGER)-1)::varchar;
		annoMovimento:=((annoBilancio::INTEGER)+2)::varchar;
		flagNMaggioreNPiu2:=1;
	end if;
	
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in||
				   '.Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    	-- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo impegnato competenza UP.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else
	
		strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento|| 
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid 
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno>annoMovimento::integer 
			and NOT (el.elem_det_comp_tipo_id = ANY( idcomp_in)) --SIAC-7349
			;
		
		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;
	
		if esisteRmovgestidelemid <>0 then
 			impegnatoDefinitivo:=0;
			strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

/*			importoCurAttuale:=0;			
			select tb.importo into importoCurAttuale
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
				  NOT ( a.elem_det_comp_tipo_id = ANY( idcomp_in))--SIAC-7349 non deve essere sulla componente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno > annoMovimento::integer -- anno dell impegno > annoMovimento 
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		
*/

			/* Versione con group by per le componenti non da escludere e ciclo per ogni componente */
			for impComponenteRec in
			 (
				select tb.elem_det_comp_tipo_id as compId, 
				 g.elem_det_comp_tipo_desc as compDesc, 
				 tb.importo as importoCurAttuale,
				 h.elem_det_comp_macro_tipo_desc as compMacroTipoDesc 
				 -- tb.importo into importoCurAttuale
				from (
				  select
					  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id, a.elem_det_comp_tipo_id
				  from
					  siac_r_movgest_bil_elem a,
					  siac_t_movgest b,
					  siac_t_movgest_ts c,
					  siac_r_movgest_ts_stato d,
					  siac_t_movgest_ts_det e,
					  siac_d_movgest_ts_det_tipo f
				  where
					  b.movgest_id=a.movgest_id 
					  and a.elem_id=elemIdGestEq 
					  and NOT( a.elem_det_comp_tipo_id = ANY(idcomp_in)) --SIAC-7349 --id componente diversa da quella ricevuta in input
					  and b.bil_id = bilIdElemGestEq
					  and b.movgest_tipo_id=movGestTipoId
					  and d.movgest_stato_id<>movGestStatoIdAnnullato
					  -- SIAC-7737 GS 31/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				      -- and d.movgest_stato_id<>movGestStatoIdProvvisorio
					  and b.movgest_anno > annoMovimento::integer -- per gli anni oltre N+2
					  and c.movgest_id=b.movgest_id
					  and d.movgest_ts_id=c.movgest_ts_id
					  and d.validita_fine is null
					  and e.movgest_ts_id=c.movgest_ts_id
					  and a.data_cancellazione is null
					  and b.data_cancellazione is null
					  and c.data_cancellazione is null
					  and e.data_cancellazione is null
					  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
					  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId
					  group by 	c.movgest_ts_tipo_id, 
								a.elem_det_comp_tipo_id -- SIAC-7349
						) tb, 
					siac_d_movgest_ts_tipo t,
					siac_d_bil_elem_det_comp_tipo g,
				 	siac_d_bil_elem_det_comp_macro_tipo h
				where 
					tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
					and g.elem_det_comp_tipo_id = tb.elem_det_comp_tipo_id --SIAC-7349 recupera anche la descrizione della componente
					and g.elem_det_comp_macro_tipo_id = h.elem_det_comp_macro_tipo_id --SIAC-7349 recupera anche la descrizione del macrotipo della componente
				 order by t.movgest_ts_tipo_code desc
 			) 
			loop
			

					-- 02.02.2016 Sofia JIRA 2947
					 if impComponenteRec.importoCurAttuale is null then impComponenteRec.importoCurAttuale:=0; end if;

					 -- 16.03.2017 Sofia JIRA-SIAC-4614
					-- if importoCurAttuale>0 then
					 if impComponenteRec.importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

						strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'  impComponenteRec.compId='||impComponenteRec.compId||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Calcolo totale modifiche su atti provvisori per annoMovimento='||annoMovimento||'.';

						select tb.importo into importoModifDelta
						 from
						 (
							select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
							from siac_r_movgest_bil_elem rbil, 
								 siac_t_movgest mov,
								 siac_t_movgest_ts ts,
								 siac_r_movgest_ts_stato rstato,
								 siac_t_movgest_ts_det tsdet,
								 siac_t_movgest_ts_det_mod moddet,
								 siac_t_modifica mod, 
								 siac_r_modifica_stato rmodstato,
								 siac_r_atto_amm_stato attostato, 
								 siac_t_atto_amm atto,
								 siac_d_modifica_tipo tipom
							where 
								rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
								and rbil.elem_det_comp_tipo_id=impComponenteRec.compId --SIAC-7349 deve essere sulla compoenente del record 
								and	  mov.movgest_id=rbil.movgest_id
								and   mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
								and   mov.movgest_anno>annoMovimento::integer -- anno dell impegno = annoMovimento 
								and   mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
								and   ts.movgest_id=mov.movgest_id
								and   rstato.movgest_ts_id=ts.movgest_ts_id
								and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- Impegno non ANNULLATO
								-- SIAC-7737 GS 31/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
							    -- and   rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
								and   tsdet.movgest_ts_id=ts.movgest_ts_id
								and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
								and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
								-- SIAC-7349 Prendo tutti gli importi, sia con segno negativo che con segno positivo
								-- La loro somma produce il valore importoModifDelta che devo sottrarre all'impegnato calcolato
								-- ad esempio: modifiche su atto provv +100, -322 -> somma -222 si tratta di un delta che devo sottrarre
								-- all'impegnato calcolato = impegnato calcolato - (-222) = +222 (aggiungo quello che avevo tolto)
								-- and   moddet.movgest_ts_det_importo<0 -- importo negativo
								and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
								and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
								and   mod.mod_id=rmodstato.mod_id
								and   atto.attoamm_id=mod.attoamm_id
								and   attostato.attoamm_id=atto.attoamm_id
								and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
								and   tipom.mod_tipo_id=mod.mod_tipo_id
								and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
								-- date
								and rbil.data_cancellazione is null
								and rbil.validita_fine is null
								and mov.data_cancellazione is null
								and mov.validita_fine is null
								and ts.data_cancellazione is null
								and ts.validita_fine is null
								and rstato.data_cancellazione is null
								and rstato.validita_fine is null
								and tsdet.data_cancellazione is null
								and tsdet.validita_fine is null
								and moddet.data_cancellazione is null
								and moddet.validita_fine is null
								and mod.data_cancellazione is null
								and mod.validita_fine is null
								and rmodstato.data_cancellazione is null
								and rmodstato.validita_fine is null
								and attostato.data_cancellazione is null
								and attostato.validita_fine is null
								and atto.data_cancellazione is null
								and atto.validita_fine is null
								group by ts.movgest_ts_tipo_id
							  ) tb, siac_d_movgest_ts_tipo tipo
							  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
							  order by tipo.movgest_ts_tipo_code desc
							  limit 1;		

						if importoModifDelta is null then importoModifDelta:=0; end if;
						  /*Aggiunta delle modifiche ECONB*/
						 -- anna_economie inizio
						select tb.importo into importoModifINS
						from
						(
							select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
							from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
							siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
							siac_t_movgest_ts_det_mod moddet,
							siac_t_modifica mod, siac_r_modifica_stato rmodstato,
							siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
							siac_d_modifica_tipo tipom
						where rbil.elem_id=elemIdGestEq
						and rbil.elem_det_comp_tipo_id=impComponenteRec.compId --SIAC-7349
						and	  mov.movgest_id=rbil.movgest_id
						and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
						and   mov.movgest_anno=annoMovimento::integer
						and   mov.bil_id=bilancioId
						and   ts.movgest_id=mov.movgest_id
						and   rstato.movgest_ts_id=ts.movgest_ts_id
						and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- impegno non annullato
						and   tsdet.movgest_ts_id=ts.movgest_ts_id
						and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
						and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
					   and   tipom.mod_tipo_id=mod.mod_tipo_id
					   and   tipom.mod_tipo_code = 'ECONB'
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
					   group by ts.movgest_ts_tipo_id
					 ) tb, siac_d_movgest_ts_tipo tipo
					 where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					 order by tipo.movgest_ts_tipo_code desc
					 limit 1;

					 if importoModifINS is null then 
						importoModifINS = 0;
					 end if;


					end if;		
	
			--Fix MR adeguamento sprint 5
			-- Mon restituiamo piu' al valore impegnato le modifiche provvisorie e le ECONB
           		importoModifDelta:=0;
            		importoModifINS:=0;
            --
			elemDetCompId:=impComponenteRec.compId;
			elemdetcompdesc:=impComponenteRec.compDesc;
			elemdetcompmacrotipodesc:=impComponenteRec.compMacroTipoDesc;
			impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente  
			impegnatoDefinitivo:=impegnatoDefinitivo+impComponenteRec.importoCurAttuale-(importoModifDelta);
			--aggiunta per ECONB
			impegnatoDefinitivo:=impegnatoDefinitivo+abs(importoModifINS);
			return next;	



	end loop;
	end if;
	end if;

	return;
 

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
		return;
	when no_data_found then
		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
		return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
		return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100 ROWS 1000;


ALTER FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp_annisucc_nostanz (id_in integer, idcomp_in integer [])
  OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp_annisucc_nostanz (id_in integer, idcomp_in integer []) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp_annisucc_nostanz (id_in integer, idcomp_in integer []) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp_annisucc_nostanz (id_in integer, idcomp_in integer []) TO siac;
-- end fnc_siac_impegnatodefinitivoup_comp_annisucc_nostanz

--Start fnc_siac_impegnatodefinitivoup_comp

CREATE OR REPLACE FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp (
  id_in integer,
  idcomp_in integer
)
RETURNS TABLE (
  indiceannualita integer,
  elemdetcompid integer,
  impegnatodefinitivo numeric
) AS
$body$
DECLARE

annoBilancio varchar:=null;
annoEsercizio varchar:=null;
annoMovimento varchar:=null;

elemIdGestEq integer:=0;
bilIdElemGestEq integer:=0;
NVL_STR     constant varchar:='';
faseOpCode varchar(20):=NVL_STR;
bilancioId integer:=0;
elemTipoCode VARCHAR(20):=NVL_STR;
elemCode varchar(50):=NVL_STR;
elemCode2 varchar(50):=NVL_STR;
elemCode3 varchar(50):=NVL_STR;
enteProprietarioId INTEGER:=0;
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
FASE_OP_BIL_PREV constant VARCHAR:='P';
STATO_A     constant varchar:='A';
STATO_P     constant varchar:='P';
TIPO_IMP    constant varchar:='I';
movGestStatoIdAnnullato integer:=0;
movGestStatoIdProvvisorio integer:=0;
movGestTipoId integer:=0;
IMPORTO_ATT constant varchar:='A';
movGestTsDetTipoId integer:=0;
IMPORTO_INIZIALE constant varchar:='I';
movGestTsDetTipoIdIniziale integer:=0;
STATO_MOD_V  constant varchar:='V';
modStatoVId integer:=0;
attoAmmStatoPId integer:=0;
STATO_ATTO_P constant varchar:='PROVVISORIO';
STATO_ATTO_D constant varchar:='DEFINITIVO';
attoAmmStatoDId integer:=0;
importoCurAttuale numeric:=0;
esisteRmovgestidelemid INTEGER:=0;
importoModifDelta  numeric:=0;
importoModifINS numeric:=0; --aggiunta per ECONB
impegniDaRibaltamento integer:=0;
pluriennaliDaRibaltamento integer:=0;
flagNMaggioreNPiu2 integer:=0;
flagDeltaPagamenti integer:=0;
importoImpegnato numeric:=0;
importoPagatoDelta numeric:=0;
ordStatoAId          integer:=null;
ordTsDetTipoAId      integer:=null;
-- stati ordinativi
STATO_ORD_A    constant varchar:='A'; -- ANNULLATO
-- importoAttuale ordinativi
ORD_TS_DET_TIPO_A  constant varchar:='A';

strMessaggio varchar(1500):=null;
BEGIN

    strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in|| 'idcomp_in='||idcomp_in|| '.';

	-- Controllo parametri in input
	if id_in is null or id_in=0 then
		 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
	end if;
	if idcomp_in is null or idcomp_in=0 then
		 RAISE EXCEPTION '% Identificativo componente mancante.',strMessaggio;
	end if;
 
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
    			  '.Lettura anno di bilancio del capitolo UP.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;
		  

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
    			  '. Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId e elem_tipo_code.';
	 select bilelem.elem_code, bilElem.elem_code2, bilElem.elem_code3, bil.bil_id ,tipoBilElem.elem_tipo_code, per.anno , bil.ente_proprietario_id
	 into strict elemCode, elemCode2, elemCode3, bilancioId, elemTipoCode , annoBilancio,enteProprietarioId
	 from 	siac_t_bil_elem bilElem, 
	 		siac_d_bil_elem_tipo tipoBilElem,
		  	siac_t_bil bil, siac_t_periodo per
	 where bilElem.elem_id=id_in
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
	   and bil.bil_id=bilElem.bil_id
	   and per.periodo_id=bil.periodo_id;

	 if elemTipoCode is not null and elemTipoCode!=NVL_STR and elemTipoCode!=TIPO_CAP_UP then
			RAISE EXCEPTION '% elemTipoCode=%  non ammesso per tipo di calcolo.',strMessaggio,elemTipoCode;
	 end if;

	 strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				   '. Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   'Calcolo fase operativa per bilancioId='||bilancioId
				   ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select  faseOp.fase_operativa_code into  faseOpCode
	 from siac_r_bil_fase_operativa bilFase, siac_d_fase_operativa faseOp
	 where bilFase.bil_id =bilancioId
	   and bilfase.data_cancellazione is null
	   and bilFase.validita_fine is null
	   and faseOp.fase_operativa_id=bilFase.fase_operativa_id
	   and faseOp.data_cancellazione is null
	 order by bilFase.bil_fase_operativa_id desc;

	 if NOT FOUND THEN
	   RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
	 end if;

	 strMessaggio:='Calcolo impegnato definitivo elem_id='||id_in||'idcomp_in='||idcomp_in
				  ||'. Calcolo movGestTipoId per movgest_tipo_code=IMPEGNO';
	 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
	 from  siac_d_movgest_tipo tipoMovGest
	 where tipoMovGest.ente_proprietario_id=enteProprietarioId
	 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||idcomp_in
				  ||'. Calcolo movGestTsStatoIdAnnullato per movgest_stato_code=ANNULLATO'
				  ||'. Calcolo movGestTsStatoIdProvvisorio per movgest_stato_code=PROVVISORIO';

	 select movGestStato.movgest_stato_id into strict movGestStatoIdAnnullato
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_A;

	 select  movGestStato.movgest_stato_id into strict movGestStatoIdProvvisorio
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_P; 
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||idcomp_in
				  ||'. Calcolo movGestTsDetTipoId per movgest_ts_det_tipo_code=IMPORTO ATTUALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||idcomp_in
				  ||'. Calcolo movGestTsDetTipoIdIniziale per movgest_ts_det_tipo_code=IMPORTO INIZIALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoIdIniziale
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_INIZIALE;
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||idcomp_in
              ||'. Calcolo modStatoVId per mod_stato_code=VALIDO.';
	 select d.mod_stato_id into strict modStatoVId
	 from siac_d_modifica_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.mod_stato_code=STATO_MOD_V;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||idcomp_in
				  ||'. Calcolo attoAmmStatoPId per attoamm_stato_code=PROVVISORIO';
	 select d.attoamm_stato_id into strict attoAmmStatoPId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_P;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||idcomp_in
				  ||'. Calcolo attoAmmStatoDId per attoamm_stato_code=DEFINITIVO';
	 select d.attoamm_stato_id into strict attoAmmStatoDId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_D;

 
--- CICLO SU TUTTE LE POSSIBILI ANNUALITA': N-1, N, N+1, N+2 e >N+2
FOR loop_counter IN  0..6  LOOP
CASE loop_counter

 WHEN 0 THEN
	-- Calcolo Impegnato definitivo - Anno N-1: 
	-- Sommatoria di tutti gli Impegni assunti sul capitolo di previsione id_in su Componente idcomp_in
	-- con anno movimento N-1 e anno esercizio N-1.
	-- Il capitolo usato per determinare gli impegni e' quello UG Equivalente gia' esistente nel bilancio dell'esercizio N-1
	-- I valori di impegnato dovranno essere calcolati tenendo conto del solo impegnato definitivo.
	-- Escluse dal calcolo quindi:
	--		- le modifiche di impegno provvisorie (modifiche con provvedimento in stato provvisorio - di qualsiasi segno)
	-- 		- gli  impegni in stato provvisorio

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
    			  '.Determina anno esercizio ed anno movimento per i quali calcolare.';

    annoEsercizio:=((annoBilancio::INTEGER)-1)::varchar;
    annoMovimento:=((annoBilancio::INTEGER)-1)::varchar;
    
	flagNMaggioreNPiu2:=0;
	
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				   '.Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    -- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo impegnato competenza UP.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else

		strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento|| 
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid 
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno=annoMovimento::integer
			and el.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
			;
		
		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;
		
		if esisteRmovgestidelemid <>0 then
 			impegnatoDefinitivo:=0;
			strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

			importoCurAttuale:=0;			
			select tb.importo into importoCurAttuale
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
				  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  -- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  -- and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno = annoMovimento::integer -- anno dell impegno = annoMovimento
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		

			-- 02.02.2016 Sofia JIRA 2947
			 if importoCurAttuale is null then importoCurAttuale:=0; end if;

			 -- 16.03.2017 Sofia JIRA-SIAC-4614
			-- if importoCurAttuale>0 then
			 if importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

				strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Calcolo totale modifiche su atti provvisori per annoMovimento='||annoMovimento||'.';

				select tb.importo into importoModifDelta
				 from
				 (
					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, 
					 	 siac_t_movgest mov,
					 	 siac_t_movgest_ts ts,
						 siac_r_movgest_ts_stato rstato,
					  	 siac_t_movgest_ts_det tsdet,
						 siac_t_movgest_ts_det_mod moddet,
						 siac_t_modifica mod, 
					 	 siac_r_modifica_stato rmodstato,
						 siac_r_atto_amm_stato attostato, 
					 	 siac_t_atto_amm atto,
						 siac_d_modifica_tipo tipom
					where 
						rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
						and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
						and	  mov.movgest_id=rbil.movgest_id
						and   mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
						and   mov.movgest_anno=annoMovimento::integer -- anno dell impegno = annoMovimento
						and   mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
						and   ts.movgest_id=mov.movgest_id
						and   rstato.movgest_ts_id=ts.movgest_ts_id
						and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- Impegno non ANNULLATO
						-- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  		--and   rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
					    and   tsdet.movgest_ts_id=ts.movgest_ts_id
						and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
						and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
						and   tipom.mod_tipo_id=mod.mod_tipo_id
						and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
						group by ts.movgest_ts_tipo_id
					  ) tb, siac_d_movgest_ts_tipo tipo
					  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					  order by tipo.movgest_ts_tipo_code desc
					  limit 1;		
					  
 				if importoModifDelta is null then importoModifDelta:=0; end if;
				 /*Aggiunta delle modifiche ECONB*/
				 -- anna_economie inizio
   				select tb.importo into importoModifINS
 				from
 				(
 					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
 			   	 	siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
				    siac_t_movgest_ts_det_mod moddet,
 			   	 	siac_t_modifica mod, siac_r_modifica_stato rmodstato,
				    siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
 			        siac_d_modifica_tipo tipom
				where rbil.elem_id=elemIdGestEq
				and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
				and	  mov.movgest_id=rbil.movgest_id
				and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
 			   	and   mov.movgest_anno=annoMovimento::integer
 			   	and   mov.bil_id=bilancioId
				and   ts.movgest_id=mov.movgest_id
				and   rstato.movgest_ts_id=ts.movgest_ts_id
				and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- impegno non annullato
				and   tsdet.movgest_ts_id=ts.movgest_ts_id
				and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
				and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
				and   moddet.movgest_ts_det_importo<0 -- importo negativo
				and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
				and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
				and   mod.mod_id=rmodstato.mod_id
				and   atto.attoamm_id=mod.attoamm_id
				and   attostato.attoamm_id=atto.attoamm_id
				and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
 			   and   tipom.mod_tipo_id=mod.mod_tipo_id
 			   and   tipom.mod_tipo_code = 'ECONB'
				-- date
				and rbil.data_cancellazione is null
				and rbil.validita_fine is null
				and mov.data_cancellazione is null
				and mov.validita_fine is null
				and ts.data_cancellazione is null
				and ts.validita_fine is null
				and rstato.data_cancellazione is null
				and rstato.validita_fine is null
				and tsdet.data_cancellazione is null
				and tsdet.validita_fine is null
				and moddet.data_cancellazione is null
				and moddet.validita_fine is null
				and mod.data_cancellazione is null
				and mod.validita_fine is null
				and rmodstato.data_cancellazione is null
				and rmodstato.validita_fine is null
				and attostato.data_cancellazione is null
				and attostato.validita_fine is null
				and atto.data_cancellazione is null
				and atto.validita_fine is null
 			   group by ts.movgest_ts_tipo_id
 			 ) tb, siac_d_movgest_ts_tipo tipo
 			 where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
 			 order by tipo.movgest_ts_tipo_code desc
 			 limit 1;
			 
			 if importoModifINS is null then 
			 	importoModifINS = 0;
			 end if;
			
		
			end if;		
		end if;
	end if;

	-- restituisco il record risultato
	indiceAnnualita:=loop_counter;
	elemDetCompId:=idcomp_in;
    	--FIX adeguamento SIAC-7349 SPRINT 5
	-- Non restituisco piu' al impegnato le modifiche provvisorie e le ECONB
    	importoModifINS:=0;
    	importoModifDelta:=0;
    	--
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente per l'anno N-1
    	impegnatoDefinitivo:=impegnatoDefinitivo+importoCurAttuale-(importoModifDelta);

	--aggiunta per ECONB
	impegnatoDefinitivo:=impegnatoDefinitivo+abs(importoModifINS);

	return next;

	
	
 WHEN 1,2,3 THEN
 	-- Calcolo Impegnato definitivo - Anno N: 
	-- - Se presenti i movimenti gestione provenienti dal ribaltamento:
	--		Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in e anno movimento N e anno esercizio N
	-- - Se non presenti i movimenti gestione provenienti dal ribaltamento
	--		Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in e anno movimento N e anno esercizio N-1  

	-- Calcolo Impegnato definitivo   Anno N+1: 
	-- - Se presenti i movimenti gestione provenienti dal ribaltamento 
	--	 	Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in e anno movimento N+1 e anno esercizio N
	-- - Se non presenti i movimenti gestione provenienti dal ribaltamento 
	--		Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in e anno movimento N+1 e anno esercizio N-1

	-- Calcolo Impegnato definitivo   Anno N+2: 
	-- - Se presenti i movimenti gestione provenienti dal ribaltamento
	--		Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in e anno movimento N+2 e anno esercizio N
	-- - Se non presenti i movimenti gestione provenienti dal ribaltamento 
	--		Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in e anno movimento N+2 e anno esercizio N-1	
	-- Il capitolo usato per determinare gli impegni e' quello UG Equivalente  
	
	-- Verifica se presenti i movimenti di gestione provenienti dal ribaltamento
	-- Per "ribaltamento" si intende  il batch di ribaltamento residui che gira prima del ROR 
	--	e che "copia" gli impegni dell'anno N-1 nel bilancio dell'anno N (di solito il 2 gennaio)
	-- Per verificare che il batch di ribaltamento sia stato eseguito controllo le seguenti tabelle
	-- 		fase_bil_t_gest_apertura_liq_imp per gli impegni residui
	--  	fase_bil_t_gest_apertura_pluri per i pluriennli (sia impegni che accertamenti)
	-- In entrambe c'e' sia il bil_id che il bil_id_orig ovvero l'anno nuovo su cui si stanno ribaltando i movimenti e l'anno prec
	-- c'e' anche un campo fl_elab che ti dice se i dati sono stati elaborati con scarto o con successo 
	strMessaggio:='Calcolo totale impegnato  elem_id='||id_in||'idcomp_in='||idcomp_in||
				 '.Verifica se presenti i movimenti di gestione provenienti dal ribaltamento per anno di esercizio N.';
	
	impegniDaRibaltamento:=0;
	pluriennaliDaRibaltamento:=0;
	importoCurAttuale:=0;	
	importoModifDelta:=0;
	importoModifINS:=0;
	
	select  count(*) into impegniDaRibaltamento 
	from fase_bil_t_gest_apertura_liq_imp fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;

	select  count(*) into  pluriennaliDaRibaltamento
	from fase_bil_t_gest_apertura_pluri fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;
				
	if impegniDaRibaltamento>0 and pluriennaliDaRibaltamento>0 then

		-- - Se presenti i movimenti gestione provenienti dal ribaltamento:
		--	ImpegnatoDefinitivo = 	Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in 
		--	e anno movimento [N | N+1 | N+2] e anno esercizio N

		annoEsercizio:=annoBilancio;
		annoMovimento:=((annoBilancio::INTEGER)+loop_counter-1)::varchar;
		flagNMaggioreNPiu2:=0;
	else

		-- - Se non presenti i movimenti gestione provenienti dal ribaltamento
		--	ImpegnatoDefinitivo = Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in 
		-- 	e anno movimento [N | N+1 | N+2] e anno esercizio N-1

		annoEsercizio:=((annoBilancio::INTEGER)-1)::varchar;
		annoMovimento:=((annoBilancio::INTEGER)+loop_counter-1)::varchar;
		flagNMaggioreNPiu2:=0;
	end if;
	
	strMessaggio:='Calcolo totale impegnato  elem_id='||id_in||'idcomp_in='||idcomp_in||
				   '.Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
   	-- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo impegnato competenza UP.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else

		strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento|| 
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid 
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno=annoMovimento::integer
			and el.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
			;
		
		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;
		
		if esisteRmovgestidelemid <>0 then
 			impegnatoDefinitivo:=0;
			strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

					
			select tb.importo into importoCurAttuale
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
				  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  -- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  --and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno = annoMovimento::integer -- anno dell impegno = annoMovimento
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		

			-- 02.02.2016 Sofia JIRA 2947
			 if importoCurAttuale is null then importoCurAttuale:=0; end if;

			 -- 16.03.2017 Sofia JIRA-SIAC-4614
			-- if importoCurAttuale>0 then
			 if importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

				strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Calcolo totale modifiche su atti provvisori per annoMovimento='||annoMovimento||'.';

				select tb.importo into importoModifDelta
				 from
				 (
					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, 
					 	 siac_t_movgest mov,
					 	 siac_t_movgest_ts ts,
						 siac_r_movgest_ts_stato rstato,
					  	 siac_t_movgest_ts_det tsdet,
						 siac_t_movgest_ts_det_mod moddet,
						 siac_t_modifica mod, 
					 	 siac_r_modifica_stato rmodstato,
						 siac_r_atto_amm_stato attostato, 
					 	 siac_t_atto_amm atto,
						 siac_d_modifica_tipo tipom
					where 
						rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
						and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
						and	  mov.movgest_id=rbil.movgest_id
						and   mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
						and   mov.movgest_anno=annoMovimento::integer -- anno dell impegno = annoMovimento
						and   mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
						and   ts.movgest_id=mov.movgest_id
						and   rstato.movgest_ts_id=ts.movgest_ts_id
						and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- Impegno non ANNULLATO
						-- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  		--and   rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
					    and   tsdet.movgest_ts_id=ts.movgest_ts_id
						and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
						and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
						and   tipom.mod_tipo_id=mod.mod_tipo_id
						and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
						group by ts.movgest_ts_tipo_id
					  ) tb, siac_d_movgest_ts_tipo tipo
					  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					  order by tipo.movgest_ts_tipo_code desc
					  limit 1;		
					  
 				if importoModifDelta is null then importoModifDelta:=0; end if;
				  /*Aggiunta delle modifiche ECONB*/
				 -- anna_economie inizio
   				select tb.importo into importoModifINS
 				from
 				(
 					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
 			   	 	siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
				    siac_t_movgest_ts_det_mod moddet,
 			   	 	siac_t_modifica mod, siac_r_modifica_stato rmodstato,
				    siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
 			        siac_d_modifica_tipo tipom
				where rbil.elem_id=elemIdGestEq
				and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
				and	  mov.movgest_id=rbil.movgest_id
				and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
 			   	and   mov.movgest_anno=annoMovimento::integer
 			   	and   mov.bil_id=bilancioId
				and   ts.movgest_id=mov.movgest_id
				and   rstato.movgest_ts_id=ts.movgest_ts_id
				and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- impegno non annullato
				and   tsdet.movgest_ts_id=ts.movgest_ts_id
				and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
				and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
				and   moddet.movgest_ts_det_importo<0 -- importo negativo
				and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
				and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
				and   mod.mod_id=rmodstato.mod_id
				and   atto.attoamm_id=mod.attoamm_id
				and   attostato.attoamm_id=atto.attoamm_id
				and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
 			   and   tipom.mod_tipo_id=mod.mod_tipo_id
 			   and   tipom.mod_tipo_code = 'ECONB'
				-- date
				and rbil.data_cancellazione is null
				and rbil.validita_fine is null
				and mov.data_cancellazione is null
				and mov.validita_fine is null
				and ts.data_cancellazione is null
				and ts.validita_fine is null
				and rstato.data_cancellazione is null
				and rstato.validita_fine is null
				and tsdet.data_cancellazione is null
				and tsdet.validita_fine is null
				and moddet.data_cancellazione is null
				and moddet.validita_fine is null
				and mod.data_cancellazione is null
				and mod.validita_fine is null
				and rmodstato.data_cancellazione is null
				and rmodstato.validita_fine is null
				and attostato.data_cancellazione is null
				and attostato.validita_fine is null
				and atto.data_cancellazione is null
				and atto.validita_fine is null
 			   group by ts.movgest_ts_tipo_id
 			 ) tb, siac_d_movgest_ts_tipo tipo
 			 where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
 			 order by tipo.movgest_ts_tipo_code desc
 			 limit 1;
			 
			 if importoModifINS is null then 
			 	importoModifINS = 0;
			 end if;

		
			end if;		
		end if;
	end if;

	indiceAnnualita:=loop_counter;
	elemDetCompId:=idcomp_in;
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente per l'anno N-1
	--FIX adeguamento SIAC-7349 SPRINT 5
	-- Non restituisco piu' le modifiche provvisorie e le ECONB al impegnato
    	importoModifINS:=0;
    	importoModifDelta:=0;
    	--
    	impegnatoDefinitivo:=impegnatoDefinitivo+importoCurAttuale-(importoModifDelta);
	--aggiunta per ECONB
	impegnatoDefinitivo:=impegnatoDefinitivo+abs(importoModifINS);
	
	return next;

 	
 WHEN 4 THEN
	-- Calcolo Impegnato definitivo - Anno > N+2:
	-- - Se presenti i movimenti gestione provenienti dal ribaltamento 
	--		Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in e anno movimento > N+2 e anno esercizio N
	-- - Se non presenti i movimenti gestione provenienti dal ribaltamento 
	-- 		Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in e anno movimento > N+2 e anno esercizio N-1
	-- Il capitolo usato per determinare gli impegni e' quello UG Equivalente  

	-- Verifica se presenti i movimenti di gestione provenienti dal ribaltamento
	-- Per "ribaltamento" si intende  il batch di ribaltamento residui che gira prima del ROR 
	--	e che "copia" gli impegni dell'anno N-1 nel bilancio dell'anno N (di solito il 2 gennaio)
	-- Per verificare che il batch di ribaltamento sia stato eseguito controllo le seguenti tabelle
	-- 		fase_bil_t_gest_apertura_liq_imp per gli impegni residui
	--  	fase_bil_t_gest_apertura_pluri per i pluriennli (sia impegni che accertamenti)
	-- In entrambe c'e' sia il bil_id che il bil_id_orig ovvero l'anno nuovo su cui si stanno ribaltando i movimenti e l'anno prec
	-- c'e' anche un campo fl_elab che ti dice se i dati sono stati elaborati con scarto o con successo 
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				 '.Verifica se presenti i movimenti di gestione provenienti dal ribaltamento per anno di esercizio N.';
	
	impegniDaRibaltamento:=0;
	pluriennaliDaRibaltamento:=0;
	importoCurAttuale:=0;	
	importoModifDelta:=0;
	importoModifINS := 0;
	
	select  count(*) into impegniDaRibaltamento 
	from fase_bil_t_gest_apertura_liq_imp fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;

	select  count(*) into  pluriennaliDaRibaltamento
	from fase_bil_t_gest_apertura_pluri fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;
				
	if impegniDaRibaltamento>0 and pluriennaliDaRibaltamento>0 then

		-- - Se presenti i movimenti gestione provenienti dal ribaltamento 
		--	ImpegnatoDefinitivo = Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in 
		--	e anno movimento > N+2 e anno esercizio N

		annoEsercizio:=annoBilancio;
		annoMovimento:=((annoBilancio::INTEGER)+2)::varchar;
		flagNMaggioreNPiu2:=1;
	else

		-- - Se non presenti i movimenti gestione provenienti dal ribaltamento 
		-- 	ImpegnatoDefinitivo = Sommatoria di tutti gli Impegni assunti sul capitolo in questione su Componente idcomp_in 
		-- 	e anno movimento > N+2 e anno esercizio N-1

		annoEsercizio:=((annoBilancio::INTEGER)-1)::varchar;
		annoMovimento:=((annoBilancio::INTEGER)+2)::varchar;
		flagNMaggioreNPiu2:=1;
	end if;

	strMessaggio:='Calcolo totale impegnato elem_id='||id_in||'idcomp_in='||idcomp_in||
				   '.Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    	-- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo impegnato competenza UP.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else

		strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento|| 
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid 
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno>annoMovimento::integer 
			and el.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
			;
		
		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;
		
		if esisteRmovgestidelemid <>0 then
 			impegnatoDefinitivo:=0;
			strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

			importoCurAttuale:=0;			
			select tb.importo into importoCurAttuale
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
				  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  -- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  --and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno > annoMovimento::integer -- anno dell impegno > annoMovimento 
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		

			-- 02.02.2016 Sofia JIRA 2947
			 if importoCurAttuale is null then importoCurAttuale:=0; end if;

			 -- 16.03.2017 Sofia JIRA-SIAC-4614
			-- if importoCurAttuale>0 then
			 if importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

				strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Calcolo totale modifiche su atti provvisori per annoMovimento='||annoMovimento||'.';

				select tb.importo into importoModifDelta
				 from
				 (
					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, 
					 	 siac_t_movgest mov,
					 	 siac_t_movgest_ts ts,
						 siac_r_movgest_ts_stato rstato,
					  	 siac_t_movgest_ts_det tsdet,
						 siac_t_movgest_ts_det_mod moddet,
						 siac_t_modifica mod, 
					 	 siac_r_modifica_stato rmodstato,
						 siac_r_atto_amm_stato attostato, 
					 	 siac_t_atto_amm atto,
						 siac_d_modifica_tipo tipom
					where 
						rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
						and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
						and	  mov.movgest_id=rbil.movgest_id
						and   mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
						and   mov.movgest_anno>annoMovimento::integer -- anno dell impegno = annoMovimento 
						and   mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
						and   ts.movgest_id=mov.movgest_id
						and   rstato.movgest_ts_id=ts.movgest_ts_id
						and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- Impegno non ANNULLATO
						-- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  		--and   rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
					    and   tsdet.movgest_ts_id=ts.movgest_ts_id
						and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
						and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
						and   tipom.mod_tipo_id=mod.mod_tipo_id
						and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
						group by ts.movgest_ts_tipo_id
					  ) tb, siac_d_movgest_ts_tipo tipo
					  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					  order by tipo.movgest_ts_tipo_code desc
					  limit 1;		
					  
 				if importoModifDelta is null then importoModifDelta:=0; end if;
				  /*Aggiunta delle modifiche ECONB*/
				 -- anna_economie inizio
   				select tb.importo into importoModifINS
 				from
 				(
 					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
 			   	 	siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
				    siac_t_movgest_ts_det_mod moddet,
 			   	 	siac_t_modifica mod, siac_r_modifica_stato rmodstato,
				    siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
 			        siac_d_modifica_tipo tipom
				where rbil.elem_id=elemIdGestEq
				and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
				and	  mov.movgest_id=rbil.movgest_id
				and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
 			   	and   mov.movgest_anno=annoMovimento::integer
 			   	and   mov.bil_id=bilancioId
				and   ts.movgest_id=mov.movgest_id
				and   rstato.movgest_ts_id=ts.movgest_ts_id
				and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- impegno non annullato
				and   tsdet.movgest_ts_id=ts.movgest_ts_id
				and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
				and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
				and   moddet.movgest_ts_det_importo<0 -- importo negativo
				and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
				and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
				and   mod.mod_id=rmodstato.mod_id
				and   atto.attoamm_id=mod.attoamm_id
				and   attostato.attoamm_id=atto.attoamm_id
				and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
 			   and   tipom.mod_tipo_id=mod.mod_tipo_id
 			   and   tipom.mod_tipo_code = 'ECONB'
				-- date
				and rbil.data_cancellazione is null
				and rbil.validita_fine is null
				and mov.data_cancellazione is null
				and mov.validita_fine is null
				and ts.data_cancellazione is null
				and ts.validita_fine is null
				and rstato.data_cancellazione is null
				and rstato.validita_fine is null
				and tsdet.data_cancellazione is null
				and tsdet.validita_fine is null
				and moddet.data_cancellazione is null
				and moddet.validita_fine is null
				and mod.data_cancellazione is null
				and mod.validita_fine is null
				and rmodstato.data_cancellazione is null
				and rmodstato.validita_fine is null
				and attostato.data_cancellazione is null
				and attostato.validita_fine is null
				and atto.data_cancellazione is null
				and atto.validita_fine is null
 			   group by ts.movgest_ts_tipo_id
 			 ) tb, siac_d_movgest_ts_tipo tipo
 			 where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
 			 order by tipo.movgest_ts_tipo_code desc
 			 limit 1;
			 
			 if importoModifINS is null then 
			 	importoModifINS = 0;
			 end if;

		
			end if;		
		end if;
	end if;

	indiceAnnualita:=loop_counter;
	elemDetCompId:=idcomp_in;
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente per l'anno N-1
	--FIX adeguamento SIAC-7349 SPRINT 5
	-- Non restituiamo piu' le modifiche provvisorie e le ECONB al impegnato
    	importoModifINS:=0;
    	importoModifDelta:=0;
    	--
    	impegnatoDefinitivo:=impegnatoDefinitivo+importoCurAttuale-(importoModifDelta);
	--aggiunta per ECONB
	impegnatoDefinitivo:=impegnatoDefinitivo+abs(importoModifINS);
	return next;

 WHEN 5 THEN
	-- Calcolo Residuo Iniziale: 
	-- - Se presenti i movimenti gestione provenienti dal ribaltamento 
	--	 - Sommatoria dell importo iniziale di tutti gli Impegni assunti sul capitolo in questione su idcomp_in
	--		con anno movimento < N e anno esercizio N.
	-- - Se non presenti i movimenti gestione provenienti dal ribaltamento 
	-- 	- Sommatoria di tutti gli Impegni (valore effettivo aka finale) assunti sul capitolo in questione su incomp_in
	--		con anno movimento < N e anno esercizio N-1 diminuiti dalla sommatoria del pagato sui medesimi impegni nell esercizio N-1.

	impegniDaRibaltamento:=0;
	pluriennaliDaRibaltamento:=0;
	importoImpegnato:=0;	
	importoPagatoDelta:=0;
	
	select  count(*) into impegniDaRibaltamento 
	from fase_bil_t_gest_apertura_liq_imp fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;

	select  count(*) into  pluriennaliDaRibaltamento
	from fase_bil_t_gest_apertura_pluri fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;
				
	if impegniDaRibaltamento>0 and pluriennaliDaRibaltamento>0 then

		-- - Se presenti i movimenti gestione provenienti dal ribaltamento 
		--	Residuo Iniziale = 
		--	 Sommatoria dell'importo iniziale di tutti gli Impegni assunti sul capitolo in questione su idcomp_in
		--	con anno movimento < N e anno esercizio N.

		annoEsercizio:=annoBilancio;
		annoMovimento:=annoBilancio;
 		flagDeltaPagamenti:=0; -- non e' necessario scomputare il pagato
		
 	else

		-- - Se non presenti i movimenti gestione provenienti dal ribaltamento 
		-- 	Residuo Iniziale =	
		--	 Sommatoria di tutti gli Impegni (valore effettivo aka finale) assunti sul capitolo in questione su incomp_in
		--	con anno movimento < N e anno esercizio N-1  
		--	diminuiti dalla sommatoria del pagato sui medesimi impegni nell'esercizio N-1.

		annoEsercizio:=((annoBilancio::INTEGER)-1)::varchar;
		annoMovimento:=annoBilancio;
		flagDeltaPagamenti:=1; -- bisogna sottrarre la sommatoria del pagato sui medesimi impegni nell'esercizio N-1

	end if;

	strMessaggio:='Calcolo residuo iniziale elem_id='||id_in||'idcomp_in='||idcomp_in||
				   '.Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    -- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo residuo iniziale.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else

		strMessaggio:='Calcolo residuo iniziale elem_id='||id_in||'idcomp_in='||idcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento||'.'; 

		impegnatoDefinitivo:=0;
		strMessaggio:='Calcolo residuo iniziale elem_id='||id_in||'idcomp_in='||idcomp_in||
			'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
			'. Inizio calcolo totale importo  impegni per annoMovimento='||annoMovimento||'.';

		if impegniDaRibaltamento>0 and pluriennaliDaRibaltamento>0 then
			--  Sommatoria dell'importo iniziale di tutti gli Impegni assunti sul capitolo in questione 
			--	su Componente X con anno movimento < N e anno esercizio N

		importoImpegnato:=0;			
		select tb.importo into importoImpegnato
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
				  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  -- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  --and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno < annoMovimento::integer -- anno dell impegno < annoMovimento 
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoIdIniziale -- considerare l'importo iniziale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		
			-- 02.02.2016 Sofia JIRA 2947
			if importoImpegnato is null then importoImpegnato:=0; end if;

		else
			-- Sommatoria di tutti gli Impegni assunti (valore effettivo aka finale) sul capitolo in questione su Componente X 
			-- con anno movimento < N e anno esercizio N-1
			-- diminuiti dalla sommatoria del pagato sui medesimi impegni nell'esercizio N-1.
			importoImpegnato:=0;			
			select tb.importo into importoImpegnato
				from (
				  select
					  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
				  from
					  siac_r_movgest_bil_elem a,
					  siac_t_movgest b,
					  siac_t_movgest_ts c,
					  siac_r_movgest_ts_stato d,
					  siac_t_movgest_ts_det e,
					  siac_d_movgest_ts_det_tipo f
				  where
					  b.movgest_id=a.movgest_id and
					  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
					  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
					  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
					  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
					  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
					  -- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				      --and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
					  and b.movgest_anno < annoMovimento::integer -- anno dell impegno < annoMovimento 
					  and c.movgest_id=b.movgest_id
					  and d.movgest_ts_id=c.movgest_ts_id
					  and d.validita_fine is null
					  and e.movgest_ts_id=c.movgest_ts_id
					  and a.data_cancellazione is null
					  and b.data_cancellazione is null
					  and c.data_cancellazione is null
					  and e.data_cancellazione is null
					  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
					  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
					  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
				where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
				order by t.movgest_ts_tipo_code desc
				limit 1;	

			-- 16.03.2017 Sofia JIRA-SIAC-4614
			-- if importoImpegnato>0 then
			if importoImpegnato>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

				strMessaggio:='Calcolo residuo iniziale elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Calcolo sommatoria del pagato sui medesimi impegni nell''esercizio N-1.';

			   strMessaggio:='Lettura identificativo ord_stato_code='||STATO_ORD_A||'.';
			   select ordstato.ord_stato_id into ordStatoAId
			   from siac_d_ordinativo_stato ordstato
			   where ordstato.ente_proprietario_id=enteProprietarioId
			   and   ordstato.ord_stato_code=STATO_ORD_A;

			   select tipo.ord_ts_det_tipo_id into ordTsDetTipoAId
			   from siac_d_ordinativo_ts_det_tipo tipo
			   where tipo.ente_proprietario_id=enteProprietarioId
			   and   tipo.ord_ts_det_tipo_code=ORD_TS_DET_TIPO_A;

				select coalesce(sum(e.ord_ts_det_importo),0) into importoPagatoDelta
				from  
					 siac_r_movgest_bil_elem a,  --rmov,
					 siac_t_movgest b, -- mov, 
					 siac_t_movgest_ts c, --ts,
					 siac_r_liquidazione_movgest rliq,
					 siac_r_liquidazione_ord rord, 
					 siac_t_ordinativo_ts ordts, 
					 siac_t_ordinativo ord,
					 siac_r_ordinativo_stato rordstato,
					 siac_t_ordinativo_ts_det e, --tsdet,
					 siac_r_movgest_ts_stato d
				where
					b.movgest_id=a.movgest_id and
					a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
					a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
					and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
					and ord.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
					and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
					and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
					-- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  	--and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
					and b.movgest_anno < annoMovimento::integer -- anno dell impegno < annoMovimento 
					and c.movgest_id=b.movgest_id
					and d.movgest_ts_id=c.movgest_ts_id	
					and   rliq.movgest_ts_id=c.movgest_ts_id
					and   rord.liq_id=rliq.liq_id
					and   ordts.ord_ts_id=rord.sord_id
					and   ord.ord_id=ordts.ord_id
					and   rordstato.ord_id=ord.ord_id
					and   rordstato.ord_stato_id!=ordStatoAId -- non deve essere Annullato
					and   e.ord_ts_id=ordts.ord_ts_id
					and   e.ord_ts_det_tipo_id=ordTsDetTipoAId -- importo attuale
					and   e.data_cancellazione is null
					and   e.validita_fine is null
					and   b.data_cancellazione is null
					and   b.validita_fine is null
					and   c.data_cancellazione is null
					and   c.validita_fine is null
					and   a.data_cancellazione is null
					and   a.validita_fine is null
					and   rord.data_cancellazione is null
					and   rord.validita_fine is null
					and   rliq.data_cancellazione is null
					and   rliq.validita_fine is null
					and   ordts.data_cancellazione is null
					and   ordts.validita_fine is null
					and   ord.data_cancellazione is null
					and   ord.validita_fine is null
					and   rordstato.data_cancellazione is null
					and   rordstato.validita_fine is null
					and   d.data_cancellazione is null
					and   d.validita_fine is null;

				if importoPagatoDelta is null then importoPagatoDelta:=0; end if;

			end if;		
		end if;
	end if;

	indiceAnnualita:=loop_counter;
	elemDetCompId:=idcomp_in;
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente per l'anno N-1
	if flagDeltaPagamenti != 0 then
		impegnatoDefinitivo:=impegnatoDefinitivo+importoImpegnato-(importoPagatoDelta);
	else 
		impegnatoDefinitivo:=impegnatoDefinitivo+importoImpegnato;
	end if;
	return next;

	

 WHEN 6 THEN
	-- Calcolo Residuo Finale (In presenza della colonna finale e in assenza di qualsiasi colonna):
	-- - Se presenti i movimenti gestione provenienti dal ribaltamento 
	--      Sommatoria dell importo attuale di tutti gli Impegni assunti sul capitolo in questione su idcomp_in 
	--      con anno movimento < N e anno esercizio N.
	-- - Se non presenti i movimenti gestione provenienti dal ribaltamento 
	-- - Sommatoria di tutti gli Impegni (valore effettivo aka finale aka attuale) assunti sul capitolo in questione su incomp_in 
	--	con anno movimento < N e anno esercizio N-1 diminuiti dalla sommatoria del pagato sui medesimi impegni nell'esercizio N-1.

	impegniDaRibaltamento:=0;
	pluriennaliDaRibaltamento:=0;
	importoImpegnato:=0;	
	importoPagatoDelta:=0;
	
	select  count(*) into impegniDaRibaltamento 
	from fase_bil_t_gest_apertura_liq_imp fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;

	select  count(*) into  pluriennaliDaRibaltamento
	from fase_bil_t_gest_apertura_pluri fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;
				
	if impegniDaRibaltamento>0 and pluriennaliDaRibaltamento>0 then

		-- - Se presenti i movimenti gestione provenienti dal ribaltamento 
		--		Residuo Finale = 
		--	 		Sommatoria dell importo attuale di tutti gli Impegni assunti sul capitolo in questione su idcomp_in
		--			con anno movimento < N e anno esercizio N.

		annoEsercizio:=annoBilancio;
		annoMovimento:=annoBilancio;
 		flagDeltaPagamenti:=0; -- non e' necessario scomputare il pagato
		
 	else

		-- - Se non presenti i movimenti gestione provenienti dal ribaltamento 
		-- 		Residuo Finale =	
		--			Sommatoria di tutti gli Impegni (valore effettivo aka finale) assunti sul capitolo in questione su incomp_in
		--			con anno movimento < N e anno esercizio N-1  
		--			diminuiti dalla sommatoria del pagato sui medesimi impegni nell esercizio N-1.
		annoEsercizio:=((annoBilancio::INTEGER)-1)::varchar;
	        annoMovimento:=annoBilancio;
		flagDeltaPagamenti:=1; -- bisogna sottrarre la sommatoria del pagato sui medesimi impegni nell'esercizio N-1

	end if;

	strMessaggio:='Calcolo residuo finale elem_id='||id_in||'idcomp_in='||idcomp_in||
				   '.Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    	-- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo residuo finale.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else

		strMessaggio:='Calcolo residuo finale elem_id='||id_in||'idcomp_in='||idcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento||'.'; 

		impegnatoDefinitivo:=0;
		strMessaggio:='Calcolo residuo finale elem_id='||id_in||'idcomp_in='||idcomp_in||
			'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
			'. Inizio calcolo totale importo  impegni per annoMovimento='||annoMovimento||'.';

		if impegniDaRibaltamento>0 and pluriennaliDaRibaltamento>0 then
			--  Sommatoria dell'importo attuale di tutti gli Impegni assunti sul capitolo in questione 
			--	su Componente X con anno movimento < N e anno esercizio N

		importoImpegnato:=0;			
		select tb.importo into importoImpegnato
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
				  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  -- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  --and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno < annoMovimento::integer -- anno dell impegno < annoMovimento 
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;		
			-- 02.02.2016 Sofia JIRA 2947
			if importoImpegnato is null then importoImpegnato:=0; end if;

		else
			-- Sommatoria di tutti gli Impegni assunti (valore effettivo aka finale) sul capitolo in questione su Componente X 
			-- con anno movimento < N e anno esercizio N-1
			-- diminuiti dalla sommatoria del pagato sui medesimi impegni nell'esercizio N-1.
			importoImpegnato:=0;			
			select tb.importo into importoImpegnato
				from (
				  select
					  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
				  from
					  siac_r_movgest_bil_elem a,
					  siac_t_movgest b,
					  siac_t_movgest_ts c,
					  siac_r_movgest_ts_stato d,
					  siac_t_movgest_ts_det e,
					  siac_d_movgest_ts_det_tipo f
				  where
					  b.movgest_id=a.movgest_id and
					  a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
					  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
					  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
					  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
					  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
					  -- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				  	  --and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
					  and b.movgest_anno < annoMovimento::integer -- anno dell impegno < annoMovimento 
					  and c.movgest_id=b.movgest_id
					  and d.movgest_ts_id=c.movgest_ts_id
					  and d.validita_fine is null
					  and e.movgest_ts_id=c.movgest_ts_id
					  and a.data_cancellazione is null
					  and b.data_cancellazione is null
					  and c.data_cancellazione is null
					  and e.data_cancellazione is null
					  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
					  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
					  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
				where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
				order by t.movgest_ts_tipo_code desc
				limit 1;	

			-- 16.03.2017 Sofia JIRA-SIAC-4614
			-- if importoImpegnato>0 then
			if importoImpegnato>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

				strMessaggio:='Calcolo residuo finale elem_id='||id_in||'idcomp_in='||idcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Calcolo sommatoria del pagato sui medesimi impegni nell''esercizio N-1.';

			   strMessaggio:='Lettura identificativo ord_stato_code='||STATO_ORD_A||'.';
			   select ordstato.ord_stato_id into ordStatoAId
			   from siac_d_ordinativo_stato ordstato
			   where ordstato.ente_proprietario_id=enteProprietarioId
			   and   ordstato.ord_stato_code=STATO_ORD_A;

			   select tipo.ord_ts_det_tipo_id into ordTsDetTipoAId
			   from siac_d_ordinativo_ts_det_tipo tipo
			   where tipo.ente_proprietario_id=enteProprietarioId
			   and   tipo.ord_ts_det_tipo_code=ORD_TS_DET_TIPO_A;

				select coalesce(sum(e.ord_ts_det_importo),0) into importoPagatoDelta
				from  
					 siac_r_movgest_bil_elem a,  --rmov,
					 siac_t_movgest b, -- mov, 
					 siac_t_movgest_ts c, --ts,
					 siac_r_liquidazione_movgest rliq,
					 siac_r_liquidazione_ord rord, 
					 siac_t_ordinativo_ts ordts, 
					 siac_t_ordinativo ord,
					 siac_r_ordinativo_stato rordstato,
					 siac_t_ordinativo_ts_det e, --tsdet,
					 siac_r_movgest_ts_stato d
				where
					b.movgest_id=a.movgest_id and
					a.elem_id=elemIdGestEq and -- UID del capitolo di gestione equivalente
					a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
					and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
					and ord.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
					and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
					and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
					-- SIAC-7737 GS 25/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				    --and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
					and b.movgest_anno < annoMovimento::integer -- anno dell impegno < annoMovimento 
					and c.movgest_id=b.movgest_id
					and d.movgest_ts_id=c.movgest_ts_id	
					and   rliq.movgest_ts_id=c.movgest_ts_id
					and   rord.liq_id=rliq.liq_id
					and   ordts.ord_ts_id=rord.sord_id
					and   ord.ord_id=ordts.ord_id
					and   rordstato.ord_id=ord.ord_id
					and   rordstato.ord_stato_id!=ordStatoAId -- non deve essere Annullato
					and   e.ord_ts_id=ordts.ord_ts_id
					and   e.ord_ts_det_tipo_id=ordTsDetTipoAId -- importo attuale
					and   e.data_cancellazione is null
					and   e.validita_fine is null
					and   b.data_cancellazione is null
					and   b.validita_fine is null
					and   c.data_cancellazione is null
					and   c.validita_fine is null
					and   a.data_cancellazione is null
					and   a.validita_fine is null
					and   rord.data_cancellazione is null
					and   rord.validita_fine is null
					and   rliq.data_cancellazione is null
					and   rliq.validita_fine is null
					and   ordts.data_cancellazione is null
					and   ordts.validita_fine is null
					and   ord.data_cancellazione is null
					and   ord.validita_fine is null
					and   rordstato.data_cancellazione is null
					and   rordstato.validita_fine is null
					and   d.data_cancellazione is null
					and   d.validita_fine is null;

				if importoPagatoDelta is null then importoPagatoDelta:=0; end if;

			end if;		
		end if;
	end if;

	indiceAnnualita:=loop_counter;
	elemDetCompId:=idcomp_in;
	impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente per l'anno N-1
	if flagDeltaPagamenti != 0 then
		impegnatoDefinitivo:=impegnatoDefinitivo+importoImpegnato-(importoPagatoDelta);
	else 
		impegnatoDefinitivo:=impegnatoDefinitivo+importoImpegnato;
	end if;
	return next;

END CASE;
END LOOP;

return;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
		return;
	when no_data_found then
		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
		return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
		return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100 ROWS 1000;


ALTER FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp (id_in integer, idcomp_in integer)
  OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp (id_in integer, idcomp_in integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp (id_in integer, idcomp_in integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp (id_in integer, idcomp_in integer) TO siac;

--end fnc_siac_impegnatodefinitivoup_comp

--Start fnc_siac_impegnatoeffettivoug_comp_anno
CREATE OR REPLACE FUNCTION siac.fnc_siac_impegnatoeffettivoug_comp_anno (
  id_in integer,
  anno_in varchar
)
RETURNS TABLE (
  annocompetenza varchar,
  dicuiimpegnato numeric
) AS
$body$
DECLARE

-- constant
TIPO_CAP_UG constant varchar:='CAP-UG';
NVL_STR     constant varchar:='';
STA_IMP     constant varchar:='STA';

TIPO_IMP    constant varchar:='I';
TIPO_IMP_T  constant varchar:='T';

STATO_DEF   constant varchar:='D';
STATO_N     constant varchar:='N';
STATO_P     constant varchar:='P';
STATO_A     constant varchar:='A';
IMPORTO_ATT constant varchar:='A';

strMessaggio varchar(1500):=NVL_STR;


bilancioId integer:=0;
enteProprietarioId INTEGER:=0;
annoBilancio varchar:=null;

movGestTipoId integer:=0;
movGestTsTipoId integer:=0;
movGestStatoId integer:=0;
movGestTsDetTipoId integer:=0;

movGestTsId integer:=0;

importoAttuale numeric:=0;
importoCurAttuale numeric:=0;
movGestIdRec record;

esisteRmovgestidelemid INTEGER:=0;

BEGIN

select el.elem_id into esisteRmovgestidelemid from siac_r_movgest_bil_elem el, siac_t_movgest mv
where
mv.movgest_id=el.movgest_id
and el.elem_id=id_in
and mv.movgest_anno=anno_in::integer
;

 -- 02.02.2016 Sofia JIRA 2947
if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;

if esisteRmovgestidelemid <>0 then


 annoCompetenza:=null;
 diCuiImpegnato:=0;

 strMessaggio:='Calcolo impegnato effettivo competenza elem_id='||id_in||'.Controllo parametri.';

 if anno_in is null or anno_in=NVL_STR then
	 RAISE EXCEPTION '% Anno di competenza mancante.',strMessaggio;
 end if;

 if id_in is null or id_in=0 then
	 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
 end if;


 strMessaggio:='Calcolo impegnato effettivo competenza elem_id='||id_in
			   ||'.Calcolo bilancioId enteProprietarioId  annoBilancio.';

 select bil.bil_id,  bil.ente_proprietario_id,  per.anno
        into strict bilancioId, enteProprietarioId, annoBilancio
 from siac_t_bil bil,siac_t_bil_elem bilElem, siac_t_periodo per
 where bilElem.elem_id=id_in
 and   bilElem.data_cancellazione is null
 and   bil.bil_id=bilElem.bil_id
 and   per.periodo_id=bil.periodo_id;





 strMessaggio:='Calcolo impegnato effettivo competenza elem_id='||id_in||'.'
              ||'Calcolo movGestTipoId.';
 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
 from  siac_d_movgest_tipo tipoMovGest
 where tipoMovGest.ente_proprietario_id=enteProprietarioId
 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

 strMessaggio:='Calcolo impegnato effettivo competenza elem_id='||id_in||'.'
              ||'Calcolo movGestTsTipoId.';

 strMessaggio:='Calcolo impegnato effettivo competenza elem_id='||id_in||'.'
              ||'Calcolo movGestTsStatoId.';

 select movGestStato.movgest_stato_id into strict movGestStatoId
 from siac_d_movgest_stato movGestStato
 where movGestStato.ente_proprietario_id=enteProprietarioId
 and   movGestStato.movgest_stato_code=STATO_A;

 strMessaggio:='Calcolo impegnato effettivo competenza elem_id='||id_in||'.'
              ||'Calcolo movGestTsDetTipoId.';

 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT;



 strMessaggio:='Calcolo impegnato effettivo competenza elem_id='||id_in||'. Inizio calcolo totale importo attuale impegni per anno_in='||anno_in||'.';


 --nuovo G
   	importoCurAttuale:=0;

    select tb.importo into importoCurAttuale
	from (
		select
			coalesce(sum(e.movgest_ts_det_importo),0)  importo
			, c.movgest_ts_tipo_id
		from
      siac_r_movgest_bil_elem a,
      siac_t_movgest b,
      siac_t_movgest_ts c,
      siac_r_movgest_ts_stato d,
      siac_t_movgest_ts_det e
      ,siac_d_movgest_ts_det_tipo f
      where
      b.movgest_id=a.movgest_id and
      a.elem_id=id_in
      and b.bil_id = bilancioId
      and b.movgest_tipo_id=movGestTipoId
	  and d.movgest_stato_id<>movGestStatoId
	  and b.movgest_anno = anno_in::integer
      and c.movgest_id=b.movgest_id
      and d.movgest_ts_id=c.movgest_ts_id
      and d.validita_fine is null
      and e.movgest_ts_id=c.movgest_ts_id
	and a.data_cancellazione is null
    and b.data_cancellazione is null
    and c.data_cancellazione is null
     and e.data_cancellazione is null
     and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
    and e.movgest_ts_det_tipo_id=movGestTsDetTipoId
    group by
   c.movgest_ts_tipo_id
    ) tb, siac_d_movgest_ts_tipo t
    where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
    order by t.movgest_ts_tipo_code desc
    limit 1;



 if importoCurAttuale is null then importoCurAttuale:=0; end if;

 

 end if;

 --nuovo G
 importoAttuale:=importoAttuale+importoCurAttuale; -- 16.03.2017 Sofia JIRA-SIAC-4614
 --fine nuovoG


 annoCompetenza:=anno_in;
 diCuiImpegnato:=importoAttuale;

 return next;


exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return;
	when no_data_found then
	    RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100 ROWS 1000;


ALTER FUNCTION siac.fnc_siac_impegnatoeffettivoug_comp_anno (id_in integer, anno_in varchar)
  OWNER TO siac;
--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoug_comp_anno (id_in integer, anno_in varchar) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoug_comp_anno (id_in integer, anno_in varchar) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoug_comp_anno (id_in integer, anno_in varchar) TO siac;
--end fnc_siac_impegnatoeffettivoug_comp_anno

--Start fnc_siac_impegnatoeffettivoup_comp_anno
CREATE OR REPLACE FUNCTION siac.fnc_siac_impegnatoeffettivoup_comp_anno (
  id_in integer,
  anno_in varchar
)
RETURNS TABLE (
  annocompetenza varchar,
  impegnatoEffettivo numeric
) AS
$body$

DECLARE
annoBilancio varchar:=null;
annoEsercizio varchar:=null;
annoMovimento varchar:=null;
importoAttuale numeric:=0;
elemIdGestEq integer:=0;
bilIdElemGestEq integer:=0;
NVL_STR     constant varchar:='';
faseOpCode varchar(20):=NVL_STR;
bilancioId integer:=0;
elemTipoCode VARCHAR(20):=NVL_STR;
elemCode varchar(50):=NVL_STR;
elemCode2 varchar(50):=NVL_STR;
elemCode3 varchar(50):=NVL_STR;
enteProprietarioId INTEGER:=0;
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
FASE_OP_BIL_PREV constant VARCHAR:='P';
STATO_A     constant varchar:='A';
STATO_P     constant varchar:='P';
TIPO_IMP    constant varchar:='I';
movGestStatoIdAnnullato integer:=0;
movGestStatoIdProvvisorio integer:=0;
movGestTipoId integer:=0;
IMPORTO_ATT constant varchar:='A';
movGestTsDetTipoId integer:=0;
IMPORTO_INIZIALE constant varchar:='I';
movGestTsDetTipoIdIniziale integer:=0;
STATO_MOD_V  constant varchar:='V';

STATO_ATTO_P constant varchar:='PROVVISORIO';
STATO_ATTO_D constant varchar:='DEFINITIVO';
importoCurAttuale numeric:=0;
esisteRmovgestidelemid INTEGER:=0;
impegniDaRibaltamento integer:=0;
pluriennaliDaRibaltamento integer:=0;
flagNMaggioreNPiu2 integer:=0;
importoImpegnato integer:=0;

strMessaggio varchar(1500):=null;
BEGIN


    strMessaggio:='Calcolo totale impegnato effettivo per elem_id='||id_in||'.';

	-- Controllo parametri in input
	if id_in is null or id_in=0 then
		 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
	end if;

	strMessaggio:='Calcolo totale impegnato effettivo elem_id='||id_in||'. Lettura anno di bilancio del capitolo UP.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;


	strMessaggio:='Calcolo totale impegnato effettivo elem_id='||id_in||'. Determina capitolo di gestione equivalente in anno esercizio di calcolato. Calcolo bilancioId e elem_tipo_code.';
	 select bilelem.elem_code, bilElem.elem_code2, bilElem.elem_code3, bil.bil_id ,tipoBilElem.elem_tipo_code, per.anno , bil.ente_proprietario_id
	 into strict elemCode, elemCode2, elemCode3, bilancioId, elemTipoCode , annoBilancio,enteProprietarioId
	 from 	siac_t_bil_elem bilElem,
	 		siac_d_bil_elem_tipo tipoBilElem,
		  	siac_t_bil bil, siac_t_periodo per
	 where bilElem.elem_id=id_in
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
	   and bil.bil_id=bilElem.bil_id
	   and per.periodo_id=bil.periodo_id;

	 if elemTipoCode is not null and elemTipoCode!=NVL_STR and elemTipoCode!=TIPO_CAP_UP then
			RAISE EXCEPTION '% elemTipoCode=%  non ammesso per tipo di calcolo.',strMessaggio,elemTipoCode;
	 end if;

	 strMessaggio:='Calcolo totale impegnato effettivo elem_id='||id_in||'. Determina capitolo di gestione equivalente in anno esercizio calcolato. Calcolo fase operativa per bilancioId='||bilancioId||' , per ente='||enteProprietarioId||' e per elem_id='||id_in||'.';

	 select  faseOp.fase_operativa_code into  faseOpCode
	 from siac_r_bil_fase_operativa bilFase, siac_d_fase_operativa faseOp
	 where bilFase.bil_id =bilancioId
	   and bilfase.data_cancellazione is null
	   and bilFase.validita_fine is null
	   and faseOp.fase_operativa_id=bilFase.fase_operativa_id
	   and faseOp.data_cancellazione is null
	 order by bilFase.bil_fase_operativa_id desc;

	 if NOT FOUND THEN
	   RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
	 end if;

	 strMessaggio:='Calcolo impegnato effettivo elem_id='||id_in||'. Calcolo movGestTipoId per movgest_tipo_code=IMPEGNO';
	 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
	 from  siac_d_movgest_tipo tipoMovGest
	 where tipoMovGest.ente_proprietario_id=enteProprietarioId
	 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

	 strMessaggio:='Calcolo impegnato effettivo  competenza elem_id='||id_in||
				  '. Calcolo movGestTsStatoIdAnnullato per movgest_stato_code=ANNULLATO'
				  '. Calcolo movGestTsStatoIdProvvisorio per movgest_stato_code=PROVVISORIO';

	 select movGestStato.movgest_stato_id into strict movGestStatoIdAnnullato
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_A;

	 select  movGestStato.movgest_stato_id into strict movGestStatoIdProvvisorio
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_P;

	 strMessaggio:='Calcolo impegnato effettivo competenza elem_id='||id_in||
				  '. Calcolo movGestTsDetTipoId per movgest_ts_det_tipo_code=IMPORTO ATTUALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT; --'A'

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||
				  '. Calcolo movGestTsDetTipoIdIniziale per movgest_ts_det_tipo_code=IMPORTO INIZIALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoIdIniziale
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_INIZIALE; --'I'


	importoCurAttuale:=0;
	annoMovimento=anno_in;
	annoEsercizio=annoBilancio;

	strMessaggio:='Calcolo totale impegnato effettivo elem_id='||id_in||'. Determina capitolo di gestione equivalente in anno esercizio calcolato.';

	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';

	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo impegnato effettivo competenza UP.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;
	   


	if NOT FOUND THEN
		impegnatoEffettivo:=0;
	else

		strMessaggio:='Calcolo totale impegnato effettivo elem_id='||id_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq||
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento||
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno=annoMovimento::integer;

		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;

		if esisteRmovgestidelemid <>0 then
 			impegnatoEffettivo:=0;
			strMessaggio:='Calcolo totale impegnato effettivo elem_id='||id_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq||
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

			importoCurAttuale:=0;
			select tb.importo into importoCurAttuale
			from (
			  select
				  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id
			  from
				  siac_r_movgest_bil_elem a,
				  siac_t_movgest b,
				  siac_t_movgest_ts c,
				  siac_r_movgest_ts_stato d,
				  siac_t_movgest_ts_det e,
				  siac_d_movgest_ts_det_tipo f
			  where
				  b.movgest_id=a.movgest_id and
				  a.elem_id=elemIdGestEq  -- UID del capitolo di gestione equivalente
				  and b.bil_id = bilIdElemGestEq -- UID del bilancio in annoEsercizio
				  and b.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
				  and d.movgest_stato_id<>movGestStatoIdAnnullato -- non ANNULLATO
				  and d.movgest_stato_id<>movGestStatoIdProvvisorio -- non PROVVISORIO
				  and b.movgest_anno = annoMovimento::integer -- anno dell impegno = annoMovimento
				  and c.movgest_id=b.movgest_id
				  and d.movgest_ts_id=c.movgest_ts_id
				  and d.validita_fine is null
				  and e.movgest_ts_id=c.movgest_ts_id
				  and a.data_cancellazione is null
				  and b.data_cancellazione is null
				  and c.data_cancellazione is null
				  and e.data_cancellazione is null
				  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
				  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId -- considerare l'importo attuale
				  group by c.movgest_ts_tipo_id) tb, siac_d_movgest_ts_tipo t
			where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
			order by t.movgest_ts_tipo_code desc
			limit 1;

			-- 02.02.2016 Sofia JIRA 2947
			 if importoCurAttuale is null then importoCurAttuale:=0; end if;

		end if;
	end if;

 importoAttuale:=importoAttuale+importoCurAttuale; -- 16.03.2017 Sofia JIRA-SIAC-4614

 annoCompetenza:=anno_in;
 impegnatoEffettivo:=importoAttuale;

 return next;


exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return;
	when no_data_found then
	    RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100 ROWS 1000;


ALTER FUNCTION siac.fnc_siac_impegnatoeffettivoup_comp_anno (id_in integer, anno_in varchar)
  OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoup_comp_anno (id_in integer, anno_in varchar) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoup_comp_anno (id_in integer, anno_in varchar) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoup_comp_anno (id_in integer, anno_in varchar) TO siac;
--end fnc_siac_impegnatoeffettivoup_comp_anno

--Start fnc_siac_impegnatoeffettivoug_anno1
CREATE OR REPLACE FUNCTION siac.fnc_siac_impegnatoeffettivoug_anno1 (
  id_in integer
)
RETURNS numeric AS
$body$
DECLARE

diCuiImpegnato numeric:=0;

annoBilancio varchar:=null;

diCuiImpegnatoRec record;

strMessaggio varchar(1500):=null;
BEGIN

    strMessaggio:='Calcolo totale impegnato elem_id='||id_in||'.';

	strMessaggio:='Calcolo totale impegnato elem_id='||id_in||
    			  '.Lettura anno di bilancio.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;



     strMessaggio:='Calcolo totale impegnato elem_id='||id_in||'.';
     select * into diCuiImpegnatoRec
     from  fnc_siac_impegnatoeffettivoug_comp_anno (id_in,annoBilancio);

     
     diCuiImpegnato:=diCuiImpegnatoRec.diCuiImpegnato;
	
	
     return diCuiImpegnato;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        diCuiImpegnato:=0;
        return diCuiImpegnato;
	when no_data_found then
		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        diCuiImpegnato:=0;
        return diCuiImpegnato;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        diCuiImpegnato:=0;
        return diCuiImpegnato;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100;


ALTER FUNCTION siac.fnc_siac_impegnatoeffettivoug_anno1 (id_in integer)
  OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoug_anno1 (id_in integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoug_anno1 (id_in integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoug_anno1 (id_in integer) TO siac;
--end fnc_siac_impegnatoeffettivoug_anno1

--Start fnc_siac_impegnatoeffettivoug_anno2
CREATE OR REPLACE FUNCTION siac.fnc_siac_impegnatoeffettivoug_anno2 (
  id_in integer
)
RETURNS numeric AS
$body$
DECLARE

diCuiImpegnato numeric:=0;

annoBilancio varchar:=null;

diCuiImpegnatoRec record;

strMessaggio varchar(1500):=null;
BEGIN

    strMessaggio:='Calcolo totale impegnato elem_id='||id_in||'.';

	strMessaggio:='Calcolo totale impegnato elem_id='||id_in||
    			  '.Lettura anno di bilancio.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;



     strMessaggio:='Calcolo totale impegnato elem_id='||id_in||'.';
     select * into diCuiImpegnatoRec
     from  fnc_siac_impegnatoeffettivoug_comp_anno (id_in,((annoBilancio::integer)+1)::varchar);

     
     diCuiImpegnato:=diCuiImpegnatoRec.diCuiImpegnato;
	
	
     return diCuiImpegnato;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        diCuiImpegnato:=0;
        return diCuiImpegnato;
	when no_data_found then
		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        diCuiImpegnato:=0;
        return diCuiImpegnato;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        diCuiImpegnato:=0;
        return diCuiImpegnato;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100;


ALTER FUNCTION siac.fnc_siac_impegnatoeffettivoug_anno2 (id_in integer)
  OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoug_anno2 (id_in integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoug_anno2 (id_in integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoug_anno2 (id_in integer) TO siac;
--end fnc_siac_impegnatoeffettivoug_anno2


--Start fnc_siac_impegnatoeffettivoug_anno3
CREATE OR REPLACE FUNCTION siac.fnc_siac_impegnatoeffettivoug_anno3 (
  id_in integer
)
RETURNS numeric AS
$body$
DECLARE

diCuiImpegnato numeric:=0;

annoBilancio varchar:=null;

diCuiImpegnatoRec record;

strMessaggio varchar(1500):=null;
BEGIN

    strMessaggio:='Calcolo totale impegnato elem_id='||id_in||'.';

	strMessaggio:='Calcolo totale impegnato elem_id='||id_in||
    			  '.Lettura anno di bilancio.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;



     strMessaggio:='Calcolo totale impegnato elem_id='||id_in||'.';
     select * into diCuiImpegnatoRec
     from  fnc_siac_impegnatoeffettivoug_comp_anno (id_in,((annoBilancio::integer)+2)::varchar);

     
     diCuiImpegnato:=diCuiImpegnatoRec.diCuiImpegnato;
	
	
     return diCuiImpegnato;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        diCuiImpegnato:=0;
        return diCuiImpegnato;
	when no_data_found then
		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        diCuiImpegnato:=0;
        return diCuiImpegnato;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        diCuiImpegnato:=0;
        return diCuiImpegnato;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100;


ALTER FUNCTION siac.fnc_siac_impegnatoeffettivoug_anno3 (id_in integer)
  OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoug_anno3 (id_in integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoug_anno3 (id_in integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoug_anno3 (id_in integer) TO siac;
--end fnc_siac_impegnatoeffettivoug_anno3

--Start fnc_siac_impegnatoeffettivoup_anno1
CREATE OR REPLACE FUNCTION siac.fnc_siac_impegnatoeffettivoup_anno1 (
  id_in integer
)
RETURNS numeric AS
$body$
DECLARE

impegnatoEffettivo numeric:=0;

annoBilancio varchar:=null;

impegnatoEffettivoRec record;

strMessaggio varchar(1500):=null;
BEGIN

    strMessaggio:='Calcolo totale impegnato effettivo elem_id='||id_in||'.';

	strMessaggio:='Calcolo totale impegnato effettivo elem_id='||id_in||
    			  '.Lettura anno di bilancio.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;



     strMessaggio:='Calcolo totale impegnato elem_id='||id_in||'.';
     select * into impegnatoEffettivoRec
     from  fnc_siac_impegnatoeffettivoup_comp_anno (id_in,annoBilancio);

     
     impegnatoEffettivo:=impegnatoEffettivoRec.impegnatoEffettivo;
	
	
     return impegnatoEffettivo;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        impegnatoEffettivo:=0;
        return impegnatoEffettivo;
	when no_data_found then
		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        impegnatoEffettivo:=0;
        return impegnatoEffettivo;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        impegnatoEffettivo:=0;
        return impegnatoEffettivo;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100;


ALTER FUNCTION siac.fnc_siac_impegnatoeffettivoup_anno1 (id_in integer)
  OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoup_anno1 (id_in integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoup_anno1 (id_in integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoup_anno1 (id_in integer) TO siac;
--end fnc_siac_impegnatoeffettivoup_anno1

--Start fnc_siac_impegnatoeffettivoup_anno2
CREATE OR REPLACE FUNCTION siac.fnc_siac_impegnatoeffettivoup_anno2 (
  id_in integer
)
RETURNS numeric AS
$body$
DECLARE

impegnatoEffettivo numeric:=0;

annoBilancio varchar:=null;

impegnatoEffettivoRec record;

strMessaggio varchar(1500):=null;
BEGIN

    strMessaggio:='Calcolo totale impegnato effettivo elem_id='||id_in||'.';

	strMessaggio:='Calcolo totale impegnato effettivo elem_id='||id_in||
    			  '.Lettura anno di bilancio.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;



     strMessaggio:='Calcolo totale impegnato elem_id='||id_in||'.';
     select * into impegnatoEffettivoRec
     from  fnc_siac_impegnatoeffettivoup_comp_anno (id_in,((annoBilancio::integer)+1)::varchar);

     
     impegnatoEffettivo:=impegnatoEffettivoRec.impegnatoEffettivo;
	
	
     return impegnatoEffettivo;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        impegnatoEffettivo:=0;
        return impegnatoEffettivo;
	when no_data_found then
		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        impegnatoEffettivo:=0;
        return impegnatoEffettivo;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        impegnatoEffettivo:=0;
        return impegnatoEffettivo;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100;


ALTER FUNCTION siac.fnc_siac_impegnatoeffettivoup_anno2 (id_in integer)
  OWNER TO siac;
 
--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoup_anno2 (id_in integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoup_anno2 (id_in integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoup_anno2 (id_in integer) TO siac;
--end fnc_siac_impegnatoeffettivoup_anno2


--Start fnc_siac_impegnatoeffettivoup_anno3
CREATE OR REPLACE FUNCTION siac.fnc_siac_impegnatoeffettivoup_anno3 (
  id_in integer
)
RETURNS numeric AS
$body$
DECLARE

impegnatoEffettivo numeric:=0;

annoBilancio varchar:=null;

impegnatoEffettivoRec record;

strMessaggio varchar(1500):=null;
BEGIN

    strMessaggio:='Calcolo totale impegnato effettivo elem_id='||id_in||'.';

	strMessaggio:='Calcolo totale impegnato effettivo elem_id='||id_in||
    			  '.Lettura anno di bilancio.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;



     strMessaggio:='Calcolo totale impegnato elem_id='||id_in||'.';
     select * into impegnatoEffettivoRec
     from  fnc_siac_impegnatoeffettivoup_comp_anno (id_in,((annoBilancio::integer)+2)::varchar);

     
     impegnatoEffettivo:=impegnatoEffettivoRec.impegnatoEffettivo;
	
	
     return impegnatoEffettivo;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        impegnatoEffettivo:=0;
        return impegnatoEffettivo;
	when no_data_found then
		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        impegnatoEffettivo:=0;
        return impegnatoEffettivo;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        impegnatoEffettivo:=0;
        return impegnatoEffettivo;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100;


ALTER FUNCTION siac.fnc_siac_impegnatoeffettivoup_anno3 (id_in integer)
  OWNER TO siac;
  
--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoup_anno3 (id_in integer) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoup_anno3 (id_in integer) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_impegnatoeffettivoup_anno3 (id_in integer) TO siac;
--end fnc_siac_impegnatoeffettivoup_anno3


--start fnc_siac_riaccertamento

 DROP FUNCTION if exists siac.fnc_siac_riaccertamento(integer, character varying, character varying);

CREATE OR REPLACE FUNCTION siac.fnc_siac_riaccertamento(
	mod_id_in integer,
	login_operazione_in character varying,
	tipo_operazione_in character varying)
    RETURNS TABLE(esito character varying) 
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE SECURITY DEFINER 
    ROWS 1000
AS $BODY$
DECLARE
importo_mod_da_scalare numeric;
ente_proprietario_id_in integer;
rec record;
recannullamento record;
--25.05.2020 FL SIAC-7349 Inizio SR.SR165.SR167.SR169
importo_sum_det_mod_da_scalare numeric;
recListaCollegata record;
--Il cursore 'cur' che estrae solo le modifiche di impegno  e' stato modificato escludendo le modifiche di reimputazione con questa modifica 
--e' stato creato un altro cursore 'curListaCollegata' che estrai le modifiche di accertamento di reimputazione  che sono state collegate all impegno strettamente legato 
-- ed a questo vincolo viene decurtato all'importo del vincolo  la somma degli importi collegamenti solo se  naturalmente le modifiche di accertamento   e sono di tipo reimputazione.
--25.05.2020 FL SIAC-7349 Fine SR.SR165.SR167.SR169

cur CURSOR(par_in integer) FOR
--avav
SELECT 'avav' tipomod,
a.mod_id,
i.movgest_ts_r_id,
i.movgest_ts_importo,
case when n.avav_tipo_code='FPVSC' then 1
	 when n.avav_tipo_code='FPVCC' then 1 when n.avav_tipo_code='AAM' then 2 else 3 end
		as tipoordinamento
FROM siac_t_modifica a,
siac_r_modifica_stato b,
siac_t_movgest_ts_det_mod c,
siac_d_modifica_stato d,
siac_d_movgest_ts_det_tipo e, siac_t_movgest_ts f, siac_t_movgest g,siac_d_movgest_tipo h,
siac_r_movgest_ts i,
siac_t_avanzovincolo l, siac_d_movgest_ts_tipo m,siac_d_avanzovincolo_tipo n
WHERE
a.mod_id=par_in--mod_id_in
 and
a.mod_id = b.mod_id AND
c.mod_stato_r_id = b.mod_stato_r_id AND
d.mod_stato_id = b.mod_stato_id and
e.movgest_ts_det_tipo_id=c.movgest_ts_det_tipo_id and
f.movgest_ts_id=c.movgest_ts_id and
g.movgest_id=f.movgest_id and
d.mod_stato_code='V' and
h.movgest_tipo_id=g.movgest_tipo_id and
h.movgest_tipo_code='I' and --movgest_ts_b_id e' impegno
i.movgest_ts_b_id=f.movgest_ts_id and
n.avav_tipo_id=l.avav_tipo_id and
now() BETWEEN i.validita_inizio and COALESCE(i.validita_fine,now()) and
now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now()) and
m.movgest_ts_tipo_id=f.movgest_ts_tipo_id and
l.avav_id=i.avav_id and
a.data_cancellazione IS NULL AND
b.data_cancellazione IS NULL AND
c.data_cancellazione IS NULL AND
d.data_cancellazione IS NULL and
e.data_cancellazione is null and
f.data_cancellazione is null and
g.data_cancellazione is null and
h.data_cancellazione is null and
i.data_cancellazione is null and
l.data_cancellazione is null and
m.data_cancellazione is null and
n.data_cancellazione is null
--order by 1 asc,3 desc
union
-- imp acc
SELECT
'impacc',
a.mod_id,
i.movgest_ts_r_id,
i.movgest_ts_importo,
4 tipoordinamento
FROM siac_t_modifica a,
siac_r_modifica_stato b,
siac_t_movgest_ts_det_mod c,
siac_d_modifica_stato d,
siac_d_movgest_ts_det_tipo e, siac_t_movgest_ts f, siac_t_movgest g,siac_d_movgest_tipo h,
siac_r_movgest_ts i,--, siac_t_movgest l,siac_d_movgest_tipo m
siac_t_movgest_ts l, siac_d_movgest_ts_tipo m
WHERE
a.mod_id=par_in--mod_id_in
and
a.mod_id = b.mod_id AND
c.mod_stato_r_id = b.mod_stato_r_id AND
d.mod_stato_id = b.mod_stato_id and
e.movgest_ts_det_tipo_id=c.movgest_ts_det_tipo_id and
f.movgest_ts_id=c.movgest_ts_id and
g.movgest_id=f.movgest_id and
d.mod_stato_code='V' and
h.movgest_tipo_id=g.movgest_tipo_id and
h.movgest_tipo_code='I' and
--h.movgest_tipo_code='A' and
--25.05.2020 FL SIAC-7349 Inizio SR.SR165.SR167.SR169
c.mtdm_reimputazione_flag=false and  --esclude le modifche di tipo reimputazione
--25.05.2020 FL SIAC-7349 Fine SR.SR165.SR167.SR169
i.movgest_ts_b_id=f.movgest_ts_id and --movgest_ts_b_id e' impegno
now() BETWEEN i.validita_inizio and COALESCE(i.validita_fine,now()) and
now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now()) and
m.movgest_ts_tipo_id=f.movgest_ts_tipo_id and
l.movgest_ts_id=i.movgest_ts_a_id and
a.data_cancellazione IS NULL AND
b.data_cancellazione IS NULL AND
c.data_cancellazione IS NULL AND
d.data_cancellazione IS NULL and
e.data_cancellazione is null and
f.data_cancellazione is null and
g.data_cancellazione is null and
h.data_cancellazione is null and
i.data_cancellazione is null and
l.data_cancellazione is null and
m.data_cancellazione is null
order
by 5 desc,2 asc,4 desc;   -- 27.02.2019 SIAC-6713
--by 5 asc,2 asc,4 desc;  -- 27.02.2019 SIAC-6713

--25.05.2020 FL SIAC-7349 Inizio SR.SR165.SR167.SR169

curListaCollegata CURSOR(par_in integer) FOR
-- imp acc
SELECT
'impacc',
a.mod_id,
i.movgest_ts_r_id,
i.movgest_ts_importo,
4 tipoordinamento,
l.movgest_ts_code 
FROM siac_t_modifica a,
siac_r_modifica_stato b,
siac_t_movgest_ts_det_mod c,
siac_d_modifica_stato d,
siac_d_movgest_ts_det_tipo e, siac_t_movgest_ts f, siac_t_movgest g,siac_d_movgest_tipo h,
siac_r_movgest_ts i,--, siac_t_movgest l,siac_d_movgest_tipo m
siac_t_movgest_ts l, siac_d_movgest_ts_tipo m
WHERE
a.mod_id=par_in--mod_id_in
and
a.mod_id = b.mod_id AND
c.mod_stato_r_id = b.mod_stato_r_id AND
d.mod_stato_id = b.mod_stato_id and
e.movgest_ts_det_tipo_id=c.movgest_ts_det_tipo_id and
f.movgest_ts_id=c.movgest_ts_id and
g.movgest_id=f.movgest_id and
d.mod_stato_code='V' and
h.movgest_tipo_id=g.movgest_tipo_id and
h.movgest_tipo_code='A' and
c.mtdm_reimputazione_flag=true and
i.movgest_ts_a_id=f.movgest_ts_id and --movgest_ts_a_id e' A = ACCERTAMENTI
now() BETWEEN i.validita_inizio and COALESCE(i.validita_fine,now()) and
now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now()) and
m.movgest_ts_tipo_id=f.movgest_ts_tipo_id and
l.movgest_ts_id=i.movgest_ts_b_id and
a.data_cancellazione IS NULL AND
b.data_cancellazione IS NULL AND
c.data_cancellazione IS NULL AND
d.data_cancellazione IS NULL and
e.data_cancellazione is null and
f.data_cancellazione is null and
g.data_cancellazione is null and
h.data_cancellazione is null and
i.data_cancellazione is null and
l.data_cancellazione is null and
m.data_cancellazione is null
order
by 5 desc,2 asc,4 desc;    
--25.05.2020 FL SIAC-7349 Fine SR.SR165.SR167.SR169

begin
esito:='oknodata'::varchar;

if tipo_operazione_in = 'INSERIMENTO' then

      --data la modifica trovo il suo importo da sottrarre ai vincoli
      --modifiche di impegno
      SELECT c.movgest_ts_det_importo,
      c.ente_proprietario_id
      into importo_mod_da_scalare,
      ente_proprietario_id_in
      FROM siac_t_modifica a,
      siac_r_modifica_stato b,
      siac_t_movgest_ts_det_mod c,
      siac_d_modifica_stato d,
      siac_d_movgest_ts_det_tipo e,
      siac_t_movgest_ts f,
      siac_t_movgest g,
      siac_d_movgest_tipo h
      WHERE a.mod_id = mod_id_in and
      a.mod_id = b.mod_id AND
      c.mod_stato_r_id = b.mod_stato_r_id AND
      d.mod_stato_id = b.mod_stato_id and
      e.movgest_ts_det_tipo_id = c.movgest_ts_det_tipo_id and
      f.movgest_ts_id = c.movgest_ts_id and
      g.movgest_id = f.movgest_id and
      d.mod_stato_code = 'V' and
      h.movgest_tipo_id = g.movgest_tipo_id and
      h.movgest_tipo_code = 'I' and	  
      now() BETWEEN b.validita_inizio and
      COALESCE(b.validita_fine, now()) and
      a.data_cancellazione IS NULL AND
      b.data_cancellazione IS NULL AND
      c.data_cancellazione IS NULL AND
      d.data_cancellazione IS NULL and
      e.data_cancellazione is null and
      f.data_cancellazione is null and
      g.data_cancellazione is null and
      h.data_cancellazione is null;

      if importo_mod_da_scalare<0 then

      ----------nuova sez inizio -------------
      for rec in cur(mod_id_in) loop
          if rec.movgest_ts_importo is not null and importo_mod_da_scalare<0 then
              if rec.movgest_ts_importo + importo_mod_da_scalare < 0 then
                esito:='ok';
                update siac_r_movgest_ts
                  set movgest_ts_importo = movgest_ts_importo - movgest_ts_importo --per farlo diventare zero
                  ,login_operazione = login_operazione_in,data_modifica = clock_timestamp()
                  where movgest_ts_r_id = rec.movgest_ts_r_id;

                insert into siac_r_modifica_vincolo(mod_id, movgest_ts_r_id,
                  modvinc_tipo_operazione, importo_delta, validita_inizio, ente_proprietario_id,
                  login_operazione)
                values (mod_id_in, rec.movgest_ts_r_id, 'INSERIMENTO', - rec.movgest_ts_importo,
                  clock_timestamp(), ente_proprietario_id_in, login_operazione_in || ' - ' ||
                  'fnc_siac_riccertamento');

                /*INSERT INTO siac.tmp_riaccertamento_debug(tmp_mod_id_in,
                  tmp_login_operazione_in, tmp_tipo_operazione_in, tmp_movgest_ts_r_id,
                  tmp_movgest_ts_importo, tmp_importo_mod_da_scalare, esito)
                VALUES (mod_id_in, login_operazione_in, tipo_operazione_in, rec.movgest_ts_r_id,
                  rec.movgest_ts_importo, importo_mod_da_scalare, esito);*/

                importo_mod_da_scalare:= importo_mod_da_scalare + rec.movgest_ts_importo;

              elsif rec.movgest_ts_importo + importo_mod_da_scalare >= 0 then
                esito:='ok';
                update siac_r_movgest_ts set
                movgest_ts_importo = movgest_ts_importo + importo_mod_da_scalare
                , login_operazione=login_operazione_in, data_modifica=clock_timestamp()
                where movgest_ts_r_id=rec.movgest_ts_r_id;

                insert into siac_r_modifica_vincolo (mod_id,movgest_ts_r_id,modvinc_tipo_operazione,
                importo_delta,validita_inizio,ente_proprietario_id
                ,login_operazione )
                values
                (mod_id_in, rec.movgest_ts_r_id, 'INSERIMENTO',importo_mod_da_scalare,clock_timestamp(), ente_proprietario_id_in,
                login_operazione_in||' - '||'fnc_siac_riccertamento' );

                /*INSERT INTO siac.tmp_riaccertamento_debug(tmp_mod_id_in,
                tmp_login_operazione_in, tmp_tipo_operazione_in, tmp_movgest_ts_r_id,
                tmp_movgest_ts_importo, tmp_importo_mod_da_scalare, esito)
                VALUES (mod_id_in, login_operazione_in, tipo_operazione_in,
                rec.movgest_ts_r_id, rec.movgest_ts_importo, importo_mod_da_scalare,
                'ok=');*/

                importo_mod_da_scalare:= importo_mod_da_scalare - importo_mod_da_scalare;

              end if;
          end if;
       --  esito:='ok';
      end loop;
      ----------nuova sez fine -------------
      return next;
	  
	  end if;
	  

	--25.05.2020 FL SIAC-7349 Inizio SR.SR165.SR167.SR169
	if importo_mod_da_scalare IS  NULL then
     
	  
	  
	-- if importo_sum_det_mod_da_scalare>0 then --nel caso in cui esitono la somma importo collegamento maggiore di 0

      ----------nuova sez inizio -------------
      for recListaCollegata in curListaCollegata(mod_id_in) loop
	  
					--data la modifica trovo la somma dell'importo collegamento da sottrarre ai vincoli
			  --modifiche di impegno
		  SELECT sum(r.movgest_ts_det_mod_importo), -- importo collegamento
			   c.ente_proprietario_id
			   into importo_sum_det_mod_da_scalare,
				   ente_proprietario_id_in
			  FROM siac_t_modifica a,
				   siac_r_modifica_stato b,
				   siac_t_movgest_ts_det_mod c,
				   siac_r_movgest_ts_det_mod r, --tabella di relazione
				   siac_d_modifica_stato d,
				   siac_d_movgest_ts_det_tipo e,
				   siac_t_movgest_ts f,
				   siac_t_movgest g,
				   siac_d_movgest_tipo h
			 WHERE a.mod_id = mod_id_in and  
			  r.movgest_ts_det_mod_entrata_id = c.movgest_ts_det_mod_id and --metto in join 
			  a.mod_id = b.mod_id AND
			  c.mod_stato_r_id = b.mod_stato_r_id AND
			  d.mod_stato_id = b.mod_stato_id and
			  e.movgest_ts_det_tipo_id = c.movgest_ts_det_tipo_id and
			  f.movgest_ts_id = c.movgest_ts_id and
			  g.movgest_id = f.movgest_id and
			  d.mod_stato_code = 'V' and
			  h.movgest_tipo_id = g.movgest_tipo_id and
			  h.movgest_tipo_code = 'A' and
			  c.mtdm_reimputazione_flag=true and 
			  now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine, now()) and
			  a.data_cancellazione IS NULL AND
			  b.data_cancellazione IS NULL AND
			  c.data_cancellazione IS NULL AND
			  d.data_cancellazione IS NULL and
			  e.data_cancellazione is null and
			  f.data_cancellazione is null and
			  g.data_cancellazione is null and
			  h.data_cancellazione is null and 
			  r.data_cancellazione is null   and
			  EXISTS  
			  (select movgest_ts_det_mod_id
				 from siac_t_movgest_ts_det_mod ci,
					  siac_t_movgest_ts fi,
					  siac_t_movgest gi,
					  siac_r_movgest_ts i, 
					  siac_t_movgest_ts l, 
					  siac_d_movgest_ts_tipo m
				  where  r.movgest_ts_det_mod_spesa_id=ci.movgest_ts_det_mod_id and  
				         i.movgest_ts_r_id = recListaCollegata.movgest_ts_r_id and  -- aggiunta condizione per l'impegno
						 fi.movgest_ts_id = ci.movgest_ts_id and
						 gi.movgest_id = fi.movgest_id and
						 i.movgest_ts_b_id=fi.movgest_ts_id and --movgest_ts_a_id e' I = IMPEGNI
						 now() BETWEEN i.validita_inizio and COALESCE(i.validita_fine,now()) and
						 m.movgest_ts_tipo_id=fi.movgest_ts_tipo_id and
						 l.movgest_ts_id=i.movgest_ts_a_id and
						 ci.data_cancellazione is null and
						 fi.data_cancellazione is null and
						 i.data_cancellazione is null and
						 l.data_cancellazione is null and
						 m.data_cancellazione is null
			  )
			  group by c.ente_proprietario_id;
	  
	  
          if recListaCollegata.movgest_ts_importo is not null and importo_sum_det_mod_da_scalare>0 then
              if recListaCollegata.movgest_ts_importo - importo_sum_det_mod_da_scalare < 0 then
			    --CONTABILIA-258 Verifico  limite importo vincolo quando si collegano modifiche 
				--               di differimento di entrata a piu' modifiche di spesa sullo stesso impegno
				--esito:='ko';

			    esito:='koVincolo -  la somma dei collegamenti impostati supera l''importo del vincolo (' ||   trim(TO_CHAR(recListaCollegata.movgest_ts_importo,'99999999999999999D99')) || ') per l''impegno '||recListaCollegata.movgest_ts_code   ;
				return next;
				return;
/*
                esito:='ok';
                update siac_r_movgest_ts
                  set movgest_ts_importo = movgest_ts_importo - movgest_ts_importo --per farlo diventare zero
                  ,login_operazione = login_operazione_in,data_modifica = clock_timestamp()
                  where movgest_ts_r_id = recListaCollegata.movgest_ts_r_id;

                insert into siac_r_modifica_vincolo(mod_id, movgest_ts_r_id,
                  modvinc_tipo_operazione, importo_delta, validita_inizio, ente_proprietario_id,
                  login_operazione)
                values (mod_id_in, recListaCollegata.movgest_ts_r_id, 'INSERIMENTO', - recListaCollegata.movgest_ts_importo,
                  clock_timestamp(), ente_proprietario_id_in, login_operazione_in || ' - ' ||
                  'fnc_siac_riccertamento');

                /*INSERT INTO siac.tmp_riaccertamento_debug(tmp_mod_id_in,
                  tmp_login_operazione_in, tmp_tipo_operazione_in, tmp_movgest_ts_r_id,
                  tmp_movgest_ts_importo, tmp_importo_mod_da_scalare, esito)
                VALUES (mod_id_in, login_operazione_in, tipo_operazione_in, recListaCollegata.movgest_ts_r_id,
                  recListaCollegata.movgest_ts_importo,- importo_sum_det_mod_da_scalare, esito);*/

                importo_sum_det_mod_da_scalare:= importo_sum_det_mod_da_scalare - recListaCollegata.movgest_ts_importo;
*/
              elsif importo_sum_det_mod_da_scalare>0 and recListaCollegata.movgest_ts_importo - importo_sum_det_mod_da_scalare >= 0 then
                esito:='ok';
                update siac_r_movgest_ts set
                movgest_ts_importo = movgest_ts_importo - importo_sum_det_mod_da_scalare
                , login_operazione=login_operazione_in, data_modifica=clock_timestamp()
                where movgest_ts_r_id=recListaCollegata.movgest_ts_r_id;

                insert into siac_r_modifica_vincolo (mod_id,movgest_ts_r_id,modvinc_tipo_operazione,
                importo_delta,validita_inizio,ente_proprietario_id
                ,login_operazione )
                values
                (mod_id_in, recListaCollegata.movgest_ts_r_id, 'INSERIMENTO',-importo_sum_det_mod_da_scalare,clock_timestamp(), ente_proprietario_id_in,
                login_operazione_in||' - '||'fnc_siac_riccertamento' );

                /*INSERT INTO siac.tmp_riaccertamento_debug(tmp_mod_id_in,
                tmp_login_operazione_in, tmp_tipo_operazione_in, tmp_movgest_ts_r_id,
                tmp_movgest_ts_importo, tmp_importo_mod_da_scalare, esito)
                VALUES (mod_id_in, login_operazione_in, tipo_operazione_in,
                recListaCollegata.movgest_ts_r_id, recListaCollegata.movgest_ts_importo,- importo_sum_det_mod_da_scalare,
                'ok=');*/

                importo_sum_det_mod_da_scalare:= importo_sum_det_mod_da_scalare - importo_sum_det_mod_da_scalare;

              end if;
          end if;
       --  esito:='ok';
      end loop;
      ----------nuova sez fine -------------
      return next;
	  
	-- end if;

	end if;
	--25.05.2020 FL SIAC-7349 Fine SR.SR165.SR167.SR169

     

elsif tipo_operazione_in = 'ANNULLA' then

    for recannullamento in
    select a.* from siac_r_modifica_vincolo a where a.modvinc_tipo_operazione='INSERIMENTO'
    and a.mod_id=mod_id_in
    and a.data_cancellazione is null
    and now() between a.validita_inizio and coalesce(a.validita_fine,now())

    loop

    --aggiorna importo riportandolo a situazione pre riaccertamento
    update siac_r_movgest_ts set movgest_ts_importo=movgest_ts_importo-recannullamento.importo_delta
    where movgest_ts_r_id=recannullamento.movgest_ts_r_id;

    --inserisce record di ANNULLAMENTO con importo_delta=-importo_delta
    INSERT INTO
      siac.siac_r_modifica_vincolo
    (
      mod_id,
      movgest_ts_r_id,
      modvinc_tipo_operazione,
      importo_delta,
      validita_inizio,
      ente_proprietario_id,
      login_operazione
    )
    values (recannullamento.mod_id,
    recannullamento.movgest_ts_r_id,
    'ANNULLAMENTO',--tipo_operazione_in,
    -recannullamento.importo_delta,
    clock_timestamp(),
    recannullamento.ente_proprietario_id,
    login_operazione_in||' - '||'fnc_siac_riccertamento'
    );

    --annulla precedente modifica in INSERIMENTO
    update siac_r_modifica_vincolo set validita_fine=clock_timestamp()
    where modvinc_id=recannullamento.modvinc_id
    ;
    esito:='ok';

    --insert tabella debug
    /*  INSERT INTO
      siac.tmp_riaccertamento_debug
    (
      tmp_mod_id_in,
      tmp_login_operazione_in,
      tmp_tipo_operazione_in,
      tmp_movgest_ts_r_id,
      tmp_movgest_ts_importo,
      tmp_importo_mod_da_scalare,
      esito
    )
    VALUES (
      mod_id_in,
      login_operazione_in,
      tipo_operazione_in,
      recannullamento.movgest_ts_r_id,
      null,
      -recannullamento.importo_delta,
      esito
    );
*/

    end loop;
    return next;

end if;----tipo_operazione_in = 'INSERIMENTO'

/*if esito='oknodata' then
INSERT INTO
  siac.tmp_riaccertamento_debug
(
  tmp_mod_id_in,
  tmp_login_operazione_in,
  tmp_tipo_operazione_in,
esito
) VALUES(
 mod_id_in,
  login_operazione_in,
  tipo_operazione_in,
  esito);

end if;
*/

EXCEPTION
WHEN others THEN
  esito:='ko';
  RAISE NOTICE '%-%.',SQLSTATE,SQLERRM;
RETURN;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_riaccertamento(integer, character varying, character varying)
    OWNER TO siac; 
--end fnc_siac_riaccertamento

--start fnc_siac_dicuiimpegnatoug_comp_anno
CREATE OR REPLACE FUNCTION siac.fnc_siac_dicuiimpegnatoug_comp_anno(
	id_in integer,
	anno_in character varying,
	verifica_mod_prov boolean DEFAULT true)
    RETURNS TABLE(annocompetenza character varying, dicuiimpegnato numeric) 
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$
DECLARE

-- constant
TIPO_CAP_UG constant varchar:='CAP-UG';
NVL_STR     constant varchar:='';
STA_IMP     constant varchar:='STA';

TIPO_IMP    constant varchar:='I';
TIPO_IMP_T  constant varchar:='T';

STATO_DEF   constant varchar:='D';
STATO_N     constant varchar:='N';
STATO_P     constant varchar:='P';
STATO_A     constant varchar:='A';
IMPORTO_ATT constant varchar:='A';

STATO_MOD_V  constant varchar:='V';
STATO_ATTO_P constant varchar:='PROVVISORIO';

-- anna_economie inizio
STATO_ATTO_D constant varchar:='DEFINITIVO';
attoAmmStatoDId integer:=0;
importoModifINS  numeric:=0;
-- anna_economie fine

strMessaggio varchar(1500):=NVL_STR;

bilancioId integer:=0;
enteProprietarioId INTEGER:=0;
annoBilancio varchar:=null;

movGestTipoId integer:=0;
movGestTsTipoId integer:=0;
movGestStatoId integer:=0;
movGestTsDetTipoId integer:=0;

movGestTsId integer:=0;

importoAttuale numeric:=0;
importoCurAttuale numeric:=0;
importoModifNeg  numeric:=0;

modStatoVId integer:=0;
attoAmmStatoPId integer:=0;

movGestIdRec record;

esisteRmovgestidelemid INTEGER:=0;

BEGIN

select el.elem_id into esisteRmovgestidelemid from siac_r_movgest_bil_elem el, siac_t_movgest mv
where
mv.movgest_id=el.movgest_id
and el.elem_id=id_in
and mv.movgest_anno=anno_in::integer
;

 -- 02.02.2016 Sofia JIRA 2947
if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;

if esisteRmovgestidelemid <>0 then

 annoCompetenza:=null;
 diCuiImpegnato:=0;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.Controllo parametri.';

 if anno_in is null or anno_in=NVL_STR then
	 RAISE EXCEPTION '% Anno di competenza mancante.',strMessaggio;
 end if;

 if id_in is null or id_in=0 then
	 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
 end if;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
			   ||'.Calcolo bilancioId enteProprietarioId  annoBilancio.';

 select bil.bil_id,  bil.ente_proprietario_id,  per.anno
        into strict bilancioId, enteProprietarioId, annoBilancio
 from siac_t_bil bil,siac_t_bil_elem bilElem, siac_t_periodo per
 where bilElem.elem_id=id_in
 and   bilElem.data_cancellazione is null
 and   bil.bil_id=bilElem.bil_id
 and   per.periodo_id=bil.periodo_id;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo movGestTipoId.';
 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
 from  siac_d_movgest_tipo tipoMovGest
 where tipoMovGest.ente_proprietario_id=enteProprietarioId
 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo movGestTsTipoId.';
/* select movGestTsTipo.movgest_ts_tipo_id into strict movGestTsTipoId
 from siac_d_movgest_ts_tipo movGestTsTipo
 where movGestTsTipo.ente_proprietario_id=enteProprietarioId
 and   movGestTsTipo.movgest_ts_tipo_code=TIPO_IMP_T;
*/
 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo movGestTsStatoId.';

 select movGestStato.movgest_stato_id into strict movGestStatoId
 from siac_d_movgest_stato movGestStato
 where movGestStato.ente_proprietario_id=enteProprietarioId
 and   movGestStato.movgest_stato_code=STATO_A;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo movGestTsDetTipoId.';

 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT;

 -- 16.03.2017 Sofia JIRA-SIAC-4614
 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo modStatoVId.';
 select d.mod_stato_id into strict modStatoVId
 from siac_d_modifica_stato d
 where d.ente_proprietario_id=enteProprietarioId
 and   d.mod_stato_code=STATO_MOD_V;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo attoAmmStatoPId.';
 select d.attoamm_stato_id into strict attoAmmStatoPId
 from siac_d_atto_amm_stato d
 where d.ente_proprietario_id=enteProprietarioId
 and   d.attoamm_stato_code=STATO_ATTO_P;
 -- 16.03.2017 Sofia JIRA-SIAC-4614

 -- anna_economie inizio
 select d.attoamm_stato_id into strict attoAmmStatoDId
 from siac_d_atto_amm_stato d
 where d.ente_proprietario_id=enteProprietarioId
 and   d.attoamm_stato_code=STATO_ATTO_D;
 -- anna_economie fine

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'. Inizio calcolo totale importo attuale impegni per anno_in='||anno_in||'.';

 --nuovo G
   	importoCurAttuale:=0;

    select tb.importo into importoCurAttuale
 from (
  select
      coalesce(sum(e.movgest_ts_det_importo),0)  importo
      , c.movgest_ts_tipo_id
    from
      siac_r_movgest_bil_elem a,
      siac_t_movgest b,
      siac_t_movgest_ts c,
      siac_r_movgest_ts_stato d,
      siac_t_movgest_ts_det e
      ,siac_d_movgest_ts_det_tipo f
      where
      b.movgest_id=a.movgest_id and
      a.elem_id=id_in
      and b.bil_id = bilancioId
      and b.movgest_tipo_id=movGestTipoId
	  and d.movgest_stato_id<>movGestStatoId
	  and b.movgest_anno = anno_in::integer
      and c.movgest_id=b.movgest_id
      and d.movgest_ts_id=c.movgest_ts_id
      and d.validita_fine is null
      and e.movgest_ts_id=c.movgest_ts_id
	and a.data_cancellazione is null
    and b.data_cancellazione is null
    and c.data_cancellazione is null
     and e.data_cancellazione is null
     and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
    and e.movgest_ts_det_tipo_id=movGestTsDetTipoId
    group by
   c.movgest_ts_tipo_id
    ) tb, siac_d_movgest_ts_tipo t
    where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
    order by t.movgest_ts_tipo_code desc
    limit 1;

/*select tb.importo into importoCurAttuale from (
  select
      coalesce(sum(e.movgest_ts_det_importo),0)  importo
      , c.movgest_ts_tipo_id
      from
      siac_r_movgest_bil_elem a,
      siac_t_movgest b,
      siac_t_movgest_ts c,
      siac_r_movgest_ts_stato d,
      siac_t_movgest_ts_det e
      ,siac_d_movgest_ts_det_tipo f
      where
      b.movgest_id= ANY (VALUES (a.movgest_id)) and
      a.elem_id=id_in
      and b.bil_id = bilancioId
      and b.movgest_tipo_id=movGestTipoId
	  and d.movgest_stato_id<>movGestStatoId
	  and b.movgest_anno = anno_in::integer
      and c.movgest_id=b.movgest_id
      and d.movgest_ts_id=c.movgest_ts_id
      and d.validita_fine is null
      and e.movgest_ts_id=c.movgest_ts_id
	and a.data_cancellazione is null
    and b.data_cancellazione is null
    and c.data_cancellazione is null
     and e.data_cancellazione is null
     and f.movgest_ts_det_tipo_id=ANY (VALUES (e.movgest_ts_det_tipo_id))
    and e.movgest_ts_det_tipo_id=ANY (VALUES (movGestTsDetTipoId))
    group by c.movgest_ts_tipo_id
    ) tb, siac_d_movgest_ts_tipo t
    where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
    and t.movgest_ts_tipo_code=TIPO_IMP_T;--'T'; */

 /* select
      coalesce(sum(e.movgest_ts_det_importo),0) into importoCurAttuale
      from
      siac_r_movgest_bil_elem a,
      siac_t_movgest b,
      siac_t_movgest_ts c,
      siac_r_movgest_ts_stato d,
      siac_t_movgest_ts_det e
      ,siac_d_movgest_ts_det_tipo f
      where
      b.movgest_id= ANY (VALUES (a.movgest_id)) and
      a.elem_id=id_in
      and b.bil_id = bilancioId
      and b.movgest_tipo_id=movGestTipoId
	  and d.movgest_stato_id<>movGestStatoId
	  and b.movgest_anno = anno_in::integer
      and c.movgest_id=b.movgest_id
      and d.movgest_ts_id=c.movgest_ts_id
      and e.movgest_ts_id=c.movgest_ts_id
	and a.data_cancellazione is null
    and b.data_cancellazione is null
    and c.data_cancellazione is null
     and e.data_cancellazione is null
     and f.movgest_ts_det_tipo_id=ANY (VALUES (e.movgest_ts_det_tipo_id))
    and e.movgest_ts_det_tipo_id=ANY (VALUES (movGestTsDetTipoId));*/

  --raise notice 'importoCurAttuale:%', importoCurAttuale;
 --fine nuovo G
 /*for movGestIdRec in
 (
     select movGestRel.movgest_id
     from siac_r_movgest_bil_elem movGestRel
     where movGestRel.elem_id=id_in
     and   movGestRel.data_cancellazione is null
     and   exists (select 1 from siac_t_movgest movGest
   				   where movGest.movgest_id=movGestRel.movgest_id
			       and	 movGest.bil_id = bilancioId
			       and   movGest.movgest_tipo_id=movGestTipoId
				   and   movGest.movgest_anno = anno_in::integer)
 )
 loop
   	importoCurAttuale:=0;

    strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
                      ||'.Calcolo impegnato anno_in='||anno_in
                      ||'.Lettura siac_t_movgest_ts movGestTs.movgest_id='||movGestIdRec.movgest_id||'.';

    select movgestts.movgest_ts_id into  movGestTsId
    from siac_t_movgest_ts movGestTs
    where movGestTs.movgest_id = movGestIdRec.movgest_id
    and   movGestTs.data_cancellazione is null
    and   movGestTs.movgest_ts_tipo_id=movGestTsTipoId
    and   exists (select 1 from siac_r_movgest_ts_stato movGestTsRel
                  where movGestTsRel.movgest_ts_id=movGestTs.movgest_ts_id
                  and   movGestTsRel.movgest_stato_id!=movGestStatoId);

    strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
                      ||'.Calcolo accertato anno_in='||anno_in||'Somma siac_t_movgest_ts_det movGestTs.movgest_id='||movGestIdRec.movgest_id||'.';
    if NOT FOUND then
    else
       select coalesce(sum(movGestTsDet.movgest_ts_det_importo),0) into importoCurAttuale
           from siac_t_movgest_ts_det movGestTsDet
           where movGestTsDet.movgest_ts_id=movGestTsId
           and   movGestTsDet.movgest_ts_det_tipo_id=movGestTsDetTipoId;
    end if;

    importoAttuale:=importoAttuale+importoCurAttuale;
 end loop;*/
 -- 02.02.2016 Sofia JIRA 2947
 if importoCurAttuale is null then importoCurAttuale:=0; end if;

 -- 16.03.2017 Sofia JIRA-SIAC-4614
-- if importoCurAttuale>0 then
 if importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

  strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'. Calcolo totale modifiche negative su atti provvisori per anno_in='||anno_in||'.';

 select tb.importo into importoModifNeg
 from
 (
 	select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
	from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
    	 siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
	     siac_t_movgest_ts_det_mod moddet,
    	 siac_t_modifica mod, siac_r_modifica_stato rmodstato,
	     siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
         siac_d_modifica_tipo tipom
	where rbil.elem_id=id_in
	and	  mov.movgest_id=rbil.movgest_id
	and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
    and   mov.movgest_anno=anno_in::integer
    and   mov.bil_id=bilancioId
	and   ts.movgest_id=mov.movgest_id
	and   rstato.movgest_ts_id=ts.movgest_ts_id
	and   rstato.movgest_stato_id!=movGestStatoId -- impegno non annullato
	and   tsdet.movgest_ts_id=ts.movgest_ts_id
	and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
	and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
	and   moddet.movgest_ts_det_importo<0 -- importo negativo
	and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
	and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
	and   mod.mod_id=rmodstato.mod_id
	and   atto.attoamm_id=mod.attoamm_id
	and   attostato.attoamm_id=atto.attoamm_id
	and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
    and   tipom.mod_tipo_id=mod.mod_tipo_id
    and   tipom.mod_tipo_code <> 'ECONB'
	-- date
	and rbil.data_cancellazione is null
	and rbil.validita_fine is null
	and mov.data_cancellazione is null
	and mov.validita_fine is null
	and ts.data_cancellazione is null
	and ts.validita_fine is null
	and rstato.data_cancellazione is null
	and rstato.validita_fine is null
	and tsdet.data_cancellazione is null
	and tsdet.validita_fine is null
	and moddet.data_cancellazione is null
	and moddet.validita_fine is null
	and mod.data_cancellazione is null
	and mod.validita_fine is null
	and rmodstato.data_cancellazione is null
	and rmodstato.validita_fine is null
	and attostato.data_cancellazione is null
	and attostato.validita_fine is null
	and atto.data_cancellazione is null
	and atto.validita_fine is null
    group by ts.movgest_ts_tipo_id
  ) tb, siac_d_movgest_ts_tipo tipo
  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
  order by tipo.movgest_ts_tipo_code desc
  limit 1;
  -- 21.06.2017 Sofia - aggiunto parametro verifica_mod_prov, ripreso da prod CmTo dove era stato implementato
  if importoModifNeg is null or verifica_mod_prov is false then importoModifNeg:=0; end if;

  -- anna_economie inizio
   select tb.importo into importoModifINS
 from
 (
 	select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
	from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
    	 siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
	     siac_t_movgest_ts_det_mod moddet,
    	 siac_t_modifica mod, siac_r_modifica_stato rmodstato,
	     siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
         siac_d_modifica_tipo tipom
	where rbil.elem_id=id_in
	and	  mov.movgest_id=rbil.movgest_id
	and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
    and   mov.movgest_anno=anno_in::integer
    and   mov.bil_id=bilancioId
	and   ts.movgest_id=mov.movgest_id
	and   rstato.movgest_ts_id=ts.movgest_ts_id
	and   rstato.movgest_stato_id!=movGestStatoId -- impegno non annullato
	and   tsdet.movgest_ts_id=ts.movgest_ts_id
	and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
	and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
	-- SIAC-7349
	-- abbiamo tolto il commento nella riga qui sotto perche' d'accordo con Pietro Gambino 
	-- e visto che possono anche esserci modifiche ECONB positive
	-- e' bene escluderle dal calcolo importoModifINS
	and   moddet.movgest_ts_det_importo<0 -- importo negativo
	and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
	and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
	and   mod.mod_id=rmodstato.mod_id
	and   atto.attoamm_id=mod.attoamm_id
	and   attostato.attoamm_id=atto.attoamm_id
	and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
    and   tipom.mod_tipo_id=mod.mod_tipo_id
    and   tipom.mod_tipo_code = 'ECONB'
	-- date
	and rbil.data_cancellazione is null
	and rbil.validita_fine is null
	and mov.data_cancellazione is null
	and mov.validita_fine is null
	and ts.data_cancellazione is null
	and ts.validita_fine is null
	and rstato.data_cancellazione is null
	and rstato.validita_fine is null
	and tsdet.data_cancellazione is null
	and tsdet.validita_fine is null
	and moddet.data_cancellazione is null
	and moddet.validita_fine is null
	and mod.data_cancellazione is null
	and mod.validita_fine is null
	and rmodstato.data_cancellazione is null
	and rmodstato.validita_fine is null
	and attostato.data_cancellazione is null
	and attostato.validita_fine is null
	and atto.data_cancellazione is null
	and atto.validita_fine is null
    group by ts.movgest_ts_tipo_id
  ) tb, siac_d_movgest_ts_tipo tipo
  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
  order by tipo.movgest_ts_tipo_code desc
  limit 1;
  
  if importoModifINS is null then importoModifINS:=0; end if;
  
  -- anna_economie fine

 end if;

 --nuovo G
 importoAttuale:=importoAttuale+importoCurAttuale+abs(importoModifNeg); -- 16.03.2017 Sofia JIRA-SIAC-4614
 --fine nuovoG

 -- anna_economie inizio
 importoAttuale:=importoAttuale+abs(importoModifINS);
 -- anna_economie fine 

 annoCompetenza:=anno_in;
 diCuiImpegnato:=importoAttuale;

 return next;

else

annoCompetenza:=anno_in;
diCuiImpegnato:=0;

return next;

end if;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return;
	when no_data_found then
	    RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_dicuiimpegnatoug_comp_anno(integer, character varying, boolean)
    OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoug_comp_anno(integer, character varying, boolean) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoug_comp_anno(integer, character varying, boolean) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_dicuiimpegnatoug_comp_anno(integer, character varying, boolean) TO siac;

--end fnc_siac_dicuiimpegnatoug_comp_anno

-- Aggiunte/modificate per versione 4.26
    
-- start fnc_siac_impegnatodefinitivoup_comp_triennio_nostanz

/*
*SPDX-FileCopyrightText: Copyright 2020 | CSI Piemonte
*SPDX-License-Identifier: EUPL-1.2
*/

CREATE OR REPLACE FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp_triennio_nostanz(
	id_in integer,
	idcomp_in integer[])
    RETURNS TABLE(elemdetcompid integer, elemdetcompdesc character varying, annoimpegnato integer, impegnatodefinitivo numeric, elemdetcompmacrotipodesc character varying) 
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$
DECLARE

annoBilancio varchar:=null;
annoEsercizio varchar:=null;
annoMovimento varchar:=null;

elemIdGestEq integer:=0;
bilIdElemGestEq integer:=0;
NVL_STR     constant varchar:='';
faseOpCode varchar(20):=NVL_STR;
bilancioId integer:=0;
elemTipoCode VARCHAR(20):=NVL_STR;
elemCode varchar(50):=NVL_STR;
elemCode2 varchar(50):=NVL_STR;
elemCode3 varchar(50):=NVL_STR;
enteProprietarioId INTEGER:=0;
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
FASE_OP_BIL_PREV constant VARCHAR:='P';
STATO_A     constant varchar:='A';
STATO_P     constant varchar:='P';
TIPO_IMP    constant varchar:='I';
movGestStatoIdAnnullato integer:=0;
movGestStatoIdProvvisorio integer:=0;
movGestTipoId integer:=0;
IMPORTO_ATT constant varchar:='A';
movGestTsDetTipoId integer:=0;
IMPORTO_INIZIALE constant varchar:='I';
movGestTsDetTipoIdIniziale integer:=0;
STATO_MOD_V  constant varchar:='V';
modStatoVId integer:=0;
attoAmmStatoPId integer:=0;
STATO_ATTO_P constant varchar:='PROVVISORIO';
STATO_ATTO_D constant varchar:='DEFINITIVO';
attoAmmStatoDId integer:=0;
importoCurAttuale numeric:=0;
esisteRmovgestidelemid INTEGER:=0;
importoModifDelta  numeric:=0;
importoModifINS numeric:=0; --aggiunta per ECONB
impegniDaRibaltamento integer:=0;
pluriennaliDaRibaltamento integer:=0;
flagNMaggioreNPiu2 integer:=0;
flagDeltaPagamenti integer:=0;
importoImpegnato numeric:=0;
importoPagatoDelta numeric:=0;
ordStatoAId          integer:=null;
ordTsDetTipoAId      integer:=null;
-- stati ordinativi
STATO_ORD_A    constant varchar:='A'; -- ANNULLATO
-- importoAttuale ordinativi
ORD_TS_DET_TIPO_A  constant varchar:='A';

sidcomp_in  varchar:=null;
strMessaggio varchar(1500):=null;

impComponenteRec record;

BEGIN

/* Calcola impegnato definitivo per quelle componenti per le quali pur non essendoci stanziamento
 * esistono quote di impegnato nel triennio
 * Le componenti per le quali esiste stanziamento (e quindi da non considerare) sono passate in input nell'array idcomp_in
 * NOTA: per problemi Java/Hibernate idcomp_in non puo essere un array vuoto, quindi 
 *		l'array in input conterra' sempre la componente fittizia idcomp = -1
 */
-- CALCOLO IMPEGNATO DEFINITIVO 
-- Stiamo sempre parlando di impegnato sul capitolo di gestione equivalente	

	sidcomp_in:=array_to_string(idcomp_in, ',');
    	strMessaggio:='Calcolo totale impegnato definitovo elem_id='||id_in|| ' escludo idcomp_in='||sidcomp_in|| '.';
	-- Controllo parametri in input
	if id_in is null or id_in=0 then
		 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
	end if;
 
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in||
    			  '.Lettura anno di bilancio del capitolo UP.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;
	strMessaggio:=strMessaggio || 'annoBilancio='||annoBilancio|| '.';

		  

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in||
    			  '. Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId e elem_tipo_code.';
	 select bilelem.elem_code, bilElem.elem_code2, bilElem.elem_code3, bil.bil_id ,tipoBilElem.elem_tipo_code, per.anno , bil.ente_proprietario_id
	 into strict elemCode, elemCode2, elemCode3, bilancioId, elemTipoCode , annoBilancio,enteProprietarioId
	 from 	siac_t_bil_elem bilElem, 
	 		siac_d_bil_elem_tipo tipoBilElem,
		  	siac_t_bil bil, siac_t_periodo per
	 where bilElem.elem_id=id_in
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
	   and bil.bil_id=bilElem.bil_id
	   and per.periodo_id=bil.periodo_id;

	 if elemTipoCode is not null and elemTipoCode!=NVL_STR and elemTipoCode!=TIPO_CAP_UP then
			RAISE EXCEPTION '% elemTipoCode=%  non ammesso per tipo di calcolo.',strMessaggio,elemTipoCode;
	 end if;

	 strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in||
				   '. Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   'Calcolo fase operativa per bilancioId='||bilancioId
				   ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select  faseOp.fase_operativa_code into  faseOpCode
	 from siac_r_bil_fase_operativa bilFase, siac_d_fase_operativa faseOp
	 where bilFase.bil_id =bilancioId
	   and bilfase.data_cancellazione is null
	   and bilFase.validita_fine is null
	   and faseOp.fase_operativa_id=bilFase.fase_operativa_id
	   and faseOp.data_cancellazione is null
	 order by bilFase.bil_fase_operativa_id desc;

	 if NOT FOUND THEN
	   RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
	 end if;

	 strMessaggio:='Calcolo impegnato definitivo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTipoId per movgest_tipo_code=IMPEGNO';
	 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
	 from  siac_d_movgest_tipo tipoMovGest
	 where tipoMovGest.ente_proprietario_id=enteProprietarioId
	 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTsStatoIdAnnullato per movgest_stato_code=ANNULLATO'
				  ||'. Calcolo movGestTsStatoIdProvvisorio per movgest_stato_code=PROVVISORIO';

	 select movGestStato.movgest_stato_id into strict movGestStatoIdAnnullato
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_A;

	 select  movGestStato.movgest_stato_id into strict movGestStatoIdProvvisorio
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_P; 
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTsDetTipoId per movgest_ts_det_tipo_code=IMPORTO ATTUALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTsDetTipoIdIniziale per movgest_ts_det_tipo_code=IMPORTO INIZIALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoIdIniziale
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_INIZIALE;
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
              ||'. Calcolo modStatoVId per mod_stato_code=VALIDO.';
	 select d.mod_stato_id into strict modStatoVId
	 from siac_d_modifica_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.mod_stato_code=STATO_MOD_V;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo attoAmmStatoPId per attoamm_stato_code=PROVVISORIO';
	 select d.attoamm_stato_id into strict attoAmmStatoPId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_P;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo attoAmmStatoDId per attoamm_stato_code=DEFINITIVO';
	 select d.attoamm_stato_id into strict attoAmmStatoDId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_D;

 	-- Calcolo Impegnato definitivo - Anno N:
	-- Verifica se presenti i movimenti di gestione provenienti dal ribaltamento
	-- Per "ribaltamento" si intende  il batch di ribaltamento residui che gira prima del ROR 
	--	e che "copia" gli impegni dell'anno N-1 nel bilancio dell'anno N (di solito il 2 gennaio)
	-- Per verificare che il batch di ribaltamento sia stato eseguito controllo le seguenti tabelle
	-- 		fase_bil_t_gest_apertura_liq_imp per gli impegni residui
	--  	fase_bil_t_gest_apertura_pluri per i pluriennli (sia impegni che accertamenti)
	-- In entrambe c'e' sia il bil_id che il bil_id_orig ovvero l'anno nuovo su cui si stanno ribaltando i movimenti e l'anno prec
	-- c'e' anche un campo fl_elab che ti dice se i dati sono stati elaborati con scarto o con successo 

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in||
				 '.Verifica se presenti i movimenti di gestione provenienti dal ribaltamento per anno di esercizio N.';
	
	impegniDaRibaltamento:=0;
	pluriennaliDaRibaltamento:=0;
	importoCurAttuale:=0;	
	importoModifDelta:=0;
	importoModifINS := 0;
	
	select  count(*) into impegniDaRibaltamento 
	from fase_bil_t_gest_apertura_liq_imp fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;

	select  count(*) into  pluriennaliDaRibaltamento
	from fase_bil_t_gest_apertura_pluri fb 
	where 
	fb.movgest_Ts_id is not null
	and fb.bil_id = bilancioId
	and fb.data_cancellazione is null
	and fb.validita_fine is null;

	strMessaggio:=strMessaggio || 'impegniDaRibaltamento='||impegniDaRibaltamento|| '.';
	strMessaggio:=strMessaggio || 'pluriennaliDaRibaltamento='||pluriennaliDaRibaltamento|| '.';

	if impegniDaRibaltamento>0 and pluriennaliDaRibaltamento>0 then

	-- - Se presenti i movimenti gestione provenienti dal ribaltamento 
		annoEsercizio:=annoBilancio;
		annoMovimento:=annoBilancio;
	else

		-- - Se non presenti i movimenti gestione provenienti dal ribaltamento 
		annoEsercizio:=((annoBilancio::INTEGER)-1)::varchar;
		annoMovimento:=annoBilancio;
	end if;
	
	strMessaggio:=strMessaggio || 'annoEsercizio='||annoEsercizio|| '.';
	strMessaggio:=strMessaggio || 'annoMovimento='||annoMovimento|| '.';


	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in||
				   '.Determina capitolo di gestione equivalente in anno esercizio calcolato' || 
				   '. Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    -- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';
	strMessaggio:=strMessaggio || 'bilIdElemGestEq='||bilIdElemGestEq|| '.';


	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo impegnato competenza UP.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;
	strMessaggio:=strMessaggio || 'elemIdGestEq='||elemIdGestEq|| '.';

	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else
	
		strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento|| 
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid 
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno IN (annoMovimento::integer,  annoMovimento::integer+1, annoMovimento::integer+2)
			and NOT (el.elem_det_comp_tipo_id = ANY( idcomp_in)) --SIAC-7349
			;
		
		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;

		strMessaggio:=strMessaggio || 'esisteRmovgestidelemid='||esisteRmovgestidelemid|| '.';


		if esisteRmovgestidelemid <>0 then
 			impegnatoDefinitivo:=0;
			strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

			/* Versione con group by per le componenti non da escludere e ciclo per ogni componente */
			for impComponenteRec in
			 (
				select tb.elem_det_comp_tipo_id as compId, 
				 g.elem_det_comp_tipo_desc as compDesc, 
				 tb.importo as importoCurAttuale,
				 h.elem_det_comp_macro_tipo_desc as compMacroTipoDesc,
				 tb.movgest_anno as annualita
				from (
				  select
					  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id, a.elem_det_comp_tipo_id, b.movgest_anno
				  from
					  siac_r_movgest_bil_elem a,
					  siac_t_movgest b,
					  siac_t_movgest_ts c,
					  siac_r_movgest_ts_stato d,
					  siac_t_movgest_ts_det e,
					  siac_d_movgest_ts_det_tipo f
				  where
					  b.movgest_id=a.movgest_id 
					  and a.elem_id=elemIdGestEq 
					  and NOT( a.elem_det_comp_tipo_id = ANY(idcomp_in)) --SIAC-7349 --id componente diversa da quella ricevuta in input
					  and b.bil_id = bilIdElemGestEq
					  and b.movgest_tipo_id=movGestTipoId
					  and d.movgest_stato_id<>movGestStatoIdAnnullato
					  -- SIAC-7737 GS 31/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				      -- and d.movgest_stato_id<>movGestStatoIdProvvisorio
					  and b.movgest_anno IN (annoMovimento::integer,  annoMovimento::integer+1, annoMovimento::integer+2)
					  and c.movgest_id=b.movgest_id
					  and d.movgest_ts_id=c.movgest_ts_id
					  and d.validita_fine is null
					  and e.movgest_ts_id=c.movgest_ts_id
					  and a.data_cancellazione is null
					  and b.data_cancellazione is null
					  and c.data_cancellazione is null
					  and e.data_cancellazione is null
					  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
					  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId
					  group by 	c.movgest_ts_tipo_id, 
								a.elem_det_comp_tipo_id, -- SIAC-7349
								b.movgest_anno
					) tb, 
					siac_d_movgest_ts_tipo t,
					siac_d_bil_elem_det_comp_tipo g,
				 	siac_d_bil_elem_det_comp_macro_tipo h
				where 
					tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
					and g.elem_det_comp_tipo_id = tb.elem_det_comp_tipo_id --SIAC-7349 recupera anche la descrizione della componente
					and g.elem_det_comp_macro_tipo_id = h.elem_det_comp_macro_tipo_id --SIAC-7349 recupera anche la descrizione del macrotipo della componente
				 order by t.movgest_ts_tipo_code desc
 			) 
			loop
			

					-- 02.02.2016 Sofia JIRA 2947
					 if impComponenteRec.importoCurAttuale is null then impComponenteRec.importoCurAttuale:=0; end if;

					 -- 16.03.2017 Sofia JIRA-SIAC-4614
					-- if importoCurAttuale>0 then
					 if impComponenteRec.importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

						strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'  impComponenteRec.compId='||impComponenteRec.compId||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Calcolo totale modifiche su atti provvisori per annoMovimento='||annoMovimento||'.';

						select tb.importo into importoModifDelta
						 from
						 (
							select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
							from siac_r_movgest_bil_elem rbil, 
								 siac_t_movgest mov,
								 siac_t_movgest_ts ts,
								 siac_r_movgest_ts_stato rstato,
								 siac_t_movgest_ts_det tsdet,
								 siac_t_movgest_ts_det_mod moddet,
								 siac_t_modifica mod, 
								 siac_r_modifica_stato rmodstato,
								 siac_r_atto_amm_stato attostato, 
								 siac_t_atto_amm atto,
								 siac_d_modifica_tipo tipom
							where 
								rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
								and rbil.elem_det_comp_tipo_id=impComponenteRec.compId --SIAC-7349 deve essere sulla compoenente del record 
								and	  mov.movgest_id=rbil.movgest_id
								and   mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
								and   mov.movgest_anno>annoMovimento::integer -- anno dell impegno = annoMovimento 
								and   mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
								and   ts.movgest_id=mov.movgest_id
								and   rstato.movgest_ts_id=ts.movgest_ts_id
								and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- Impegno non ANNULLATO
							    -- SIAC-7737 GS 31/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
						        -- and   rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
								and   tsdet.movgest_ts_id=ts.movgest_ts_id
								and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
								and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
								-- SIAC-7349 Prendo tutti gli importi, sia con segno negativo che con segno positivo
								-- La loro somma produce il valore importoModifDelta che devo sottrarre all'impegnato calcolato
								-- ad esempio: modifiche su atto provv +100, -322 -> somma -222 si tratta di un delta che devo sottrarre
								-- all'impegnato calcolato = impegnato calcolato - (-222) = +222 (aggiungo quello che avevo tolto)
								-- and   moddet.movgest_ts_det_importo<0 -- importo negativo
								and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
								and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
								and   mod.mod_id=rmodstato.mod_id
								and   atto.attoamm_id=mod.attoamm_id
								and   attostato.attoamm_id=atto.attoamm_id
								and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
								and   tipom.mod_tipo_id=mod.mod_tipo_id
								and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
								-- date
								and rbil.data_cancellazione is null
								and rbil.validita_fine is null
								and mov.data_cancellazione is null
								and mov.validita_fine is null
								and ts.data_cancellazione is null
								and ts.validita_fine is null
								and rstato.data_cancellazione is null
								and rstato.validita_fine is null
								and tsdet.data_cancellazione is null
								and tsdet.validita_fine is null
								and moddet.data_cancellazione is null
								and moddet.validita_fine is null
								and mod.data_cancellazione is null
								and mod.validita_fine is null
								and rmodstato.data_cancellazione is null
								and rmodstato.validita_fine is null
								and attostato.data_cancellazione is null
								and attostato.validita_fine is null
								and atto.data_cancellazione is null
								and atto.validita_fine is null
								group by ts.movgest_ts_tipo_id
							  ) tb, siac_d_movgest_ts_tipo tipo
							  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
							  order by tipo.movgest_ts_tipo_code desc
							  limit 1;		

						if importoModifDelta is null then importoModifDelta:=0; end if;
						  /*Aggiunta delle modifiche ECONB*/
						 -- anna_economie inizio
						select tb.importo into importoModifINS
						from
						(
							select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
							from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
							siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
							siac_t_movgest_ts_det_mod moddet,
							siac_t_modifica mod, siac_r_modifica_stato rmodstato,
							siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
							siac_d_modifica_tipo tipom
						where rbil.elem_id=elemIdGestEq
						and rbil.elem_det_comp_tipo_id=impComponenteRec.compId --SIAC-7349
						and	  mov.movgest_id=rbil.movgest_id
						and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
						and   mov.movgest_anno=annoMovimento::integer
						and   mov.bil_id=bilancioId
						and   ts.movgest_id=mov.movgest_id
						and   rstato.movgest_ts_id=ts.movgest_ts_id
						and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- impegno non annullato
						and   tsdet.movgest_ts_id=ts.movgest_ts_id
						and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
						and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
					   and   tipom.mod_tipo_id=mod.mod_tipo_id
					   and   tipom.mod_tipo_code = 'ECONB'
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
					   group by ts.movgest_ts_tipo_id
					 ) tb, siac_d_movgest_ts_tipo tipo
					 where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					 order by tipo.movgest_ts_tipo_code desc
					 limit 1;

					 if importoModifINS is null then 
						importoModifINS = 0;
					 end if;

					end if;		
	
			--Fix MR adeguamento sprint 5
			-- Mon restituiamo piu' al valore impegnato le modifiche provvisorie e le ECONB
           		importoModifDelta:=0;
            		importoModifINS:=0;
            --
			
			annoimpegnato:=impComponenteRec.annualita;
			elemDetCompId:=impComponenteRec.compId;
			elemdetcompdesc:=impComponenteRec.compDesc;
			elemdetcompmacrotipodesc:=impComponenteRec.compMacroTipoDesc;
			impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente  
			impegnatoDefinitivo:=impegnatoDefinitivo+impComponenteRec.importoCurAttuale-(importoModifDelta);
			--aggiunta per ECONB
			impegnatoDefinitivo:=impegnatoDefinitivo+abs(importoModifINS);
			return next;	

	end loop;
	end if;
	end if;

	return;
 

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
		return;
	when no_data_found then
		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
		return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
		return;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_impegnatodefinitivoup_comp_triennio_nostanz(integer, integer[])
    OWNER TO siac;

-- end fnc_siac_impegnatodefinitivoup_comp_triennio_nostanz

-- start fnc_siac_impegnatodefinitivoug_comp_triennio_nostanz
/*
*SPDX-FileCopyrightText: Copyright 2020 | CSI Piemonte
*SPDX-License-Identifier: EUPL-1.2
*/

CREATE OR REPLACE FUNCTION siac.fnc_siac_impegnatodefinitivoug_comp_triennio_nostanz(
	id_in integer,
	idcomp_in integer[])
    RETURNS TABLE(elemdetcompid integer, elemdetcompdesc character varying, annoimpegnato integer, impegnatodefinitivo numeric, elemdetcompmacrotipodesc character varying) 
    LANGUAGE 'plpgsql'

    COST 100
    VOLATILE 
    ROWS 1000
AS $BODY$
DECLARE

annoBilancio varchar:=null;
annoEsercizio varchar:=null;
annoMovimento varchar:=null;

elemIdGestEq integer:=0;
bilIdElemGestEq integer:=0;
NVL_STR     constant varchar:='';
faseOpCode varchar(20):=NVL_STR;
bilancioId integer:=0;
elemTipoCode VARCHAR(20):=NVL_STR;
elemCode varchar(50):=NVL_STR;
elemCode2 varchar(50):=NVL_STR;
elemCode3 varchar(50):=NVL_STR;
enteProprietarioId INTEGER:=0;
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
FASE_OP_BIL_PREV constant VARCHAR:='P';
STATO_A     constant varchar:='A';
STATO_P     constant varchar:='P';
TIPO_IMP    constant varchar:='I';
movGestStatoIdAnnullato integer:=0;
movGestStatoIdProvvisorio integer:=0;
movGestTipoId integer:=0;
IMPORTO_ATT constant varchar:='A';
movGestTsDetTipoId integer:=0;
IMPORTO_INIZIALE constant varchar:='I';
movGestTsDetTipoIdIniziale integer:=0;
STATO_MOD_V  constant varchar:='V';
modStatoVId integer:=0;
attoAmmStatoPId integer:=0;
STATO_ATTO_P constant varchar:='PROVVISORIO';
STATO_ATTO_D constant varchar:='DEFINITIVO';
attoAmmStatoDId integer:=0;
importoCurAttuale numeric:=0;
esisteRmovgestidelemid INTEGER:=0;
importoModifDelta  numeric:=0;
importoModifINS numeric:=0; --aggiunta per ECONB
impegniDaRibaltamento integer:=0;
pluriennaliDaRibaltamento integer:=0;
flagNMaggioreNPiu2 integer:=0;
flagDeltaPagamenti integer:=0;
importoImpegnato numeric:=0;
importoPagatoDelta numeric:=0;
ordStatoAId          integer:=null;
ordTsDetTipoAId      integer:=null;
-- stati ordinativi
STATO_ORD_A    constant varchar:='A'; -- ANNULLATO
-- importoAttuale ordinativi
ORD_TS_DET_TIPO_A  constant varchar:='A';

sidcomp_in  varchar:=null;
strMessaggio varchar(1500):=null;

impComponenteRec record;

BEGIN

/* Calcola impegnato definitivo per quelle componenti per le quali pur non essendoci stanziamento
 * esistono quote di impegnato nel triennio
 * Le componenti per le quali esiste stanziamento (e quindi da non considerare) sono passate in input nell'array idcomp_in
 * NOTA: per problemi Java/Hibernate idcomp_in non puo essere un array vuoto, quindi 
 *		l'array in input conterra' sempre la componente fittizia idcomp = -1
 */
-- CALCOLO IMPEGNATO DEFINITIVO 
-- Stiamo sempre parlando di impegnato sul capitolo di gestione equivalente	

	sidcomp_in:=array_to_string(idcomp_in, ',');
    	strMessaggio:='Calcolo totale impegnato definitovo elem_id='||id_in|| ' escludo idcomp_in='||sidcomp_in|| '.';

	-- Controllo parametri in input
	if id_in is null or id_in=0 then
		 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
	end if;
 
	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in||
    			  '.Lettura anno di bilancio del capitolo UP.';

	select per.anno into strict annoBilancio
	from siac_t_bil_elem bilElem, siac_t_bil bil, siac_t_periodo per
	where bilElem.elem_id=id_in and
    	  bilElem.data_cancellazione is null and bilElem.validita_fine is null and
	      bil.bil_id=bilElem.bil_id and
    	  per.periodo_id=bil.periodo_id;
	strMessaggio:=strMessaggio || 'annoBilancio='||annoBilancio|| '.';

		  

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in||
 
 				   '. Calcolo bilancioId e elem_tipo_code.';
	 select bilelem.elem_code, bilElem.elem_code2, bilElem.elem_code3, bil.bil_id ,tipoBilElem.elem_tipo_code, per.anno , bil.ente_proprietario_id
	 into strict elemCode, elemCode2, elemCode3, bilancioId, elemTipoCode , annoBilancio,enteProprietarioId
	 from 	siac_t_bil_elem bilElem, 
	 		siac_d_bil_elem_tipo tipoBilElem,
		  	siac_t_bil bil, siac_t_periodo per
	 where bilElem.elem_id=id_in
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
	   and bil.bil_id=bilElem.bil_id
	   and per.periodo_id=bil.periodo_id;


	 if elemTipoCode is not null and elemTipoCode!=NVL_STR and elemTipoCode!=TIPO_CAP_UG then
			RAISE EXCEPTION '% elemTipoCode=%  non ammesso per tipo di calcolo.',strMessaggio,elemTipoCode;
	 end if;

	 strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in||

				   'Calcolo fase operativa per bilancioId='||bilancioId
				   ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select  faseOp.fase_operativa_code into  faseOpCode
	 from siac_r_bil_fase_operativa bilFase, siac_d_fase_operativa faseOp
	 where bilFase.bil_id =bilancioId
	   and bilfase.data_cancellazione is null
	   and bilFase.validita_fine is null
	   and faseOp.fase_operativa_id=bilFase.fase_operativa_id
	   and faseOp.data_cancellazione is null
	 order by bilFase.bil_fase_operativa_id desc;

	 if NOT FOUND THEN
	   RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
	 end if;

	 strMessaggio:='Calcolo impegnato definitivo elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTipoId per movgest_tipo_code=IMPEGNO';
	 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
	 from  siac_d_movgest_tipo tipoMovGest
	 where tipoMovGest.ente_proprietario_id=enteProprietarioId
	 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTsStatoIdAnnullato per movgest_stato_code=ANNULLATO'
				  ||'. Calcolo movGestTsStatoIdProvvisorio per movgest_stato_code=PROVVISORIO';

	 select movGestStato.movgest_stato_id into strict movGestStatoIdAnnullato
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_A;

	 select  movGestStato.movgest_stato_id into strict movGestStatoIdProvvisorio
	 from siac_d_movgest_stato movGestStato
	 where movGestStato.ente_proprietario_id=enteProprietarioId
	 and   movGestStato.movgest_stato_code=STATO_P; 
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTsDetTipoId per movgest_ts_det_tipo_code=IMPORTO ATTUALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo movGestTsDetTipoIdIniziale per movgest_ts_det_tipo_code=IMPORTO INIZIALE';

	 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoIdIniziale
	 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
	 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
	 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_INIZIALE;
	 
	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
              ||'. Calcolo modStatoVId per mod_stato_code=VALIDO.';
	 select d.mod_stato_id into strict modStatoVId
	 from siac_d_modifica_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.mod_stato_code=STATO_MOD_V;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo attoAmmStatoPId per attoamm_stato_code=PROVVISORIO';
	 select d.attoamm_stato_id into strict attoAmmStatoPId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_P;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||' escludo idcomp_in='||sidcomp_in
				  ||'. Calcolo attoAmmStatoDId per attoamm_stato_code=DEFINITIVO';
	 select d.attoamm_stato_id into strict attoAmmStatoDId
	 from siac_d_atto_amm_stato d
	 where d.ente_proprietario_id=enteProprietarioId
	 and   d.attoamm_stato_code=STATO_ATTO_D;

 	-- Calcolo Impegnato definitivo 

	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in;
	
	importoCurAttuale:=0;	
	importoModifDelta:=0;
	importoModifINS := 0;
	
	-- - Se presenti i movimenti gestione provenienti dal ribaltamento 
		annoEsercizio:=annoBilancio;
		annoMovimento:=annoBilancio;
	
	strMessaggio:=strMessaggio || 'annoEsercizio='||annoEsercizio|| '.';
	strMessaggio:=strMessaggio || 'annoMovimento='||annoMovimento|| '.';


	strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in||
				   '. Calcolo bilancioId per annoEsercizio='||annoEsercizio
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
	-- lettura elemento bil di gestione equivalente
    -- lettura bilancioId annoEsercizio per lettura elemento di bilancio equivalente
	select bil.bil_id into strict bilIdElemGestEq
	from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
	where per.anno=annoEsercizio
	  and per.ente_proprietario_id=enteProprietarioId
	  and bil.periodo_id=per.periodo_id
	  and perTipo.periodo_tipo_id=per.periodo_tipo_id
	  and perTipo.periodo_tipo_code='SY';
	strMessaggio:=strMessaggio || 'bilIdElemGestEq='||bilIdElemGestEq|| '.';


	  -- lettura elemIdGestEq
	 strMessaggio:='Calcolo impegnato competenza UG.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
				  ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

	 select bilelem.elem_id into elemIdGestEq
	 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
	 where bilElem.elem_code=elemCode
	   and bilElem.elem_code2=elemCode2
	   and bilElem.elem_code3=elemCode3
	   and bilElem.ente_proprietario_id=enteProprietarioId
	   and bilElem.data_cancellazione is null
	   and bilElem.validita_fine is null
	   and bilElem.bil_id=bilIdElemGestEq
	   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
	   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;
	strMessaggio:=strMessaggio || 'elemIdGestEq='||elemIdGestEq|| '.';


	if NOT FOUND THEN
		impegnatoDefinitivo:=0;  
	else
	
		strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Inizio calcolo totale importo attuale impegni per anno esercizio ='||annoEsercizio||
						'. Inizio calcolo totale importo attuale impegni per anno movimento ='||annoMovimento|| 
						'. Verifica che esistano movimenti di gestione per il capitolo e per la componente.';
		select el.elem_id into esisteRmovgestidelemid 
		from siac_r_movgest_bil_elem el, siac_t_movgest mv
		where
			mv.movgest_id=el.movgest_id
			and el.elem_id=elemIdGestEq
			and mv.movgest_anno IN (annoMovimento::integer,  annoMovimento::integer+1, annoMovimento::integer+2) 
			and NOT (el.elem_det_comp_tipo_id = ANY( idcomp_in)) --SIAC-7349
			;
		
		if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;

		strMessaggio:=strMessaggio || 'esisteRmovgestidelemid='||esisteRmovgestidelemid|| '.';


		if esisteRmovgestidelemid <>0 then
 			impegnatoDefinitivo:=0;
			strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'escludo idcomp_in='||sidcomp_in||
				'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
				'. Inizio calcolo totale importo attuale impegni per annoMovimento='||annoMovimento||'.';

			/* Versione con group by per le componenti non da escludere e ciclo per ogni componente */
			for impComponenteRec in
			 (
				select tb.elem_det_comp_tipo_id as compId, 
				 g.elem_det_comp_tipo_desc as compDesc, 
				 tb.importo as importoCurAttuale,
				 h.elem_det_comp_macro_tipo_desc as compMacroTipoDesc,
				 tb.movgest_anno as annualita
				from (
				  select
					  coalesce(sum(e.movgest_ts_det_importo),0) importo, c.movgest_ts_tipo_id, a.elem_det_comp_tipo_id, b.movgest_anno
				  from
					  siac_r_movgest_bil_elem a,
					  siac_t_movgest b,
					  siac_t_movgest_ts c,
					  siac_r_movgest_ts_stato d,
					  siac_t_movgest_ts_det e,
					  siac_d_movgest_ts_det_tipo f
				  where
					  b.movgest_id=a.movgest_id 
					  and a.elem_id=elemIdGestEq 
					  and NOT( a.elem_det_comp_tipo_id = ANY(idcomp_in)) --SIAC-7349 --id componente diversa da quella ricevuta in input
					  and b.bil_id = bilIdElemGestEq
					  and b.movgest_tipo_id=movGestTipoId
					  and d.movgest_stato_id<>movGestStatoIdAnnullato
					  -- SIAC-7737 GS 31/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
				      -- and d.movgest_stato_id<>movGestStatoIdProvvisorio
					  and b.movgest_anno IN (annoMovimento::integer,  annoMovimento::integer+1, annoMovimento::integer+2)
					  and c.movgest_id=b.movgest_id
					  and d.movgest_ts_id=c.movgest_ts_id
					  and d.validita_fine is null
					  and e.movgest_ts_id=c.movgest_ts_id
					  and a.data_cancellazione is null
					  and b.data_cancellazione is null
					  and c.data_cancellazione is null
					  and e.data_cancellazione is null
					  and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
					  and e.movgest_ts_det_tipo_id=movGestTsDetTipoId
					  group by 	c.movgest_ts_tipo_id, 
								a.elem_det_comp_tipo_id, -- SIAC-7349
								b.movgest_anno
					) tb, 
					siac_d_movgest_ts_tipo t,
					siac_d_bil_elem_det_comp_tipo g,
				 	siac_d_bil_elem_det_comp_macro_tipo h
				where 
					tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
					and g.elem_det_comp_tipo_id = tb.elem_det_comp_tipo_id --SIAC-7349 recupera anche la descrizione della componente
					and g.elem_det_comp_macro_tipo_id = h.elem_det_comp_macro_tipo_id --SIAC-7349 recupera anche la descrizione del macrotipo della componente
				 order by t.movgest_ts_tipo_code desc
 			) 
			loop
			

					-- 02.02.2016 Sofia JIRA 2947
					 if impComponenteRec.importoCurAttuale is null then impComponenteRec.importoCurAttuale:=0; end if;

					 -- 16.03.2017 Sofia JIRA-SIAC-4614
					-- if importoCurAttuale>0 then
					 if impComponenteRec.importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

						strMessaggio:='Calcolo totale impegnato definitvo elem_id='||id_in||'  impComponenteRec.compId='||impComponenteRec.compId||
						'. Esercizio bilIdElemGestEq='||bilIdElemGestEq||' capitolo gestione equivalente elemIdGestEq='||elemIdGestEq|| 
						'. Calcolo totale modifiche su atti provvisori per annoMovimento='||annoMovimento||'.';

						select tb.importo into importoModifDelta
						 from
						 (
							select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
							from siac_r_movgest_bil_elem rbil, 
								 siac_t_movgest mov,
								 siac_t_movgest_ts ts,
								 siac_r_movgest_ts_stato rstato,
								 siac_t_movgest_ts_det tsdet,
								 siac_t_movgest_ts_det_mod moddet,
								 siac_t_modifica mod, 
								 siac_r_modifica_stato rmodstato,
								 siac_r_atto_amm_stato attostato, 
								 siac_t_atto_amm atto,
								 siac_d_modifica_tipo tipom
							where 
								rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
								and rbil.elem_det_comp_tipo_id=impComponenteRec.compId --SIAC-7349 deve essere sulla compoenente del record 
								and	  mov.movgest_id=rbil.movgest_id
								and   mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
								and   mov.movgest_anno>annoMovimento::integer -- anno dell impegno = annoMovimento 
								and   mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
								and   ts.movgest_id=mov.movgest_id
								and   rstato.movgest_ts_id=ts.movgest_ts_id
								and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- Impegno non ANNULLATO
								-- SIAC-7737 GS 31/08/2020, necessario calcolare anche gli impegni provvisori: commentata quindi la riga seguente
							    -- and   rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
								and   tsdet.movgest_ts_id=ts.movgest_ts_id
								and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
								and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
								-- SIAC-7349 Prendo tutti gli importi, sia con segno negativo che con segno positivo
								-- La loro somma produce il valore importoModifDelta che devo sottrarre all'impegnato calcolato
								-- ad esempio: modifiche su atto provv +100, -322 -> somma -222 si tratta di un delta che devo sottrarre
								-- all'impegnato calcolato = impegnato calcolato - (-222) = +222 (aggiungo quello che avevo tolto)
								-- and   moddet.movgest_ts_det_importo<0 -- importo negativo
								and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
								and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
								and   mod.mod_id=rmodstato.mod_id
								and   atto.attoamm_id=mod.attoamm_id
								and   attostato.attoamm_id=atto.attoamm_id
								and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
								and   tipom.mod_tipo_id=mod.mod_tipo_id
								and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
								-- date
								and rbil.data_cancellazione is null
								and rbil.validita_fine is null
								and mov.data_cancellazione is null
								and mov.validita_fine is null
								and ts.data_cancellazione is null
								and ts.validita_fine is null
								and rstato.data_cancellazione is null
								and rstato.validita_fine is null
								and tsdet.data_cancellazione is null
								and tsdet.validita_fine is null
								and moddet.data_cancellazione is null
								and moddet.validita_fine is null
								and mod.data_cancellazione is null
								and mod.validita_fine is null
								and rmodstato.data_cancellazione is null
								and rmodstato.validita_fine is null
								and attostato.data_cancellazione is null
								and attostato.validita_fine is null
								and atto.data_cancellazione is null
								and atto.validita_fine is null
								group by ts.movgest_ts_tipo_id
							  ) tb, siac_d_movgest_ts_tipo tipo
							  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
							  order by tipo.movgest_ts_tipo_code desc
							  limit 1;		

						if importoModifDelta is null then importoModifDelta:=0; end if;
						  /*Aggiunta delle modifiche ECONB*/
						 -- anna_economie inizio
						select tb.importo into importoModifINS
						from
						(
							select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
							from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
							siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
							siac_t_movgest_ts_det_mod moddet,
							siac_t_modifica mod, siac_r_modifica_stato rmodstato,
							siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
							siac_d_modifica_tipo tipom
						where rbil.elem_id=elemIdGestEq
						and rbil.elem_det_comp_tipo_id=impComponenteRec.compId --SIAC-7349
						and	  mov.movgest_id=rbil.movgest_id
						and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
						and   mov.movgest_anno=annoMovimento::integer
						and   mov.bil_id=bilancioId
						and   ts.movgest_id=mov.movgest_id
						and   rstato.movgest_ts_id=ts.movgest_ts_id
						and   rstato.movgest_stato_id!=movGestStatoIdAnnullato -- impegno non annullato
						and   tsdet.movgest_ts_id=ts.movgest_ts_id
						and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
						and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
					   and   tipom.mod_tipo_id=mod.mod_tipo_id
					   and   tipom.mod_tipo_code = 'ECONB'
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
					   group by ts.movgest_ts_tipo_id
					 ) tb, siac_d_movgest_ts_tipo tipo
					 where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					 order by tipo.movgest_ts_tipo_code desc
					 limit 1;

					 if importoModifINS is null then 
						importoModifINS = 0;
					 end if;

					end if;		
	
			--Fix MR adeguamento sprint 5
			-- Mon restituiamo piu' al valore impegnato le modifiche provvisorie e le ECONB
           		importoModifDelta:=0;
            		importoModifINS:=0;
            --
			
			annoimpegnato:=impComponenteRec.annualita;
			elemDetCompId:=impComponenteRec.compId;
			elemdetcompdesc:=impComponenteRec.compDesc;
			elemdetcompmacrotipodesc:=impComponenteRec.compMacroTipoDesc;
			impegnatoDefinitivo:=0; -- SIAC-7349 evito di tornare null nei casi in cui non c'e' alcun impegnato sulla componente  
			impegnatoDefinitivo:=impegnatoDefinitivo+impComponenteRec.importoCurAttuale-(importoModifDelta);
			--aggiunta per ECONB
			impegnatoDefinitivo:=impegnatoDefinitivo+abs(importoModifINS);
			return next;	

	end loop;
	end if;
	end if;

	return;
 

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
		return;
	when no_data_found then
		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
		return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
		return;
END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_impegnatodefinitivoug_comp_triennio_nostanz(integer, integer[])
    OWNER TO siac;



-- end fnc_siac_impegnatodefinitivoug_comp_triennio_nostanz

-- SIAC-7349 - Chiara 04.09.2020 - Fine

-- SIAC-6865 - inizio
SELECT * FROM  fnc_dba_add_column_params ( 'siac_t_movgest_ts_det_mod', 'mtdm_aggiudicazione_flag', 'boolean');
SELECT * FROM  fnc_dba_add_column_params ( 'siac_t_movgest_ts_det_mod', 'mtdm_aggiudicazione_soggetto_id', 'integer');
SELECT * FROM  fnc_dba_add_column_params ( 'siac_t_movgest_ts_det_mod', 'mtdm_aggiudicazione_classe_id', 'integer');

SELECT * FROM  fnc_dba_add_fk_constraint ( 'siac_t_movgest_ts_det_mod', 'siac_t_soggetto_siac_t_movgest_ts_dmod_id', 'mtdm_aggiudicazione_soggetto_id', 'siac_t_soggetto', 'soggetto_id');
SELECT * FROM  fnc_dba_add_fk_constraint ( 'siac_t_movgest_ts_det_mod', 'siac_d_soggetto_cl_siac_t_movgest_ts_dmod_id', 'mtdm_aggiudicazione_classe_id', 'siac_d_soggetto_classe', 'soggetto_classe_id');

CREATE TABLE IF NOT EXISTS siac.siac_r_movgest_aggiudicazione
( movgest_aggiudicazione_r_id SERIAL,
	movgest_id_da integer NOT NULL,
	movgest_id_a integer NOT NULL,
	attoamm_id integer NOT NULL,
	mod_id integer NOT NULL,
	validita_inizio timestamp without time zone NOT NULL,
    validita_fine timestamp without time zone,
    ente_proprietario_id integer NOT NULL,
    data_creazione timestamp without time zone NOT NULL DEFAULT now(),
    data_modifica timestamp without time zone NOT NULL DEFAULT now(),
    data_cancellazione timestamp without time zone,
    login_operazione character varying(200) NOT null,
CONSTRAINT siac_r_movgest_aggiudicazione_id PRIMARY KEY(movgest_aggiudicazione_r_id),
  CONSTRAINT siac_t_ente_proprietario_siac_r_movgest_ag FOREIGN KEY (ente_proprietario_id)
    REFERENCES siac.siac_t_ente_proprietario(ente_proprietario_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
  CONSTRAINT siac_t_movgest_da_siac_r_movgest_ag FOREIGN KEY (movgest_id_da)
    REFERENCES siac.siac_t_movgest(movgest_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
 CONSTRAINT siac_t_movgest_ts_a_siac_r_movgest_ag FOREIGN KEY (movgest_id_a)
    REFERENCES siac.siac_t_movgest(movgest_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
CONSTRAINT siac_t_attoamm_siac_r_movgest_ag FOREIGN KEY (attoamm_id)
    REFERENCES siac.siac_t_atto_amm(attoamm_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
CONSTRAINT siac_t_modifica_siac_r_movgest_ag FOREIGN KEY (mod_id)
    REFERENCES siac.siac_t_modifica(mod_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE
);


INSERT INTO siac_t_attr
(
	attr_code,
	attr_desc,
	attr_tipo_id,
	validita_inizio,
	ente_proprietario_id,
	login_operazione
)
select
		'annoPrenotazioneOrigine' ,
		'Anno di origine della prenotazione',
		tipo.attr_tipo_id,
		now(),
		ente.ente_proprietario_id,
		'SIAC-6868'
from  siac_t_ente_proprietario ente,
      siac_d_attr_tipo tipo
where tipo.ente_proprietario_id=ente.ente_proprietario_id
and   tipo.attr_tipo_code='X'
and   not exists
(
select 1
from siac_t_attr attr
where attr.ente_proprietario_id=ente.ente_proprietario_id
and   attr.attr_tipo_id=tipo.attr_tipo_id
and   attr.attr_code='annoPrenotazioneOrigine'
and   attr.data_cancellazione is null
);

insert into siac_d_modifica_tipo
(
  mod_tipo_code,
  mod_tipo_desc,
  login_operazione,
  validita_inizio,
  ente_proprietario_id
)
select 'AGG',
       'Aggiudicazione',
       'SIAC-6865',
       now(),
	   ente.ente_proprietario_id
from siac_t_ente_proprietario ente
WHERE NOT EXISTS (
	SELECT 1
	FROM siac_d_modifica_tipo dbt
	WHERE dbt.ente_proprietario_id = ente.ente_proprietario_id
	AND dbt.mod_tipo_id=(SELECT mod_tipo_id
	 FROM siac_d_modifica_tipo
	 WHERE mod_tipo_code=TRIM('AGG')  AND ente_proprietario_id=ente.ente_proprietario_id )
);


-- siac_dwh_impegno
SELECT * FROM  fnc_dba_add_column_params ( 'siac_dwh_impegno', 'annoprenotazioneorigine', 'integer');
SELECT * FROM  fnc_dba_add_column_params ( 'siac_dwh_impegno', 'anno_impegno_aggiudicazione', 'integer');
SELECT * FROM  fnc_dba_add_column_params ( 'siac_dwh_impegno', 'num_impegno_aggiudicazione', 'integer');
SELECT * FROM  fnc_dba_add_column_params ( 'siac_dwh_impegno', 'num_modif_aggiudicazione', 'integer');


--- function

drop function if exists 
fnc_siac_dicuiimpegnatoug_comp_anno
(
	id_in integer,
	anno_in character varying,
    verifica_mod_prov boolean
);

drop function if exists 
fnc_siac_dicuiimpegnatoug_comp_anno_comp 
(
  id_in integer,
  anno_in varchar,
  idcomp_in integer,
  verifica_mod_prov boolean
);

drop function if exists 
fnc_siac_dicuiimpegnatoup_comp_anno 
(
  id_in integer,
  anno_in character varying,
  verifica_mod_prov boolean
);

drop function if exists 
fnc_siac_dicuiimpegnatoup_comp_anno_comp
(
	id_in integer,
	id_comp integer,
	anno_in character varying,
	verifica_mod_prov boolean
);
drop function if exists 
fnc_siac_disponibilitadodicesimi 
(
  id_in integer,
  tipodisp_in varchar
);
drop function if exists
fnc_siac_dwh_impegno 
(
  p_anno_bilancio varchar,
  p_ente_proprietario_id integer,
  p_data timestamp
);

CREATE OR REPLACE FUNCTION siac.fnc_siac_dicuiimpegnatoug_comp_anno
(
	id_in integer,
	anno_in character varying,
	verifica_mod_prov boolean DEFAULT true)
    RETURNS TABLE(annocompetenza character varying, dicuiimpegnato numeric)
AS $BODY$
DECLARE

-- constant
TIPO_CAP_UG constant varchar:='CAP-UG';
NVL_STR     constant varchar:='';
STA_IMP     constant varchar:='STA';

TIPO_IMP    constant varchar:='I';
TIPO_IMP_T  constant varchar:='T';

STATO_DEF   constant varchar:='D';
STATO_N     constant varchar:='N';
STATO_P     constant varchar:='P';
STATO_A     constant varchar:='A';
IMPORTO_ATT constant varchar:='A';

STATO_MOD_V  constant varchar:='V';
STATO_ATTO_P constant varchar:='PROVVISORIO';

-- anna_economie inizio
STATO_ATTO_D constant varchar:='DEFINITIVO';
attoAmmStatoDId integer:=0;
importoModifINS  numeric:=0;
-- anna_economie fine

strMessaggio varchar(1500):=NVL_STR;

bilancioId integer:=0;
enteProprietarioId INTEGER:=0;
annoBilancio varchar:=null;

movGestTipoId integer:=0;
movGestTsTipoId integer:=0;
movGestStatoId integer:=0;
movGestTsDetTipoId integer:=0;

movGestTsId integer:=0;

importoAttuale numeric:=0;
importoCurAttuale numeric:=0;
importoModifNeg  numeric:=0;

modStatoVId integer:=0;
attoAmmStatoPId integer:=0;

movGestIdRec record;

esisteRmovgestidelemid INTEGER:=0;

-- 10.08.2020 Sofia jira siac-6865
importoCurAttAggiudicazione numeric:=0;
movGestStatoPId integer:=null;
BEGIN

select el.elem_id into esisteRmovgestidelemid from siac_r_movgest_bil_elem el, siac_t_movgest mv
where
mv.movgest_id=el.movgest_id
and el.elem_id=id_in
and mv.movgest_anno=anno_in::integer
;

 -- 02.02.2016 Sofia JIRA 2947
if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;

if esisteRmovgestidelemid <>0 then

 annoCompetenza:=null;
 diCuiImpegnato:=0;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.Controllo parametri.';

 if anno_in is null or anno_in=NVL_STR then
	 RAISE EXCEPTION '% Anno di competenza mancante.',strMessaggio;
 end if;

 if id_in is null or id_in=0 then
	 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
 end if;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
			   ||'.Calcolo bilancioId enteProprietarioId  annoBilancio.';

 select bil.bil_id,  bil.ente_proprietario_id,  per.anno
        into strict bilancioId, enteProprietarioId, annoBilancio
 from siac_t_bil bil,siac_t_bil_elem bilElem, siac_t_periodo per
 where bilElem.elem_id=id_in
 and   bilElem.data_cancellazione is null
 and   bil.bil_id=bilElem.bil_id
 and   per.periodo_id=bil.periodo_id;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo movGestTipoId.';
 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
 from  siac_d_movgest_tipo tipoMovGest
 where tipoMovGest.ente_proprietario_id=enteProprietarioId
 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo movGestTsTipoId.';
/* select movGestTsTipo.movgest_ts_tipo_id into strict movGestTsTipoId
 from siac_d_movgest_ts_tipo movGestTsTipo
 where movGestTsTipo.ente_proprietario_id=enteProprietarioId
 and   movGestTsTipo.movgest_ts_tipo_code=TIPO_IMP_T;
*/
 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo movGestStatoId.';

 select movGestStato.movgest_stato_id into strict movGestStatoId
 from siac_d_movgest_stato movGestStato
 where movGestStato.ente_proprietario_id=enteProprietarioId
 and   movGestStato.movgest_stato_code=STATO_A;



 -- 10.08.2020 Sofia Jira SIAC-6865
 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo movGestStatoPId.';

 select movGestStato.movgest_stato_id into strict movGestStatoPId
 from siac_d_movgest_stato movGestStato
 where movGestStato.ente_proprietario_id=enteProprietarioId
 and   movGestStato.movgest_stato_code=STATO_P;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo movGestTsDetTipoId.';

 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT;

 -- 16.03.2017 Sofia JIRA-SIAC-4614
 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo modStatoVId.';
 select d.mod_stato_id into strict modStatoVId
 from siac_d_modifica_stato d
 where d.ente_proprietario_id=enteProprietarioId
 and   d.mod_stato_code=STATO_MOD_V;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo attoAmmStatoPId.';
 select d.attoamm_stato_id into strict attoAmmStatoPId
 from siac_d_atto_amm_stato d
 where d.ente_proprietario_id=enteProprietarioId
 and   d.attoamm_stato_code=STATO_ATTO_P;
 -- 16.03.2017 Sofia JIRA-SIAC-4614

 -- anna_economie inizio
 select d.attoamm_stato_id into strict attoAmmStatoDId
 from siac_d_atto_amm_stato d
 where d.ente_proprietario_id=enteProprietarioId
 and   d.attoamm_stato_code=STATO_ATTO_D;
 -- anna_economie fine

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'. Inizio calcolo totale importo attuale impegni per anno_in='||anno_in||'.';

 --nuovo G
   	importoCurAttuale:=0;

    select tb.importo into importoCurAttuale
 from (
  select
      coalesce(sum(e.movgest_ts_det_importo),0)  importo
      , c.movgest_ts_tipo_id
    from
      siac_r_movgest_bil_elem a,
      siac_t_movgest b,
      siac_t_movgest_ts c,
      siac_r_movgest_ts_stato d,
      siac_t_movgest_ts_det e
      ,siac_d_movgest_ts_det_tipo f
      where
      b.movgest_id=a.movgest_id and
      a.elem_id=id_in
      and b.bil_id = bilancioId
      and b.movgest_tipo_id=movGestTipoId
	  and d.movgest_stato_id<>movGestStatoId
	  and b.movgest_anno = anno_in::integer
      and c.movgest_id=b.movgest_id
      and d.movgest_ts_id=c.movgest_ts_id
      and d.validita_fine is null
      and e.movgest_ts_id=c.movgest_ts_id
	and a.data_cancellazione is null
    and b.data_cancellazione is null
    and c.data_cancellazione is null
     and e.data_cancellazione is null
     and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
    and e.movgest_ts_det_tipo_id=movGestTsDetTipoId
    group by
   c.movgest_ts_tipo_id
    ) tb, siac_d_movgest_ts_tipo t
    where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
    order by t.movgest_ts_tipo_code desc
    limit 1;

/*select tb.importo into importoCurAttuale from (
  select
      coalesce(sum(e.movgest_ts_det_importo),0)  importo
      , c.movgest_ts_tipo_id
      from
      siac_r_movgest_bil_elem a,
      siac_t_movgest b,
      siac_t_movgest_ts c,
      siac_r_movgest_ts_stato d,
      siac_t_movgest_ts_det e
      ,siac_d_movgest_ts_det_tipo f
      where
      b.movgest_id= ANY (VALUES (a.movgest_id)) and
      a.elem_id=id_in
      and b.bil_id = bilancioId
      and b.movgest_tipo_id=movGestTipoId
	  and d.movgest_stato_id<>movGestStatoId
	  and b.movgest_anno = anno_in::integer
      and c.movgest_id=b.movgest_id
      and d.movgest_ts_id=c.movgest_ts_id
      and d.validita_fine is null
      and e.movgest_ts_id=c.movgest_ts_id
	and a.data_cancellazione is null
    and b.data_cancellazione is null
    and c.data_cancellazione is null
     and e.data_cancellazione is null
     and f.movgest_ts_det_tipo_id=ANY (VALUES (e.movgest_ts_det_tipo_id))
    and e.movgest_ts_det_tipo_id=ANY (VALUES (movGestTsDetTipoId))
    group by c.movgest_ts_tipo_id
    ) tb, siac_d_movgest_ts_tipo t
    where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
    and t.movgest_ts_tipo_code=TIPO_IMP_T;--'T'; */

 /* select
      coalesce(sum(e.movgest_ts_det_importo),0) into importoCurAttuale
      from
      siac_r_movgest_bil_elem a,
      siac_t_movgest b,
      siac_t_movgest_ts c,
      siac_r_movgest_ts_stato d,
      siac_t_movgest_ts_det e
      ,siac_d_movgest_ts_det_tipo f
      where
      b.movgest_id= ANY (VALUES (a.movgest_id)) and
      a.elem_id=id_in
      and b.bil_id = bilancioId
      and b.movgest_tipo_id=movGestTipoId
	  and d.movgest_stato_id<>movGestStatoId
	  and b.movgest_anno = anno_in::integer
      and c.movgest_id=b.movgest_id
      and d.movgest_ts_id=c.movgest_ts_id
      and e.movgest_ts_id=c.movgest_ts_id
	and a.data_cancellazione is null
    and b.data_cancellazione is null
    and c.data_cancellazione is null
     and e.data_cancellazione is null
     and f.movgest_ts_det_tipo_id=ANY (VALUES (e.movgest_ts_det_tipo_id))
    and e.movgest_ts_det_tipo_id=ANY (VALUES (movGestTsDetTipoId));*/

  --raise notice 'importoCurAttuale:%', importoCurAttuale;
 --fine nuovo G
 /*for movGestIdRec in
 (
     select movGestRel.movgest_id
     from siac_r_movgest_bil_elem movGestRel
     where movGestRel.elem_id=id_in
     and   movGestRel.data_cancellazione is null
     and   exists (select 1 from siac_t_movgest movGest
   				   where movGest.movgest_id=movGestRel.movgest_id
			       and	 movGest.bil_id = bilancioId
			       and   movGest.movgest_tipo_id=movGestTipoId
				   and   movGest.movgest_anno = anno_in::integer)
 )
 loop
   	importoCurAttuale:=0;

    strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
                      ||'.Calcolo impegnato anno_in='||anno_in
                      ||'.Lettura siac_t_movgest_ts movGestTs.movgest_id='||movGestIdRec.movgest_id||'.';

    select movgestts.movgest_ts_id into  movGestTsId
    from siac_t_movgest_ts movGestTs
    where movGestTs.movgest_id = movGestIdRec.movgest_id
    and   movGestTs.data_cancellazione is null
    and   movGestTs.movgest_ts_tipo_id=movGestTsTipoId
    and   exists (select 1 from siac_r_movgest_ts_stato movGestTsRel
                  where movGestTsRel.movgest_ts_id=movGestTs.movgest_ts_id
                  and   movGestTsRel.movgest_stato_id!=movGestStatoId);

    strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
                      ||'.Calcolo accertato anno_in='||anno_in||'Somma siac_t_movgest_ts_det movGestTs.movgest_id='||movGestIdRec.movgest_id||'.';
    if NOT FOUND then
    else
       select coalesce(sum(movGestTsDet.movgest_ts_det_importo),0) into importoCurAttuale
           from siac_t_movgest_ts_det movGestTsDet
           where movGestTsDet.movgest_ts_id=movGestTsId
           and   movGestTsDet.movgest_ts_det_tipo_id=movGestTsDetTipoId;
    end if;

    importoAttuale:=importoAttuale+importoCurAttuale;
 end loop;*/
 -- 02.02.2016 Sofia JIRA 2947
 if importoCurAttuale is null then importoCurAttuale:=0; end if;

 -- 16.03.2017 Sofia JIRA-SIAC-4614
-- if importoCurAttuale>0 then
 if importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

  strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'. Calcolo totale modifiche negative su atti provvisori per anno_in='||anno_in||'.';

 select tb.importo into importoModifNeg
 from
 (
 	select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
	from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
    	 siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
	     siac_t_movgest_ts_det_mod moddet,
    	 siac_t_modifica mod, siac_r_modifica_stato rmodstato,
	     siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
         siac_d_modifica_tipo tipom
	where rbil.elem_id=id_in
	and	  mov.movgest_id=rbil.movgest_id
	and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
    and   mov.movgest_anno=anno_in::integer
    and   mov.bil_id=bilancioId
	and   ts.movgest_id=mov.movgest_id
	and   rstato.movgest_ts_id=ts.movgest_ts_id
	and   rstato.movgest_stato_id!=movGestStatoId -- impegno non annullato
	and   tsdet.movgest_ts_id=ts.movgest_ts_id
	and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
	and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
	and   moddet.movgest_ts_det_importo<0 -- importo negativo
	and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
	and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
	and   mod.mod_id=rmodstato.mod_id
	and   atto.attoamm_id=mod.attoamm_id
	and   attostato.attoamm_id=atto.attoamm_id
	and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
    and   tipom.mod_tipo_id=mod.mod_tipo_id
    and   tipom.mod_tipo_code <> 'ECONB'
	-- date
	and rbil.data_cancellazione is null
	and rbil.validita_fine is null
	and mov.data_cancellazione is null
	and mov.validita_fine is null
	and ts.data_cancellazione is null
	and ts.validita_fine is null
	and rstato.data_cancellazione is null
	and rstato.validita_fine is null
	and tsdet.data_cancellazione is null
	and tsdet.validita_fine is null
	and moddet.data_cancellazione is null
	and moddet.validita_fine is null
	and mod.data_cancellazione is null
	and mod.validita_fine is null
	and rmodstato.data_cancellazione is null
	and rmodstato.validita_fine is null
	and attostato.data_cancellazione is null
	and attostato.validita_fine is null
	and atto.data_cancellazione is null
	and atto.validita_fine is null
    group by ts.movgest_ts_tipo_id
  ) tb, siac_d_movgest_ts_tipo tipo
  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
  order by tipo.movgest_ts_tipo_code desc
  limit 1;
  -- 21.06.2017 Sofia - aggiunto parametro verifica_mod_prov, ripreso da prod CmTo dove era stato implementato
  if importoModifNeg is null or verifica_mod_prov is false then importoModifNeg:=0; end if;

  -- 10.08.2020 Sofia jira SIAC-6865 - inizio
  -- impegni provvisori nati da aggiudiazione non decurtano la disp. a impegnare
  if  verifica_mod_prov=true then
   strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
               ||'. Calcolo impegnato provvisorio per aggiudicazione per anno_in='||anno_in||'.';

   select tb.importo into importoCurAttAggiudicazione
   from
   (
  	select coalesce(sum(det.movgest_ts_det_importo),0)  importo, ts.movgest_ts_tipo_id
    from  siac_r_movgest_bil_elem rmov,
          siac_t_movgest mov,
      	  siac_t_movgest_ts ts,
      	  siac_r_movgest_ts_stato rs_stato,
          siac_t_movgest_ts_det det,
     	  siac_d_movgest_ts_det_tipo tipo_det
      where rmov.elem_id=id_in
      and 	mov.movgest_id=rmov.movgest_id
      and   mov.bil_id = bilancioId
      and   mov.movgest_tipo_id=movGestTipoId
      and   mov.movgest_anno = anno_in::integer
      and   ts.movgest_id=mov.movgest_id
      and   rs_stato.movgest_ts_id=ts.movgest_ts_id
	  and   rs_stato.movgest_stato_id=movGestStatoPId
      and   det.movgest_ts_id=ts.movgest_ts_id
      and   tipo_det.movgest_ts_det_tipo_id=det.movgest_ts_det_tipo_id
      and   tipo_det.movgest_ts_det_tipo_id=movGestTsDetTipoId
      and   exists
      (
        select 1
        from siac_r_movgest_aggiudicazione ragg
        where   ragg.movgest_id_a=mov.movgest_id
        and     ragg.data_cancellazione is null
        and     ragg.validita_fine is null
      )
      and   rs_stato.validita_fine is null
	  and   rmov.data_cancellazione is null
      and   mov.data_cancellazione is null
      and   ts.data_cancellazione is null
      and   det.data_cancellazione is null
     group by ts.movgest_ts_tipo_id
    ) tb, siac_d_movgest_ts_tipo t
    where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
    order by t.movgest_ts_tipo_code desc
    limit 1;
    if importoCurAttAggiudicazione is null then importoCurAttAggiudicazione:=0; end if;
  end if;
  -- 10.08.2020 Sofia jira SIAC-6865 - fine

  -- anna_economie inizio
   select tb.importo into importoModifINS
   from
   (
      select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
      from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
           siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
           siac_t_movgest_ts_det_mod moddet,
           siac_t_modifica mod, siac_r_modifica_stato rmodstato,
           siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
           siac_d_modifica_tipo tipom
      where rbil.elem_id=id_in
      and	  mov.movgest_id=rbil.movgest_id
      and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
      and   mov.movgest_anno=anno_in::integer
      and   mov.bil_id=bilancioId
      and   ts.movgest_id=mov.movgest_id
      and   rstato.movgest_ts_id=ts.movgest_ts_id
      and   rstato.movgest_stato_id!=movGestStatoId -- impegno non annullato
      and   tsdet.movgest_ts_id=ts.movgest_ts_id
      and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
      and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
      -- SIAC-7349
      -- abbiamo tolto il commento nella riga qui sotto perche' d'accordo con Pietro Gambino
      -- e visto che possono anche esserci modifiche ECONB positive
      -- e' bene escluderle dal calcolo importoModifINS
      and   moddet.movgest_ts_det_importo<0 -- importo negativo
      and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
      and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
      and   mod.mod_id=rmodstato.mod_id
      and   atto.attoamm_id=mod.attoamm_id
      and   attostato.attoamm_id=atto.attoamm_id
      and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
      and   tipom.mod_tipo_id=mod.mod_tipo_id
      and   tipom.mod_tipo_code = 'ECONB'
      -- date
      and rbil.data_cancellazione is null
      and rbil.validita_fine is null
      and mov.data_cancellazione is null
      and mov.validita_fine is null
      and ts.data_cancellazione is null
      and ts.validita_fine is null
      and rstato.data_cancellazione is null
      and rstato.validita_fine is null
      and tsdet.data_cancellazione is null
      and tsdet.validita_fine is null
      and moddet.data_cancellazione is null
      and moddet.validita_fine is null
      and mod.data_cancellazione is null
      and mod.validita_fine is null
      and rmodstato.data_cancellazione is null
      and rmodstato.validita_fine is null
      and attostato.data_cancellazione is null
      and attostato.validita_fine is null
      and atto.data_cancellazione is null
      and atto.validita_fine is null
      group by ts.movgest_ts_tipo_id
    ) tb, siac_d_movgest_ts_tipo tipo
    where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
    order by tipo.movgest_ts_tipo_code desc
    limit 1;

    if importoModifINS is null then importoModifINS:=0; end if;

  -- anna_economie fine

 end if;

 --nuovo G
 importoAttuale:=importoAttuale+importoCurAttuale+abs(importoModifNeg); -- 16.03.2017 Sofia JIRA-SIAC-4614
 --fine nuovoG

 -- anna_economie inizio
 importoAttuale:=importoAttuale+abs(importoModifINS);
 -- anna_economie fine

 -- 10.08.2020 Sofia jira siac-6865
 importoAttuale:=importoAttuale-importoCurAttAggiudicazione;

 annoCompetenza:=anno_in;
 diCuiImpegnato:=importoAttuale;

 return next;

else

annoCompetenza:=anno_in;
diCuiImpegnato:=0;

return next;

end if;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return;
	when no_data_found then
	    RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return;
END;
$BODY$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

CREATE OR REPLACE FUNCTION fnc_siac_dicuiimpegnatoug_comp_anno_comp 
(
  id_in integer,
  anno_in varchar,
  idcomp_in integer,
  verifica_mod_prov boolean = true
)
RETURNS TABLE (
  annocompetenza varchar,
  dicuiimpegnato numeric
) AS
$body$
DECLARE


-- constant
TIPO_CAP_UG constant varchar:='CAP-UG';
NVL_STR     constant varchar:='';
STA_IMP     constant varchar:='STA';

TIPO_IMP    constant varchar:='I';
TIPO_IMP_T  constant varchar:='T';

STATO_DEF   constant varchar:='D';
STATO_N     constant varchar:='N';
STATO_P     constant varchar:='P';
STATO_A     constant varchar:='A';
IMPORTO_ATT constant varchar:='A';

STATO_MOD_V  constant varchar:='V';
STATO_ATTO_P constant varchar:='PROVVISORIO';

-- anna_economie inizio
STATO_ATTO_D constant varchar:='DEFINITIVO';
attoAmmStatoDId integer:=0;
importoModifINS  numeric:=0;
-- anna_economie fine

strMessaggio varchar(1500):=NVL_STR;

bilancioId integer:=0;
enteProprietarioId INTEGER:=0;
annoBilancio varchar:=null;

movGestTipoId integer:=0;
movGestTsTipoId integer:=0;
movGestStatoId integer:=0;
movGestTsDetTipoId integer:=0;

movGestTsId integer:=0;

importoAttuale numeric:=0;
importoCurAttuale numeric:=0;
importoModifNeg  numeric:=0;

modStatoVId integer:=0;
attoAmmStatoPId integer:=0;

movGestIdRec record;

esisteRmovgestidelemid INTEGER:=0;

-- 10.08.2020 Sofia jira siac-6865
importoCurAttAggiudicazione numeric:=0;
movGestStatoPId integer:=null;

BEGIN

select el.elem_id into esisteRmovgestidelemid from siac_r_movgest_bil_elem el, siac_t_movgest mv
where
mv.movgest_id=el.movgest_id
and el.elem_id=id_in
and mv.movgest_anno=anno_in::integer
and el.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
;

 -- 02.02.2016 Sofia JIRA 2947
if esisteRmovgestidelemid is null then esisteRmovgestidelemid:=0; end if;

if esisteRmovgestidelemid <>0 then

 annoCompetenza:=null;
 diCuiImpegnato:=0;

 strMessaggio:='Calcolo impegnato di competenza elem_id='||id_in||'.Controllo parametri.';

 if anno_in is null or anno_in=NVL_STR then
	 RAISE EXCEPTION '% Anno di competenza mancante.',strMessaggio;
 end if;

 if id_in is null or id_in=0 then
	 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
 end if;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
			   ||'.Calcolo bilancioId enteProprietarioId  annoBilancio.';

 select bil.bil_id,  bil.ente_proprietario_id,  per.anno
        into strict bilancioId, enteProprietarioId, annoBilancio
 from siac_t_bil bil,siac_t_bil_elem bilElem, siac_t_periodo per
 where bilElem.elem_id=id_in
 and   bilElem.data_cancellazione is null
 and   bil.bil_id=bilElem.bil_id
 and   per.periodo_id=bil.periodo_id;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo movGestTipoId.';
 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
 from  siac_d_movgest_tipo tipoMovGest
 where tipoMovGest.ente_proprietario_id=enteProprietarioId
 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo movGestTsTipoId.';

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo movGestStatoId.';

 select movGestStato.movgest_stato_id into strict movGestStatoId
 from siac_d_movgest_stato movGestStato
 where movGestStato.ente_proprietario_id=enteProprietarioId
 and   movGestStato.movgest_stato_code=STATO_A;

 -- 10.08.2020 Sofia Jira SIAC-6865
 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo movGestStatoPId.';

 select movGestStato.movgest_stato_id into strict movGestStatoPId
 from siac_d_movgest_stato movGestStato
 where movGestStato.ente_proprietario_id=enteProprietarioId
 and   movGestStato.movgest_stato_code=STATO_P;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo movGestTsDetTipoId.';

 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT;

 -- 16.03.2017 Sofia JIRA-SIAC-4614
 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo modStatoVId.';
 select d.mod_stato_id into strict modStatoVId
 from siac_d_modifica_stato d
 where d.ente_proprietario_id=enteProprietarioId
 and   d.mod_stato_code=STATO_MOD_V;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Calcolo attoAmmStatoPId.';
 select d.attoamm_stato_id into strict attoAmmStatoPId
 from siac_d_atto_amm_stato d
 where d.ente_proprietario_id=enteProprietarioId
 and   d.attoamm_stato_code=STATO_ATTO_P;
 -- 16.03.2017 Sofia JIRA-SIAC-4614

 -- anna_economie inizio
 select d.attoamm_stato_id into strict attoAmmStatoDId
 from siac_d_atto_amm_stato d
 where d.ente_proprietario_id=enteProprietarioId
 and   d.attoamm_stato_code=STATO_ATTO_D;
 -- anna_economie fine

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'. Inizio calcolo totale importo attuale impegni per anno_in='||anno_in||'.';

 --nuovo G
   	importoCurAttuale:=0;

    select tb.importo into importoCurAttuale
 from (
  select
      coalesce(sum(e.movgest_ts_det_importo),0)  importo
      , c.movgest_ts_tipo_id
    from
      siac_r_movgest_bil_elem a,
      siac_t_movgest b,
      siac_t_movgest_ts c,
      siac_r_movgest_ts_stato d,
      siac_t_movgest_ts_det e
      ,siac_d_movgest_ts_det_tipo f
      where
      b.movgest_id=a.movgest_id and
      a.elem_id=id_in and
	  a.elem_det_comp_tipo_id= idcomp_in::integer --SIAC-7349
      and b.bil_id = bilancioId
      and b.movgest_tipo_id=movGestTipoId
	  and d.movgest_stato_id<>movGestStatoId
	  and b.movgest_anno = anno_in::integer
      and c.movgest_id=b.movgest_id
      and d.movgest_ts_id=c.movgest_ts_id
      and d.validita_fine is null
      and e.movgest_ts_id=c.movgest_ts_id
	and a.data_cancellazione is null
    and b.data_cancellazione is null
    and c.data_cancellazione is null
     and e.data_cancellazione is null
     and f.movgest_ts_det_tipo_id=e.movgest_ts_det_tipo_id
    and e.movgest_ts_det_tipo_id=movGestTsDetTipoId
    group by
   c.movgest_ts_tipo_id
    ) tb, siac_d_movgest_ts_tipo t
    where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
    order by t.movgest_ts_tipo_code desc
    limit 1;


 -- 02.02.2016 Sofia JIRA 2947
 if importoCurAttuale is null then importoCurAttuale:=0; end if;

 -- 16.03.2017 Sofia JIRA-SIAC-4614
-- if importoCurAttuale>0 then
 if importoCurAttuale>=0 then -- 05.09.2017 Sofia siac-5198 il conteggio deve essere effettuato anche se impoatt=0

  strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'. Calcolo totale modifiche negative su atti provvisori per anno_in='||anno_in||'.';

 select tb.importo into importoModifNeg
 from
 (
 	select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
	from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
    	 siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
	     siac_t_movgest_ts_det_mod moddet,
    	 siac_t_modifica mod, siac_r_modifica_stato rmodstato,
	     siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
         siac_d_modifica_tipo tipom
	where rbil.elem_id=id_in
	 and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
	and	  mov.movgest_id=rbil.movgest_id
	and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
    and   mov.movgest_anno=anno_in::integer
    and   mov.bil_id=bilancioId
	and   ts.movgest_id=mov.movgest_id
	and   rstato.movgest_ts_id=ts.movgest_ts_id
	and   rstato.movgest_stato_id!=movGestStatoId -- impegno non annullato
	and   tsdet.movgest_ts_id=ts.movgest_ts_id
	and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
	and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
	and   moddet.movgest_ts_det_importo<0 -- importo negativo
	and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
	and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
	and   mod.mod_id=rmodstato.mod_id
	and   atto.attoamm_id=mod.attoamm_id
	and   attostato.attoamm_id=atto.attoamm_id
	and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
    and   tipom.mod_tipo_id=mod.mod_tipo_id
    and   tipom.mod_tipo_code <> 'ECONB'
	-- date
	and rbil.data_cancellazione is null
	and rbil.validita_fine is null
	and mov.data_cancellazione is null
	and mov.validita_fine is null
	and ts.data_cancellazione is null
	and ts.validita_fine is null
	and rstato.data_cancellazione is null
	and rstato.validita_fine is null
	and tsdet.data_cancellazione is null
	and tsdet.validita_fine is null
	and moddet.data_cancellazione is null
	and moddet.validita_fine is null
	and mod.data_cancellazione is null
	and mod.validita_fine is null
	and rmodstato.data_cancellazione is null
	and rmodstato.validita_fine is null
	and attostato.data_cancellazione is null
	and attostato.validita_fine is null
	and atto.data_cancellazione is null
	and atto.validita_fine is null
    group by ts.movgest_ts_tipo_id
  ) tb, siac_d_movgest_ts_tipo tipo
  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
  order by tipo.movgest_ts_tipo_code desc
  limit 1;
  -- 21.06.2017 Sofia - aggiunto parametro verifica_mod_prov, ripreso da prod CmTo dove era stato implementato
  if importoModifNeg is null or verifica_mod_prov is false then importoModifNeg:=0; end if;

-- 10.08.2020 Sofia jira SIAC-6865 - inizio
  -- impegni provvisori nati da aggiudiazione non decurtano la disp. a impegnare
  if  verifica_mod_prov=true then
   strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
               ||'. Calcolo impegnato provvisorio per aggiudicazione per anno_in='||anno_in||'.';

   select tb.importo into importoCurAttAggiudicazione
   from
   (
  	select coalesce(sum(det.movgest_ts_det_importo),0)  importo, ts.movgest_ts_tipo_id
    from  siac_r_movgest_bil_elem rmov,
          siac_t_movgest mov,
      	  siac_t_movgest_ts ts,
      	  siac_r_movgest_ts_stato rs_stato,
          siac_t_movgest_ts_det det,
     	  siac_d_movgest_ts_det_tipo tipo_det
      where rmov.elem_id=id_in
      and   rmov.elem_det_comp_tipo_id=idcomp_in::integer
      and 	mov.movgest_id=rmov.movgest_id
      and   mov.bil_id = bilancioId
      and   mov.movgest_tipo_id=movGestTipoId
      and   mov.movgest_anno = anno_in::integer
      and   ts.movgest_id=mov.movgest_id
      and   rs_stato.movgest_ts_id=ts.movgest_ts_id
	  and   rs_stato.movgest_stato_id=movGestStatoPId
      and   det.movgest_ts_id=ts.movgest_ts_id
      and   tipo_det.movgest_ts_det_tipo_id=det.movgest_ts_det_tipo_id
      and   tipo_det.movgest_ts_det_tipo_id=movGestTsDetTipoId
      and   exists
      (
        select 1
        from siac_r_movgest_aggiudicazione ragg
        where   ragg.movgest_id_a=mov.movgest_id
        and     ragg.data_cancellazione is null
        and     ragg.validita_fine is null
      )
      and   rs_stato.validita_fine is null
	  and   rmov.data_cancellazione is null
      and   mov.data_cancellazione is null
      and   ts.data_cancellazione is null
      and   det.data_cancellazione is null
     group by ts.movgest_ts_tipo_id
    ) tb, siac_d_movgest_ts_tipo t
    where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
    order by t.movgest_ts_tipo_code desc
    limit 1;
    if importoCurAttAggiudicazione is null then importoCurAttAggiudicazione:=0; end if;
  end if;
  -- 10.08.2020 Sofia jira SIAC-6865 - fine

  -- anna_economie inizio
  select tb.importo into importoModifINS
  from
  (
 	select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
	from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
    	 siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
	     siac_t_movgest_ts_det_mod moddet,
    	 siac_t_modifica mod, siac_r_modifica_stato rmodstato,
	     siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
         siac_d_modifica_tipo tipom
	where rbil.elem_id=id_in
	and rbil.elem_det_comp_tipo_id=idcomp_in::integer --SIAC-7349
	and	  mov.movgest_id=rbil.movgest_id
	and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
    and   mov.movgest_anno=anno_in::integer
    and   mov.bil_id=bilancioId
	and   ts.movgest_id=mov.movgest_id
	and   rstato.movgest_ts_id=ts.movgest_ts_id
	and   rstato.movgest_stato_id!=movGestStatoId -- impegno non annullato
	and   tsdet.movgest_ts_id=ts.movgest_ts_id
	and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
	and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
	and   moddet.movgest_ts_det_importo<0 -- importo negativo
	and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
	and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
	and   mod.mod_id=rmodstato.mod_id
	and   atto.attoamm_id=mod.attoamm_id
	and   attostato.attoamm_id=atto.attoamm_id
	and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
    and   tipom.mod_tipo_id=mod.mod_tipo_id
    and   tipom.mod_tipo_code = 'ECONB'
	-- date
	and rbil.data_cancellazione is null
	and rbil.validita_fine is null
	and mov.data_cancellazione is null
	and mov.validita_fine is null
	and ts.data_cancellazione is null
	and ts.validita_fine is null
	and rstato.data_cancellazione is null
	and rstato.validita_fine is null
	and tsdet.data_cancellazione is null
	and tsdet.validita_fine is null
	and moddet.data_cancellazione is null
	and moddet.validita_fine is null
	and mod.data_cancellazione is null
	and mod.validita_fine is null
	and rmodstato.data_cancellazione is null
	and rmodstato.validita_fine is null
	and attostato.data_cancellazione is null
	and attostato.validita_fine is null
	and atto.data_cancellazione is null
	and atto.validita_fine is null
    group by ts.movgest_ts_tipo_id
  ) tb, siac_d_movgest_ts_tipo tipo
  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
  order by tipo.movgest_ts_tipo_code desc
  limit 1;

  if importoModifINS is null then importoModifINS:=0; end if;

  -- anna_economie fine

 end if;

 --nuovo G
 importoAttuale:=importoAttuale+importoCurAttuale+abs(importoModifNeg); -- 16.03.2017 Sofia JIRA-SIAC-4614
 --fine nuovoG

 -- anna_economie inizio
 importoAttuale:=importoAttuale+abs(importoModifINS);
 -- anna_economie fine

 -- 10.08.2020 Sofia jira siac-6865
 importoAttuale:=importoAttuale-importoCurAttAggiudicazione;

 annoCompetenza:=anno_in;
 diCuiImpegnato:=importoAttuale;

 return next;

else

annoCompetenza:=anno_in;
diCuiImpegnato:=0;

return next;

end if;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return;
	when no_data_found then
	    RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100 ROWS 1000;

CREATE OR REPLACE FUNCTION siac.fnc_siac_dicuiimpegnatoup_comp_anno 
(
  id_in integer,
  anno_in character varying,
  verifica_mod_prov boolean = true -- SIAC-7349 se true vengono restituite all'impegnato le modifiche provvisorie
)
RETURNS TABLE (
  annocompetenza varchar,
  dicuiimpegnato numeric
) AS
$body$
DECLARE

-- constant
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
NVL_STR     constant varchar:='';
STA_IMP     constant varchar:='STA';

FASE_OP_BIL_PREV constant VARCHAR:='P';
STATO_ATTO_P constant varchar:='PROVVISORIO';
STATO_ATTO_D constant varchar:='DEFINITIVO';
STATO_MOD_V  constant varchar:='V';
TIPO_IMP    constant varchar:='I';
TIPO_IMP_T  constant varchar:='T';

STATO_DEF   constant varchar:='D';
STATO_N     constant varchar:='N';
STATO_P     constant varchar:='P';
STATO_A     constant varchar:='A';
IMPORTO_ATT constant varchar:='A';

strMessaggio varchar(1500):=NVL_STR;

attoAmmStatoDId integer:=0; -- SIAC-7349
attoAmmStatoPId integer:=0;-- SIAC-7349
bilancioId integer:=0;
enteProprietarioId INTEGER:=0;
annoBilancio varchar:=null;
modStatoVId integer:=0; -- SIAC-7349
movGestTipoId integer:=0;
movGestTsTipoId integer:=0;
movGestStatoId integer:=0;
movGestTsDetTipoId integer:=0;
movGestStatoIdProvvisorio integer:=0; -- SIAC-7349
movGestTsId integer:=0;

importoAttuale numeric:=0;
importoCurAttuale numeric:=0;
importoModifDelta  numeric:=0;
importoModifINS numeric:=0; -- SIAC-7349 --aggiunta per ECONB

movGestIdRec record;

elemTipoCode VARCHAR(20):=NVL_STR;
faseOpCode varchar(20):=NVL_STR;
elemCode varchar(50):=NVL_STR;
elemCode2 varchar(50):=NVL_STR;
elemCode3 varchar(50):=NVL_STR;

elemIdGestEq integer:=0;
bilIdElemGestEq integer:=0;

-- 10.08.2020 Sofia jira siac-6865
movGestStatoPId integer:=null;
importoCurAttAggiudicazione numeric:=0;
BEGIN


 annoCompetenza:=null;
 diCuiImpegnato:=0;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.Controllo parametri.';

 if anno_in is null or anno_in=NVL_STR then
	 RAISE EXCEPTION '% Anno di competenza mancante.',strMessaggio;
 end if;

 if id_in is null or id_in=0 then
	 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
 end if;


 strMessaggio:='Calcolo impegnato competenza UP elem_id='||id_in||'.';


 strMessaggio:='Calcolo impegnato competenza UP.Calcolo bilancioId e elem_tipo_code per elem_id='||id_in||'.';
 select bilelem.elem_code, bilElem.elem_code2, bilElem.elem_code3, bil.bil_id ,tipoBilElem.elem_tipo_code, per.anno , bil.ente_proprietario_id
       into strict elemCode, elemCode2, elemCode3, bilancioId, elemTipoCode , annoBilancio,enteProprietarioId
 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo tipoBilElem,
      siac_t_bil bil, siac_t_periodo per
 where bilElem.elem_id=id_in
   and bilElem.data_cancellazione is null
   and bilElem.validita_fine is null
   and tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
   and bil.bil_id=bilElem.bil_id
   and per.periodo_id=bil.periodo_id;

 if elemTipoCode is not null and elemTipoCode!=NVL_STR and elemTipoCode!=TIPO_CAP_UP then
        RAISE EXCEPTION '% elemTipoCode=%  non ammesso per tipo di calcolo.',strMessaggio,elemTipoCode;
 end if;


 strMessaggio:='Calcolo impegnato competenza UP.Calcolo fase operativa per bilancioId='||bilancioId
               ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

 select  faseOp.fase_operativa_code into  faseOpCode
 from siac_r_bil_fase_operativa bilFase, siac_d_fase_operativa faseOp
 where bilFase.bil_id =bilancioId
   and bilfase.data_cancellazione is null
   and bilFase.validita_fine is null
   and faseOp.fase_operativa_id=bilFase.fase_operativa_id
   and faseOp.data_cancellazione is null
 order by bilFase.bil_fase_operativa_id desc;

 if NOT FOUND THEN
   RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
 end if;


 strMessaggio:='Calcolo impegnato competenza UP.Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode
              ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
 -- lettura elemento bil di gestione equivalente
 if faseOpCode is not null and faseOpCode!=NVL_STR then
  	if  faseOpCode = FASE_OP_BIL_PREV then
      	-- lettura bilancioId annoBilancio precedente per lettura elemento di bilancio equivalente
            	select bil.bil_id into strict bilIdElemGestEq
                from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
                where per.anno=((annoBilancio::integer)-1)::varchar
                  and per.ente_proprietario_id=enteProprietarioId
                  and bil.periodo_id=per.periodo_id
                  and perTipo.periodo_tipo_id=per.periodo_tipo_id
                  and perTipo.periodo_tipo_code='SY';
    else
        	bilIdElemGestEq:=bilancioId;
    end if;
 else
	 RAISE EXCEPTION '% Fase non valida.',strMessaggio;
 end if;

 -- lettura elemIdGestEq
 strMessaggio:='Calcolo impegnato competenza UP.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
              ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

 select bilelem.elem_id into elemIdGestEq
 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
 where bilElem.elem_code=elemCode
   and bilElem.elem_code2=elemCode2
   and bilElem.elem_code3=elemCode3
   and bilElem.ente_proprietario_id=enteProprietarioId
   and bilElem.data_cancellazione is null
   and bilElem.validita_fine is null
   and bilElem.bil_id=bilIdElemGestEq
   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

if NOT FOUND THEN
else
 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'.Calcolo movGestTipoId.';
 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
 from  siac_d_movgest_tipo tipoMovGest
 where tipoMovGest.ente_proprietario_id=enteProprietarioId
 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'.Calcolo movGestTsTipoId.';
 select movGestTsTipo.movgest_ts_tipo_id into strict movGestTsTipoId
 from siac_d_movgest_ts_tipo movGestTsTipo
 where movGestTsTipo.ente_proprietario_id=enteProprietarioId
 and   movGestTsTipo.movgest_ts_tipo_code=TIPO_IMP_T;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
               ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'.Calcolo movGestTsStatoId.';

 select movGestStato.movgest_stato_id into strict movGestStatoId
 from siac_d_movgest_stato movGestStato
 where movGestStato.ente_proprietario_id=enteProprietarioId
 and   movGestStato.movgest_stato_code=STATO_A;

 -- 10.08.2020 Sofia jira SIAC-6865
 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
               ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'.Calcolo movGestStatoPId.';

 select movGestStato.movgest_stato_id into strict movGestStatoPId
 from siac_d_movgest_stato movGestStato
 where movGestStato.ente_proprietario_id=enteProprietarioId
 and   movGestStato.movgest_stato_code=STATO_P;


-- SIAC-7349 INIZIO
strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'. Calcolo attoAmmStatoPId per attoamm_stato_code=PROVVISORIO';
	  select d.attoamm_stato_id into strict attoAmmStatoPId
	  from siac_d_atto_amm_stato d
	  where d.ente_proprietario_id=enteProprietarioId
	  and d.attoamm_stato_code=STATO_ATTO_P;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'. Calcolo attoAmmStatoDId per attoamm_stato_code=DEFINTIVO';

	  select d.attoamm_stato_id into strict attoAmmStatoDId
	  from siac_d_atto_amm_stato d
	  where d.ente_proprietario_id=enteProprietarioId
	  and  d.attoamm_stato_code=STATO_ATTO_D;

	select  movGestStato.movgest_stato_id into strict movGestStatoIdProvvisorio
	  from siac_d_movgest_stato movGestStato
	  where movGestStato.ente_proprietario_id=enteProprietarioId
	  and   movGestStato.movgest_stato_code=STATO_P;

	select d.mod_stato_id into strict modStatoVId
	  from siac_d_modifica_stato d
	  where d.ente_proprietario_id=enteProprietarioId
	  and   d.mod_stato_code=STATO_MOD_V;
-- SIAC-7349 FINE

    strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
               ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'.Calcolo movGestTsDetTipoId.';

 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
              ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'. Inizio ciclo per anno_in='||anno_in||'.';
 for movGestIdRec in
 (
     select movGestRel.movgest_id
     from siac_r_movgest_bil_elem movGestRel
     where movGestRel.elem_id=elemIdGestEq
     and   movGestRel.data_cancellazione is null
     and   exists (select 1 from siac_t_movgest movGest
   				   where movGest.movgest_id=movGestRel.movgest_id
			       and	 movGest.bil_id = bilIdElemGestEq
			       and   movGest.movgest_tipo_id=movGestTipoId
				   and   movGest.movgest_anno = anno_in::integer
                   and   movGest.data_cancellazione is null
                   and   movGest.validita_fine is null)
 )
 loop
   	importoCurAttuale:=0;

    strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
				      ||'.Per elemento gest equivalente elem_id='||elemIdGestEq
                      ||'.Calcolo impegnato anno_in='||anno_in
                      ||'.Lettura siac_t_movgest_ts movGestTs.movgest_id='||movGestIdRec.movgest_id||'.';

    select movgestts.movgest_ts_id into  movGestTsId
    from siac_t_movgest_ts movGestTs
    where movGestTs.movgest_id = movGestIdRec.movgest_id
    and   movGestTs.data_cancellazione is null
    and   movGestTs.movgest_ts_tipo_id=movGestTsTipoId
    and   exists (select 1 from siac_r_movgest_ts_stato movGestTsRel
                  where movGestTsRel.movgest_ts_id=movGestTs.movgest_ts_id
                  and   movGestTsRel.movgest_stato_id!=movGestStatoId
                  and   movGestTsRel.validita_fine is null
                  and   movGestTsRel.data_cancellazione is null);

    strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
				      ||'.Per elemento gest equivalente elem_id='||elemIdGestEq
                      ||'.Calcolo accertato anno_in='||anno_in||'.Somma siac_t_movgest_ts_det movGestTs.movgest_id='||movGestIdRec.movgest_id||'.';
    if NOT FOUND then
    else
       select coalesce(sum(movGestTsDet.movgest_ts_det_importo),0) into importoCurAttuale
           from siac_t_movgest_ts_det movGestTsDet
           where movGestTsDet.movgest_ts_id=movGestTsId
           and   movGestTsDet.movgest_ts_det_tipo_id=movGestTsDetTipoId;
	   -- SIAC-7349 INIZIO
           if importoCurAttuale>=0 then
              ----------------
              select tb.importo into importoModifDelta
	          from
	          (
	          	select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
	          	from siac_r_movgest_bil_elem rbil,
	          	 	siac_t_movgest mov,
	          	 	siac_t_movgest_ts ts,
	          		siac_r_movgest_ts_stato rstato,
	          	  siac_t_movgest_ts_det tsdet,
	          		siac_t_movgest_ts_det_mod moddet,
	          		siac_t_modifica mod,
	          	 	siac_r_modifica_stato rmodstato,
	          		siac_r_atto_amm_stato attostato,
	          	 	siac_t_atto_amm atto,
	          		siac_d_modifica_tipo tipom
	          	where
	          		rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
	          		and	 mov.movgest_id=rbil.movgest_id
	          		and  mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
	          		and  mov.movgest_anno=anno_in::integer -- anno dell impegno = annoMovimento
	          		and  mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
	          		and  ts.movgest_id=mov.movgest_id
	          		and  rstato.movgest_ts_id=ts.movgest_ts_id
	          		and  rstato.movgest_stato_id!=movGestStatoId -- Impegno non ANNULLATO
	          		and  rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
	          	  and  tsdet.movgest_ts_id=ts.movgest_ts_id
	          		and  moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
	          		and  moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
	          	 	and   moddet.movgest_ts_det_importo<0 -- importo negativo
	          		and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
	          		and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
	          		and   mod.mod_id=rmodstato.mod_id
	          		and   atto.attoamm_id=mod.attoamm_id
	          		and   attostato.attoamm_id=atto.attoamm_id
	          		and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
	          		and   tipom.mod_tipo_id=mod.mod_tipo_id
	          		and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
	          		and rbil.data_cancellazione is null
	          		and rbil.validita_fine is null
	          		and mov.data_cancellazione is null
	          		and mov.validita_fine is null
	          		and ts.data_cancellazione is null
	          		and ts.validita_fine is null
	          		and rstato.data_cancellazione is null
	          		and rstato.validita_fine is null
	          		and tsdet.data_cancellazione is null
	          		and tsdet.validita_fine is null
	          		and moddet.data_cancellazione is null
	          		and moddet.validita_fine is null
	          		and mod.data_cancellazione is null
	          		and mod.validita_fine is null
	          		and rmodstato.data_cancellazione is null
	          		and rmodstato.validita_fine is null
	          		and attostato.data_cancellazione is null
	          		and attostato.validita_fine is null
	          		and atto.data_cancellazione is null
	          		and atto.validita_fine is null
	          		group by ts.movgest_ts_tipo_id
	          	  ) tb, siac_d_movgest_ts_tipo tipo
	          	  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
	          	  order by tipo.movgest_ts_tipo_code desc
	          	  limit 1;
	      	  -- 14.05.2020 Manuel - aggiunto parametro verifica_mod_prov
	          if importoModifDelta is null or verifica_mod_prov is false then importoModifDelta:=0; end if;

                  /*Aggiunta delle modifiche ECONB*/
		        -- anna_economie inizio
	          select tb.importo into importoModifINS
		                from
		                (
		                	select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
		                	from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
	                   	siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
		                  siac_t_movgest_ts_det_mod moddet,
	                   	siac_t_modifica mod, siac_r_modifica_stato rmodstato,
		                  siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
	                    siac_d_modifica_tipo tipom
		                where rbil.elem_id=elemIdGestEq
		                and	 mov.movgest_id=rbil.movgest_id
		                and  mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
	                  and  mov.movgest_anno=anno_in::integer
	                  and  mov.bil_id=bilancioId
		                and  ts.movgest_id=mov.movgest_id
		                and  rstato.movgest_ts_id=ts.movgest_ts_id
		                and  rstato.movgest_stato_id!=movGestStatoId -- impegno non annullato
		                and  tsdet.movgest_ts_id=ts.movgest_ts_id
		                and  moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
		                and  moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
		                and   moddet.movgest_ts_det_importo<0 -- importo negativo
		                and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
		                and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
		                and   mod.mod_id=rmodstato.mod_id
		                and   atto.attoamm_id=mod.attoamm_id
		                and   attostato.attoamm_id=atto.attoamm_id
		                and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
	                   and   tipom.mod_tipo_id=mod.mod_tipo_id
	                   and   tipom.mod_tipo_code = 'ECONB'
		                -- date
		                and rbil.data_cancellazione is null
		                and rbil.validita_fine is null
		                and mov.data_cancellazione is null
		                and mov.validita_fine is null
		                and ts.data_cancellazione is null
		                and ts.validita_fine is null
		                and rstato.data_cancellazione is null
		                and rstato.validita_fine is null
		                and tsdet.data_cancellazione is null
		                and tsdet.validita_fine is null
		                and moddet.data_cancellazione is null
		                and moddet.validita_fine is null
		                and mod.data_cancellazione is null
		                and mod.validita_fine is null
		                and rmodstato.data_cancellazione is null
		                and rmodstato.validita_fine is null
		                and attostato.data_cancellazione is null
		                and attostato.validita_fine is null
		                and atto.data_cancellazione is null
		                and atto.validita_fine is null
	                   group by ts.movgest_ts_tipo_id
	                  ) tb, siac_d_movgest_ts_tipo tipo
	                  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
	                  order by tipo.movgest_ts_tipo_code desc
	                  limit 1;

       			 if importoModifINS is null then
	 	            importoModifINS = 0;
	            end if;
            end if;
    end if;
  --importoAttuale:=importoAttuale+importoCurAttuale;
  importoAttuale:=importoAttuale+importoCurAttuale-(importoModifDelta);


  --aggiunta per ECONB
  importoAttuale:=importoAttuale+abs(importoModifINS);

 end loop;

 -- 10.08.2020 Sofia Jira SIAC-6865 - inizio
 -- impegni provvisori nati da aggiudiazione non decurtano la disp. a impegnare
 if  verifica_mod_prov=true then
   strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
               ||'. Calcolo impegnato provvisorio per aggiudicazione per anno_in='||anno_in||'.';

   select tb.importo into importoCurAttAggiudicazione
   from
   (
  	select coalesce(sum(det.movgest_ts_det_importo),0)  importo, ts.movgest_ts_tipo_id
    from  siac_r_movgest_bil_elem rmov,
          siac_t_movgest mov,
      	  siac_t_movgest_ts ts,
      	  siac_r_movgest_ts_stato rs_stato,
          siac_t_movgest_ts_det det,
     	  siac_d_movgest_ts_det_tipo tipo_det
      where rmov.elem_id=elemIdGestEq
      and 	mov.movgest_id=rmov.movgest_id
      and   mov.bil_id = bilIdElemGestEq
      and   mov.movgest_tipo_id=movGestTipoId
      and   mov.movgest_anno = anno_in::integer
      and   ts.movgest_id=mov.movgest_id
      and   rs_stato.movgest_ts_id=ts.movgest_ts_id
	  and   rs_stato.movgest_stato_id=movGestStatoPId
      and   det.movgest_ts_id=ts.movgest_ts_id
      and   tipo_det.movgest_ts_det_tipo_id=det.movgest_ts_det_tipo_id
      and   tipo_det.movgest_ts_det_tipo_id=movGestTsDetTipoId
      and   exists
      (
        select 1
        from siac_r_movgest_aggiudicazione ragg
        where   ragg.movgest_id_a=mov.movgest_id
        and     ragg.data_cancellazione is null
        and     ragg.validita_fine is null
      )
      and   rs_stato.validita_fine is null
	  and   rmov.data_cancellazione is null
      and   mov.data_cancellazione is null
      and   ts.data_cancellazione is null
      and   det.data_cancellazione is null
     group by ts.movgest_ts_tipo_id
    ) tb, siac_d_movgest_ts_tipo t
    where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
    order by t.movgest_ts_tipo_code desc
    limit 1;
    if importoCurAttAggiudicazione is null then importoCurAttAggiudicazione:=0; end if;

    importoAttuale:=importoAttuale-importoCurAttAggiudicazione;
  end if;
  -- 10.08.2020 Sofia Jira SIAC-6865 - fine

end if;




annoCompetenza:=anno_in;
diCuiImpegnato:=importoAttuale;

return next;


exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return;
	when no_data_found then
	    RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
PARALLEL UNSAFE
COST 100 ROWS 1000;

CREATE OR REPLACE FUNCTION siac.fnc_siac_dicuiimpegnatoup_comp_anno_comp(
	id_in integer,
	id_comp integer,
	anno_in character varying,
	verifica_mod_prov boolean = true)
    RETURNS TABLE(annocompetenza character varying, dicuiimpegnato numeric)
AS $BODY$
DECLARE
/*
Calcolo dell'impegnato di un capitolo di previsione id_in su una componente id_comp per l'anno anno_it,
utile al calcolo della disponibilita' a variare
quindi non tiene conto di grandezze da considerare solo per disponibilita' ad impegnare: limite massimo impegnabile e modifiche di impegno negative su provvedimento provvisorio
*/

-- constant
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
NVL_STR     constant varchar:='';
STA_IMP     constant varchar:='STA';

FASE_OP_BIL_PREV constant VARCHAR:='P';

STATO_ATTO_P constant varchar:='PROVVISORIO';
STATO_ATTO_D constant varchar:='DEFINITIVO';

STATO_MOD_V  constant varchar:='V';

TIPO_IMP    constant varchar:='I';
TIPO_IMP_T  constant varchar:='T';

STATO_DEF   constant varchar:='D';
STATO_N     constant varchar:='N';
STATO_P     constant varchar:='P';
STATO_A     constant varchar:='A';
IMPORTO_ATT constant varchar:='A';

strMessaggio varchar(1500):=NVL_STR;

attoAmmStatoDId integer:=0;
attoAmmStatoPId integer:=0;
bilancioId integer:=0;
enteProprietarioId INTEGER:=0;
annoBilancio varchar:=null;

modStatoVId integer:=0;
movGestTipoId integer:=0;
movGestTsTipoId integer:=0;
movGestStatoId integer:=0;
movGestTsDetTipoId integer:=0;
movGestStatoIdProvvisorio integer:=0;
movGestTsId integer:=0;


importoAttuale numeric:=0;
importoCurAttuale numeric:=0;
importoModifDelta  numeric:=0;
importoModifINS numeric:=0; --aggiunta per ECONB

movGestIdRec record;

elemTipoCode VARCHAR(20):=NVL_STR;
faseOpCode varchar(20):=NVL_STR;
elemCode varchar(50):=NVL_STR;
elemCode2 varchar(50):=NVL_STR;
elemCode3 varchar(50):=NVL_STR;

elemIdGestEq integer:=0;
bilIdElemGestEq integer:=0;

-- 10.08.2020 Sofia jira siac-6865
movGestStatoPId integer:=null;
importoCurAttAggiudicazione numeric:=0;
BEGIN

 annoCompetenza:=null;
 diCuiImpegnato:=0;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.Controllo parametri.';

 if anno_in is null or anno_in=NVL_STR then
	 RAISE EXCEPTION '% Anno di competenza mancante.',strMessaggio;
 end if;

 if id_in is null or id_in=0 then
	 RAISE EXCEPTION '% Identificativo elemento di bilancio mancante.',strMessaggio;
 end if;

 strMessaggio:='Calcolo impegnato competenza UP elem_id='||id_in||'.';

 strMessaggio:='Calcolo impegnato competenza UP.Calcolo bilancioId e elem_tipo_code per elem_id='||id_in||'.';
 select bilelem.elem_code, bilElem.elem_code2, bilElem.elem_code3, bil.bil_id ,tipoBilElem.elem_tipo_code, per.anno , bil.ente_proprietario_id
       into strict elemCode, elemCode2, elemCode3, bilancioId, elemTipoCode , annoBilancio,enteProprietarioId
 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo tipoBilElem,
      siac_t_bil bil, siac_t_periodo per
 where bilElem.elem_id=id_in
   and bilElem.data_cancellazione is null
   and bilElem.validita_fine is null
   and tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
   and bil.bil_id=bilElem.bil_id
   and per.periodo_id=bil.periodo_id;

 if elemTipoCode is not null and elemTipoCode!=NVL_STR and elemTipoCode!=TIPO_CAP_UP then
        RAISE EXCEPTION '% elemTipoCode=%  non ammesso per tipo di calcolo.',strMessaggio,elemTipoCode;
 end if;

 strMessaggio:='Calcolo impegnato competenza UP.Calcolo fase operativa per bilancioId='||bilancioId
               ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

 select  faseOp.fase_operativa_code into  faseOpCode
 from siac_r_bil_fase_operativa bilFase, siac_d_fase_operativa faseOp
 where bilFase.bil_id =bilancioId
   and bilfase.data_cancellazione is null
   and bilFase.validita_fine is null
   and faseOp.fase_operativa_id=bilFase.fase_operativa_id
   and faseOp.data_cancellazione is null
 order by bilFase.bil_fase_operativa_id desc;

 if NOT FOUND THEN
   RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
 end if;

 strMessaggio:='Calcolo impegnato competenza UP.Calcolo bilancioId per elem_id equivalente per faseOp='||faseOpCode
              ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';
 -- lettura elemento bil di gestione equivalente
 if faseOpCode is not null and faseOpCode!=NVL_STR then
  	if  faseOpCode = FASE_OP_BIL_PREV then
      	-- lettura bilancioId annoBilancio precedente per lettura elemento di bilancio equivalente
            	select bil.bil_id into strict bilIdElemGestEq
                from siac_t_bil bil , siac_t_periodo per, siac_d_periodo_tipo perTipo
                where per.anno=((annoBilancio::integer)-1)::varchar
                  and per.ente_proprietario_id=enteProprietarioId
                  and bil.periodo_id=per.periodo_id
                  and perTipo.periodo_tipo_id=per.periodo_tipo_id
                  and perTipo.periodo_tipo_code='SY';
    else
        	bilIdElemGestEq:=bilancioId;
    end if;
 else
	 RAISE EXCEPTION '% Fase non valida.',strMessaggio;
 end if;

 -- lettura elemIdGestEq
 strMessaggio:='Calcolo impegnato competenza UP.Calcolo elem_id equivalente per bilancioId='||bilIdElemGestEq
              ||' per ente='||enteProprietarioId||' per elem_id='||id_in||'.';

 select bilelem.elem_id into elemIdGestEq
 from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo bilElemTipo
 where bilElem.elem_code=elemCode
   and bilElem.elem_code2=elemCode2
   and bilElem.elem_code3=elemCode3
   and bilElem.ente_proprietario_id=enteProprietarioId
   and bilElem.data_cancellazione is null
   and bilElem.validita_fine is null
   and bilElem.bil_id=bilIdElemGestEq
   and bilElemTipo.elem_tipo_id=bilElem.elem_tipo_id
   and bilElemTipo.elem_tipo_code=TIPO_CAP_UG;

if NOT FOUND THEN
else
 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'.Calcolo movGestTipoId.';
 select tipoMovGest.movgest_tipo_id into strict movGestTipoId
 from  siac_d_movgest_tipo tipoMovGest
 where tipoMovGest.ente_proprietario_id=enteProprietarioId
 and   tipoMovGest.movgest_tipo_code= TIPO_IMP;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
              ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'.Calcolo movGestTsTipoId.';
 select movGestTsTipo.movgest_ts_tipo_id into strict movGestTsTipoId
 from siac_d_movgest_ts_tipo movGestTsTipo
 where movGestTsTipo.ente_proprietario_id=enteProprietarioId
 and   movGestTsTipo.movgest_ts_tipo_code=TIPO_IMP_T;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
               ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'.Calcolo movGestTsStatoId.';

 select movGestStato.movgest_stato_id into strict movGestStatoId
 from siac_d_movgest_stato movGestStato
 where movGestStato.ente_proprietario_id=enteProprietarioId
 and   movGestStato.movgest_stato_code=STATO_A;

 -- 10.08.2020 Sofia jira SIAC-6865
 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
               ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'.Calcolo movGestStatoPId.';

 select movGestStato.movgest_stato_id into strict movGestStatoPId
 from siac_d_movgest_stato movGestStato
 where movGestStato.ente_proprietario_id=enteProprietarioId
 and   movGestStato.movgest_stato_code=STATO_P;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||id_comp
				  ||'. Calcolo attoAmmStatoPId per attoamm_stato_code=PROVVISORIO';
	  select d.attoamm_stato_id into strict attoAmmStatoPId
	  from siac_d_atto_amm_stato d
	  where d.ente_proprietario_id=enteProprietarioId
	  and d.attoamm_stato_code=STATO_ATTO_P;

	 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'idcomp_in='||id_comp
				  ||'. Calcolo attoAmmStatoDId per attoamm_stato_code=DEFINTIVO';

	  select d.attoamm_stato_id into strict attoAmmStatoDId
	  from siac_d_atto_amm_stato d
	  where d.ente_proprietario_id=enteProprietarioId
	  and  d.attoamm_stato_code=STATO_ATTO_D;

	select  movGestStato.movgest_stato_id into strict movGestStatoIdProvvisorio
	  from siac_d_movgest_stato movGestStato
	  where movGestStato.ente_proprietario_id=enteProprietarioId
	  and   movGestStato.movgest_stato_code=STATO_P;

	select d.mod_stato_id into strict modStatoVId
	  from siac_d_modifica_stato d
	  where d.ente_proprietario_id=enteProprietarioId
	  and   d.mod_stato_code=STATO_MOD_V;



 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in||'.'
               ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'.Calcolo movGestTsDetTipoId.';

 select movGestTsDetTipo.movgest_ts_det_tipo_id into strict movGestTsDetTipoId
 from siac_d_movgest_ts_det_tipo movGestTsDetTipo
 where movGestTsDetTipo.ente_proprietario_id=enteProprietarioId
 and   movGestTsDetTipo.movgest_ts_det_tipo_code=IMPORTO_ATT;

 strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
              ||'Per elemento gest equivalente elem_id='||elemIdGestEq||'. Inizio ciclo per anno_in='||anno_in||'.';
 for movGestIdRec in
 (
     select movGestRel.movgest_id
     from siac_r_movgest_bil_elem movGestRel
     where movGestRel.elem_id=elemIdGestEq
     and   movGestRel.data_cancellazione is null
	 and movGestRel.elem_det_comp_tipo_id=id_comp
     and   exists (select 1 from siac_t_movgest movGest
   				   where movGest.movgest_id=movGestRel.movgest_id
			       and	 movGest.bil_id = bilIdElemGestEq
			       and   movGest.movgest_tipo_id=movGestTipoId
				   and   movGest.movgest_anno = anno_in::integer
                   and   movGest.data_cancellazione is null
                   and   movGest.validita_fine is null)
 )
 loop
   	importoCurAttuale:=0;

    strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
				      ||'.Per elemento gest equivalente elem_id='||elemIdGestEq
                      ||'.Calcolo impegnato anno_in='||anno_in
                      ||'.Lettura siac_t_movgest_ts movGestTs.movgest_id='||movGestIdRec.movgest_id||'.';

    select movgestts.movgest_ts_id into  movGestTsId
    from siac_t_movgest_ts movGestTs
    where movGestTs.movgest_id = movGestIdRec.movgest_id
    and   movGestTs.data_cancellazione is null
    and   movGestTs.movgest_ts_tipo_id=movGestTsTipoId
    and   exists (select 1 from siac_r_movgest_ts_stato movGestTsRel
                  where movGestTsRel.movgest_ts_id=movGestTs.movgest_ts_id
                  and   movGestTsRel.movgest_stato_id!=movGestStatoId
                  and   movGestTsRel.validita_fine is null
                  and   movGestTsRel.data_cancellazione is null);



    strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
				      ||'.Per elemento gest equivalente elem_id='||elemIdGestEq
                      ||'.Calcolo accertato anno_in='||anno_in||'.Somma siac_t_movgest_ts_det movGestTs.movgest_id='||movGestIdRec.movgest_id||'.';
    if NOT FOUND then
    else
       select coalesce(sum(movGestTsDet.movgest_ts_det_importo),0) into importoCurAttuale
           from siac_t_movgest_ts_det movGestTsDet
           where movGestTsDet.movgest_ts_id=movGestTsId
           and   movGestTsDet.movgest_ts_det_tipo_id=movGestTsDetTipoId;

	   if importoCurAttuale>=0 then

		  select tb.importo into importoModifDelta
				from
				(
					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil,
					 	siac_t_movgest mov,
					 	siac_t_movgest_ts ts,
						siac_r_movgest_ts_stato rstato,
					  siac_t_movgest_ts_det tsdet,
						siac_t_movgest_ts_det_mod moddet,
						siac_t_modifica mod,
					 	siac_r_modifica_stato rmodstato,
						siac_r_atto_amm_stato attostato,
					 	siac_t_atto_amm atto,
						siac_d_modifica_tipo tipom
					where
						rbil.elem_id=elemIdGestEq -- UID del capitolo di gestione equivalente
						and rbil.elem_det_comp_tipo_id=id_comp::integer --SIAC-7349 deve essere sulla compoenente idcomp_in
						and	 mov.movgest_id=rbil.movgest_id
						and  mov.movgest_tipo_id=movGestTipoId -- deve essere IMPEGNO
						and  mov.movgest_anno=anno_in::integer -- anno dell impegno = annoMovimento
						and  mov.bil_id=bilIdElemGestEq -- UID del bilancio in annoEsercizio
						and  ts.movgest_id=mov.movgest_id
						and  rstato.movgest_ts_id=ts.movgest_ts_id
						and  rstato.movgest_stato_id!=movGestStatoId -- Impegno non ANNULLATO
						and  rstato.movgest_stato_id!=movGestStatoIdProvvisorio -- Impegno non PROVVISORIO
					  and  tsdet.movgest_ts_id=ts.movgest_ts_id
						and  moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
						and  moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
						and   moddet.movgest_ts_det_importo<0 -- importo negativo
						and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
						and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
						and   mod.mod_id=rmodstato.mod_id
						and   atto.attoamm_id=mod.attoamm_id
						and   attostato.attoamm_id=atto.attoamm_id
						and   attostato.attoamm_stato_id=attoAmmStatoPId -- atto provvisorio
						and   tipom.mod_tipo_id=mod.mod_tipo_id
						and   tipom.mod_tipo_code <> 'ECONB'  -- SIAC-7349 non tengo conto di questa condizione
						-- date
						and rbil.data_cancellazione is null
						and rbil.validita_fine is null
						and mov.data_cancellazione is null
						and mov.validita_fine is null
						and ts.data_cancellazione is null
						and ts.validita_fine is null
						and rstato.data_cancellazione is null
						and rstato.validita_fine is null
						and tsdet.data_cancellazione is null
						and tsdet.validita_fine is null
						and moddet.data_cancellazione is null
						and moddet.validita_fine is null
						and mod.data_cancellazione is null
						and mod.validita_fine is null
						and rmodstato.data_cancellazione is null
						and rmodstato.validita_fine is null
						and attostato.data_cancellazione is null
						and attostato.validita_fine is null
						and atto.data_cancellazione is null
						and atto.validita_fine is null
						group by ts.movgest_ts_tipo_id
					  ) tb, siac_d_movgest_ts_tipo tipo
					  where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
					  order by tipo.movgest_ts_tipo_code desc
					  limit 1;
				-- 14.05.2020 Manuel - aggiunto parametro verifica_mod_prov
				if importoModifDelta is null or verifica_mod_prov is false then importoModifDelta:=0; end if;

		/*Aggiunta delle modifiche ECONB*/
				 -- anna_economie inizio
   				select tb.importo into importoModifINS
 				from
 				(
 					select coalesce(sum(moddet.movgest_ts_det_importo),0) importo , ts.movgest_ts_tipo_id
					from siac_r_movgest_bil_elem rbil, siac_t_movgest mov,siac_t_movgest_ts ts,
 			   	 	siac_r_movgest_ts_stato rstato,siac_t_movgest_ts_det tsdet,
				    siac_t_movgest_ts_det_mod moddet,
 			   	 	siac_t_modifica mod, siac_r_modifica_stato rmodstato,
				    siac_r_atto_amm_stato attostato, siac_t_atto_amm atto,
 			        siac_d_modifica_tipo tipom
				where rbil.elem_id=elemIdGestEq
				and rbil.elem_det_comp_tipo_id=id_comp::integer --SIAC-7349
				and	  mov.movgest_id=rbil.movgest_id
				and   mov.movgest_tipo_id=movgestTipoId -- tipo movimento impegno
 			   	and   mov.movgest_anno=anno_in::integer
 			   	and   mov.bil_id=bilancioId
				and   ts.movgest_id=mov.movgest_id
				and   rstato.movgest_ts_id=ts.movgest_ts_id
				and   rstato.movgest_stato_id!=movGestStatoId -- impegno non annullato
				and   tsdet.movgest_ts_id=ts.movgest_ts_id
				and   moddet.movgest_ts_det_id=tsdet.movgest_ts_det_id
				and   moddet.movgest_ts_det_tipo_id=tsdet.movgest_ts_det_tipo_id
				and   moddet.movgest_ts_det_importo<0 -- importo negativo
				and   rmodstato.mod_stato_r_id=moddet.mod_stato_r_id
				and   rmodstato.mod_stato_id=modStatoVId   -- V modifica in stato valido
				and   mod.mod_id=rmodstato.mod_id
				and   atto.attoamm_id=mod.attoamm_id
				and   attostato.attoamm_id=atto.attoamm_id
				and   attostato.attoamm_stato_id in (attoAmmStatoDId, attoAmmStatoPId) -- atto definitivo
 			   and   tipom.mod_tipo_id=mod.mod_tipo_id
 			   and   tipom.mod_tipo_code = 'ECONB'
				-- date
				and rbil.data_cancellazione is null
				and rbil.validita_fine is null
				and mov.data_cancellazione is null
				and mov.validita_fine is null
				and ts.data_cancellazione is null
				and ts.validita_fine is null
				and rstato.data_cancellazione is null
				and rstato.validita_fine is null
				and tsdet.data_cancellazione is null
				and tsdet.validita_fine is null
				and moddet.data_cancellazione is null
				and moddet.validita_fine is null
				and mod.data_cancellazione is null
				and mod.validita_fine is null
				and rmodstato.data_cancellazione is null
				and rmodstato.validita_fine is null
				and attostato.data_cancellazione is null
				and attostato.validita_fine is null
				and atto.data_cancellazione is null
				and atto.validita_fine is null
 			   group by ts.movgest_ts_tipo_id
 			 ) tb, siac_d_movgest_ts_tipo tipo
 			 where tipo.movgest_ts_tipo_id=tb.movgest_ts_tipo_id
 			 order by tipo.movgest_ts_tipo_code desc
 			 limit 1;

			 if importoModifINS is null then
			 	importoModifINS = 0;
			 end if;



		   end if;

    end if;

    importoAttuale:=importoAttuale+importoCurAttuale-(importoModifDelta);
  --aggiunta per ECONB
	importoAttuale:=importoAttuale+abs(importoModifINS);
 end loop;

 -- 10.08.2020 Sofia Jira SIAC-6865 - inizio
 -- impegni provvisori nati da aggiudiazione non decurtano la disp. a impegnare
 if  verifica_mod_prov=true then
   strMessaggio:='Calcolo impegnato competenza elem_id='||id_in
               ||'. Calcolo impegnato provvisorio per aggiudicazione per anno_in='||anno_in||'.';

   select tb.importo into importoCurAttAggiudicazione
   from
   (
  	select coalesce(sum(det.movgest_ts_det_importo),0)  importo, ts.movgest_ts_tipo_id
    from  siac_r_movgest_bil_elem rmov,
          siac_t_movgest mov,
      	  siac_t_movgest_ts ts,
      	  siac_r_movgest_ts_stato rs_stato,
          siac_t_movgest_ts_det det,
     	  siac_d_movgest_ts_det_tipo tipo_det
      where rmov.elem_id=elemIdGestEq
      and   rmov.elem_det_comp_tipo_id=id_comp::integer
      and 	mov.movgest_id=rmov.movgest_id
      and   mov.bil_id = bilIdElemGestEq
      and   mov.movgest_tipo_id=movGestTipoId
      and   mov.movgest_anno = anno_in::integer
      and   ts.movgest_id=mov.movgest_id
      and   rs_stato.movgest_ts_id=ts.movgest_ts_id
	  and   rs_stato.movgest_stato_id=movGestStatoPId
      and   det.movgest_ts_id=ts.movgest_ts_id
      and   tipo_det.movgest_ts_det_tipo_id=det.movgest_ts_det_tipo_id
      and   tipo_det.movgest_ts_det_tipo_id=movGestTsDetTipoId
      and   exists
      (
        select 1
        from siac_r_movgest_aggiudicazione ragg
        where   ragg.movgest_id_a=mov.movgest_id
        and     ragg.data_cancellazione is null
        and     ragg.validita_fine is null
      )
      and   rs_stato.validita_fine is null
	  and   rmov.data_cancellazione is null
      and   mov.data_cancellazione is null
      and   ts.data_cancellazione is null
      and   det.data_cancellazione is null
     group by ts.movgest_ts_tipo_id
    ) tb, siac_d_movgest_ts_tipo t
    where tb.movgest_ts_tipo_id=t.movgest_ts_tipo_id
    order by t.movgest_ts_tipo_code desc
    limit 1;
    if importoCurAttAggiudicazione is null then importoCurAttAggiudicazione:=0; end if;

    importoAttuale:=importoAttuale-importoCurAttAggiudicazione;
  end if;
  -- 10.08.2020 Sofia Jira SIAC-6865 - fine

end if;

annoCompetenza:=anno_in;
diCuiImpegnato:=importoAttuale;

return next;

exception
    when RAISE_EXCEPTION THEN
        RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
        return;
	when no_data_found then
	    RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
        return;
	when others  THEN
 		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
        return;
END;
$BODY$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

CREATE OR REPLACE FUNCTION fnc_siac_disponibilitadodicesimi 
(
  id_in integer,
  tipodisp_in varchar
)
RETURNS TABLE (
  codicerisultato integer,
  messaggiorisultato varchar,
  elemid integer,
  annocompetenza varchar,
  importodim numeric,
  importodpm numeric
) AS
$body$
DECLARE

-- constant
TIPO_CAP_UG   constant varchar:='CAP-UG';
CL_PROGRAMMA  constant varchar:='PROGRAMMA';

TIPO_DISP_DIM constant varchar:='DIM';
TIPO_DISP_DPM constant varchar:='DPM';
TIPO_DISP_ALL constant varchar:='ENTRAMBI';

-- stati impegni
MOVGEST_TS_STATO_A  constant varchar:='A'; --- ANNULLATO

-- stati ordinativi
STATO_ORD_A    constant varchar:='A'; -- ANNULLATO

-- importoAttuale ordinativi
ORD_TS_DET_TIPO_A  constant varchar:='A';

-- stato capitolo annullato
AN_STATO_CAP   constant varchar:='AN';

-- stato capitolo annullato
STA_TIPOIMP_CAP   constant varchar:='STA';

-- stato variazioni per delta-meno
VAR_STATO_G    constant varchar:='G'; -- GIUNTA
VAR_STATO_C    constant varchar:='C'; -- CONSIGLIO
VAR_STATO_B    constant varchar:='B'; -- BOZZA
VAR_STATO_P    constant varchar:='P'; -- PRE-DEFINITIVA


MOVGEST_TS_T_TIPO     constant varchar:='T';
MOVGEST_TS_DET_A_TIPO constant varchar:='A';


bilancioId           integer:=0;
tipoCapitolo         varchar:=null;
strMessaggio         varchar(1500):=null;
strMessaggioFinale         varchar(1500):=null;
annoBilancio         varchar(10):=null;

enteProprietarioId   integer:=null;
idTipoCapitolo       integer:=null;
classifProgrammaCode VARCHAR(200):=null;
programmaClassId     integer:=null;
programmaClassTipoId integer:=null;

nMese                integer :=null;
dataelaborazione     timestamp;
dataFineValClass     timestamp;
periodoId            integer:=null;
elemStatoANId        integer:=null;
elemDetTipoStaId     integer:=null;
elemVarDetTipoStaId  integer:=null;
movGestTsTipoTId     integer:=null;
movGestTsStatoAId    integer:=null;
movGestTsDetATipoId  integer:=null;
ordStatoAId          integer:=null;
ordTsDetTipoAId      integer:=null;

stanziamentoTot      numeric:=null;
deltaMenoVarTot      numeric:=null;
importoIAP           numeric:=null;
importoImpCompetenza numeric:=null;
importoPagatoTot     numeric:=null;
LIC                  numeric:=0;
IAP                  numeric:=0;
LIM                  numeric:=0;

-- 10.08.2020 Sofia Jira SIAC-6865
importo_agg_IAP      numeric:=0;

begin
    codicerisultato     :=0;
    messaggiorisultato  :=null;
    elemId              :=null;
    annocompetenza      :=null;
    importodim          :=null;
    importodpm          :=null;

    dataelaborazione    := now()::timestamp;


    strMessaggioFinale:='Calcolo disponibilita'' dodicesimi.';

	strMessaggio:='Controllo parametri tipo elaborazione='||tipoDisp_in||'.';
    if tipoDisp_in is null then
      raise exception ' Valore non ammesso.';
    end if;
    if tipoDisp_in not in (TIPO_DISP_DIM,TIPO_DISP_DPM,TIPO_DISP_ALL) then
   	  raise exception ' Valore non ammesso.';
    end if;

    strMessaggio:='Controllo parametri ricavati da elem_id.';
    if id_in  is null or id_in=0 then
    	raise exception ' Valore non ammesso.';
    end if;

    -- Leggo annoBilancio, bil_id e tipo capitolo
    select cap.bil_id, per.anno, tipcap.elem_tipo_code,
           cap.elem_tipo_id, cap.ente_proprietario_id,per.periodo_id
      into bilancioId, annoBilancio, tipoCapitolo, idTipoCapitolo, enteProprietarioId, periodoId
      from siac_t_bil_elem cap, siac_t_bil bila, siac_d_bil_elem_tipo tipcap, siac_t_periodo per
    where cap.elem_id=id_in
    and   bila.bil_id=cap.bil_id
    and   tipcap.elem_tipo_id=cap.elem_tipo_id
    and   per.periodo_id=bila.periodo_id
    and   cap.data_cancellazione is null
    and   cap.validita_fine is null;

    if tipoCapitolo is null then
	    RAISE  EXCEPTION ' Errore in lettura dati capitolo.';
    end if;

    -- controllo che id_in sia un capitolo di tipo CAP-UG
    if tipoCapitolo <> TIPO_CAP_UG then
        RAISE  EXCEPTION ' Capitolo non del tipo CAP-UG.';
    end if;

    strMessaggio:='Lettura identificativo capitolo stato='||AN_STATO_CAP||'.';
	select stato.elem_stato_id into elemStatoANId
    from siac_d_bil_elem_stato stato
    where stato.ente_proprietario_id=enteProprietarioId
    and   stato.elem_stato_code=AN_STATO_CAP;
    if elemStatoANId is null then
	    RAISE  EXCEPTION ' Errore in lettura.';
    end if;

    strMessaggio:='Lettura identificativo capitolo tipo importo='||STA_TIPOIMP_CAP||'.';
	select tipo.elem_det_tipo_id into elemDetTipoStaId
    from siac_d_bil_elem_det_tipo tipo
    where tipo.ente_proprietario_id=enteProprietarioId
    and   tipo.elem_det_tipo_code=STA_TIPOIMP_CAP;
    if elemDetTipoStaId is null then
	    RAISE  EXCEPTION ' Errore in lettura.';
    end if;

   strMessaggio:='Lettura identificativo dettaglio var capitolo tipo importo='||STA_TIPOIMP_CAP||'.';
   select bilElemDetVarTipo.elem_det_tipo_id into  elemVarDetTipoStaId
   from siac_d_bil_elem_det_tipo bilElemDetVarTipo
   where bilElemDetVarTipo.ente_proprietario_id=enteProprietarioId
   and   bilElemDetVarTipo.elem_det_tipo_code=STA_TIPOIMP_CAP;
   if elemVarDetTipoStaId is null then
	    RAISE  EXCEPTION ' Errore in lettura.';
   end if;

   strMessaggio:='Lettura identificativo movgest_ts_tipo='||MOVGEST_TS_T_TIPO||'.';
   select tstipo.movgest_ts_tipo_id into movGestTsTipoTId
   from siac_d_movgest_ts_tipo tstipo
   where tstipo.ente_proprietario_id=enteProprietarioId
   and   tstipo.movgest_ts_tipo_code=MOVGEST_TS_T_TIPO;
   if movGestTsTipoTId is null then
	    RAISE  EXCEPTION ' Errore in lettura.';
   end if;

   strMessaggio:='Lettura identificativo movgest_ts_stato='||MOVGEST_TS_STATO_A||'.';
   select movstato.movgest_stato_id into movGestTsStatoAId
   from siac_d_movgest_stato movstato
   where movstato.ente_proprietario_id=enteProprietarioId
   and   movstato.movgest_stato_code=MOVGEST_TS_STATO_A;
   if movGestTsStatoAId is null then
	    RAISE  EXCEPTION ' Errore in lettura.';
   end if;

   strMessaggio:='Lettura identificativo movgest_ts_det_tipo='||MOVGEST_TS_DET_A_TIPO||'.';
   select dettipo.movgest_ts_det_tipo_id into movGestTsDetATipoId
   from siac_d_movgest_ts_det_tipo dettipo
   where dettipo.ente_proprietario_id=enteProprietarioId
   and   dettipo.movgest_ts_det_tipo_code=MOVGEST_TS_DET_A_TIPO;
   if movGestTsDetATipoId is null then
	    RAISE  EXCEPTION ' Errore in lettura.';
   end if;

   strMessaggio:='Lettura identificativo ord_stato_code='||STATO_ORD_A||'.';
   select ordstato.ord_stato_id into ordStatoAId
   from siac_d_ordinativo_stato ordstato
   where ordstato.ente_proprietario_id=enteProprietarioId
   and   ordstato.ord_stato_code=STATO_ORD_A;

   select tipo.ord_ts_det_tipo_id into ordTsDetTipoAId
   from siac_d_ordinativo_ts_det_tipo tipo
   where tipo.ente_proprietario_id=enteProprietarioId
   and   tipo.ord_ts_det_tipo_code=ORD_TS_DET_TIPO_A;


   dataFineValClass    := (annoBilancio||'-12-31')::timestamp;

   strMessaggio:='Lettura dati classificatore='||CL_PROGRAMMA||'.';
   -- ricavare il programma collegato al id_in ( siac_t_class [PROGRAMMA])
   select k.classif_code, k.classif_id, k.classif_tipo_id
      into classifProgrammaCode, programmaClassId, programmaClassTipoId
   from siac_t_class k, siac_r_bil_elem_class l, siac_d_class_tipo r
   where l.elem_id = id_in
   and   k.classif_id = l.classif_id
   and   r.classif_tipo_id=k.classif_tipo_id
   and   r.classif_tipo_code=CL_PROGRAMMA
   and   r.ente_proprietario_id=l.ente_proprietario_id
   and   l.data_cancellazione is null
   and   l.validita_fine is null
   and   k.data_cancellazione is null
   and   date_trunc('DAY',dataElaborazione)>=date_trunc('DAY',k.validita_inizio)
   and   date_trunc('DAY',dataFineValClass)<=date_trunc('DAY',coalesce(k.validita_fine,dataFineValClass));

   if programmaClassId is null then
	    RAISE  EXCEPTION ' Errore in lettura.';
   end if;

   strMessaggio:='Lettura stanziamento totale competenza.';
   -- calcolo stanziamento competenza per programma
   /*
   select sum(det.elem_det_importo) into stanziamentoTot
   from siac_t_bil_elem e,siac_r_bil_elem_stato rstato, siac_r_bil_elem_class rc,
	    siac_t_bil_elem_det det
   where e.bil_id=bilancioId
    and   e.elem_tipo_id=idTipoCapitolo
	and   rc.elem_id=e.elem_id
	and   rc.classif_id=programmaClassId
	and   rstato.elem_id=e.elem_id
	and   rstato.elem_stato_id!=elemStatoANId
	and   det.elem_id=e.elem_id
	and   det.elem_det_tipo_id=elemDetTipoStaId
	and   det.periodo_id=periodoId
	and   rstato.data_cancellazione is null
	and   rstato.validita_fine is null
	and   e.data_cancellazione is null
	and   e.validita_fine is null
	and   rc.data_cancellazione is null
	and   rc.validita_fine is null
	and   det.data_cancellazione is null
	and   det.validita_fine is null;
 */

/* 11/01/2018 A.V. introdotta condizione su flagImpegnabile per escludere i non
impegnabili dal calcolo */

   select sum(det.elem_det_importo) into stanziamentoTot
   from siac_t_bil_elem e,siac_r_bil_elem_stato rstato, siac_r_bil_elem_class rc,
	    siac_t_bil_elem_det det
        , siac_t_attr att, siac_r_bil_elem_attr attr
   where e.bil_id=bilancioId
    and   e.elem_tipo_id=idTipoCapitolo
	and   rc.elem_id=e.elem_id
	and   rc.classif_id=programmaClassId
	and   rstato.elem_id=e.elem_id
	and   rstato.elem_stato_id!=elemStatoANId
	and   det.elem_id=e.elem_id
	and   det.elem_det_tipo_id=elemDetTipoStaId
	and   det.periodo_id=periodoId
	and   rstato.data_cancellazione is null
	and   rstato.validita_fine is null
	and   e.data_cancellazione is null
	and   e.validita_fine is null
	and   rc.data_cancellazione is null
	and   rc.validita_fine is null
	and   det.data_cancellazione is null
	and   det.validita_fine is null
    and   attr.elem_id=e.elem_id
    and   attr.attr_id=att.attr_id
    and   att.attr_code='FlagImpegnabile'
    and   attr."boolean"<>'N'
    and   attr.data_cancellazione is null
    and   attr.validita_fine is null;

   if stanziamentoTot is null then
     RAISE  EXCEPTION ' Errore in lettura.';
   end if;

   strMessaggio:='Lettura delta-meno totale competenza.';
   select coalesce(sum(abs(bilElemDetVar.elem_det_importo)),0) into deltaMenoVarTot
   from  siac_t_bil_elem e,siac_r_bil_elem_stato rstato,  siac_r_bil_elem_class rc,
         siac_t_variazione var, siac_r_variazione_stato statoVar, siac_d_variazione_stato tipoStatoVar,
         siac_t_bil_elem_det_var bilElemDetVar
   where e.bil_id=bilancioId
	and   e.elem_tipo_id=idTipoCapitolo
	and   rc.elem_id=e.elem_id
	and   rc.classif_id=programmaClassId
	and   rstato.elem_id=e.elem_id
	and   rstato.elem_stato_id!=elemStatoANId
	and   rstato.data_cancellazione is null
	and   rstato.validita_fine is null
	and   e.data_cancellazione is null
	and   e.validita_fine is null
	and   rc.data_cancellazione is null
	and   rc.validita_fine is null
	and   bilElemDetVar.elem_id=e.elem_id
	and   bilElemDetVar.periodo_id=periodoId
	and   bilElemDetVar.elem_det_importo<0
	and   bilElemDetVar.elem_det_tipo_id=elemVarDetTipoStaId
	and   bilElemDetVar.variazione_stato_id=statoVar.variazione_stato_id
	and   tipoStatoVar.variazione_stato_tipo_id=statoVar.variazione_stato_tipo_id
	and   tipoStatoVar.variazione_stato_tipo_code in (VAR_STATO_G,VAR_STATO_C,VAR_STATO_P,VAR_STATO_B)
	and   var.variazione_id=statoVar.variazione_id
	and   var.bil_id=bilancioId
  	and   bilElemDetVar.data_cancellazione is null
	and   bilElemDetVar.validita_fine is null
    and   statoVar.data_cancellazione is null
    and   statoVar.validita_fine is null
    and   var.data_cancellazione is null
    and  var.validita_fine is null;

   if deltaMenoVarTot is null then
     RAISE  EXCEPTION ' Errore in lettura delta-meno.';
   end if;

   strMessaggio:='Lettura importo IAP.';
   select coalesce(sum(tsdet.movgest_ts_det_importo),0) into importoIAP
   from siac_t_bil_elem e, siac_r_bil_elem_stato rstato, siac_r_bil_elem_class rc,
        siac_r_movgest_bil_elem rmov, siac_t_movgest mov, siac_t_movgest_ts ts,
    	siac_r_movgest_ts_stato rmovstato,
	    siac_r_movgest_ts_atto_amm rmovatto, siac_t_atto_amm attoamm,
	    siac_t_movgest_ts_det tsdet
   where e.bil_id=bilancioId
	and  e.elem_tipo_id=idTipoCapitolo
	and  rc.elem_id=e.elem_id
	and  rc.classif_id=programmaClassId
	and  rstato.elem_id=e.elem_id
	and  rstato.elem_stato_id!=elemStatoANId
	and  rmov.elem_id=e.elem_id
	and  mov.movgest_id=rmov.movgest_id
	and  mov.movgest_anno::integer=annoBilancio::integer
	and  ts.movgest_id=mov.movgest_id
	and  ts.movgest_ts_tipo_id=movGestTsTipoTId
	and  rmovstato.movgest_ts_id=ts.movgest_ts_id
	and  rmovstato.movgest_stato_id!=movGestTsStatoAId
	and  rmovatto.movgest_ts_id=ts.movgest_ts_id
	and  attoamm.attoamm_id=rmovatto.attoamm_id
	and  attoamm.attoamm_anno::integer<annoBilancio::integer
	and  tsdet.movgest_ts_id=ts.movgest_ts_id
	and  tsdet.movgest_ts_det_tipo_id=movGestTsDetATipoId
	and  rstato.data_cancellazione is null
	and  rstato.validita_fine is null
	and  e.data_cancellazione is null
	and  e.validita_fine is null
	and  rc.data_cancellazione is null
	and  rc.validita_fine is null
	and  mov.data_cancellazione is null
	and  mov.validita_fine is null
	and  ts.data_cancellazione is null
	and  ts.validita_fine is null
	and  rmov.data_cancellazione is null
	and  rmov.validita_fine is null
	and  rmovstato.data_cancellazione is null
	and  rmovstato.validita_fine is null
	and  rmovatto.data_cancellazione is null
	and  rmovatto.validita_fine is null
	and  attoamm.data_cancellazione is null
	and  attoamm.validita_fine is null
	and  tsdet.data_cancellazione is null
	and  tsdet.validita_fine is null;

    if importoIAP is null then
	    RAISE  EXCEPTION ' Errore in lettura.';
    end if;
    raise notice 'imporoIAP =%',importoIAP;

  -- 07.08.2020 Sofia SIAC-6865 - inizio
  -- calcolo di impegni validi in annoBilancio
  -- collegati per aggiudicazione ad impegni validi in annoBilancio
  -- di competenza con annoProvvidemento<annoBilancio
  -- questa cifra da sommare a importoIAP

  strMessaggio:='Lettura importo IAP - quota di aggiudicazioni anno prec.';
  select coalesce(sum(tsdet_agg.movgest_ts_det_importo),0) into importo_agg_IAP
  from siac_t_bil_elem e, siac_r_bil_elem_stato rstato, siac_r_bil_elem_class rc,
       siac_r_movgest_bil_elem rmov, siac_t_movgest mov, siac_t_movgest_ts ts,
       siac_r_movgest_ts_stato rmovstato,
	   siac_r_movgest_ts_atto_amm rmovatto, siac_t_atto_amm attoamm,
       siac_r_movgest_aggiudicazione ragg, siac_t_movgest mov_agg,
       siac_t_movgest_ts ts_agg,siac_r_movgest_ts_stato rs_agg,
	   siac_t_movgest_ts_det tsdet_agg
  where e.bil_id=bilancioId
  and  e.elem_tipo_id=idTipoCapitolo
  and  rc.elem_id=e.elem_id
  and  rc.classif_id=programmaClassId
  and  rstato.elem_id=e.elem_id
  and  rstato.elem_stato_id!=elemStatoANId
  and  rmov.elem_id=e.elem_id
  and  mov.movgest_id=rmov.movgest_id
  and  mov.movgest_anno::integer=annoBilancio::integer
  and  ts.movgest_id=mov.movgest_id
  and  ts.movgest_ts_tipo_id=movGestTsTipoTId
  and  rmovstato.movgest_ts_id=ts.movgest_ts_id
  and  rmovstato.movgest_stato_id!=movGestTsStatoAId
  and  rmovatto.movgest_ts_id=ts.movgest_ts_id
  and  attoamm.attoamm_id=rmovatto.attoamm_id
  and  attoamm.attoamm_anno::integer<annoBilancio::integer
  and  ragg.movgest_id_da=mov.movgest_id
  and  mov_agg.movgest_id=ragg.movgest_id_a
  and  mov_agg.bil_id=mov.bil_id
  and  ts_agg.movgest_id=mov_agg.movgest_id
  and  ts_agg.movgest_ts_tipo_id=movGestTsTipoTId
  and  rs_agg.movgest_ts_id=ts_agg.movgest_ts_id
  and  rs_agg.movgest_stato_id!=movGestTsStatoAId
  and  tsdet_agg.movgest_ts_id=ts_agg.movgest_ts_id
  and  tsdet_agg.movgest_ts_det_tipo_id=movGestTsDetATipoId
  and  rstato.data_cancellazione is null
  and  rstato.validita_fine is null
  and  e.data_cancellazione is null
  and  e.validita_fine is null
  and  rc.data_cancellazione is null
  and  rc.validita_fine is null
  and  mov.data_cancellazione is null
  and  mov.validita_fine is null
  and  ts.data_cancellazione is null
  and  ts.validita_fine is null
  and  rmov.data_cancellazione is null
  and  rmov.validita_fine is null
  and  rmovstato.data_cancellazione is null
  and  rmovstato.validita_fine is null
  and  rmovatto.data_cancellazione is null
  and  rmovatto.validita_fine is null
  and  attoamm.data_cancellazione is null
  and  attoamm.validita_fine is null
  and  ragg.data_cancellazione is null
  and  ragg.validita_fine is null
  and  mov_agg.data_cancellazione is null
  and  mov_agg.validita_fine is null
  and  ts_agg.data_cancellazione is null
  and  ts_agg.validita_fine is null
  and  rs_agg.data_cancellazione is null
  and  rs_agg.validita_fine is null
  and  tsdet_agg.data_cancellazione is null
  and  tsdet_agg.validita_fine is null;
   raise notice 'importo_agg_IAP =%',importo_agg_IAP;
  if COALESCE(importo_agg_IAP,0)!=0 then importoIAP:=importoIAP+importo_agg_IAP; end if;
   raise notice 'imporoIAP =%',importoIAP;
  -- 07.08.2020 Sofia SIAC-6865 - fine

  -- per calcolo DIM o ENTRAMBI allora calcolo impegnato competenza
  if tipoDisp_in in ( TIPO_DISP_ALL,TIPO_DISP_DIM) then
   strMessaggio:='Lettura importo impegnato competenza.';
   select coalesce(sum(tsdet.movgest_ts_det_importo),0) into importoImpCompetenza
   from siac_t_bil_elem e, siac_r_bil_elem_stato rstato, siac_r_bil_elem_class rc,
        siac_r_movgest_bil_elem rmov, siac_t_movgest mov, siac_t_movgest_ts ts,
    	siac_r_movgest_ts_stato rmovstato,
	    siac_r_movgest_ts_atto_amm rmovatto, siac_t_atto_amm attoamm,
	    siac_t_movgest_ts_det tsdet
   where e.bil_id=bilancioId
	and  e.elem_tipo_id=idTipoCapitolo
	and  rc.elem_id=e.elem_id
	and  rc.classif_id=programmaClassId
	and  rstato.elem_id=e.elem_id
	and  rstato.elem_stato_id!=elemStatoANId
	and  rmov.elem_id=e.elem_id
	and  mov.movgest_id=rmov.movgest_id
	and  mov.movgest_anno::integer=annoBilancio::integer
	and  ts.movgest_id=mov.movgest_id
	and  ts.movgest_ts_tipo_id=movGestTsTipoTId
	and  rmovstato.movgest_ts_id=ts.movgest_ts_id
	and  rmovstato.movgest_stato_id!=movGestTsStatoAId
	and  rmovatto.movgest_ts_id=ts.movgest_ts_id
	and  attoamm.attoamm_id=rmovatto.attoamm_id
	and  attoamm.attoamm_anno::integer=annoBilancio::integer
	and  tsdet.movgest_ts_id=ts.movgest_ts_id
	and  tsdet.movgest_ts_det_tipo_id=movGestTsDetATipoId
	and  rstato.data_cancellazione is null
	and  rstato.validita_fine is null
	and  e.data_cancellazione is null
	and  e.validita_fine is null
	and  rc.data_cancellazione is null
	and  rc.validita_fine is null
	and  mov.data_cancellazione is null
	and  mov.validita_fine is null
	and  ts.data_cancellazione is null
	and  ts.validita_fine is null
	and  rmov.data_cancellazione is null
	and  rmov.validita_fine is null
	and  rmovstato.data_cancellazione is null
	and  rmovstato.validita_fine is null
	and  rmovatto.data_cancellazione is null
	and  rmovatto.validita_fine is null
	and  attoamm.data_cancellazione is null
	and  attoamm.validita_fine is null
	and  tsdet.data_cancellazione is null
	and  tsdet.validita_fine is null;

    if importoImpCompetenza is null then
	    RAISE  EXCEPTION ' Errore in lettura.';
    end if;

   end if;

   -- per calcolo DPM o ENTRAMBI allora calcolo pagato competenza
   if  tipoDisp_in in ( TIPO_DISP_ALL,TIPO_DISP_DPM) then
    strMessaggio:='Lettura importo pagato competenza.';
	select coalesce(sum(tsdet.ord_ts_det_importo),0) into importoPagatoTot
	from siac_t_bil_elem e,  siac_r_bil_elem_class rc,siac_r_movgest_bil_elem rmov,
         siac_t_movgest mov, siac_t_movgest_ts ts,
    	 siac_r_movgest_ts_atto_amm rmovatto, siac_t_atto_amm attoamm,
	     siac_r_liquidazione_movgest rliq,
    	 siac_r_liquidazione_ord rord, siac_t_ordinativo_ts ordts, siac_t_ordinativo ord,
	     siac_r_ordinativo_stato rordstato,
    	 siac_t_ordinativo_ts_det tsdet
	where e.bil_id=bilancioId
	and   e.elem_tipo_id=idTipoCapitolo
	and   rc.elem_id=e.elem_id
	and   rc.classif_id=programmaClassId
	and   rmov.elem_id=e.elem_id
	and   mov.movgest_id=rmov.movgest_id
	and   ts.movgest_id=mov.movgest_id
	and   mov.movgest_anno::integer=annoBilancio::integer
	and   rmovatto.movgest_ts_id=ts.movgest_ts_id
	and   attoamm.attoamm_id=rmovatto.attoamm_id
	and   attoamm.attoamm_anno::integer=annoBilancio::integer
	and   rliq.movgest_ts_id=ts.movgest_ts_id
	and   rord.liq_id=rliq.liq_id
	and   ordts.ord_ts_id=rord.sord_id
	and   ord.ord_id=ordts.ord_id
	and   rordstato.ord_id=ord.ord_id
	and   rordstato.ord_stato_id!=ordStatoAId
	and   tsdet.ord_ts_id=ordts.ord_ts_id
	and   tsdet.ord_ts_det_tipo_id=ordTsDetTipoAId
	and   e.data_cancellazione is null
	and   e.validita_fine is null
	and   rc.data_cancellazione is null
	and   rc.validita_fine is null
	and   mov.data_cancellazione is null
	and   mov.validita_fine is null
	and   ts.data_cancellazione is null
	and   ts.validita_fine is null
	and   rmov.data_cancellazione is null
	and   rmov.validita_fine is null
	and   rord.data_cancellazione is null
	and   rord.validita_fine is null
	and   rliq.data_cancellazione is null
	and   rliq.validita_fine is null
	and   ordts.data_cancellazione is null
	and   ordts.validita_fine is null
	and   ord.data_cancellazione is null
	and   ord.validita_fine is null
	and   rordstato.data_cancellazione is null
	and   rordstato.validita_fine is null
	and   tsdet.data_cancellazione is null
	and   tsdet.validita_fine is null
	and   rmovatto.data_cancellazione is null
	and   rmovatto.validita_fine is null
	and   attoamm.data_cancellazione is null
	and   attoamm.validita_fine is null;

    if importoPagatoTot is null then
    	RAISE  EXCEPTION ' Errore in lettura.';
    end if;
   end if;


   LIC:=stanziamentoTot-deltaMenoVarTot;
   IAP:=importoIAP;
   -- ricava il mese dal timestamp attuale
   nMese:=date_part('month',dataelaborazione);
   LIM:=round((LIC-IAP)/12,2);

   raise notice 'LIC=%',LIC;
   raise notice 'IAP=%',IAP;
   raise notice 'nMese=%',nMese;
   raise notice 'LIM=%',LIM;


   if tipoDisp_in = TIPO_DISP_ALL then
       -- calcolo DIM + calcolo DPM
       importodim := (LIM*nMEse) - importoImpCompetenza;
       importodpm := (LIM*nMEse) - importoPagatoTot;
   elsif tipoDisp_in = TIPO_DISP_DIM then
        -- calcolo DIM
        importodim := (LIM*nMEse) - importoImpCompetenza;
   else
           -- calcolo DPM
       importodpm := (LIM*nMEse) - importoPagatoTot;
   end if;

   raise notice 'importodim=%',importodim;
   raise notice 'importodpm=%',importodpm;

   -- setta gli altri campi di ritorno
   codicerisultato    := 0;
   messaggiorisultato := strMessaggioFinale||'Risultato OK.';
   elemid             := id_in;
   annocompetenza     := annoBilancio;

   return next;

exception
    when RAISE_EXCEPTION THEN
        messaggioRisultato:=strMessaggioFinale||strMessaggio||' ERRORE :'||' '||substring(upper(SQLERRM) from 1 for 1500) ;
        RAISE notice '%',messaggioRisultato;
        codiceRisultato:=-1;
        return;
    when no_data_found then
        messaggioRisultato:=strMessaggioFinale||strMessaggio||' Nessun elemento trovato.' ;
        RAISE notice '%',messaggioRisultato;
        codiceRisultato:=-1;
        return;
    when others  THEN
        messaggioRisultato:=strMessaggioFinale||strMessaggio||' Errore DB '||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 1050) ;
        RAISE notice '%',messaggioRisultato;
        codiceRisultato:=-1;
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

CREATE OR REPLACE FUNCTION fnc_siac_dwh_impegno 
(
  p_anno_bilancio varchar,
  p_ente_proprietario_id integer,
  p_data timestamp
)
RETURNS TABLE (
  esito varchar
) AS
$body$
declare
v_user_table varchar;
params varchar;

begin

select fnc_siac_random_user()
into	v_user_table;

IF p_data IS NULL THEN
   IF p_anno_bilancio::integer < to_char(now(),'YYYY')::integer THEN
      p_data = to_timestamp('31/12/'||p_anno_bilancio, 'dd/mm/yyyy');
   ELSE
      p_data := now();
   END IF;
END IF;

params := p_anno_bilancio||' - '||p_ente_proprietario_id::varchar||' - '||p_data::varchar;


insert into
siac_dwh_log_elaborazioni (
ente_proprietario_id,
fnc_name ,
fnc_parameters ,
fnc_elaborazione_inizio ,
fnc_user
)
values (
p_ente_proprietario_id,
'fnc_siac_dwh_impegno',
params,
clock_timestamp(),
v_user_table
);



delete from siac_dwh_impegno where
ente_proprietario_id=p_ente_proprietario_id
AND   bil_anno = p_anno_bilancio;
delete from siac_dwh_subimpegno where
ente_proprietario_id=p_ente_proprietario_id
AND   bil_anno = p_anno_bilancio;

INSERT INTO
  siac.siac_dwh_impegno
(
  ente_proprietario_id,  ente_denominazione,  bil_anno,  cod_fase_operativa,  desc_fase_operativa,
  anno_impegno,  num_impegno,  desc_impegno,  cod_impegno,  cod_stato_impegno,  desc_stato_impegno,
  data_scadenza,  parere_finanziario,  cod_capitolo,  cod_articolo,  cod_ueb,  desc_capitolo,  desc_articolo,
  soggetto_id, cod_soggetto, desc_soggetto,  cf_soggetto,  cf_estero_soggetto, p_iva_soggetto,  cod_classe_soggetto,  desc_classe_soggetto,
  cod_tipo_impegno,  desc_tipo_impegno,   cod_spesa_ricorrente,  desc_spesa_ricorrente,  cod_perimetro_sanita_spesa,  desc_perimetro_sanita_spesa,
  cod_transazione_ue_spesa,  desc_transazione_ue_spesa,  cod_politiche_regionali_unit,  desc_politiche_regionali_unit,
  cod_pdc_finanziario_i,  desc_pdc_finanziario_i,  cod_pdc_finanziario_ii,  desc_pdc_finanziario_ii,
  cod_pdc_finanziario_iii,  desc_pdc_finanziario_iii,  cod_pdc_finanziario_iv,  desc_pdc_finanziario_iv,
  cod_pdc_finanziario_v,  desc_pdc_finanziario_v,  cod_pdc_economico_i,  desc_pdc_economico_i,
  cod_pdc_economico_ii,  desc_pdc_economico_ii,  cod_pdc_economico_iii,  desc_pdc_economico_iii,
  cod_pdc_economico_iv,  desc_pdc_economico_iv,  cod_pdc_economico_v,  desc_pdc_economico_v,
  cod_cofog_divisione,  desc_cofog_divisione,  cod_cofog_gruppo,  desc_cofog_gruppo,
  classificatore_1,  classificatore_1_valore,  classificatore_1_desc_valore,
  classificatore_2,  classificatore_2_valore,  classificatore_2_desc_valore,
  classificatore_3,  classificatore_3_valore,  classificatore_3_desc_valore,
  classificatore_4,  classificatore_4_valore,  classificatore_4_desc_valore,
  classificatore_5,  classificatore_5_valore,  classificatore_5_desc_valore,
  annocapitoloorigine,  numcapitoloorigine,  annoorigineplur, numarticoloorigine,  annoriaccertato,  numriaccertato,  numorigineplur,
  flagdariaccertamento,
  flagdareanno,-- 19.02.2020 Sofia jira siac-7292
  anno_atto_amministrativo,  num_atto_amministrativo,  oggetto_atto_amministrativo,  note_atto_amministrativo,
  cod_tipo_atto_amministrativo, desc_tipo_atto_amministrativo, desc_stato_atto_amministrativo,
  importo_iniziale,  importo_attuale,  importo_utilizzabile,
  note,  anno_finanziamento,  cig,  cup,  num_ueb_origine,  validato,
  num_accertamento_finanziamento,  importo_liquidato,  importo_quietanziato,  importo_emesso,
  --data_elaborazione,
  flagcassaeconomale,  data_inizio_val_stato_imp,  data_inizio_val_imp,
  data_creazione_imp,  data_modifica_imp,
  cod_cdc_atto_amministrativo,  desc_cdc_atto_amministrativo,
  cod_cdr_atto_amministrativo,  desc_cdr_atto_amministrativo,
  cod_programma, desc_programma,
  flagPrenotazione, flagPrenotazioneLiquidabile, flagFrazionabile,
  cod_siope_tipo_debito, desc_siope_tipo_debito, desc_siope_tipo_debito_bnkit,
  cod_siope_assenza_motivazione, desc_siope_assenza_motivazione, desc_siope_assenza_motiv_bnkit,
  flag_attiva_gsa, -- 28.05.2018 Sofia siac-6202
  -- 23.10.2018 Sofia siac-6336
  stato_programma,
  versione_cronop,
  desc_cronop,
  anno_cronop,
  -- SIAC-7541 23.04.2020 Sofia
  cod_cdr_struttura_comp,
  desc_cdr_struttura_comp,
  cod_cdc_struttura_comp,
  desc_cdc_struttura_comp,
  -- SIAC-7593 Sofia 06.05.2020 - INIZIO
  comp_tipo_code,
  comp_tipo_desc,
  comp_tipo_macro_code,
  comp_tipo_macro_desc,
  comp_tipo_sotto_tipo_code,
  comp_tipo_sotto_tipo_desc,
  comp_tipo_ambito_code,
  comp_tipo_ambito_desc,
  comp_tipo_fonte_code,
  comp_tipo_fonte_desc,
  comp_tipo_fase_code ,
  comp_tipo_fase_desc,
  comp_tipo_def_code,
  comp_tipo_def_desc ,
  comp_tipo_gest_aut,
  comp_tipo_anno,
  -- SIAC-7593 Sofia 06.05.2020 - FINE
  -- SIAC-6865 Sofia 04.08.2020 - aggiudicazioni
  annoprenotazioneorigine,
  anno_impegno_aggiudicazione,
  num_impegno_aggiudicazione,
  num_modif_aggiudicazione
  )
select
xx.ente_proprietario_id, xx.ente_denominazione, xx.anno,xx.fase_operativa_code, xx.fase_operativa_desc ,
xx.movgest_anno, xx.movgest_numero, xx.movgest_desc, xx.movgest_ts_code, --xx.movgest_ts_desc,
xx.movgest_stato_code, xx.movgest_stato_desc, xx.movgest_ts_scadenza_data,
case when xx.parere_finanziario=false then 'F' else 'S' end parere_finanziario
,-- xx.movgest_id, xx.movgest_ts_id, xx.movgest_ts_tipo_code,
xx.elem_code, xx.elem_code2, xx.elem_code3, xx.elem_desc, xx.elem_desc2, --xx.bil_id,
xx.soggetto_id, xx.soggetto_code, xx.soggetto_desc, xx.codice_fiscale,xx.codice_fiscale_estero, xx.partita_iva, xx.soggetto_classe_code, xx.soggetto_classe_desc,
xx.tipoimpegno_classif_code,xx.tipoimpegno_classif_desc,xx.ricorrentespesa_classif_code,xx.ricorrentespesa_classif_desc,
xx.persaspesa_classif_code,xx.persaspesa_classif_desc, xx.truespesa_classif_code, xx.truespesa_classif_desc, xx.polregunitarie_classif_code,xx.polregunitarie_classif_desc,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_I else xx.pdc4_codice_pdc_finanziario_I end codice_pdc_finanziario_II,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_I else xx.pdc4_descrizione_pdc_finanziario_I end descrizione_pdc_finanziario_I,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_II else xx.pdc4_codice_pdc_finanziario_II end codice_pdc_finanziario_II,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_II else xx.pdc4_descrizione_pdc_finanziario_II end descrizione_pdc_finanziario_II,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_III else xx.pdc4_codice_pdc_finanziario_III end codice_pdc_finanziario_III,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_III else xx.pdc4_descrizione_pdc_finanziario_III end descrizione_pdc_finanziario_III,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_IV else xx.pdc4_codice_pdc_finanziario_IV end codice_pdc_finanziario_IV  ,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_IV else xx.pdc4_descrizione_pdc_finanziario_IV end descrizione_pdc_finanziario_IV,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_V end codice_pdc_finanziario_V  ,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_V end descrizione_pdc_finanziario_V,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_I else xx.pce4_codice_pdc_economico_I end codice_pdc_economico_I,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_I else xx.pce4_descrizione_pdc_economico_I end descrizione_pdc_economico_I,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_II else xx.pce4_codice_pdc_economico_II end codice_pdc_economico_II,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_II else xx.pce4_descrizione_pdc_economico_II end descrizione_pdc_economico_II,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_III else xx.pce4_codice_pdc_economico_III end codice_pdc_economico_III,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_III else xx.pce4_descrizione_pdc_economico_III end descrizione_pdc_economico_III,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_IV else xx.pce4_codice_pdc_economico_IV end codice_pdc_economico_IV  ,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_IV else xx.pce4_descrizione_pdc_economico_IV end descrizione_pdc_economico_IV,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_V end codice_pdc_economico_V  ,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_V end descrizione_pdc_economico_V,
xx.codice_cofog_divisione, xx.descrizione_cofog_divisione,xx.codice_cofog_gruppo,xx.descrizione_cofog_gruppo,
xx.cla11_classif_tipo_desc,xx.cla11_classif_code,xx.cla11_classif_desc,
xx.cla12_classif_tipo_desc,xx.cla12_classif_code,xx.cla12_classif_desc,
xx.cla13_classif_tipo_desc,xx.cla13_classif_code,xx.cla13_classif_desc,
xx.cla14_classif_tipo_desc,xx.cla14_classif_code,xx.cla14_classif_desc,
xx.cla15_classif_tipo_desc,xx.cla15_classif_code,xx.cla15_classif_desc,
xx.annoCapitoloOrigine,xx.numeroCapitoloOrigine,xx.annoOriginePlur,xx.numeroArticoloOrigine,xx.annoRiaccertato,xx.numeroRiaccertato,
xx.numeroOriginePlur, xx.flagDaRiaccertamento,
xx.flagDaReanno, -- 19.02.2020 Sofia jira siac-7292
xx.attoamm_anno, xx.attoamm_numero, xx.attoamm_oggetto, xx.attoamm_note,
xx.attoamm_tipo_code, xx.attoamm_tipo_desc, xx.attoamm_stato_desc,
xx.importo_iniziale, xx.importo_attuale, xx.importo_utilizzabile,
xx.NOTE_MOVGEST,  xx.annoFinanziamento, xx.cig,xx.cup, xx.numeroUEBOrigine,  xx.validato,
--xx.attoamm_id,
xx.numeroAccFinanziamento,  xx.importo_liquidato,  xx.importo_quietanziato, xx.importo_emesso,
xx.flagCassaEconomale,
xx.data_inizio_val_stato_subimp, xx.data_inizio_val_imp,
xx.data_creazione_imp, xx.data_modifica_imp,
case when xx.cdc_cdc_code::varchar is not null then  xx.cdc_cdc_code::varchar else xx.cdr_cdc_code::varchar end cdc_code,
case when xx.cdc_cdc_code::varchar is not null then  xx.cdc_cdc_desc::varchar else xx.cdr_cdc_desc::varchar end cdc_desc,
case when xx.cdc_cdc_code::varchar is not null then  xx.cdc_cdr_code::varchar else xx.cdr_cdr_code::varchar end cdr_code,
case when xx.cdc_cdc_code::varchar is not null then  xx.cdc_cdr_desc::varchar else xx.cdr_cdr_desc::varchar end cdr_desc,
xx.programma_code, xx.programma_desc,
xx.flagPrenotazione, xx.flagPrenotazioneLiquidabile, xx.flagFrazionabile,
xx.siope_tipo_debito_code, xx.siope_tipo_debito_desc, xx.siope_tipo_debito_desc_bnkit,
xx.siope_assenza_motivazione_code, xx.siope_assenza_motivazione_desc, xx.siope_assenza_motivazione_desc_bnkit,
xx.flag_attiva_gsa, -- 28.05.2018 Sofia siac-6102
/*xx.data_inizio_val_stato_subimp, xx.data_inizio_val_subimp,
xx.data_creazione_subimp, xx.data_modifica_subimp,*/
-- 23.10.2018 Sofia SIAC-6336
xx.programma_stato,
xx.versione_cronop,
xx.desc_cronop,
xx.anno_cronop,
-- SIAC-7541 23.04.2020 Sofia
xx.cod_cdr_struttura_comp,
xx.desc_cdr_struttura_comp,
xx.cod_cdc_struttura_comp,
xx.desc_cdc_struttura_comp,
-- SIAC-7593 Sofia 06.05.2020 - INIZIO
xx.comp_tipo_code,
xx.comp_tipo_desc,
xx.comp_tipo_macro_code,
xx.comp_tipo_macro_desc,
xx.comp_tipo_sotto_tipo_code,
xx.comp_tipo_sotto_tipo_desc,
xx.comp_tipo_ambito_code,
xx.comp_tipo_ambito_desc,
xx.comp_tipo_fonte_code,
xx.comp_tipo_fonte_desc,
xx.comp_tipo_fase_code ,
xx.comp_tipo_fase_desc,
xx.comp_tipo_def_code,
xx.comp_tipo_def_desc ,
xx.comp_tipo_gest_aut,
xx.comp_tipo_anno,
-- SIAC-7593 Sofia 06.05.2020 - FINE,
-- SIAC-6865 Sofia 04.08.2020 - aggiudicazioni
xx.annoprenotazioneorigine,
xx.anno_impegno_aggiudicazione,
xx.num_impegno_aggiudicazione,
xx.num_modif_aggiudicazione
 from (
with imp as (
SELECT
e.ente_proprietario_id, e.ente_denominazione, d.anno,
       b.movgest_anno, b.movgest_numero, b.movgest_desc, a.movgest_ts_code, a.movgest_ts_desc,
       i.movgest_stato_code, i.movgest_stato_desc,
       a.movgest_ts_scadenza_data, b.parere_finanziario, b.movgest_id, a.movgest_ts_id,
       g.movgest_ts_tipo_code,    c.bil_id,
       h.validita_inizio as data_inizio_val_stato_subimp,
       a.data_creazione as data_creazione_subimp,
       a.validita_inizio as  data_inizio_val_subimp,
       a.data_modifica as data_modifica_subimp,
       b.data_creazione as data_creazione_imp,
       b.validita_inizio as data_inizio_val_imp,
       b.data_modifica as data_modifica_imp,
       m.fase_operativa_code, m.fase_operativa_desc,
       n.siope_tipo_debito_code, n.siope_tipo_debito_desc, n.siope_tipo_debito_desc_bnkit,
       o.siope_assenza_motivazione_code, o.siope_assenza_motivazione_desc, o.siope_assenza_motivazione_desc_bnkit
FROM
siac_t_movgest_ts a
left join siac_d_siope_tipo_debito n on n.siope_tipo_debito_id = a.siope_tipo_debito_id
                                     and n.data_cancellazione is null
                                     and n.validita_fine is null
left join siac_d_siope_assenza_motivazione o on o.siope_assenza_motivazione_id = a.siope_assenza_motivazione_id
                                             and o.data_cancellazione is null
                                             and o.validita_fine is null
, siac_t_movgest b
, siac_t_bil c
, siac_t_periodo d
, siac_t_ente_proprietario e
, siac_d_movgest_tipo f
, siac_d_movgest_ts_tipo g
, siac_r_movgest_ts_stato h
, siac_d_movgest_stato i,
siac_r_bil_fase_operativa l, siac_d_fase_operativa m
where a.movgest_id=  b.movgest_id and
 b.bil_id = c.bil_id and
 d.periodo_id = c.periodo_id and
 e.ente_proprietario_id = b.ente_proprietario_id   and
 b.movgest_tipo_id = f.movgest_tipo_id and
 a.movgest_ts_tipo_id = g.movgest_ts_tipo_id      and
 h.movgest_ts_id = a.movgest_ts_id   and
 h.movgest_stato_id = i.movgest_stato_id
and e.ente_proprietario_id = p_ente_proprietario_id
AND d.anno = p_anno_bilancio
AND f.movgest_tipo_code = 'I'
--and b.movgest_anno::integer in (2021,2022)
--and b.movgest_numero::integer between 2550 and 3000
-- 22.11.2018 Sofia jira SIAC-6548
-- AND p_data BETWEEN h.validita_inizio AND COALESCE(h.validita_fine, p_data)
and l.bil_id=c.bil_id
and m.fase_operativa_id=l.fase_operativa_id
--AND p_data BETWEEN l.validita_inizio AND COALESCE(l.validita_fine, p_data)
--and  b.movgest_anno::integer=2020
--and  b.movgest_numero::integer <=100
--and  exists ( select 1 from siac_r_movgest_aggiudicazione r where r.movgest_id_a=a.movgest_id )
AND a.data_cancellazione IS NULL
AND b.data_cancellazione IS NULL
AND c.data_cancellazione IS NULL
AND d.data_cancellazione IS NULL
AND e.data_cancellazione IS NULL
AND f.data_cancellazione IS NULL
AND g.data_cancellazione IS NULL
AND h.data_cancellazione IS NULL
AND i.data_cancellazione IS NULL
AND a.validita_fine IS NULL
AND b.validita_fine IS NULL
AND c.validita_fine IS NULL
AND d.validita_fine IS NULL
AND e.validita_fine IS NULL
AND f.validita_fine IS NULL
AND g.validita_fine IS NULL
AND h.validita_fine IS NULL
AND i.validita_fine IS NULL
)
,
-- SIAC-7593 Sofia 06.05.2020
cap as
(
with
-- SIAC-7593 Sofia 06.05.2020
cap_elem as
(
select
      l.movgest_id,m.elem_code, m.elem_code2, m.elem_code3, m.elem_desc, m.elem_desc2,
      l.elem_det_comp_tipo_id -- SIAC-7593 Sofia 06.05.2020
From siac_r_movgest_bil_elem l, siac_t_bil_elem m
where l.elem_id=m.elem_id
and l.ente_proprietario_id=p_ente_proprietario_id
--AND p_data BETWEEN l.validita_inizio AND COALESCE(l.validita_fine, p_data)
AND l.data_cancellazione IS NULL
AND m.data_cancellazione IS NULL
AND l.validita_fine IS NULL
AND m.validita_fine IS NULL
),
-- SIAC-7593 Sofia 06.05.2020
comp_tipo_imp as
(
select
     tipo.elem_det_comp_tipo_id,
     tipo.elem_det_comp_tipo_code comp_tipo_code,
     tipo.elem_det_comp_tipo_desc comp_tipo_desc,
     macro.elem_det_comp_macro_tipo_code comp_tipo_macro_code,
     macro.elem_det_comp_macro_tipo_desc comp_tipo_macro_desc,
     sotto_tipo.elem_det_comp_sotto_tipo_code comp_tipo_sotto_tipo_code,
     sotto_tipo.elem_det_comp_sotto_tipo_desc comp_tipo_sotto_tipo_desc,
     ambito_tipo.elem_det_comp_tipo_ambito_code comp_tipo_ambito_code,
     ambito_tipo.elem_det_comp_tipo_ambito_desc comp_tipo_ambito_desc,
     fonte_tipo.elem_det_comp_tipo_fonte_code comp_tipo_fonte_code,
     fonte_tipo.elem_det_comp_tipo_fonte_desc comp_tipo_fonte_desc,
     fase_tipo.elem_det_comp_tipo_fase_code comp_tipo_fase_code ,
     fase_tipo.elem_det_comp_tipo_fase_desc comp_tipo_fase_desc,
     def_tipo.elem_det_comp_tipo_def_code comp_tipo_def_code,
     def_tipo.elem_det_comp_tipo_def_desc comp_tipo_def_desc ,
     (case when tipo.elem_det_comp_tipo_gest_aut=true then 'Solo automatica'
        else 'Manuale' end)::varchar(50) comp_tipo_gest_aut,
     per.anno::integer comp_tipo_anno
from siac_d_bil_elem_det_comp_macro_tipo macro,
     siac_d_bil_elem_det_comp_tipo tipo
        left join siac_d_bil_elem_det_comp_sotto_tipo  sotto_tipo  on (tipo.elem_det_comp_sotto_tipo_id  =sotto_tipo.elem_det_comp_sotto_tipo_id)
        left join siac_d_bil_elem_det_comp_tipo_ambito ambito_tipo on (tipo.elem_det_comp_tipo_ambito_id =ambito_tipo.elem_det_comp_tipo_ambito_id)
        left join siac_d_bil_elem_det_comp_tipo_fonte  fonte_tipo  on (tipo.elem_det_comp_tipo_fonte_id  =fonte_tipo.elem_det_comp_tipo_fonte_id)
        left join siac_d_bil_elem_det_comp_tipo_fase   fase_tipo   on (tipo.elem_det_comp_tipo_fase_id   =fase_tipo.elem_det_comp_tipo_fase_id)
        left join siac_d_bil_elem_det_comp_tipo_def    def_tipo    on (tipo.elem_det_comp_tipo_def_id    =def_tipo.elem_det_comp_tipo_def_id)
        left join siac_t_periodo per                               on (tipo.periodo_id                   =per.periodo_id)
where macro.elem_det_comp_macro_tipo_id=tipo.elem_det_comp_macro_tipo_id
)
select
     cap_elem.movgest_id,
     cap_elem.elem_code,
     cap_elem.elem_code2,
     cap_elem.elem_code3,
     cap_elem.elem_desc,
     cap_elem.elem_desc2,
     comp_tipo_imp.comp_tipo_code,
     comp_tipo_imp.comp_tipo_desc,
     comp_tipo_imp.comp_tipo_macro_code,
     comp_tipo_imp.comp_tipo_macro_desc,
     comp_tipo_imp.comp_tipo_sotto_tipo_code,
     comp_tipo_imp.comp_tipo_sotto_tipo_desc,
     comp_tipo_imp.comp_tipo_ambito_code,
     comp_tipo_imp.comp_tipo_ambito_desc,
     comp_tipo_imp.comp_tipo_fonte_code,
     comp_tipo_imp.comp_tipo_fonte_desc,
     comp_tipo_imp.comp_tipo_fase_code ,
     comp_tipo_imp.comp_tipo_fase_desc,
     comp_tipo_imp.comp_tipo_def_code,
     comp_tipo_imp.comp_tipo_def_desc ,
     comp_tipo_imp.comp_tipo_gest_aut,
     comp_tipo_imp.comp_tipo_anno
from cap_elem left join comp_tipo_imp on (cap_elem.elem_det_comp_tipo_id=comp_tipo_imp.elem_det_comp_tipo_id)
),-- SIAC-7593 Sofia 06.05.2020
sogg as (SELECT
a.movgest_ts_id,
b.soggetto_code, b.soggetto_desc, b.codice_fiscale,
b.codice_fiscale_estero, b.partita_iva, b.soggetto_id
/*INTO v_codice_soggetto, v_descrizione_soggetto, v_codice_fiscale_soggetto,
v_codice_fiscale_estero_soggetto, v_partita_iva_soggetto, v_soggetto_id*/
FROM siac_r_movgest_ts_sog a, siac_t_soggetto b
WHERE a.soggetto_id = b.soggetto_id
and a.ente_proprietario_id=p_ente_proprietario_id
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
),
sogcla as (SELECT
a.movgest_ts_id,b.soggetto_classe_code, b.soggetto_classe_desc
--INTO v_codice_classe_soggetto, v_descrizione_classe_soggetto
FROM siac_r_movgest_ts_sogclasse a, siac.siac_d_soggetto_classe b
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.soggetto_classe_id = b.soggetto_classe_id
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
),
--classificatori non gerarchici
tipoimpegno as (
SELECT
a.movgest_ts_id,b.classif_code tipoimpegno_classif_code,b.classif_desc tipoimpegno_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='TIPO_IMPEGNO'
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
ricorrentespesa as (
SELECT
a.movgest_ts_id,b.classif_code ricorrentespesa_classif_code,b.classif_desc ricorrentespesa_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='RICORRENTE_SPESA'
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
truespesa as (
SELECT
a.movgest_ts_id,b.classif_code truespesa_classif_code,b.classif_desc truespesa_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='TRANSAZIONE_UE_SPESA'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
persaspesa as (
SELECT
a.movgest_ts_id,b.classif_code persaspesa_classif_code,b.classif_desc persaspesa_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='PERIMETRO_SANITARIO_SPESA'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
polregunitarie as (
SELECT
a.movgest_ts_id,b.classif_code polregunitarie_classif_code,b.classif_desc polregunitarie_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='POLITICHE_REGIONALI_UNITARIE'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
cla11 as (
SELECT
a.movgest_ts_id,b.classif_code cla11_classif_code,b.classif_desc cla11_classif_desc,
c.classif_tipo_desc cla11_classif_tipo_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_11'
-- AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
,
cla12 as (
SELECT
a.movgest_ts_id,b.classif_code cla12_classif_code,b.classif_desc cla12_classif_desc,
c.classif_tipo_desc cla12_classif_tipo_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_12'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
,
cla13 as (
SELECT
a.movgest_ts_id,b.classif_code cla13_classif_code,b.classif_desc cla13_classif_desc,
c.classif_tipo_desc cla13_classif_tipo_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_13'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
,
cla14 as (
SELECT
a.movgest_ts_id,b.classif_code cla14_classif_code,b.classif_desc cla14_classif_desc,
c.classif_tipo_desc cla14_classif_tipo_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_14'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
,
cla15 as (
SELECT
a.movgest_ts_id,b.classif_code cla15_classif_code,b.classif_desc cla15_classif_desc,
c.classif_tipo_desc cla15_classif_tipo_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_15'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
--sezione attributi
, t_annoCapitoloOrigine as (
SELECT
a.movgest_ts_id
, a.testo annoCapitoloOrigine
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='annoCapitoloOrigine' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroCapitoloOrigine as (
SELECT
a.movgest_ts_id
, a.testo numeroCapitoloOrigine
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroCapitoloOrigine' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_annoOriginePlur as (
SELECT
a.movgest_ts_id
, a.testo annoOriginePlur
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='annoOriginePlur' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroArticoloOrigine as (
SELECT
a.movgest_ts_id
, a.testo numeroArticoloOrigine
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroArticoloOrigine' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_annoRiaccertato as (
SELECT
a.movgest_ts_id
, a.testo annoRiaccertato
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='annoRiaccertato' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroRiaccertato as (
SELECT
a.movgest_ts_id
, a.testo numeroRiaccertato
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroRiaccertato' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroOriginePlur as (
SELECT
a.movgest_ts_id
, a.testo numeroOriginePlur
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroOriginePlur' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_flagDaRiaccertamento as (
SELECT
a.movgest_ts_id
, a."boolean" flagDaRiaccertamento
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagDaRiaccertamento' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
-- 19.02.2020 Sofia jira siac-7292
, t_flagDaReanno as (
SELECT
a.movgest_ts_id
, a."boolean" flagDaReanno
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagDaReanno' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroUEBOrigine as (
SELECT
a.movgest_ts_id
, a.testo numeroUEBOrigine
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroUEBOrigine' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_cig as (
SELECT
a.movgest_ts_id
, a.testo cig
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='cig' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_cup as (
SELECT
a.movgest_ts_id
, a.testo cup
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='cup' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_NOTE_MOVGEST as (
SELECT
a.movgest_ts_id
, a.testo NOTE_MOVGEST
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='NOTE_MOVGEST' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_validato as (
SELECT
a.movgest_ts_id
, a."boolean" validato
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='validato' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_annoFinanziamento as (
SELECT
a.movgest_ts_id
, a.testo annoFinanziamento
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='annoFinanziamento' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroAccFinanziamento as (
SELECT
a.movgest_ts_id
, a.testo numeroAccFinanziamento
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroAccFinanziamento' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_flagCassaEconomale as (
SELECT
a.movgest_ts_id
, a."boolean" flagCassaEconomale
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagCassaEconomale' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_flagPrenotazione as (
SELECT
a.movgest_ts_id
, a."boolean" flagPrenotazione
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagPrenotazione' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_flagPrenotazioneLiquidabile as (
SELECT
a.movgest_ts_id
, a."boolean" flagPrenotazioneLiquidabile
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagPrenotazioneLiquidabile' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
),
t_flagFrazionabile as (
SELECT
a.movgest_ts_id
, a."boolean" flagFrazionabile
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagFrazionabile' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
),
--atto amm
attoamm as (
with atmc as (
with atm as (
SELECT
a.movgest_ts_id,
b.attoamm_anno, b.attoamm_numero, b.attoamm_oggetto, b.attoamm_note,
       e.attoamm_tipo_code, e.attoamm_tipo_desc, d.attoamm_stato_desc, b.attoamm_id
FROM
siac.siac_r_movgest_ts_atto_amm a,
siac.siac_t_atto_amm b, siac.siac_r_atto_amm_stato c,
siac.siac_d_atto_amm_stato d, siac.siac_d_atto_amm_tipo e
WHERE
a.ente_proprietario_id=p_ente_proprietario_id--p_ente_proprietario_id
and a.attoamm_id=b.attoamm_id
AND c.attoamm_id = b.attoamm_id
AND d.attoamm_stato_id = c.attoamm_stato_id
AND e.attoamm_tipo_id = b.attoamm_tipo_id
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   d.data_cancellazione IS NULL
AND   e.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
AND   d.validita_fine IS NULL
AND   e.validita_fine IS NULL
)
,
atmrclass as (select a.attoamm_id,a.classif_id from siac_r_atto_amm_class a where
a.ente_proprietario_id=p_ente_proprietario_id and
a.data_cancellazione is null
and a.validita_fine is null
--and p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
)
select atm.*,atmrclass.classif_id from atm left join atmrclass
on atmrclass.attoamm_id=atm.attoamm_id
)
,
cdc as (
select a.classif_id,a.classif_code cdc_cdc_code,a.classif_desc cdc_cdc_desc
,a2.classif_code cdc_cdr_code,a2.classif_desc cdc_cdr_desc
 from siaC_t_class a,siac_d_class_tipo b, siac_r_class_fam_tree c,siaC_t_class a2
where a.ente_proprietario_id=p_ente_proprietario_id
and b.classif_tipo_id=a.classif_tipo_id
and b.classif_tipo_code='CDC'
and c.classif_id=a.classif_id
and a2.classif_id=c.classif_id_padre
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
and a2.data_cancellazione is null
/*and a.validita_fine is null
and b.validita_fine is null
and c.validita_fine is null
and a2.validita_fine is null*/
)
,cdr as (
select a.classif_id,null cdr_cdc_code,null cdr_cdc_desc
,a.classif_code cdr_cdr_code,a.classif_desc cdr_cdr_desc
 from siaC_t_class a,siac_d_class_tipo b
 where a.ente_proprietario_id=p_ente_proprietario_id
and b.classif_tipo_id=a.classif_tipo_id
and b.classif_tipo_code='CDR'
and a.data_cancellazione is null
and b.data_cancellazione is null
/*and a.validita_fine is null
and b.validita_fine is null*/
)
select
atmc.movgest_ts_id,
atmc.attoamm_anno, atmc.attoamm_numero, atmc.attoamm_oggetto, atmc.attoamm_note,
atmc.attoamm_tipo_code, atmc.attoamm_tipo_desc, atmc.attoamm_stato_desc, atmc.attoamm_id,
cdc.cdc_cdc_code,cdc.cdc_cdc_desc,cdc.cdc_cdr_code,cdc.cdc_cdr_desc,
cdr.cdr_cdc_code,cdr.cdr_cdc_desc,cdr.cdr_cdr_code,cdr.cdr_cdr_desc
from atmc left join cdc on
atmc.classif_id=cdc.classif_id
left join cdr on
atmc.classif_id=cdr.classif_id),
impattuale as (
SELECT COALESCE(SUM(a.movgest_ts_det_importo),0) importo_attuale, a.movgest_ts_id
FROM siac.siac_t_movgest_ts_det a, siac.siac_d_movgest_ts_det_tipo b
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.movgest_ts_det_tipo_id = b.movgest_ts_det_tipo_id
AND a.data_cancellazione IS NULL
AND b.data_cancellazione IS NULL
AND a.validita_fine IS NULL
AND b.validita_fine IS NULL
and b.movgest_ts_det_tipo_code='A'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
GROUP BY  a.movgest_ts_id, b.movgest_ts_det_tipo_code
)
,
impiniziale as (
SELECT COALESCE(SUM(a.movgest_ts_det_importo),0) importo_iniziale, a.movgest_ts_id
FROM siac.siac_t_movgest_ts_det a, siac.siac_d_movgest_ts_det_tipo b
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.movgest_ts_det_tipo_id = b.movgest_ts_det_tipo_id
AND a.data_cancellazione IS NULL
AND b.data_cancellazione IS NULL
AND a.validita_fine IS NULL
AND b.validita_fine IS NULL
and b.movgest_ts_det_tipo_code='I'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
GROUP BY  a.movgest_ts_id, b.movgest_ts_det_tipo_code
)
,
imputilizzabile as (
SELECT COALESCE(SUM(a.movgest_ts_det_importo),0) importo_utilizzabile, a.movgest_ts_id
FROM siac.siac_t_movgest_ts_det a, siac.siac_d_movgest_ts_det_tipo b
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.movgest_ts_det_tipo_id = b.movgest_ts_det_tipo_id
AND a.data_cancellazione IS NULL
AND b.data_cancellazione IS NULL
AND a.validita_fine IS NULL
AND b.validita_fine IS NULL
and b.movgest_ts_det_tipo_code='U'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
GROUP BY  a.movgest_ts_id, b.movgest_ts_det_tipo_code
),
impliquidatoemessoquietanziato as (select tz.* from (
with liquid as (
 SELECT sum(COALESCE(b.liq_importo,0)) importo_liquidato, a.movgest_ts_id,
b.liq_id
    FROM siac.siac_r_liquidazione_movgest a, siac.siac_t_liquidazione b,
    siac.siac_d_liquidazione_stato c, siac.siac_r_liquidazione_stato d
    WHERE
    a.ente_proprietario_id=p_ente_proprietario_id
    AND   a.liq_id = b.liq_id
    AND   b.liq_id = d.liq_id
    AND   d.liq_stato_id = c.liq_stato_id
    AND   c.liq_stato_code <> 'A'
    --AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
    --AND p_data BETWEEN d.validita_inizio AND COALESCE(d.validita_fine, p_data)
    AND a.data_cancellazione IS NULL
    AND b.data_cancellazione IS NULL
    AND c.data_cancellazione IS NULL
    AND d.data_cancellazione IS NULL
    AND a.validita_fine IS NULL
    AND b.validita_fine IS NULL
    AND c.validita_fine IS NULL
    AND d.validita_fine IS NULL
    group by a.movgest_ts_id, b.liq_id),
emes as (
  SELECT COALESCE(SUM(e.ord_ts_det_importo),0) importo_emesso, a.liq_id
            FROM
            siac_r_liquidazione_ord a,
            siac_t_ordinativo_ts b,
                 siac_r_ordinativo_stato c, siac_d_ordinativo_stato d,
                 siac_t_ordinativo_ts_det e, siac_d_ordinativo_ts_det_tipo f
            WHERE
            a.ente_proprietario_id=p_ente_proprietario_id and
            a.sord_id=b.ord_ts_id
            AND  c.ord_id = b.ord_id
            AND  c.ord_stato_id = d.ord_stato_id
            AND  e.ord_ts_id = b.ord_ts_id
            AND  f.ord_ts_det_tipo_id = e.ord_ts_det_tipo_id
            AND  d.ord_stato_code <> 'A'
            AND  f.ord_ts_det_tipo_code = 'A'
            --AND  p_data BETWEEN  a.validita_inizio  AND COALESCE(a.validita_fine, p_data)
            --AND  p_data BETWEEN  c.validita_inizio  AND COALESCE(c.validita_fine, p_data)
            AND  a.data_cancellazione IS NULL
            AND  b.data_cancellazione IS NULL
            AND  c.data_cancellazione IS NULL
            AND  d.data_cancellazione IS NULL
            AND  e.data_cancellazione IS NULL
            AND  f.data_cancellazione IS NULL
            AND  a.validita_fine IS NULL
            AND  b.validita_fine IS NULL
            AND  c.validita_fine IS NULL
            AND  d.validita_fine IS NULL
            AND  e.validita_fine IS NULL
            AND  f.validita_fine IS NULL
            group by a.liq_id),
quiet as (
  SELECT COALESCE(SUM(e.ord_ts_det_importo),0) importo_quietanziato, a.liq_id
            FROM
            siac_r_liquidazione_ord a,
            siac_t_ordinativo_ts b,
                 siac_r_ordinativo_stato c, siac_d_ordinativo_stato d,
                 siac_t_ordinativo_ts_det e, siac_d_ordinativo_ts_det_tipo f
            WHERE
            a.ente_proprietario_id=p_ente_proprietario_id and
            a.sord_id=b.ord_ts_id
            AND  c.ord_id = b.ord_id
            AND  c.ord_stato_id = d.ord_stato_id
            AND  e.ord_ts_id = b.ord_ts_id
            AND  f.ord_ts_det_tipo_id = e.ord_ts_det_tipo_id
            AND  d.ord_stato_code= 'Q'
            AND  f.ord_ts_det_tipo_code = 'A'
            --AND  p_data BETWEEN  a.validita_inizio  AND COALESCE(a.validita_fine, p_data)
            --AND  p_data BETWEEN  c.validita_inizio  AND COALESCE(c.validita_fine, p_data)
            AND  a.data_cancellazione IS NULL
            AND  b.data_cancellazione IS NULL
            AND  c.data_cancellazione IS NULL
            AND  d.data_cancellazione IS NULL
            AND  e.data_cancellazione IS NULL
            AND  f.data_cancellazione IS NULL
            AND  a.validita_fine IS NULL
            AND  b.validita_fine IS NULL
            AND  c.validita_fine IS NULL
            AND  d.validita_fine IS NULL
            AND  e.validita_fine IS NULL
            AND  f.validita_fine IS NULL
            group by a.liq_id)
select liquid.movgest_ts_id,coalesce(sum(liquid.importo_liquidato),0) importo_liquidato,
coalesce(sum(emes.importo_emesso),0) importo_emesso,
coalesce(sum(quiet.importo_quietanziato),0) importo_quietanziato
from liquid left join emes ON
liquid.liq_id=emes.liq_id
left join quiet ON
liquid.liq_id=quiet.liq_id
group by liquid.movgest_ts_id
) as tz),
cofog as (
select distinct r.movgest_ts_id,
a.classif_code codice_cofog_gruppo,a.classif_desc descrizione_cofog_gruppo,
a2.classif_code codice_cofog_divisione,a2.classif_desc descrizione_cofog_divisione
from
siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--DIVISIONE_COFOG
siac_r_class_fam_tree d2,
siac_t_class a2
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='GRUPPO_COFOG'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
--and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
)
, pdc5 as (
select distinct
r.movgest_ts_id,
a.classif_code pdc5_codice_pdc_finanziario_V,a.classif_desc pdc5_descrizione_pdc_finanziario_V,
a2.classif_code pdc5_codice_pdc_finanziario_IV,a2.classif_desc pdc5_descrizione_pdc_finanziario_IV,
a3.classif_code pdc5_codice_pdc_finanziario_III,a3.classif_desc pdc5_descrizione_pdc_finanziario_III,
a4.classif_code pdc5_codice_pdc_finanziario_II,a4.classif_desc pdc5_descrizione_pdc_finanziario_II,
a5.classif_code pdc5_codice_pdc_finanziario_I,a5.classif_desc pdc5_descrizione_pdc_finanziario_I
 from siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4,
--PDC_I
siac_r_class_fam_tree d5,
siac_t_class a5
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PDC_V'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and d5.classif_id=a4.classif_id
and a5.classif_id=d5.classif_id_padre
-- SIAC-5883 Daniela 13.02.2018
-- and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
-- SIAC-5883 FINE Daniela 13.02.2018
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
--and p_data BETWEEN d3.validita_inizio and COALESCE(d3.validita_fine,p_data)
--and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
--and p_data BETWEEN d5.validita_inizio and COALESCE(d5.validita_fine,p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   d3.data_cancellazione IS NULL
AND   a3.data_cancellazione IS NULL
AND   d4.data_cancellazione IS NULL
AND   a4.data_cancellazione IS NULL
AND   d5.data_cancellazione IS NULL
AND   a5.data_cancellazione IS NULL
/*AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
AND   d3.validita_fine IS NULL
AND   a3.validita_fine IS NULL
AND   d4.validita_fine IS NULL
AND   a4.validita_fine IS NULL
AND   d5.validita_fine IS NULL
AND   a5.validita_fine IS NULL*/
)
, pdc4 as (
select distinct r.movgest_ts_id,
a.classif_code pdc4_codice_pdc_finanziario_IV,a.classif_desc pdc4_descrizione_pdc_finanziario_IV,
a2.classif_code pdc4_codice_pdc_finanziario_III,a2.classif_desc pdc4_descrizione_pdc_finanziario_III,
a3.classif_code pdc4_codice_pdc_finanziario_II,a3.classif_desc pdc4_descrizione_pdc_finanziario_II,
a4.classif_code pdc4_codice_pdc_finanziario_I,a4.classif_desc pdc4_descrizione_pdc_finanziario_I
 from siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PDC_IV'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
-- SIAC-5883 Daniela 13.02.2018
-- and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
-- SIAC-5883 FINE Daniela 13.02.2018
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
--and p_data BETWEEN d3.validita_inizio and COALESCE(d3.validita_fine,p_data)
--and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   d3.data_cancellazione IS NULL
AND   a3.data_cancellazione IS NULL
AND   d4.data_cancellazione IS NULL
AND   a4.data_cancellazione IS NULL
/*AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
AND   d3.validita_fine IS NULL
AND   a3.validita_fine IS NULL
AND   d4.validita_fine IS NULL
AND   a4.validita_fine IS NULL*/
)
, pce5 as (
select distinct r.movgest_ts_id,
--r.classif_id,
a.classif_code pce5_codice_pdc_economico_V,a.classif_desc pce5_descrizione_pdc_economico_V,
a2.classif_code pce5_codice_pdc_economico_IV,a2.classif_desc pce5_descrizione_pdc_economico_IV,
a3.classif_code pce5_codice_pdc_economico_III,a3.classif_desc pce5_descrizione_pdc_economico_III,
a4.classif_code pce5_codice_pdc_economico_II,a4.classif_desc pce5_descrizione_pdc_economico_II,
a5.classif_code pce5_codice_pdc_economico_I,a5.classif_desc pce5_descrizione_pdc_economico_I
 from siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4,
--PDC_I
siac_r_class_fam_tree d5,
siac_t_class a5
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PCE_V'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and d5.classif_id=a4.classif_id
and a5.classif_id=d5.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
--and p_data BETWEEN d3.validita_inizio and COALESCE(d3.validita_fine,p_data)
--and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
--and p_data BETWEEN d5.validita_inizio and COALESCE(d5.validita_fine,p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   d3.data_cancellazione IS NULL
AND   a3.data_cancellazione IS NULL
AND   d4.data_cancellazione IS NULL
AND   a4.data_cancellazione IS NULL
AND   d5.data_cancellazione IS NULL
AND   a5.data_cancellazione IS NULL
/*AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
AND   d3.validita_fine IS NULL
AND   a3.validita_fine IS NULL
AND   d4.validita_fine IS NULL
AND   a4.validita_fine IS NULL
AND   d5.validita_fine IS NULL
AND   a5.validita_fine IS NULL*/
)
, pce4 as (
select distinct r.movgest_ts_id,
a.classif_code pce4_codice_pdc_economico_IV,a.classif_desc pce4_descrizione_pdc_economico_IV,
a2.classif_code pce4_codice_pdc_economico_III,a2.classif_desc pce4_descrizione_pdc_economico_III,
a3.classif_code pce4_codice_pdc_economico_II,a3.classif_desc pce4_descrizione_pdc_economico_II,
a4.classif_code pce4_codice_pdc_economico_I,a4.classif_desc pce4_descrizione_pdc_economico_I
 from siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PCE_IV'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
--and p_data BETWEEN d3.validita_inizio and COALESCE(d3.validita_fine,p_data)
--and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   d3.data_cancellazione IS NULL
AND   a3.data_cancellazione IS NULL
AND   d4.data_cancellazione IS NULL
AND   a4.data_cancellazione IS NULL
/*AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
AND   d3.validita_fine IS NULL
AND   a3.validita_fine IS NULL
AND   d4.validita_fine IS NULL
AND   a4.validita_fine IS NULL*/
),
-- 30.04.2019 Sofia siac-6255 - modificato tutto il pezzo per tirare su il programma-cronop secondo
-- nuovo collegamento o secondo vecchio collegamento se non esiste tramite nuovo
progr_all_all as
(
with
progr_all as
(
with
-- 23.10.2018 Sofia siac-6336
progetto_old as -- vecchio collegamento
(
with
 progr as
 (
  select rmtp.movgest_ts_id, tp.programma_code, tp.programma_desc,
         stato.programma_stato_code  programma_stato,
         rmtp.programma_id
  from   siac_r_movgest_ts_programma rmtp, siac_t_programma tp, siac_r_programma_stato rs, siac_d_programma_stato stato
  where  rmtp.programma_id = tp.programma_id
  --and    p_data BETWEEN rmtp.validita_inizio and COALESCE(rmtp.validita_fine,p_data)
  --and    p_data BETWEEN tp.validita_inizio and COALESCE(tp.validita_fine,p_data)
  and    rs.programma_id=tp.programma_id
  and    stato.programma_stato_id=rs.programma_stato_id
  and    rmtp.data_cancellazione IS NULL
  and    tp.data_cancellazione IS NULL
  and    rmtp.validita_fine IS NULL
  and    tp.validita_fine IS NULL
  and    rs.data_cancellazione is null
  and    rs.validita_fine is null
 ),
 -- 23.10.2018 Sofia siac-6336
 cronop as
 (
  select cronop.programma_id,
		 cronop.cronop_id,
         cronop.cronop_code versione_cronop,
         cronop.cronop_desc desc_cronop,
         per.anno::varchar  anno_cronop
  from siac_t_cronop cronop, siac_r_cronop_stato rs, siac_d_cronop_stato stato,
       siac_t_periodo per,siac_t_bil bil
  where stato.ente_proprietario_id=p_ente_proprietario_id
  and   stato.cronop_stato_code='VA'
  and   rs.cronop_stato_id=stato.cronop_stato_id
  and   cronop.cronop_id=rs.cronop_id
  and   bil.bil_id=cronop.bil_id
  and   per.periodo_id=bil.periodo_id
  and   per.anno::INTEGER=p_anno_bilancio::integer
  and   rs.data_cancellazione is null
  and   rs.validita_fine is null
  and   cronop.data_cancellazione is null
  and   cronop.validita_fine is null
  ),
  cronop_ultimo as
  (
  select cronop.programma_id,
		 max(cronop.cronop_id) cronop_id
  from siac_t_cronop cronop, siac_r_cronop_stato rs, siac_d_cronop_stato stato,
       siac_t_bil bil ,siac_t_periodo per
  where stato.ente_proprietario_id=p_ente_proprietario_id
  and   stato.cronop_stato_code='VA'
  and   rs.cronop_stato_id=stato.cronop_stato_id
  and   cronop.cronop_id=rs.cronop_id
  and   bil.bil_id=cronop.bil_id
  and   per.periodo_id=bil.periodo_id
  and   per.anno::INTEGER=p_anno_bilancio::integer
  and   rs.data_cancellazione is null
  and   rs.validita_fine is null
  and   cronop.data_cancellazione is null
  and   cronop.validita_fine is null
  group by cronop.programma_id
  )
  select 1 programma_tipo_coll,
         progr.movgest_ts_id, progr.programma_code, progr.programma_desc,
         progr.programma_stato ,
         cronop.versione_cronop,
         cronop.desc_cronop,
         cronop.anno_cronop
  from progr
   left join cronop join cronop_ultimo on (cronop.cronop_id=cronop_ultimo.cronop_id)
    on (progr.programma_id=cronop.programma_id)
),
-- 30.04.2019 Sofia siac-6255 - nuovo collegamento
progetto as
(
 with
 progr as
 (
  select tp.programma_code, tp.programma_desc,
         stato.programma_stato_code  programma_stato,
         tp.programma_id
  from   siac_t_programma tp, siac_r_programma_stato rs, siac_d_programma_stato stato
  where  stato.ente_proprietario_id=p_ente_proprietario_id
  and    rs.programma_stato_id=stato.programma_stato_id
  and    tp.programma_id=rs.programma_id
  and    tp.data_cancellazione IS NULL
  and    tp.validita_fine IS NULL
  and    rs.data_cancellazione is null
  and    rs.validita_fine is null
 ),
 cronop as
 (
  select rmov.movgest_ts_id,
         cronop.programma_id,
		 cronop.cronop_id,
         cronop.cronop_code versione_cronop,
         cronop.cronop_desc desc_cronop,
         per.anno::varchar  anno_cronop,
         rmov.data_creazione
  from siac_r_movgest_ts_cronop_elem rmov, siac_t_cronop_elem celem,
       siac_t_cronop cronop, siac_r_cronop_stato rs, siac_d_cronop_stato stato,
       siac_t_periodo per,siac_t_bil bil
  where stato.ente_proprietario_id=p_ente_proprietario_id
  and   stato.cronop_stato_code='VA'
  and   rs.cronop_stato_id=stato.cronop_stato_id
  and   cronop.cronop_id=rs.cronop_id
  and   bil.bil_id=cronop.bil_id
  and   per.periodo_id=bil.periodo_id
  and   per.anno::INTEGER=p_anno_bilancio::integer
  and   celem.cronop_id=cronop.cronop_id
  and   rmov.cronop_elem_id=celem.cronop_elem_id
  and   rs.data_cancellazione is null
  and   rs.validita_fine is null
  and   cronop.data_cancellazione is null
  and   cronop.validita_fine is null
  and   celem.data_cancellazione is null
  and   celem.validita_fine is null
  and   rmov.data_cancellazione is null
  and   rmov.validita_fine is null
 ),
 cronop_ultimo as
 (
  select rmov.movgest_ts_id,
         max(cronop.cronop_id) ult_cronop_id
  from siac_r_movgest_ts_cronop_elem rmov, siac_t_cronop_elem celem,
       siac_t_cronop cronop, siac_r_cronop_stato rs, siac_d_cronop_stato stato,
       siac_t_periodo per,siac_t_bil bil
  where stato.ente_proprietario_id=p_ente_proprietario_id
  and   stato.cronop_stato_code='VA'
  and   rs.cronop_stato_id=stato.cronop_stato_id
  and   cronop.cronop_id=rs.cronop_id
  and   bil.bil_id=cronop.bil_id
  and   per.periodo_id=bil.periodo_id
  and   per.anno::INTEGER=p_anno_bilancio::integer
  and   celem.cronop_id=cronop.cronop_id
  and   rmov.cronop_elem_id=celem.cronop_elem_id
  and   rs.data_cancellazione is null
  and   rs.validita_fine is null
  and   cronop.data_cancellazione is null
  and   cronop.validita_fine is null
  and   celem.data_cancellazione is null
  and   celem.validita_fine is null
  and   rmov.data_cancellazione is null
  and   rmov.validita_fine is null
  group by rmov.movgest_ts_id
 )
 select 2 programma_tipo_coll,
        cronop.movgest_ts_id,
        progr.programma_code, progr.programma_desc,
        progr.programma_stato ,
        cronop.versione_cronop,
        cronop.desc_cronop,
        cronop.anno_cronop
 from progr, cronop ,cronop_ultimo
 where cronop.programma_id=progr.programma_id
 and   cronop_ultimo.ult_cronop_id=cronop.cronop_id
 and   cronop_ultimo.movgest_ts_id=cronop.movgest_ts_id
)
select *
from progetto_old
union
select *
from progetto
)
select *
from progr_all p1
where
(  ( p1.programma_tipo_coll=1 and p1.movgest_ts_id is not null ) or
   (p1.programma_tipo_coll=2
    and   not exists (select 1 from progr_all p2 where p2.programma_tipo_coll=1 and p2.movgest_Ts_id is not null)
   )
)
),
-- 30.04.2019 Sofia siac-6255 - fine
impFlagAttivaGsa as -- 28.05.2018 Sofia siac-6102
(
select rattr.movgest_ts_id, rattr.boolean flag_attiva_gsa
from siac_r_movgest_ts_attr rattr, siac_t_attr attr
where attr.ente_proprietario_id=p_ente_proprietario_id
and   attr.attr_code='FlagAttivaGsa'
and   rattr.attr_id=attr.attr_id
and   rattr.data_cancellazione is null
and   rattr.validita_fine is null
),
-- SIAC-7541 23.04.2020 Sofia
cdc_struttura as
(
SELECT rc.movgest_ts_id,c.classif_code cod_cdc_struttura_comp,c.classif_desc desc_cdc_struttura_comp
from   siac_r_movgest_class rc, siac_t_class c, siac_d_class_tipo tipo
where rc.ente_proprietario_id = p_ente_proprietario_id
and   c.classif_id=rc.classif_id
and   tipo.classif_tipo_id=c.classif_tipo_id
and   tipo.classif_tipo_code='CDC'
AND   rc.data_cancellazione IS NULL
--AND   c.data_cancellazione IS NULL
AND   rc.validita_fine IS NULL
),
-- SIAC-7541 23.04.2020 Sofia
cdr_struttura as
(
SELECT rc.movgest_ts_id,c.classif_code cod_cdr_struttura_comp,c.classif_desc desc_cdr_struttura_comp
from   siac_r_movgest_class rc, siac_t_class c, siac_d_class_tipo tipo
where rc.ente_proprietario_id = p_ente_proprietario_id
and   c.classif_id=rc.classif_id
and   tipo.classif_tipo_id=c.classif_tipo_id
and   tipo.classif_tipo_code='CDR'
AND   rc.data_cancellazione IS NULL
--AND   c.data_cancellazione IS NULL
AND   rc.validita_fine IS NULL
),
-- SIAC-6865 Sofia 04.08.2020 - aggiudicazioni
imp_aggiudicazione_anno as
(
select rattr.movgest_ts_id, (case when coalesce(rattr.testo,'')!='' then rattr.testo::integer else 0 end) annoprenotazioneorigine
from siac_r_movgest_ts_attr rattr,siac_t_attr attr
where attr.ente_proprietario_id=p_ente_proprietario_id
and   attr.attr_code='annoPrenotazioneOrigine'
and   rattr.attr_id=attr.attr_id
and   rattr.data_cancellazione is null
and   rattr.validita_fine is null
),
imp_aggiudicazione as
(
select r.movgest_id_a,
       mov.movgest_anno::integer anno_impegno_da,
       mov.movgest_numero::integer numero_impegno_da,
       modif.mod_num::integer mod_num_da
from siac_r_movgest_aggiudicazione r,siac_t_movgest mov,
     siac_t_modifica modif
where r.ente_proprietario_id=p_ente_proprietario_id
and   mov.movgest_id=r.movgest_id_da
and   modif.mod_id=r.mod_id
and   r.data_cancellazione is null
and   r.validita_fine is null
and   modif.data_cancellazione is null
and   modif.validita_fine is null
and   mov.data_cancellazione is null
and   mov.validita_fine is null
)
select
imp.ente_proprietario_id, imp.ente_denominazione, imp.anno,
imp.movgest_anno, imp.movgest_numero, imp.movgest_desc, imp.movgest_ts_code, imp.movgest_ts_desc,
imp.movgest_stato_code, imp.movgest_stato_desc,
imp.movgest_ts_scadenza_data, imp.parere_finanziario, imp.movgest_id, imp.movgest_ts_id,
imp.movgest_ts_tipo_code,
cap.elem_code, cap.elem_code2, cap.elem_code3, cap.elem_desc, cap.elem_desc2,
-- SIAC-7593 Sofia 06.05.2020 - INIZIO
cap.comp_tipo_code,
cap.comp_tipo_desc,
cap.comp_tipo_macro_code,
cap.comp_tipo_macro_desc,
cap.comp_tipo_sotto_tipo_code,
cap.comp_tipo_sotto_tipo_desc,
cap.comp_tipo_ambito_code,
cap.comp_tipo_ambito_desc,
cap.comp_tipo_fonte_code,
cap.comp_tipo_fonte_desc,
cap.comp_tipo_fase_code ,
cap.comp_tipo_fase_desc,
cap.comp_tipo_def_code,
cap.comp_tipo_def_desc ,
cap.comp_tipo_gest_aut,
cap.comp_tipo_anno,
-- SIAC-7593 Sofia 06.05.2020 - FINE
imp.bil_id,
imp.data_inizio_val_stato_subimp,
imp.data_creazione_subimp,
imp.data_inizio_val_subimp,
imp.data_modifica_subimp,
imp.data_creazione_imp,
imp.data_inizio_val_imp,
imp.data_modifica_imp,
imp.fase_operativa_code, imp.fase_operativa_desc ,
sogg.soggetto_code, sogg.soggetto_desc, sogg.codice_fiscale,
sogg.codice_fiscale_estero, sogg.partita_iva, sogg.soggetto_id
,sogcla.soggetto_classe_code, sogcla.soggetto_classe_desc,
tipoimpegno.tipoimpegno_classif_code,
tipoimpegno.tipoimpegno_classif_desc,
ricorrentespesa.ricorrentespesa_classif_code,
ricorrentespesa.ricorrentespesa_classif_desc,
truespesa.truespesa_classif_code,
truespesa.truespesa_classif_desc,
persaspesa.persaspesa_classif_code,
persaspesa.persaspesa_classif_desc,
polregunitarie.polregunitarie_classif_code,
polregunitarie.polregunitarie_classif_desc,
cla11.cla11_classif_code,
cla11.cla11_classif_desc,
cla11.cla11_classif_tipo_desc,
cla12.cla12_classif_code,
cla12.cla12_classif_desc,
cla12.cla12_classif_tipo_desc,
cla13.cla13_classif_code,
cla13.cla13_classif_desc,
cla13.cla13_classif_tipo_desc,
cla14.cla14_classif_code,
cla14.cla14_classif_desc,
cla14.cla14_classif_tipo_desc,
cla15.cla15_classif_code,
cla15.cla15_classif_desc,
cla15.cla15_classif_tipo_desc,
t_annoCapitoloOrigine.annoCapitoloOrigine,
t_numeroCapitoloOrigine.numeroCapitoloOrigine,
t_annoOriginePlur.annoOriginePlur,
t_numeroArticoloOrigine.numeroArticoloOrigine,
t_annoRiaccertato.annoRiaccertato,
t_numeroRiaccertato.numeroRiaccertato,
t_numeroOriginePlur.numeroOriginePlur,
t_flagDaRiaccertamento.flagDaRiaccertamento,
t_flagDaReanno.flagDaReanno, -- 19.02.2020 Sofia jira siac-7292
t_numeroUEBOrigine.numeroUEBOrigine,
t_cig.cig,
t_cup.cup,
t_NOTE_MOVGEST.NOTE_MOVGEST,
t_validato.validato,
t_annoFinanziamento.annoFinanziamento,
t_numeroAccFinanziamento.numeroAccFinanziamento,
t_flagCassaEconomale.flagCassaEconomale,
attoamm.attoamm_anno, attoamm.attoamm_numero, attoamm.attoamm_oggetto, attoamm.attoamm_note,
attoamm.attoamm_tipo_code, attoamm.attoamm_tipo_desc, attoamm.attoamm_stato_desc, attoamm.attoamm_id,
impattuale.importo_attuale,
impiniziale.importo_iniziale,
imputilizzabile.importo_utilizzabile,
impliquidatoemessoquietanziato.importo_liquidato,
impliquidatoemessoquietanziato.importo_emesso,
impliquidatoemessoquietanziato,importo_quietanziato,
cofog.codice_cofog_gruppo,
cofog.descrizione_cofog_gruppo,
cofog.codice_cofog_divisione,
cofog.descrizione_cofog_divisione,
pdc5.pdc5_codice_pdc_finanziario_V,pdc5.pdc5_descrizione_pdc_finanziario_V,
pdc5.pdc5_codice_pdc_finanziario_IV,pdc5.pdc5_descrizione_pdc_finanziario_IV,
pdc5.pdc5_codice_pdc_finanziario_III,pdc5.pdc5_descrizione_pdc_finanziario_III,
pdc5.pdc5_codice_pdc_finanziario_II,pdc5.pdc5_descrizione_pdc_finanziario_II,
pdc5.pdc5_codice_pdc_finanziario_I,pdc5.pdc5_descrizione_pdc_finanziario_I,
pdc4.pdc4_codice_pdc_finanziario_IV,pdc4.pdc4_descrizione_pdc_finanziario_IV,
pdc4.pdc4_codice_pdc_finanziario_III,pdc4.pdc4_descrizione_pdc_finanziario_III,
pdc4.pdc4_codice_pdc_finanziario_II,pdc4.pdc4_descrizione_pdc_finanziario_II,
pdc4.pdc4_codice_pdc_finanziario_I,pdc4.pdc4_descrizione_pdc_finanziario_I,
pce5.pce5_codice_pdc_economico_V,pce5.pce5_descrizione_pdc_economico_V,
pce5.pce5_codice_pdc_economico_IV,pce5.pce5_descrizione_pdc_economico_IV,
pce5.pce5_codice_pdc_economico_III,pce5.pce5_descrizione_pdc_economico_III,
pce5.pce5_codice_pdc_economico_II,pce5.pce5_descrizione_pdc_economico_II,
pce5.pce5_codice_pdc_economico_I,pce5.pce5_descrizione_pdc_economico_I,
pce4.pce4_codice_pdc_economico_IV,pce4.pce4_descrizione_pdc_economico_IV,
pce4.pce4_codice_pdc_economico_III,pce4.pce4_descrizione_pdc_economico_III,
pce4.pce4_codice_pdc_economico_II,pce4.pce4_descrizione_pdc_economico_II,
pce4.pce4_codice_pdc_economico_I,pce4.pce4_descrizione_pdc_economico_I,
attoamm.cdc_cdc_code,attoamm.cdc_cdc_desc,attoamm.cdc_cdr_code,attoamm.cdc_cdr_desc,
attoamm.cdr_cdc_code,attoamm.cdr_cdc_desc,attoamm.cdr_cdr_code,attoamm.cdr_cdr_desc,
-- 30.04.2019 Sofia siac-6255 - cambiato qui solo nome alias progr_all_all
progr_all_all.programma_code, progr_all_all.programma_desc,
t_flagPrenotazione.flagPrenotazione, t_flagPrenotazioneLiquidabile.flagPrenotazioneLiquidabile,
t_flagFrazionabile.flagFrazionabile,
imp.siope_tipo_debito_code, imp.siope_tipo_debito_desc, imp.siope_tipo_debito_desc_bnkit,
imp.siope_assenza_motivazione_code, imp.siope_assenza_motivazione_desc, imp.siope_assenza_motivazione_desc_bnkit,
coalesce(impFlagAttivaGsa.flag_attiva_gsa,'N') flag_attiva_gsa, -- 28.05.2018 Sofia siac-6102
-- 23.10.2018 Sofia SIAC-6336
-- 30.04.2019 Sofia siac-6255 - cambiato qui solo nome alias progr_all_all
progr_all_all.programma_stato,
progr_all_all.versione_cronop,
progr_all_all.desc_cronop,
progr_all_all.anno_cronop,
-- SIAC-7541 23.04.2020 Sofia
cdr_struttura.cod_cdr_struttura_comp,
cdr_struttura.desc_cdr_struttura_comp,
cdc_struttura.cod_cdc_struttura_comp,
cdc_struttura.desc_cdc_struttura_comp,
-- SIAC-6865 Sofia 04.08.2020 - aggiudicazioni
--0 annoprenotazioneorigine,
imp_aggiudicazione_anno.annoprenotazioneorigine,
imp_aggiudicazione.anno_impegno_da anno_impegno_aggiudicazione,
imp_aggiudicazione.numero_impegno_da num_impegno_aggiudicazione,
imp_aggiudicazione.mod_num_da num_modif_aggiudicazione
from
imp left join cap
on
imp.movgest_id=cap.movgest_id
left join sogg
on
imp.movgest_ts_id=sogg.movgest_ts_id
left join sogcla
on
imp.movgest_ts_id=sogcla.movgest_ts_id
left join tipoimpegno
on
imp.movgest_ts_id=tipoimpegno.movgest_ts_id
left join ricorrentespesa
on
imp.movgest_ts_id=ricorrentespesa.movgest_ts_id
left join truespesa
on
imp.movgest_ts_id=truespesa.movgest_ts_id
left join persaspesa
on
imp.movgest_ts_id=persaspesa.movgest_ts_id
left join polregunitarie
on
imp.movgest_ts_id=polregunitarie.movgest_ts_id
left join cla11
on
imp.movgest_ts_id=cla11.movgest_ts_id
left join cla12
on
imp.movgest_ts_id=cla12.movgest_ts_id
left join cla13
on
imp.movgest_ts_id=cla13.movgest_ts_id
left join cla14
on
imp.movgest_ts_id=cla14.movgest_ts_id
left join cla15
on
imp.movgest_ts_id=cla15.movgest_ts_id
left join t_annoCapitoloOrigine
on
imp.movgest_ts_id=t_annoCapitoloOrigine.movgest_ts_id
left join t_numeroCapitoloOrigine
on
imp.movgest_ts_id=t_numeroCapitoloOrigine.movgest_ts_id
left join t_annoOriginePlur
on
imp.movgest_ts_id=t_annoOriginePlur.movgest_ts_id
left join t_numeroArticoloOrigine
on
imp.movgest_ts_id=t_numeroArticoloOrigine.movgest_ts_id
left join t_annoRiaccertato
on
imp.movgest_ts_id=t_annoRiaccertato.movgest_ts_id
left join t_numeroRiaccertato
on
imp.movgest_ts_id=t_numeroRiaccertato.movgest_ts_id
left join t_numeroOriginePlur
on
imp.movgest_ts_id=t_numeroOriginePlur.movgest_ts_id
left join t_flagDaRiaccertamento
on
imp.movgest_ts_id=t_flagDaRiaccertamento.movgest_ts_id
-- 19.02.2020 Sofia jira siac-7292
left join t_flagDaReanno
on
imp.movgest_ts_id=t_flagDaReanno.movgest_ts_id
left join t_numeroUEBOrigine
on
imp.movgest_ts_id=t_numeroUEBOrigine.movgest_ts_id
left join t_cig
on
imp.movgest_ts_id=t_cig.movgest_ts_id
left join t_cup
on
imp.movgest_ts_id=t_cup.movgest_ts_id
left join t_NOTE_MOVGEST
on
imp.movgest_ts_id=t_NOTE_MOVGEST.movgest_ts_id
left join t_validato
on
imp.movgest_ts_id=t_validato.movgest_ts_id
left join t_annoFinanziamento
on
imp.movgest_ts_id=t_annoFinanziamento.movgest_ts_id
left join t_numeroAccFinanziamento
on
imp.movgest_ts_id=t_numeroAccFinanziamento.movgest_ts_id
left join t_flagCassaEconomale
on
imp.movgest_ts_id=t_flagCassaEconomale.movgest_ts_id
left join attoamm
on
imp.movgest_ts_id=attoamm.movgest_ts_id
left join impattuale
on
imp.movgest_ts_id=impattuale.movgest_ts_id
left join impiniziale
on
imp.movgest_ts_id=impiniziale.movgest_ts_id
left join imputilizzabile
on
imp.movgest_ts_id=imputilizzabile.movgest_ts_id
left join impliquidatoemessoquietanziato
on
imp.movgest_ts_id=impliquidatoemessoquietanziato.movgest_ts_id
left join cofog
on
imp.movgest_ts_id=cofog.movgest_ts_id
left join pdc5
on
imp.movgest_ts_id=pdc5.movgest_ts_id
left join pdc4
on
imp.movgest_ts_id=pdc4.movgest_ts_id
left join pce5
on
imp.movgest_ts_id=pce5.movgest_ts_id
left join pce4
on
imp.movgest_ts_id=pce4.movgest_ts_id
left join progr_all_all
on
imp.movgest_ts_id=progr_all_all.movgest_ts_id
left join t_flagPrenotazione
on
imp.movgest_ts_id=t_flagPrenotazione.movgest_ts_id
left join t_flagPrenotazioneLiquidabile
on
imp.movgest_ts_id=t_flagPrenotazioneLiquidabile.movgest_ts_id
left join t_flagFrazionabile
on
imp.movgest_ts_id=t_flagFrazionabile.movgest_ts_id
left join impFlagAttivaGsa
on
imp.movgest_ts_id=impFlagAttivaGsa.movgest_ts_id -- 28.05.2018 Sofia siac-6102
-- SIAC-7541 23.04.2020 Sofia
left join cdr_struttura on
imp.movgest_ts_id=cdr_struttura.movgest_ts_id
left join cdc_struttura on
imp.movgest_ts_id=cdc_struttura.movgest_ts_id
-- SIAC-6865 Sofia 04.08.2020 - aggiudicazioni
left join imp_aggiudicazione_anno on
imp.movgest_ts_id=imp_aggiudicazione_anno.movgest_ts_id
left join imp_aggiudicazione on
imp.movgest_id=imp_aggiudicazione.movgest_id_a
) xx
where xx.movgest_ts_tipo_code='T';



--------subimp

INSERT INTO
  siac.siac_dwh_subimpegno
(
  ente_proprietario_id,  ente_denominazione,  bil_anno,  cod_fase_operativa,  desc_fase_operativa,
  anno_impegno,  num_impegno,  desc_impegno,  cod_subimpegno,  cod_stato_subimpegno,  desc_stato_subimpegno,
  data_scadenza,  parere_finanziario,  cod_capitolo,  cod_articolo,  cod_ueb,  desc_capitolo,  desc_articolo,
  soggetto_id, cod_soggetto, desc_soggetto,  cf_soggetto,  cf_estero_soggetto, p_iva_soggetto,  cod_classe_soggetto,  desc_classe_soggetto,
  cod_tipo_impegno,  desc_tipo_impegno,   cod_spesa_ricorrente,  desc_spesa_ricorrente,  cod_perimetro_sanita_spesa,  desc_perimetro_sanita_spesa,
  cod_transazione_ue_spesa,  desc_transazione_ue_spesa,  cod_politiche_regionali_unit,  desc_politiche_regionali_unit,
  cod_pdc_finanziario_i,  desc_pdc_finanziario_i,  cod_pdc_finanziario_ii,  desc_pdc_finanziario_ii,
  cod_pdc_finanziario_iii,  desc_pdc_finanziario_iii,  cod_pdc_finanziario_iv,  desc_pdc_finanziario_iv,
  cod_pdc_finanziario_v,  desc_pdc_finanziario_v,  cod_pdc_economico_i,  desc_pdc_economico_i,
  cod_pdc_economico_ii,  desc_pdc_economico_ii,  cod_pdc_economico_iii,  desc_pdc_economico_iii,
  cod_pdc_economico_iv,  desc_pdc_economico_iv,  cod_pdc_economico_v,  desc_pdc_economico_v,
  cod_cofog_divisione,  desc_cofog_divisione,  cod_cofog_gruppo,  desc_cofog_gruppo,
  classificatore_1,  classificatore_1_valore,  classificatore_1_desc_valore,
  classificatore_2,  classificatore_2_valore,  classificatore_2_desc_valore,
  classificatore_3,  classificatore_3_valore,  classificatore_3_desc_valore,
  classificatore_4,  classificatore_4_valore,  classificatore_4_desc_valore,
  classificatore_5,  classificatore_5_valore,  classificatore_5_desc_valore,
  annocapitoloorigine,  numcapitoloorigine,  annoorigineplur, numarticoloorigine,  annoriaccertato,  numriaccertato,  numorigineplur,
  flagdariaccertamento,
  flagdareanno, -- 19.02.2020 Sofia jira siac-7292
  anno_atto_amministrativo,  num_atto_amministrativo,  oggetto_atto_amministrativo,  note_atto_amministrativo,
  cod_tipo_atto_amministrativo, desc_tipo_atto_amministrativo, desc_stato_atto_amministrativo,
   importo_iniziale,  importo_attuale,  importo_utilizzabile,
  note,  anno_finanziamento,  cig,  cup,  num_ueb_origine,  validato,
  num_accertamento_finanziamento,  importo_liquidato,  importo_quietanziato,  importo_emesso,
  --data_elaborazione,
  flagcassaeconomale,  data_inizio_val_stato_subimp,  data_inizio_val_subimp,
  data_creazione_subimp,  data_modifica_subimp,
  cod_cdc_atto_amministrativo,  desc_cdc_atto_amministrativo,
  cod_cdr_atto_amministrativo,  desc_cdr_atto_amministrativo,
  flagPrenotazione, flagPrenotazioneLiquidabile, flagFrazionabile,
  cod_siope_tipo_debito, desc_siope_tipo_debito, desc_siope_tipo_debito_bnkit,
  cod_siope_assenza_motivazione, desc_siope_assenza_motivazione, desc_siope_assenza_motiv_bnkit,
  flag_attiva_gsa, -- 28.05.2018 Sofia siac-6202
  -- SIAC-7541 23.04.2020 Sofia
  cod_cdr_struttura_comp,
  desc_cdr_struttura_comp,
  cod_cdc_struttura_comp,
  desc_cdc_struttura_comp,
  -- SIAC-7593 Sofia 11.05.2020 - INIZIO
  comp_tipo_code,
  comp_tipo_desc,
  comp_tipo_macro_code,
  comp_tipo_macro_desc,
  comp_tipo_sotto_tipo_code,
  comp_tipo_sotto_tipo_desc,
  comp_tipo_ambito_code,
  comp_tipo_ambito_desc,
  comp_tipo_fonte_code,
  comp_tipo_fonte_desc,
  comp_tipo_fase_code ,
  comp_tipo_fase_desc,
  comp_tipo_def_code,
  comp_tipo_def_desc ,
  comp_tipo_gest_aut,
  comp_tipo_anno
  -- SIAC-7593 Sofia 11.05.2020 - FINE
  )
select
xx.ente_proprietario_id, xx.ente_denominazione, xx.anno,xx.fase_operativa_code, xx.fase_operativa_desc ,
xx.movgest_anno, xx.movgest_numero, xx.movgest_desc, xx.movgest_ts_code, --xx.movgest_ts_desc,
xx.movgest_stato_code, xx.movgest_stato_desc, xx.movgest_ts_scadenza_data,
case when xx.parere_finanziario=false then 'F' else 'S' end parere_finanziario,-- xx.movgest_id, xx.movgest_ts_id, xx.movgest_ts_tipo_code,
xx.elem_code, xx.elem_code2, xx.elem_code3, xx.elem_desc, xx.elem_desc2, --xx.bil_id,
xx.soggetto_id, xx.soggetto_code, xx.soggetto_desc, xx.codice_fiscale,xx.codice_fiscale_estero, xx.partita_iva, xx.soggetto_classe_code, xx.soggetto_classe_desc,
xx.tipoimpegno_classif_code,xx.tipoimpegno_classif_desc,xx.ricorrentespesa_classif_code,xx.ricorrentespesa_classif_desc,
xx.persaspesa_classif_code,xx.persaspesa_classif_desc, xx.truespesa_classif_code, xx.truespesa_classif_desc, xx.polregunitarie_classif_code,xx.polregunitarie_classif_desc,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_I else xx.pdc4_codice_pdc_finanziario_I end codice_pdc_finanziario_II,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_I else xx.pdc4_descrizione_pdc_finanziario_I end descrizione_pdc_finanziario_I,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_II else xx.pdc4_codice_pdc_finanziario_II end codice_pdc_finanziario_II,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_II else xx.pdc4_descrizione_pdc_finanziario_II end descrizione_pdc_finanziario_II,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_III else xx.pdc4_codice_pdc_finanziario_III end codice_pdc_finanziario_III,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_III else xx.pdc4_descrizione_pdc_finanziario_III end descrizione_pdc_finanziario_III,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_IV else xx.pdc4_codice_pdc_finanziario_IV end codice_pdc_finanziario_IV  ,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_IV else xx.pdc4_descrizione_pdc_finanziario_IV end descrizione_pdc_finanziario_IV,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_V end codice_pdc_finanziario_V  ,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_V end descrizione_pdc_finanziario_V,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_I else xx.pce4_codice_pdc_economico_I end codice_pdc_economico_I,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_I else xx.pce4_descrizione_pdc_economico_I end descrizione_pdc_economico_I,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_II else xx.pce4_codice_pdc_economico_II end codice_pdc_economico_II,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_II else xx.pce4_descrizione_pdc_economico_II end descrizione_pdc_economico_II,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_III else xx.pce4_codice_pdc_economico_III end codice_pdc_economico_III,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_III else xx.pce4_descrizione_pdc_economico_III end descrizione_pdc_economico_III,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_IV else xx.pce4_codice_pdc_economico_IV end codice_pdc_economico_IV  ,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_IV else xx.pce4_descrizione_pdc_economico_IV end descrizione_pdc_economico_IV,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_V end codice_pdc_economico_V  ,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_V end descrizione_pdc_economico_V,
xx.codice_cofog_divisione, xx.descrizione_cofog_divisione,xx.codice_cofog_gruppo,xx.descrizione_cofog_gruppo,
xx.cla11_classif_tipo_code,xx.cla11_classif_code,xx.cla11_classif_desc,xx.cla12_classif_tipo_code,xx.cla12_classif_code,xx.cla12_classif_desc,
xx.cla13_classif_tipo_code,xx.cla13_classif_code,xx.cla13_classif_desc,xx.cla14_classif_tipo_code,xx.cla14_classif_code,xx.cla14_classif_desc,
xx.cla15_classif_tipo_code,xx.cla15_classif_code,xx.cla15_classif_desc,
xx.annoCapitoloOrigine,xx.numeroCapitoloOrigine,xx.annoOriginePlur,xx.numeroArticoloOrigine,xx.annoRiaccertato,xx.numeroRiaccertato,
xx.numeroOriginePlur, xx.flagDaRiaccertamento,
xx.flagDaReanno, -- 19.02.2020 Sofia jira siac-7292
xx.attoamm_anno, xx.attoamm_numero, xx.attoamm_oggetto, xx.attoamm_note,
xx.attoamm_tipo_code, xx.attoamm_tipo_desc, xx.attoamm_stato_desc,
xx.importo_iniziale, xx.importo_attuale, xx.importo_utilizzabile,
xx.NOTE_MOVGEST,  xx.annoFinanziamento, xx.cig,xx.cup, xx.numeroUEBOrigine,  xx.validato,
--xx.attoamm_id,
xx.numeroAccFinanziamento,  xx.importo_liquidato,  xx.importo_quietanziato, xx.importo_emesso,
xx.flagCassaEconomale,
xx.data_inizio_val_stato_subimp, xx.data_inizio_val_subimp,
xx.data_creazione_subimp, xx.data_modifica_subimp,
case when xx.cdc_cdc_code::varchar is not null then  xx.cdc_cdc_code::varchar else xx.cdr_cdc_code::varchar end cdc_code,
case when xx.cdc_cdc_code::varchar is not null then  xx.cdc_cdc_desc::varchar else xx.cdr_cdc_desc::varchar end cdc_desc,
case when xx.cdc_cdc_code::varchar is not null then  xx.cdc_cdr_code::varchar else xx.cdr_cdr_code::varchar end cdr_code,
case when xx.cdc_cdc_code::varchar is not null then  xx.cdc_cdr_desc::varchar else xx.cdr_cdr_desc::varchar end cdr_desc,
xx.flagPrenotazione, xx.flagPrenotazioneLiquidabile, xx.flagFrazionabile,
xx.siope_tipo_debito_code, xx.siope_tipo_debito_desc, xx.siope_tipo_debito_desc_bnkit,
xx.siope_assenza_motivazione_code, xx.siope_assenza_motivazione_desc, xx.siope_assenza_motivazione_desc_bnkit,
xx.flag_attiva_gsa, -- 28.05.2018 Sofia siac-6202
/*xx.data_inizio_val_stato_subimp, xx.data_inizio_val_subimp,
xx.data_creazione_subimp, xx.data_modifica_subimp,*/
-- SIAC-7541 23.04.2020 Sofia
xx.cod_cdr_struttura_comp,
xx.desc_cdr_struttura_comp,
xx.cod_cdc_struttura_comp,
xx.desc_cdc_struttura_comp,
-- SIAC-7593 Sofia 11.05.2020 - INIZIO
xx.comp_tipo_code,
xx.comp_tipo_desc,
xx.comp_tipo_macro_code,
xx.comp_tipo_macro_desc,
xx.comp_tipo_sotto_tipo_code,
xx.comp_tipo_sotto_tipo_desc,
xx.comp_tipo_ambito_code,
xx.comp_tipo_ambito_desc,
xx.comp_tipo_fonte_code,
xx.comp_tipo_fonte_desc,
xx.comp_tipo_fase_code ,
xx.comp_tipo_fase_desc,
xx.comp_tipo_def_code,
xx.comp_tipo_def_desc ,
xx.comp_tipo_gest_aut,
xx.comp_tipo_anno
-- SIAC-7593 Sofia 11.05.2020 - FINE
 from (
with imp as (
SELECT
e.ente_proprietario_id, e.ente_denominazione, d.anno,
       b.movgest_anno, b.movgest_numero, b.movgest_desc, a.movgest_ts_code, a.movgest_ts_desc,
       i.movgest_stato_code, i.movgest_stato_desc,
       a.movgest_ts_scadenza_data, b.parere_finanziario, b.movgest_id, a.movgest_ts_id,
       g.movgest_ts_tipo_code,    c.bil_id,
       h.validita_inizio as data_inizio_val_stato_subimp,
       a.data_creazione as data_creazione_subimp,
       a.validita_inizio as  data_inizio_val_subimp,
       a.data_modifica as data_modifica_subimp,
       b.data_creazione as data_creazione_imp,
       b.validita_inizio as data_inizio_val_imp,
       b.data_modifica as data_modifica_imp,
       m.fase_operativa_code, m.fase_operativa_desc,
       n.siope_tipo_debito_code, n.siope_tipo_debito_desc, n.siope_tipo_debito_desc_bnkit,
       o.siope_assenza_motivazione_code, o.siope_assenza_motivazione_desc, o.siope_assenza_motivazione_desc_bnkit
FROM
siac_t_movgest_ts a
left join siac_d_siope_tipo_debito n on n.siope_tipo_debito_id = a.siope_tipo_debito_id
                                     and n.data_cancellazione is null
                                     and n.validita_fine is null
left join siac_d_siope_assenza_motivazione o on o.siope_assenza_motivazione_id = a.siope_assenza_motivazione_id
                                             and o.data_cancellazione is null
                                             and o.validita_fine is null
, siac_t_movgest b
, siac_t_bil c
,  siac_t_periodo d
, siac_t_ente_proprietario e
,  siac_d_movgest_tipo f
,  siac_d_movgest_ts_tipo g
,  siac_r_movgest_ts_stato h
,  siac_d_movgest_stato i,
siac_r_bil_fase_operativa l, siac_d_fase_operativa m
where a.movgest_id=  b.movgest_id and
 b.bil_id = c.bil_id and
 d.periodo_id = c.periodo_id and
 e.ente_proprietario_id = b.ente_proprietario_id   and
 b.movgest_tipo_id = f.movgest_tipo_id and
 a.movgest_ts_tipo_id = g.movgest_ts_tipo_id      and
 h.movgest_ts_id = a.movgest_ts_id   and
 h.movgest_stato_id = i.movgest_stato_id
and e.ente_proprietario_id = p_ente_proprietario_id
AND d.anno = p_anno_bilancio
AND f.movgest_tipo_code = 'I'
--AND p_data BETWEEN h.validita_inizio AND COALESCE(h.validita_fine, p_data)
--and  b.movgest_anno::integer=2020
--and  exists ( select 1 from siac_r_movgest_aggiudicazione r where r.movgest_id_a=a.movgest_id )

and l.bil_id=c.bil_id
and m.fase_operativa_id=l.fase_operativa_id
--AND p_data BETWEEN l.validita_inizio AND COALESCE(l.validita_fine, p_data)
AND a.data_cancellazione IS NULL
AND b.data_cancellazione IS NULL
AND c.data_cancellazione IS NULL
AND d.data_cancellazione IS NULL
AND e.data_cancellazione IS NULL
AND f.data_cancellazione IS NULL
AND g.data_cancellazione IS NULL
AND h.data_cancellazione IS NULL
AND i.data_cancellazione IS NULL
AND a.validita_fine IS NULL
AND b.validita_fine IS NULL
AND c.validita_fine IS NULL
AND d.validita_fine IS NULL
AND e.validita_fine IS NULL
AND f.validita_fine IS NULL
AND g.validita_fine IS NULL
AND h.validita_fine IS NULL
AND i.validita_fine IS NULL
),
cap as -- SIAC-7593 Sofia 11.05.2020
(
with  -- SIAC-7593 Sofia 11.05.2020
cap_elem as
(
select l.movgest_id,
       m.elem_code, m.elem_code2, m.elem_code3, m.elem_desc, m.elem_desc2,
       l.elem_det_comp_tipo_id
From siac_r_movgest_bil_elem l, siac_t_bil_elem m
where l.elem_id=m.elem_id
and l.ente_proprietario_id=p_ente_proprietario_id
--AND p_data BETWEEN l.validita_inizio AND COALESCE(l.validita_fine, p_data)
AND l.data_cancellazione IS NULL
AND m.data_cancellazione IS NULL
AND l.validita_fine IS NULL
AND m.validita_fine IS NULL
),
-- SIAC-7593 Sofia 11.05.2020
comp_tipo_imp as
(
select
     tipo.elem_det_comp_tipo_id,
     tipo.elem_det_comp_tipo_code comp_tipo_code,
     tipo.elem_det_comp_tipo_desc comp_tipo_desc,
     macro.elem_det_comp_macro_tipo_code comp_tipo_macro_code,
     macro.elem_det_comp_macro_tipo_desc comp_tipo_macro_desc,
     sotto_tipo.elem_det_comp_sotto_tipo_code comp_tipo_sotto_tipo_code,
     sotto_tipo.elem_det_comp_sotto_tipo_desc comp_tipo_sotto_tipo_desc,
     ambito_tipo.elem_det_comp_tipo_ambito_code comp_tipo_ambito_code,
     ambito_tipo.elem_det_comp_tipo_ambito_desc comp_tipo_ambito_desc,
     fonte_tipo.elem_det_comp_tipo_fonte_code comp_tipo_fonte_code,
     fonte_tipo.elem_det_comp_tipo_fonte_desc comp_tipo_fonte_desc,
     fase_tipo.elem_det_comp_tipo_fase_code comp_tipo_fase_code ,
     fase_tipo.elem_det_comp_tipo_fase_desc comp_tipo_fase_desc,
     def_tipo.elem_det_comp_tipo_def_code comp_tipo_def_code,
     def_tipo.elem_det_comp_tipo_def_desc comp_tipo_def_desc ,
     (case when tipo.elem_det_comp_tipo_gest_aut=true then 'Solo automatica'
        else 'Manuale' end)::varchar(50) comp_tipo_gest_aut,
     per.anno::integer comp_tipo_anno
from siac_d_bil_elem_det_comp_macro_tipo macro,
     siac_d_bil_elem_det_comp_tipo tipo
        left join siac_d_bil_elem_det_comp_sotto_tipo  sotto_tipo  on (tipo.elem_det_comp_sotto_tipo_id  =sotto_tipo.elem_det_comp_sotto_tipo_id)
        left join siac_d_bil_elem_det_comp_tipo_ambito ambito_tipo on (tipo.elem_det_comp_tipo_ambito_id =ambito_tipo.elem_det_comp_tipo_ambito_id)
        left join siac_d_bil_elem_det_comp_tipo_fonte  fonte_tipo  on (tipo.elem_det_comp_tipo_fonte_id  =fonte_tipo.elem_det_comp_tipo_fonte_id)
        left join siac_d_bil_elem_det_comp_tipo_fase   fase_tipo   on (tipo.elem_det_comp_tipo_fase_id   =fase_tipo.elem_det_comp_tipo_fase_id)
        left join siac_d_bil_elem_det_comp_tipo_def    def_tipo    on (tipo.elem_det_comp_tipo_def_id    =def_tipo.elem_det_comp_tipo_def_id)
        left join siac_t_periodo per                               on (tipo.periodo_id                   =per.periodo_id)

where macro.elem_det_comp_macro_tipo_id=tipo.elem_det_comp_macro_tipo_id
)
select
     cap_elem.movgest_id,
     cap_elem.elem_code,
     cap_elem.elem_code2,
     cap_elem.elem_code3,
     cap_elem.elem_desc,
     cap_elem.elem_desc2,
     comp_tipo_imp.comp_tipo_code,
     comp_tipo_imp.comp_tipo_desc,
     comp_tipo_imp.comp_tipo_macro_code,
     comp_tipo_imp.comp_tipo_macro_desc,
     comp_tipo_imp.comp_tipo_sotto_tipo_code,
     comp_tipo_imp.comp_tipo_sotto_tipo_desc,
     comp_tipo_imp.comp_tipo_ambito_code,
     comp_tipo_imp.comp_tipo_ambito_desc,
     comp_tipo_imp.comp_tipo_fonte_code,
     comp_tipo_imp.comp_tipo_fonte_desc,
     comp_tipo_imp.comp_tipo_fase_code ,
     comp_tipo_imp.comp_tipo_fase_desc,
     comp_tipo_imp.comp_tipo_def_code,
     comp_tipo_imp.comp_tipo_def_desc ,
     comp_tipo_imp.comp_tipo_gest_aut,
     comp_tipo_imp.comp_tipo_anno
from cap_elem left join comp_tipo_imp on (cap_elem.elem_det_comp_tipo_id=comp_tipo_imp.elem_det_comp_tipo_id)
), -- SIAC-7593 Sofia 11.05.2020
sogg as (SELECT
a.movgest_ts_id,
b.soggetto_code, b.soggetto_desc, b.codice_fiscale,
b.codice_fiscale_estero, b.partita_iva, b.soggetto_id
/*INTO v_codice_soggetto, v_descrizione_soggetto, v_codice_fiscale_soggetto,
v_codice_fiscale_estero_soggetto, v_partita_iva_soggetto, v_soggetto_id*/
FROM siac_r_movgest_ts_sog a, siac_t_soggetto b
WHERE a.soggetto_id = b.soggetto_id
and a.ente_proprietario_id=p_ente_proprietario_id
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
),
sogcla as (SELECT
a.movgest_ts_id,b.soggetto_classe_code, b.soggetto_classe_desc
--INTO v_codice_classe_soggetto, v_descrizione_classe_soggetto
FROM siac_r_movgest_ts_sogclasse a, siac.siac_d_soggetto_classe b
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.soggetto_classe_id = b.soggetto_classe_id
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
)
,
--classificatori non gerarchici
tipoimpegno as (
SELECT
a.movgest_ts_id,b.classif_code tipoimpegno_classif_code,b.classif_desc tipoimpegno_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='TIPO_IMPEGNO'
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
ricorrentespesa as (
SELECT
a.movgest_ts_id,b.classif_code ricorrentespesa_classif_code,b.classif_desc ricorrentespesa_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='RICORRENTE_SPESA'
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
truespesa as (
SELECT
a.movgest_ts_id,b.classif_code truespesa_classif_code,b.classif_desc truespesa_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='TRANSAZIONE_UE_SPESA'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
persaspesa as (
SELECT
a.movgest_ts_id,b.classif_code persaspesa_classif_code,b.classif_desc persaspesa_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='PERIMETRO_SANITARIO_SPESA'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
polregunitarie as (
SELECT
a.movgest_ts_id,b.classif_code polregunitarie_classif_code,b.classif_desc polregunitarie_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='POLITICHE_REGIONALI_UNITARIE'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
cla11 as (
SELECT
a.movgest_ts_id,b.classif_code cla11_classif_code,b.classif_desc cla11_classif_desc, c.classif_tipo_code cla11_classif_tipo_code
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_11'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
,
cla12 as (
SELECT
a.movgest_ts_id,b.classif_code cla12_classif_code,b.classif_desc cla12_classif_desc, c.classif_tipo_code cla12_classif_tipo_code
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_12'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
,
cla13 as (
SELECT
a.movgest_ts_id,b.classif_code cla13_classif_code,b.classif_desc cla13_classif_desc, c.classif_tipo_code cla13_classif_tipo_code
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_13'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
,
cla14 as (
SELECT
a.movgest_ts_id,b.classif_code cla14_classif_code,b.classif_desc cla14_classif_desc, c.classif_tipo_code cla14_classif_tipo_code
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_14'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
,
cla15 as (
SELECT
a.movgest_ts_id,b.classif_code cla15_classif_code,b.classif_desc cla15_classif_desc, c.classif_tipo_code cla15_classif_tipo_code
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_15'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
--sezione attributi
, t_annoCapitoloOrigine as (
SELECT
a.movgest_ts_id
, a.testo annoCapitoloOrigine
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='annoCapitoloOrigine' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroCapitoloOrigine as (
SELECT
a.movgest_ts_id
, a.testo numeroCapitoloOrigine
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroCapitoloOrigine' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_annoOriginePlur as (
SELECT
a.movgest_ts_id
, a.testo annoOriginePlur
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='annoOriginePlur' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroArticoloOrigine as (
SELECT
a.movgest_ts_id
, a.testo numeroArticoloOrigine
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroArticoloOrigine' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_annoRiaccertato as (
SELECT
a.movgest_ts_id
, a.testo annoRiaccertato
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='annoRiaccertato' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroRiaccertato as (
SELECT
a.movgest_ts_id
, a.testo numeroRiaccertato
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroRiaccertato' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroOriginePlur as (
SELECT
a.movgest_ts_id
, a.testo numeroOriginePlur
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroOriginePlur' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_flagDaRiaccertamento as (
SELECT
a.movgest_ts_id
, a."boolean" flagDaRiaccertamento
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagDaRiaccertamento' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
-- 19.02.2020 Sofia jira siac-7292
, t_flagDaReanno as (
SELECT
a.movgest_ts_id
, a."boolean" flagDaReanno
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagDaReanno' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)

, t_numeroUEBOrigine as (
SELECT
a.movgest_ts_id
, a.testo numeroUEBOrigine
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroUEBOrigine' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_cig as (
SELECT
a.movgest_ts_id
, a.testo cig
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='cig' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_cup as (
SELECT
a.movgest_ts_id
, a.testo cup
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='cup' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_NOTE_MOVGEST as (
SELECT
a.movgest_ts_id
, a.testo NOTE_MOVGEST
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='NOTE_MOVGEST' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_validato as (
SELECT
a.movgest_ts_id
, a."boolean" validato
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='validato' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_annoFinanziamento as (
SELECT
a.movgest_ts_id
, a.testo annoFinanziamento
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='annoFinanziamento' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroAccFinanziamento as (
SELECT
a.movgest_ts_id
, a.testo numeroAccFinanziamento
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroAccFinanziamento' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_flagCassaEconomale as (
SELECT
a.movgest_ts_id
, a."boolean" flagCassaEconomale
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagCassaEconomale' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_flagPrenotazione as (
SELECT
a.movgest_ts_id
, a."boolean" flagPrenotazione
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagPrenotazione' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_flagPrenotazioneLiquidabile as (
SELECT
a.movgest_ts_id
, a."boolean" flagPrenotazioneLiquidabile
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagPrenotazioneLiquidabile' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
),
t_flagFrazionabile as (
SELECT
a.movgest_ts_id
, a."boolean" flagFrazionabile
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagFrazionabile' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
),
--atto amm
attoamm as (
with atmc as (
with atm as (
SELECT
a.movgest_ts_id,
b.attoamm_anno, b.attoamm_numero, b.attoamm_oggetto, b.attoamm_note,
       e.attoamm_tipo_code, e.attoamm_tipo_desc, d.attoamm_stato_desc, b.attoamm_id
FROM
siac.siac_r_movgest_ts_atto_amm a,
siac.siac_t_atto_amm b, siac.siac_r_atto_amm_stato c,
siac.siac_d_atto_amm_stato d, siac.siac_d_atto_amm_tipo e
WHERE
a.ente_proprietario_id=p_ente_proprietario_id--p_ente_proprietario_id
and a.attoamm_id=b.attoamm_id
AND c.attoamm_id = b.attoamm_id
AND d.attoamm_stato_id = c.attoamm_stato_id
AND e.attoamm_tipo_id = b.attoamm_tipo_id
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   d.data_cancellazione IS NULL
AND   e.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
AND   d.validita_fine IS NULL
AND   e.validita_fine IS NULL
)
, atmrclass as (select a.attoamm_id,a.classif_id from siac_r_atto_amm_class a where
a.ente_proprietario_id=p_ente_proprietario_id and
a.data_cancellazione is null
AND   a.validita_fine IS NULL
--and p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
)
select atm.*,atmrclass.classif_id from atm left join atmrclass
on atmrclass.attoamm_id=atm.attoamm_id
)
,
cdc as (
select a.classif_id,a.classif_code cdc_cdc_code,a.classif_desc cdc_cdc_desc
,a2.classif_code cdc_cdr_code,a2.classif_desc cdc_cdr_desc
 from siaC_t_class a,siac_d_class_tipo b, siac_r_class_fam_tree c,siaC_t_class a2
where a.ente_proprietario_id=p_ente_proprietario_id
and b.classif_tipo_id=a.classif_tipo_id
and b.classif_tipo_code='CDC'
and c.classif_id=a.classif_id
--and p_data BETWEEN c.validita_inizio AND COALESCE(c.validita_fine, p_data)
and a2.classif_id=c.classif_id_padre
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
and a2.data_cancellazione is null
and a2.classif_id=c.classif_id_padre
/*and a.validita_fine is null
and b.validita_fine is null
and c.validita_fine is null
and a2.validita_fine is null*/
)
,cdr as (
select a.classif_id,null cdr_cdc_code,null cdr_cdc_desc
,a.classif_code cdr_cdr_code,a.classif_desc cdr_cdr_desc
 from siaC_t_class a,siac_d_class_tipo b
 where a.ente_proprietario_id=p_ente_proprietario_id
and b.classif_tipo_id=a.classif_tipo_id
and b.classif_tipo_code='CDR'
and a.data_cancellazione is null
and b.data_cancellazione is null
/*and a.validita_fine is null
and b.validita_fine is null*/
)
select
atmc.movgest_ts_id,
atmc.attoamm_anno, atmc.attoamm_numero, atmc.attoamm_oggetto, atmc.attoamm_note,
atmc.attoamm_tipo_code, atmc.attoamm_tipo_desc, atmc.attoamm_stato_desc, atmc.attoamm_id,
cdc.cdc_cdc_code,cdc.cdc_cdc_desc,cdc.cdc_cdr_code,cdc.cdc_cdr_desc,
cdr.cdr_cdc_code,cdr.cdr_cdc_desc,cdr.cdr_cdr_code,cdr.cdr_cdr_desc
from atmc left join cdc on
atmc.classif_id=cdc.classif_id
left join cdr on
atmc.classif_id=cdr.classif_id),
impattuale as (
SELECT COALESCE(SUM(a.movgest_ts_det_importo),0) importo_attuale, a.movgest_ts_id
FROM siac.siac_t_movgest_ts_det a, siac.siac_d_movgest_ts_det_tipo b
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.movgest_ts_det_tipo_id = b.movgest_ts_det_tipo_id
AND a.data_cancellazione IS NULL
AND b.data_cancellazione IS NULL
and a.validita_fine is null
and b.validita_fine is null
and b.movgest_ts_det_tipo_code='A'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
GROUP BY  a.movgest_ts_id, b.movgest_ts_det_tipo_code
)
,
impiniziale as (
SELECT COALESCE(SUM(a.movgest_ts_det_importo),0) importo_iniziale, a.movgest_ts_id
FROM siac.siac_t_movgest_ts_det a, siac.siac_d_movgest_ts_det_tipo b
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.movgest_ts_det_tipo_id = b.movgest_ts_det_tipo_id
AND a.data_cancellazione IS NULL
AND b.data_cancellazione IS NULL
and a.validita_fine is null
and b.validita_fine is null
and b.movgest_ts_det_tipo_code='I'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
GROUP BY  a.movgest_ts_id, b.movgest_ts_det_tipo_code
)
,
imputilizzabile as (
SELECT COALESCE(SUM(a.movgest_ts_det_importo),0) importo_utilizzabile, a.movgest_ts_id
FROM siac.siac_t_movgest_ts_det a, siac.siac_d_movgest_ts_det_tipo b
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.movgest_ts_det_tipo_id = b.movgest_ts_det_tipo_id
AND a.data_cancellazione IS NULL
AND b.data_cancellazione IS NULL
and a.validita_fine is null
and b.validita_fine is null
and b.movgest_ts_det_tipo_code='U'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
GROUP BY  a.movgest_ts_id, b.movgest_ts_det_tipo_code
),
impliquidatoemessoquietanziato as (select tz.* from (
with liquid as (
 SELECT sum(COALESCE(b.liq_importo,0)) importo_liquidato, a.movgest_ts_id,
b.liq_id
    FROM siac.siac_r_liquidazione_movgest a, siac.siac_t_liquidazione b,
    siac.siac_d_liquidazione_stato c, siac.siac_r_liquidazione_stato d
    WHERE
    a.ente_proprietario_id=p_ente_proprietario_id
    AND   a.liq_id = b.liq_id
    AND   b.liq_id = d.liq_id
    AND   d.liq_stato_id = c.liq_stato_id
    AND   c.liq_stato_code <> 'A'
    --AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
    --AND p_data BETWEEN d.validita_inizio AND COALESCE(d.validita_fine, p_data)
    AND a.data_cancellazione IS NULL
    AND b.data_cancellazione IS NULL
    AND c.data_cancellazione IS NULL
    AND d.data_cancellazione IS NULL
    AND a.validita_fine IS NULL
    AND b.validita_fine IS NULL
    AND c.validita_fine IS NULL
    AND d.validita_fine IS NULL
    group by a.movgest_ts_id, b.liq_id),
emes as (
  SELECT COALESCE(SUM(e.ord_ts_det_importo),0) importo_emesso, a.liq_id
            FROM
            siac_r_liquidazione_ord a,
            siac_t_ordinativo_ts b,
                 siac_r_ordinativo_stato c, siac_d_ordinativo_stato d,
                 siac_t_ordinativo_ts_det e, siac_d_ordinativo_ts_det_tipo f
            WHERE
            a.ente_proprietario_id=p_ente_proprietario_id and
            a.sord_id=b.ord_ts_id
            AND  c.ord_id = b.ord_id
            AND  c.ord_stato_id = d.ord_stato_id
            AND  e.ord_ts_id = b.ord_ts_id
            AND  f.ord_ts_det_tipo_id = e.ord_ts_det_tipo_id
            AND  d.ord_stato_code <> 'A'
            AND  f.ord_ts_det_tipo_code = 'A'
            --AND  p_data BETWEEN  a.validita_inizio  AND COALESCE(a.validita_fine, p_data)
            --AND  p_data BETWEEN  c.validita_inizio  AND COALESCE(c.validita_fine, p_data)
            AND  a.data_cancellazione IS NULL
            AND  b.data_cancellazione IS NULL
            AND  c.data_cancellazione IS NULL
            AND  d.data_cancellazione IS NULL
            AND  e.data_cancellazione IS NULL
            AND  f.data_cancellazione IS NULL
            AND  a.validita_fine IS NULL
            AND  b.validita_fine IS NULL
            AND  c.validita_fine IS NULL
            AND  d.validita_fine IS NULL
            AND  e.validita_fine IS NULL
            AND  f.validita_fine IS NULL
            group by a.liq_id),
quiet as (
  SELECT COALESCE(SUM(e.ord_ts_det_importo),0) importo_quietanziato, a.liq_id
            FROM
            siac_r_liquidazione_ord a,
            siac_t_ordinativo_ts b,
                 siac_r_ordinativo_stato c, siac_d_ordinativo_stato d,
                 siac_t_ordinativo_ts_det e, siac_d_ordinativo_ts_det_tipo f
            WHERE
            a.ente_proprietario_id=p_ente_proprietario_id and
            a.sord_id=b.ord_ts_id
            AND  c.ord_id = b.ord_id
            AND  c.ord_stato_id = d.ord_stato_id
            AND  e.ord_ts_id = b.ord_ts_id
            AND  f.ord_ts_det_tipo_id = e.ord_ts_det_tipo_id
            AND  d.ord_stato_code= 'Q'
            AND  f.ord_ts_det_tipo_code = 'A'
            --AND  p_data BETWEEN  a.validita_inizio  AND COALESCE(a.validita_fine, p_data)
            --AND  p_data BETWEEN  c.validita_inizio  AND COALESCE(c.validita_fine, p_data)
            AND  a.data_cancellazione IS NULL
            AND  b.data_cancellazione IS NULL
            AND  c.data_cancellazione IS NULL
            AND  d.data_cancellazione IS NULL
            AND  e.data_cancellazione IS NULL
            AND  f.data_cancellazione IS NULL
            AND  a.validita_fine IS NULL
            AND  b.validita_fine IS NULL
            AND  c.validita_fine IS NULL
            AND  d.validita_fine IS NULL
            AND  e.validita_fine IS NULL
            AND  f.validita_fine IS NULL
            group by a.liq_id)
select liquid.movgest_ts_id,coalesce(sum(liquid.importo_liquidato),0) importo_liquidato,
coalesce(sum(emes.importo_emesso),0) importo_emesso,
coalesce(sum(quiet.importo_quietanziato),0) importo_quietanziato
from liquid left join emes ON
liquid.liq_id=emes.liq_id
left join quiet ON
liquid.liq_id=quiet.liq_id
group by liquid.movgest_ts_id
) as tz),
cofog as (
select distinct r.movgest_ts_id,
a.classif_code codice_cofog_gruppo,a.classif_desc descrizione_cofog_gruppo,
a2.classif_code codice_cofog_divisione,a2.classif_desc descrizione_cofog_divisione
from
siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--DIVISIONE_COFOG
siac_r_class_fam_tree d2,
siac_t_class a2
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='GRUPPO_COFOG'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
--and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
)
, pdc5 as (
select distinct
r.movgest_ts_id,
a.classif_code pdc5_codice_pdc_finanziario_V,a.classif_desc pdc5_descrizione_pdc_finanziario_V,
a2.classif_code pdc5_codice_pdc_finanziario_IV,a2.classif_desc pdc5_descrizione_pdc_finanziario_IV,
a3.classif_code pdc5_codice_pdc_finanziario_III,a3.classif_desc pdc5_descrizione_pdc_finanziario_III,
a4.classif_code pdc5_codice_pdc_finanziario_II,a4.classif_desc pdc5_descrizione_pdc_finanziario_II,
a5.classif_code pdc5_codice_pdc_finanziario_I,a5.classif_desc pdc5_descrizione_pdc_finanziario_I
 from siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4,
--PDC_I
siac_r_class_fam_tree d5,
siac_t_class a5
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PDC_V'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and d5.classif_id=a4.classif_id
and a5.classif_id=d5.classif_id_padre
-- SIAC-5883 Daniela 13.02.2018
-- and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
-- FINE SIAC-5883 Daniela 13.02.2018
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
--and p_data BETWEEN d3.validita_inizio and COALESCE(d3.validita_fine,p_data)
--and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
--and p_data BETWEEN d5.validita_inizio and COALESCE(d5.validita_fine,p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   d3.data_cancellazione IS NULL
AND   a3.data_cancellazione IS NULL
AND   d4.data_cancellazione IS NULL
AND   a4.data_cancellazione IS NULL
AND   d5.data_cancellazione IS NULL
AND   a5.data_cancellazione IS NULL
/*AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
AND   d3.validita_fine IS NULL
AND   a3.validita_fine IS NULL
AND   d4.validita_fine IS NULL
AND   a4.validita_fine IS NULL
AND   d5.validita_fine IS NULL
AND   a5.validita_fine IS NULL*/
)
, pdc4 as (
select distinct r.movgest_ts_id,
a.classif_code pdc4_codice_pdc_finanziario_IV,a.classif_desc pdc4_descrizione_pdc_finanziario_IV,
a2.classif_code pdc4_codice_pdc_finanziario_III,a2.classif_desc pdc4_descrizione_pdc_finanziario_III,
a3.classif_code pdc4_codice_pdc_finanziario_II,a3.classif_desc pdc4_descrizione_pdc_finanziario_II,
a4.classif_code pdc4_codice_pdc_finanziario_I,a4.classif_desc pdc4_descrizione_pdc_finanziario_I
 from siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PDC_IV'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
-- SIAC-5883 Daniela 13.02.2018
-- and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
-- FINE SIAC-5883 Daniela 13.02.2018
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
--and p_data BETWEEN d3.validita_inizio and COALESCE(d3.validita_fine,p_data)
--and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   d3.data_cancellazione IS NULL
AND   a3.data_cancellazione IS NULL
AND   d4.data_cancellazione IS NULL
AND   a4.data_cancellazione IS NULL
/*AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
AND   d3.validita_fine IS NULL
AND   a3.validita_fine IS NULL
AND   d4.validita_fine IS NULL
AND   a4.validita_fine IS NULL*/
)
, pce5 as (
select distinct r.movgest_ts_id,
--r.classif_id,
a.classif_code pce5_codice_pdc_economico_V,a.classif_desc pce5_descrizione_pdc_economico_V,
a2.classif_code pce5_codice_pdc_economico_IV,a2.classif_desc pce5_descrizione_pdc_economico_IV,
a3.classif_code pce5_codice_pdc_economico_III,a3.classif_desc pce5_descrizione_pdc_economico_III,
a4.classif_code pce5_codice_pdc_economico_II,a4.classif_desc pce5_descrizione_pdc_economico_II,
a5.classif_code pce5_codice_pdc_economico_I,a5.classif_desc pce5_descrizione_pdc_economico_I
 from siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4,
--PDC_I
siac_r_class_fam_tree d5,
siac_t_class a5
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PCE_V'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and d5.classif_id=a4.classif_id
and a5.classif_id=d5.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
--and p_data BETWEEN d3.validita_inizio and COALESCE(d3.validita_fine,p_data)
--and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
--and p_data BETWEEN d5.validita_inizio and COALESCE(d5.validita_fine,p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   d3.data_cancellazione IS NULL
AND   a3.data_cancellazione IS NULL
AND   d4.data_cancellazione IS NULL
AND   a4.data_cancellazione IS NULL
AND   d5.data_cancellazione IS NULL
AND   a5.data_cancellazione IS NULL
/*AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
AND   d3.validita_fine IS NULL
AND   a3.validita_fine IS NULL
AND   d4.validita_fine IS NULL
AND   a4.validita_fine IS NULL
AND   d5.validita_fine IS NULL
AND   a5.validita_fine IS NULL*/
)
, pce4 as (
select distinct r.movgest_ts_id,
a.classif_code pce4_codice_pdc_economico_IV,a.classif_desc pce4_descrizione_pdc_economico_IV,
a2.classif_code pce4_codice_pdc_economico_III,a2.classif_desc pce4_descrizione_pdc_economico_III,
a3.classif_code pce4_codice_pdc_economico_II,a3.classif_desc pce4_descrizione_pdc_economico_II,
a4.classif_code pce4_codice_pdc_economico_I,a4.classif_desc pce4_descrizione_pdc_economico_I
 from siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PCE_IV'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
--and p_data BETWEEN d3.validita_inizio and COALESCE(d3.validita_fine,p_data)
--and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   d3.data_cancellazione IS NULL
AND   a3.data_cancellazione IS NULL
AND   d4.data_cancellazione IS NULL
AND   a4.data_cancellazione IS NULL
/*AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
AND   d3.validita_fine IS NULL
AND   a3.validita_fine IS NULL
AND   d4.validita_fine IS NULL
AND   a4.validita_fine IS NULL*/
),
impFlagAttivaGsa as -- 28.05.2018 Sofia siac-6102
(
select rattr.movgest_ts_id, rattr.boolean flag_attiva_gsa
from siac_r_movgest_ts_attr rattr, siac_t_attr attr
where attr.ente_proprietario_id=p_ente_proprietario_id
and   attr.attr_code='FlagAttivaGsa'
and   rattr.attr_id=attr.attr_id
and   rattr.data_cancellazione is null
and   rattr.validita_fine is null
),
-- SIAC-7541 23.04.2020 Sofia
struttura_comp as
(
 with
 impegno_ts as
 (
  select ts.movgest_id, ts.movgest_ts_id
  from siac_t_movgest_Ts ts,siac_d_movgest_ts_tipo tipo
  where tipo.ente_proprietario_id=p_ente_proprietario_id
  and   tipo.movgest_ts_tipo_code='T'
  and   ts.movgest_ts_tipo_id=tipo.movgest_ts_tipo_id
  and   ts.data_cancellazione is null
  and   ts.validita_fine is null
 ),
 cdc_struttura_comp as
 (
 select rc.movgest_ts_id, c.classif_code, c.classif_desc
 from siac_r_movgest_class rc,siac_t_class c,siac_d_class_tipo tipo
 where tipo.ente_proprietario_id=p_ente_proprietario_id
 and   tipo.classif_tipo_code='CDC'
 and   c.classif_tipo_id=tipo.classif_tipo_id
 and   rc.classif_id=c.classif_id
 and   rc.data_cancellazione is null
 and   rc.validita_fine is null
 ),
 cdr_struttura_comp as
 (
 select rc.movgest_ts_id, c.classif_code, c.classif_desc
 from siac_r_movgest_class rc,siac_t_class c,siac_d_class_tipo tipo
 where tipo.ente_proprietario_id=p_ente_proprietario_id
 and   tipo.classif_tipo_code='CDR'
 and   c.classif_tipo_id=tipo.classif_tipo_id
 and   rc.classif_id=c.classif_id
 and   rc.data_cancellazione is null
 and   rc.validita_fine is null
 )
 select impegno_Ts.movgest_id,
        cdr_struttura_comp.classif_code cod_cdr_struttura_comp,
        cdr_struttura_comp.classif_desc desc_cdr_struttura_comp,
        cdc_struttura_comp.classif_code cod_cdc_struttura_comp,
        cdc_struttura_comp.classif_code desc_cdc_struttura_comp
 from impegno_ts
      left join cdc_struttura_comp on  impegno_ts.movgest_ts_id=cdc_struttura_comp.movgest_ts_id
      left join cdr_struttura_comp on  impegno_ts.movgest_ts_id=cdr_struttura_comp.movgest_ts_id
) -- SIAC-7541 23.04.2020 Sofia
select
imp.ente_proprietario_id, imp.ente_denominazione, imp.anno,
imp.movgest_anno, imp.movgest_numero, imp.movgest_desc, imp.movgest_ts_code, imp.movgest_ts_desc,
imp.movgest_stato_code, imp.movgest_stato_desc,
imp.movgest_ts_scadenza_data, imp.parere_finanziario, imp.movgest_id, imp.movgest_ts_id,
imp.movgest_ts_tipo_code,
cap.elem_code, cap.elem_code2, cap.elem_code3, cap.elem_desc, cap.elem_desc2,
imp.bil_id,
imp.data_inizio_val_stato_subimp,
imp.data_creazione_subimp,
imp.data_inizio_val_subimp,
imp.data_modifica_subimp,
imp.data_creazione_imp,
imp.data_inizio_val_imp,
imp.data_modifica_imp,
imp.fase_operativa_code, imp.fase_operativa_desc ,
sogg.soggetto_code, sogg.soggetto_desc, sogg.codice_fiscale,
sogg.codice_fiscale_estero, sogg.partita_iva, sogg.soggetto_id
,sogcla.soggetto_classe_code, sogcla.soggetto_classe_desc,
tipoimpegno.tipoimpegno_classif_code,
tipoimpegno.tipoimpegno_classif_desc,
ricorrentespesa.ricorrentespesa_classif_code,
ricorrentespesa.ricorrentespesa_classif_desc,
truespesa.truespesa_classif_code,
truespesa.truespesa_classif_desc,
persaspesa.persaspesa_classif_code,
persaspesa.persaspesa_classif_desc,
polregunitarie.polregunitarie_classif_code,
polregunitarie.polregunitarie_classif_desc,
cla11.cla11_classif_code,
cla11.cla11_classif_desc,
cla11.cla11_classif_tipo_code,
cla12.cla12_classif_code,
cla12.cla12_classif_desc,
cla12.cla12_classif_tipo_code,
cla13.cla13_classif_code,
cla13.cla13_classif_desc,
cla13.cla13_classif_tipo_code,
cla14.cla14_classif_code,
cla14.cla14_classif_desc,
cla14.cla14_classif_tipo_code,
cla15.cla15_classif_code,
cla15.cla15_classif_desc,
cla15.cla15_classif_tipo_code,
t_annoCapitoloOrigine.annoCapitoloOrigine,
t_numeroCapitoloOrigine.numeroCapitoloOrigine,
t_annoOriginePlur.annoOriginePlur,
t_numeroArticoloOrigine.numeroArticoloOrigine,
t_annoRiaccertato.annoRiaccertato,
t_numeroRiaccertato.numeroRiaccertato,
t_numeroOriginePlur.numeroOriginePlur,
t_flagDaRiaccertamento.flagDaRiaccertamento,
-- 19.02.2020 Sofia jira siac-7292
t_flagDaReanno.flagDaReanno,
t_numeroUEBOrigine.numeroUEBOrigine,
t_cig.cig,
t_cup.cup,
t_NOTE_MOVGEST.NOTE_MOVGEST,
t_validato.validato,
t_annoFinanziamento.annoFinanziamento,
t_numeroAccFinanziamento.numeroAccFinanziamento,
t_flagCassaEconomale.flagCassaEconomale,
attoamm.attoamm_anno, attoamm.attoamm_numero, attoamm.attoamm_oggetto, attoamm.attoamm_note,
attoamm.attoamm_tipo_code, attoamm.attoamm_tipo_desc, attoamm.attoamm_stato_desc, attoamm.attoamm_id,
impattuale.importo_attuale,
impiniziale.importo_iniziale,
imputilizzabile.importo_utilizzabile,
impliquidatoemessoquietanziato.importo_liquidato,
impliquidatoemessoquietanziato.importo_emesso,
impliquidatoemessoquietanziato,importo_quietanziato,
cofog.codice_cofog_gruppo,
cofog.descrizione_cofog_gruppo,
cofog.codice_cofog_divisione,
cofog.descrizione_cofog_divisione,
pdc5.pdc5_codice_pdc_finanziario_V,pdc5.pdc5_descrizione_pdc_finanziario_V,
pdc5.pdc5_codice_pdc_finanziario_IV,pdc5.pdc5_descrizione_pdc_finanziario_IV,
pdc5.pdc5_codice_pdc_finanziario_III,pdc5.pdc5_descrizione_pdc_finanziario_III,
pdc5.pdc5_codice_pdc_finanziario_II,pdc5.pdc5_descrizione_pdc_finanziario_II,
pdc5.pdc5_codice_pdc_finanziario_I,pdc5.pdc5_descrizione_pdc_finanziario_I,
pdc4.pdc4_codice_pdc_finanziario_IV,pdc4.pdc4_descrizione_pdc_finanziario_IV,
pdc4.pdc4_codice_pdc_finanziario_III,pdc4.pdc4_descrizione_pdc_finanziario_III,
pdc4.pdc4_codice_pdc_finanziario_II,pdc4.pdc4_descrizione_pdc_finanziario_II,
pdc4.pdc4_codice_pdc_finanziario_I,pdc4.pdc4_descrizione_pdc_finanziario_I,
pce5.pce5_codice_pdc_economico_V,pce5.pce5_descrizione_pdc_economico_V,
pce5.pce5_codice_pdc_economico_IV,pce5.pce5_descrizione_pdc_economico_IV,
pce5.pce5_codice_pdc_economico_III,pce5.pce5_descrizione_pdc_economico_III,
pce5.pce5_codice_pdc_economico_II,pce5.pce5_descrizione_pdc_economico_II,
pce5.pce5_codice_pdc_economico_I,pce5.pce5_descrizione_pdc_economico_I,
pce4.pce4_codice_pdc_economico_IV,pce4.pce4_descrizione_pdc_economico_IV,
pce4.pce4_codice_pdc_economico_III,pce4.pce4_descrizione_pdc_economico_III,
pce4.pce4_codice_pdc_economico_II,pce4.pce4_descrizione_pdc_economico_II,
pce4.pce4_codice_pdc_economico_I,pce4.pce4_descrizione_pdc_economico_I,
attoamm.cdc_cdc_code,attoamm.cdc_cdc_desc,attoamm.cdc_cdr_code,attoamm.cdc_cdr_desc,
attoamm.cdr_cdc_code,attoamm.cdr_cdc_desc,attoamm.cdr_cdr_code,attoamm.cdr_cdr_desc,
t_flagPrenotazione.flagPrenotazione, t_flagPrenotazioneLiquidabile.flagPrenotazioneLiquidabile,
t_flagFrazionabile.flagFrazionabile,
imp.siope_tipo_debito_code, imp.siope_tipo_debito_desc, imp.siope_tipo_debito_desc_bnkit,
imp.siope_assenza_motivazione_code, imp.siope_assenza_motivazione_desc, imp.siope_assenza_motivazione_desc_bnkit,
coalesce(impFlagAttivaGsa.flag_attiva_gsa,'N') flag_attiva_gsa, -- 28.05.2018 Sofia siac-6102
-- SIAC-7541 23.04.2020 Sofia
struttura_comp.cod_cdr_struttura_comp,
struttura_comp.desc_cdr_struttura_comp,
struttura_comp.cod_cdc_struttura_comp,
struttura_comp.desc_cdc_struttura_comp,
-- SIAC-7593 11.05.2020 Sofia
cap.comp_tipo_code,
cap.comp_tipo_desc,
cap.comp_tipo_macro_code,
cap.comp_tipo_macro_desc,
cap.comp_tipo_sotto_tipo_code,
cap.comp_tipo_sotto_tipo_desc,
cap.comp_tipo_ambito_code,
cap.comp_tipo_ambito_desc,
cap.comp_tipo_fonte_code,
cap.comp_tipo_fonte_desc,
cap.comp_tipo_fase_code ,
cap.comp_tipo_fase_desc,
cap.comp_tipo_def_code,
cap.comp_tipo_def_desc ,
cap.comp_tipo_gest_aut,
cap.comp_tipo_anno
-- SIAC-7593 11.05.2020 Sofia
from
imp left join cap
on
imp.movgest_id=cap.movgest_id
left join sogg
on
imp.movgest_ts_id=sogg.movgest_ts_id
left join sogcla
on
imp.movgest_ts_id=sogcla.movgest_ts_id
left join tipoimpegno
on
imp.movgest_ts_id=tipoimpegno.movgest_ts_id
left join ricorrentespesa
on
imp.movgest_ts_id=ricorrentespesa.movgest_ts_id
left join truespesa
on
imp.movgest_ts_id=truespesa.movgest_ts_id
left join persaspesa
on
imp.movgest_ts_id=persaspesa.movgest_ts_id
left join polregunitarie
on
imp.movgest_ts_id=polregunitarie.movgest_ts_id
left join cla11
on
imp.movgest_ts_id=cla11.movgest_ts_id
left join cla12
on
imp.movgest_ts_id=cla12.movgest_ts_id
left join cla13
on
imp.movgest_ts_id=cla13.movgest_ts_id
left join cla14
on
imp.movgest_ts_id=cla14.movgest_ts_id
left join cla15
on
imp.movgest_ts_id=cla15.movgest_ts_id
left join t_annoCapitoloOrigine
on
imp.movgest_ts_id=t_annoCapitoloOrigine.movgest_ts_id
left join t_numeroCapitoloOrigine
on
imp.movgest_ts_id=t_numeroCapitoloOrigine.movgest_ts_id
left join t_annoOriginePlur
on
imp.movgest_ts_id=t_annoOriginePlur.movgest_ts_id
left join t_numeroArticoloOrigine
on
imp.movgest_ts_id=t_numeroArticoloOrigine.movgest_ts_id
left join t_annoRiaccertato
on
imp.movgest_ts_id=t_annoRiaccertato.movgest_ts_id
left join t_numeroRiaccertato
on
imp.movgest_ts_id=t_numeroRiaccertato.movgest_ts_id
left join t_numeroOriginePlur
on
imp.movgest_ts_id=t_numeroOriginePlur.movgest_ts_id
left join t_flagDaRiaccertamento
on
imp.movgest_ts_id=t_flagDaRiaccertamento.movgest_ts_id
-- 19.02.2020 Sofia jira siac-7292
left join t_flagDaReanno
on
imp.movgest_ts_id=t_flagDaReanno.movgest_ts_id

left join t_numeroUEBOrigine
on
imp.movgest_ts_id=t_numeroUEBOrigine.movgest_ts_id
left join t_cig
on
imp.movgest_ts_id=t_cig.movgest_ts_id
left join t_cup
on
imp.movgest_ts_id=t_cup.movgest_ts_id
left join t_NOTE_MOVGEST
on
imp.movgest_ts_id=t_NOTE_MOVGEST.movgest_ts_id
left join t_validato
on
imp.movgest_ts_id=t_validato.movgest_ts_id
left join t_annoFinanziamento
on
imp.movgest_ts_id=t_annoFinanziamento.movgest_ts_id
left join t_numeroAccFinanziamento
on
imp.movgest_ts_id=t_numeroAccFinanziamento.movgest_ts_id
left join t_flagCassaEconomale
on
imp.movgest_ts_id=t_flagCassaEconomale.movgest_ts_id
left join attoamm
on
imp.movgest_ts_id=attoamm.movgest_ts_id
left join impattuale
on
imp.movgest_ts_id=impattuale.movgest_ts_id
left join impiniziale
on
imp.movgest_ts_id=impiniziale.movgest_ts_id
left join imputilizzabile
on
imp.movgest_ts_id=imputilizzabile.movgest_ts_id
left join impliquidatoemessoquietanziato
on
imp.movgest_ts_id=impliquidatoemessoquietanziato.movgest_ts_id
left join cofog
on
imp.movgest_ts_id=cofog.movgest_ts_id
left join pdc5
on
imp.movgest_ts_id=pdc5.movgest_ts_id
left join pdc4
on
imp.movgest_ts_id=pdc4.movgest_ts_id
left join pce5
on
imp.movgest_ts_id=pce5.movgest_ts_id
left join pce4
on
imp.movgest_ts_id=pce4.movgest_ts_id
left join t_flagPrenotazione
on
imp.movgest_ts_id=t_flagPrenotazione.movgest_ts_id
left join t_flagPrenotazioneLiquidabile
on
imp.movgest_ts_id=t_flagPrenotazioneLiquidabile.movgest_ts_id
left join t_flagFrazionabile
on
imp.movgest_ts_id=t_flagFrazionabile.movgest_ts_id
left join impFlagAttivaGsa  -- 28.05.2018 Sofia siac-6102
on
imp.movgest_ts_id=impFlagAttivaGsa.movgest_ts_id
-- SIAC-7541 23.04.2020 Sofia
left join struttura_comp
on
imp.movgest_id=struttura_comp.movgest_id
) xx
where xx.movgest_ts_tipo_code='S';

update siac_dwh_log_elaborazioni  set fnc_elaborazione_fine = clock_timestamp(),
fnc_durata=clock_timestamp()-fnc_elaborazione_inizio
where fnc_user=v_user_table;

esito:='ok';

EXCEPTION
WHEN others THEN
  esito:='Funzione carico impegni (FNC_SIAC_DWH_IMPEGNO) terminata con errori';
  RAISE NOTICE '%-%.',SQLSTATE,SQLERRM;
RETURN;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY DEFINER
COST 100 ROWS 1000;
--SIAC-6865 fine

--SIAC-7629 VARIAZIONE DI BILANCIO DECENTRATA CON LEGGE
INSERT INTO siac.siac_d_variazione_tipo (variazione_tipo_id, variazione_tipo_code, variazione_tipo_desc, validita_inizio, validita_fine, ente_proprietario_id, data_creazione, data_modifica, data_cancellazione, login_operazione)
select  nextval('siac.siac_d_variazione_tipo_variazione_tipo_id_seq')  
,'VL'
,'VARIAZIONE DI BILANCIO DECENTRATA CON LEGGE'
, '2020-08-26 00:00:00'
, null
,ente.ente_proprietario_id
,'2020-08-26 00:00:00'
,'2020-08-26 00:00:00'
,null
,'SIAC-7629'
from siac.siac_t_ente_proprietario ente
WHERE NOT EXISTS (
	SELECT 1
	FROM siac.siac_d_variazione_tipo dbt
	WHERE dbt.ente_proprietario_id = ente.ente_proprietario_id
	AND dbt.variazione_tipo_id=(SELECT variazione_tipo_id 
	 FROM siac.siac_d_variazione_tipo 
	 WHERE variazione_tipo_code=TRIM('VL')  AND ente_proprietario_id=ente.ente_proprietario_id )
);
--SIAC-7629 fine 

-- SIAC-7782 - 06.10.2020 Sofia - inizio 
update siac_d_bil_elem_det_comp_tipo tipo
set    elem_det_comp_macro_tipo_id=macro.elem_det_comp_macro_tipo_id,
       elem_det_comp_sotto_tipo_id=sotto_tipo.elem_det_comp_sotto_tipo_id,
       elem_det_comp_tipo_imp_id=imp.elem_det_comp_tipo_imp_id,
       elem_det_comp_tipo_fonte_id=fonte.elem_det_comp_tipo_fonte_id,
       elem_det_comp_tipo_fase_id=fase.elem_det_comp_tipo_fase_id,
       elem_det_comp_tipo_ambito_id=null,
       data_modifica=now(),
       login_operazione=tipo.login_operazione||'-SIAC-7782'
from siac_d_bil_elem_det_comp_macro_tipo macro,
     siac_d_bil_elem_det_comp_sotto_tipo sotto_tipo,
     siac_d_bil_elem_Det_comp_tipo_fonte fonte,
     siac_d_bil_elem_det_comp_tipo_fase fase,
     siac_d_bil_elem_det_comp_tipo_imp imp
where tipo.ente_proprietario_id=2
and   tipo.elem_det_comp_tipo_desc='FPV di spesa (specchio)'
and   macro.ente_proprietario_id=2
and   macro.elem_det_comp_macro_tipo_desc='FPV'
and   imp.ente_proprietario_id=2
and   imp.elem_det_comp_tipo_imp_desc='No'
and   sotto_tipo.ente_proprietario_id=2
and   sotto_tipo.elem_det_comp_sotto_tipo_desc='Cumulato'
and   fase.ente_proprietario_id=2
and   fase.elem_det_comp_tipo_fase_desc='Gestione'
and   fonte.ente_proprietario_id=2
and   fonte.elem_det_comp_tipo_fonte_desc='Fresco'
and   tipo.elem_det_comp_macro_tipo_id!=macro.elem_det_comp_macro_tipo_id
and   tipo.data_cancellazione is null;
-- SIAC-7782 - 06.10.2020 Sofia - fine

-- SIAC-7796
CREATE OR REPLACE FUNCTION siac.fnc_siac_stanz_effettivo_up_anno_comp (
  id_in integer,
  id_comp integer,
  anno_comp_in varchar
  
)
RETURNS TABLE (
  elemid integer,
  annocompetenza varchar,
  stanzeffettivo numeric,
  stanzeffettivocassa numeric,
  massimoimpegnabile numeric
)
LANGUAGE 'plpgsql'
COST 100
VOLATILE
ROWS 1000
AS $BODY$
DECLARE


-- constant
TIPO_CAP_UG constant varchar:='CAP-UG';
TIPO_CAP_UP constant varchar:='CAP-UP';
NVL_STR     constant varchar:='';
STA_IMP     constant varchar:='STA';
STA_IMP_SCA     constant varchar:='SCA';
STA_IMP_MI     constant varchar:='MI'; -- tipo importo massimo impegnabile

-- fasi di bilancio
FASE_BIL_PREV  constant varchar:='P'; -- previsione
FASE_BIL_PROV  constant varchar:='E'; -- esercizio provvisorio
FASE_BIL_GEST  constant varchar:='G'; -- esercizio gestione
FASE_BIL_CONS  constant varchar:='O'; -- esercizio consuntivo
FASE_BIL_CHIU  constant varchar:='C'; -- esercizio chiuso

-- stati variazioni di importo
STATO_VAR_G    constant varchar:='G'; -- GIUNTA
STATO_VAR_C    constant varchar:='C'; -- CONSIGLIO
STATO_VAR_D    constant varchar:='D'; -- DEFINITIVA
STATO_VAR_B    constant varchar:='B'; -- BOZZA
--- 31.03.2016 Sofia SIAC-3304 aggiunto stato P
STATO_VAR_P    constant varchar:='P'; -- PRE-DEFINITIVO

bilancioId integer:=0;
bilElemId  integer:=0;
bilElemGestId  integer:=0;

strMessaggio varchar(1500):=NVL_STR;

bilFaseOperativa varchar(10):=NVL_STR;
annoBilancio varchar(10):=NVL_STR;

stanziamentoPrev numeric:=0;
stanziamentoPrevCassa numeric:=0;
stanziamento numeric:=0;
stanziamentoEff numeric:=0;
deltaMenoPrev numeric:=0;
varImpGestione numeric:=0;
deltaMenoGest numeric:=0;
deltaMenoPrevCassa numeric:=0;
varImpGestioneCassa numeric:=0;
deltaMenoGestCassa numeric:=0;
stanziamentoEffCassa numeric:=0;
stanziamentoCassa numeric:=0;
stanzMassimoImpegnabile numeric:=null;
enteProprietarioId INTEGER:=0;
periodoId integer:=0;
periodoCompId integer:=0;

BEGIN

     annoCompetenza:=null;
     stanzEffettivo:=null;
     stanzEffettivoCassa:=null;
     elemId:=null;
     massimoImpegnabile:=null;

      -- controllo parametri
      -- anno_comp_in obbligatorio
      -- se id_in non serve altro
      -- diversamente deve essere passato
      -- ente_prop_id, anno_in o bil_id_in
      --  e  la chiave logica del capitolo
      -- ele_code_in,ele_code2_in,ele_code3_in

     strMessaggio:='Calcolo stanziamento effettivo.Controllo parametri.';

     if anno_comp_in is null or anno_comp_in=NVL_STR then
         	RAISE EXCEPTION '% Anno di competenza mancante.',strMessaggio;
     end if;
 
     if id_comp is null or id_comp=0 then
         	RAISE EXCEPTION '% Id componente mancante.',strMessaggio;
     end if;

     if id_in is null or id_in=0 then

          if  ( (bil_id_in is null or bil_id_in=0) and (ente_prop_in is null or ente_prop_in=0)) then
         	     RAISE EXCEPTION '% Id ente proprietario mancante.',strMessaggio;
          end if;

          if ele_code_in is null or ele_code_in=NVL_STR or ele_code2_in is null or ele_code2_in=NVL_STR or ele_code3_in is null or ele_code3_in=NVL_STR then
         	     RAISE EXCEPTION '% Chiave logica elem.Bil. mancante.',strMessaggio;
          end if;

          if ( (bil_id_in is null or bil_id_in=0 ) and (anno_in is null or anno_in=NVL_STR)) then
         	     RAISE EXCEPTION '% Anno bilancio mancante.',strMessaggio;
          end if;
     end if;


     if id_in is not null and id_in!=0 then

          strMessaggio:='Lettura identificativo bilancioId, annoBilancio e enteProprietarioId da elemento di bilancio elem_id='||id_in||'.';
         	select bil.bil_id, per.anno, bilElem.ente_proprietario_id
                    into strict bilancioId, annoBilancio, enteProprietarioId
             from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo tipoBilElem,
                  siac_t_bil bil, siac_t_periodo per
             where bilElem.elem_id=id_in
             and   bilElem.data_cancellazione is null
             and   bilElem.validita_fine is null
             and   tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
             and   tipoBilElem.elem_tipo_code = TIPO_CAP_UP
             and   bil.bil_id=bilElem.bil_id
             and   per.periodo_id=bil.periodo_id;
             bilElemId:=id_in;
     else
          if bil_id_in is not null and bil_id_in!=0  then
      	     bilancioId:=bil_id_in;
          end if;
     end if;

     if bilancioId is not null and bilancioId!=0 then
          strMessaggio:='Lettura identificativo annoBilancio enteProprietarioId periodoId elemento di bilancio elem_id='||id_in
                   ||' per bilancioId='||bilancioId||'.';

          select per.anno,  bil.ente_proprietario_id, per.periodo_id into strict annoBilancio, enteProprietarioId, periodoId
          from siac_t_bil bil, siac_t_periodo per
          where bil.bil_id=bilancioId 
                and per.periodo_id=bil.periodo_id;
     end if;

     if bilElemId is null or bilElemId=0 then
          strMessaggio:='Lettura identificativo elemento di bilancio '||ele_code_in||'/'||ele_code2_in||'/'||ele_code3_in||'.';
          if bilancioId is not null and bilancioId!=0 then
      	     strMessaggio:='Lettura identificativo elemento di bilancio '||ele_code_in||'/'||ele_code2_in||'/'||ele_code3_in
                         ||'  per bilancioId='||bilancioId||' .';
               select bilElem.elem_id into strict bilElemId
               from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo tipoBilElem
               where bilElem.bil_id=bilancioId
               and   bilElem.elem_code=ele_code_in
               and   bilElem.elem_code2=ele_code2_in
               and   bilElem.elem_code3=ele_code3_in
               and   bilElem.data_cancellazione is null
               and   bilElem.validita_fine is null
               and   tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
               and   tipoBilElem.elem_tipo_code = TIPO_CAP_UP;
          else
     	     strMessaggio:='Lettura identificativo elemento di bilancio '||ele_code_in||'/'||ele_code2_in||'/'||ele_code3_in
                         ||'  bilancioId periodoId per annoBilancioIn='||anno_in||' enteProprietarioIn'||ente_prop_in||' .';
               select bilElem.elem_id, bilelem.bil_id, per.periodo_id into strict bilElemId, bilancioId, periodoId
               from siac_t_bil_elem bilElem, siac_d_bil_elem_tipo tipoBilElem,
               siac_t_bil bil, siac_t_periodo per, siac_d_periodo_tipo tipoPer
               where per.anno=anno_in
               and   per.ente_proprietario_id=ente_prop_in
               and   tipoPer.periodo_tipo_id=per.periodo_tipo_id
               and   tipoPer.periodo_tipo_code='SY'
               and   bil.periodo_id=per.periodo_id
               and   bilElem.bil_id=bil.bil_id
               and   bilElem.elem_code=ele_code_in
               and   bilElem.elem_code2=ele_code2_in
               and   bilElem.elem_code3=ele_code3_in
               and   bilElem.data_cancellazione is null
               and   bilElem.validita_fine is null
               and   tipoBilElem.elem_tipo_id=bilElem.elem_tipo_id
               and   tipoBilElem.elem_tipo_code = TIPO_CAP_UP;

               annoBilancio:=anno_in;
               enteProprietarioId:=ente_prop_in;

          end if;    
     end if;

     strMessaggio:='Lettura fase di bilancio corrente per  anno bilancio='||annoBilancio||' bilancioId='||bilancioId||'.';
     select faseop.fase_operativa_code into strict bilFaseOperativa
     from siac_d_fase_operativa faseOp, siac_r_bil_fase_operativa bilFaseOp
     where bilfaseop.bil_id=bilancioId 
          and bilfaseop.data_cancellazione is null
          and bilfaseop.validita_fine is null
          and faseOp.fase_operativa_id = bilfaseop.fase_operativa_id
          and faseOp.data_cancellazione is null
          and faseOp.validita_fine is null;


     if bilFaseOperativa not in ( FASE_BIL_PREV, FASE_BIL_PROV, FASE_BIL_GEST,FASE_BIL_CONS,FASE_BIL_CHIU) then
        	RAISE EXCEPTION '% Fase non ammessa per il calcolo richiesto.',strMessaggio;
     end if;

     if anno_comp_in!=annoBilancio then
      	strMessaggio:='Lettura periodoCompId per anno_comp_in='||anno_comp_in||' elem_id='||bilElemId||'.';
          select  per.periodo_id into strict periodoCompId
          from siac_t_periodo per, siac_d_periodo_tipo perTipo
          where per.anno=anno_comp_in
          and   per.ente_proprietario_id=enteProprietarioId
          and   perTipo.periodo_tipo_id=per.periodo_tipo_id
          and   perTipo.periodo_tipo_code='SY';
     else
          periodoCompId:=periodoId;
     end if;

     if bilFaseOperativa = FASE_BIL_PROV then
          strMessaggio:='Lettura elemento di bilancio equivalente di gestione per elem_id='||bilElemId||'.';
          select bilElemGest.elem_id into  bilElemGestId
          from siac_t_bil_elem bilElemPrev, siac_d_bil_elem_tipo tipoGest,
               siac_t_bil_elem bilElemGest
          where bilElemPrev.elem_id=bilElemId
          and bilElemGest.elem_code=bilElemPrev.elem_code
          and bilElemGest.elem_code2=bilElemPrev.elem_code2 
          and bilElemGest.elem_code3=bilElemPrev.elem_code3
          and bilElemGest.ente_proprietario_id=bilElemPrev.ente_proprietario_id
          and bilElemGest.bil_id=bilElemPrev.bil_id
          and bilElemGest.data_cancellazione is null 
          and bilElemGest.validita_fine is null
          and tipoGest.elem_tipo_id=bilElemGest.elem_tipo_id
          and tipoGest.elem_tipo_code=TIPO_CAP_UG;

          if NOT FOUND then
          	bilElemGestId:=0;
          end if;
     end if;

     strMessaggio:='Lettura stanziamenti di previsione per elem_id='||bilElemId||' anno_comp_in='||anno_comp_in||'.';

     /*SIAC - 7349*/
     select comp.elem_det_importo  into strict stanziamentoPrev
     from siac_t_bil_elem_det importiPrev,
     	siac_d_bil_elem_det_tipo tipoImpPrev,
     	siac_t_bil_elem_det_comp comp,
     	siac_d_bil_elem_det_comp_tipo comptipo
     where importiPrev.elem_id=bilElemId
     	and comp.elem_det_id = importiPrev.elem_det_id
          and importiPrev.data_cancellazione is null 
          and importiPrev.validita_fine is null
     	and tipoImpPrev.elem_det_tipo_id=importiPrev.elem_det_tipo_id 
          and tipoImpPrev.elem_det_tipo_code=STA_IMP
     	and comp.data_cancellazione is null and comp.validita_fine is null
          and importiPrev.periodo_id=periodoCompId
     	and comptipo.data_cancellazione is null 
        -- SIAC-7796
		-- and comptipo.validita_fine is null  
     	and comp.elem_det_comp_tipo_id = comptipo.elem_det_comp_tipo_id
     	and comptipo.elem_det_comp_tipo_id = id_comp
	-- SIAC-7349 Aggiunto non exists per escludere le componenti che sono collegate come "nuovi dettagli" tramite variazione in stato diverso da definitivo
		and not (exists (
			select siactbilel4_.elem_det_var_comp_id
			from 	siac_t_bil_elem_det_var_comp siactbilel4_
					cross join siac_t_bil_elem_det_var siactbilel5_
					cross join siac_r_variazione_stato siacrvaria6_
					cross join siac_d_variazione_stato siacdvaria7_
			where 	siactbilel4_.elem_det_var_id=siactbilel5_.elem_det_var_id
				and siactbilel5_.variazione_stato_id=siacrvaria6_.variazione_stato_id
				and siacrvaria6_.variazione_stato_tipo_id=siacdvaria7_.variazione_stato_tipo_id
				and siactbilel4_.elem_det_comp_id=comp.elem_det_comp_id
				and siactbilel4_.elem_det_flag='N'
				and siacdvaria7_.variazione_stato_tipo_code<>'D'
				and siactbilel4_.data_cancellazione is null
				and siactbilel5_.data_cancellazione is null
				and siacrvaria6_.data_cancellazione is null
			));

     if anno_comp_in=annoBilancio then
           strMessaggio:='Lettura stanziamenti di previsione cassa per elem_id='||bilElemId||' anno_comp_in='||anno_comp_in||'.';
           select importiprev.elem_det_importo into strict stanziamentoPrevCassa
           from siac_t_bil_elem_det importiPrev, siac_d_bil_elem_det_tipo tipoImpPrev
           where importiPrev.elem_id=bilElemId
      	     and importiPrev.data_cancellazione is null 
               and importiPrev.validita_fine is null
        	   	and tipoImpPrev.elem_det_tipo_id=importiPrev.elem_det_tipo_id
     	     and tipoImpPrev.elem_det_tipo_code=STA_IMP_SCA
     	     and importiPrev.periodo_id=periodoCompId;
     end if;


  
     if bilFaseOperativa in (FASE_BIL_PROV,FASE_BIL_PREV) then --1
          --- calcolo dei 'delta-previsione', variazioni agli importi del CAP-UP in stato
     	--- diverso da BOZZA,DEFINTIVO,ANNULLATO
        	strMessaggio:='Lettura variazioni delta-meno-prev per elem_id='||bilElemId||' anno_comp_in='||
                            anno_comp_in||'.';
     
     	/*SIAC - 7349*/
         /*ERRORE RISCONTRATO NEL TEST FASE DI PREV - mr*/
	     /*select   coalesce(sum(abs(bilElemDetVarComp.elem_det_importo)),0) into strict deltaMenoPrev
          from siac_t_variazione var,
              	siac_r_variazione_stato statoVar,
	     	siac_d_variazione_stato tipoStatoVar,
               siac_t_bil_elem_det_var bilElemDetVar,
	     	siac_d_bil_elem_det_tipo bilElemDetVarTipo,
               siac_t_bil_elem_det_var_comp bilElemDetVarComp,
               siac_d_bil_elem_det_comp_tipo bilElemDetCompTipo, 
               siac_t_bil_elem_det_comp bilElemDetComp
              where bilElemDetVar.elem_id=bilElemId
             	     and bilElemDetVar.data_cancellazione is null 
                    and bilElemDetVar.validita_fine is null
                    and bilElemDetVar.periodo_id=periodoCompId
	     	     and bilElemDetVar.elem_det_importo<0
  	               and bilElemDetVar.elem_det_tipo_id=bilElemDetVarTipo.elem_det_tipo_id
                    and bilElemDetVarTipo.elem_det_tipo_code=STA_IMP
                    and bilElemDetVar.variazione_stato_id=statoVar.variazione_stato_id
                    and statoVar.data_cancellazione is null 
                    and statoVar.validita_fine is null
                    and tipoStatoVar.variazione_stato_tipo_id=statoVar.variazione_stato_tipo_id
                    and tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_B,STATO_VAR_P) -- 1109015 Sofia aggiunto STATO_VAR_B
	     		and tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_P) -- Sofia 26072016 JIRA-SIAC-3887
                    and var.variazione_id=statoVar.variazione_id
                    and var.data_cancellazione is null and var.validita_fine is null
                    and var.bil_id= bilancioId
	     		and bilElemDetVarComp.data_cancellazione is null and bilElemDetVarComp.validita_fine is null
	     		and bilElemDetComp.data_cancellazione is null and bilElemDetComp.validita_fine is null
                    and bilElemDetVarComp.elem_det_var_id = bilElemDetVar.elem_det_var_id
                    and bilElemDetComp.elem_det_comp_tipo_id =  bilElemDetCompTipo.elem_det_comp_tipo_id
	     		and bilElemDetCompTipo.elem_det_comp_tipo_id = id_comp; --adeguamento*/
          
          select  coalesce(sum(abs(bilElemDetVarComp.elem_det_importo)),0) into strict deltaMenoPrev
			from siac_t_variazione var,
			siac_r_variazione_stato statoVar,
			siac_d_variazione_stato tipoStatoVar,
			siac_t_bil_elem_det_var bilElemDetVar,
			siac_d_bil_elem_det_tipo bilElemDetVarTipo,
			siac_t_bil_elem_det_var_comp bilElemDetVarComp,
			siac_d_bil_elem_det_comp_tipo bilElemDetCompTipo --adeguamento 
			where bilElemDetVar.elem_id=bilElemId and
			bilElemDetVar.data_cancellazione is null and bilElemDetVar.validita_fine is null and
			bilElemDetVar.periodo_id=periodoCompId and
			bilElemDetVar.elem_det_importo<0 AND
			bilElemDetVar.elem_det_tipo_id=bilElemDetVarTipo.elem_det_tipo_id and
			bilElemDetVarTipo.elem_det_tipo_code=STA_IMP and
			bilElemDetVar.variazione_stato_id=statoVar.variazione_stato_id and
			statoVar.data_cancellazione is null and statoVar.validita_fine is null and
			tipoStatoVar.variazione_stato_tipo_id=statoVar.variazione_stato_tipo_id and
			-- tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_B,STATO_VAR_P) and -- 1109015 Sofia aggiunto STATO_VAR_B
			tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_P) and -- Sofia 26072016 JIRA-SIAC-3887
			var.variazione_id=statoVar.variazione_id and
			var.data_cancellazione is null and var.validita_fine is null and
			var.bil_id= bilancioId and
			bilElemDetVarComp.data_cancellazione is null and bilElemDetVarComp.validita_fine is null and
			bilElemDetVarComp.elem_det_var_id = bilElemDetVar.elem_det_var_id				
			and bilElemDetCompTipo.elem_det_comp_tipo_id = id_comp;                  

          if  bilFaseOperativa =FASE_BIL_PROV and bilElemGestId!=0 then --2
          --- calcolo variazioni applicate alla gestione, variazioni agli importi CAP-UG
               strMessaggio:='Lettura variazioni di gestione per elem_id='||bilElemGestId||' anno_comp_in='||
                       anno_comp_in||'.';
	
	          select coalesce(sum(bilElemDetVarComp.elem_det_importo),0) into strict varImpGestione
                  from siac_t_variazione var,
                       siac_r_variazione_stato statoVar,
                       siac_d_variazione_stato tipoStatoVar,
                       siac_t_bil_elem_det_var bilElemDetVar,
                       siac_d_bil_elem_det_tipo bilElemDetVarTipo,
                       siac_t_bil_elem_det_var_comp bilElemDetVarComp,
                       siac_d_bil_elem_det_comp_tipo bilElemDetCompTipo, --adeguamento
                       siac_t_bil_elem_det_comp bilElemDetComp
                     -- where bilElemDetVar.elem_id=bilElemId --SIAC-7349 Fix TC su calcolo disponibilita' variare - GS - 10/07/2020
                    where bilElemDetVar.elem_id=bilElemGestId --SIAC-7349 Fix TC su calcolo disponibilita' variare - GS - 10/07/2020
                    and bilElemDetVar.data_cancellazione is null 
                    and bilElemDetVar.validita_fine is null
                    and bilElemDetVar.periodo_id=periodoCompId
  	               and bilElemDetVar.elem_det_tipo_id=bilElemDetVarTipo.elem_det_tipo_id
                    and bilElemDetVarTipo.elem_det_tipo_code=STA_IMP
                    and bilElemDetVar.variazione_stato_id=statoVar.variazione_stato_id
                    and statoVar.data_cancellazione is null and statoVar.validita_fine is null
                    and tipoStatoVar.variazione_stato_tipo_id=statoVar.variazione_stato_tipo_id
                    and tipoStatoVar.variazione_stato_tipo_code=STATO_VAR_D
                    and var.variazione_id=statoVar.variazione_id
                    and var.data_cancellazione is null 
                    and var.validita_fine is null
                    and var.bil_id=bilancioId
                    and bilElemDetVarComp.elem_det_var_id = bilElemDetVar.elem_det_var_id
                    and bilElemDetVarComp.elem_det_comp_id = bilElemDetComp.elem_det_comp_id
	          	and bilElemDetComp.elem_det_comp_tipo_id =  bilElemDetCompTipo.elem_det_comp_tipo_id
	          	and bilElemDetCompTipo.elem_det_comp_tipo_id = id_comp --adeguamento
	          	and bilElemDetVarComp.data_cancellazione is null 
                    and bilElemDetVarComp.validita_fine is null 
                    and bilElemDetComp.data_cancellazione is null 
                    and bilElemDetComp.validita_fine is null;


          end if; --2
     end if; --1

     if bilFaseOperativa in ( FASE_BIL_PROV) and bilElemGestId!=0 then


			  strMessaggio:='Lettura stanziamenti di gestione per elem_id='||bilElemGestId||' anno_comp_in='||anno_comp_in||'.';
			--SIAC-7349
				-- SIAC-7796: 	defaultato a zero gli importi nel caso di componente mancante in gestione equivalente 
				-- select comp.elem_det_importo	into strict stanziamento
			  select coalesce(comp.elem_det_importo, 0) into stanziamento
			from siac_t_bil_elem_det importiGest,
			siac_d_bil_elem_det_tipo tipoImp,
			  siac_t_bil_elem_det_comp comp,
			siac_d_bil_elem_det_comp_tipo comptipo
			-- where importiGest.elem_id=bilElemId --SIAC-7349 Fix TC su calcolo disponibilita' variare - GS - 10/07/2020
			where importiGest.elem_id=bilElemGestId --SIAC-7349 Fix TC su calcolo disponibilita' variare - GS - 10/07/2020    	
			and importiGest.data_cancellazione is null 
			  and importiGest.validita_fine is null
				 and tipoImp.elem_det_tipo_id=importiGest.elem_det_tipo_id
			  and tipoImp.elem_det_tipo_code=STA_IMP
				 and importiGest.periodo_id=periodoCompId
			  and comp.elem_det_id = importiGest.elem_det_id
			 and comp.elem_det_comp_tipo_id = comptipo.elem_det_comp_tipo_id
			 and comp.data_cancellazione is null 
			  and comp.validita_fine is null
			  and comptipo.data_cancellazione is null 
			  -- SIAC-7796
			  -- and comptipo.validita_fine is null
			 and comptipo.elem_det_comp_tipo_id = id_comp
			-- SIAC-7349 Aggiunto non exists per escludere le componenti che sono collegate come "nuovi dettagli" tramite variazione in stato diverso da definitivo
			and not (exists (
				select siactbilel4_.elem_det_var_comp_id
				from 	siac_t_bil_elem_det_var_comp siactbilel4_
						cross join siac_t_bil_elem_det_var siactbilel5_
						cross join siac_r_variazione_stato siacrvaria6_
						cross join siac_d_variazione_stato siacdvaria7_
				where 	siactbilel4_.elem_det_var_id=siactbilel5_.elem_det_var_id
					and siactbilel5_.variazione_stato_id=siacrvaria6_.variazione_stato_id
					and siacrvaria6_.variazione_stato_tipo_id=siacdvaria7_.variazione_stato_tipo_id
					and siactbilel4_.elem_det_comp_id=comp.elem_det_comp_id
					and siactbilel4_.elem_det_flag='N'
					and siacdvaria7_.variazione_stato_tipo_code<>'D'
					and siactbilel4_.data_cancellazione is null
					and siactbilel5_.data_cancellazione is null
					and siacrvaria6_.data_cancellazione is null
				));	     

	     
	     
          --- calcolo dei 'delta-gestione', variazioni agli importi del CAP-UG in stato
          --- diverso da BOZZA,DEFINTIVO,ANNULLATO
          strMessaggio:='Lettura variazioni delta-meno-gest per elem_id='||bilElemGestId||' anno_comp_in='||
                           anno_comp_in||'.';
		
     	--SIAC-7349
     	select coalesce(sum(abs(bilElemDetVarComp.elem_det_importo)),0) into strict deltaMenoGest
          from siac_t_variazione var,
          siac_r_variazione_stato statoVar,
          siac_d_variazione_stato tipoStatoVar,
	     siac_t_bil_elem_det_var bilElemDetVar,
          siac_d_bil_elem_det_tipo bilElemDetVarTipo,
          siac_t_bil_elem_det_var_comp bilElemDetVarComp,
          siac_d_bil_elem_det_comp_tipo bilElemDetCompTipo, --adeguamento
          siac_t_bil_elem_det_comp bilElemDetComp
     	  -- where bilElemDetVar.elem_id=bilElemId --SIAC-7349 Fix TC su calcolo disponibilita' variare - GS - 10/07/2020
          where bilElemDetVar.elem_id=bilElemGestId --SIAC-7349 Fix TC su calcolo disponibilita' variare - GS - 10/07/2020    	
          and bilElemDetVar.data_cancellazione is null 
          and bilElemDetVar.validita_fine is null
          and bilElemDetVar.periodo_id=periodoCompId
		and bilElemDetVar.elem_det_importo<0
  	    	and bilElemDetVar.elem_det_tipo_id=bilElemDetVarTipo.elem_det_tipo_id
	     and bilElemDetVarTipo.elem_det_tipo_code=STA_IMP
    	     and bilElemDetVar.variazione_stato_id=statoVar.variazione_stato_id
	     and statoVar.data_cancellazione is null 
          and statoVar.validita_fine is null
    	     and tipoStatoVar.variazione_stato_tipo_id=statoVar.variazione_stato_tipo_id
       	--and tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_B,STATO_VAR_P) and --1109015 Sofia aggiunto STATO_VAR_B
      	--and tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_P) and -- 26072016 Sofia JIRA-SIAC-3887
       	and tipoStatoVar.variazione_stato_tipo_code in (STATO_VAR_G,STATO_VAR_C,STATO_VAR_P,STATO_VAR_B) -- 14.102016 Sofia JIRA-SIAC-4099 riaggiunto B
          and var.variazione_id=statoVar.variazione_id
          and var.data_cancellazione is null and var.validita_fine is null
     	and var.bil_id=bilancioId
          and bilElemDetVarComp.elem_det_var_id = bilElemDetVar.elem_det_var_id
          and bilElemDetVarComp.elem_det_comp_id = bilElemDetComp.elem_det_comp_id
     	and bilElemDetVarComp.data_cancellazione is null 
          and bilElemDetVarComp.validita_fine is null  
          and bilElemDetComp.data_cancellazione is null 
          and bilElemDetComp.validita_fine is null  
     	and bilElemDetComp.elem_det_comp_tipo_id =  bilElemDetCompTipo.elem_det_comp_tipo_id
     	and bilElemDetCompTipo.elem_det_comp_tipo_id = id_comp; --adeguamento

     end if;


     stanziamentoPrev:= stanziamentoPrev-deltaMenoPrev;




     strMessaggio:='Stanziamento effettivo elem_id='||bilElemId||'.';
     case
          when bilFaseOperativa=FASE_BIL_PROV then
 --  		
   		     if stanziamentoPrev>stanziamento-deltaMenoGest then
                    stanziamentoEff:=stanziamento-deltaMenoGest;
               else 
                    stanziamentoEff:=stanziamentoPrev;
               end if;

               if anno_comp_in=annoBilancio then
--             if stanziamentoPrevCassa>stanziamentoCassa then 26072016 Sofia JIRA-SIAC-3887
                    if stanziamentoPrevCassa>stanziamentoCassa-deltaMenoGestCassa then
                    /* 04.07.2016 Sofia ID-INC000001114035
        	          stanziamentoEffCassa:=stanziamentoCassa; **/
                         stanziamentoEffCassa:=stanziamentoCassa-deltaMenoGestCassa;
                    else 
                         stanziamentoEffCassa:=stanziamentoPrevCassa;
                    end if;
               end if;
     else

   	     stanziamentoEff:=stanziamentoPrev;
          if anno_comp_in=annoBilancio then
               stanziamentoEffCassa:=stanziamentoPrevCassa;
          end if;

     end case;

  /* 04.07.2016 Sofia ID-INC000001114035
 -- stanziamentoEff abbattutto dai 'delta-gestione'
 stanziamentoEff:=stanziamentoEff-deltaMenoGest;
 if anno_comp_in = annoBilancio then
  stanziamentoEffCassa:=stanziamentoEffCassa-deltaMenoGestCassa;
 end if; */



     elemId:=bilElemId;
     annoCompetenza:=anno_comp_in;
     stanzEffettivo:=stanziamentoEff;
     if anno_comp_in = annoBilancio then
     stanzEffettivoCassa:=stanziamentoEffCassa;
     end if;
     if stanzMassimoImpegnabile is not null then
        	massimoImpegnabile:=stanzMassimoImpegnabile;
     end if;

     return next;


     exception
         when RAISE_EXCEPTION THEN
             RAISE EXCEPTION '%',substring(SQLERRM from 1 for 1500);
             return;
     	when no_data_found then
     		RAISE EXCEPTION '% Non presente in archivio.',strMessaggio;
             return;
     	when others  THEN
      		RAISE EXCEPTION '% Errore DB % %',strMessaggio,SQLSTATE,substring(SQLERRM from 1 for 1000);
             return;

END;
$BODY$;

ALTER FUNCTION siac.fnc_siac_stanz_effettivo_up_anno_comp (id_in integer, id_comp integer, anno_comp_in varchar)
  OWNER TO siac;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_stanz_effettivo_up_anno_comp (id_in integer, id_comp integer, anno_comp_in varchar) TO siac_rw;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_stanz_effettivo_up_anno_comp (id_in integer, id_comp integer, anno_comp_in varchar) TO PUBLIC;

--GRANT EXECUTE ON FUNCTION siac.fnc_siac_stanz_effettivo_up_anno_comp (id_in integer, id_comp integer, anno_comp_in varchar) TO siac;

-- START SIAC-7639

-- ========================================= MODIFICA PDC ===========================================

/*
*SPDX-FileCopyrightText: Copyright 2020 | CSI Piemonte
*SPDX-License-Identifier: EUPL-1.2
*/
CREATE OR REPLACE FUNCTION siac.fnc_siac_bko_modifica_pdc(
    p_loginOperazione character varying, 
    p_enteProprietarioId integer, 
    p_ordTipoCode character varying, 
    p_annoBilancio character varying, 
    p_ordNumero integer, 
    p_eventoCode character varying, 
	p_eventoTipoCode character varying,
    p_pdcOrdinativoCode character varying,
    p_modificaAccertamento integer,
    p_aggiornaGenerale integer,
    p_aggiornaGeneraleGSA integer,
    p_inserisciGenerale integer,
    p_inserisciGeneraleGSA integer
)
RETURNS VARCHAR
AS $body$
DECLARE
	v_messaggiorisultato VARCHAR:= NULL;
	v_id_r_class INTEGER:=NULL;
	v_result INTEGER:=NULL;
	v_ord_id INTEGER:=NULL;
	v_ord_anno INTEGER:=NULL;
	v_pdc_ord INTEGER:=NULL;
    v_login_operazione VARCHAR:='BackofficeModificaPianoDeiContiOrdinativo';
   	v_ambito VARCHAR:=NULL;
BEGIN
	
  	RAISE NOTICE '[fnc_siac_bko_modifica_pdc] MODIFICA PDC: [INIZIO].';

	v_ord_anno:= CAST( p_annoBilancio AS INTEGER );

	SELECT stc.classif_id INTO v_pdc_ord
	FROM siac_t_class stc 
	JOIN siac_t_ente_proprietario step ON stc.ente_proprietario_id = step.ente_proprietario_id AND step.ente_proprietario_id = p_enteProprietarioId 
	JOIN siac_d_class_tipo sdct ON stc.classif_tipo_id = sdct.classif_tipo_id 
	WHERE stc.classif_code = p_pdcOrdinativoCode
	AND sdct.classif_tipo_code = 'PDC_V'
	AND stc.data_cancellazione IS NULL 
	AND ( stc.validita_fine IS  NULL OR stc.validita_fine < current_timestamp );

    IF v_pdc_ord IS NULL THEN
        RAISE EXCEPTION ' NESSUN CLASSIFICATORE TROVATO ';
	ELSE
		v_messaggiorisultato:=' TROVATO CLASSIFICATORE con id: '||v_pdc_ord||'. ';
    END IF;

    RAISE NOTICE '[fnc_siac_bko_modifica_pdc] MODIFICA PDC: % ', v_messaggiorisultato;

    v_result:= (
    	SELECT siac.fnc_siac_bko_modifica_pdc_ordinativo(
	        p_loginOperazione, 
	        p_enteProprietarioId, 
	        p_ordTipoCode, 
	        p_annoBilancio, 
	        v_ord_anno, 
	        p_ordNumero, 
	        v_pdc_ord
	    )
   	);

    IF v_result <> 0 THEN
        RAISE EXCEPTION ' EXCEPTION: fnc_siac_bko_modifica_pdc_ordinativo  ';
    END IF;

-- ENTRATA
    IF p_modificaAccertamento != 0 THEN 
        v_result:= (
        	SELECT siac.fnc_siac_bko_modifica_pdc_ordinativo_accertamento(
	            p_loginOperazione, 
	            p_enteProprietarioId, 
	            p_ordTipoCode, 
	            p_annoBilancio, 
	            v_ord_anno, 
	            p_ordNumero, 
	            v_pdc_ord
        	)
       	);

        IF v_result <> 0 THEN
            RAISE EXCEPTION ' EXCEPTION: fnc_siac_bko_modifica_pdc_ordinativo_accertamento  ';
        END IF;
    END IF;

-- AGG GENERALE
    IF p_aggiornaGenerale != 0 THEN 
        v_result:= (
        	SELECT siac.fnc_siac_bko_modifica_pdc_ordinativo_aggiorna_contabilita(
	            p_loginOperazione, 
	            p_enteProprietarioId, 
	            p_ordTipoCode, 
	            p_annoBilancio, 
	            v_ord_anno, 
	            p_ordNumero, 
	            'AMBITO_FIN'
        	)
       	);

        IF v_result <> 0 THEN
            RAISE EXCEPTION ' EXCEPTION: fnc_siac_bko_modifica_pdc_ordinativo_aggiorna_contabilita  ';
        END IF;
    END IF;

-- INS GENERALE
    IF p_inserisciGenerale != 0 THEN 
        v_result:= (
        	SELECT siac.fnc_siac_bko_modifica_pdc_ordinativo_inserisci_contabilita(
	            p_loginOperazione, 
	            p_enteProprietarioId, 
	            p_ordTipoCode, 
	            p_annoBilancio, 
	            v_ord_anno, 
	            p_ordNumero, 
	            'AMBITO_FIN', 
	            p_eventoCode, 
	            p_eventoTipoCode, 
	            v_pdc_ord
        	)
        );

        IF v_result <> 0 THEN
            RAISE EXCEPTION ' EXCEPTION: fnc_siac_bko_modifica_pdc_ordinativo_inserisci_contabilita  ';
        END IF;
    END IF;

-- AGG GSA
    IF p_aggiornaGeneraleGSA != 0 THEN 
        v_result:= (
        	SELECT siac.fnc_siac_bko_modifica_pdc_ordinativo_aggiorna_contabilita(
	            p_loginOperazione, 
	            p_enteProprietarioId, 
	            p_ordTipoCode, 
	            p_annoBilancio, 
	            v_ord_anno, 
	            p_ordNumero, 
	            'AMBITO_GSA'
	        )
		);
		
        IF v_result <> 0 THEN
            RAISE EXCEPTION ' EXCEPTION: fnc_siac_bko_modifica_pdc_ordinativo_aggiorna_contabilita [GSA] ';
        END IF;
    END IF;

-- INS GSA
    IF p_inserisciGeneraleGSA != 0 THEN 
        v_result:=(
	         SELECT siac.fnc_siac_bko_modifica_pdc_ordinativo_inserisci_contabilita(
	            p_loginOperazione, 
	            p_enteProprietarioId, 
	            p_ordTipoCode, 
	            p_annoBilancio, 
	            v_ord_anno, 
	            p_ordNumero, 
	            'AMBITO_GSA', 
	            p_eventoCode, 
	            p_eventoTipoCode, 
	            v_pdc_ord
	        )
	    );

        IF v_result <> 0 THEN
            RAISE EXCEPTION ' EXCEPTION: fnc_siac_bko_modifica_pdc_ordinativo_inserisci_contabilita [GSA] ';
        END IF;
    END IF;

  	RAISE NOTICE '[fnc_siac_bko_modifica_pdc] MODIFICA PDC: [FINE].';

    RETURN v_result;

EXCEPTION
    WHEN RAISE_EXCEPTION THEN
    v_messaggiorisultato:=v_messaggiorisultato|| ' - ' ||SUBSTRING(UPPER(SQLERRM) from 1 for 2500);
    RAISE NOTICE '%',v_messaggiorisultato;
        v_result = v_messaggiorisultato;
   		RETURN v_result;
	WHEN OTHERS THEN
	v_messaggiorisultato:=v_messaggiorisultato|| ' others - ' ||SUBSTRING(UPPER(SQLERRM) from 1 for 2500);
    RAISE NOTICE '%',v_messaggiorisultato;
		v_result = v_messaggiorisultato;
   		RETURN v_result;


END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY DEFINER
COST 100;

-- ========================================= MODIFICA PDC ===========================================

-- ========================================= MODIFICA PDC ORDINATIVO ===========================================

/*
*SPDX-FileCopyrightText: Copyright 2020 | CSI Piemonte
*SPDX-License-Identifier: EUPL-1.2
*/
CREATE OR REPLACE FUNCTION siac.fnc_siac_bko_modifica_pdc_ordinativo(
	p_loginoperazione character varying, 
	p_enteproprietarioid integer, 
	p_ordtipocode character varying, 
	p_annobilancio character varying,
	p_ord_anno integer, 
	p_ordnumero integer, 
	p_pdcordinativo integer
)
RETURNS VARCHAR
AS $body$
DECLARE
	v_messaggiorisultato VARCHAR:= NULL;
	v_id_r_class INTEGER:=NULL;
	v_result INTEGER:=NULL;
	v_ord_id INTEGER:=NULL;
    v_login_operazione VARCHAR:='BackofficeModificaPianoDeiContiOrdinativo';
   	v_ambito VARCHAR:=NULL;
BEGIN
	
  	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo] MODIFICA PDC ORDINATIVO: [INIZIO].';

  	v_messaggiorisultato:= ' SPOSTAMENTO PIANO DEI CONTI ORDINATIVO ';

	IF p_loginOperazione != '' THEN
		v_login_operazione:= p_loginOperazione;
		v_messaggiorisultato:= v_messaggiorisultato || ' - LOGIN OPERAZIONE: ' || v_login_operazione;
	END IF;

	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_impegno] v_messaggiorisultato=% INIZIO', v_messaggiorisultato;

 	INSERT INTO siac_r_ordinativo_class
	(
		ord_id,
		classif_id,
		validita_inizio,
		login_operazione,
		ente_proprietario_id
	)
	SELECT DISTINCT sroc.ord_id,
		p_pdcordinativo,
		now(),
		p_loginOperazione,
		step.ente_proprietario_id
	FROM siac_t_ordinativo sto 
	JOIN siac_t_ente_proprietario step ON sto.ente_proprietario_id = step.ente_proprietario_id AND step.ente_proprietario_id = p_enteProprietarioId 
	JOIN siac_d_ordinativo_tipo sdot ON sto.ord_tipo_id = sdot.ord_tipo_id 
	JOIN siac_t_bil stb ON sto.bil_id = stb.bil_id 
	JOIN siac_t_periodo stp ON stp.periodo_id = stb.periodo_id 
	JOIN siac_r_ordinativo_class sroc ON sroc.ord_id = sto.ord_id 
	WHERE sdot.ord_tipo_code= p_ordTipoCode
	AND stp.anno = p_annoBilancio
	AND sto.ord_numero = p_ordNumero
	AND sto.ord_anno = p_ord_anno
	AND NOT EXISTS (
		SELECT 1
		FROM siac_t_ordinativo sto
		JOIN siac_t_ente_proprietario step ON sto.ente_proprietario_id = step.ente_proprietario_id AND step.ente_proprietario_id = p_enteProprietarioId 
		JOIN siac_d_ordinativo_tipo sdot ON sto.ord_tipo_id = sdot.ord_tipo_id 
		JOIN siac_t_bil stb ON sto.bil_id = stb.bil_id 
		JOIN siac_t_periodo stp ON stp.periodo_id = stb.periodo_id 
		JOIN siac_r_ordinativo_class sroc ON sroc.ord_id = sto.ord_id 
		WHERE sdot.ord_tipo_code = p_ordTipoCode
		AND stp.anno = p_annoBilancio
		AND sto.ord_numero = p_ordNumero
		AND sto.ord_anno = p_ord_anno
		AND sroc.classif_id = p_pdcordinativo
		AND sroc.data_cancellazione IS NULL 
		AND ( sroc.validita_fine IS  NULL OR sroc.validita_fine < current_timestamp )
		AND sto.data_cancellazione IS NULL 
		AND ( sto.validita_fine IS  NULL OR sto.validita_fine < current_timestamp )
	)
	AND sroc.data_cancellazione IS NULL 
	AND ( sroc.validita_fine IS  NULL OR sroc.validita_fine < current_timestamp )
	AND sto.data_cancellazione IS NULL 
	AND ( sto.validita_fine IS  NULL OR sto.validita_fine < current_timestamp )
	RETURNING ord_classif_id INTO v_id_r_class;

	IF v_id_r_class IS NOT NULL THEN
		v_messaggiorisultato:=' NUOVA RELAZIONE CLASSIFICATORE con id: '||v_id_r_class||'.';
	-- in caso di pdc uguale non inserisco nulla
	--ELSE
	--	RAISE EXCEPTION ' NESSUN RECORD INSERITO ';
	--END IF; 

	  	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_inserisci_contabilita] v_messaggiorisultato=% FINE',v_messaggiorisultato;
	
		v_messaggiorisultato:= ' INVALIDAZIONE PIANO DEI CONTI PRECEDENTE ';
	
		IF p_loginOperazione != '' THEN
			v_login_operazione:= p_loginOperazione;
			v_messaggiorisultato:= v_messaggiorisultato || ' - LOGIN OPERAZIONE: ' || v_login_operazione;
		END IF;
	
		RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_impegno] v_messaggiorisultato=% INIZIO', v_messaggiorisultato;
	
		UPDATE siac_r_ordinativo_class sroc
		SET data_cancellazione = now(),
			validita_fine = now(),
			login_operazione = sroc.login_operazione||' - '||p_loginOperazione
		FROM siac_t_class stc, siac_d_class_tipo sdct, siac_t_ordinativo sto
		JOIN siac_t_ente_proprietario step ON sto.ente_proprietario_id = step.ente_proprietario_id AND step.ente_proprietario_id = p_enteProprietarioId 
		JOIN siac_d_ordinativo_tipo sdot ON sto.ord_tipo_id = sdot.ord_tipo_id 
		JOIN siac_t_bil stb ON sto.bil_id = stb.bil_id 
		JOIN siac_t_periodo stp ON stp.periodo_id = stb.periodo_id 
		WHERE sto.ord_id = sroc.ord_id 
		AND sroc.classif_id = stc.classif_id 
		AND stc.classif_tipo_id = sdct.classif_tipo_id 
		AND sdot.ord_tipo_code = p_ordTipoCode
		AND stp.anno = p_annoBilancio
		AND sto.ord_numero = p_ordNumero
		AND sto.ord_anno = p_ord_anno
		AND sroc.classif_id != p_pdcordinativo
		AND sdct.classif_tipo_code = 'PDC_V'
		AND sroc.data_cancellazione IS NULL 
		AND ( sroc.validita_fine IS  NULL OR sroc.validita_fine < current_timestamp );
	
	  	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_inserisci_contabilita] v_messaggiorisultato=% FINE',v_messaggiorisultato;
	  
	END IF;

    v_result:= 0;
  
  	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo] MODIFICA PDC ORDINATIVO: [COMPLETATO].';
  	
  	RETURN v_result;

EXCEPTION
    WHEN RAISE_EXCEPTION THEN
    v_messaggiorisultato:=v_messaggiorisultato|| ' - ' ||SUBSTRING(UPPER(SQLERRM) from 1 for 2500);
    RAISE NOTICE '%',v_messaggiorisultato;
        v_result = v_messaggiorisultato;
   		RETURN v_result;
	WHEN OTHERS THEN
	v_messaggiorisultato:=v_messaggiorisultato|| ' others - ' ||SUBSTRING(UPPER(SQLERRM) from 1 for 2500);
    RAISE NOTICE '%',v_messaggiorisultato;
		v_result = v_messaggiorisultato;
   		RETURN v_result;


END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY DEFINER
COST 100;

-- ========================================= MODIFICA PDC ORDINATIVO ===========================================

-- ========================================= MODIFICA PDC ACCERTAMENTO ===========================================

/*
*SPDX-FileCopyrightText: Copyright 2020 | CSI Piemonte
*SPDX-License-Identifier: EUPL-1.2
*/
CREATE OR REPLACE FUNCTION siac.fnc_siac_bko_modifica_pdc_ordinativo_accertamento(
	p_loginoperazione character varying, 
	p_enteproprietarioid integer, 
	p_ordtipocode character varying, 
	p_annobilancio character varying, 
	p_ord_anno integer, 
	p_ordnumero integer, 
	p_pdcordinativo integer
)
RETURNS VARCHAR
AS $body$
DECLARE
	v_messaggiorisultato VARCHAR:= NULL;
	v_id_r_class INTEGER:=NULL;
	v_result INTEGER:=NULL;
    v_login_operazione VARCHAR:='BackofficeModificaPianoDeiContiOrdinativo';
   	v_ambito VARCHAR:=NULL;
BEGIN
	
  	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_accertamento] MODIFICA PDC MOVIMENTO DI ENTRATA: [INIZIO].';
	
	v_messaggiorisultato:= ' INSERIMENTO RELAZIONE CLASSIFICATORE ';
	
	IF p_loginOperazione != '' THEN
		v_login_operazione:= p_loginOperazione;
		v_messaggiorisultato:= v_messaggiorisultato || ' - LOGIN OPERAZIONE: ' || v_login_operazione;
	END IF;

	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_accertamento] v_messaggiorisultato=% INIZIO',v_messaggiorisultato;

	INSERT INTO siac_r_movgest_class
	(
		movgest_ts_id,
		classif_id,
		validita_inizio,
		ente_proprietario_id,
		login_operazione
	)
	SELECT DISTINCT srmc.movgest_ts_id,
		p_pdcOrdinativo,
		now(),
		stmt.ente_proprietario_id,
		p_loginOperazione
	FROM siac_t_ordinativo sto
	JOIN siac_t_ente_proprietario step ON sto.ente_proprietario_id = step.ente_proprietario_id AND step.ente_proprietario_id = p_enteProprietarioId 
	JOIN siac_d_ordinativo_tipo sdot ON sto.ord_tipo_id = sdot.ord_tipo_id 
	JOIN siac_t_ordinativo_ts stot ON sto.ord_id = stot.ord_id 
	JOIN siac_r_ordinativo_ts_movgest_ts srotmt ON stot.ord_ts_id = srotmt.ord_ts_id 
	JOIN siac_t_movgest_ts stmt ON stmt.movgest_ts_id = srotmt.movgest_ts_id 
	JOIN siac_t_movgest stm ON stmt.movgest_id = stm.movgest_id 
	JOIN siac_t_bil stb ON sto.bil_id = stb.bil_id 
	JOIN siac_t_periodo stp ON stp.periodo_id = stb.periodo_id 
	JOIN siac_r_movgest_class srmc ON stmt.movgest_ts_id = srmc.movgest_ts_id 
	JOIN siac_t_class stc ON srmc.classif_id = stc.classif_id 
	WHERE stp.anno = p_annoBilancio
	AND sto.ord_anno = p_ord_anno
	AND sto.ord_numero = p_ordNumero
	AND sdot.ord_tipo_code = p_ordTipoCode
	AND NOT EXISTS (
		SELECT 1
		FROM siac_t_ordinativo sto
		JOIN siac_t_ente_proprietario step ON sto.ente_proprietario_id = step.ente_proprietario_id AND step.ente_proprietario_id = p_enteProprietarioId 
		JOIN siac_d_ordinativo_tipo sdot ON sto.ord_tipo_id = sdot.ord_tipo_id 
		JOIN siac_r_ordinativo_ts_movgest_ts srotmt ON stot.ord_ts_id = srotmt.ord_ts_id 
		JOIN siac_t_movgest_ts stmt ON stmt.movgest_ts_id = srotmt.movgest_ts_id 
		JOIN siac_t_movgest stm ON stmt.movgest_id = stm.movgest_id 
		JOIN siac_t_bil stb ON sto.bil_id = stb.bil_id 
		JOIN siac_t_periodo stp ON stp.periodo_id = stb.periodo_id 
		JOIN siac_r_movgest_class srmc ON stmt.movgest_ts_id = srmc.movgest_ts_id 
		JOIN siac_t_class stc ON srmc.classif_id = stc.classif_id 
		WHERE stp.anno = p_annoBilancio
		AND sto.ord_anno = p_ord_anno
		AND sto.ord_numero = p_ordNumero
		AND sdot.ord_tipo_code = p_ordTipoCode
		AND srmc.classif_id = p_pdcordinativo
		AND stm.data_cancellazione IS  NULL 
		AND ( stm.validita_fine IS  NULL OR stm.validita_fine < current_timestamp )
		AND stmt.data_cancellazione IS  NULL 
		AND ( stmt.validita_fine IS  NULL OR stmt.validita_fine < current_timestamp )
		AND srmc.data_cancellazione IS  NULL 
		AND ( srmc.validita_fine IS  NULL OR srmc.validita_fine < current_timestamp )
		AND srotmt.data_cancellazione IS  NULL 
		AND ( srotmt.validita_fine IS  NULL OR srotmt.validita_fine < current_timestamp )
	)
	AND stm.movgest_id IN (	
		SELECT DISTINCT stm.movgest_id 
		FROM siac_t_ordinativo sto
		JOIN siac_t_ente_proprietario step ON sto.ente_proprietario_id = step.ente_proprietario_id AND step.ente_proprietario_id = p_enteProprietarioId 
		JOIN siac_d_ordinativo_tipo sdot ON sto.ord_tipo_id = sdot.ord_tipo_id 
		JOIN siac_t_ordinativo_ts stot ON sto.ord_id = stot.ord_id 
		JOIN siac_r_ordinativo_ts_movgest_ts srotmt ON stot.ord_ts_id = srotmt.ord_ts_id 
		JOIN siac_t_movgest_ts stmt ON stmt.movgest_ts_id = srotmt.movgest_ts_id 
		JOIN siac_t_movgest stm ON stmt.movgest_id = stm.movgest_id 
		JOIN siac_d_movgest_ts_tipo sdmtt ON sdmtt.movgest_ts_tipo_id = stmt.movgest_ts_tipo_id 
		JOIN siac_t_bil stb ON sto.bil_id = stb.bil_id 
		JOIN siac_t_periodo stp ON stp.periodo_id = stb.periodo_id 
		JOIN siac_r_movgest_class srmc ON stmt.movgest_ts_id = srmc.movgest_ts_id 
		JOIN siac_t_class stc ON srmc.classif_id = stc.classif_id 
		WHERE stp.anno = p_annoBilancio
		AND sto.ord_anno = p_ord_anno
		AND sto.ord_numero = p_ordNumero
		AND sdot.ord_tipo_code = p_ordTipoCode
		--AND sdmtt.movgest_ts_tipo_code = 'T'
		AND stm.data_cancellazione IS  NULL 
		AND ( stm.validita_fine IS  NULL OR stm.validita_fine < current_timestamp )
		AND stmt.data_cancellazione IS  NULL 
		AND ( stmt.validita_fine IS  NULL OR stmt.validita_fine < current_timestamp )
		AND srmc.data_cancellazione IS  NULL 
		AND ( srmc.validita_fine IS  NULL OR srmc.validita_fine < current_timestamp )
		AND srotmt.data_cancellazione IS  NULL 
		AND ( srotmt.validita_fine IS  NULL OR srotmt.validita_fine < current_timestamp )
	)
	AND srmc.data_cancellazione IS  NULL 
	AND ( srmc.validita_fine IS  NULL OR srmc.validita_fine < current_timestamp )
	AND srotmt.data_cancellazione IS  NULL 
	AND ( srotmt.validita_fine IS  NULL OR srotmt.validita_fine < current_timestamp )
	RETURNING movgest_classif_id INTO v_id_r_class;

	IF v_id_r_class IS NOT NULL THEN
		v_messaggiorisultato:=' NUOVA RELAZIONE CLASSIFICATORE con id: '||v_id_r_class||'.';
	-- in caso di pdc uguale non inserisco nulla
	--ELSE
	--	RAISE EXCEPTION 'NESSUN RECORD INSERITO PER: % ', v_messaggiorisultato;		
	--END IF;

	  	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_accertamento] v_messaggiorisultato=% FINE',v_messaggiorisultato;
	  
	  	v_messaggiorisultato:= ' INVALIDAZIONE CLASSIFICATORE PRECEDENTE ';
	
		IF p_loginOperazione != '' THEN
			v_login_operazione:= p_loginOperazione;
			v_messaggiorisultato:= v_messaggiorisultato || ' - LOGIN OPERAZIONE: ' || v_login_operazione;
		END IF;
	
		RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_accertamento] v_messaggiorisultato=% INIZIO',v_messaggiorisultato;
		
		UPDATE siac_r_movgest_class srmc
		SET data_cancellazione = now(),
			validita_fine = now(),
			login_operazione = srmc.login_operazione||' - '||p_loginOperazione
		FROM siac_t_class stc, siac_d_class_tipo sdct, siac_t_ordinativo sto
		JOIN siac_t_ente_proprietario step ON sto.ente_proprietario_id = step.ente_proprietario_id AND step.ente_proprietario_id = p_enteProprietarioId 
		JOIN siac_d_ordinativo_tipo sdot ON sto.ord_tipo_id = sdot.ord_tipo_id 
		JOIN siac_t_ordinativo_ts stot ON sto.ord_id = stot.ord_id 
		JOIN siac_r_ordinativo_ts_movgest_ts srotmt ON stot.ord_ts_id = srotmt.ord_ts_id 
		JOIN siac_t_movgest_ts stmt ON stmt.movgest_ts_id = srotmt.movgest_ts_id 
		JOIN siac_t_movgest stm ON stmt.movgest_id = stm.movgest_id 
		JOIN siac_d_movgest_ts_tipo sdmtt ON sdmtt.movgest_ts_tipo_id = stmt.movgest_ts_tipo_id 
		JOIN siac_t_bil stb ON sto.bil_id = stb.bil_id 
		JOIN siac_t_periodo stp ON stp.periodo_id = stb.periodo_id 
		WHERE stp.anno = p_annoBilancio
		AND sto.ord_anno = p_ord_anno
		AND sto.ord_numero = p_ordNumero
		AND sdot.ord_tipo_code = p_ordTipoCode
		AND stmt.movgest_ts_id = srmc.movgest_ts_id 
		AND stc.classif_id = srmc.classif_id 
		AND stc.classif_tipo_id = sdct.classif_tipo_id
		AND sdct.classif_tipo_code = 'PDC_V'
		AND sdmtt.movgest_ts_tipo_code = 'T'
		AND stc.classif_id != p_pdcOrdinativo
		AND srmc.data_cancellazione IS  NULL 
		AND ( srmc.validita_fine IS NULL OR srmc.validita_fine < current_timestamp );
	
	  	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_accertamento] v_messaggiorisultato=% FINE',v_messaggiorisultato;
  
	END IF;
	
	v_result:= 0;
  
  	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_accertamento] MODIFICA PDC MOVIMENTO DI ENTRATA: [COMPLETATO].';
  	
  	RETURN v_result;

EXCEPTION
    WHEN RAISE_EXCEPTION THEN
    v_messaggiorisultato:=v_messaggiorisultato|| ' - ' ||SUBSTRING(UPPER(SQLERRM) from 1 for 2500);
    RAISE NOTICE '%',v_messaggiorisultato;
        v_result = v_messaggiorisultato;
   		RETURN v_result;
	WHEN OTHERS THEN
	v_messaggiorisultato:=v_messaggiorisultato|| ' others - ' ||SUBSTRING(UPPER(SQLERRM) from 1 for 2500);
    RAISE NOTICE '%',v_messaggiorisultato;
		v_result = v_messaggiorisultato;
   		RETURN v_result;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY DEFINER
COST 100;

-- ========================================= MODIFICA PDC ACCERTAMENTO ===========================================

-- ========================================= MODIFICA PDC INSERISCI CONTABILITA ===========================================

/*
*SPDX-FileCopyrightText: Copyright 2020 | CSI Piemonte
*SPDX-License-Identifier: EUPL-1.2
*/
CREATE OR REPLACE FUNCTION siac.fnc_siac_bko_modifica_pdc_ordinativo_inserisci_contabilita(
	p_loginoperazione character varying, 
	p_enteproprietarioid integer, 
	p_ordtipocode character varying, 
	p_annobilancio character varying, 
	p_ord_anno integer, 
	p_ordnumero integer, 
	p_ambito character varying, 
	p_eventocode character varying, 
	p_eventotipocode character varying, 
	p_pdcordinativo integer
)
RETURNS VARCHAR
AS $body$
DECLARE
	v_messaggiorisultato VARCHAR:= NULL;
	v_id INTEGER:=NULL;
	v_id_stato INTEGER:=NULL;
	v_id_evento INTEGER:=NULL;
	v_result INTEGER:=NULL;
    v_login_operazione VARCHAR:='BackofficeModificaPianoDeiContiOrdinativo';
   	v_ambito VARCHAR:=NULL;
BEGIN
	
	v_messaggiorisultato:= ' INSERIMENTO REGISTRO ';
	
	IF p_loginOperazione != '' THEN
		v_login_operazione:= p_loginOperazione;
		v_messaggiorisultato:= v_messaggiorisultato || ' - LOGIN OPERAZIONE: ' || v_login_operazione;
	END IF;

	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_inserisci_contabilita] v_messaggiorisultato=% INIZIO',v_messaggiorisultato;

  	INSERT INTO siac_t_reg_movfin 
	(
	    classif_id_iniziale,
	    classif_id_aggiornato,
	    bil_id,
	    ambito_id,
	    validita_inizio,
	    login_operazione,
	    ente_proprietario_id
	)
	SELECT DISTINCT
	(
		SELECT DISTINCT stc.classif_id 
		FROM siac_t_class stc
		JOIN siac_t_ente_proprietario step ON stc.ente_proprietario_id = step.ente_proprietario_id AND step.ente_proprietario_id = p_enteProprietarioId
		JOIN siac_r_ordinativo_class sroc ON sroc.classif_id = stc.classif_id
		JOIN siac.siac_r_class_fam_tree srcft ON ( srcft.classif_id = stc.classif_id ) 
		JOIN siac.siac_t_class_fam_tree stcft ON ( stcft.classif_fam_tree_id = srcft.classif_fam_tree_id AND stcft.class_fam_code = 'Piano dei Conti' ) 
		JOIN siac_t_ordinativo sto ON sto.ord_id = sroc.ord_id 
		JOIN siac_d_ordinativo_tipo sdot ON sto.ord_tipo_id = sdot.ord_tipo_id 
		JOIN siac_t_bil stb ON sto.bil_id = stb.bil_id 
		JOIN siac_t_periodo stp ON stb.periodo_id = stp.periodo_id
		WHERE stp.anno = p_annoBilancio
		AND sto.ord_numero = p_ordNumero
		AND sto.ord_anno = p_ord_anno
		AND sdot.ord_tipo_code = p_ordTipoCode
		AND sto.data_cancellazione is NULL
		AND ( sto.validita_fine is NULL OR sto.validita_fine < CURRENT_TIMESTAMP )
		AND sdot.data_cancellazione is NULL
		AND ( sdot.validita_fine is NULL OR sdot.validita_fine < CURRENT_TIMESTAMP )
		AND sroc.data_cancellazione is NULL
		AND ( sroc.validita_fine is NULL OR sroc.validita_fine < CURRENT_TIMESTAMP )
		AND stc.data_cancellazione is NULL
		AND ( stc.validita_fine is NULL OR stc.validita_fine < CURRENT_TIMESTAMP )
		AND srcft.data_cancellazione is NULL
		AND ( srcft.validita_fine is NULL OR srcft.validita_fine < CURRENT_TIMESTAMP )
	),
	p_pdcOrdinativo,
	(
		SELECT DISTINCT stb.bil_id 
		FROM siac_t_ordinativo sto
		JOIN siac_d_ordinativo_tipo sdot ON sto.ord_tipo_id = sdot.ord_tipo_id 
		JOIN siac_t_bil stb ON sto.bil_id = stb.bil_id 
		JOIN siac_t_periodo stp ON stb.periodo_id = stp.periodo_id
		WHERE stp.anno = p_annoBilancio
		AND sto.ord_numero = p_ordNumero
		AND sto.ord_anno = p_ord_anno
		AND sdot.ord_tipo_code = p_ordTipoCode
		AND sto.data_cancellazione is NULL
		AND ( sto.validita_fine is NULL OR sto.validita_fine < CURRENT_TIMESTAMP )
		AND sdot.data_cancellazione is NULL
		AND ( sdot.validita_fine is NULL OR sdot.validita_fine < CURRENT_TIMESTAMP )
		AND stp.data_cancellazione is NULL
		AND ( stp.validita_fine is NULL OR stp.validita_fine < CURRENT_TIMESTAMP )
		AND stb.data_cancellazione is NULL
		AND ( stb.validita_fine is NULL OR stp.validita_fine < CURRENT_TIMESTAMP )
	),
	(
		SELECT DISTINCT sda.ambito_id
		FROM siac_d_ambito sda 
		JOIN siac_t_ente_proprietario step ON step.ente_proprietario_id = sda.ente_proprietario_id and step.ente_proprietario_id = p_enteProprietarioId
		WHERE sda.ambito_code = p_ambito
		AND sda.data_cancellazione is NULL
		AND ( sda.validita_fine is NULL OR sda.validita_fine < CURRENT_TIMESTAMP ) 
	),
	now(),
	p_loginOperazione,
	p_enteProprietarioId
	RETURNING regmovfin_id INTO v_id;
	
	IF v_id IS NOT NULL THEN
		v_messaggiorisultato:=' INSERITO REGISTRO con id: '||v_id||'.';
	ELSE
		RAISE EXCEPTION 'NESSUN RECORD INSERITO PER: % ', v_messaggiorisultato;		
	END IF;

  	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_inserisci_contabilita] v_messaggiorisultato=% FINE',v_messaggiorisultato;
	
  	v_messaggiorisultato:= ' ASSOCIAZIONE REGISTRO con id: '||v_id||' A STATO: [NOTIFICATO] ';
	
	IF p_loginOperazione != '' THEN
		v_login_operazione:= p_loginOperazione;
		v_messaggiorisultato:= v_messaggiorisultato || ' - LOGIN OPERAZIONE: ' || v_login_operazione;
	END IF;

	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_inserisci_contabilita] v_messaggiorisultato=% INIZIO',v_messaggiorisultato;
    
  	INSERT INTO siac_r_reg_movfin_stato
	(
	    regmovfin_id,
	    regmovfin_stato_id,
	    validita_inizio,
	    login_operazione,
	    ente_proprietario_id
	)
	SELECT v_id,
		sdrms.regmovfin_stato_id,
		now(),
		p_loginOperazione,
		p_enteProprietarioId
	FROM siac_t_ordinativo sto
	JOIN siac_t_ente_proprietario step on sto.ente_proprietario_id = step.ente_proprietario_id and step.ente_proprietario_id = p_enteProprietarioId
	JOIN siac_d_ordinativo_tipo sdot on sto.ord_tipo_id = sdot.ord_tipo_id 
	JOIN siac_t_bil stb on sto.bil_id = stb.bil_id 
	JOIN siac_t_periodo stp on stp.periodo_id = stb.periodo_id 
	JOIN siac_d_reg_movfin_stato sdrms on sdrms.ente_proprietario_id = step.ente_proprietario_id
	WHERE stp.anno = p_annoBilancio
	AND sto.ord_numero = p_ordNumero
	AND sto.ord_anno = p_ord_anno
	AND sdot.ord_tipo_code = p_ordTipoCode
	AND sdrms.regmovfin_stato_code = 'N'
	RETURNING regmovfin_stato_r_id INTO v_id_stato;

	IF v_id_stato IS NOT NULL THEN
		v_messaggiorisultato:=' ASSOCIATO REGISTRO con id: '||v_id||' A STATO: [NOTIFICATO] ';
	ELSE
		RAISE EXCEPTION 'NESSUN RECORD INSERITO PER: % ', v_messaggiorisultato;		
	END IF;

  	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_inserisci_contabilita] v_messaggiorisultato=% FINE',v_messaggiorisultato;
  
  	v_messaggiorisultato:= ' ASSOCIAZIONE REGISTRO con id: '||v_id||' AD EVENTO: ['||p_eventoCode||']';
	
	IF p_loginOperazione != '' THEN
		v_login_operazione:= p_loginOperazione;
		v_messaggiorisultato:= v_messaggiorisultato || ' - LOGIN OPERAZIONE: ' || v_login_operazione;
	END IF;

	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_inserisci_contabilita] v_messaggiorisultato=% INIZIO',v_messaggiorisultato;
    
  	INSERT INTO siac_r_evento_reg_movfin 
	(
		regmovfin_id,
		evento_id,
		campo_pk_id,
		validita_inizio,
		login_operazione,
		ente_proprietario_id
	)
	SELECT DISTINCT
	    v_id,
	    sde.evento_id,
	    sto.ord_id,
	    now(),
	    p_loginOperazione,
	    sto.ente_proprietario_id
	FROM siac_t_ordinativo sto 
	JOIN siac_t_ente_proprietario step ON sto.ente_proprietario_id = step.ente_proprietario_id AND step.ente_proprietario_id = p_enteProprietarioId
	JOIN siac_d_ordinativo_tipo sdot ON sto.ord_tipo_id = sdot.ord_tipo_id 
	JOIN siac_t_bil stb ON sto.bil_id = stb.bil_id 
	JOIN siac_t_periodo stp ON stb.periodo_id = stp.periodo_id 
	JOIN siac_r_evento_reg_movfin srerm ON sto.ord_id = srerm.campo_pk_id
	JOIN siac_d_evento sde ON step.ente_proprietario_id = sde.ente_proprietario_id 
	JOIN siac_d_evento_tipo sdet ON sde.evento_tipo_id = sdet.evento_tipo_id 
	JOIN siac_t_reg_movfin strm ON srerm.regmovfin_id = strm.regmovfin_id 
	WHERE stp.anno = p_annoBilancio
	AND sto.ord_numero = p_ordNumero
	AND sto.ord_anno = p_ord_anno
	AND sdot.ord_tipo_code = p_ordTipoCode
	AND sde.evento_code = p_eventoCode
	AND sdet.evento_tipo_code = p_eventoTipoCode
	-- controllare lo stesso anno di bilancio sulla r
	AND strm.bil_id = stb.bil_id 
	AND sto.data_cancellazione is NULL
	AND ( sto.validita_fine is NULL OR sto.validita_fine < CURRENT_TIMESTAMP )
	AND srerm.data_cancellazione is NULL
	AND ( srerm.validita_fine is NULL OR srerm.validita_fine < CURRENT_TIMESTAMP )
	RETURNING evmovfin_id INTO v_id_evento;
  
	IF v_id_evento IS NOT NULL THEN
		v_messaggiorisultato:=' ASSOCIATO REGISTRO con id: '||v_id||' AD EVENTO: ['||p_eventoCode||']';
	ELSE
		RAISE EXCEPTION 'NESSUN RECORD INSERITO PER: % ', v_messaggiorisultato;		
	END IF;

  	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_inserisci_contabilita] v_messaggiorisultato=% FINE',v_messaggiorisultato;
--  
  	v_messaggiorisultato:= ' INVALIDAMENTO RECORD PRECEDENTE ';
	
	IF p_loginOperazione != '' THEN
		v_login_operazione:= p_loginOperazione;
		v_messaggiorisultato:= v_messaggiorisultato || ' - LOGIN OPERAZIONE: ' || v_login_operazione;
	END IF;

	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_aggiorna_contabilita] v_messaggiorisultato=% INIZIO',v_messaggiorisultato;

	UPDATE siac_r_evento_reg_movfin srerm
	SET data_cancellazione = now(),
		validita_fine = now(),
		login_operazione = srerm.login_operazione||' - '||p_loginOperazione
	FROM siac_t_reg_movfin strm , siac_d_ambito sda , siac_t_ordinativo sto 
	JOIN siac_t_ente_proprietario step ON sto.ente_proprietario_id = step.ente_proprietario_id AND step.ente_proprietario_id = p_enteProprietarioId
	JOIN siac_d_ordinativo_tipo sdot ON sto.ord_tipo_id = sdot.ord_tipo_id 
	JOIN siac_t_bil stb ON sto.bil_id = stb.bil_id 
	JOIN siac_t_periodo stp ON stb.periodo_id = stp.periodo_id 
	WHERE srerm.regmovfin_id = strm.regmovfin_id
	AND sda.ambito_id = strm.ambito_id
	AND sto.ord_id = srerm.campo_pk_id
	-- controllare lo stesso anno di bilancio sulla r
	AND strm.bil_id = stb.bil_id 
	AND stp.anno = p_annoBilancio
	AND sto.ord_numero = p_ordNumero
	AND sto.ord_anno = p_ord_anno
	AND sdot.ord_tipo_code = p_ordTipoCode
	AND srerm.evmovfin_id != v_id_evento
	AND sda.ambito_code = p_ambito
	AND sto.data_cancellazione is NULL
	AND ( sto.validita_fine is NULL OR sto.validita_fine < CURRENT_TIMESTAMP )
	AND srerm.data_cancellazione is NULL
	AND ( srerm.validita_fine is NULL OR srerm.validita_fine < CURRENT_TIMESTAMP );
	
	IF p_loginOperazione != '' THEN
		v_login_operazione:= p_loginOperazione;
		v_messaggiorisultato:= v_messaggiorisultato || ' - LOGIN OPERAZIONE: ' || v_login_operazione;
	END IF;
	
	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_aggiorna_contabilita] v_messaggiorisultato=% FINE',v_messaggiorisultato;
  
  	v_result:= 0;
  	v_ambito:= p_ambito;
  
  	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_inserisci_contabilita] INSERIMENTO CONTABILITA % COMPLETATO.', v_ambito;
  	
  	RETURN v_result;
  
EXCEPTION
    WHEN RAISE_EXCEPTION THEN
    v_messaggiorisultato:=v_messaggiorisultato|| ' - ' ||SUBSTRING(UPPER(SQLERRM) from 1 for 2500);
    RAISE NOTICE '%',v_messaggiorisultato;
        v_result = v_messaggiorisultato;
   		RETURN v_result;
	WHEN OTHERS THEN
	v_messaggiorisultato:=v_messaggiorisultato|| ' OTHERS - ' ||SUBSTRING(UPPER(SQLERRM) from 1 for 2500);
    RAISE NOTICE '%',v_messaggiorisultato;
		v_result = v_messaggiorisultato;
   		RETURN v_result;
  
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY DEFINER
COST 100;

-- ========================================= MODIFICA PDC INSERISCI CONTABILITA ===========================================

-- ========================================= MODIFICA PDC AGGIORNA CONTABILITA ===========================================

/*
*SPDX-FileCopyrightText: Copyright 2020 | CSI Piemonte
*SPDX-License-Identifier: EUPL-1.2
*/
CREATE OR REPLACE FUNCTION siac.fnc_siac_bko_modifica_pdc_ordinativo_aggiorna_contabilita(
	p_loginoperazione character varying, 
	p_enteproprietarioid integer, 
	p_ordtipocode character varying, 
	p_annobilancio character varying, 
	p_ord_anno integer, 
	p_ordnumero integer, 
	p_ambito character varying
)
RETURNS VARCHAR
AS $body$
DECLARE
	v_messaggiorisultato VARCHAR:= NULL;
	v_pnota_id_stato INTEGER[]:=NULL;
	v_id_stato INTEGER:=NULL;
	v_result INTEGER:=NULL;
    v_login_operazione VARCHAR:='BackofficeModificaPianoDeiContiOrdinativo';
   	v_ambito VARCHAR:=NULL;
BEGIN
	
	v_messaggiorisultato:= ' INSERIMENTO PRIMA NOTA ANNULLATA ';
	
	IF p_loginOperazione != '' THEN
		v_login_operazione:= p_loginOperazione;
		v_messaggiorisultato:= v_messaggiorisultato || ' - LOGIN OPERAZIONE: ' || v_login_operazione;
	END IF;

	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_aggiorna_contabilita] v_messaggiorisultato=% INIZIO',v_messaggiorisultato;
	
	INSERT INTO siac_r_prima_nota_stato
	(
		 pnota_id,
		 pnota_stato_id,
		 validita_inizio,
		 login_operazione,
		 ente_proprietario_id
	)
	SELECT DISTINCT
		stpn.pnota_id,
		statoDaAtribuire.pnota_stato_id,
		now(),
		p_loginOperazione,
		sto.ente_proprietario_id
	FROM siac_t_ordinativo sto
	JOIN siac_d_ordinativo_tipo sdo ON sto.ord_tipo_id = sdo.ord_tipo_id
	JOIN siac_t_bil stb ON stb.bil_id = sto.bil_id 
	JOIN siac_t_periodo stp ON stp.periodo_id = stb.periodo_id 
	JOIN siac_r_evento_reg_movfin srerm ON srerm.campo_pk_id = sto.ord_id 
	JOIN siac_t_ente_proprietario step ON step.ente_proprietario_id = srerm.ente_proprietario_id AND step.ente_proprietario_id = p_enteProprietarioId
	JOIN siac_t_reg_movfin strm ON srerm.regmovfin_id = strm.regmovfin_id 
	JOIN siac_t_mov_ep stme ON stme.regmovfin_id = strm.regmovfin_id 
	JOIN siac_t_prima_nota stpn ON stpn.pnota_id = stme.regep_id 
	JOIN siac_r_prima_nota_stato srpns ON srpns.pnota_id = stpn.pnota_id 
	JOIN siac_d_prima_nota_stato sdpns ON sdpns.pnota_stato_id = srpns.pnota_stato_id
	JOIN siac_d_prima_nota_stato statoDaAtribuire ON step.ente_proprietario_id = statoDaAtribuire.ente_proprietario_id 
	JOIN siac_d_ambito sda ON sda.ambito_id = stpn.ambito_id 
	WHERE sto.ord_numero = p_ordNumero
	AND sto.ord_anno = p_ord_anno
	AND stp.anno = p_annoBilancio
	AND sdo.ord_tipo_code = p_ordTipoCode
	AND sda.ambito_code = p_ambito
	AND sdpns.pnota_stato_code != 'A'
	AND statoDaAtribuire.pnota_stato_code = 'A'
	AND sto.data_cancellazione is NULL 
	AND ( sto.validita_fine is NULL OR sto.validita_fine < CURRENT_TIMESTAMP )
	AND sdo.data_cancellazione is NULL 
	AND ( sdo.validita_fine is NULL OR sdo.validita_fine < CURRENT_TIMESTAMP )
	AND strm.data_cancellazione is NULL 
	AND ( strm.validita_fine is NULL OR strm.validita_fine < CURRENT_TIMESTAMP )
	AND stpn.data_cancellazione is NULL 
	AND ( stpn.validita_fine is NULL OR stpn.validita_fine < CURRENT_TIMESTAMP )
	AND statoDaAtribuire.data_cancellazione is NULL 
	AND ( statoDaAtribuire.validita_fine is NULL OR statoDaAtribuire.validita_fine < CURRENT_TIMESTAMP )
	AND srpns.data_cancellazione is NULL 
	AND ( srpns.validita_fine is null OR srpns.validita_fine < CURRENT_TIMESTAMP )
	AND statoDaAtribuire.data_cancellazione is NULL 
	AND ( statoDaAtribuire.validita_fine is NULL OR statoDaAtribuire.validita_fine < CURRENT_TIMESTAMP );
--	RETURNING pnota_stato_r_id INTO v_id_stato;
--
--	IF v_id_stato IS NOT NULL THEN
--		v_messaggiorisultato:=' INSERIMENTO PRIMA NOTA ANNULLATA con id: '||v_id_stato||'.';
--	ELSE
--		RAISE EXCEPTION 'NESSUN RECORD INSERITO PER: % ', v_messaggiorisultato;		
--	END IF;

  	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_aggiorna_contabilita] v_messaggiorisultato=% FINE',v_messaggiorisultato;
  
	v_messaggiorisultato:= ' CANCELLAMENTO PRIME NOTE NON ANNULLATE ';
	
	IF p_loginOperazione != '' THEN
		v_login_operazione:= p_loginOperazione;
		v_messaggiorisultato:= v_messaggiorisultato || ' - LOGIN OPERAZIONE: ' || v_login_operazione;
	END IF;

	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_aggiorna_contabilita] v_messaggiorisultato=% INIZIO',v_messaggiorisultato;
	
	UPDATE siac_r_prima_nota_stato srpns
	SET data_cancellazione = now(),
		validita_fine = now(),
		login_operazione = srpns.login_operazione||' - '||p_loginOperazione
	FROM siac_d_prima_nota_stato sdpns, siac_t_ordinativo sto
	JOIN siac_d_ordinativo_tipo sdo ON sto.ord_tipo_id = sdo.ord_tipo_id
	JOIN siac_t_bil stb ON stb.bil_id = sto.bil_id
	JOIN siac_t_periodo stp ON stp.periodo_id = stb.periodo_id
	JOIN siac_r_evento_reg_movfin srerm ON srerm.campo_pk_id = sto.ord_id
	JOIN siac_t_ente_proprietario step ON step.ente_proprietario_id = srerm.ente_proprietario_id AND step.ente_proprietario_id = p_enteProprietarioId
	JOIN siac_t_reg_movfin strm ON srerm.regmovfin_id = strm.regmovfin_id
	JOIN siac_t_mov_ep stme ON stme.regmovfin_id = strm.regmovfin_id
	JOIN siac_t_prima_nota stpn ON stpn.pnota_id = stme.regep_id
	JOIN siac_d_ambito sda ON sda.ambito_id = stpn.ambito_id
	WHERE sto.ord_numero = p_ordNumero
	AND sto.ord_anno = p_ord_anno
	AND stp.anno = p_annoBilancio
	AND sdo.ord_tipo_code = p_ordTipoCode
	AND stpn.pnota_id = srpns.pnota_id
	AND sdpns.pnota_stato_id = srpns.pnota_stato_id
	AND sda.ambito_code = p_ambito
	AND sdpns.pnota_stato_code != 'A'
	AND sto.data_cancellazione is NULL
	AND ( sto.validita_fine is NULL OR sto.validita_fine < CURRENT_TIMESTAMP )
	AND sdo.data_cancellazione is NULL
	AND ( sdo.validita_fine is NULL OR sdo.validita_fine < CURRENT_TIMESTAMP )
	AND srpns.data_cancellazione is NULL
	AND ( srpns.validita_fine is NULL OR srpns.validita_fine < CURRENT_TIMESTAMP )
	AND sdpns.data_cancellazione is NULL
	AND ( sdpns.validita_fine is NULL OR sdpns.validita_fine < CURRENT_TIMESTAMP );
	
	v_messaggiorisultato:= ' CANCELLAMENTO PRIME NOTE NON ANNULLATE ';
	
	IF p_loginOperazione != '' THEN
		v_login_operazione:= p_loginOperazione;
		v_messaggiorisultato:= v_messaggiorisultato || ' - LOGIN OPERAZIONE: ' || v_login_operazione;
	END IF;
	
	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_aggiorna_contabilita] v_messaggiorisultato=% FINE',v_messaggiorisultato;

	v_messaggiorisultato:= ' INSERIMENTO REGISTRO ANNULLATO ';
	
	IF p_loginOperazione != '' THEN
		v_login_operazione:= p_loginOperazione;
		v_messaggiorisultato:= v_messaggiorisultato || ' - LOGIN OPERAZIONE: ' || v_login_operazione;
	END IF;

	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_aggiorna_contabilita] v_messaggiorisultato=% INIZIO',v_messaggiorisultato;

	INSERT INTO siac_r_reg_movfin_stato
	(
		regmovfin_id,
		regmovfin_stato_id,
		validita_inizio,
		login_operazione,
		ente_proprietario_id
	)
	SELECT DISTINCT
		srerm.regmovfin_id,
		stato.regmovfin_stato_id,
		now(),
		p_loginOperazione,
		step.ente_proprietario_id
	FROM siac.siac_t_ordinativo sto
	JOIN siac.siac_t_ente_proprietario step ON step.ente_proprietario_id = sto.ente_proprietario_id AND step.ente_proprietario_id = p_enteProprietarioId
	JOIN siac.siac_d_ordinativo_tipo sdot ON sdot.ord_tipo_id = sto.ord_tipo_id 
	JOIN siac.siac_t_bil stb ON stb.bil_id = sto.bil_id
	JOIN siac.siac_t_periodo stp ON stp.periodo_id = stb.periodo_id 
	JOIN siac.siac_r_evento_reg_movfin srerm ON srerm.campo_pk_id = sto.ord_id
	JOIN siac.siac_t_reg_movfin strm ON strm.regmovfin_id = srerm.regmovfin_id 
	JOIN siac.siac_r_reg_movfin_stato srrms ON srrms.regmovfin_id = strm.regmovfin_id 
	JOIN siac.siac_d_reg_movfin_stato sdrms ON sdrms.regmovfin_stato_id = srrms.regmovfin_stato_id 
	JOIN siac_d_reg_movfin_stato stato ON stato.ente_proprietario_id = step.ente_proprietario_id 
	JOIN siac_d_ambito sda ON sda.ambito_id = strm.ambito_id 
	WHERE stp.anno = p_annoBilancio
	AND sto.ord_numero = p_ordNumero
	AND sto.ord_anno = p_ord_anno
	AND sdot.ord_tipo_code = p_ordTipoCode
	AND sda.ambito_code = p_ambito
	AND sdrms.regmovfin_stato_code != 'A'
	AND stato.regmovfin_stato_code = 'A'
	-- controllare lo stesso anno di bilancio sulla r
	AND strm.bil_id = stb.bil_id 
	AND sto.data_cancellazione is  NULL 
	AND ( sto.validita_fine is  NULL OR sto.validita_fine < current_timestamp )
	AND sdot.data_cancellazione is  NULL 
	AND ( sdot.validita_fine is  NULL OR sdot.validita_fine < current_timestamp )
	AND strm.data_cancellazione is  NULL 
	AND ( strm.validita_fine is  NULL OR strm.validita_fine < current_timestamp )
	AND srerm.data_cancellazione is  NULL 
	AND ( srerm.validita_fine is  NULL OR srerm.validita_fine < current_timestamp )
	AND srrms.data_cancellazione is NULL 
	AND ( srrms.validita_fine is NULL OR srrms.validita_fine < current_timestamp )
	AND sdrms.data_cancellazione is  NULL 
	AND ( sdrms.validita_fine is  NULL OR sdrms.validita_fine < current_timestamp )
	AND stato.data_cancellazione is  NULL 
	AND ( stato.validita_fine is  NULL OR stato.validita_fine < current_timestamp );
--	RETURNING regmovfin_stato_r_id INTO v_id_stato;
--
--	IF v_id_stato IS NOT NULL THEN
--		v_messaggiorisultato:= ' INSERIMENTO REGISTRO ANNULLATO con id: '||v_id_stato||'.';
--	ELSE
--		RAISE EXCEPTION 'NESSUN RECORD INSERITO PER: % ', v_messaggiorisultato;		
--	END IF;

	IF p_loginOperazione != '' THEN
		v_login_operazione:= p_loginOperazione;
		v_messaggiorisultato:= v_messaggiorisultato || ' - LOGIN OPERAZIONE: ' || v_login_operazione;
	END IF;
	
	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_aggiorna_contabilita] v_messaggiorisultato=% FINE',v_messaggiorisultato;

	v_messaggiorisultato:= ' CANCELLAMENTO REGISTRI NON ANNULLATI ';
	
	IF p_loginOperazione != '' THEN
		v_login_operazione:= p_loginOperazione;
		v_messaggiorisultato:= v_messaggiorisultato || ' - LOGIN OPERAZIONE: ' || v_login_operazione;
	END IF;

	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_aggiorna_contabilita] v_messaggiorisultato=% INIZIO',v_messaggiorisultato;

	UPDATE siac_r_reg_movfin_stato srrms
	SET data_cancellazione = now(),
		validita_fine = now(),
		login_operazione = srrms.login_operazione||' - '||p_loginOperazione
	FROM siac_d_reg_movfin_stato sdrms,siac.siac_t_ordinativo sto
	JOIN siac_t_ente_proprietario step ON step.ente_proprietario_id = sto.ente_proprietario_id and step.ente_proprietario_id = p_enteProprietarioId
	JOIN siac_d_ordinativo_tipo sdot ON sdot.ord_tipo_id = sto.ord_tipo_id 
	JOIN siac_t_bil stb ON stb.bil_id = sto.bil_id
	JOIN siac_t_periodo stp ON stp.periodo_id = stb.periodo_id 
	JOIN siac_r_evento_reg_movfin srerm ON srerm.campo_pk_id = sto.ord_id
	JOIN siac_t_reg_movfin strm ON strm.regmovfin_id = srerm.regmovfin_id 
	JOIN siac_d_ambito sda ON sda.ambito_id = strm.ambito_id 
	WHERE sto.ord_numero = p_ordNumero
	AND sto.ord_anno = p_ord_anno
	AND stp.anno = p_annoBilancio
	AND sdot.ord_tipo_code = p_ordTipoCode
	AND sda.ambito_code = p_ambito
	AND sdrms.regmovfin_stato_id = srrms.regmovfin_stato_id 
	AND srrms.regmovfin_id = strm.regmovfin_id
	AND sdrms.regmovfin_stato_code != 'A'
	-- controllare lo stesso anno di bilancio sulla r
	AND strm.bil_id = stb.bil_id 
	AND sto.data_cancellazione is NULL 
	AND ( sto.validita_fine is NULL OR sto.validita_fine < current_timestamp )
	AND sdot.data_cancellazione is NULL 
	AND ( sdot.validita_fine is NULL OR sdot.validita_fine < current_timestamp )
	AND strm.data_cancellazione is NULL 
	AND ( strm.validita_fine is NULL OR strm.validita_fine < current_timestamp )
	AND srerm.data_cancellazione is NULL 
	AND ( srerm.validita_fine is NULL OR srerm.validita_fine < current_timestamp )
	AND srrms.data_cancellazione is NULL 
	AND ( srrms.validita_fine is NULL OR srrms.validita_fine < current_timestamp )
	AND sdrms.data_cancellazione is NULL 
	AND ( sdrms.validita_fine is NULL OR sdrms.validita_fine < current_timestamp );

	v_messaggiorisultato:= ' CANCELLAMENTO REGISTRI NON ANNULLATI ';
	
	IF p_loginOperazione != '' THEN
		v_login_operazione:= p_loginOperazione;
		v_messaggiorisultato:= v_messaggiorisultato || ' - LOGIN OPERAZIONE: ' || v_login_operazione;
	END IF;
	
	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_aggiorna_contabilita] v_messaggiorisultato=% FINE',v_messaggiorisultato;

  	v_result:= 0;
  	v_ambito:= p_ambito;
  
  	RAISE NOTICE '[fnc_siac_bko_modifica_pdc_ordinativo_aggiorna_contabilita] AGGIORNAMENTO CONTABILITA % COMPLETATO.', v_ambito;
  	
  	RETURN v_result;
  
EXCEPTION
    WHEN RAISE_EXCEPTION THEN
    v_messaggiorisultato:=v_messaggiorisultato|| ' - ' ||SUBSTRING(UPPER(SQLERRM) from 1 for 2500);
    RAISE NOTICE '%',v_messaggiorisultato;
        v_result = v_messaggiorisultato;
   		RETURN v_result;
	WHEN OTHERS THEN
	v_messaggiorisultato:=v_messaggiorisultato|| ' others - ' ||SUBSTRING(UPPER(SQLERRM) from 1 for 2500);
    RAISE NOTICE '%',v_messaggiorisultato;
		v_result = v_messaggiorisultato;
   		RETURN v_result;
  
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY DEFINER
COST 100;

-- ========================================= MODIFICA PDC AGGIORNA CONTABILITA ===========================================

-- END SIAC-7639
