/*
*SPDX-FileCopyrightText: Copyright 2020 | CSI Piemonte
*SPDX-License-Identifier: EUPL-1.2
*/
-- SIAC-6795

update siac_t_xbrl_report
set xbrl_rep_xsd_tassonomia=REPLACE(xbrl_rep_xsd_tassonomia, '2017-09-29', '2019-01-07')
where xbrl_rep_tipologia_code='SDB'
and xbrl_rep_xsd_tassonomia like '%2017-09-29%';

-- SIAC-6819 - MAURIZIO - INIZIO

DROP FUNCTION if exists siac."BILR068_stampa_variazione_entrate"(p_ente_prop_id integer, p_anno varchar, p_ele_variazioni varchar, p_anno_variazione varchar);

CREATE OR REPLACE FUNCTION siac."BILR068_stampa_variazione_entrate" (
  p_ente_prop_id integer,
  p_anno varchar,
  p_ele_variazioni varchar,
  p_anno_variazione varchar
)
RETURNS TABLE (
  bil_anno varchar,
  titoloe_tipo_code varchar,
  titoloe_tipo_desc varchar,
  titoloe_code varchar,
  titoloe_desc varchar,
  tipologia_tipo_code varchar,
  tipologia_tipo_desc varchar,
  tipologia_code varchar,
  tipologia_desc varchar,
  categoria_tipo_code varchar,
  categoria_tipo_desc varchar,
  categoria_code varchar,
  categoria_desc varchar,
  bil_ele_code varchar,
  bil_ele_desc varchar,
  bil_ele_code2 varchar,
  bil_ele_desc2 varchar,
  bil_ele_id integer,
  bil_ele_id_padre integer,
  stanziamento numeric,
  cassa numeric,
  residuo numeric,
  variazione_aumento_stanziato numeric,
  variazione_diminuzione_stanziato numeric,
  variazione_aumento_cassa numeric,
  variazione_diminuzione_cassa numeric,
  variazione_aumento_residuo numeric,
  variazione_diminuzione_residuo numeric,
  anno_riferimento varchar,
  ente_denominazione varchar,
  display_error varchar,
  flag_visualizzazione numeric
) AS
$body$
DECLARE

classifBilRec record;


annoCapImp varchar;
tipoImpComp varchar;
tipoImpCassa varchar;
tipoImpRes varchar;
elemTipoCode varchar;
h_count integer :=0;
DEF_NULL	constant varchar:=''; 
RTN_MESSAGGIO varchar(1000):=DEF_NULL;
user_table	varchar;
fase_bilancio varchar;
v_fam_titolotipologiacategoria varchar:='00003';
strApp varchar;
intApp numeric;
sql_query varchar;

BEGIN

annoCapImp:= p_anno; 

TipoImpComp='STA';  -- competenza
TipoImpCassa='SCA'; -- cassa
TipoImpRes='STR';   -- residui

-- 21/07/2016: il report funziona solo per la gestione, tolta la query
--  che legge la fase di bilancio.
elemTipoCode:='CAP-EG'; -- tipo capitolo gestione

-- se ?? presente il parametro con l'elenco delle variazioni verifico che abbia
-- solo dei numeri oltre le virgole.
IF p_ele_variazioni IS NOT NULL AND p_ele_variazioni <> '' THEN
  strApp=REPLACE(p_ele_variazioni,',','');
  raise notice 'VAR: %', strApp;
 --intApp= strApp ::numeric/ 1;
 intApp = strApp::numeric;
END IF;

bil_anno='';
titoloe_tipo_code='';
titoloe_TIPO_DESC='';
titoloe_CODE='';
titoloe_DESC='';
tipologia_tipo_code='';
tipologia_tipo_desc='';
tipologia_code='';
tipologia_desc='';
categoria_tipo_code='';
categoria_tipo_desc='';
categoria_code='';
categoria_desc='';
bil_ele_code='';
bil_ele_desc='';
bil_ele_code2='';
bil_ele_desc2='';
bil_ele_id=0;
bil_ele_id_padre=0;
stanziamento=0;
cassa=0;
residuo=0;
variazione_aumento_stanziato=0;
variazione_diminuzione_stanziato=0;
variazione_aumento_cassa=0;
variazione_diminuzione_cassa=0;
variazione_aumento_residuo=0;
variazione_diminuzione_residuo=0;
anno_riferimento='';
ente_denominazione ='';
display_error='';
flag_visualizzazione = -111;

select fnc_siac_random_user()
into	user_table;

 RTN_MESSAGGIO:='insert tabella siac_rep_tit_tip_cat_riga_anni''.';  



/* carico la struttura di bilancio completa */
with titent as 
(select 
e.classif_tipo_desc titent_tipo_desc,
a.classif_id titent_id,
a.classif_code titent_code,
a.classif_desc titent_desc,
a.validita_inizio titent_validita_inizio,
a.validita_fine titent_validita_fine,
a.ente_proprietario_id
from siac_t_class a, siac_r_class_fam_tree b, siac_t_class_fam_tree c, siac_d_class_fam d,siac_d_class_tipo e
where 
a.ente_proprietario_id=p_ente_prop_id
and a.classif_id=b.classif_id
and b.classif_fam_tree_id=c.classif_fam_tree_id
and c.classif_fam_id=d.classif_fam_id
and d.classif_fam_code = v_fam_titolotipologiacategoria--'00003'
and to_timestamp('31/12/'||p_anno,'dd/mm/yyyy') between b.validita_inizio and COALESCE(b.validita_fine,to_timestamp('31/12/'||p_anno,'dd/mm/yyyy'))
and b.classif_id_padre is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
and d.data_cancellazione is null
and e.classif_tipo_id=a.classif_tipo_id
),
tipologia as
(
select 
e.classif_tipo_desc tipologia_tipo_desc,
b.classif_id_padre titent_id,
a.classif_id tipologia_id,
a.classif_code tipologia_code,
a.classif_desc tipologia_desc,
a.validita_inizio tipologia_validita_inizio,
a.validita_fine tipologia_validita_fine,
a.ente_proprietario_id
from siac_t_class a, siac_r_class_fam_tree b, siac_t_class_fam_tree c, siac_d_class_fam d,siac_d_class_tipo e
where 
a.ente_proprietario_id=p_ente_prop_id
and a.classif_id=b.classif_id
and b.classif_fam_tree_id=c.classif_fam_tree_id
and c.classif_fam_id=d.classif_fam_id
and d.classif_fam_code = v_fam_titolotipologiacategoria--'00003'
and to_timestamp('31/12/'||p_anno,'dd/mm/yyyy') 
between b.validita_inizio and COALESCE(b.validita_fine,to_timestamp('31/12/'||p_anno,'dd/mm/yyyy'))
and b.classif_id_padre is not null
and b.livello=2
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
and d.data_cancellazione is null
and e.classif_tipo_id=a.classif_tipo_id
),
categoria as (
select 
e.classif_tipo_desc categoria_tipo_desc,
b.classif_id_padre tipologia_id,
a.classif_id categoria_id,
a.classif_code categoria_code,
a.classif_desc categoria_desc,
a.validita_inizio categoria_validita_inizio,
a.validita_fine categoria_validita_fine,
a.ente_proprietario_id
from siac_t_class a, siac_r_class_fam_tree b, siac_t_class_fam_tree c, siac_d_class_fam d,siac_d_class_tipo e
where 
a.ente_proprietario_id=p_ente_prop_id
and a.classif_id=b.classif_id
and b.classif_fam_tree_id=c.classif_fam_tree_id
and c.classif_fam_id=d.classif_fam_id
and d.classif_fam_code = v_fam_titolotipologiacategoria--'00003'
and to_timestamp('31/12/'||p_anno,'dd/mm/yyyy') 
between b.validita_inizio and COALESCE(b.validita_fine,to_timestamp('31/12/'||p_anno,'dd/mm/yyyy'))
and b.classif_id_padre is not null
and b.livello=3
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
and d.data_cancellazione is null
and e.classif_tipo_id=a.classif_tipo_id
)
insert into  siac_rep_tit_tip_cat_riga_anni
select 
titent.titent_tipo_desc,
titent.titent_id,
titent.titent_code,
titent.titent_desc,
titent.titent_validita_inizio,
titent.titent_validita_fine,
tipologia.tipologia_tipo_desc,
tipologia.tipologia_id,
tipologia.tipologia_code,
tipologia.tipologia_desc,
tipologia.tipologia_validita_inizio,
tipologia.tipologia_validita_fine,
categoria.categoria_tipo_desc,
categoria.categoria_id,
categoria.categoria_code,
categoria.categoria_desc,
categoria.categoria_validita_inizio,
categoria.categoria_validita_fine,
categoria.ente_proprietario_id,
user_table
 from titent,tipologia,categoria
where 
titent.titent_id=tipologia.titent_id
 and tipologia.tipologia_id=categoria.tipologia_id
 order by 
 titent.titent_code, tipologia.tipologia_code,categoria.categoria_code ;

 RTN_MESSAGGIO:='insert tabella siac_rep_cap_ep''.';  

insert into siac_rep_cap_eg
select cl.classif_id,
  anno_eserc.anno anno_bilancio,
  e.*, user_table utente
 from 	siac_r_bil_elem_class rc,
 		siac_t_bil_elem e,
        siac_d_class_tipo ct,
		siac_t_class cl,
        siac_t_bil bilancio,
        siac_t_periodo anno_eserc,
        siac_d_bil_elem_tipo tipo_elemento, 
		siac_d_bil_elem_stato stato_capitolo,
        siac_r_bil_elem_stato r_capitolo_stato,
		siac_d_bil_elem_categoria cat_del_capitolo,
        siac_r_bil_elem_categoria r_cat_capitolo
where ct.classif_tipo_code			=	'CATEGORIA'
and ct.classif_tipo_id				=	cl.classif_tipo_id
and cl.classif_id					=	rc.classif_id 
and e.ente_proprietario_id=p_ente_prop_id
and anno_eserc.anno					= 	p_anno
and bilancio.periodo_id				=	anno_eserc.periodo_id 
and e.bil_id						=	bilancio.bil_id 
and e.elem_tipo_id					=	tipo_elemento.elem_tipo_id 
and tipo_elemento.elem_tipo_code 	= 	elemTipoCode
and e.elem_id						=	rc.elem_id 
and	e.elem_id						=	r_capitolo_stato.elem_id
and	r_capitolo_stato.elem_stato_id	=	stato_capitolo.elem_stato_id
-- INC000001570761 and	stato_capitolo.elem_stato_code	=	'VA'
and	stato_capitolo.elem_stato_code	in ('VA', 'PR')
and	e.elem_id						=	r_cat_capitolo.elem_id
and	r_cat_capitolo.elem_cat_id		=	cat_del_capitolo.elem_cat_id
--and	cat_del_capitolo.elem_cat_code	=	'STD'
and e.data_cancellazione 				is null
and	r_capitolo_stato.data_cancellazione	is null
and	r_cat_capitolo.data_cancellazione	is null
and	rc.data_cancellazione				is null
and	ct.data_cancellazione 				is null
and	cl.data_cancellazione 				is null
and	bilancio.data_cancellazione 		is null
and	anno_eserc.data_cancellazione 		is null
and	tipo_elemento.data_cancellazione	is null
and	stato_capitolo.data_cancellazione 	is null
and	cat_del_capitolo.data_cancellazione	is null;


insert into siac_rep_cap_eg
select null,
  anno_eserc.anno anno_bilancio,
  e.*, user_table utente
 from 	
 		siac_t_bil_elem e,
        siac_t_bil bilancio,
        siac_t_periodo anno_eserc,
        siac_d_bil_elem_tipo tipo_elemento, 
		siac_d_bil_elem_stato stato_capitolo,
        siac_r_bil_elem_stato r_capitolo_stato
where e.ente_proprietario_id=p_ente_prop_id
and anno_eserc.anno					= 	p_anno
and bilancio.periodo_id				=	anno_eserc.periodo_id 
and e.bil_id						=	bilancio.bil_id 
and e.elem_tipo_id					=	tipo_elemento.elem_tipo_id 
and tipo_elemento.elem_tipo_code 	= 	elemTipoCode
and	e.elem_id						=	r_capitolo_stato.elem_id
and	r_capitolo_stato.elem_stato_id	=	stato_capitolo.elem_stato_id
-- INC000001570761 and	stato_capitolo.elem_stato_code	=	'VA'
and	stato_capitolo.elem_stato_code	in ('VA', 'PR')
and e.data_cancellazione 				is null
and	r_capitolo_stato.data_cancellazione	is null
and	bilancio.data_cancellazione 		is null
and	anno_eserc.data_cancellazione 		is null
and	tipo_elemento.data_cancellazione	is null
and	stato_capitolo.data_cancellazione 	is null
and not EXISTS
(
   select 1 from siac_rep_cap_eg x
   where x.elem_id = e.elem_id
   and x.utente=user_table
);




 RTN_MESSAGGIO:='insert tabella siac_rep_cap_ep_imp''.';  

/* 18/05/2016: introdotta modifica all'estrazione degli importi dei capitoli.
	Si deve tener conto di eventuali variazioni successive e decrementare 
    l'importo del capitolo.
*/

INSERT INTO siac_rep_cap_eg_imp
select 		capitolo_importi.elem_id,
			capitolo_imp_periodo.anno 				BIL_ELE_IMP_ANNO,
           	capitolo_imp_tipo.elem_det_tipo_code 	TIPO_IMP,
            capitolo_importi.ente_proprietario_id,
            user_table utente,   
            sum(capitolo_importi.elem_det_importo)    importo_cap 
from 		siac_t_bil_elem_det capitolo_importi,
         	siac_d_bil_elem_det_tipo capitolo_imp_tipo,
         	siac_t_periodo capitolo_imp_periodo,
            siac_t_bil_elem capitolo,
            siac_d_bil_elem_tipo tipo_elemento,
            siac_t_bil bilancio,
	 		siac_t_periodo anno_eserc, 
			siac_d_bil_elem_stato stato_capitolo, 
            siac_r_bil_elem_stato r_capitolo_stato,
			siac_d_bil_elem_categoria cat_del_capitolo, 
            siac_r_bil_elem_categoria r_cat_capitolo
    where 	capitolo_importi.ente_proprietario_id = p_ente_prop_id  
        and	anno_eserc.anno						= 	p_anno 												
    	and	bilancio.periodo_id					=	anno_eserc.periodo_id 								
        and	capitolo.bil_id						=	bilancio.bil_id 			 
        and	capitolo.elem_id					=	capitolo_importi.elem_id 
        and	capitolo.elem_tipo_id				=	tipo_elemento.elem_tipo_id 						
        and	tipo_elemento.elem_tipo_code 		= 	elemTipoCode
        and	capitolo_importi.elem_det_tipo_id	=	capitolo_imp_tipo.elem_det_tipo_id 		
        and	capitolo_imp_periodo.periodo_id		=	capitolo_importi.periodo_id 			  
       -- and	capitolo_imp_periodo.anno in (annoCapImp)
        and	capitolo.elem_id					=	r_capitolo_stato.elem_id
		and	r_capitolo_stato.elem_stato_id		=	stato_capitolo.elem_stato_id
		-- INC000001570761 and	stato_capitolo.elem_stato_code	=	'VA'
		and	stato_capitolo.elem_stato_code	in ('VA', 'PR')
		and	capitolo.elem_id					=	r_cat_capitolo.elem_id
		and	r_cat_capitolo.elem_cat_id			=	cat_del_capitolo.elem_cat_id
		--and	cat_del_capitolo.elem_cat_code		=	'STD'
        and	capitolo_importi.data_cancellazione 	is null
        and	capitolo_imp_tipo.data_cancellazione 	is null
        and	capitolo_imp_periodo.data_cancellazione is null
        and	capitolo.data_cancellazione 			is null
        and	tipo_elemento.data_cancellazione 		is null
        and	bilancio.data_cancellazione 			is null
        and	anno_eserc.data_cancellazione 			is null
        and	stato_capitolo.data_cancellazione 		is null
        and	r_capitolo_stato.data_cancellazione 	is null
        and	cat_del_capitolo.data_cancellazione 	is null
        and	r_cat_capitolo.data_cancellazione 		is null
    group by capitolo_importi.elem_id,capitolo_imp_tipo.elem_det_tipo_code,
    capitolo_imp_periodo.anno,capitolo_importi.ente_proprietario_id, utente;

     RTN_MESSAGGIO:='preparazione tabella importi riga capitolo ''.';  


insert into siac_rep_cap_eg_imp_riga
select  tb1.elem_id,
		tb4.importo		as		residui_attivi,
        tb1.importo 	as 		previsioni_definitive_comp,
        tb2.importo		as		previsioni_definitive_cassa,
        tb1.ente_proprietario,
        user_table utente,
        tb1.periodo_anno
from   
	siac_rep_cap_eg_imp tb1, siac_rep_cap_eg_imp tb2, siac_rep_cap_eg_imp tb4
	where			tb1.elem_id	=	tb2.elem_id	 								and
    				tb1.elem_id	=	tb4.elem_id	 								and												
        			--tb1.periodo_anno 	= annoCapImp		AND	
                    tb1.tipo_imp =	tipoImpComp		        and  
        			tb2.periodo_anno	= tb1.periodo_anno	AND	
                    tb2.tipo_imp = 	tipoImpCassa	        and
                    tb4.periodo_anno	= tb1.periodo_anno	AND	
                    tb4.tipo_imp = 	tipoImpRes		        and
                    tb1.ente_proprietario =	p_ente_prop_id						and
                  	tb2.ente_proprietario	=	tb1.ente_proprietario			and
                    tb4.ente_proprietario	=	tb1.ente_proprietario			and
                    tb1.utente				=	user_table						and
                    tb2.utente				=	tb1.utente						and
                    tb4.utente				=	tb1.utente;
                  
     RTN_MESSAGGIO:='preparazione tabella variazioni''.';  

/*
insert into siac_rep_var_entrate
select	dettaglio_variazione.elem_id,
		sum(dettaglio_variazione.elem_det_importo),
        ------dettaglio_variazione.elem_det_importo,
        tipo_elemento.elem_det_tipo_code, 
        user_table utente,
        atto.ente_proprietario_id	,
        anno_importo.anno	      	
from 	siac_t_atto_amm 			atto,
        siac_d_atto_amm_tipo		tipo_atto,
		siac_r_atto_amm_stato 		r_atto_stato,
        siac_d_atto_amm_stato 		stato_atto,
        siac_r_variazione_stato		r_variazione_stato,
        siac_t_variazione 			testata_variazione,
        siac_d_variazione_tipo		tipologia_variazione,
        siac_d_variazione_stato 	tipologia_stato_var,
        siac_t_bil_elem_det_var 	dettaglio_variazione,
        siac_t_bil_elem				capitolo,
        siac_d_bil_elem_tipo 		tipo_capitolo,
        siac_d_bil_elem_det_tipo	tipo_elemento,
        siac_t_periodo 				anno_eserc ,
        siac_t_periodo              anno_importo,
        siac_t_bil                  bilancio  
where 	atto.ente_proprietario_id 							= 	p_ente_prop_id
--and testata_variazione.variazione_num in 
--and		atto.attoamm_numero 								= 	p_numero_delibera
--and		atto.attoamm_anno									=	p_anno_delibera
and		atto.attoamm_tipo_id								=	tipo_atto.attoamm_tipo_id
---------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------
---------------------------------------------------------------------------------------------------
--and		tipo_atto.attoamm_tipo_code							=	p_tipo_delibera-----------   deve essere un parametro di input 
--------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------------
and		r_atto_stato.attoamm_id								=	atto.attoamm_id
and		r_atto_stato.attoamm_stato_id						=	stato_atto.attoamm_stato_id
--and		stato_atto.attoamm_stato_code						=	'DEFINITIVO'
and		r_variazione_stato.attoamm_id						=	atto.attoamm_id
and		r_variazione_stato.variazione_id					=	testata_variazione.variazione_id
and		testata_variazione.variazione_tipo_id				=	tipologia_variazione.variazione_tipo_id	
and		anno_eserc.anno										= 	p_anno 												
and		anno_importo.periodo_id 							=	dettaglio_variazione.periodo_id					
and     anno_eserc.periodo_id                               = bilancio.periodo_id
and     testata_variazione.bil_id                           = bilancio.bil_id 
and     capitolo.bil_id                                     = bilancio.bil_id   
-- 15/06/2016: cambiati i tipi di variazione. Aggiunto 'AS'.
--and		tipologia_variazione.variazione_tipo_code			in ('ST','VA', 'VR', 'PF')
-- 19/07/2016: tolto il test sul tipo di variazione: accettate tutte.
--and		tipologia_variazione.variazione_tipo_code			in ('ST','VA', 'VR', 'PF', 'AS')
and 	tipologia_stato_var.variazione_stato_tipo_id		=	r_variazione_stato.variazione_stato_tipo_id
and		tipologia_stato_var.variazione_stato_tipo_code		 in	('B','G', 'C', 'P')
and		r_variazione_stato.variazione_stato_id				=	dettaglio_variazione.variazione_stato_id
and		dettaglio_variazione.elem_id						=	capitolo.elem_id
and		capitolo.elem_tipo_id								=	tipo_capitolo.elem_tipo_id
and		tipo_capitolo.elem_tipo_code						=	elemTipoCode
and		dettaglio_variazione.elem_det_tipo_id				=	tipo_elemento.elem_det_tipo_id
and		tipo_elemento.elem_det_tipo_code					in ('STA','SCA','STR')
and		atto.data_cancellazione						is null
and		tipo_atto.data_cancellazione				is null
and		r_atto_stato.data_cancellazione				is null
and		stato_atto.data_cancellazione				is null
and		r_variazione_stato.data_cancellazione		is null
and		testata_variazione.data_cancellazione		is null
and		tipologia_variazione.data_cancellazione		is null
and		tipologia_stato_var.data_cancellazione		is null
and 	dettaglio_variazione.data_cancellazione		is null
and 	capitolo.data_cancellazione					is null
and		tipo_capitolo.data_cancellazione			is null
and		tipo_elemento.data_cancellazione			is null
group by 	dettaglio_variazione.elem_id,
        	tipo_elemento.elem_det_tipo_code, 
        	utente,
        	atto.ente_proprietario_id,
            anno_importo.anno	  ;*/

sql_query='insert into siac_rep_var_entrate
select	dettaglio_variazione.elem_id,
		sum(dettaglio_variazione.elem_det_importo),        
        tipo_elemento.elem_det_tipo_code, '''; 
sql_query=sql_query ||user_table||''' utente, 
        testata_variazione.ente_proprietario_id	,
        anno_importo.anno      	
from 	siac_r_variazione_stato		r_variazione_stato,
        siac_t_variazione 			testata_variazione,
        siac_d_variazione_tipo		tipologia_variazione,
        siac_d_variazione_stato 	tipologia_stato_var,
        siac_t_bil_elem_det_var 	dettaglio_variazione,
        siac_t_bil_elem				capitolo,
        siac_d_bil_elem_tipo 		tipo_capitolo,
        siac_d_bil_elem_det_tipo	tipo_elemento,
        siac_t_periodo 				anno_eserc ,
        siac_t_periodo              anno_importo,
        siac_t_bil                  bilancio  
where 	r_variazione_stato.variazione_id					=	testata_variazione.variazione_id
and		testata_variazione.variazione_tipo_id				=	tipologia_variazione.variazione_tipo_id	
and		anno_importo.periodo_id 							=	dettaglio_variazione.periodo_id					
and     anno_eserc.periodo_id                               = bilancio.periodo_id
and     testata_variazione.bil_id                           = bilancio.bil_id 
and     capitolo.bil_id                                     = bilancio.bil_id 
and		r_variazione_stato.variazione_stato_id				=	dettaglio_variazione.variazione_stato_id
and		dettaglio_variazione.elem_id						=	capitolo.elem_id
and		capitolo.elem_tipo_id								=	tipo_capitolo.elem_tipo_id
and		dettaglio_variazione.elem_det_tipo_id				=	tipo_elemento.elem_det_tipo_id  
and 	tipologia_stato_var.variazione_stato_tipo_id		=	r_variazione_stato.variazione_stato_tipo_id ';
sql_query=sql_query ||' and		tipo_capitolo.elem_tipo_code =	'''||elemTipoCode||'''';
sql_query=sql_query ||' and 	testata_variazione.ente_proprietario_id 	= 	'||p_ente_prop_id;
sql_query=sql_query ||' and		anno_eserc.anno					= 	'''||p_anno||''''; 												
sql_query=sql_query ||' and 	testata_variazione.variazione_num in ('||p_ele_variazioni||') ';  
sql_query=sql_query ||' and		tipologia_stato_var.variazione_stato_tipo_code		 in	(''B'',''G'', ''C'', ''P'')
and		tipo_elemento.elem_det_tipo_code					in (''STA'',''SCA'',''STR'')
and		r_variazione_stato.data_cancellazione		is null
and		testata_variazione.data_cancellazione		is null
and		tipologia_variazione.data_cancellazione		is null
and		tipologia_stato_var.data_cancellazione		is null
and 	dettaglio_variazione.data_cancellazione		is null
and 	capitolo.data_cancellazione					is null
and		tipo_capitolo.data_cancellazione			is null
and		tipo_elemento.data_cancellazione			is null
group by 	dettaglio_variazione.elem_id,
        	tipo_elemento.elem_det_tipo_code, 
        	utente,
        	testata_variazione.ente_proprietario_id,
            anno_importo.anno'  ;    
            
raise notice 'sql_query = %',sql_query;
                    
EXECUTE sql_query;

    
     RTN_MESSAGGIO:='preparazione tabella variazioni riga  ''.';  

insert into siac_rep_var_entrate_riga
select  tb0.elem_id,    
		tb1.importo   as 		variazione_aumento_stanziato,
        tb2.importo   as 		variazione_diminuzione_stanziato,
        tb3.importo   as 		variazione_aumento_cassa,
        tb4.importo   as 		variazione_diminuzione_cassa,
        tb5.importo   as 		variazione_aumento_residuo,
        tb6.importo   as 		variazione_diminuzione_residuo,
        user_table utente,
        p_ente_prop_id,
        p_anno
from   
	siac_rep_cap_eg tb0 
    left join siac_rep_var_entrate tb1
     on (tb1.elem_id		=	tb0.elem_id	
     	and tb1.tipologia  	= 'STA'	AND	tb1.importo >= 0	
        and tb1.periodo_anno=p_anno
        and tb1.utente = tb0.utente ) 
    left join siac_rep_var_entrate tb2
    on (tb2.elem_id		=	tb0.elem_id
     	and tb2.tipologia  	= 'STA'	AND	tb2.importo <= 0	
        and tb2.periodo_anno=p_anno
        and tb2.utente = tb0.utente )
    left join siac_rep_var_entrate tb3
     on (tb3.elem_id		=	tb0.elem_id	
     	and tb3.tipologia  	= 'SCA'	AND	tb3.importo >= 0	
        and tb3.periodo_anno=p_anno
        and tb3.utente = tb0.utente ) 
    left join siac_rep_var_entrate tb4
    on (tb4.elem_id		=	tb0.elem_id
     	and tb4.tipologia  	= 'SCA'	AND	tb4.importo <= 0	
        and tb4.periodo_anno=p_anno
        and tb4.utente = tb0.utente )
    left join siac_rep_var_entrate tb5
     on (tb5.elem_id		=	tb0.elem_id	
     	and tb5.tipologia  	= 'STR'	AND	tb5.importo >= 0	
        and tb5.periodo_anno=p_anno
        and tb5.utente = tb0.utente ) 
    left join siac_rep_var_entrate tb6
    on (tb6.elem_id		=	tb0.elem_id
     	and tb6.tipologia  	= 'STR'	AND	tb6.importo <= 0
        and tb6.periodo_anno=p_anno
        and tb6.utente = tb0.utente 	)
  union 
     select  tb0.elem_id,     
		tb1.importo   as 		variazione_aumento_stanziato,
        tb2.importo   as 		variazione_diminuzione_stanziato,
        tb3.importo   as 		variazione_aumento_cassa,
        tb4.importo   as 		variazione_diminuzione_cassa,
        tb5.importo   as 		variazione_aumento_residuo,
        tb6.importo   as 		variazione_diminuzione_residuo,
        user_table utente,
        p_ente_prop_id,
        (p_anno::INTEGER + 1)::varchar from   
	siac_rep_cap_eg tb0 
    left join siac_rep_var_entrate tb1
     on (tb1.elem_id		=	tb0.elem_id	
     	and tb1.tipologia  	= 'STA'	AND	tb1.importo >= 0	
        and tb1.periodo_anno= (p_anno::INTEGER + 1)::varchar
        and tb1.utente = tb0.utente ) 
    left join siac_rep_var_entrate tb2
    on (tb2.elem_id		=	tb0.elem_id
     	and tb2.tipologia  	= 'STA'	AND	tb2.importo <= 0	
        and tb2.periodo_anno= (p_anno::INTEGER + 1)::varchar
        and tb2.utente = tb0.utente )
    left join siac_rep_var_entrate tb3
     on (tb3.elem_id		=	tb0.elem_id	
     	and tb3.tipologia  	= 'SCA'	AND	tb3.importo >= 0	
        and tb3.periodo_anno= (p_anno::INTEGER + 1)::varchar
        and tb3.utente = tb0.utente ) 
    left join siac_rep_var_entrate tb4
    on (tb4.elem_id		=	tb0.elem_id
     	and tb4.tipologia  	= 'SCA'	AND	tb4.importo <= 0	
        and tb4.periodo_anno= (p_anno::INTEGER + 1)::varchar
        and tb4.utente = tb0.utente )
    left join siac_rep_var_entrate tb5
     on (tb5.elem_id		=	tb0.elem_id	
     	and tb5.tipologia  	= 'STR'	AND	tb5.importo >= 0	
        and tb5.periodo_anno= (p_anno::INTEGER + 1)::varchar
        and tb5.utente = tb0.utente ) 
    left join siac_rep_var_entrate tb6
    on (tb6.elem_id		=	tb0.elem_id
     	and tb6.tipologia  	= 'STR'	AND	tb6.importo <= 0
        and tb6.periodo_anno= (p_anno::INTEGER + 1)::varchar
        and tb6.utente = tb0.utente 	)
    union 
    select  tb0.elem_id,     
		tb1.importo   as 		variazione_aumento_stanziato,
        tb2.importo   as 		variazione_diminuzione_stanziato,
        tb3.importo   as 		variazione_aumento_cassa,
        tb4.importo   as 		variazione_diminuzione_cassa,
        tb5.importo   as 		variazione_aumento_residuo,
        tb6.importo   as 		variazione_diminuzione_residuo,
        user_table utente,
        p_ente_prop_id,
        (p_anno::INTEGER + 2)::varchar	from   
	siac_rep_cap_eg tb0 
    left join siac_rep_var_entrate tb1
     on (tb1.elem_id		=	tb0.elem_id	
     	and tb1.tipologia  	= 'STA'	AND	tb1.importo >= 0	
        and tb1.periodo_anno= (p_anno::INTEGER + 2)::varchar
        and tb1.utente = tb0.utente ) 
    left join siac_rep_var_entrate tb2
    on (tb2.elem_id		=	tb0.elem_id
     	and tb2.tipologia  	= 'STA'	AND	tb2.importo <= 0	
        and tb2.periodo_anno= (p_anno::INTEGER + 2)::varchar
        and tb2.utente = tb0.utente )
    left join siac_rep_var_entrate tb3
     on (tb3.elem_id		=	tb0.elem_id	
     	and tb3.tipologia  	= 'SCA'	AND	tb3.importo >= 0	
        and tb3.periodo_anno= (p_anno::INTEGER + 2)::varchar
        and tb3.utente = tb0.utente ) 
    left join siac_rep_var_entrate tb4
    on (tb4.elem_id		=	tb0.elem_id
     	and tb4.tipologia  	= 'SCA'	AND	tb4.importo <= 0	
        and tb4.periodo_anno= (p_anno::INTEGER + 2)::varchar
        and tb4.utente = tb0.utente )
    left join siac_rep_var_entrate tb5
     on (tb5.elem_id		=	tb0.elem_id	
     	and tb5.tipologia  	= 'STR'	AND	tb5.importo >= 0	
        and tb5.periodo_anno= (p_anno::INTEGER + 2)::varchar
        and tb5.utente = tb0.utente ) 
    left join siac_rep_var_entrate tb6
    on (tb6.elem_id		=	tb0.elem_id
     	and tb6.tipologia  	= 'STR'	AND	tb6.importo <= 0
        and tb6.periodo_anno= (p_anno::INTEGER + 2)::varchar
        and tb6.utente = tb0.utente 	);


        
     RTN_MESSAGGIO:='preparazione file output ''.';          
  
/* 20/05/2016: aggiunto il controllo se il capitolo ha subito delle variazioni, tramite
	il test su siac_rep_var_entrate_riga x, siac_rep_cap_eg y, siac_r_class_fam_tree z
*/
for classifBilRec in
select 	t_ente.ente_denominazione 		ente_denominazione,
		v1.classif_tipo_desc1    		titoloe_TIPO_DESC,
       	v1.titolo_id              		titoloe_ID,
       	v1.titolo_code             		titoloe_CODE,
       	v1.titolo_desc             		titoloe_DESC,
       	v1.classif_tipo_desc2  			tipologia_TIPO_DESC,
       	v1.tipologia_id              	tipologia_ID,
       	v1.tipologia_code            	tipologia_CODE,
       	v1.tipologia_desc            	tipologia_DESC,
       	v1.classif_tipo_desc3     		categoria_TIPO_DESC,
      	v1.categoria_id              	categoria_ID,
       	v1.categoria_code            	categoria_CODE,
       	v1.categoria_desc            	categoria_DESC,
    	tb.anno_bilancio    			BIL_ANNO,
       	tb.elem_code     				BIL_ELE_CODE,
       	tb.elem_desc     				BIL_ELE_DESC,
       	tb.elem_code2     				BIL_ELE_CODE2,
       	tb.elem_desc2     				BIL_ELE_DESC2,
       	tb.elem_id      				BIL_ELE_ID,
       	tb.elem_id_padre    			BIL_ELE_ID_PADRE,
        COALESCE (tb1.previsioni_definitive_comp,0)					stanziamento,
    	COALESCE (tb1.previsioni_definitive_cassa,0)			cassa,
        COALESCE (tb1.residui_attivi,0)				residuo,
	   	COALESCE (tb2.variazione_aumento_stanziato,0)			variazione_aumento_stanziato,
		COALESCE (tb2.variazione_diminuzione_stanziato* -1,0)		variazione_diminuzione_stanziato,
    	COALESCE (tb2.variazione_aumento_cassa,0)				variazione_aumento_cassa,
   	 	COALESCE (tb2.variazione_diminuzione_cassa* -1,0)			variazione_diminuzione_cassa,
        COALESCE (tb2.variazione_aumento_residuo,0)				variazione_aumento_residuo,
   	 	COALESCE (tb2.variazione_diminuzione_residuo * -1,0)	variazione_diminuzione_residuo,
        tb1.periodo_anno  anno_riferimento
           ,COALESCE (ve.elem_id,-111) flag_visualizzazione   ---- cle -nuovo 
from  	siac_t_ente_proprietario t_ente,
		siac_rep_tit_tip_cat_riga_anni v1
			left  join siac_rep_cap_eg tb
           on    	(v1.categoria_id = tb.classif_id    
           			and v1.ente_proprietario_id=p_ente_prop_id
					and	tb.ente_proprietario_id	=v1.ente_proprietario_id
					AND TB.utente=V1.utente
                    and v1.utente=user_table)
            left	join    siac_rep_cap_eg_imp_riga tb1  
            on (tb1.elem_id	=	tb.elem_id 
            		AND tb.utente=tb1.utente
                    and tb.utente=user_table)
            left	join    siac_rep_var_entrate_riga tb2  
            on (tb2.elem_id	=	tb1.elem_id
            		AND tb2.utente=tb1.utente
                    and tb1.utente=user_table
                    and tb2.periodo_anno=tb1.periodo_anno)
---- cle -nuovo  
       left join siac_rep_var_entrate ve
     on (	tb.elem_id	=ve.elem_id	
     --14/05/2019 - SIAC-6819: i capitoli variati non erano estratti se l'anno di 
     -- variazione era maggiore di quello del bilancio. 
        --and ve.periodo_anno=p_anno
        and ve.periodo_anno=p_anno_variazione     
        and ve.utente = TB.utente ) 
---- fine cle -nuovo  
    where t_ente.ente_proprietario_id=v1.ente_proprietario_id
    and v1.utente = user_table    	
    and  tb1.periodo_anno=p_anno_variazione
   and exists ( select 1 from siac_rep_var_entrate_riga x, siac_rep_cap_eg y, 
                                siac_r_class_fam_tree z
                where x.elem_id= y.elem_id
                 and x.utente=user_table
                 and y.utente=user_table
                 and y.classif_id = z.classif_id
                 and z.classif_id_padre = v1.tipologia_id
            /*  AND (COALESCE(x.variazione_aumento_cassa,0) <>0 OR
                 		COALESCE(x.variazione_aumento_residuo,0) <>0  OR
                        COALESCE(x.variazione_aumento_stanziato,0) <>0 OR
                        COALESCE(x.variazione_diminuzione_cassa,0) <>0 OR
                        COALESCE(x.variazione_diminuzione_residuo,0) <>0 OR
                        COALESCE(x.variazione_diminuzione_stanziato,0) <>0)*/
                        
    )	
    union
    select 	t_ente.ente_denominazione 		ente_denominazione,
		'Titolo'    			titoloe_TIPO_DESC,
       	NULL              		titoloe_ID,
       	'0'            			titoloe_CODE,
       	' '             	titoloe_DESC,
       	'Tipologia'	  			tipologia_TIPO_DESC,
       	null	              	tipologia_ID,
       	'0000000'            	tipologia_CODE,
       	' '           tipologia_DESC,
       	'Categoria'     		categoria_TIPO_DESC,
      	null	              	categoria_ID,
       	'0000000'            	categoria_CODE,
       	' '           categoria_DESC,
    	tb.anno_bilancio    			BIL_ANNO,
       	tb.elem_code     				BIL_ELE_CODE,
       	tb.elem_desc     				BIL_ELE_DESC,
       	tb.elem_code2     				BIL_ELE_CODE2,
       	tb.elem_desc2     				BIL_ELE_DESC2,
       	tb.elem_id      				BIL_ELE_ID,
       	tb.elem_id_padre    			BIL_ELE_ID_PADRE,
        COALESCE (tb1.previsioni_definitive_comp,0)					stanziamento,
    	COALESCE (tb1.previsioni_definitive_cassa,0)			cassa,
        COALESCE (tb1.residui_attivi,0)				residuo,
	   	COALESCE (tb2.variazione_aumento_stanziato,0)			variazione_aumento_stanziato,
		COALESCE (tb2.variazione_diminuzione_stanziato* -1,0)		variazione_diminuzione_stanziato,
    	COALESCE (tb2.variazione_aumento_cassa,0)				variazione_aumento_cassa,
   	 	COALESCE (tb2.variazione_diminuzione_cassa* -1,0)			variazione_diminuzione_cassa,
        COALESCE (tb2.variazione_aumento_residuo,0)				variazione_aumento_residuo,
   	 	COALESCE (tb2.variazione_diminuzione_residuo * -1,0)	variazione_diminuzione_residuo,
        tb1.periodo_anno  anno_riferimento
        	,COALESCE (ve.elem_id,-111) flag_visualizzazione  
from  	siac_t_ente_proprietario t_ente,
		 siac_rep_cap_eg tb
            left	join    siac_rep_cap_eg_imp_riga tb1  
            on (tb1.elem_id	=	tb.elem_id 
            		AND tb.utente=tb1.utente
                    and tb.utente=user_table)
            left	join    siac_rep_var_entrate_riga tb2  
            on (tb2.elem_id	=	tb1.elem_id
            		AND tb2.utente=tb1.utente
                    and tb1.utente=user_table
                    and tb2.periodo_anno=tb1.periodo_anno) 
 ---- cle -nuovo  
       left join siac_rep_var_entrate ve
     on (	tb.elem_id	=ve.elem_id	
     --14/05/2019 - SIAC-6819: i capitoli variati non erano estratti se l'anno di 
     -- variazione era maggiore di quello del bilancio. 
        --and ve.periodo_anno=p_anno
        and ve.periodo_anno=p_anno_variazione
        and ve.utente = TB.utente ) 
---- fine cle -nuovo  
    where t_ente.ente_proprietario_id=tb.ente_proprietario_id
    and tb.utente = user_table    	
    and  tb1.periodo_anno=p_anno_variazione
   and tb.classif_id is null
			order by titoloe_CODE,tipologia_CODE,categoria_CODE

loop



---titoloe_tipo_code := classifBilRec.titoloe_tipo_code;
titoloe_TIPO_DESC := classifBilRec.titoloe_TIPO_DESC;
titoloe_CODE := classifBilRec.titoloe_CODE;
titoloe_DESC := classifBilRec.titoloe_DESC;
--------tipologia_tipo_code := classifBilRec.tipologia_tipo_code;
tipologia_tipo_desc := classifBilRec.tipologia_tipo_desc;
tipologia_code := classifBilRec.tipologia_code;
tipologia_desc := classifBilRec.tipologia_desc;
-------categoria_tipo_code := classifBilRec.categoria_tipo_code;
categoria_tipo_desc := classifBilRec.categoria_tipo_desc;
categoria_code := classifBilRec.categoria_code;
categoria_desc := classifBilRec.categoria_desc;
bil_anno:=classifBilRec.bil_anno;
bil_ele_code:=classifBilRec.bil_ele_code;
bil_ele_desc:=classifBilRec.bil_ele_desc;
bil_ele_code2:=classifBilRec.bil_ele_code2;
bil_ele_desc2:=classifBilRec.bil_ele_desc2;
bil_ele_id:=classifBilRec.bil_ele_id;
bil_ele_id_padre:=classifBilRec.bil_ele_id_padre;
stanziamento:=classifBilRec.stanziamento;
cassa:=classifBilRec.cassa;
residuo:=classifBilRec.residuo;
variazione_aumento_stanziato:=classifBilRec.variazione_aumento_stanziato;
variazione_diminuzione_stanziato:=classifBilRec.variazione_diminuzione_stanziato;
variazione_aumento_cassa:=classifBilRec.variazione_aumento_cassa;
variazione_diminuzione_cassa:=classifBilRec.variazione_diminuzione_cassa;
variazione_aumento_residuo:=classifBilRec.variazione_aumento_residuo;
variazione_diminuzione_residuo:=classifBilRec.variazione_diminuzione_residuo;
anno_riferimento:=classifBilRec.anno_riferimento;
ente_denominazione =classifBilRec.ente_denominazione;
flag_visualizzazione  =  classifBilRec.flag_visualizzazione ; 


return next;

bil_anno='';
titoloe_tipo_code='';
titoloe_TIPO_DESC='';
titoloe_CODE='';
titoloe_DESC='';
tipologia_tipo_code='';
tipologia_tipo_desc='';
tipologia_code='';
tipologia_desc='';
categoria_tipo_code='';
categoria_tipo_desc='';
categoria_code='';
categoria_desc='';
bil_ele_code='';
bil_ele_desc='';
bil_ele_code2='';
bil_ele_desc2='';
bil_ele_id=0;
bil_ele_id_padre=0;
stanziamento=0;
cassa=0;
residuo=0;
variazione_aumento_stanziato=0;
variazione_diminuzione_stanziato=0;
variazione_aumento_cassa=0;
variazione_diminuzione_cassa=0;
variazione_aumento_residuo=0;
variazione_diminuzione_residuo=0;
anno_riferimento='';
ente_denominazione ='';
flag_visualizzazione = -111;

end loop;

delete from siac_rep_tit_tip_cat_riga_anni where utente=user_table;


delete from siac_rep_cap_eg where utente=user_table;

delete from siac_rep_cap_eg_imp where utente=user_table;

delete from siac_rep_cap_eg_imp_riga where utente=user_table;

delete from	siac_rep_var_entrate	where utente=user_table;

delete from siac_rep_var_entrate_riga where utente=user_table; 


raise notice 'fine OK';

exception
	when no_data_found THEN
		raise notice 'Variazioni non trovate' ;
		--return next;
    when syntax_error THEN
    	display_error='ERRORE DI SINTASSI NEI PARAMETRI: '|| SQLERRM|| ' - Verificare se sono stati inseriti caratteri alfabetici oltre la virgola.';
    	return next;
    	return;
    when invalid_text_representation THEN
    	display_error='ERRORE DI SINTASSI NEI PARAMETRI: '|| SQLERRM|| ' - Verificare se sono stati inseriti caratteri alfabetici oltre la virgola.';
    	return next;
    	return;
	when others  THEN
		--raise notice 'errore nella lettura delle variazioni ';
 		RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

-- SIAC-6819 - MAURIZIO - FINE

-- SIAC-6821 - MAURIZIO - INIZIO

DROP FUNCTION if exists siac."BILR040_progetti_per_capitolo_dati_cronop"(p_ente_prop_id integer, p_capitolo varchar, p_articolo varchar, p_ueb varchar, p_tipologia_capitolo varchar, p_anno_bilancio varchar);
DROP FUNCTION if exists siac."BILR040_progetti_per_capitolo_dati_programma"(p_ente_prop_id integer, p_capitolo varchar, p_articolo varchar, p_ueb varchar, p_tipologia_capitolo varchar, p_anno_bilancio varchar);
DROP FUNCTION if exists siac."BILR045_report_progetto_dati_cronop"(p_ente_prop_id integer, p_codice_progetto varchar, p_anno_bilancio varchar);
DROP FUNCTION if exists siac."BILR045_report_progetto_dati_programma"(p_ente_prop_id integer, p_codice_progetto varchar, p_anno_bilancio varchar);

CREATE OR REPLACE FUNCTION siac."BILR040_progetti_per_capitolo_dati_programma" (
  p_ente_prop_id integer,
  p_capitolo varchar,
  p_articolo varchar,
  p_ueb varchar,
  p_tipologia_capitolo varchar,
  p_anno_bilancio varchar
)
RETURNS TABLE (
  id_progetto integer,
  codice_progetto varchar,
  descrizione_progetto varchar,
  valore_progetto numeric,
  ambito varchar,
  stato varchar,
  rilev_fpv varchar,
  atto_id integer,
  atto_anno varchar,
  atto_numero varchar,
  atto_oggetto varchar,
  atto_note varchar,
  atto_tipo_id integer,
  atto_stato_id integer,
  atto_stato_code varchar,
  atto_stato_desc varchar,
  atto_tipo_code varchar,
  atto_tipo_desc varchar,
  note_progetto varchar
) AS
$body$
DECLARE
progettoRec record;
datiProgettoRec record;
datiattorec	record;

tipo_capitolo_P varchar;
tipo_capitolo_G varchar;
DEF_NULL	constant varchar:='';
def_spazio	constant varchar:=' ';  
RTN_MESSAGGIO varchar(1000):=DEF_NULL;
user_table	varchar;



BEGIN

	tipo_capitolo_G='';
	tipo_capitolo_P='';
  	id_progetto=0;
  	codice_progetto='';
  	descrizione_progetto='';
  	valore_progetto=0;
  	ambito='';
  	stato='';
  	rilev_fpv='';
  	atto_id=0;
  	atto_anno='';
  	atto_oggetto='';
  	atto_note='';
  	atto_tipo_id=0;
  	atto_stato_id=0;
  	atto_stato_code='';
  	atto_stato_desc='';
  	atto_tipo_code='';
  	atto_tipo_desc='';
--  ricercare la tipologia di capitolo partendo dal parametro indicato dall'operatore 

if p_tipologia_capitolo = 'E' THEN
	tipo_capitolo_P='CAP-EP';
	tipo_capitolo_G='CAP-EG';
else
	tipo_capitolo_P='CAP-UP';
	tipo_capitolo_G='CAP-UG';
end if;



select fnc_siac_random_user()
into	user_table;


------------------------------------------------------------------------------------------------------------------------------------------

if	((coalesce(p_articolo,DEF_NULL)=DEF_NULL and coalesce(p_ueb,DEF_NULL)=DEF_NULL)
	or (coalesce(p_articolo,def_spazio)=def_spazio and coalesce(p_ueb,def_spazio)=def_spazio))
    and ((coalesce(p_anno_bilancio,DEF_NULL)=DEF_NULL or coalesce(p_anno_bilancio,def_spazio)=def_spazio))
    THEN 
      insert into siac_rep_prog_cronop
          select 	a.programma_id	id_progetto,
          			0,
                    ' ',
                    user_table
          from 	siac_t_programma a, 
          		siac_t_cronop b, 
                siac_t_cronop_elem c, 
                siac_d_bil_elem_tipo d
          where 	c.cronop_elem_code 		= 	p_capitolo
          ----and		c.cronop_elem_code2		is null
          -----and 	c.cronop_elem_code3 		is null
          and 	c.elem_tipo_id 			= d.elem_tipo_id
          and		d.elem_tipo_code in (tipo_capitolo_P, tipo_capitolo_G)
          and 	c.cronop_id 			= b.cronop_id
          and 	b.programma_id 			= a.programma_id
          and 	c.ente_proprietario_id 	= 	p_ente_prop_id
          and 	b.ente_proprietario_id 	= 	c.ente_proprietario_id
          and 	a.ente_proprietario_id	=	c.ente_proprietario_id
          and 	d.ente_proprietario_id	=	c.ente_proprietario_id
          group by a.programma_id;
else
      if	((coalesce(p_articolo,DEF_NULL)=DEF_NULL and coalesce(p_ueb,DEF_NULL)=DEF_NULL)
          or (coalesce(p_articolo,def_spazio)=def_spazio and coalesce(p_ueb,def_spazio)=def_spazio))
          and p_anno_bilancio > '0'
          THEN 
          insert into  siac_rep_prog_cronop
            select 	a.programma_id	id_progetto,
          			0,
                    ' ',
                    user_table
                  from 	siac_t_programma a, 
                          siac_t_cronop b, 
                          siac_t_cronop_elem c, 
                          siac_t_bil	bil,
                          siac_t_periodo periodo,
                          siac_d_bil_elem_tipo d
                  where 	b.bil_id				=	bil.bil_id
                  and		bil.periodo_id			=	periodo.periodo_id
                  and		periodo.anno			=	p_anno_bilancio
                  and		c.cronop_elem_code 		= 	p_capitolo
                  ----and		c.cronop_elem_code2		is null
                  -----and 	c.cronop_elem_code3 	is null
                  and 	c.elem_tipo_id 			= d.elem_tipo_id
                  and		d.elem_tipo_code in (tipo_capitolo_P, tipo_capitolo_G)
                  and 	c.cronop_id 			= b.cronop_id
                  and 	b.programma_id 			= a.programma_id
                  and 	c.ente_proprietario_id 	= 	p_ente_prop_id
                  and 	b.ente_proprietario_id 	= 	c.ente_proprietario_id
                  and 	a.ente_proprietario_id	=	c.ente_proprietario_id
                  and 	d.ente_proprietario_id	=	c.ente_proprietario_id
                  group by a.programma_id;           
         else
        	if	(coalesce(p_anno_bilancio,DEF_NULL)=DEF_NULL or coalesce(p_anno_bilancio,def_spazio)=def_spazio)
          			THEN 
                  	insert into siac_rep_prog_cronop
                       select 	a.programma_id	id_progetto,
          						0,
                                ' ',
                                user_table
                      from 	siac_t_programma a, 
                              siac_t_cronop b, 
                              siac_t_cronop_elem c, 
                              siac_d_bil_elem_tipo d
                      where 	c.cronop_elem_code 		= 	p_capitolo
                      and		c.cronop_elem_code2		= p_articolo
                      and 	c.cronop_elem_code3 	= p_ueb
                      and 	c.elem_tipo_id 			= d.elem_tipo_id
                      and		d.elem_tipo_code in (tipo_capitolo_P, tipo_capitolo_G)
                      and 	c.cronop_id 			= b.cronop_id
                      and 	b.programma_id 			= a.programma_id
                      and 	c.ente_proprietario_id 	= 	p_ente_prop_id
                      and 	b.ente_proprietario_id 	= 	c.ente_proprietario_id
                      and 	a.ente_proprietario_id	=	c.ente_proprietario_id
                      and 	d.ente_proprietario_id	=	c.ente_proprietario_id
                      group by a.programma_id;
			ELSE
					insert into siac_rep_prog_cronop
           			 select 	a.programma_id	id_progetto,
          						0,
                                ' ',
                                user_table
                      from 	siac_t_programma a, 
                              siac_t_cronop b, 
                              siac_t_cronop_elem c, 
                              siac_t_bil	bil,
                              siac_t_periodo periodo,
                              siac_d_bil_elem_tipo d
                      where 	b.bil_id				=	bil.bil_id
                      and		bil.periodo_id			=	periodo.periodo_id
                      and		periodo.anno			=	p_anno_bilancio
                      and		c.cronop_elem_code 		= 	p_capitolo
                      and		c.cronop_elem_code2			= p_articolo
                      and 	c.cronop_elem_code3 	= p_ueb
                      and 	c.elem_tipo_id 			= d.elem_tipo_id
                      and		d.elem_tipo_code in (tipo_capitolo_P, tipo_capitolo_G)
                      and 	c.cronop_id 			= b.cronop_id
                      and 	b.programma_id 			= a.programma_id
                      and 	c.ente_proprietario_id 	= 	p_ente_prop_id
                      and 	b.ente_proprietario_id 	= 	c.ente_proprietario_id
                      and 	a.ente_proprietario_id	=	c.ente_proprietario_id
                      and 	d.ente_proprietario_id	=	c.ente_proprietario_id
                      group by a.programma_id;
			end if; 
      end if;
end if;  



-----------------------------------------------------------------------------------------------------------------------------------------
for progettoRec in
    select 	id_programma		id_progetto
    from 	siac_rep_prog_cronop a 
    where 	a.utente	=	user_table
loop
	id_progetto:=progettoRec.id_progetto; 
    raise notice 'progettoRec.id_progetto = %', progettoRec.id_progetto;
    BEGIN
    for datiProgettoRec in
      select 	a.programma_id, 
          a.programma_code			codice_progetto, 
          a.programma_desc			descrizione_progetto,
          h.classif_id,
          h.classif_code,
          h.classif_desc			ambito,
          r.attr_id,
          ta.attr_code,
          ta.attr_desc,
          i.attr_tipo_code,
          i.attr_tipo_desc,
          dps.programma_stato_code,
          dps.programma_stato_desc	stato,
          r.numerico				valore_progetto,
          (select 	r."boolean"
                    from  	siac_t_programma a1,
                              siac_r_programma_attr r,
                              siac_t_attr ta, 
                              siac_d_attr_tipo i    
                    where		a1.programma_id	=	a.programma_id
                    and		a1.programma_id		=	r.programma_id
                    and		ta.attr_id			=	r.attr_id
                    and		ta.attr_tipo_id		=	i.attr_tipo_id
                    and 		i.attr_tipo_code	=	'B'
                    --SIAC-6821 16/05/2019.
                  	--Mancava il filtro sul nome dell'attributo da estrarre.
                    and		ta.attr_code		= 	'FlagRilevanteFPV'
                    and		r.data_cancellazione	is null
                    and		ta.data_cancellazione	is null
                    and		a.ente_proprietario_id	= p_ente_prop_id)  rilev_fpv,
           (select 	r.testo
                    from  	siac_t_programma a1,
                              siac_r_programma_attr r,
                              siac_t_attr ta, 
                              siac_d_attr_tipo i    
                    where		a1.programma_id	=	a.programma_id
                    and		a1.programma_id		=	r.programma_id
                    and		ta.attr_id			=	r.attr_id
                    and		ta.attr_tipo_id		=	i.attr_tipo_id
                    and 		i.attr_tipo_code	=	'X'
                    --SIAC-6821 16/05/2019.
                  	--Mancava il filtro sul nome dell'attributo da estrarre.
                  	and 	upper(ta.attr_code)='NOTE'
                    and		r.data_cancellazione	is null
                    and		ta.data_cancellazione	is null
                    and		a.ente_proprietario_id	= p_ente_prop_id)  note_progetto
          from  	siac_r_programma_class g,
                  siac_t_class h,
                  siac_t_programma a,
                  siac_r_programma_attr r,
                  siac_t_attr ta, 
                  siac_d_attr_tipo i,
                  siac_r_programma_stato rps,
                  siac_d_programma_stato dps     
          where	a.programma_id					=	progettoRec.id_progetto		
                  and		g.classif_id			=	h.classif_id
                  and		g.programma_id			=	a.programma_id
                  and		a.programma_id			=	r.programma_id
                  and		ta.attr_id				=	r.attr_id
                  and		ta.attr_tipo_id			=	i.attr_tipo_id
                  and 	i.attr_tipo_code		=	'N'
                  --SIAC-6821 16/05/2019.
                  --Mancava il filtro sul nome dell'attributo da estrarre.
                	and 	ta.attr_code			=	'ValoreComplessivoProgramma'
                  and		a.programma_id			=	rps.programma_id
                  and		rps.programma_stato_id	=	dps.programma_stato_id
                  and		g.data_cancellazione	is null
                  and		h.data_cancellazione	is null
                  and		r.data_cancellazione	is null
                  and		ta.data_cancellazione	is null
                  and		rps.data_cancellazione	is null
                  and		a.ente_proprietario_id	= 	p_ente_prop_id
                  and		g.ente_proprietario_id	=	a.ente_proprietario_id
                  and		h.ente_proprietario_id	=	a.ente_proprietario_id
                  and		r.ente_proprietario_id	=	a.ente_proprietario_id
                  and		ta.ente_proprietario_id	=	a.ente_proprietario_id
                  and		i.ente_proprietario_id	=	a.ente_proprietario_id
                  and		rps.ente_proprietario_id	=	a.ente_proprietario_id
                  and		dps.ente_proprietario_id	=	a.ente_proprietario_id
          loop
                codice_progetto:=datiProgettoRec.codice_progetto;
                descrizione_progetto:=datiProgettoRec.descrizione_progetto;
                valore_progetto:=datiProgettoRec.valore_progetto;
                ambito:=datiProgettoRec.ambito;
                stato:=datiProgettoRec.stato;
                rilev_fpv:=datiProgettoRec.rilev_fpv;
                note_progetto:=datiProgettoRec.note_progetto;
                BEGIN
                for datiAttoRec in
                   select 	c.attoamm_id				atto_id,
                        c.attoamm_anno				atto_anno,
                        c.attoamm_numero			atto_numero,
                        c.attoamm_oggetto			atto_oggetto,
                        c.attoamm_note				atto_note,
                        c.attoamm_tipo_id			atto_tipo_id,
                        f.attoamm_stato_id			atto_stato_id,
                        f.attoamm_stato_code		atto_stato_code,
                        f.attoamm_stato_desc		atto_stato_desc,
                        e.attoamm_tipo_code			atto_tipo_code,
                        e.attoamm_tipo_desc			atto_tipo_desc
                  from  siac_r_programma_atto_amm b 
                          LEFT join siac_t_atto_amm c
                          on	( b.attoamm_id			=	c.attoamm_id
                                and c.data_cancellazione is null	)
                          LEFT join siac_r_atto_amm_stato d
                          on (d.attoamm_id			=	c.attoamm_id
                                and d.data_cancellazione is null)
                          left join siac_d_atto_amm_stato f
                          on (d.attoamm_stato_id	=	f.attoamm_stato_id
                            and f.data_cancellazione is null)
                          LEFT join siac_d_atto_amm_tipo e
                          on (c.attoamm_tipo_id		=	e.attoamm_tipo_id
                            and e.data_cancellazione is null) 
                  where b.programma_id	=	progettoRec.id_progetto
                    and b.data_cancellazione is null
                    and b.ente_proprietario_id = p_ente_prop_id                    
                  loop   
                        atto_id:=datiAttoRec.atto_id;
                        atto_anno:=datiAttoRec.atto_anno;
                        atto_numero:=datiAttoRec.atto_numero;
                        atto_oggetto:=datiAttoRec.atto_oggetto;
                        atto_note:=datiAttoRec.atto_note;
                        atto_tipo_id:=datiAttoRec.atto_tipo_id;
                        atto_stato_id:=datiAttoRec.atto_stato_id;
                        atto_stato_code:=datiAttoRec.atto_stato_code;
                        atto_stato_desc:=datiAttoRec.atto_stato_desc;
                        atto_tipo_code:=datiAttoRec.atto_tipo_code;
                        atto_tipo_desc:=datiAttoRec.atto_tipo_desc;
                        return next;
                  end loop;
                        id_progetto=0;
                        codice_progetto='';
                        descrizione_progetto='';
                        note_progetto='';
                        valore_progetto=0;
                        ambito='';
                        stato='';
                        rilev_fpv='';
                        atto_id=0;
                        atto_anno='';
                        atto_oggetto='';
                        atto_note='';
                        atto_tipo_id=0;
                        atto_stato_id=0;
                        atto_stato_code='';
                        atto_stato_desc='';
                        atto_tipo_code='';
                        atto_tipo_desc='';
                    exception
                    when no_data_found THEN
                        raise notice 'nessun atto trovato passo 1 ' ;
                        return;
                    when others  THEN
                        RTN_MESSAGGIO:='ricerca dati atto passo 1';
                        RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
                        return;
               end;
          end loop;
          exception
              when no_data_found THEN
                  raise notice 'nessun dato progetto trovato passo 2' ;
                  return;
              when others  THEN
                  RTN_MESSAGGIO:='ricerca dati programmi/progetti passo 2';
                  RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
                  return;
    end;
end loop;

delete from siac_rep_prog_cronop where utente=user_table;

exception
	when no_data_found THEN
		raise notice 'nessun programma/progetto trovato nella tabella siac_rep_prog_cronop' ;
		return;
	when others  THEN
        RTN_MESSAGGIO:='ricerca dati programmi/progetti passo 1';
 		RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
        return;
        
delete from siac_rep_prog_cronop where utente=user_table;
raise notice 'fine OK';
return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

CREATE OR REPLACE FUNCTION siac."BILR040_progetti_per_capitolo_dati_cronop" (
  p_ente_prop_id integer,
  p_capitolo varchar,
  p_articolo varchar,
  p_ueb varchar,
  p_tipologia_capitolo varchar,
  p_anno_bilancio varchar
)
RETURNS TABLE (
  tipo_liv1 varchar,
  codice_liv1 varchar,
  descr_liv1 varchar,
  tipo_liv2 varchar,
  codice_liv2 varchar,
  descr_liv2 varchar,
  tipo_liv3 varchar,
  codice_liv3 varchar,
  descr_liv3 varchar,
  tipo_liv4 varchar,
  codice_liv4 varchar,
  descr_liv4 varchar,
  id_progetto integer,
  capitolo varchar,
  articolo varchar,
  ueb varchar,
  anno_competenza_stanziamento varchar,
  anno_entrata_rif_spesa varchar,
  stanziato numeric,
  descrizione1_attivita varchar,
  descrizione2_attivita varchar,
  cronoprogramma_id integer,
  cronoprogramma_codice varchar,
  cronoprogramma_descrizione varchar,
  stato varchar,
  note_cronoprogramma varchar,
  cronop_id_elem integer,
  anno_bilancio varchar,
  tipologia_capitolo varchar,
  codice_classificatore varchar,
  descrizione_classificatore varchar,
  descrizione_tipo_classificatore varchar
) AS
$body$
DECLARE
datistrutturaRec record;
progettoRec record;
datiCronoprogrammaRec record;


tipo_capitolo_P varchar;
tipo_capitolo_G varchar;
descrizione_classificatore varchar;
codice_classificatore	varchar;
descrizione_tipo_classificatore	varchar;
tipologia_capitolo	varchar;
DEF_NULL	constant varchar:='';
def_spazio	constant varchar:=' ';  
RTN_MESSAGGIO varchar(1000):=DEF_NULL;
user_table	varchar;



BEGIN

	tipo_capitolo_G='';
	tipo_capitolo_P='';
	tipo_liv1='';
    codice_liv1='';
  	descr_liv1='';
  	tipo_liv2='';
    codice_liv2='';
  	descr_liv2='';
  	tipo_liv3='';
    codice_liv3='';
  	descr_liv3='';
  	tipo_liv4='';
    codice_liv4='';
  	descr_liv4='';
  	id_progetto=0;
    capitolo='';
  	articolo='';
  	ueb='';
  	anno_competenza_stanziamento='';
  	anno_entrata_rif_spesa='';
  	stanziato=0;
    descrizione1_attivita='';
    descrizione2_attivita='';


---  ricercare la tipologia di capitolo partendo dal parametro indicato dall'operatore 

if p_tipologia_capitolo = 'E' THEN
	tipo_capitolo_P='CAP-EP';
	tipo_capitolo_G='CAP-EG';
else
	tipo_capitolo_P='CAP-UP';
	tipo_capitolo_G='CAP-UG';
end if;


select fnc_siac_random_user()
into	user_table;

----------------------------------------------------------------------------------------------------------------------
if	((coalesce(p_articolo,DEF_NULL)=DEF_NULL and coalesce(p_ueb,DEF_NULL)=DEF_NULL)
	or (coalesce(p_articolo,def_spazio)=def_spazio and coalesce(p_ueb,def_spazio)=def_spazio))
    and ((coalesce(p_anno_bilancio,DEF_NULL)=DEF_NULL or coalesce(p_anno_bilancio,def_spazio)=def_spazio))
    THEN 
    raise notice 'passo 1';
      insert into siac_rep_prog_cronop
          select 	a.programma_id,
          			b.cronop_id,
                    periodo.anno,
                    user_table
          from 	siac_t_programma a, 
          		siac_t_cronop b, 
                siac_t_cronop_elem c, 
                siac_d_bil_elem_tipo d,
                siac_t_bil	bil,
                siac_t_periodo periodo
          where 	c.cronop_elem_code 				= 	p_capitolo
          -----and		c.cronop_elem_code2				is null
          ------and 		c.cronop_elem_code3 			is null
          and 		c.elem_tipo_id 					= 	d.elem_tipo_id
          and		d.elem_tipo_code in (tipo_capitolo_P, tipo_capitolo_G)
          and 		c.cronop_id 					= 	b.cronop_id
          and 		b.programma_id 					= 	a.programma_id
          and		b.bil_id						=	bil.bil_id
          and		bil.periodo_id					=	periodo.periodo_id
          and 		c.ente_proprietario_id 			= 	p_ente_prop_id
          and 		b.ente_proprietario_id 			= 	c.ente_proprietario_id
          and 		a.ente_proprietario_id			=	c.ente_proprietario_id
          and 		d.ente_proprietario_id			=	c.ente_proprietario_id
          and		bil.ente_proprietario_id		= 	c.ente_proprietario_id
          and		periodo.ente_proprietario_id	= 	c.ente_proprietario_id
          group by a.programma_id, b.cronop_id,periodo.anno;
else
      if	((coalesce(p_articolo,DEF_NULL)=DEF_NULL and coalesce(p_ueb,DEF_NULL)=DEF_NULL)
          or (coalesce(p_articolo,def_spazio)=def_spazio and coalesce(p_ueb,def_spazio)=def_spazio))
          and p_anno_bilancio > '0'
          THEN 
              raise notice 'passo 2';
          insert into  siac_rep_prog_cronop
            select 	a.programma_id,
          			b.cronop_id,
                    periodo.anno,
                    user_table
                  from 	siac_t_programma a, 
                          siac_t_cronop b, 
                          siac_t_cronop_elem c, 
                          siac_t_bil	bil,
                          siac_t_periodo periodo,
                          siac_d_bil_elem_tipo d
                  where 	b.bil_id				=	bil.bil_id
                  and		bil.periodo_id			=	periodo.periodo_id
                  and		periodo.anno			=	p_anno_bilancio
                  and		c.cronop_elem_code 		= 	p_capitolo
                  ----and		c.cronop_elem_code2			is null
                  ------and 		c.cronop_elem_code3 		is null
                  and 		c.elem_tipo_id 			= 	d.elem_tipo_id
                  and		d.elem_tipo_code in (tipo_capitolo_P, tipo_capitolo_G)
                  and 		c.cronop_id 			= 	b.cronop_id
                  and 		b.programma_id 			= 	a.programma_id
                  and 		c.ente_proprietario_id 	= 	p_ente_prop_id
                  and 		b.ente_proprietario_id 	= 	c.ente_proprietario_id
                  and 		a.ente_proprietario_id	=	c.ente_proprietario_id
                  and 		d.ente_proprietario_id	=	c.ente_proprietario_id
                  group by  a.programma_id, b.cronop_id,periodo.anno;        
         else
        	if	(coalesce(p_anno_bilancio,DEF_NULL)=DEF_NULL or coalesce(p_anno_bilancio,def_spazio)=def_spazio)
          			THEN 
                        raise notice 'passo 3';
                  	insert into siac_rep_prog_cronop
                       select 	a.programma_id,
          						b.cronop_id,
                                periodo.anno,
                                user_table
                      from 		siac_t_programma a, 
                              	siac_t_cronop b, 
                              	siac_t_cronop_elem c, 
                              	siac_d_bil_elem_tipo d,
                                siac_t_bil	bil,
                				siac_t_periodo periodo
                      where 	c.cronop_elem_code 		= 	p_capitolo
                      and		c.cronop_elem_code2		= 	p_articolo
                      and 		c.cronop_elem_code3 	= 	p_ueb
                      and 		c.elem_tipo_id 			= 	d.elem_tipo_id
                      and		d.elem_tipo_code in (tipo_capitolo_P, tipo_capitolo_G)
                      and 		c.cronop_id 			= 	b.cronop_id
                      and 		b.programma_id 			= 	a.programma_id
                      and		b.bil_id				=	bil.bil_id
          			  and		bil.periodo_id			=	periodo.periodo_id
                      and 		c.ente_proprietario_id 	= 	p_ente_prop_id
                      and 		b.ente_proprietario_id 	= 	c.ente_proprietario_id
                      and 		a.ente_proprietario_id	=	c.ente_proprietario_id
                      and 		d.ente_proprietario_id	=	c.ente_proprietario_id
                      and		bil.ente_proprietario_id		= 	c.ente_proprietario_id
          			  and		periodo.ente_proprietario_id	= 	c.ente_proprietario_id
                      group by a.programma_id, b.cronop_id,periodo.anno;
			ELSE
					     raise notice 'passo 4';
                    insert into siac_rep_prog_cronop
           			 select 	a.programma_id,
                     			b.cronop_id,
                                periodo.anno,
                                user_table
                      from 		siac_t_programma a, 
                              	siac_t_cronop b, 
                              	siac_t_cronop_elem c, 
                              	siac_t_bil	bil,
                              	siac_t_periodo periodo,
                              	siac_d_bil_elem_tipo d
                      where 	b.bil_id				=	bil.bil_id
                      and		bil.periodo_id			=	periodo.periodo_id
                      and		periodo.anno			=	p_anno_bilancio
                      and		c.cronop_elem_code 		= 	p_capitolo
                      and		c.cronop_elem_code2		= 	p_articolo
                      and 		c.cronop_elem_code3 	= 	p_ueb
                      and 		c.elem_tipo_id 			= 	d.elem_tipo_id
                      and		d.elem_tipo_code in (tipo_capitolo_P, tipo_capitolo_G)
                      and 		c.cronop_id 			= 	b.cronop_id
                      and 		b.programma_id 			= 	a.programma_id
                      and 		c.ente_proprietario_id 	= 	p_ente_prop_id
                      and 		b.ente_proprietario_id 	= 	c.ente_proprietario_id
                      and 		a.ente_proprietario_id	=	c.ente_proprietario_id
                      and 		d.ente_proprietario_id	=	c.ente_proprietario_id
                      and		bil.ente_proprietario_id		= 	c.ente_proprietario_id
          			  and		periodo.ente_proprietario_id	= 	c.ente_proprietario_id
                      group by  a.programma_id, b.cronop_id,periodo.anno;
			end if; 
      end if;
end if;  
-------------------------------------------------------------------------------------------------------------

for progettoRec in
    select 	id_programma		id_progetto,
    		id_cronoprogramma	cronoprogramma_id,
            anno_del_bilancio	anno_bilancio
    from 	siac_rep_prog_cronop a 
    where 	a.utente	=	user_table
loop
	id_progetto:=progettoRec.id_progetto; 
    cronoprogramma_id:=progettoRec.cronoprogramma_id; 
    anno_bilancio:=progettoRec.anno_bilancio;
    BEGIN
    for datiCronoprogrammaRec in
        select 		a.programma_id, 
                  	a.cronop_id					cronoprogramma_id, 
                  	a.cronop_code				cronoprogramma_codice, 
                  	a.cronop_desc				cronoprogramma_descrizione, 
                    COALESCE (c.anno_entrata,' ')	anno_entrata_rif_spesa, 
                  	c.periodo_id, 
                    COALESCE (d.anno,' ')		anno_competenza_stanziamento, 
                  	----c.cronop_elem_det_id		cronop_id_elem,
                    b.cronop_elem_id			cronop_id_elem,
                    k.elem_tipo_code			tipologia_capitolo,
                    b.elem_tipo_id,
                  	c.cronop_elem_det_importo	stanziato, 
                  	b.cronop_elem_desc			descrizione1_attivita, 
                  	b.cronop_elem_desc2			descrizione2_attivita,
                    COALESCE (b.cronop_elem_code,' ')	capitolo, 	
                    COALESCE (b.cronop_elem_code2,' ')	articolo, 	
                    COALESCE (b.cronop_elem_code3,' ')	ueb, 	
                  	f.cronop_stato_code, 
                  	f.cronop_stato_desc			stato,
                     (select 	r.testo
                  from  	siac_t_cronop a1,
                            siac_r_cronop_attr r,
                            siac_t_attr ta, 
                            siac_d_attr_tipo i    
                  where		a1.cronop_id	=	a.cronop_id
                  and		a1.cronop_id	=	r.cronop_id
                  and		ta.attr_id			=	r.attr_id
                  and		ta.attr_tipo_id		=	i.attr_tipo_id
                  and 		i.attr_tipo_code	=	'X'
                  --SIAC-6821 16/05/2019.
                  --Mancava il filtro sul nome dell'attributo da estrarre.
                  and 		upper(ta.attr_code)='NOTE'
                  and		r.data_cancellazione	is null
                  and		ta.data_cancellazione	is null
                  and		a.ente_proprietario_id	= p_ente_prop_id)  note_cronoprogramma
          from  	siac_r_cronop_stato e,
                  	siac_d_cronop_stato f,
                  	siac_t_cronop a,
                  	siac_t_cronop_elem b,
                    siac_d_bil_elem_tipo	k, 
                  	siac_t_cronop_elem_det c
                  FULL join  siac_t_periodo d
                  on (c.periodo_id		=	d.periodo_id)       
          where		a.programma_id			=	progettoRec.id_progetto 
          and		a.cronop_id				=	progettoRec.cronoprogramma_id	
          and		c.cronop_elem_id		=	b.cronop_elem_id
          and		b.cronop_id				=	a.cronop_id	
          and		a.ente_proprietario_id 	= 	p_ente_prop_id
          and 		b.ente_proprietario_id	=	a.ente_proprietario_id
          and		c.ente_proprietario_id	=	a.ente_proprietario_id
          and		e.cronop_id				=	a.cronop_id
          and		e.cronop_stato_id		=	f.cronop_stato_id
          and 		b.elem_tipo_id 			= 	k.elem_tipo_id
          and		d.ente_proprietario_id	=	a.ente_proprietario_id
          and		e.ente_proprietario_id	=	a.ente_proprietario_id
          and		f.ente_proprietario_id	=	a.ente_proprietario_id
          and		a.data_cancellazione is null
          and		b.data_cancellazione is null 
          and		c.data_cancellazione is null 
          and		d.data_cancellazione is null 
          and		e.data_cancellazione is null 
          and		f.data_cancellazione is null 
          order by a.programma_id,a.cronop_id,c.anno_entrata,d.anno 
		loop
        	cronoprogramma_codice:=datiCronoprogrammaRec.cronoprogramma_codice;
            cronoprogramma_id:=datiCronoprogrammaRec.cronoprogramma_id;  
            cronoprogramma_descrizione:=datiCronoprogrammaRec.cronoprogramma_descrizione;
            note_cronoprogramma:=datiCronoprogrammaRec.note_cronoprogramma; 
            anno_entrata_rif_spesa:=datiCronoprogrammaRec.anno_entrata_rif_spesa; 
            anno_competenza_stanziamento:=datiCronoprogrammaRec.anno_competenza_stanziamento; 
            stanziato:=datiCronoprogrammaRec.stanziato; 
            descrizione1_attivita:=datiCronoprogrammaRec.descrizione1_attivita;
            descrizione2_attivita:=datiCronoprogrammaRec.descrizione2_attivita;
            capitolo:=datiCronoprogrammaRec.capitolo; 
            articolo:=datiCronoprogrammaRec.articolo;
            ueb:=datiCronoprogrammaRec.ueb; 
            stato:=datiCronoprogrammaRec.stato;
            cronop_id_elem:=datiCronoprogrammaRec.cronop_id_elem;
            tipologia_capitolo:=datiCronoprogrammaRec.tipologia_capitolo;

        if  datiCronoprogrammaRec.tipologia_capitolo = 'CAP-EP' or datiCronoprogrammaRec.tipologia_capitolo = 'CAP-EG' THEN
    			if	coalesce(datiCronoprogrammaRec.articolo ,DEF_spazio)=DEF_spazio and coalesce(datiCronoprogrammaRec.ueb,DEF_spazio)=DEF_spazio	THEN 
    	 			BEGIN
    				for datistrutturaRec in
                     select distinct titolo_tipo.classif_tipo_desc  		tipo_liv1,
                               titolo.classif_code            				codice_liv1,
                               titolo.classif_desc            				descr_liv1,
                               tipologia_tipo.classif_tipo_desc				tipo_liv2,
                               tipologia.classif_code           			codice_liv2,
                               tipologia.classif_desc           			descr_liv2
                        from siac_t_class_fam_tree 			titolo_tree,
                             siac_d_class_fam 				titolo_fam,
                             siac_r_class_fam_tree 			titolo_r_cft,
                             siac_t_class 					titolo,
                             siac_d_class_tipo 				titolo_tipo,
                             siac_d_class_tipo 				tipologia_tipo,
                             siac_t_class 					tipologia,
                             siac_r_cronop_elem_class		r_cronp_class,
                             siac_t_cronop_elem_det			cronop_elem
                        where 		titolo_fam.classif_fam_desc					=	'Entrata - TitoliTipologieCategorie'
                              and 	titolo_tree.classif_fam_id					=	titolo_fam.classif_fam_id
                              and 	titolo_r_cft.classif_fam_tree_id			=	titolo_tree.classif_fam_tree_id
                              and 	titolo.classif_id							=	titolo_r_cft.classif_id_padre
                              and 	titolo_tipo.classif_tipo_code				=	'TITOLO_ENTRATA'
                              and 	titolo.classif_tipo_id						=	titolo_tipo.classif_tipo_id
                              and 	tipologia_tipo.classif_tipo_code			=	'TIPOLOGIA'
                              and 	tipologia.classif_tipo_id					=	tipologia_tipo.classif_tipo_id
                              and 	titolo_r_cft.classif_id						=	tipologia.classif_id
                               and 	r_cronp_class.classif_id					=	tipologia.classif_id
                              and	r_cronp_class.cronop_elem_id				=	datiCronoprogrammaRec.cronop_id_elem
                              and 	titolo.ente_proprietario_id					=	p_ente_prop_id
                              and 	tipologia.ente_proprietario_id				=	titolo.ente_proprietario_id
                              and 	titolo_tree.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	titolo_fam.ente_proprietario_id				=	titolo.ente_proprietario_id
                              and 	titolo_r_cft.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	titolo_tipo.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	tipologia_tipo.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	cronop_elem.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	r_cronp_class.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	titolo.data_cancellazione					is null
                              and 	tipologia.data_cancellazione				is null
                              and	r_cronp_class.data_cancellazione			is null
                              and 	titolo_tree.data_cancellazione				is null
                              and 	titolo_fam.data_cancellazione				is null
                              and 	titolo_r_cft.data_cancellazione				is null
                              and 	titolo_tipo.data_cancellazione				is null
                              and 	tipologia_tipo.data_cancellazione			is null
                              and 	cronop_elem.data_cancellazione				is null
    
                     
                      	loop
                        	tipo_liv1:=datistrutturaRec.tipo_liv1;
                                descr_liv1:=datistrutturaRec.descr_liv1;
                                codice_liv1:=datistrutturaRec.codice_liv1;
                                tipo_liv2:=datistrutturaRec.tipo_liv2;
                                descr_liv2:=datistrutturaRec.descr_liv2;
                                codice_liv2:=datistrutturaRec.codice_liv2;
                        end loop;
                        exception
                          when no_data_found THEN
                          raise notice 'nessuna struttura collegata' ;
                          return;
                          when others  THEN
                          RTN_MESSAGGIO:='ricerca struttura nuovo capitolo entrata oppure senza capitolo entrata';
                          RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
                          return;
                    end;
    			else
    ------------------------------------------------------------------------------------------------------------------------
                    BEGIN
                    for datistrutturaRec in
                        select distinct titolo_tipo.classif_tipo_desc  		tipo_liv1,
                               titolo.classif_code            				codice_liv1,
                               titolo.classif_desc            				descr_liv1,
                               tipologia_tipo.classif_tipo_desc				tipo_liv2,
                               tipologia.classif_code           			codice_liv2,
                               tipologia.classif_desc           			descr_liv2,
                               categoria_tipo.classif_tipo_desc  			tipo_liv3,
                               categoria.classif_code              			codice_liv3,
                               categoria.classif_desc               		descr_liv3
                        from siac_t_class_fam_tree 			titolo_tree,
                             siac_d_class_fam 				titolo_fam,
                             siac_r_class_fam_tree 			titolo_r_cft,
                             siac_r_class_fam_tree 			tipologia_r_cft,
                             siac_t_class 					titolo,
                             siac_d_class_tipo 				titolo_tipo,
                             siac_d_class_tipo 				tipologia_tipo,
                             siac_t_class 					tipologia,
                             siac_d_class_tipo 				categoria_tipo,
                             siac_t_class 					categoria,
                             siac_r_bil_elem_class 			r_capitolo_categoria,
                             siac_r_cronop_elem_bil_elem	r_cronop_elem,
                             siac_t_cronop_elem_det			cronop_elem
                        where 		titolo_fam.classif_fam_desc					=	'Entrata - TitoliTipologieCategorie'
                              and 	titolo_tree.classif_fam_id					=	titolo_fam.classif_fam_id
                              and 	titolo_r_cft.classif_fam_tree_id			=	titolo_tree.classif_fam_tree_id
                              and 	titolo.classif_id							=	titolo_r_cft.classif_id_padre
                              and 	titolo_tipo.classif_tipo_code				=	'TITOLO_ENTRATA'
                              and 	titolo.classif_tipo_id						=	titolo_tipo.classif_tipo_id
                              and 	tipologia_tipo.classif_tipo_code			=	'TIPOLOGIA'
                              and 	tipologia.classif_tipo_id					=	tipologia_tipo.classif_tipo_id
                              and 	titolo_r_cft.classif_id						=	tipologia.classif_id
                              and 	tipologia.classif_id						=	tipologia_r_cft.classif_id_padre
                              and 	categoria_tipo.classif_tipo_code			=	'CATEGORIA'
                              and 	categoria.classif_tipo_id					=	categoria_tipo.classif_tipo_id
                              and 	tipologia_r_cft.classif_id					=	categoria.classif_id
                              and	tipologia_r_cft.classif_id					=	r_capitolo_categoria.classif_id
                              and	r_capitolo_categoria.elem_id				=	r_cronop_elem.elem_id
                              and	r_cronop_elem.cronop_elem_id				=	datiCronoprogrammaRec.cronop_id_elem
                              and 	titolo.ente_proprietario_id					=	p_ente_prop_id
                              and 	tipologia.ente_proprietario_id				=	titolo.ente_proprietario_id
                              and 	categoria.ente_proprietario_id				=	titolo.ente_proprietario_id
                              and 	titolo_tree.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	titolo_fam.ente_proprietario_id				=	titolo.ente_proprietario_id
                              and 	titolo_r_cft.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	tipologia_r_cft.ente_proprietario_id		=	titolo.ente_proprietario_id
                              and 	titolo_tipo.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	tipologia_tipo.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	categoria_tipo.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	r_capitolo_categoria.ente_proprietario_id	=	titolo.ente_proprietario_id
                              and 	r_cronop_elem.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	cronop_elem.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	titolo.data_cancellazione					is null
                              and 	tipologia.data_cancellazione				is null
                              and 	categoria.data_cancellazione				is null
                              and 	titolo_tree.data_cancellazione				is null
                              and 	titolo_fam.data_cancellazione				is null
                              and 	titolo_r_cft.data_cancellazione				is null
                              and 	tipologia_r_cft.data_cancellazione			is null
                              and 	titolo_tipo.data_cancellazione				is null
                              and 	tipologia_tipo.data_cancellazione			is null
                              and 	categoria_tipo.data_cancellazione			is null
                              and 	r_capitolo_categoria.data_cancellazione		is null
                              and 	r_cronop_elem.data_cancellazione			is null
                              and 	cronop_elem.data_cancellazione				is null
                            loop
                                tipo_liv1:=datistrutturaRec.tipo_liv1;
                                descr_liv1:=datistrutturaRec.descr_liv1;
                                codice_liv1:=datistrutturaRec.codice_liv1;
                                tipo_liv2:=datistrutturaRec.tipo_liv2;
                                descr_liv2:=datistrutturaRec.descr_liv2;
                                codice_liv2:=datistrutturaRec.codice_liv2;
                                tipo_liv3:=datistrutturaRec.tipo_liv3;
                                descr_liv3:=datistrutturaRec.descr_liv3;
                                codice_liv3:=datistrutturaRec.codice_liv3;
                            end loop;
                                exception
                                  when no_data_found THEN
                                  raise notice 'nessuna struttura collegata' ;
                                  return;
                                  when others  THEN
                                  RTN_MESSAGGIO:='ricerca struttura capitolo entrata esistente';
                                  RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
                                  return;
                    end;      
    			end if; 
		else
    		if	coalesce(datiCronoprogrammaRec.articolo ,DEF_spazio)=DEF_spazio and coalesce(datiCronoprogrammaRec.ueb,DEF_spazio)=DEF_spazio	THEN 
                BEGIN
    				for datistrutturaRec in
                     select  distinct 	missione_tipo.classif_tipo_desc 		tipo_liv1,
                                    missione.classif_code 					codice_liv1,
                                    missione.classif_desc 					descr_liv1,
                                    programma_tipo.classif_tipo_desc 		tipo_liv2,
                                    programma.classif_code 					codice_liv2,
                                    programma.classif_desc 					descr_liv2,
                                    titusc_tipo.classif_tipo_desc 			tipo_liv3,
                                    titusc.classif_code 					codice_liv3,
                                    titusc.classif_desc 					descr_liv3
                from siac_t_class_fam_tree 			missione_tree,
                     siac_d_class_fam 				missione_fam,
                     siac_r_class_fam_tree 			missione_r_cft,
                     siac_t_class 					missione,
                     siac_d_class_tipo 				missione_tipo ,
                     siac_d_class_tipo 				programma_tipo,
                     siac_t_class 					programma,
                     siac_t_class_fam_tree 			titusc_tree,
                     siac_d_class_fam 				titusc_fam,
                     siac_r_class_fam_tree 			titusc_r_cft,
                     siac_t_class 					titusc,
                     siac_d_class_tipo 				titusc_tipo,
                     siac_r_cronop_elem_class		r_cronp_class_programma,
                     siac_r_cronop_elem_class		r_cronp_class_titolo,
                     siac_t_cronop_elem_det			cronop_elem
                where missione_fam.classif_fam_desc						=	'Spesa - MissioniProgrammi'      
                      and	missione_tree.classif_fam_id				=	missione_fam.classif_fam_id 
                        and	missione_r_cft.classif_fam_tree_id			=	missione_tree.classif_fam_tree_id 
                      and	missione.classif_id							=	missione_r_cft.classif_id_padre 
                      and	missione_tipo.classif_tipo_code				=	'MISSIONE' 
                      and	missione.classif_tipo_id					=	missione_tipo.classif_tipo_id 
                      and	programma_tipo.classif_tipo_code			=	'PROGRAMMA'  
                      and	programma.classif_tipo_id					=	programma_tipo.classif_tipo_id  
                      and	missione_r_cft.classif_id					=	programma.classif_id  
                      and	programma.classif_id						=	r_cronp_class_programma.classif_id
                      and	r_cronp_class_programma.cronop_elem_id		=	datiCronoprogrammaRec.cronop_id_elem		
                      and	titusc_fam.classif_fam_desc					=	'Spesa - TitoliMacroaggregati'      
                      and	titusc_tree.classif_fam_id					=	titusc_fam.classif_fam_id 
                      and	titusc_r_cft.classif_fam_tree_id			=	titusc_tree.classif_fam_tree_id 
                      and	titusc.classif_id							=	titusc_r_cft.classif_id_padre 
                      and	titusc_tipo.classif_tipo_code				=	'TITOLO_SPESA' 
                      and	titusc.classif_tipo_id						=	titusc_tipo.classif_tipo_id
                      and	titusc.classif_id							=	r_cronp_class_titolo.classif_id
                      and	r_cronp_class_titolo.cronop_elem_id			=	datiCronoprogrammaRec.cronop_id_elem		 
                      and 	missione_tree.ente_proprietario_id			=	p_ente_prop_id
                      and 	missione_fam.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	missione_r_cft.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and 	missione.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      AND 	missione_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	programma_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	programma.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      and 	titusc_tree.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	titusc_fam.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      and 	titusc_r_cft.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and 	titusc.ente_proprietario_id					=	missione_tree.ente_proprietario_id
                      AND 	titusc_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and	r_cronp_class_titolo.ente_proprietario_id	=	missione_tree.ente_proprietario_id
                      and	cronop_elem.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and 	missione_tree.data_cancellazione			is null
                      and 	missione_fam.data_cancellazione				is null
                      AND 	missione_r_cft.data_cancellazione			is null
                      and 	missione.data_cancellazione					is null
                      AND 	missione_tipo.data_cancellazione			is null
                      AND 	programma_tipo.data_cancellazione			is null
                      AND 	programma.data_cancellazione				is null
                      and 	titusc_tree.data_cancellazione				is null
                      AND 	titusc_fam.data_cancellazione				is null
                      and 	titusc_r_cft.data_cancellazione				is null
                      and 	titusc.data_cancellazione					is null
                      AND 	titusc_tipo.data_cancellazione				is null
                      and	r_cronp_class_titolo.data_cancellazione		is null
                      and	cronop_elem.data_cancellazione				is null
                      	loop
                        	 tipo_liv1:=datistrutturaRec.tipo_liv1;
                                descr_liv1:=datistrutturaRec.descr_liv1;
                                codice_liv1:=datistrutturaRec.codice_liv1;
                                tipo_liv2:=datistrutturaRec.tipo_liv2;
                                descr_liv2:=datistrutturaRec.descr_liv2;
                                codice_liv2:=datistrutturaRec.codice_liv2;
                                tipo_liv3:=datistrutturaRec.tipo_liv3;
                                descr_liv3:=datistrutturaRec.descr_liv3;
                                codice_liv3:=datistrutturaRec.codice_liv3;    
                        end loop;
                        exception
                          when no_data_found THEN
                          raise notice 'nessuna struttura collegata' ;
                          return;
                          when others  THEN
                          RTN_MESSAGGIO:='ricerca struttura nuovo capitolo spesa o senza capitolo di spesa';
                          RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
                          return;
                    end;
            else
            BEGIN
    				for datistrutturaRec in
            
            	select  distinct 	missione_tipo.classif_tipo_desc 		tipo_liv1,
                                    missione.classif_code 					codice_liv1,
                                    missione.classif_desc 					descr_liv1,
                                    programma_tipo.classif_tipo_desc 		tipo_liv2,
                                    programma.classif_code 					codice_liv2,
                                    programma.classif_desc 					descr_liv2,
                                    titusc_tipo.classif_tipo_desc 			tipo_liv3,
                                    titusc.classif_code 					codice_liv3,
                                    titusc.classif_desc 					descr_liv3,
                                    macroaggr_tipo.classif_tipo_desc 		tipo_liv4,
                                    macroaggr.classif_code 					codice_liv4,
                                    macroaggr.classif_desc 					descr_liv4
                from siac_t_class_fam_tree 			missione_tree,
                     siac_d_class_fam 				missione_fam,
                     siac_r_class_fam_tree 			missione_r_cft,
                     siac_t_class 					missione,
                     siac_d_class_tipo 				missione_tipo ,
                     siac_d_class_tipo 				programma_tipo,
                     siac_t_class 					programma,
                     siac_t_class_fam_tree 			titusc_tree,
                     siac_d_class_fam 				titusc_fam,
                     siac_r_class_fam_tree 			titusc_r_cft,
                     siac_t_class 					titusc,
                     siac_d_class_tipo 				titusc_tipo ,
                     siac_d_class_tipo 				macroaggr_tipo,
                     siac_t_class 					macroaggr,
                     siac_r_bil_elem_class 			r_capitolo_programma,
                     siac_r_cronop_elem_bil_elem	r_cronop_elem,
                     siac_r_bil_elem_class 			r_capitolo_macroaggr
                where missione_fam.classif_fam_desc						=	'Spesa - MissioniProgrammi'      
                      and	missione_tree.classif_fam_id				=	missione_fam.classif_fam_id 
                        and	missione_r_cft.classif_fam_tree_id			=	missione_tree.classif_fam_tree_id 
                      and	missione.classif_id							=	missione_r_cft.classif_id_padre 
                      and	missione_tipo.classif_tipo_code				=	'MISSIONE' 
                      and	missione.classif_tipo_id					=	missione_tipo.classif_tipo_id 
                      and	programma_tipo.classif_tipo_code			=	'PROGRAMMA'  
                      and	programma.classif_tipo_id					=	programma_tipo.classif_tipo_id  
                      and	missione_r_cft.classif_id					=	programma.classif_id  
                      and	missione_r_cft.classif_id					=	r_capitolo_programma.classif_id		
                      and	r_capitolo_programma.elem_id				=	r_cronop_elem.elem_id		
                      and	r_cronop_elem.cronop_elem_id				=	datiCronoprogrammaRec.cronop_id_elem	
                      and	titusc_fam.classif_fam_desc					=	'Spesa - TitoliMacroaggregati'      
                      and	titusc_tree.classif_fam_id					=	titusc_fam.classif_fam_id 
                      and	titusc_r_cft.classif_fam_tree_id			=	titusc_tree.classif_fam_tree_id 
                      and	titusc.classif_id							=	titusc_r_cft.classif_id_padre 
                      and	titusc_tipo.classif_tipo_code				=	'TITOLO_SPESA' 
                      and	titusc.classif_tipo_id						=	titusc_tipo.classif_tipo_id 
                      and	macroaggr_tipo.classif_tipo_code			=	'MACROAGGREGATO' 
                      and	macroaggr.classif_tipo_id					=	macroaggr_tipo.classif_tipo_id 
                      and	titusc_r_cft.classif_id						=	macroaggr.classif_id 
                      and	titusc_r_cft.classif_id						=	r_capitolo_macroaggr.classif_id 
                      and	r_capitolo_macroaggr.elem_id				=	r_cronop_elem.elem_id		 
                      and	r_cronop_elem.cronop_elem_id				=	datiCronoprogrammaRec.cronop_id_elem
                      and 	missione_tree.ente_proprietario_id			=	p_ente_prop_id
                      and 	missione_fam.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	missione_r_cft.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and 	missione.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      AND 	missione_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	programma_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	programma.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      and 	titusc_tree.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	titusc_fam.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      and 	titusc_r_cft.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and 	titusc.ente_proprietario_id					=	missione_tree.ente_proprietario_id
                      AND 	titusc_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	macroaggr_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	macroaggr.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      and 	r_capitolo_programma.ente_proprietario_id	=	missione_tree.ente_proprietario_id
                      AND	r_cronop_elem.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and 	r_capitolo_macroaggr.ente_proprietario_id	=	missione_tree.ente_proprietario_id     
                      and 	missione_tree.data_cancellazione			is null
                      and 	missione_fam.data_cancellazione				is null
                      AND 	missione_r_cft.data_cancellazione			is null
                      and 	missione.data_cancellazione					is null
                      AND 	missione_tipo.data_cancellazione			is null
                      AND 	programma_tipo.data_cancellazione			is null
                      AND 	programma.data_cancellazione				is null
                      and 	titusc_tree.data_cancellazione				is null
                      AND 	titusc_fam.data_cancellazione				is null
                      and 	titusc_r_cft.data_cancellazione				is null
                      and 	titusc.data_cancellazione					is null
                      AND 	titusc_tipo.data_cancellazione				is null
                      AND 	macroaggr_tipo.data_cancellazione			is null
                      AND 	macroaggr.data_cancellazione				is null
                      and 	r_capitolo_programma.data_cancellazione		is null
                      AND	r_cronop_elem.data_cancellazione			is null
                      and 	r_capitolo_macroaggr.data_cancellazione		is null
                      
            		loop
                                tipo_liv1:=datistrutturaRec.tipo_liv1;
                                descr_liv1:=datistrutturaRec.descr_liv1;
                                codice_liv1:=datistrutturaRec.codice_liv1;
                                tipo_liv2:=datistrutturaRec.tipo_liv2;
                                descr_liv2:=datistrutturaRec.descr_liv2;
                                codice_liv2:=datistrutturaRec.codice_liv2;
                                tipo_liv3:=datistrutturaRec.tipo_liv3;
                                descr_liv3:=datistrutturaRec.descr_liv3;
                                codice_liv3:=datistrutturaRec.codice_liv3;
                                tipo_liv3:=datistrutturaRec.tipo_liv4;
                                descr_liv3:=datistrutturaRec.descr_liv4;
                                codice_liv3:=datistrutturaRec.codice_liv4;
            		 end loop;
                                exception
                                  when no_data_found THEN
                                  raise notice 'nessuna struttura collegata' ;
                                  return;
                                  when others  THEN
                                  RTN_MESSAGGIO:='ricerca struttura capitolo spesa esistente';
                                  RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
                                  return;
                end;      
            end if; 
        end if;
            return next;
            tipo_liv1='';
            descr_liv1='';
            codice_liv1='';
            tipo_liv2='';
            descr_liv2='';
            codice_liv2='';
            tipo_liv3='';
            descr_liv3='';
            codice_liv3='';
            tipo_liv4='';
            descr_liv4='';
            codice_liv4='';
            capitolo='';
            articolo='';
            ueb='';
            anno_competenza_stanziamento='';
            anno_entrata_rif_spesa='';
            stanziato=0;
            cronoprogramma_id=0;
            descrizione1_attivita='';
            descrizione2_attivita='';
            cronoprogramma_codice='';
            cronoprogramma_descrizione='';
            note_cronoprogramma='';
            cronop_id_elem=0;
        end loop;
        exception
          when no_data_found THEN
          raise notice 'nessun cronoprogramma trovato' ;
          return;
          when others  THEN
          RTN_MESSAGGIO:='ricerca cronoprogrammi';
          RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
          return;
    end;
    id_progetto=0;
end loop;

delete from siac_rep_prog_cronop where utente=user_table;

exception
	when no_data_found THEN
		raise notice 'nessun programma/progetto trovato' ;
		return;
	when others  THEN
        RTN_MESSAGGIO:='ricerca programmi/progetti';
 		RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
        return;
raise notice 'fine OK';
return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

CREATE OR REPLACE FUNCTION siac."BILR045_report_progetto_dati_programma" (
  p_ente_prop_id integer,
  p_codice_progetto varchar,
  p_anno_bilancio varchar
)
RETURNS TABLE (
  id_progetto integer,
  codice_progetto varchar,
  descrizione_progetto varchar,
  valore_progetto numeric,
  ambito varchar,
  stato varchar,
  rilev_fpv varchar,
  atto_id integer,
  atto_anno varchar,
  atto_numero varchar,
  atto_oggetto varchar,
  atto_note varchar,
  atto_tipo_id integer,
  atto_stato_id integer,
  atto_stato_code varchar,
  atto_stato_desc varchar,
  atto_tipo_code varchar,
  atto_tipo_desc varchar,
  note_progetto varchar
) AS
$body$
DECLARE
progettoRec record;
datiProgettoRec record;
datiattorec	record;

tipo_capitolo_P varchar;
tipo_capitolo_G varchar;
DEF_NULL	constant varchar:=''; 
def_spazio	constant varchar:=' ';  
RTN_MESSAGGIO varchar(1000):=DEF_NULL;
user_table	varchar;


BEGIN

	tipo_capitolo_G='';
	tipo_capitolo_P='';
  	id_progetto=0;
  	codice_progetto='';
  	descrizione_progetto='';
  	valore_progetto=0;
  	ambito='';
  	stato='';
  	rilev_fpv='';
  	atto_id=0;
  	atto_anno='';
  	atto_oggetto='';
  	atto_note='';
  	atto_tipo_id=0;
  	atto_stato_id=0;
  	atto_stato_code='';
  	atto_stato_desc='';
  	atto_tipo_code='';
  	atto_tipo_desc='';

select fnc_siac_random_user()
into	user_table;

--------------------------------------------------------------------------------------------------------------------------------------------------
if	(coalesce(p_anno_bilancio,DEF_NULL)=DEF_NULL or coalesce(p_anno_bilancio,def_spazio)=def_spazio)
    THEN 
    insert into siac_rep_prog_cronop
          select 	a.programma_id	id_progetto,
          			0,
                    ' ',
                    user_table
    from      siac_t_programma a
    where 	a.programma_code		=	p_codice_progetto	
    and 	a.ente_proprietario_id 	= 	p_ente_prop_id
    group by a.programma_id;
        
else
    insert into  siac_rep_prog_cronop
            select 	a.programma_id	id_progetto,
          			0,
                    ' ',
                    user_table
                  from 		siac_t_programma a, 
                          	siac_t_cronop b, 
                          	siac_t_bil	bil,
                          	siac_t_periodo periodo
                  where 	a.programma_code			=	p_codice_progetto
                  and		b.programma_id				=	a.programma_id
                  and		b.bil_id					=	bil.bil_id
                  and		bil.periodo_id				=	periodo.periodo_id
                  and		periodo.anno				=	p_anno_bilancio
                  and 		a.ente_proprietario_id 		= 	p_ente_prop_id
                  and 		b.ente_proprietario_id 		= 	a.ente_proprietario_id
                  and 		bil.ente_proprietario_id	=	a.ente_proprietario_id
                  and 		periodo.ente_proprietario_id	=	a.ente_proprietario_id
                  and		a.data_cancellazione	is NULL
                  and		b.data_cancellazione	is null
                  and		bil.data_cancellazione	is null
                  and		periodo.data_cancellazione	is null
                  group by a.programma_id;                    
end if;  

--------------------------------------------------------------------------------------------------------------------------------------------------

for progettoRec in
----------------------carico  tabella con i programmi  collegati al capitolo da parametro

select 	id_programma		id_progetto
    from 	siac_rep_prog_cronop a 
    where 	a.utente	=	user_table
loop
	id_progetto:=progettoRec.id_progetto; 
    BEGIN
	for datiProgettoRec in
    select 	a.programma_id, 
    	a.programma_code			codice_progetto, 
        a.programma_desc			descrizione_progetto,
        h.classif_id,
        h.classif_code,
        h.classif_desc			ambito,
        r.attr_id,
        ta.attr_code,
        ta.attr_desc,
        i.attr_tipo_code,
        i.attr_tipo_desc,
        dps.programma_stato_code,
        dps.programma_stato_desc	stato,
        r.numerico				valore_progetto,
        (select 	r."boolean"
                  from  	siac_t_programma a1,
                            siac_r_programma_attr r,
                            siac_t_attr ta, 
                            siac_d_attr_tipo i    
                  where		a1.programma_id	=	a.programma_id
                  and		a1.programma_id		=	r.programma_id
                  and		ta.attr_id			=	r.attr_id
                  and		ta.attr_tipo_id		=	i.attr_tipo_id
                  and 		i.attr_tipo_code	=	'B'
                  --SIAC-6821 16/05/2019.
                  --Mancava il filtro sul nome dell'attributo da estrarre.
                  and		ta.attr_code		= 	'FlagRilevanteFPV'
                  and		r.data_cancellazione	is null
                  and		ta.data_cancellazione	is null
                  and		a.ente_proprietario_id	= p_ente_prop_id)  rilev_fpv,
         (select 	r.testo
                  from  	siac_t_programma a1,
                            siac_r_programma_attr r,
                            siac_t_attr ta, 
                            siac_d_attr_tipo i    
                  where		a1.programma_id	=	a.programma_id
                  and		a1.programma_id		=	r.programma_id
                  and		ta.attr_id			=	r.attr_id
                  and		ta.attr_tipo_id		=	i.attr_tipo_id
                  and 		i.attr_tipo_code	=	'X'
                  --SIAC-6821 16/05/2019.
                  --Mancava il filtro sul nome dell'attributo da estrarre.
                  and 		upper(ta.attr_code)='NOTE'
                  and		r.data_cancellazione	is null
                  and		ta.data_cancellazione	is null
                  and		a.ente_proprietario_id	= p_ente_prop_id)  note_progetto
        from  	siac_r_programma_class g,
                siac_t_class h,
                siac_t_programma a,
                siac_r_programma_attr r,
                siac_t_attr ta, 
                siac_d_attr_tipo i,
                siac_r_programma_stato rps,
                siac_d_programma_stato dps     
        where	a.programma_id					=	progettoRec.id_progetto		
                and		g.classif_id			=	h.classif_id
                and		g.programma_id			=	a.programma_id
                and		a.programma_id			=	r.programma_id
                and		ta.attr_id				=	r.attr_id
                and		ta.attr_tipo_id			=	i.attr_tipo_id
                and 	i.attr_tipo_code		=	'N'
                --SIAC-6821 16/05/2019.
                  --Mancava il filtro sul nome dell'attributo da estrarre.
                and 	ta.attr_code			=	'ValoreComplessivoProgramma'
                and		a.programma_id			=	rps.programma_id
                and		rps.programma_stato_id	=	dps.programma_stato_id
                and		g.data_cancellazione	is null
                and		h.data_cancellazione	is null
                and		r.data_cancellazione	is null
                and		ta.data_cancellazione	is null
                and		rps.data_cancellazione	is null
                and		a.ente_proprietario_id	= 	p_ente_prop_id
                and		g.ente_proprietario_id	=	a.ente_proprietario_id
                and		h.ente_proprietario_id	=	a.ente_proprietario_id
                and		r.ente_proprietario_id	=	a.ente_proprietario_id
                and		ta.ente_proprietario_id	=	a.ente_proprietario_id
                and		i.ente_proprietario_id	=	a.ente_proprietario_id
                and		rps.ente_proprietario_id	=	a.ente_proprietario_id
                and		dps.ente_proprietario_id	=	a.ente_proprietario_id
          	loop
           -- raise notice 'attr_code = %', datiProgettoRec.attr_code;
          --  raise notice 'attr_desc = %', datiProgettoRec.attr_desc;
            		codice_progetto:=datiProgettoRec.codice_progetto;
                    descrizione_progetto:=datiProgettoRec.descrizione_progetto;
                    valore_progetto:=datiProgettoRec.valore_progetto;
                    ambito:=datiProgettoRec.ambito;
                    stato:=datiProgettoRec.stato;
                    rilev_fpv:=datiProgettoRec.rilev_fpv;
                    note_progetto:=datiProgettoRec.note_progetto;
                    BEGIN
					for datiAttoRec in
                       select 	c.attoamm_id				atto_id,
                            c.attoamm_anno				atto_anno,
                            c.attoamm_numero			atto_numero,
                            c.attoamm_oggetto			atto_oggetto,
                            c.attoamm_note				atto_note,
                            c.attoamm_tipo_id			atto_tipo_id,
                            f.attoamm_stato_id			atto_stato_id,
                            f.attoamm_stato_code		atto_stato_code,
                            f.attoamm_stato_desc		atto_stato_desc,
                            e.attoamm_tipo_code			atto_tipo_code,
                            e.attoamm_tipo_desc			atto_tipo_desc
                      from  siac_r_programma_atto_amm b 
                              LEFT join siac_t_atto_amm c
                              on	( b.attoamm_id			=	c.attoamm_id
                                    and c.data_cancellazione is null	)
                              LEFT join siac_r_atto_amm_stato d
                              on (d.attoamm_id			=	c.attoamm_id
                                    and d.data_cancellazione is null)
                              left join siac_d_atto_amm_stato f
                              on (d.attoamm_stato_id	=	f.attoamm_stato_id
                                and f.data_cancellazione is null)
                              LEFT join siac_d_atto_amm_tipo e
                              on (c.attoamm_tipo_id		=	e.attoamm_tipo_id
                                and e.data_cancellazione is null) 
                      where b.programma_id	=	progettoRec.id_progetto
                      	and b.data_cancellazione is null
                        and b.ente_proprietario_id = p_ente_prop_id                    
                      loop   
                            atto_id:=datiAttoRec.atto_id;
                            atto_anno:=datiAttoRec.atto_anno;
                            atto_numero:=datiAttoRec.atto_numero;
                            atto_oggetto:=datiAttoRec.atto_oggetto;
                            atto_note:=datiAttoRec.atto_note;
                            atto_tipo_id:=datiAttoRec.atto_tipo_id;
                            atto_stato_id:=datiAttoRec.atto_stato_id;
                            atto_stato_code:=datiAttoRec.atto_stato_code;
                            atto_stato_desc:=datiAttoRec.atto_stato_desc;
                            atto_tipo_code:=datiAttoRec.atto_tipo_code;
                            atto_tipo_desc:=datiAttoRec.atto_tipo_desc;
                            return next;
                      end loop;
                      	id_progetto=0;
                        codice_progetto='';
                        descrizione_progetto='';
                        note_progetto='';
                        valore_progetto=0;
                        ambito='';
                        stato='';
                        rilev_fpv='';
                        atto_id=0;
                        atto_anno='';
                        atto_oggetto='';
                        atto_note='';
                        atto_tipo_id=0;
                        atto_stato_id=0;
                        atto_stato_code='';
                        atto_stato_desc='';
                        atto_tipo_code='';
                        atto_tipo_desc='';
          			exception
                    when no_data_found THEN
                    	raise notice 'nessun atto trovato ' ;
                        return;
                    when others  THEN
                    	RTN_MESSAGGIO:='ricerca dati atto';
                        RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
                        return;
                    end;
    end loop;
    exception
        when no_data_found THEN
            raise notice 'nessun dato progetto trovato' ;
            return;
        when others  THEN
            RTN_MESSAGGIO:='ricerca dati programmi/progetti';
            RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
            return;
    end;
end loop;

delete from siac_rep_prog_cronop where utente=user_table;

exception
	when no_data_found THEN
		raise notice 'nessun programma/progetto trovato' ;
		return;
	when others  THEN
        RTN_MESSAGGIO:='ricerca programmi/progetti';
 		RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
        return;
raise notice 'fine OK';
return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

CREATE OR REPLACE FUNCTION siac."BILR045_report_progetto_dati_cronop" (
  p_ente_prop_id integer,
  p_codice_progetto varchar,
  p_anno_bilancio varchar
)
RETURNS TABLE (
  tipo_liv1 varchar,
  codice_liv1 varchar,
  descr_liv1 varchar,
  tipo_liv2 varchar,
  codice_liv2 varchar,
  descr_liv2 varchar,
  tipo_liv3 varchar,
  codice_liv3 varchar,
  descr_liv3 varchar,
  tipo_liv4 varchar,
  codice_liv4 varchar,
  descr_liv4 varchar,
  id_progetto integer,
  capitolo varchar,
  articolo varchar,
  ueb varchar,
  anno_competenza_stanziamento varchar,
  anno_entrata_rif_spesa varchar,
  stanziato numeric,
  descrizione1_attivita varchar,
  descrizione2_attivita varchar,
  anno_bilancio varchar,
  cronoprogramma_id integer,
  cronoprogramma_codice varchar,
  cronoprogramma_descrizione varchar,
  stato varchar,
  note_cronoprogramma varchar,
  cronop_id_elem integer,
  tipologia_capitolo varchar,
  codice_classificatore varchar,
  descrizione_classificatore varchar,
  descrizione_tipo_classificatore varchar
) AS
$body$
DECLARE
datistrutturaRec record;
progettoRec record;
datiCronoprogrammaRec record;


tipo_capitolo_P varchar;
tipo_capitolo_G varchar;
descrizione_classificatore varchar;
codice_classificatore	varchar;
descrizione_tipo_classificatore	varchar;
-----tipologia_capitolo	varchar;
DEF_NULL	constant varchar:='';
def_spazio	constant varchar:=' ';  
RTN_MESSAGGIO varchar(1000):=DEF_NULL;
user_table	varchar;



BEGIN

	tipo_capitolo_G='';
	tipo_capitolo_P='';
	tipo_liv1='';
    codice_liv1='';
  	descr_liv1='';
  	tipo_liv2='';
    codice_liv2='';
  	descr_liv2='';
  	tipo_liv3='';
    codice_liv3='';
  	descr_liv3='';
  	tipo_liv4='';
    codice_liv4='';
  	descr_liv4='';
  	id_progetto=0;
    capitolo='';
  	articolo='';
  	ueb='';
  	anno_competenza_stanziamento='';
  	anno_entrata_rif_spesa='';
  	stanziato=0;
    descrizione1_attivita='';
    descrizione2_attivita='';



select fnc_siac_random_user()
into	user_table;


--------------------------------------------------------------------------------------------------------------------------------------------------
if	(coalesce(p_anno_bilancio,DEF_NULL)=DEF_NULL or coalesce(p_anno_bilancio,def_spazio)=def_spazio)
    THEN 
    insert into siac_rep_prog_cronop
          select 	a.programma_id,
          			b.cronop_id,
                    periodo.anno,
                    user_table
    from      	siac_t_programma a,
    			siac_t_cronop b,
                siac_t_bil	bil,
                siac_t_periodo periodo  			
    where 	a.programma_code		=	p_codice_progetto
    and		b.programma_id			=	a.programma_id
    and		b.bil_id					=	bil.bil_id
    and		bil.periodo_id				=	periodo.periodo_id	
    and 	a.ente_proprietario_id 	= 	p_ente_prop_id
    group by a.programma_id,b.cronop_id, periodo.anno;
        
else
    insert into  siac_rep_prog_cronop
            select 	a.programma_id	id_progetto,
          			b.cronop_id,
                    periodo.anno,
                    user_table
                  from 		siac_t_programma a, 
                          	siac_t_cronop b, 
                          	siac_t_bil	bil,
                          	siac_t_periodo periodo
                  where 	a.programma_code			=	p_codice_progetto
                  and		b.programma_id				=	a.programma_id
                  and		b.bil_id					=	bil.bil_id
                  and		bil.periodo_id				=	periodo.periodo_id
                  and		periodo.anno				=	p_anno_bilancio
                  and 		a.ente_proprietario_id 		= 	p_ente_prop_id
                  and 		b.ente_proprietario_id 		= 	a.ente_proprietario_id
                  and 		bil.ente_proprietario_id	=	a.ente_proprietario_id
                  and 		periodo.ente_proprietario_id	=	a.ente_proprietario_id
                  and		a.data_cancellazione	is NULL
                  and		b.data_cancellazione	is null
                  and		bil.data_cancellazione	is null
                  and		periodo.data_cancellazione	is null
                   group by a.programma_id,b.cronop_id, periodo.anno;                   
end if;  





---------------------------------------------------------------------------------------------------------------------------------------------------
for progettoRec in
    select 	id_programma		id_progetto,
    		id_cronoprogramma	cronoprogramma_id,
            anno_del_bilancio	anno_bilancio
    from 	siac_rep_prog_cronop a 
    where 	a.utente	=	user_table
loop
	id_progetto:=progettoRec.id_progetto; 
    cronoprogramma_id:=progettoRec.cronoprogramma_id; 
    anno_bilancio:=progettoRec.anno_bilancio;
    BEGIN
    for datiCronoprogrammaRec in
        select 		a.programma_id, 
                  	a.cronop_id					cronoprogramma_id, 
                  	a.cronop_code				cronoprogramma_codice, 
                  	a.cronop_desc				cronoprogramma_descrizione, 
                    COALESCE (c.anno_entrata,' ')	anno_entrata_rif_spesa, 
                  	c.periodo_id, 
                    COALESCE (d.anno,' ')		anno_competenza_stanziamento, 
                  	----c.cronop_elem_det_id		cronop_id_elem,
                    b.cronop_elem_id			cronop_id_elem,
                    k.elem_tipo_code			tipologia_capitolo,
                    b.elem_tipo_id,
                  	c.cronop_elem_det_importo	stanziato, 
                  	b.cronop_elem_desc			descrizione1_attivita, 
                  	b.cronop_elem_desc2			descrizione2_attivita,
                    COALESCE (b.cronop_elem_code,' ')	capitolo, 	
                    COALESCE (b.cronop_elem_code2,' ')	articolo, 	
                    COALESCE (b.cronop_elem_code3,' ')	ueb, 	
                  	f.cronop_stato_code, 
                  	f.cronop_stato_desc			stato,
                     (select 	r.testo
                  from  	siac_t_cronop a1,
                            siac_r_cronop_attr r,
                            siac_t_attr ta, 
                            siac_d_attr_tipo i    
                  where		a1.cronop_id	=	a.cronop_id
                  and		a1.cronop_id	=	r.cronop_id
                  and		ta.attr_id			=	r.attr_id
                  and		ta.attr_tipo_id		=	i.attr_tipo_id
                  and 		i.attr_tipo_code	=	'X'
                  --SIAC-6821 16/05/2019.
                  --Mancava il filtro sul nome dell'attributo da estrarre.
                  and 		upper(ta.attr_code)='NOTE'
                  and		r.data_cancellazione	is null
                  and		ta.data_cancellazione	is null
                  and		a.ente_proprietario_id	= p_ente_prop_id)  note_cronoprogramma
          from  	siac_r_cronop_stato e,
                  	siac_d_cronop_stato f,
                  	siac_t_cronop a,
                  	siac_t_cronop_elem b,
                    siac_d_bil_elem_tipo	k, 
                  	siac_t_cronop_elem_det c
                  FULL join  siac_t_periodo d
                  on (c.periodo_id		=	d.periodo_id)       
          where		a.programma_id			=	progettoRec.id_progetto
          and		a.cronop_id				=	progettoRec.cronoprogramma_id 	
          and		c.cronop_elem_id		=	b.cronop_elem_id
          and		b.cronop_id				=	a.cronop_id	
          and		a.ente_proprietario_id 	= 	p_ente_prop_id
          and 		b.ente_proprietario_id	=	a.ente_proprietario_id
          and		c.ente_proprietario_id	=	a.ente_proprietario_id
          and		e.cronop_id				=	a.cronop_id
          and		e.cronop_stato_id		=	f.cronop_stato_id
          and 		b.elem_tipo_id 			= 	k.elem_tipo_id
          and		d.ente_proprietario_id	=	a.ente_proprietario_id
          and		e.ente_proprietario_id	=	a.ente_proprietario_id
          and		f.ente_proprietario_id	=	a.ente_proprietario_id
          and		a.data_cancellazione is null
          and		b.data_cancellazione is null 
          and		c.data_cancellazione is null 
          and		d.data_cancellazione is null 
          and		e.data_cancellazione is null 
          and		f.data_cancellazione is null 
          order by a.programma_id,a.cronop_id,c.anno_entrata,d.anno 
		loop
        	cronoprogramma_codice:=datiCronoprogrammaRec.cronoprogramma_codice;
            cronoprogramma_id:=datiCronoprogrammaRec.cronoprogramma_id;  
            cronoprogramma_descrizione:=datiCronoprogrammaRec.cronoprogramma_descrizione;
            note_cronoprogramma:=datiCronoprogrammaRec.note_cronoprogramma; 
            anno_entrata_rif_spesa:=datiCronoprogrammaRec.anno_entrata_rif_spesa; 
            anno_competenza_stanziamento:=datiCronoprogrammaRec.anno_competenza_stanziamento; 
            stanziato:=datiCronoprogrammaRec.stanziato; 
            descrizione1_attivita:=datiCronoprogrammaRec.descrizione1_attivita;
            descrizione2_attivita:=datiCronoprogrammaRec.descrizione2_attivita;
            capitolo:=datiCronoprogrammaRec.capitolo; 
            articolo:=datiCronoprogrammaRec.articolo;
            ueb:=datiCronoprogrammaRec.ueb; 
            stato:=datiCronoprogrammaRec.stato;
            cronop_id_elem:=datiCronoprogrammaRec.cronop_id_elem;
            tipologia_capitolo:=datiCronoprogrammaRec.tipologia_capitolo;

        if  datiCronoprogrammaRec.tipologia_capitolo = 'CAP-EP' or datiCronoprogrammaRec.tipologia_capitolo = 'CAP-EG' THEN
    			if	coalesce(datiCronoprogrammaRec.articolo ,DEF_spazio)=DEF_spazio and coalesce(datiCronoprogrammaRec.ueb,DEF_spazio)=DEF_spazio	THEN 
    	 			BEGIN
    				for datistrutturaRec in
                    
                    select distinct titolo_tipo.classif_tipo_desc  		tipo_liv1,
                               titolo.classif_code            				codice_liv1,
                               titolo.classif_desc            				descr_liv1,
                               tipologia_tipo.classif_tipo_desc				tipo_liv2,
                               tipologia.classif_code           			codice_liv2,
                               tipologia.classif_desc           			descr_liv2
                        from siac_t_class_fam_tree 			titolo_tree,
                             siac_d_class_fam 				titolo_fam,
                             siac_r_class_fam_tree 			titolo_r_cft,
                             siac_t_class 					titolo,
                             siac_d_class_tipo 				titolo_tipo,
                             siac_d_class_tipo 				tipologia_tipo,
                             siac_t_class 					tipologia,
                             siac_r_cronop_elem_class		r_cronp_class,
                             siac_t_cronop_elem_det			cronop_elem
                        where 		titolo_fam.classif_fam_desc					=	'Entrata - TitoliTipologieCategorie'
                              and 	titolo_tree.classif_fam_id					=	titolo_fam.classif_fam_id
                              and 	titolo_r_cft.classif_fam_tree_id			=	titolo_tree.classif_fam_tree_id
                              and 	titolo.classif_id							=	titolo_r_cft.classif_id_padre
                              and 	titolo_tipo.classif_tipo_code				=	'TITOLO_ENTRATA'
                              and 	titolo.classif_tipo_id						=	titolo_tipo.classif_tipo_id
                              and 	tipologia_tipo.classif_tipo_code			=	'TIPOLOGIA'
                              and 	tipologia.classif_tipo_id					=	tipologia_tipo.classif_tipo_id
                              and 	titolo_r_cft.classif_id						=	tipologia.classif_id
                               and 	r_cronp_class.classif_id					=	tipologia.classif_id
                              and	r_cronp_class.cronop_elem_id				=	datiCronoprogrammaRec.cronop_id_elem
                              and 	titolo.ente_proprietario_id					=	p_ente_prop_id
                              and 	tipologia.ente_proprietario_id				=	titolo.ente_proprietario_id
                              and 	titolo_tree.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	titolo_fam.ente_proprietario_id				=	titolo.ente_proprietario_id
                              and 	titolo_r_cft.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	titolo_tipo.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	tipologia_tipo.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	cronop_elem.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	r_cronp_class.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	titolo.data_cancellazione					is null
                              and 	tipologia.data_cancellazione				is null
                              and	r_cronp_class.data_cancellazione			is null
                              and 	titolo_tree.data_cancellazione				is null
                              and 	titolo_fam.data_cancellazione				is null
                              and 	titolo_r_cft.data_cancellazione				is null
                              and 	titolo_tipo.data_cancellazione				is null
                              and 	tipologia_tipo.data_cancellazione			is null
                              and 	cronop_elem.data_cancellazione				is null
    
                     
                      	loop
                        	tipo_liv1:=datistrutturaRec.tipo_liv1;
                                descr_liv1:=datistrutturaRec.descr_liv1;
                                codice_liv1:=datistrutturaRec.codice_liv1;
                                tipo_liv2:=datistrutturaRec.tipo_liv2;
                                descr_liv2:=datistrutturaRec.descr_liv2;
                                codice_liv2:=datistrutturaRec.codice_liv2;
                        end loop;
                        exception
                          when no_data_found THEN
                          raise notice 'nessuna struttura collegata' ;
                          return;
                          when others  THEN
                          RTN_MESSAGGIO:='ricerca struttura nuovo capitolo entrata oppure senza capitolo entrata';
                          RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
                          return;
                    end;
    			else
    ------------------------------------------------------------------------------------------------------------------------
                    BEGIN
                    for datistrutturaRec in
                        select distinct titolo_tipo.classif_tipo_desc  		tipo_liv1,
                               titolo.classif_code            				codice_liv1,
                               titolo.classif_desc            				descr_liv1,
                               tipologia_tipo.classif_tipo_desc				tipo_liv2,
                               tipologia.classif_code           			codice_liv2,
                               tipologia.classif_desc           			descr_liv2,
                               categoria_tipo.classif_tipo_desc  			tipo_liv3,
                               categoria.classif_code              			codice_liv3,
                               categoria.classif_desc               		descr_liv3
                        from siac_t_class_fam_tree 			titolo_tree,
                             siac_d_class_fam 				titolo_fam,
                             siac_r_class_fam_tree 			titolo_r_cft,
                             siac_r_class_fam_tree 			tipologia_r_cft,
                             siac_t_class 					titolo,
                             siac_d_class_tipo 				titolo_tipo,
                             siac_d_class_tipo 				tipologia_tipo,
                             siac_t_class 					tipologia,
                             siac_d_class_tipo 				categoria_tipo,
                             siac_t_class 					categoria,
                             siac_r_bil_elem_class 			r_capitolo_categoria,
                             siac_r_cronop_elem_bil_elem	r_cronop_elem,
                             siac_t_cronop_elem_det			cronop_elem
                        where 		titolo_fam.classif_fam_desc					=	'Entrata - TitoliTipologieCategorie'
                              and 	titolo_tree.classif_fam_id					=	titolo_fam.classif_fam_id
                              and 	titolo_r_cft.classif_fam_tree_id			=	titolo_tree.classif_fam_tree_id
                              and 	titolo.classif_id							=	titolo_r_cft.classif_id_padre
                              and 	titolo_tipo.classif_tipo_code				=	'TITOLO_ENTRATA'
                              and 	titolo.classif_tipo_id						=	titolo_tipo.classif_tipo_id
                              and 	tipologia_tipo.classif_tipo_code			=	'TIPOLOGIA'
                              and 	tipologia.classif_tipo_id					=	tipologia_tipo.classif_tipo_id
                              and 	titolo_r_cft.classif_id						=	tipologia.classif_id
                              and 	tipologia.classif_id						=	tipologia_r_cft.classif_id_padre
                              and 	categoria_tipo.classif_tipo_code			=	'CATEGORIA'
                              and 	categoria.classif_tipo_id					=	categoria_tipo.classif_tipo_id
                              and 	tipologia_r_cft.classif_id					=	categoria.classif_id
                              and	tipologia_r_cft.classif_id					=	r_capitolo_categoria.classif_id
                              and	r_capitolo_categoria.elem_id				=	r_cronop_elem.elem_id
                              and	r_cronop_elem.cronop_elem_id				=	datiCronoprogrammaRec.cronop_id_elem
                              and 	titolo.ente_proprietario_id					=	p_ente_prop_id
                              and 	tipologia.ente_proprietario_id				=	titolo.ente_proprietario_id
                              and 	categoria.ente_proprietario_id				=	titolo.ente_proprietario_id
                              and 	titolo_tree.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	titolo_fam.ente_proprietario_id				=	titolo.ente_proprietario_id
                              and 	titolo_r_cft.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	tipologia_r_cft.ente_proprietario_id		=	titolo.ente_proprietario_id
                              and 	titolo_tipo.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	tipologia_tipo.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	categoria_tipo.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	r_capitolo_categoria.ente_proprietario_id	=	titolo.ente_proprietario_id
                              and 	r_cronop_elem.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	cronop_elem.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	titolo.data_cancellazione					is null
                              and 	tipologia.data_cancellazione				is null
                              and 	categoria.data_cancellazione				is null
                              and 	titolo_tree.data_cancellazione				is null
                              and 	titolo_fam.data_cancellazione				is null
                              and 	titolo_r_cft.data_cancellazione				is null
                              and 	tipologia_r_cft.data_cancellazione			is null
                              and 	titolo_tipo.data_cancellazione				is null
                              and 	tipologia_tipo.data_cancellazione			is null
                              and 	categoria_tipo.data_cancellazione			is null
                              and 	r_capitolo_categoria.data_cancellazione		is null
                              and 	r_cronop_elem.data_cancellazione			is null
                              and 	cronop_elem.data_cancellazione				is null
                            loop
                                tipo_liv1:=datistrutturaRec.tipo_liv1;
                                descr_liv1:=datistrutturaRec.descr_liv1;
                                codice_liv1:=datistrutturaRec.codice_liv1;
                                tipo_liv2:=datistrutturaRec.tipo_liv2;
                                descr_liv2:=datistrutturaRec.descr_liv2;
                                codice_liv2:=datistrutturaRec.codice_liv2;
                                tipo_liv3:=datistrutturaRec.tipo_liv3;
                                descr_liv3:=datistrutturaRec.descr_liv3;
                                codice_liv3:=datistrutturaRec.codice_liv3;
                            end loop;
                                exception
                                  when no_data_found THEN
                                  raise notice 'nessuna struttura collegata' ;
                                  return;
                                  when others  THEN
                                  RTN_MESSAGGIO:='ricerca struttura capitolo entrata esistente';
                                  RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
                                  return;
                    end;      
    			end if; 
		else
    		if	coalesce(datiCronoprogrammaRec.articolo ,DEF_spazio)=DEF_spazio and coalesce(datiCronoprogrammaRec.ueb,DEF_spazio)=DEF_spazio	THEN 
                BEGIN
    				for datistrutturaRec in
                     select  distinct 	missione_tipo.classif_tipo_desc 		tipo_liv1,
                                    missione.classif_code 					codice_liv1,
                                    missione.classif_desc 					descr_liv1,
                                    programma_tipo.classif_tipo_desc 		tipo_liv2,
                                    programma.classif_code 					codice_liv2,
                                    programma.classif_desc 					descr_liv2,
                                    titusc_tipo.classif_tipo_desc 			tipo_liv3,
                                    titusc.classif_code 					codice_liv3,
                                    titusc.classif_desc 					descr_liv3
                from siac_t_class_fam_tree 			missione_tree,
                     siac_d_class_fam 				missione_fam,
                     siac_r_class_fam_tree 			missione_r_cft,
                     siac_t_class 					missione,
                     siac_d_class_tipo 				missione_tipo ,
                     siac_d_class_tipo 				programma_tipo,
                     siac_t_class 					programma,
                     siac_t_class_fam_tree 			titusc_tree,
                     siac_d_class_fam 				titusc_fam,
                     siac_r_class_fam_tree 			titusc_r_cft,
                     siac_t_class 					titusc,
                     siac_d_class_tipo 				titusc_tipo,
                     siac_r_cronop_elem_class		r_cronp_class_programma,
                     siac_r_cronop_elem_class		r_cronp_class_titolo,
                     siac_t_cronop_elem_det			cronop_elem
                where missione_fam.classif_fam_desc						=	'Spesa - MissioniProgrammi'      
                      and	missione_tree.classif_fam_id				=	missione_fam.classif_fam_id 
                        and	missione_r_cft.classif_fam_tree_id			=	missione_tree.classif_fam_tree_id 
                      and	missione.classif_id							=	missione_r_cft.classif_id_padre 
                      and	missione_tipo.classif_tipo_code				=	'MISSIONE' 
                      and	missione.classif_tipo_id					=	missione_tipo.classif_tipo_id 
                      and	programma_tipo.classif_tipo_code			=	'PROGRAMMA'  
                      and	programma.classif_tipo_id					=	programma_tipo.classif_tipo_id  
                      and	missione_r_cft.classif_id					=	programma.classif_id  
                      and	programma.classif_id						=	r_cronp_class_programma.classif_id
                      and	r_cronp_class_programma.cronop_elem_id		=	datiCronoprogrammaRec.cronop_id_elem		
                      and	titusc_fam.classif_fam_desc					=	'Spesa - TitoliMacroaggregati'      
                      and	titusc_tree.classif_fam_id					=	titusc_fam.classif_fam_id 
                      and	titusc_r_cft.classif_fam_tree_id			=	titusc_tree.classif_fam_tree_id 
                      and	titusc.classif_id							=	titusc_r_cft.classif_id_padre 
                      and	titusc_tipo.classif_tipo_code				=	'TITOLO_SPESA' 
                      and	titusc.classif_tipo_id						=	titusc_tipo.classif_tipo_id
                      and	titusc.classif_id							=	r_cronp_class_titolo.classif_id
                      and	r_cronp_class_titolo.cronop_elem_id			=	datiCronoprogrammaRec.cronop_id_elem		 
                      and 	missione_tree.ente_proprietario_id			=	p_ente_prop_id
                      and 	missione_fam.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	missione_r_cft.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and 	missione.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      AND 	missione_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	programma_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	programma.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      and 	titusc_tree.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	titusc_fam.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      and 	titusc_r_cft.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and 	titusc.ente_proprietario_id					=	missione_tree.ente_proprietario_id
                      AND 	titusc_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and	r_cronp_class_titolo.ente_proprietario_id	=	missione_tree.ente_proprietario_id
                      and	cronop_elem.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and 	missione_tree.data_cancellazione			is null
                      and 	missione_fam.data_cancellazione				is null
                      AND 	missione_r_cft.data_cancellazione			is null
                      and 	missione.data_cancellazione					is null
                      AND 	missione_tipo.data_cancellazione			is null
                      AND 	programma_tipo.data_cancellazione			is null
                      AND 	programma.data_cancellazione				is null
                      and 	titusc_tree.data_cancellazione				is null
                      AND 	titusc_fam.data_cancellazione				is null
                      and 	titusc_r_cft.data_cancellazione				is null
                      and 	titusc.data_cancellazione					is null
                      AND 	titusc_tipo.data_cancellazione				is null
                      and	r_cronp_class_titolo.data_cancellazione		is null
                      and	cronop_elem.data_cancellazione				is null
                      	loop
                        	 tipo_liv1:=datistrutturaRec.tipo_liv1;
                                descr_liv1:=datistrutturaRec.descr_liv1;
                                codice_liv1:=datistrutturaRec.codice_liv1;
                                tipo_liv2:=datistrutturaRec.tipo_liv2;
                                descr_liv2:=datistrutturaRec.descr_liv2;
                                codice_liv2:=datistrutturaRec.codice_liv2;
                                tipo_liv3:=datistrutturaRec.tipo_liv3;
                                descr_liv3:=datistrutturaRec.descr_liv3;
                                codice_liv3:=datistrutturaRec.codice_liv3;    
                        end loop;
                        exception
                          when no_data_found THEN
                          raise notice 'nessuna struttura collegata' ;
                          return;
                          when others  THEN
                          RTN_MESSAGGIO:='ricerca struttura nuovo capitolo spesa o senza capitolo di spesa';
                          RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
                          return;
                    end;
            else
            BEGIN
    				for datistrutturaRec in
            
            	select  distinct 	missione_tipo.classif_tipo_desc 		tipo_liv1,
                                    missione.classif_code 					codice_liv1,
                                    missione.classif_desc 					descr_liv1,
                                    programma_tipo.classif_tipo_desc 		tipo_liv2,
                                    programma.classif_code 					codice_liv2,
                                    programma.classif_desc 					descr_liv2,
                                    titusc_tipo.classif_tipo_desc 			tipo_liv3,
                                    titusc.classif_code 					codice_liv3,
                                    titusc.classif_desc 					descr_liv3,
                                    macroaggr_tipo.classif_tipo_desc 		tipo_liv4,
                                    macroaggr.classif_code 					codice_liv4,
                                    macroaggr.classif_desc 					descr_liv4
                from siac_t_class_fam_tree 			missione_tree,
                     siac_d_class_fam 				missione_fam,
                     siac_r_class_fam_tree 			missione_r_cft,
                     siac_t_class 					missione,
                     siac_d_class_tipo 				missione_tipo ,
                     siac_d_class_tipo 				programma_tipo,
                     siac_t_class 					programma,
                     siac_t_class_fam_tree 			titusc_tree,
                     siac_d_class_fam 				titusc_fam,
                     siac_r_class_fam_tree 			titusc_r_cft,
                     siac_t_class 					titusc,
                     siac_d_class_tipo 				titusc_tipo ,
                     siac_d_class_tipo 				macroaggr_tipo,
                     siac_t_class 					macroaggr,
                     siac_r_bil_elem_class 			r_capitolo_programma,
                     siac_r_cronop_elem_bil_elem	r_cronop_elem,
                     siac_r_bil_elem_class 			r_capitolo_macroaggr
                where missione_fam.classif_fam_desc						=	'Spesa - MissioniProgrammi'      
                      and	missione_tree.classif_fam_id				=	missione_fam.classif_fam_id 
                        and	missione_r_cft.classif_fam_tree_id			=	missione_tree.classif_fam_tree_id 
                      and	missione.classif_id							=	missione_r_cft.classif_id_padre 
                      and	missione_tipo.classif_tipo_code				=	'MISSIONE' 
                      and	missione.classif_tipo_id					=	missione_tipo.classif_tipo_id 
                      and	programma_tipo.classif_tipo_code			=	'PROGRAMMA'  
                      and	programma.classif_tipo_id					=	programma_tipo.classif_tipo_id  
                      and	missione_r_cft.classif_id					=	programma.classif_id  
                      and	missione_r_cft.classif_id					=	r_capitolo_programma.classif_id		
                      and	r_capitolo_programma.elem_id				=	r_cronop_elem.elem_id		
                      and	r_cronop_elem.cronop_elem_id				=	datiCronoprogrammaRec.cronop_id_elem	
                      and	titusc_fam.classif_fam_desc					=	'Spesa - TitoliMacroaggregati'      
                      and	titusc_tree.classif_fam_id					=	titusc_fam.classif_fam_id 
                      and	titusc_r_cft.classif_fam_tree_id			=	titusc_tree.classif_fam_tree_id 
                      and	titusc.classif_id							=	titusc_r_cft.classif_id_padre 
                      and	titusc_tipo.classif_tipo_code				=	'TITOLO_SPESA' 
                      and	titusc.classif_tipo_id						=	titusc_tipo.classif_tipo_id 
                      and	macroaggr_tipo.classif_tipo_code			=	'MACROAGGREGATO' 
                      and	macroaggr.classif_tipo_id					=	macroaggr_tipo.classif_tipo_id 
                      and	titusc_r_cft.classif_id						=	macroaggr.classif_id 
                      and	titusc_r_cft.classif_id						=	r_capitolo_macroaggr.classif_id 
                      and	r_capitolo_macroaggr.elem_id				=	r_cronop_elem.elem_id		 
                      and	r_cronop_elem.cronop_elem_id				=	datiCronoprogrammaRec.cronop_id_elem
                      and 	missione_tree.ente_proprietario_id			=	p_ente_prop_id
                      and 	missione_fam.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	missione_r_cft.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and 	missione.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      AND 	missione_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	programma_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	programma.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      and 	titusc_tree.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	titusc_fam.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      and 	titusc_r_cft.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and 	titusc.ente_proprietario_id					=	missione_tree.ente_proprietario_id
                      AND 	titusc_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	macroaggr_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	macroaggr.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      and 	r_capitolo_programma.ente_proprietario_id	=	missione_tree.ente_proprietario_id
                      AND	r_cronop_elem.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and 	r_capitolo_macroaggr.ente_proprietario_id	=	missione_tree.ente_proprietario_id     
                      and 	missione_tree.data_cancellazione			is null
                      and 	missione_fam.data_cancellazione				is null
                      AND 	missione_r_cft.data_cancellazione			is null
                      and 	missione.data_cancellazione					is null
                      AND 	missione_tipo.data_cancellazione			is null
                      AND 	programma_tipo.data_cancellazione			is null
                      AND 	programma.data_cancellazione				is null
                      and 	titusc_tree.data_cancellazione				is null
                      AND 	titusc_fam.data_cancellazione				is null
                      and 	titusc_r_cft.data_cancellazione				is null
                      and 	titusc.data_cancellazione					is null
                      AND 	titusc_tipo.data_cancellazione				is null
                      AND 	macroaggr_tipo.data_cancellazione			is null
                      AND 	macroaggr.data_cancellazione				is null
                      and 	r_capitolo_programma.data_cancellazione		is null
                      AND	r_cronop_elem.data_cancellazione			is null
                      and 	r_capitolo_macroaggr.data_cancellazione		is null
                      
            		loop
                                tipo_liv1:=datistrutturaRec.tipo_liv1;
                                descr_liv1:=datistrutturaRec.descr_liv1;
                                codice_liv1:=datistrutturaRec.codice_liv1;
                                tipo_liv2:=datistrutturaRec.tipo_liv2;
                                descr_liv2:=datistrutturaRec.descr_liv2;
                                codice_liv2:=datistrutturaRec.codice_liv2;
                                tipo_liv3:=datistrutturaRec.tipo_liv3;
                                descr_liv3:=datistrutturaRec.descr_liv3;
                                codice_liv3:=datistrutturaRec.codice_liv3;
                                tipo_liv4:=datistrutturaRec.tipo_liv4;
                                descr_liv4:=datistrutturaRec.descr_liv4;
                                codice_liv4:=datistrutturaRec.codice_liv4;
            		 end loop;
                                exception
                                  when no_data_found THEN
                                  raise notice 'nessuna struttura collegata' ;
                                  return;
                                  when others  THEN
                                  RTN_MESSAGGIO:='ricerca struttura capitolo spesa esistente';
                                  RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
                                  return;
                end;      
            end if; 
        end if;
            return next;
            tipo_liv1='';
            descr_liv1='';
            codice_liv1='';
            tipo_liv2='';
            descr_liv2='';
            codice_liv2='';
            tipo_liv3='';
            descr_liv3='';
            codice_liv3='';
            tipo_liv4='';
            descr_liv4='';
            codice_liv4='';
            capitolo='';
            articolo='';
            ueb='';
            anno_competenza_stanziamento='';
            anno_entrata_rif_spesa='';
            stanziato=0;
            cronoprogramma_id=0;
            descrizione1_attivita='';
            descrizione2_attivita='';
            cronoprogramma_codice='';
            cronoprogramma_descrizione='';
            note_cronoprogramma='';
            cronop_id_elem=0;
        end loop;
        exception
          when no_data_found THEN
          raise notice 'nessun cronoprogramma trovato' ;
          return;
          when others  THEN
          RTN_MESSAGGIO:='ricerca cronoprogrammi';
          RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
          return;
    end;
    id_progetto=0;
end loop;

delete from siac_rep_prog_cronop where utente=user_table;

exception
	when no_data_found THEN
		raise notice 'nessun programma/progetto trovato' ;
		return;
	when others  THEN
        RTN_MESSAGGIO:='ricerca programmi/progetti';
 		RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
        return;
raise notice 'fine OK';
return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;


-- SIAC-6821 - MAURIZIO - FINE

--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
-------------              SIAC-6255 INIZIO               ----------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------

/*****************************************************************************************
   DDL INIZIO: creazione tabella, indici, aggiunta campi di collegamento con altre entita'
******************************************************************************************/
-- quadro economico inizio
INSERT INTO siac_t_azione (azione_code, azione_desc, azione_tipo_id, gruppo_azioni_id, urlapplicazione, verificauo, validita_inizio, ente_proprietario_id, login_operazione)
SELECT tmp.code, tmp.descr, dat.azione_tipo_id, dga.gruppo_azioni_id, '/../siacbilapp/azioneRichiesta.do', FALSE, to_timestamp('01/01/2019','dd/mm/yyyy'), tep.ente_proprietario_id, 'admin'
FROM siac_d_azione_tipo dat
JOIN siac_t_ente_proprietario tep ON (dat.ente_proprietario_id = tep.ente_proprietario_id)
JOIN siac_d_gruppo_azioni dga ON (dga.ente_proprietario_id = tep.ente_proprietario_id)
CROSS JOIN (VALUES ('OP-GESC077-quadroEconomico', 'Quadro Economico', 'ATTIVITA_SINGOLA', 'BIL_ALTRO')) AS tmp(code, descr, tipo, gruppo)
WHERE dga.gruppo_azioni_code = tmp.gruppo
AND dat.azione_tipo_code = tmp.tipo
AND NOT EXISTS (
	SELECT 1
	FROM siac_t_azione ta
	WHERE ta.azione_tipo_id = dat.azione_tipo_id
	AND ta.azione_code = tmp.code
)
ORDER BY tep.ente_proprietario_id, tmp.code;

CREATE TABLE IF NOT EXISTS siac.siac_d_quadro_economico_parte (
  parte_id SERIAL,
  parte_code VARCHAR(200) NOT NULL,
  parte_desc VARCHAR(500) NOT NULL,
  validita_inizio TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  validita_fine TIMESTAMP WITHOUT TIME ZONE,
  ente_proprietario_id INTEGER NOT NULL,
  data_creazione TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  data_modifica TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  data_cancellazione TIMESTAMP WITHOUT TIME ZONE,
  login_operazione VARCHAR(200) NOT NULL,
  CONSTRAINT pk_siac_d_quadro_economico_parte PRIMARY KEY(parte_id),
  CONSTRAINT siac_t_ente_proprietario_siac_d_quadro_economico_parte FOREIGN KEY (ente_proprietario_id)
    REFERENCES siac.siac_t_ente_proprietario(ente_proprietario_id)
) ;

CREATE TABLE IF NOT EXISTS siac.siac_d_quadro_economico_stato (
  quadro_economico_stato_id SERIAL,
  quadro_economico_stato_code VARCHAR(200) NOT NULL,
  quadro_economico_stato_desc VARCHAR(500) NOT NULL,
  validita_inizio TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  validita_fine TIMESTAMP WITHOUT TIME ZONE,
  ente_proprietario_id INTEGER NOT NULL,
  data_creazione TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  data_modifica TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  data_cancellazione TIMESTAMP WITHOUT TIME ZONE,
  login_operazione VARCHAR(200) NOT NULL,
  CONSTRAINT pk_siac_d_quadro_economico_stato PRIMARY KEY(quadro_economico_stato_id),
  CONSTRAINT siac_t_ente_proprietario_siac_d_quadro_economico_stato FOREIGN KEY (ente_proprietario_id)
    REFERENCES siac.siac_t_ente_proprietario(ente_proprietario_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE
)
WITH (oids = false);

select fnc_dba_create_index(
'siac_d_quadro_economico_stato'::text,
  'idx_siac_d_quadro_economico_stato_1'::text,
  'quadro_economico_stato_code, validita_inizio, ente_proprietario_id'::text,
  'data_cancellazione IS NULL',
  true
);

CREATE TABLE IF NOT EXISTS siac_t_quadro_economico (
  quadro_economico_id SERIAL,
  quadro_economico_code VARCHAR(200) NOT NULL,
  quadro_economico_desc VARCHAR(500) NOT NULL,
  quadro_economico_id_padre INTEGER,
  livello INTEGER NOT NULL, --valori ammessi: 0, 1, 2...
  parte_id INTEGER NOT NULL,
  validita_inizio TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  validita_fine TIMESTAMP WITHOUT TIME ZONE,
  ente_proprietario_id INTEGER NOT NULL,
  data_creazione TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  data_modifica TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  data_cancellazione TIMESTAMP WITHOUT TIME ZONE,
  login_operazione VARCHAR(200) NOT NULL,
  login_creazione VARCHAR(200) NOT NULL,
  login_modifica VARCHAR(200),
  login_cancellazione VARCHAR(200),
  CONSTRAINT pk_siac_t_quadro_economico PRIMARY KEY(quadro_economico_id),
  CONSTRAINT siac_t_ente_proprietario_siac_t_quadro_economico FOREIGN KEY (ente_proprietario_id)
    REFERENCES siac.siac_t_ente_proprietario(ente_proprietario_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
  CONSTRAINT siac_t_quadro_economico_siac_t_quadro_economico FOREIGN KEY (quadro_economico_id_padre)
    REFERENCES siac.siac_t_quadro_economico(quadro_economico_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE
) ;


CREATE TABLE IF NOT EXISTS siac_r_quadro_economico_stato (
  quadro_economico_r_stato_id SERIAL,
  quadro_economico_id INTEGER NOT NULL,
  quadro_economico_stato_id INTEGER NOT NULL,
  validita_inizio TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  validita_fine TIMESTAMP WITHOUT TIME ZONE,
  ente_proprietario_id INTEGER NOT NULL,
  data_creazione TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  data_modifica TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  data_cancellazione TIMESTAMP WITHOUT TIME ZONE,
  login_operazione VARCHAR(200) NOT NULL,
  CONSTRAINT pk_siac_r_quadro_economico_stato PRIMARY KEY(quadro_economico_r_stato_id),
  CONSTRAINT siac_d_quadro_economico_stato_siac_r_quadro_economico_stato FOREIGN KEY (quadro_economico_stato_id)
    REFERENCES siac.siac_d_quadro_economico_stato(quadro_economico_stato_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
  CONSTRAINT siac_t_ente_proprietario_siac_r_quadro_economico_stato FOREIGN KEY (ente_proprietario_id)
    REFERENCES siac.siac_t_ente_proprietario(ente_proprietario_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
  CONSTRAINT siac_t_quadro_economico_stato_siac_r_quadro_economico_stato FOREIGN KEY (quadro_economico_id)
    REFERENCES siac.siac_t_quadro_economico(quadro_economico_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE
)
WITH (oids = false);

select fnc_dba_create_index(
'siac_r_quadro_economico_stato'::text,
  'idx_siac_r_quadro_economico_stato_1'::text,
  'quadro_economico_id, quadro_economico_stato_id, validita_inizio, ente_proprietario_id'::text,
  'data_cancellazione IS NULL',
  true
);

select fnc_dba_create_index(
'siac_r_quadro_economico_stato'::text,
  'siac_r_quadro_economico_stato_fk_quadro_economico_id_idx'::text,
  'ente_proprietario_id'::text,
  '',
  false
);

select fnc_dba_create_index(
'siac_r_quadro_economico_stato'::text,
  'siac_r_quadro_economico_stato_fk_quadro_economico_stato_id_idx'::text,
  'ente_proprietario_id'::text,
  '',
  false
);

---- COLLEGAMENTO TRA QUADRO ECONOMICO E CRONOPROGRAMMA

SELECT * FROM fnc_dba_add_column_params ('siac_t_cronop_elem_det', 'quadro_economico_id_padre' , 'INTEGER');
SELECT * FROM fnc_dba_add_column_params ('siac_t_cronop_elem_det', 'quadro_economico_id_figlio' , 'INTEGER');
SELECT * FROM fnc_dba_add_column_params ('siac_t_cronop_elem_det', 'quadro_economico_det_importo' , 'NUMERIC');

SELECT * FROM fnc_dba_add_fk_constraint (
	'siac_t_cronop_elem_det',
	'siac_t_cronop_elem_det_siac_t_quadro_economico_padre',
    'quadro_economico_id_padre',
  	'siac_t_quadro_economico',
    'quadro_economico_id'
);

SELECT * FROM fnc_dba_add_fk_constraint (
	'siac_t_cronop_elem_det',
	'siac_t_cronop_elem_det_siac_t_quadro_economico_figlio',
    'quadro_economico_id_figlio',
  	'siac_t_quadro_economico',
    'quadro_economico_id'
);

-- quadro economico fine

-- cronoprogramma inizio

SELECT * FROM fnc_dba_add_column_params ('siac_t_cronop', 'cronop_data_approvazione_fattibilita' , 'TIMESTAMP WITHOUT TIME ZONE');
SELECT * FROM fnc_dba_add_column_params ('siac_t_cronop', 'cronop_data_approvazione_programma_def' , 'TIMESTAMP WITHOUT TIME ZONE');
SELECT * FROM fnc_dba_add_column_params ('siac_t_cronop', 'cronop_data_approvazione_programma_esec' , 'TIMESTAMP WITHOUT TIME ZONE');
SELECT * FROM fnc_dba_add_column_params ('siac_t_cronop', 'cronop_data_avvio_procedura' , 'TIMESTAMP WITHOUT TIME ZONE');
SELECT * FROM fnc_dba_add_column_params ('siac_t_cronop', 'cronop_data_aggiudicazione_lavori' , 'TIMESTAMP WITHOUT TIME ZONE');
SELECT * FROM fnc_dba_add_column_params ('siac_t_cronop', 'cronop_data_inizio_lavori' , 'TIMESTAMP WITHOUT TIME ZONE');
SELECT * FROM fnc_dba_add_column_params ('siac_t_cronop', 'cronop_data_fine_lavori' , 'TIMESTAMP WITHOUT TIME ZONE');
SELECT * FROM fnc_dba_add_column_params ('siac_t_cronop', 'cronop_giorni_durata' , 'INTEGER');
SELECT * FROM fnc_dba_add_column_params ('siac_t_cronop', 'cronop_data_collaudo' , 'TIMESTAMP WITHOUT TIME ZONE');
SELECT * FROM fnc_dba_add_column_params ('siac_t_cronop', 'gestione_quadro_economico' , 'BOOLEAN DEFAULT FALSE');
SELECT * FROM fnc_dba_add_column_params ('siac_t_cronop', 'usato_per_fpv_prov' , 'BOOLEAN');



CREATE TABLE IF NOT EXISTS siac.siac_r_cronop_atto_amm (
  cronop_atto_amm_id SERIAL,
  cronop_id INTEGER NOT NULL,
  attoamm_id INTEGER NOT NULL,
  validita_inizio TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  validita_fine TIMESTAMP WITHOUT TIME ZONE,
  ente_proprietario_id INTEGER NOT NULL,
  data_creazione TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  data_modifica TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  data_cancellazione TIMESTAMP WITHOUT TIME ZONE,
  login_operazione VARCHAR(200) NOT NULL,
  CONSTRAINT pk_siac_r_cronop_atto_amm PRIMARY KEY(cronop_atto_amm_id),
  CONSTRAINT siac_t_atto_amm_siac_r_cronop_atto_amm FOREIGN KEY (attoamm_id)
    REFERENCES siac.siac_t_atto_amm(attoamm_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
  CONSTRAINT siac_t_ente_proprietario_siac_r_cronop_atto_amm FOREIGN KEY (ente_proprietario_id)
    REFERENCES siac.siac_t_ente_proprietario(ente_proprietario_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
  CONSTRAINT siac_t_cronop_siac_r_cronop_atto_amm FOREIGN KEY (cronop_id)
    REFERENCES siac.siac_t_cronop(cronop_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE
)
WITH (oids = false);

CREATE TABLE IF NOT EXISTS siac.siac_r_movgest_ts_cronop_elem (
  movgest_ts_cronop_elem_id SERIAL,
  movgest_ts_id INTEGER NOT NULL,
  cronop_id INTEGER NOT NULL,
  cronop_elem_id INTEGER,
  validita_inizio TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  validita_fine TIMESTAMP WITHOUT TIME ZONE,
  ente_proprietario_id INTEGER,
  data_creazione TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  data_modifica TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  data_cancellazione TIMESTAMP WITHOUT TIME ZONE,
  login_operazione VARCHAR(200) NOT NULL,
  CONSTRAINT pk_siac_r_movgest_ts_cronop_elem PRIMARY KEY(movgest_ts_cronop_elem_id),
  CONSTRAINT siac_t_ente_proprietario_siac_r_movgest_ts_cronop_elem FOREIGN KEY (ente_proprietario_id)
    REFERENCES siac.siac_t_ente_proprietario(ente_proprietario_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
  CONSTRAINT siac_t_movgest_ts_siac_r_movgest_ts_cronop_elem FOREIGN KEY (movgest_ts_id)
    REFERENCES siac.siac_t_movgest_ts(movgest_ts_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
  CONSTRAINT siac_t_cronop_elem_siac_r_movgest_ts_cronop_elem FOREIGN KEY (cronop_elem_id)
    REFERENCES siac.siac_t_cronop_elem(cronop_elem_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
  CONSTRAINT siac_t_cronop_siac_r_movgest_ts_cronop FOREIGN KEY (cronop_id)
    REFERENCES siac.siac_t_cronop(cronop_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE
);

-- cronoprogramma fine

--progetto inizio
--nuove colonne 'lisce' sulla siac_t_programma
SELECT * FROM fnc_dba_add_column_params ('siac_t_programma', 'programma_responsabile_unico' , 'VARCHAR(500)');
SELECT * FROM fnc_dba_add_column_params ('siac_t_programma', 'programma_spazi_finanziari' , 'BOOLEAN');
SELECT * FROM fnc_dba_add_column_params ('siac_t_programma', 'bil_id' , 'INTEGER');
SELECT * FROM fnc_dba_add_fk_constraint (
	'siac_t_programma',
	'siac_t_programma_siac_t_bil',
    'bil_id',
  	'siac_t_bil',
    'bil_id'
);

--nuove codifiche collegate alla siac_t_programma e collegamento con siac_t_programma
CREATE TABLE IF NOT EXISTS siac.siac_d_programma_affidamento (
  programma_affidamento_id SERIAL,
  programma_affidamento_code VARCHAR(200) NOT NULL,
  programma_affidamento_desc VARCHAR(500) NOT NULL,
  ente_proprietario_id INTEGER NOT NULL,
  validita_inizio TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  validita_fine TIMESTAMP WITHOUT TIME ZONE,
  data_creazione TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  data_modifica TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  data_cancellazione TIMESTAMP WITHOUT TIME ZONE,
  login_operazione VARCHAR(200) NOT NULL,
  CONSTRAINT pk_siac_d_programma_affidamento PRIMARY KEY(programma_affidamento_id),
  CONSTRAINT siac_t_ente_proprietario_siac_d_programma_affidamento FOREIGN KEY (ente_proprietario_id)
    REFERENCES siac.siac_t_ente_proprietario(ente_proprietario_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE
)
WITH (oids = false);

select fnc_dba_create_index(
'siac_d_programma_affidamento'::text,
  'idx_siac_d_programma_affidamento'::text,
  'programma_affidamento_code, validita_inizio, ente_proprietario_id'::text,
  'data_cancellazione IS NULL',
  true
);


SELECT * FROM fnc_dba_add_column_params ('siac_t_programma', 'programma_affidamento_id' , 'INTEGER');

SELECT * FROM fnc_dba_add_fk_constraint (
	'siac_t_programma',
	'siac_t_programma_siac_d_programma_affidamento',
    'programma_affidamento_id',
  	'siac_d_programma_affidamento',
    'programma_affidamento_id'
);

CREATE TABLE IF NOT EXISTS siac.siac_d_programma_tipo(
  programma_tipo_id SERIAL,
  programma_tipo_code VARCHAR(200) NOT NULL,
  programma_tipo_desc VARCHAR(500) NOT NULL,
  ente_proprietario_id INTEGER NOT NULL,
  validita_inizio TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  validita_fine TIMESTAMP WITHOUT TIME ZONE,
  data_creazione TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  data_modifica TIMESTAMP WITHOUT TIME ZONE DEFAULT now() NOT NULL,
  data_cancellazione TIMESTAMP WITHOUT TIME ZONE,
  login_operazione VARCHAR(200) NOT NULL,
  CONSTRAINT pk_siac_d_programma_tipo PRIMARY KEY(programma_tipo_id),
  CONSTRAINT siac_t_ente_proprietario_siac_d_programma_tipo FOREIGN KEY (ente_proprietario_id)
    REFERENCES siac.siac_t_ente_proprietario(ente_proprietario_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE
)
WITH (oids = false);

select fnc_dba_create_index(
'siac_d_programma_tipo'::text,
  'idx_siac_d_programma_tipo'::text,
  'programma_tipo_code, validita_inizio, ente_proprietario_id'::text,
  'data_cancellazione IS NULL',
  true
);


SELECT * FROM fnc_dba_add_column_params ('siac_t_programma', 'programma_tipo_id' , 'INTEGER');
SELECT * FROM fnc_dba_add_fk_constraint (
	'siac_t_programma',
	'siac_t_programma_siac_d_programma_tipo',
    'programma_tipo_id',
  	'siac_d_programma_tipo',
    'programma_tipo_id'
);



--progetto fine

-- fasi_bilancio inizio
drop table if exists fase_bil_t_programmi;
drop table if exists fase_bil_t_cronop;

CREATE TABLE fase_bil_t_programmi
(
  fase_bil_programma_id SERIAL,
  fase_bil_elab_id INTEGER NOT NULL,
  fase_bil_programma_ape_tipo varchar not null,
  programma_id integer not null,
  programma_tipo_id integer not null,
  bil_id INTEGER NOT NULL,
  programma_new_id integer NULL,
  fl_elab VARCHAR not null default 'N',
  scarto_code VARCHAR,
  scarto_desc VARCHAR,
  data_creazione TIMESTAMP WITHOUT TIME ZONE,
  data_modifica  TIMESTAMP WITHOUT TIME ZONE,
  data_cancellazione TIMESTAMP WITHOUT TIME ZONE,
  login_operazione VARCHAR,
  ente_proprietario_id INTEGER,
  CONSTRAINT pk_fase_bil_t_programmi PRIMARY KEY(fase_bil_programma_id),
  CONSTRAINT fase_bil_t_elaborazione_fase_bil_t_progr FOREIGN KEY  (fase_bil_elab_id)
    REFERENCES fase_bil_t_elaborazione(fase_bil_elab_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
  CONSTRAINT siac_t_programma_fase_bil_t_programmi FOREIGN KEY (programma_id)
    REFERENCES siac_t_programma(programma_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
  CONSTRAINT siac_d_programma_tipo_fase_bil_t_programmi FOREIGN KEY (programma_tipo_id)
    REFERENCES siac_d_programma_tipo(programma_tipo_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
  CONSTRAINT siac_t_bil_fase_bil_t_programmi FOREIGN KEY (bil_id)
    REFERENCES siac_t_bil(bil_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
  CONSTRAINT siac_t_ente_proprietario_fase_bil_t_programmi FOREIGN KEY (ente_proprietario_id)
    REFERENCES siac_t_ente_proprietario(ente_proprietario_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE
)
WITH (oids = false);

CREATE TABLE fase_bil_t_cronop
(
  fase_bil_cronop_id SERIAL,
  fase_bil_elab_id INTEGER NOT NULL,
  fase_bil_cronop_ape_tipo varchar not null,
  cronop_id    integer not null,
  programma_id integer not null,
  bil_id INTEGER NOT NULL,
  cronop_new_id integer NULL,
  fl_elab VARCHAR not null default 'N',
  scarto_code VARCHAR,
  scarto_desc VARCHAR,
  data_creazione TIMESTAMP WITHOUT TIME ZONE,
  data_modifica  TIMESTAMP WITHOUT TIME ZONE,
  data_cancellazione TIMESTAMP WITHOUT TIME ZONE,
  login_operazione VARCHAR,
  ente_proprietario_id INTEGER,
  CONSTRAINT pk_fase_bil_t_cronp PRIMARY KEY(fase_bil_cronop_id),
  CONSTRAINT fase_bil_t_elaborazione_fase_bil_t_cronop FOREIGN KEY  (fase_bil_elab_id)
    REFERENCES fase_bil_t_elaborazione(fase_bil_elab_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
  CONSTRAINT siac_t_cronp_fase_bil_t_cronop FOREIGN KEY (cronop_id)
    REFERENCES siac_t_cronop(cronop_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
  CONSTRAINT siac_t_programma_fase_bil_t_cronop FOREIGN KEY (programma_id)
    REFERENCES siac_t_programma(programma_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
  CONSTRAINT siac_t_bil_fase_bil_t_cronop FOREIGN KEY (bil_id)
    REFERENCES siac_t_bil(bil_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE,
  CONSTRAINT siac_t_ente_proprietario_fase_bil_t_cronop FOREIGN KEY (ente_proprietario_id)
    REFERENCES siac_t_ente_proprietario(ente_proprietario_id)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION
    NOT DEFERRABLE
)
WITH (oids = false);

-- fasi_bilancio fine

-- DWH inizio
-- siac_dwh_programma
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma', 'programma_responsabile_unico' , 'VARCHAR(500)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma', 'programma_spazi_finanziari' , 'BOOLEAN');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma', 'programma_anno_bilancio' , 'VARCHAR(4)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma', 'programma_affidamento_code' , 'VARCHAR(200)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma', 'programma_affidamento_desc' , 'VARCHAR(500)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma', 'programma_tipo_code' , 'VARCHAR(200)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma', 'programma_tipo_desc' , 'VARCHAR(500)');

-- siac_dwh_programma_cronop
-- siac_t_programma
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_responsabile_unico' , 'VARCHAR(500)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_spazi_finanziari' , 'BOOLEAN');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_anno_bilancio' , 'VARCHAR(4)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_affidamento_code' , 'VARCHAR(200)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_affidamento_desc' , 'VARCHAR(500)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_tipo_code' , 'VARCHAR(200)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_tipo_desc' , 'VARCHAR(500)');
-- siac_t_cronop
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_data_appfat' , 'TIMESTAMP WITHOUT TIME ZONE');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_data_appdef' , 'TIMESTAMP WITHOUT TIME ZONE');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_data_appesec' , 'TIMESTAMP WITHOUT TIME ZONE');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_data_avviopr' , 'TIMESTAMP WITHOUT TIME ZONE');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_data_agglav' , 'TIMESTAMP WITHOUT TIME ZONE');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_data_inizlav' , 'TIMESTAMP WITHOUT TIME ZONE');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_data_finelav' , 'TIMESTAMP WITHOUT TIME ZONE');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_giorni_dur' , 'integer');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_data_coll' , 'TIMESTAMP WITHOUT TIME ZONE');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_gest_quad_eco' , 'BOOLEAN');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_us_per_fpv_pr' , 'BOOLEAN');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_ann_atto_amm' , 'VARCHAR(4)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_num_atto_amm' , 'VARCHAR(500)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_ogg_atto_amm' , 'VARCHAR(500)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_nte_atto_amm' , 'VARCHAR(500)');

SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_tpc_atto_amm' , 'VARCHAR(200)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_tpd_atto_amm' , 'VARCHAR(500)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_stc_atto_amm' , 'VARCHAR(200)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_std_atto_amm' , 'VARCHAR(500)');

SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_crc_atto_amm' , 'VARCHAR(200)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_crd_atto_amm' , 'VARCHAR(500)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_cdc_atto_amm' , 'VARCHAR(200)');
SELECT * FROM fnc_dba_add_column_params ('siac_dwh_programma_cronop', 'programma_cronop_cdd_atto_amm' , 'VARCHAR(500)');

-- DWH fine

/*****************************************************************************************
   DDL FINE: creazione tabella, indici, aggiunta campi di collegamento con altre entita'
******************************************************************************************/


/*****************************************************************************************
   POPOLAMENTO INIZIO: popolamento delle tabelle create
******************************************************************************************/

-- quadro economico inzio
insert into siac_d_quadro_economico_stato
(quadro_economico_stato_code,quadro_economico_stato_desc  ,validita_inizio, ente_proprietario_id  ,login_operazione)
select tmp.code, tmp.descr, to_timestamp('01/01/2019','dd/mm/yyyy'),a.ente_proprietario_id,'admin'
from siac.siac_t_ente_proprietario a
CROSS JOIN (VALUES ('A'  ,'Annullato'), ('V'  ,'Valido'))as tmp (code, descr)
WHERE NOT EXISTS (
	SELECT 1
	FROM siac_d_quadro_economico_stato ta
	WHERE ta.ente_proprietario_id = a.ente_proprietario_id
	AND ta.quadro_economico_stato_code = tmp.code
	AND ta.data_cancellazione IS NULL
);

insert into siac_d_quadro_economico_parte
(
  parte_code
  ,parte_desc
  ,validita_inizio
  ,ente_proprietario_id
  ,login_operazione
)
select tmp.code, tmp.descr, to_timestamp('01/01/2019','dd/mm/yyyy'), a.ente_proprietario_id, 'admin'
from siac_t_ente_proprietario a
cross join (values('A', 'A'), ('B', 'B'), ('C', 'C')) as tmp(code, descr)
where not exists (
select 1
from siac_d_quadro_economico_parte da
where da.ente_proprietario_id = a.ente_proprietario_id
and da.parte_code = tmp.code
and da.data_cancellazione is null
);

-- quadro economico fine

--cronoprogramma inizio

INSERT INTO siac_t_azione (azione_code, azione_desc, azione_tipo_id, gruppo_azioni_id, urlapplicazione, verificauo, validita_inizio, ente_proprietario_id, login_operazione)
SELECT tmp.code, tmp.descr, dat.azione_tipo_id, dga.gruppo_azioni_id, '/../siacbilapp/azioneRichiesta.do', FALSE, to_timestamp('01/01/2013','dd/mm/yyyy'), tep.ente_proprietario_id, 'admin'
FROM siac_d_azione_tipo dat
JOIN siac_t_ente_proprietario tep ON (dat.ente_proprietario_id = tep.ente_proprietario_id)
JOIN siac_d_gruppo_azioni dga ON (dga.ente_proprietario_id = tep.ente_proprietario_id)
CROSS JOIN (VALUES ('OP-GESC078-GestFPVProv', 
	'Gestione FPV non definitivi del cronop', 
	'AZIONE_SECONDARIA', 
	'BIL_ALTRO')) AS tmp(code, descr, tipo, gruppo)
WHERE dga.gruppo_azioni_code = tmp.gruppo
AND dat.azione_tipo_code = tmp.tipo
AND NOT EXISTS (
	SELECT 1
	FROM siac_t_azione ta
	WHERE ta.azione_tipo_id = dat.azione_tipo_id
	AND ta.azione_code = tmp.code
)
ORDER BY tep.ente_proprietario_id, tmp.code;

INSERT INTO siac.siac_d_cronop_stato
(cronop_stato_code, cronop_stato_desc, validita_inizio, ente_proprietario_id, login_operazione)
select tmp.code,tmp.descr,to_timestamp('01/01/2017','dd/mm/yyyy'),a.ente_proprietario_id,'admin'
from siac.siac_t_ente_proprietario a
CROSS JOIN (
	VALUES ('PR', 'Provvisorio')
	) as tmp (code, descr)
WHERE NOT EXISTS (
	SELECT 1
	FROM siac_d_cronop_stato ta
	WHERE ta.ente_proprietario_id = a.ente_proprietario_id
	AND ta.cronop_stato_code = tmp.code
	AND ta.data_cancellazione IS NULL
);

--cronoprogramma fine

--progetto inizio

--popolamento delle nuove tabelle di decodifica
INSERT INTO siac.siac_d_programma_affidamento
(programma_affidamento_code, programma_affidamento_desc, validita_inizio, ente_proprietario_id, login_operazione)
select tmp.code,tmp.descr,to_timestamp('01/01/2017','dd/mm/yyyy'),a.ente_proprietario_id,'admin'
from siac.siac_t_ente_proprietario a
CROSS JOIN (
	VALUES ('URG', 'LAVORI DI SOMMA URGENZA'),
	('AP', 'PROCEDURA APERTA'),
	('NEG-INF', 'PROCEDURA NEGOZIATA PREVIA GARA INFORMALE'),
	('NEG-DIR', 'PROCEDURA NEGOZIATA CON AFFIDAMENTO DIRETTO'),
	('PR', 'PROCEDURA RISTRETTA'),
	('AMM-DIR', 'AFFIDAMENTO IN ECONOMIA IN AMMINISTRAZIONE DIRETTA'),
	('COT-INF', 'AFFIDAMENTO IN ECON. A COTTIMO FIDUCIARIO PREVIA GARA INFORMALE'),
	('COT-DIR', 'AFFIDAMENTO IN ECONOMIA A COTTIMO FIDUCIARIO AFFIDAMENTO DIRETTO'),
	('GAR-ASS', 'ADESIONE A GARE IN FORME ASSOCIATE (ES. CONSIP)'),
	('VAR', 'VARIANTE IN CORSO D''OPERA'),
	('ALTR', 'ALTRO')
	) as tmp (code, descr)
WHERE NOT EXISTS (
	SELECT 1
	FROM siac_d_programma_affidamento ta
	WHERE ta.ente_proprietario_id = a.ente_proprietario_id
	AND ta.programma_affidamento_code = tmp.code
	AND ta.data_cancellazione IS NULL
);

INSERT INTO siac.siac_d_programma_tipo
(programma_tipo_code, programma_tipo_desc, validita_inizio, ente_proprietario_id, login_operazione)
select tmp.code,tmp.descr,to_timestamp('01/01/2017','dd/mm/yyyy'),a.ente_proprietario_id,'admin'
from siac.siac_t_ente_proprietario a
CROSS JOIN (
	VALUES ('P', 'PREVISIONE'),
	('G', 'GESTIONE')
	) as tmp (code, descr)
WHERE NOT EXISTS (
	SELECT 1
	FROM siac_d_programma_tipo ta
	WHERE ta.ente_proprietario_id = a.ente_proprietario_id
	AND ta.programma_tipo_code = tmp.code
	AND ta.data_cancellazione IS NULL
);

--progetto fine

-- fasi_bilancio inizio
insert into fase_bil_d_elaborazione_tipo
(
  fase_bil_elab_tipo_code,
  fase_bil_elab_tipo_desc,
  validita_inizio,
  login_operazione,
  ente_proprietario_id
)
select
'APE_GEST_PROGRAMMI',
'APERTURA BILANCIO : RIBALTAMENTO PROGRAMMI-CRONOP',
now(),
'siac-6255',
ente.ente_proprietario_id
from siac_t_ente_proprietario ente
where not exists
(select 1 from fase_bil_d_elaborazione_tipo  tipo
 where tipo.ente_proprietario_id=ente.ente_proprietario_id
 and   tipo.fase_bil_elab_tipo_code='APE_GEST_PROGRAMMI');
-- fasi_bilancio fine
/*****************************************************************************************
   POPOLAMENTO FINE: popolamento delle tabelle create
******************************************************************************************/

/*****************************************************************************************
   FUNCTION INIZIO : creazione function
******************************************************************************************/
-- fasi bilancio inizio
drop function if exists fnc_fasi_bil_gest_apertura_programmi_popola 
(
  fasebilelabid integer,
  enteproprietarioid integer,
  annobilancio integer,
  tipoapertura varchar,
  loginoperazione varchar,
  dataelaborazione timestamp,
  out codicerisultato integer,
  out messaggiorisultato varchar
);

drop function if exists  fnc_fasi_bil_gest_apertura_programmi_elabora 
(
  fasebilelabid integer,
  enteproprietarioid integer,
  annobilancio integer,
  tipoapertura varchar,
  loginoperazione varchar,
  dataelaborazione timestamp,
  out codicerisultato integer,
  out messaggiorisultato varchar
);

drop function if exists fnc_fasi_bil_gest_apertura_programmi 
(
  annobilancio integer,
  enteproprietarioid integer,
  tipoapertura varchar,
  loginoperazione varchar,
  dataelaborazione timestamp,
  out fasebilelabidret integer,
  out codicerisultato integer,
  out messaggiorisultato varchar
);


drop function if exists fnc_fasi_bil_gest_apertura_acc_elabora
(
  enteProprietarioId     integer,
  annoBilancio           integer,
  faseBilElabId          integer,
  minId                  integer,
  maxId                  integer,
  loginOperazione        varchar,
  dataElaborazione       timestamp,
  out codiceRisultato    integer,
  out messaggioRisultato varchar
);

drop function if exists fnc_fasi_bil_gest_apertura_liq_elabora_imp
(
  enteProprietarioId     integer,
  annoBilancio           integer,
  tipoElab               varchar,
  faseBilElabId          integer,
  minId                  integer,
  maxId                  integer,
  loginOperazione        varchar,
  dataElaborazione       timestamp,
  out codiceRisultato    integer,
  out messaggioRisultato varchar
);

drop function if exists fnc_fasi_bil_gest_apertura_pluri_elabora 
(
  enteproprietarioid integer,
  annobilancio integer,
  fasebilelabid integer,
  tipocapitologest varchar,
  tipomovgest varchar,
  tipomovgestts varchar,
  minid integer,
  maxid integer,
  loginoperazione varchar,
  dataelaborazione timestamp,
  out codicerisultato integer,
  out messaggiorisultato varchar
);



drop function if exists fnc_fasi_bil_prev_apertura_all
(
  annobilancio           integer,
  checkPrev              boolean,
  impostaImporti         boolean,
  stepPartenza           integer,
  enteproprietarioid     integer,
  loginoperazione        varchar,
  dataelaborazione       timestamp,
  out faseBilElabIdRet   integer,
  out codicerisultato    integer,
  out messaggiorisultato varchar
);

drop function if exists fnc_fasi_bil_prev_approva_all
(
  annobilancio           integer,
  faseBilancio           varchar,
  stepPartenza           integer,
  checkGest              boolean,
  impostaImporti         boolean,
  enteproprietarioid     integer,
  loginoperazione        varchar,
  dataelaborazione       timestamp,
  out faseBilElabIdRet   integer,
  out codicerisultato    integer,
  out messaggiorisultato varchar
);


drop function if exists  fnc_fasi_bil_gest_apertura_all
(
  annobilancio           integer,
  faseBilancio           varchar,
  stepPartenza           integer,
  checkGest              boolean,
  impostaImporti         boolean,
  enteproprietarioid     integer,
  loginoperazione        varchar,
  dataelaborazione       timestamp,
  out faseBilElabIdRet   integer,
  out codicerisultato    integer,
  out messaggiorisultato varchar
);




CREATE OR REPLACE FUNCTION fnc_fasi_bil_gest_apertura_programmi_popola (
  fasebilelabid integer,
  enteproprietarioid integer,
  annobilancio integer,
  tipoapertura varchar,
  loginoperazione varchar,
  dataelaborazione timestamp,
  out codicerisultato integer,
  out messaggiorisultato varchar
)
RETURNS record AS
$body$
DECLARE
	strMessaggio VARCHAR(1500):='';
	strMessaggioFinale VARCHAR(1500):='';

	codResult         integer:=null;

    bilancioId        integer:=null;
  	bilancioPrecId    integer:=null;
    periodoId         integer:=null;
    periodoPrecId     integer:=null;
	dataInizioVal     timestamp:=null;


    bilancioElabId                   integer:=null;

    APE_GEST_PROGRAMMI    	    	 CONSTANT varchar:='APE_GEST_PROGRAMMI';

    P_FASE							 CONSTANT varchar:='P';
    G_FASE					    	 CONSTANT varchar:='G';

	STATO_AN 			    	     CONSTANT varchar:='AN';
    numeroProgr                      integer:=null;
    numeroCronop					 integer:=0;
    programmaTipoCode                varchar(10):=null;
BEGIN

   codiceRisultato:=null;
   messaggioRisultato:=null;

   dataInizioVal:= clock_timestamp();


   strmessaggiofinale:='Apertura Programmi-Cronoprogrammi di tipo '||tipoApertura||' per annoBilancio='||annoBilancio::varchar||'. Popolamento.';

   strMessaggio:='Inserimento LOG.';
   codResult:=null;
   insert into fase_bil_t_elaborazione_log
   (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
   )
   values
   (faseBilElabId,strMessaggioFinale||'-INIZIO.',clock_timestamp(),loginOperazione,enteProprietarioId)
   returning fase_bil_elab_log_id into codResult;
   if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
   end if;




   strMessaggio:='Lettura bilancioId e periodoId  per annoBilancio='||annoBilancio::varchar||'.';
   select bil.bil_id , per.periodo_id into strict bilancioId, periodoId
   from siac_t_bil bil, siac_t_periodo per
   where bil.ente_proprietario_id=enteProprietarioId
   and   per.periodo_id=bil.periodo_id
   and   per.anno::INTEGER=annoBilancio
   and   bil.data_cancellazione is null
   and   per.data_cancellazione is null;


   strMessaggio:='Lettura bilancioId e periodoId  per annoBilancio-1='||(annoBilancio-1)::varchar||'.';
   select bil.bil_id , per.periodo_id into strict bilancioPrecId, periodoPrecId
   from siac_t_bil bil, siac_t_periodo per
   where bil.ente_proprietario_id=enteProprietarioId
   and   per.periodo_id=bil.periodo_id
   and   per.anno::INTEGER=annoBilancio-1
   and   bil.data_cancellazione is null
   and   per.data_cancellazione is null;

   --siac_t_programma
   --siac_r_programma_stato
   --siac_r_programma_class
   --siac_r_programma_attr
   --siac_r_programma_atto_amm
   --siac_r_movgest_ts_programma
   --siac_t_cronop
   --siac_r_cronop_stato
   --siac_r_cronop_attr
   --siac_t_cronop_elem
   --siac_r_cronop_elem_class
   --siac_r_cronop_elem_bil_elem
   --siac_t_cronop_elem_det

   if tipoApertura=P_FASE THEN
   	bilancioElabId:=bilancioPrecId;
    programmaTipoCode=G_FASE;
   else
   	bilancioElabId:=bilancioId;
    programmaTipoCode=P_FASE;
   end if;

   strMessaggio:='Inserimento dati programmi in fase_bil_t_programmi.';
   codResult:=null;
   insert into fase_bil_t_elaborazione_log
   (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
   )
   values
   (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
   returning fase_bil_elab_log_id into codResult;
   if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
   end if;


   insert into fase_bil_t_programmi
   (
   	fase_bil_elab_id,
	fase_bil_programma_ape_tipo,
	programma_id,
	programma_tipo_id,
	bil_id,
    login_operazione,
    ente_proprietario_id
   )
   select faseBilElabId,
          tipoApertura,
          prog.programma_id,
          tipo.programma_tipo_id,
          prog.bil_id,
          loginOperazione,
          prog.ente_proprietario_id
   from siac_t_programma prog,siac_d_programma_tipo tipo,
	    siac_r_programma_stato rs,siac_d_programma_stato stato
   where tipo.ente_proprietario_id=enteProprietarioId
   and   tipo.programma_tipo_code=programmaTipoCode
   and   prog.programma_tipo_id=tipo.programma_tipo_id
   and   prog.bil_id=bilancioElabId
   and   rs.programma_id=prog.programma_id
   and   stato.programma_stato_id=rs.programma_stato_id
   and   stato.programma_stato_code!=STATO_AN
   and   prog.data_cancellazione is null
   and   prog.validita_fine is null
   and   rs.data_cancellazione is null
   and   rs.validita_fine is null;
   GET DIAGNOSTICS numeroProgr = ROW_COUNT;

   strMessaggio:='Inserimento dati programmi in fase_bil_t_programmi numero='||numeroProgr::varchar||'.';
   codResult:=null;
   insert into fase_bil_t_elaborazione_log
   (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
   )
   values
   (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
   returning fase_bil_elab_log_id into codResult;
   if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
   end if;

   if coalesce(numeroProgr)!=0 then
    strMessaggio:='Inserimento dati crono-programmi in fase_bil_t_cronop.';
    codResult:=null;
    insert into fase_bil_t_elaborazione_log
    (fase_bil_elab_id,fase_bil_elab_log_operazione,
     validita_inizio, login_operazione, ente_proprietario_id
    )
    values
    (faseBilElabId,strMessaggioFinale||' '||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
    returning fase_bil_elab_log_id into codResult;
    if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
    end if;

    codResult:=null;
    -- modificare qui in base a indicazioni di Floriana con n-insert diverse
    -- previsione quelli con usato_per_fpv=true
    strMessaggio:='Inserimento dati crono-programmi in fase_bil_t_cronop. Previsione scelti come FPV.';
    insert into fase_bil_t_cronop
    (
	    fase_bil_elab_id,
	    fase_bil_cronop_ape_tipo,
		cronop_id,
		programma_id,
	    bil_id,
        login_operazione,
   	    ente_proprietario_id
    )
    select fase.fase_bil_elab_id,
           tipoApertura,
           cronop.cronop_id,
           cronop.programma_id,
           cronop.bil_id,
           loginOperazione,
           cronop.ente_proprietario_id
    from fase_bil_t_programmi fase,siac_t_cronop cronop,siac_r_cronop_stato rs,siac_d_cronop_stato stato
    where fase.fase_bil_elab_id=faseBilElabId
    and   cronop.programma_id=fase.programma_id
    and   cronop.bil_id=bilancioElabId
    and   cronop.usato_per_fpv=true
    and   rs.cronop_id=cronop.cronop_id
    and   stato.cronop_stato_id=rs.cronop_stato_id
    and   stato.cronop_stato_code!=STATO_AN
    and   tipoApertura=p_fase
    and   rs.data_cancellazione is null
    and   rs.validita_fine is null
    and   cronop.data_cancellazione is null
    and   cronop.validita_fine is null;

    GET DIAGNOSTICS codResult = ROW_COUNT;
    if codResult is not null then
	    numeroCronop:=numeroCronop+codResult;
    end if;

    strMessaggio:='Inserimento dati crono-programmi in fase_bil_t_cronop.Previsione scelti come FPV. numero='||codResult::varchar||'.';
    codResult:=null;
    insert into fase_bil_t_elaborazione_log
    (fase_bil_elab_id,fase_bil_elab_log_operazione,
     validita_inizio, login_operazione, ente_proprietario_id
    )
    values
    (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
    returning fase_bil_elab_log_id into codResult;
    if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
    end if;

    -- gestione   quelli con prov definitivo
    codResult:=null;
    strMessaggio:='Inserimento dati crono-programmi in fase_bil_t_cronop. Gestione con provvedimento definitivo.';
    insert into fase_bil_t_cronop
    (
	    fase_bil_elab_id,
	    fase_bil_cronop_ape_tipo,
		cronop_id,
		programma_id,
	    bil_id,
        login_operazione,
   	    ente_proprietario_id
    )
    select fase.fase_bil_elab_id,
           tipoApertura,
           cronop.cronop_id,
           cronop.programma_id,
           cronop.bil_id,
           loginOperazione,
           cronop.ente_proprietario_id
    from fase_bil_t_programmi fase,siac_t_cronop cronop,siac_r_cronop_stato rs,siac_d_cronop_stato stato,
         siac_r_cronop_atto_amm ratto,siac_r_atto_amm_stato rsatto,siac_d_atto_amm_stato statoatto
    where fase.fase_bil_elab_id=faseBilElabId
    and   cronop.programma_id=fase.programma_id
    and   cronop.bil_id=bilancioElabId
    and   rs.cronop_id=cronop.cronop_id
    and   stato.cronop_stato_id=rs.cronop_stato_id
    and   stato.cronop_stato_code!=STATO_AN
    and   ratto.cronop_id=cronop.cronop_id
    and   rsatto.attoamm_id=ratto.attoamm_id
    and   statoatto.attoamm_stato_id=rsatto.attoamm_stato_id
    and   statoatto.attoamm_stato_code='DEFINITIVO'
    and   tipoApertura=g_fase
    and   rs.data_cancellazione is null
    and   rs.validita_fine is null
    and   cronop.data_cancellazione is null
    and   cronop.validita_fine is null
    and   ratto.data_cancellazione is null
    and   ratto.validita_fine is null
    and   rsatto.data_cancellazione is null
    and   rsatto.validita_fine is null;
    GET DIAGNOSTICS codResult = ROW_COUNT;
    if codResult is not null then
	    numeroCronop:=numeroCronop+codResult;
    end if;

    strMessaggio:='Inserimento dati crono-programmi in fase_bil_t_cronop.Gestione con provvedimento definitivo. numero='||codResult::varchar||'.';
    codResult:=null;
    insert into fase_bil_t_elaborazione_log
    (fase_bil_elab_id,fase_bil_elab_log_operazione,
     validita_inizio, login_operazione, ente_proprietario_id
    )
    values
    (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
    returning fase_bil_elab_log_id into codResult;
    if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
    end if;


    -- gestione   quelli con impegno collegato ( se non ne ho gia' ribaltati con prov def )
    codResult:=null;
    strMessaggio:='Inserimento dati crono-programmi in fase_bil_t_cronop. Gestione con impegno collegato.';
    insert into fase_bil_t_cronop
    (
	    fase_bil_elab_id,
	    fase_bil_cronop_ape_tipo,
		cronop_id,
		programma_id,
	    bil_id,
        login_operazione,
   	    ente_proprietario_id
    )
    select fase.fase_bil_elab_id,
           tipoApertura,
           cronop.cronop_id,
           cronop.programma_id,
           cronop.bil_id,
           loginOperazione,
           cronop.ente_proprietario_id
    from fase_bil_t_programmi fase,siac_t_cronop cronop,siac_r_cronop_stato rs,siac_d_cronop_stato stato
    where fase.fase_bil_elab_id=faseBilElabId
    and   cronop.programma_id=fase.programma_id
    and   cronop.bil_id=bilancioElabId
    and   rs.cronop_id=cronop.cronop_id
    and   stato.cronop_stato_id=rs.cronop_stato_id
    and   stato.cronop_stato_code!=STATO_AN
    and   tipoApertura=g_fase
    and   exists
    (
    select 1
    from siac_t_cronop_elem celem,siac_r_movgest_ts_cronop_elem rmov
    where celem.ente_proprietario_id=enteProprietarioId
    and   celem.cronop_id=cronop.cronop_id
    and   rmov.cronop_elem_id=celem.cronop_elem_id
    and   celem.data_cancellazione is null
    and   celem.validita_fine is null
    and   rmov.data_cancellazione is null
    and   rmov.validita_fine is null
    )
    and   not exists
    (
    select 1
    from fase_bil_t_cronop fase1
    where fase1.fase_bil_elab_id=faseBilElabId
    and   fase1.cronop_id=cronop.cronop_id
    and   fase1.data_cancellazione is null
    )
    and   rs.data_cancellazione is null
    and   rs.validita_fine is null
    and   cronop.data_cancellazione is null
    and   cronop.validita_fine is null;
    GET DIAGNOSTICS codResult = ROW_COUNT;
    if codResult is not null then
	    numeroCronop:=numeroCronop+codResult;
    end if;

    strMessaggio:='Inserimento dati crono-programmi in fase_bil_t_cronop.Gestione con impegno collegato. numero='||codResult::varchar||'.';
    codResult:=null;
    insert into fase_bil_t_elaborazione_log
    (fase_bil_elab_id,fase_bil_elab_log_operazione,
     validita_inizio, login_operazione, ente_proprietario_id
    )
    values
    (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
    returning fase_bil_elab_log_id into codResult;
    if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
    end if;

    -- previsione/gestione quelli non annullati ( ultimo cronop aggiornato ) se non ne ho gia' ribaltato prima
	codResult:=null;
    strMessaggio:='Inserimento dati crono-programmi in fase_bil_t_cronop. Ultimo cronop aggiornato.';
    insert into fase_bil_t_cronop
    (
	    fase_bil_elab_id,
	    fase_bil_cronop_ape_tipo,
		cronop_id,
		programma_id,
	    bil_id,
        login_operazione,
   	    ente_proprietario_id
    )
    select fase.fase_bil_elab_id,
           tipoApertura,
           cronop.cronop_id,
           cronop.programma_id,
           cronop.bil_id,
           loginOperazione,
           cronop.ente_proprietario_id
    from fase_bil_t_programmi fase,siac_t_cronop cronop,siac_r_cronop_stato rs,siac_d_cronop_stato stato
    where fase.fase_bil_elab_id=faseBilElabId
    and   cronop.programma_id=fase.programma_id
    and   cronop.bil_id=bilancioElabId
    and   rs.cronop_id=cronop.cronop_id
    and   stato.cronop_stato_id=rs.cronop_stato_id
    and   stato.cronop_stato_code!=STATO_AN
    and   not exists
    (
    select 1
    from fase_bil_t_cronop fase1
    where fase1.fase_bil_elab_id=faseBilElabId
    and   fase1.cronop_id=cronop.cronop_id
    and   fase1.data_cancellazione is null
    )
    and   exists
	(
      select 1
      from siac_t_cronop c1
      where c1.ente_proprietario_id=enteProprietarioId
      and   c1.cronop_id=cronop.cronop_id
      and   c1.data_modifica=
      (
        select max(cmax.data_modifica)
        from siac_t_cronop cmax,siac_r_cronop_stato rsmax,siac_d_cronop_stato stmax
        where cmax.ente_proprietario_id=enteProprietarioId
        and   cmax.programma_id=c1.programma_id
        and   cmax.bil_id=c1.bil_id
        and   rsmax.cronop_id=cmax.cronop_id
        and   stmax.cronop_stato_id=rsmax.cronop_stato_id
        and   stmax.cronop_stato_code!=STATO_AN
        and   cmax.data_cancellazione is null
        and   cmax.validita_fine is null
        and   rsmax.data_cancellazione is null
        and   rsmax.validita_fine is null
      )
      and   c1.data_cancellazione is null
	  and   c1.validita_fine is null
    )
    and   rs.data_cancellazione is null
    and   rs.validita_fine is null
    and   cronop.data_cancellazione is null
    and   cronop.validita_fine is null;
    GET DIAGNOSTICS codResult = ROW_COUNT;
    if codResult is not null then
	    numeroCronop:=numeroCronop+codResult;
    end if;


    strMessaggio:='Inserimento dati crono-programmi in fase_bil_t_cronop.Ultimo cronop aggiornato. numero='||codResult::varchar||'.';
    codResult:=null;
    insert into fase_bil_t_elaborazione_log
    (fase_bil_elab_id,fase_bil_elab_log_operazione,
     validita_inizio, login_operazione, ente_proprietario_id
    )
    values
    (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
    returning fase_bil_elab_log_id into codResult;
    if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
    end if;



    strMessaggio:='Inserimento dati crono-programmi in fase_bil_t_cronop numero='||numeroCronop::varchar||'.';
    codResult:=null;
    insert into fase_bil_t_elaborazione_log
    (fase_bil_elab_id,fase_bil_elab_log_operazione,
     validita_inizio, login_operazione, ente_proprietario_id
    )
    values
    (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
    returning fase_bil_elab_log_id into codResult;
    if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
    end if;
   end if;
   raise notice 'Programmmi inseriti in fase_bil_t_programmi=%',numeroProgr;
   raise notice 'CronoProgrammmi inseriti in fase_bil_t_cronop=%',numeroCronop;


   strMessaggio:='Aggiornamento stato fase bilancio IN-1.';
   update fase_bil_t_elaborazione fase
   set fase_bil_elab_esito='IN-1',
       fase_bil_elab_esito_msg='ELABORAZIONE FASE BILANCIO '||APE_GEST_PROGRAMMI||' IN CORSO IN-1.POPOLA PROGRAMMI-CRONOP.'
   where fase.fase_bil_elab_id=faseBilElabId;


   strMessaggio:='Inserimento LOG.';
   codResult:=null;
   insert into fase_bil_t_elaborazione_log
   (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
   )
   values
   (faseBilElabId,strMessaggioFinale||'-FINE.',clock_timestamp(),loginOperazione,enteProprietarioId)
   returning fase_bil_elab_log_id into codResult;
   if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
   end if;


   if codiceRisultato=0 then
    	messaggioRisultato:=strMessaggioFinale||'- FINE.';
   else messaggioRisultato:=strMessaggioFinale||strMessaggio;
   end if;

   return;

exception
    when RAISE_EXCEPTION THEN
    	raise notice '% % ERRORE : %',strMessaggioFinale,strMessaggio,
	        	substring(upper(SQLERRM) from 1 for 1500);
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'ERRORE :'||' '||substring(upper(SQLERRM) from 1 for 1000) ;
        codiceRisultato:=-1;
        return;

	when no_data_found THEN
		raise notice ' % % Nessun elemento trovato.' ,strMessaggioFinale,strMessaggio;
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'Nessun elemento trovato.' ;
        codiceRisultato:=-1;
		return;
	when others  THEN
		raise notice '% % Errore DB % %',strMessaggioFinale,strMessaggio,SQLSTATE,
	        	substring(upper(SQLERRM) from 1 for 1500);
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'Errore DB '||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 1000) ;
        codiceRisultato:=-1;
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

CREATE OR REPLACE FUNCTION fnc_fasi_bil_gest_apertura_programmi_elabora (
  fasebilelabid integer,
  enteproprietarioid integer,
  annobilancio integer,
  tipoapertura varchar,
  loginoperazione varchar,
  dataelaborazione timestamp,
  out codicerisultato integer,
  out messaggiorisultato varchar
)
RETURNS record AS
$body$
DECLARE
	strMessaggio VARCHAR(1500):='';
	strMessaggioFinale VARCHAR(1500):='';

	codResult         integer:=null;

    bilancioId        integer:=null;
  	bilancioPrecId    integer:=null;
    periodoId         integer:=null;
    periodoPrecId     integer:=null;
	dataInizioVal     timestamp:=null;


    bilancioElabId                   integer:=null;

    APE_GEST_PROGRAMMI    	    	 CONSTANT varchar:='APE_GEST_PROGRAMMI';

    P_FASE							 CONSTANT varchar:='P';
    G_FASE					    	 CONSTANT varchar:='G';

	STATO_AN 			    	     CONSTANT varchar:='AN';
    numeroProgr                      integer:=null;
    numeroCronop					 integer:=null;
BEGIN

   codiceRisultato:=null;
   messaggioRisultato:=null;

   dataInizioVal:= clock_timestamp();


   strmessaggiofinale:='Apertura Programmi-Cronoprogrammi di tipo '||tipoApertura||' per annoBilancio='||annoBilancio::varchar||'. Elaborazione.';


    codResult:=null;
    strMessaggio:='Verifica stato fase_bil_t_elaborazione.';
    select 1  into codResult
    from fase_bil_t_elaborazione fase
    where fase.fase_bil_elab_id=faseBilElabId
    and   fase.fase_bil_elab_esito like 'IN-%'
    and   fase.data_cancellazione is null;

    if codResult is null then
      raise exception ' Nessuna elaborazione in corso [IN-n].';
    end if;


    codResult:=null;
    strMessaggio:='Verifica esistenza programmi da creare in fase_bil_t_programmi.';
    select 1 into codResult
    from fase_bil_t_programmi fase
    where fase.fase_bil_elab_id=faseBilElabId
    and   fase.data_cancellazione is null;

    if codResult is null then
      raise exception ' Nessun  programma da creare.';
    end if;


   strMessaggio:='Inserimento LOG.';
   codResult:=null;
   insert into fase_bil_t_elaborazione_log
   (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
   )
   values
   (faseBilElabId,strMessaggioFinale||'-INIZIO.',clock_timestamp(),loginOperazione,enteProprietarioId)
   returning fase_bil_elab_log_id into codResult;
   if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
   end if;


   strMessaggio:='Lettura bilancioId e periodoId  per annoBilancio='||annoBilancio::varchar||'.';
   select bil.bil_id , per.periodo_id into strict bilancioId, periodoId
   from siac_t_bil bil, siac_t_periodo per
   where bil.ente_proprietario_id=enteProprietarioId
   and   per.periodo_id=bil.periodo_id
   and   per.anno::INTEGER=annoBilancio
   and   bil.data_cancellazione is null
   and   per.data_cancellazione is null;

   strMessaggio:='Lettura bilancioId e periodoId  per annoBilancio-1='||(annoBilancio-1)::varchar||'.';
   select bil.bil_id , per.periodo_id into strict bilancioPrecId, periodoPrecId
   from siac_t_bil bil, siac_t_periodo per
   where bil.ente_proprietario_id=enteProprietarioId
   and   per.periodo_id=bil.periodo_id
   and   per.anno::INTEGER=annoBilancio-1
   and   bil.data_cancellazione is null
   and   per.data_cancellazione is null;



   if tipoApertura=P_FASE THEN
   	bilancioElabId:=bilancioPrecId;
   else
   	bilancioElabId:=bilancioId;
   end if;



   strMessaggio:='Inizio inserimento dati programmi da  fase_bil_t_programmi - inizio.';
   codResult:=null;
   insert into fase_bil_t_elaborazione_log
   (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
   )
   values
   (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
   returning fase_bil_elab_log_id into codResult;
   if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
   end if;

   -- siac_t_programma

   strMessaggio:='Inserimento dati programmi da fase_bil_t_programmi [siac_t_programma].';
   insert into siac_t_programma
   (
   	 programma_code,
	 programma_desc,
     programma_tipo_id,
     bil_id,
     programma_data_gara_indizione,
	 programma_data_gara_aggiudicazione,
	 investimento_in_definizione,
     programma_responsabile_unico,
	 programma_spazi_finanziari,
     programma_affidamento_id,
     login_operazione,
     validita_inizio,
     ente_proprietario_id
   )
   select  progr.programma_code,
           progr.programma_desc,
           tipo.programma_tipo_id,
           bilancioId,
           progr.programma_data_gara_indizione,
		   progr.programma_data_gara_aggiudicazione,
	   	   progr.investimento_in_definizione,
	       progr.programma_responsabile_unico,
	   	   progr.programma_spazi_finanziari,
	       progr.programma_affidamento_id,
           loginOperazione||'@'||fase.fase_bil_programma_id::varchar,
           clock_timestamp(),
           progr.ente_proprietario_id
   from fase_bil_t_programmi fase,siac_t_programma progr,
        siac_d_programma_tipo tipo
   where fase.fase_bil_elab_id=faseBilElabId
   and   progr.programma_id=fase.programma_id
   and   fase.fl_elab='N'
   and   tipo.ente_proprietario_id=progr.ente_proprietario_id
   and   tipo.programma_tipo_code=tipoApertura
   and   fase.data_cancellazione is null;

   GET DIAGNOSTICS numeroProgr = ROW_COUNT;


   strMessaggio:='Numero di programmi inseriti='||coalesce(numeroProgr,0)::varchar||'.';
   raise notice '%', strMessaggio;
   codResult:=null;
   insert into fase_bil_t_elaborazione_log
   (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
   )
   values
   (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
   returning fase_bil_elab_log_id into codResult;
   if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
   end if;

   -- inserimento dati programmi
   if coalesce(numeroProgr,0)!=0 then
    strMessaggio:='Inserimento dati programmi da fase_bil_t_programmi - aggiornamento fase_bil_t_programmi.';
    codResult:=null;
    update fase_bil_t_programmi fase
    set    programma_new_id=progr.programma_id,
           fl_elab='S'
    from   siac_t_programma progr
    where  fase.fase_bil_elab_id=faseBilElabId
    and    fase.fl_elab='N'
    and    progr.ente_proprietario_id=enteProprietarioId
    and    progr.login_operazione like loginOperazione||'@%'
    and    substring(progr.login_operazione from position ('@' in progr.login_operazione)+1)::integer=fase.fase_bil_programma_id
    and    fase.data_cancellazione is null
    and    progr.data_cancellazione is null
    and    progr.validita_fine is null;
    GET DIAGNOSTICS codResult = ROW_COUNT;
    if coalesce(codResult,0)!=coalesce(numeroProgr,0) then
     raise exception ' Il numero di aggiornamenti non corrisponde al numero di programmi inseriti.';
    end if;


    -- siac_r_programma_stato
    strMessaggio:='Inserimento dati programmi da fase_bil_t_programmi [siac_r_programma_stato].';
    codResult:=null;
    insert into siac_r_programma_stato
    (
   	 programma_id,
     programma_stato_id,
     validita_inizio,
     login_operazione,
     ente_proprietario_id
    )
    select fase.programma_new_id,
           rs.programma_stato_id,
           clock_timestamp(),
           loginOperazione,
           fase.ente_proprietario_id
    from fase_bil_t_programmi fase,siac_r_programma_stato rs
    where fase.fase_bil_elab_id=faseBilElabId
    and   rs.programma_id=fase.programma_id
    and   fase.programma_new_id is not null
    and   rs.data_cancellazione is null
    and   rs.validita_fine is null
    and   fase.data_cancellazione is null;
    GET DIAGNOSTICS codResult = ROW_COUNT;
    if coalesce(codResult,0)!=0 and coalesce(numeroProgr,0)=0 then
	   raise exception ' Il numero di stati inseriti non corrisponde al numero di programmi inseriti.';
    end if;
    raise notice '% numIns=%', strMessaggio,codResult;



    -- siac_r_programma_class
    strMessaggio:='Inserimento dati programmi da fase_bil_t_programmi [siac_r_programma_class].';
    codResult:=null;
    insert into siac_r_programma_class
    (
   	 programma_id,
     classif_id,
     validita_inizio,
     login_operazione,
     ente_proprietario_id
    )
    select fase.programma_new_id,
           rc.classif_id,
           clock_timestamp(),
           loginOperazione,
           fase.ente_proprietario_id
    from fase_bil_t_programmi fase,siac_r_programma_class rc,siac_t_class c
    where fase.fase_bil_elab_id=faseBilElabId
    and   rc.programma_id=fase.programma_id
    and   c.classif_id=rc.classif_id
    and   fase.programma_new_id is not null
    and   c.data_cancellazione is null
    and   rc.data_cancellazione is null
    and   rc.validita_fine is null
    and   fase.data_cancellazione is null;

    GET DIAGNOSTICS codResult = ROW_COUNT;
    raise notice '% numIns=%', strMessaggio,codResult;

    strMessaggio:='Inserimento dati programmi da fase_bil_t_programmi [siac_r_programma_attr].';
    -- siac_r_programma_attr
    codResult:=null;
    insert into siac_r_programma_attr
    (
   	 programma_id,
     attr_id,
     boolean,
     testo,
     percentuale,
     numerico,
     tabella_id,
     validita_inizio,
     login_operazione,
     ente_proprietario_id
    )
    select fase.programma_new_id,
   	       rattr.attr_id,
 		   rattr.boolean,
		   rattr.testo,
		   rattr.percentuale,
	       rattr.numerico,
	       rattr.tabella_id,
           clock_timestamp(),
           loginOperazione,
           fase.ente_proprietario_id
    from fase_bil_t_programmi fase,siac_r_programma_attr rattr
    where fase.fase_bil_elab_id=faseBilElabId
    and   rattr.programma_id=fase.programma_id
    and   fase.programma_new_id is not null
    and   rattr.data_cancellazione is null
    and   rattr.validita_fine is null
    and   fase.data_cancellazione is null;

    GET DIAGNOSTICS codResult = ROW_COUNT;
    raise notice '% numIns=%', strMessaggio,codResult;

    strMessaggio:='Inserimento dati programmi da fase_bil_t_programmi [siac_r_programma_atto_amm].';
    -- siac_r_programma_atto_amm
    codResult:=null;
    insert into siac_r_programma_atto_amm
    (
     programma_id,
     attoamm_id,
     validita_inizio,
     login_operazione,
     ente_proprietario_id
    )
    select fase.programma_new_id,
	       ratto.attoamm_id,
           clock_timestamp(),
           loginOperazione,
           fase.ente_proprietario_id
    from fase_bil_t_programmi fase,siac_r_programma_atto_amm ratto
    where fase.fase_bil_elab_id=faseBilElabId
    and   ratto.programma_id=fase.programma_id
    and   fase.programma_new_id is not null
    and   ratto.data_cancellazione is null
    and   ratto.validita_fine is null
    and   fase.data_cancellazione is null;

    GET DIAGNOSTICS codResult = ROW_COUNT;
    raise notice '% numIns=%', strMessaggio,codResult;
  end if;




  strMessaggio:='Inserimento dati programmi da fase_bil_t_programmi - fine .';
  codResult:=null;
  insert into fase_bil_t_elaborazione_log
  (fase_bil_elab_id,fase_bil_elab_log_operazione,
   validita_inizio, login_operazione, ente_proprietario_id
  )
  values
  (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
  returning fase_bil_elab_log_id into codResult;
  if codResult is null then
   	raise exception ' Errore in inserimento LOG.';
  end if;
  -- fine inserimento dati programmi

  strMessaggio:='Inserimento dati cronoprogrammi da fase_bil_t_cronop - verifica dati creare [fase_bil_t_cronop].';

  codResult:=null;
  select 1 into codResult
  from fase_bil_t_programmi fasep, fase_bil_t_cronop fasec
  where fasep.fase_bil_elab_id=faseBilElabId
  and   fasep.programma_new_id is not null
  and   fasep.fl_elab='S'
  and   fasec.fase_bil_elab_id=faseBilElabId
  and   fasec.programma_id=fasep.programma_id
  and   fasec.fl_elab='N'
  and   fasep.data_cancellazione is null
  and   fasec.data_cancellazione is null;

  raise notice '% numdaIns=%', strMessaggio,codResult;


  if codResult is not null then

   	strMessaggio:='Inserimento dati cronoprogrammi da fase_bil_t_cronop da inserire numero='||codResult::varchar||'- inizio.';
	codResult:=null;
	insert into fase_bil_t_elaborazione_log
	(fase_bil_elab_id,fase_bil_elab_log_operazione,
     validita_inizio, login_operazione, ente_proprietario_id
	)
    values
    (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
    returning fase_bil_elab_log_id into codResult;
    if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
    end if;


    strMessaggio:='Inserimento dati cronoprogrammi da fase_bil_t_cronop  [siac_t_cronop].';
    -- siac_t_cronop
   	insert into siac_t_cronop
    (
    	 cronop_code,
	     cronop_desc,
	     programma_id,
	     bil_id,
	     usato_per_fpv,
         cronop_data_approvazione_fattibilita,
	     cronop_data_approvazione_programma_def,
		 cronop_data_approvazione_programma_esec,
		 cronop_data_avvio_procedura,
		 cronop_data_aggiudicazione_lavori,
		 cronop_data_inizio_lavori,
		 cronop_data_fine_lavori,
		 cronop_giorni_durata,
		 cronop_data_collaudo,
	     gestione_quadro_economico,
         validita_inizio,
         login_operazione,
         ente_proprietario_id
    )
    select
         cronop.cronop_code,
	     cronop.cronop_desc,
	     fasep.programma_new_id,
	     bilancioId,
	     cronop.usato_per_fpv,
         cronop.cronop_data_approvazione_fattibilita,
	     cronop.cronop_data_approvazione_programma_def,
		 cronop.cronop_data_approvazione_programma_esec,
		 cronop.cronop_data_avvio_procedura,
		 cronop.cronop_data_aggiudicazione_lavori,
		 cronop.cronop_data_inizio_lavori,
		 cronop.cronop_data_fine_lavori,
		 cronop.cronop_giorni_durata,
		 cronop.cronop_data_collaudo,
	     cronop.gestione_quadro_economico,
         clock_timestamp(),
         loginOperazione||'@'||fasec.fase_bil_cronop_id::varchar,
         cronop.ente_proprietario_id
    from fase_bil_t_programmi fasep, fase_bil_t_cronop fasec,siac_t_cronop cronop
    where fasep.fase_bil_elab_id=faseBilElabId
    and   fasep.programma_new_id is not null
    and   fasep.fl_elab='S'
    and   fasec.fase_bil_elab_id=faseBilElabId
    and   fasec.programma_id=fasep.programma_id
    and   fasec.fl_elab='N'
    and   cronop.cronop_id=fasec.cronop_id
    and   fasep.data_cancellazione is null
    and   fasec.data_cancellazione is null
    and   cronop.data_cancellazione is null
    and   cronop.validita_fine is null;
    GET DIAGNOSTICS numeroCronop = ROW_COUNT;

    if coalesce(numeroCronop,0)!=0 then

     strMessaggio:='Inserimento dati cronoprogrammi da fase_bil_t_cronop inseriti numero='||coalesce(numeroCronop,0)::varchar||'.';
	 codResult:=null;
	 insert into fase_bil_t_elaborazione_log
	 (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
	 )
     values
     (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
     returning fase_bil_elab_log_id into codResult;
     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

     strMessaggio:='Inserimento dati cronoprogrammi da fase_bil_t_cronop  - aggiornamento fase_bil_t_cronop.';
     codResult:=null;
     update fase_bil_t_cronop fase
     set    cronop_new_id=cronop.cronop_id,
           fl_elab='S'
     from   siac_t_cronop cronop
     where  fase.fase_bil_elab_id=faseBilElabId
     and    fase.fl_elab='N'
     and    cronop.ente_proprietario_id=enteProprietarioId
     and    cronop.login_operazione like loginOperazione||'@%'
     and    substring(cronop.login_operazione from position ('@' in cronop.login_operazione)+1)::integer=fase.fase_bil_cronop_id
     and    fase.data_cancellazione is null
     and    cronop.data_cancellazione is null
     and    cronop.validita_fine is null;
     GET DIAGNOSTICS codResult = ROW_COUNT;
     if coalesce(codResult,0)!=coalesce(numeroCronop,0) then
	      raise exception ' Il numero di aggiornamenti non corrisponde al numero di crono-programmi inseriti.';
     end if;

     strMessaggio:='Inserimento dati cronoprogrammi da fase_bil_t_cronop  [siac_r_cronop_stato].';
     -- siac_r_cronop_stato
     codResult:=null;
     insert into siac_r_cronop_stato
     (
    	cronop_id,
        cronop_stato_id,
        validita_inizio,
        login_operazione,
        ente_proprietario_id
     )
     select fase.cronop_new_id,
            rs.cronop_stato_id,
            clock_timestamp(),
            loginOperazione,
            rs.ente_proprietario_id
     from fase_bil_t_cronop fase,siac_r_cronop_stato rs
   	 where  fase.fase_bil_elab_id=faseBilElabId
     and    fase.fl_elab='S'
     and    fase.cronop_new_id is not null
     and    rs.cronop_id=fase.cronop_id
     and    fase.data_cancellazione is null
     and    rs.data_cancellazione is null
     and    rs.validita_fine is null;
     GET DIAGNOSTICS codResult = ROW_COUNT;
     if coalesce(codResult,0)!=coalesce(numeroCronop,0) then
      raise exception ' Il numero di stati inseriti non corrisponde al numero di crono-programmi inseriti.';
     end if;


     strMessaggio:='Inserimento dati cronoprogrammi da fase_bil_t_cronop  [siac_r_cronop_atto_amm].';
     -- siac_r_cronop_atto_amm
     codResult:=null;
     insert into siac_r_cronop_atto_amm
     (
    	cronop_id,
        attoamm_id,
        validita_inizio,
        login_operazione,
        ente_proprietario_id
     )
     select fase.cronop_new_id,
            ratto.attoamm_id,
            clock_timestamp(),
            loginOperazione,
            ratto.ente_proprietario_id
     from fase_bil_t_cronop fase,siac_r_cronop_atto_amm ratto
   	 where  fase.fase_bil_elab_id=faseBilElabId
     and    fase.fl_elab='S'
     and    fase.cronop_new_id is not null
     and    ratto.cronop_id=fase.cronop_id
     and    fase.data_cancellazione is null
     and    ratto.data_cancellazione is null
     and    ratto.validita_fine is null;
     GET DIAGNOSTICS codResult = ROW_COUNT;
/*     if coalesce(codResult,0)!=coalesce(numeroCronop,0) then
      raise exception ' Il numero di stati inseriti non corrisponde al numero di crono-programmi inseriti.';
     end if;*/

     strMessaggio:='Inserimento dati cronoprogrammi da fase_bil_t_cronop  [siac_r_cronop_attr].';

     -- siac_r_cronop_attr
     codResult:=null;
     insert into siac_r_cronop_attr
     (
    	cronop_id,
		attr_id,
	    boolean,
	    testo,
    	percentuale,
	    numerico,
    	tabella_id,
	    validita_inizio,
    	login_operazione,
	    ente_proprietario_id
     )
     select
        fase.cronop_new_id,
        rattr.attr_id,
	    rattr.boolean,
    	rattr.testo,
	    rattr.percentuale,
	    rattr.numerico,
    	rattr.tabella_id,
	    clock_timestamp(),
    	loginOperazione,
	    rattr.ente_proprietario_id
     from fase_bil_t_cronop fase,siac_r_cronop_attr rattr
 	 where  fase.fase_bil_elab_id=faseBilElabId
     and    fase.fl_elab='S'
     and    fase.cronop_new_id is not null
     and    rattr.cronop_id=fase.cronop_id
     and    fase.data_cancellazione is null
     and    rattr.data_cancellazione is null
     and    rattr.validita_fine is null;
     GET DIAGNOSTICS codResult = ROW_COUNT;
     raise notice '% numdaIns=%', strMessaggio,codResult;

     strMessaggio:='Inserimento dati cronoprogrammi da fase_bil_t_cronop  [siac_t_cronop_elem].';
	 codResult:=null;
     -- siac_t_cronop_elem
     insert into siac_t_cronop_elem
     (
	    cronop_elem_code,
	    cronop_elem_code2,
	    cronop_elem_code3,
	    cronop_elem_desc,
	    cronop_elem_desc2,
	    cronop_id,
--	    cronop_elem_id_padre,
        cronop_elem_is_ava_amm,
	    elem_tipo_id,
	    ordine,
	    livello,
   	    login_operazione,
	    validita_inizio,
	    ente_proprietario_id
     )
     select
        celem.cronop_elem_code,
	    celem.cronop_elem_code2,
	    celem.cronop_elem_code3,
	    celem.cronop_elem_desc,
	    celem.cronop_elem_desc2,
        fase.cronop_new_id,
--        cronop_elem_id_padre,
	    celem.cronop_elem_is_ava_amm,
        tiponew.elem_tipo_id,
        celem.ordine,
	    celem.livello,
        loginOperazione||'@'||celem.cronop_elem_id::varchar,
        clock_timestamp(),
        celem.ente_proprietario_id
 	 from fase_bil_t_cronop fase,siac_t_cronop_elem celem,
          siac_d_bil_elem_tipo tipo, siac_d_bil_elem_tipo tiponew
 	 where  fase.fase_bil_elab_id=faseBilElabId
     and    fase.fl_elab='S'
     and    fase.cronop_new_id is not null
     and    celem.cronop_id=fase.cronop_id
     and    tipo.elem_tipo_id=celem.elem_tipo_id
     and    tiponew.ente_proprietario_id=tipo.ente_proprietario_id
     and    (case
              when tipoApertura=P_FASE and tipo.elem_tipo_code='CAP-UG' then tiponew.elem_tipo_code='CAP-UP'
    		  when tipoApertura=P_FASE and tipo.elem_tipo_code='CAP-EG' then tiponew.elem_tipo_code='CAP-EP'
              when tipoApertura=G_FASE and tipo.elem_tipo_code='CAP-UP' then tiponew.elem_tipo_code='CAP-UG'
              when tipoApertura=G_FASE and tipo.elem_tipo_code='CAP-EP' then tiponew.elem_tipo_code='CAP-EG'
            end
            )
     and    fase.data_cancellazione is null
     and    celem.data_cancellazione is null
     and    celem.validita_fine is null;
     GET DIAGNOSTICS codResult = ROW_COUNT;
	 raise notice '% numdaIns=%', strMessaggio,codResult;






     strMessaggio:='Inserimento dati cronoprogrammi da fase_bil_t_cronop  [siac_r_cronop_elem_class].';
	 codResult:=null;
	 -- siac_r_cronop_elem_class
     insert into siac_r_cronop_elem_class
     (
  	  	cronop_elem_id,
	    classif_id,
        validita_inizio,
        login_operazione,
        ente_proprietario_id
     )
     select celem.cronop_elem_id,
            c.classif_id,
            clock_timestamp(),
            loginOperazione,
            c.ente_proprietario_id
     from fase_bil_t_cronop fase,siac_t_cronop_elem celem,siac_r_cronop_elem_class r,siac_t_class c
	 where  fase.fase_bil_elab_id=faseBilElabId
     and    fase.fl_elab='S'
     and    fase.cronop_new_id is not null
     and    celem.cronop_id=fase.cronop_new_id
     and    celem.login_operazione like loginOperazione||'@%'
     and    r.cronop_elem_id=substring(celem.login_operazione from position('@' in celem.login_operazione)+1)::integer
     and    c.classif_id=r.classif_id
     and    c.data_cancellazione is null
     and    r.data_cancellazione is null
     and    r.validita_fine is null
     and    fase.data_cancellazione is null
     and    celem.data_cancellazione is null
     and    celem.validita_fine is null;
     GET DIAGNOSTICS codResult = ROW_COUNT;
	 raise notice '% numdaIns=%', strMessaggio,codResult;

     strMessaggio:='Inserimento dati cronoprogrammi da fase_bil_t_cronop  [siac_r_cronop_elem_bil_elem].';
	 codResult:=null;
     -- siac_r_cronop_elem_bil_elem
     insert into siac_r_cronop_elem_bil_elem
     (
	    cronop_elem_id,
	    elem_id,
        validita_inizio,
        login_operazione,
        ente_proprietario_id
     )
     select celem.cronop_elem_id,
            enew.elem_id,
            clock_timestamp(),
            loginOperazione,
            enew.ente_proprietario_id
     from  fase_bil_t_cronop fase,siac_t_cronop_elem celem,siac_r_cronop_elem_bil_elem r,
           siac_t_bil_elem e,siac_d_bil_elem_tipo tipo,
           siac_t_bil_elem enew,siac_d_bil_elem_tipo tiponew,
           siac_r_bil_elem_stato rs,siac_d_bil_elem_Stato stato
     where  fase.fase_bil_elab_id=faseBilElabId
     and    fase.fl_elab='S'
     and    fase.cronop_new_id is not null
     and    celem.cronop_id=fase.cronop_new_id
     and    celem.login_operazione like loginOperazione||'@%'
     and    r.cronop_elem_id=substring(celem.login_operazione from position('@' in celem.login_operazione)+1)::integer
     and    e.elem_id=r.elem_id
     and    tipo.elem_tipo_id=e.elem_tipo_id
     and    enew.bil_id=bilancioId
     and    enew.elem_code=e.elem_code
     and    enew.elem_code2=e.elem_code2
     and    enew.elem_code3=e.elem_code3
     and    tiponew.elem_tipo_id=enew.elem_tipo_id
     and    (case
              when tipoApertura=P_FASE and tipo.elem_tipo_code='CAP-UG' then tiponew.elem_tipo_code='CAP-UP'
    		  when tipoApertura=P_FASE and tipo.elem_tipo_code='CAP-EG' then tiponew.elem_tipo_code='CAP-EP'
              when tipoApertura=G_FASE and tipo.elem_tipo_code='CAP-UP' then tiponew.elem_tipo_code='CAP-UG'
              when tipoApertura=G_FASE and tipo.elem_tipo_code='CAP-EP' then tiponew.elem_tipo_code='CAP-EG'
            end
            )
     and    rs.elem_id=enew.elem_id
     and    stato.elem_stato_id=rs.elem_stato_id
     and    stato.elem_stato_code!='AN'
     and    r.data_cancellazione is null
     and    r.validita_fine is null
     and    rs.data_cancellazione is null
     and    rs.validita_fine is null
     and    fase.data_cancellazione is null
     and    celem.data_cancellazione is null
     and    celem.validita_fine is null
     and    e.data_cancellazione is null
     and    enew.data_cancellazione is null;
     GET DIAGNOSTICS codResult = ROW_COUNT;
	 raise notice '% numdaIns=%', strMessaggio,codResult;

     strMessaggio:='Inserimento dati cronoprogrammi da fase_bil_t_cronop  [siac_t_cronop_elem_det].';
     codResult:=null;
     -- siac_t_cronop_elem_det
     insert into siac_t_cronop_elem_det
     (
	    cronop_elem_det_desc,
	    cronop_elem_id,
	    cronop_elem_det_importo,
	    elem_det_tipo_id,
	    periodo_id,
	    anno_entrata,
        quadro_economico_id_padre,
	    quadro_economico_id_figlio,
	    quadro_economico_det_importo,
        login_operazione,
        validita_inizio,
        ente_proprietario_id
     )
     select
         det.cronop_elem_det_desc,
	     celem.cronop_elem_id,
	     det.cronop_elem_det_importo,
	     det.elem_det_tipo_id,
	     det.periodo_id,
	     det.anno_entrata,
         det.quadro_economico_id_padre,
	     det.quadro_economico_id_figlio,
	     det.quadro_economico_det_importo,
         loginOperazione,
         clock_timestamp(),
         det.ente_proprietario_id
     from fase_bil_t_cronop fase,siac_t_cronop_elem celem, siac_t_cronop_elem_det det
     where  fase.fase_bil_elab_id=faseBilElabId
     and    fase.fl_elab='S'
     and    fase.cronop_new_id is not null
     and    celem.cronop_id=fase.cronop_new_id
     and    celem.login_operazione like loginOperazione||'@%'
     and    det.cronop_elem_id=substring(celem.login_operazione from position('@' in celem.login_operazione)+1)::integer
     and    det.data_cancellazione is null
     and    det.validita_fine is null
     and    fase.data_cancellazione is null
     and    celem.data_cancellazione is null
     and    celem.validita_fine is null;
     GET DIAGNOSTICS codResult = ROW_COUNT;
     raise notice '% numdaIns=%', strMessaggio,codResult;
   end if;
   strMessaggio:='Inserimento dati cronoprogrammi da fase_bil_t_cronop - fine.';
   codResult:=null;
   insert into fase_bil_t_elaborazione_log
   (fase_bil_elab_id,fase_bil_elab_log_operazione,
    validita_inizio, login_operazione, ente_proprietario_id
   )
   values
   (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
   returning fase_bil_elab_log_id into codResult;
   if codResult is null then
   	raise exception ' Errore in inserimento LOG.';
   end if;

 end if;

 --- inserimento collegamenti tra programma e siac_t_movgest_Ts [siac_r_movgest_ts_programma]
 --- inserimento collegamenti tra cronop    e siac_t_movgest_ts [siac_r_movgest_ts_cronop_elem]
 --  inserimento da effettuare solo per tipoApertura='G'
 --  quindi partendo da movimenti validi e programmi - cronop nuovi, riportare le relazioni da annoBilancioPrec
 --  convertendo gli id da annoPrec a annoBilancio
 -- 06.05.2019 Sofia siac-6255
 if tipoApertura=G_FASE then -- tutto da rivedere
  strMessaggio:='Ribaltamento legame tra movimenti di gestione e programmi-cronop - inizio.';
  codResult:=null;
  insert into fase_bil_t_elaborazione_log
  (fase_bil_elab_id,fase_bil_elab_log_operazione,
    validita_inizio, login_operazione, ente_proprietario_id
  )
  values
  (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
  returning fase_bil_elab_log_id into codResult;
  if codResult is null then
  	raise exception ' Errore in inserimento LOG.';
  end if;

  -- inserimento legami aperti esistenti su impegni/accertamenti residui
  -- siac_r_movgest_ts_programma
  -- residui
  strMessaggio:='Ribaltamento legame tra movimenti di gestione e programmi-cronop - inserimento siac_r_movgest_ts_programma residui.';
  insert into siac_r_movgest_ts_programma
  (
  	movgest_ts_id,
    programma_id,
    validita_inizio,
    login_operazione,
    ente_proprietario_id
  )
  (
    select query.movgest_ts_id,
           query.programma_new_id,
           clock_timestamp(),
           loginOperazione,
           enteProprietarioId
    from
    (
    with
    mov_res_anno as
    (
    select mov.movgest_anno::integer,mov.movgest_numero::INTEGER,
           (case when tipo.movgest_ts_tipo_code='T' then 0 else ts.movgest_ts_code::integer end ) movgest_subnumero,
           mov.movgest_tipo_id,
           ts.movgest_ts_id
    from siac_t_movgest mov,siac_t_movgest_ts ts,siac_r_movgest_ts_stato rs,siac_d_movgest_stato stato,
         siac_d_movgest_Ts_tipo tipo
    where mov.bil_id=bilancioId
    and   mov.movgest_anno::integer<annoBilancio
    and   ts.movgest_id=mov.movgest_id
    and   rs.movgest_ts_id=ts.movgest_ts_id
    and   stato.movgest_stato_id=rs.movgest_stato_id
    and   stato.movgest_stato_code in ('D','N')
    and   tipo.movgest_ts_tipo_id=ts.movgest_ts_tipo_id
    and   mov.data_cancellazione is null
    and   mov.validita_fine is null
    and   ts.data_cancellazione is null
    and   ts.validita_fine is null
    and   rs.data_cancellazione is null
    and   rs.validita_fine is null
    ),
    mov_res_anno_prec as
    (
    select mov.movgest_anno::integer,mov.movgest_numero::INTEGER,
           (case when tipo.movgest_ts_tipo_code='T' then 0 else ts.movgest_ts_code::integer end) movgest_subnumero,
           mov.movgest_tipo_id, r.programma_id
    from siac_t_movgest mov,siac_t_movgest_ts ts,siac_r_movgest_ts_stato rs,siac_d_movgest_stato stato,
         siac_d_movgest_Ts_tipo tipo,siac_r_movgest_ts_programma r
    where mov.bil_id=bilancioPrecId
    and   mov.movgest_anno::integer<annoBilancio
    and   ts.movgest_id=mov.movgest_id
    and   r.movgest_ts_id=ts.movgest_ts_id
    and   rs.movgest_ts_id=ts.movgest_ts_id
    and   stato.movgest_stato_id=rs.movgest_stato_id
    and   stato.movgest_stato_code in ('D','N')
    and   tipo.movgest_ts_tipo_id=ts.movgest_ts_tipo_id
    and   mov.data_cancellazione is null
    and   mov.validita_fine is null
    and   ts.data_cancellazione is null
    and   ts.validita_fine is null
    and   rs.data_cancellazione is null
    and   rs.validita_fine is null
    and   r.data_cancellazione is null
    and   r.validita_fine is null
    ),
    progr as
    (
      select p.programma_id, p.programma_tipo_id, p.programma_code, p.bil_id
      from siac_t_programma p, siac_r_programma_stato rs,siac_d_programma_stato stato, siac_d_programma_tipo tipo
      where stato.ente_proprietario_id=enteProprietarioId
      and   stato.programma_stato_code='VA'
      and   rs.programma_stato_id=stato.programma_stato_id
      and   p.programma_id=rs.programma_id
      and   tipo.programma_tipo_id=p.programma_tipo_id
      and   tipo.programma_tipo_code=G_FASE
      and   rs.data_cancellazione is null
      and   rs.validita_fine is null
      and   p.data_cancellazione is null
      and   p.validita_fine is null
    )
    select mov_res_anno.movgest_ts_id,
           progr_anno.programma_id programma_new_id
    from mov_res_anno,
         mov_res_anno_prec, progr progr_anno, progr progr_anno_prec
    where mov_res_anno.movgest_anno=mov_res_anno_prec.movgest_anno
    and   mov_res_anno.movgest_numero=mov_res_anno_prec.movgest_numero
    and   mov_res_anno.movgest_subnumero=mov_res_anno_prec.movgest_subnumero
    and   mov_res_anno.movgest_tipo_id=mov_res_anno_prec.movgest_tipo_id
    and   progr_anno_prec.programma_id=mov_res_anno_prec.programma_id
    and   progr_anno.bil_id=bilancioId
    and   progr_anno.programma_code=progr_anno_prec.programma_code
    ) query
  );
  GET DIAGNOSTICS codResult = ROW_COUNT;
  raise notice '% siac_r_movgest_ts_programma res.inserimenti =%', strMessaggio,codResult;
  strMessaggio:=strMessaggio||' Inserite num.=%'||coalesce(codResult,0)||' righe.';
  codResult:=null;
  insert into fase_bil_t_elaborazione_log
  (fase_bil_elab_id,fase_bil_elab_log_operazione,
   validita_inizio, login_operazione, ente_proprietario_id
  )
  values
  (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
  returning fase_bil_elab_log_id into codResult;
  if codResult is null then
     raise exception ' Errore in inserimento LOG.';
  end if;

  -- pluriennali
  codResult:=null;
  strMessaggio:='Ribaltamento legame tra movimenti di gestione e programmi-cronop - inserimento siac_r_movgest_ts_programma pluriennali.';
  insert into siac_r_movgest_ts_programma
  (
  	movgest_ts_id,
    programma_id,
    validita_inizio,
    login_operazione,
    ente_proprietario_id
  )
  (
    select query.movgest_ts_id,
           query.programma_new_id,
           clock_timestamp(),
           loginOperazione,
           enteProprietarioId
    from
    (
    with
    mov_pluri_anno as
    (
    select mov.movgest_anno::integer,mov.movgest_numero::INTEGER,
           ( case when tipo.movgest_ts_tipo_code='T' then 0 else ts.movgest_ts_code::integer end) movgest_subnumero,
           mov.movgest_tipo_id,
           ts.movgest_ts_id
    from siac_t_movgest mov,siac_t_movgest_ts ts,siac_r_movgest_ts_stato rs,siac_d_movgest_stato stato,
         siac_d_movgest_Ts_tipo tipo
    where mov.bil_id=bilancioId
    and   mov.movgest_anno::integer>=annoBilancio
    and   ts.movgest_id=mov.movgest_id
    and   rs.movgest_ts_id=ts.movgest_ts_id
    and   stato.movgest_stato_id=rs.movgest_stato_id
    and   stato.movgest_stato_code!='A'
    and   tipo.movgest_ts_tipo_id=ts.movgest_ts_tipo_id
    and   mov.data_cancellazione is null
    and   mov.validita_fine is null
    and   ts.data_cancellazione is null
    and   ts.validita_fine is null
    and   rs.data_cancellazione is null
    and   rs.validita_fine is null
    ),
    mov_pluri_anno_prec as
    (
    select mov.movgest_anno::integer,mov.movgest_numero::INTEGER,
           (case when tipo.movgest_ts_tipo_code='T' then 0 else ts.movgest_ts_code::integer end) movgest_subnumero,
           mov.movgest_tipo_id, r.programma_id
    from siac_t_movgest mov,siac_t_movgest_ts ts,siac_r_movgest_ts_stato rs,siac_d_movgest_stato stato,
         siac_d_movgest_Ts_tipo tipo,siac_r_movgest_ts_programma r
    where mov.bil_id=bilancioPrecId
    and   mov.movgest_anno::integer>=annoBilancio
    and   ts.movgest_id=mov.movgest_id
    and   r.movgest_ts_id=ts.movgest_ts_id
    and   rs.movgest_ts_id=ts.movgest_ts_id
    and   stato.movgest_stato_id=rs.movgest_stato_id
    and   stato.movgest_stato_code!='A'
    and   tipo.movgest_ts_tipo_id=ts.movgest_ts_tipo_id
    and   mov.data_cancellazione is null
    and   mov.validita_fine is null
    and   ts.data_cancellazione is null
    and   ts.validita_fine is null
    and   rs.data_cancellazione is null
    and   rs.validita_fine is null
    and   r.data_cancellazione is null
    and   r.validita_fine is null
    ),
    progr as
    (
      select p.programma_id, p.programma_tipo_id, p.programma_code, p.bil_id
      from siac_t_programma p, siac_r_programma_stato rs,siac_d_programma_stato stato, siac_d_programma_tipo tipo
      where stato.ente_proprietario_id=enteProprietarioId
      and   stato.programma_stato_code='VA'
      and   rs.programma_stato_id=stato.programma_stato_id
      and   p.programma_id=rs.programma_id
      and   tipo.programma_tipo_id=p.programma_tipo_id
      and   tipo.programma_tipo_code=G_FASE
      and   rs.data_cancellazione is null
      and   rs.validita_fine is null
      and   p.data_cancellazione is null
      and   p.validita_fine is null
    )
    select mov_pluri_anno.movgest_ts_id,
           progr_anno.programma_id programma_new_id
    from mov_pluri_anno,
         mov_pluri_anno_prec, progr progr_anno_prec,
         progr progr_anno
    where mov_pluri_anno.movgest_anno=mov_pluri_anno_prec.movgest_anno
    and   mov_pluri_anno.movgest_numero=mov_pluri_anno_prec.movgest_numero
    and   mov_pluri_anno.movgest_subnumero=mov_pluri_anno_prec.movgest_subnumero
    and   mov_pluri_anno.movgest_tipo_id=mov_pluri_anno_prec.movgest_tipo_id
    and   progr_anno_prec.programma_id=mov_pluri_anno_prec.programma_id
    and   progr_anno.bil_id=bilancioId
    and   progr_anno.programma_code=progr_anno_prec.programma_code
    ) query
  );
  GET DIAGNOSTICS codResult = ROW_COUNT;
  raise notice '% siac_r_movgest_ts_programma res.inserimenti =%', strMessaggio,codResult;
  strMessaggio:=strMessaggio||' Inserite num.=%'||coalesce(codResult,0)||' righe.';
  codResult:=null;
  insert into fase_bil_t_elaborazione_log
  (fase_bil_elab_id,fase_bil_elab_log_operazione,
   validita_inizio, login_operazione, ente_proprietario_id
  )
  values
  (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
  returning fase_bil_elab_log_id into codResult;
  if codResult is null then
     raise exception ' Errore in inserimento LOG.';
  end if;


  codResult:=null;
  strMessaggio:='Ribaltamento legame tra impegni e programmi-cronop - inserimento siac_r_movgest_ts_cronop_elem  residui.';
  -- siac_r_movgest_ts_cronop_elem
  insert into siac_r_movgest_ts_cronop_elem
  (
  	movgest_ts_id,
    cronop_id,
    validita_inizio,
    login_operazione,
    ente_proprietario_id
  )
  (
  select query.movgest_ts_id,
         query.cronop_new_id,
         clock_timestamp(),
         loginOperazione,
         enteProprietarioId
  from
  (
    with
    mov_res_anno as
    (
      select mov.movgest_anno::integer,mov.movgest_numero::INTEGER,
             (case when tipo.movgest_ts_tipo_code='T' then 0 else ts.movgest_ts_code::integer end ) movgest_subnumero,
             mov.movgest_tipo_id,
             ts.movgest_ts_id
      from siac_t_movgest mov,siac_d_movgest_tipo tipomov,
           siac_t_movgest_ts ts,siac_r_movgest_ts_stato rs,siac_d_movgest_stato stato,
           siac_d_movgest_Ts_tipo tipo
      where mov.bil_id=bilancioId
      and   tipomov.movgest_tipo_id=mov.movgest_tipo_id
      and   tipomov.movgest_tipo_code='I'
      and   mov.movgest_anno::integer<annoBilancio
      and   ts.movgest_id=mov.movgest_id
      and   rs.movgest_ts_id=ts.movgest_ts_id
      and   stato.movgest_stato_id=rs.movgest_stato_id
      and   stato.movgest_stato_code in ('D','N')
      and   tipo.movgest_ts_tipo_id=ts.movgest_ts_tipo_id
      and   mov.data_cancellazione is null
      and   mov.validita_fine is null
      and   ts.data_cancellazione is null
      and   ts.validita_fine is null
      and   rs.data_cancellazione is null
      and   rs.validita_fine is null
    ),
    mov_res_anno_prec as
    (
      select mov.movgest_anno::integer,mov.movgest_numero::INTEGER,
             (case when tipo.movgest_ts_tipo_code='T' then 0 else ts.movgest_ts_code::integer end)  movgest_subnumero,
             mov.movgest_tipo_id, r.cronop_id
      from siac_t_movgest mov,siac_d_movgest_tipo tipomov,
           siac_t_movgest_ts ts,siac_r_movgest_ts_stato rs,siac_d_movgest_stato stato,
           siac_d_movgest_Ts_tipo tipo,siac_r_movgest_ts_cronop_elem r
      where mov.bil_id=bilancioPrecId
      and   tipomov.movgest_tipo_id=mov.movgest_tipo_id
      and   tipomov.movgest_tipo_code='I'
      and   mov.movgest_anno::integer<annoBilancio
      and   ts.movgest_id=mov.movgest_id
      and   r.movgest_ts_id=ts.movgest_ts_id
      and   r.cronop_elem_id is null
      and   rs.movgest_ts_id=ts.movgest_ts_id
      and   stato.movgest_stato_id=rs.movgest_stato_id
      and   stato.movgest_stato_code in ('D','N')
      and   tipo.movgest_ts_tipo_id=ts.movgest_ts_tipo_id
      and   mov.data_cancellazione is null
      and   mov.validita_fine is null
      and   ts.data_cancellazione is null
      and   ts.validita_fine is null
      and   rs.data_cancellazione is null
      and   rs.validita_fine is null
      and   r.data_cancellazione is null
      and   r.validita_fine is null
    ),
    cronop as
    (
     select  cronop.cronop_id, cronop.bil_id,
             cronop.cronop_code,
             prog.programma_id, prog.programma_code
     from siac_t_cronop cronop,siac_r_cronop_stato rs,siac_d_cronop_stato stato,
          siac_t_programma prog,siac_r_programma_stato rsp,siac_d_programma_stato pstato, siac_d_programma_tipo tipo
   	 where  tipo.ente_proprietario_id=enteProprietarioId
     and    tipo.programma_tipo_code=G_FASE
     and    prog.programma_tipo_id=tipo.programma_tipo_id
     and    cronop.programma_id=prog.programma_id
     and    rs.cronop_id=cronop.cronop_id
     and    stato.cronop_stato_id=rs.cronop_stato_id
     and    stato.cronop_stato_code='VA'
     and    rsp.programma_id=prog.programma_id
     and    pstato.programma_stato_id=rsp.programma_stato_id
     and    pstato.programma_stato_code='VA'
     and    rs.data_cancellazione is null
     and    rs.validita_fine is null
     and    rsp.data_cancellazione is null
     and    rsp.validita_fine is null
     and    prog.data_cancellazione is null
     and    prog.validita_fine is null
     and    cronop.data_cancellazione is null
     and    cronop.validita_fine is null
    )
    select cronop_anno.cronop_id cronop_new_id,
           mov_res_anno.movgest_ts_id
    from mov_res_anno, mov_res_anno_prec, cronop cronop_anno, cronop cronop_anno_prec
    where mov_res_anno.movgest_anno=mov_res_anno_prec.movgest_anno
    and   mov_res_anno.movgest_numero=mov_res_anno_prec.movgest_numero
    and   mov_res_anno.movgest_subnumero=mov_res_anno_prec.movgest_subnumero
    and   cronop_anno_prec.cronop_id=mov_res_anno_prec.cronop_id
    and   cronop_anno.bil_id=bilancioId
    and   cronop_anno.programma_code=cronop_anno_prec.programma_code
    and   cronop_anno.cronop_code=cronop_anno_prec.cronop_code
   ) query
  );
  GET DIAGNOSTICS codResult = ROW_COUNT;
  raise notice '% siac_r_movgest_ts_cronop_elem res.inserimenti =%', strMessaggio,codResult;

  strMessaggio:=strMessaggio||' Inserite num.=%'||coalesce(codResult,0)||' righe.';
  codResult:=null;
  insert into fase_bil_t_elaborazione_log
  (fase_bil_elab_id,fase_bil_elab_log_operazione,
   validita_inizio, login_operazione, ente_proprietario_id
  )
  values
  (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
  returning fase_bil_elab_log_id into codResult;
  if codResult is null then
     raise exception ' Errore in inserimento LOG.';
  end if;


  codResult:=null;
  strMessaggio:='Ribaltamento legame tra impegni e programmi-cronop - inserimento siac_r_movgest_ts_cronop_elem  pluriennali.';
  -- siac_r_movgest_ts_cronop_elem
  insert into siac_r_movgest_ts_cronop_elem
  (
  	movgest_ts_id,
    cronop_id,
    validita_inizio,
    login_operazione,
    ente_proprietario_id
  )
  (
  select query.movgest_ts_id,
         query.cronop_new_id,
         clock_timestamp(),
         loginOperazione,
         enteProprietarioId
  from
  (
    with
    mov_res_anno as
    (
      select mov.movgest_anno::integer,mov.movgest_numero::INTEGER,
             (case when tipo.movgest_ts_tipo_code='T' then 0 else ts.movgest_ts_code::integer end ) movgest_subnumero,
             mov.movgest_tipo_id,
             ts.movgest_ts_id
      from siac_t_movgest mov,siac_d_movgest_tipo tipomov,
           siac_t_movgest_ts ts,siac_r_movgest_ts_stato rs,siac_d_movgest_stato stato,
           siac_d_movgest_Ts_tipo tipo
      where mov.bil_id=bilancioId
      and   tipomov.movgest_tipo_id=mov.movgest_tipo_id
      and   tipomov.movgest_tipo_code='I'
      and   mov.movgest_anno::integer>=annoBilancio
      and   ts.movgest_id=mov.movgest_id
      and   rs.movgest_ts_id=ts.movgest_ts_id
      and   stato.movgest_stato_id=rs.movgest_stato_id
      and   stato.movgest_stato_code!='A'
      and   tipo.movgest_ts_tipo_id=ts.movgest_ts_tipo_id
      and   mov.data_cancellazione is null
      and   mov.validita_fine is null
      and   ts.data_cancellazione is null
      and   ts.validita_fine is null
      and   rs.data_cancellazione is null
      and   rs.validita_fine is null
    ),
    mov_res_anno_prec as
    (
      select mov.movgest_anno::integer,mov.movgest_numero::INTEGER,
             (case when tipo.movgest_ts_tipo_code='T' then 0 else ts.movgest_ts_code::integer end)  movgest_subnumero,
             mov.movgest_tipo_id, r.cronop_id
      from siac_t_movgest mov,siac_d_movgest_tipo tipomov,
           siac_t_movgest_ts ts,siac_r_movgest_ts_stato rs,siac_d_movgest_stato stato,
           siac_d_movgest_Ts_tipo tipo,siac_r_movgest_ts_cronop_elem r
      where mov.bil_id=bilancioPrecId
      and   tipomov.movgest_tipo_id=mov.movgest_tipo_id
      and   tipomov.movgest_tipo_code='I'
      and   mov.movgest_anno::integer>=annoBilancio
      and   ts.movgest_id=mov.movgest_id
      and   r.movgest_ts_id=ts.movgest_ts_id
      and   r.cronop_elem_id is null
      and   rs.movgest_ts_id=ts.movgest_ts_id
      and   stato.movgest_stato_id=rs.movgest_stato_id
      and   stato.movgest_stato_code !='A'
      and   tipo.movgest_ts_tipo_id=ts.movgest_ts_tipo_id
      and   mov.data_cancellazione is null
      and   mov.validita_fine is null
      and   ts.data_cancellazione is null
      and   ts.validita_fine is null
      and   rs.data_cancellazione is null
      and   rs.validita_fine is null
      and   r.data_cancellazione is null
      and   r.validita_fine is null
    ),
    cronop as
    (
     select  cronop.cronop_id, cronop.bil_id,
             cronop.cronop_code,
             prog.programma_id, prog.programma_code
     from siac_t_cronop cronop,siac_r_cronop_stato rs,siac_d_cronop_stato stato,
          siac_t_programma prog,siac_r_programma_stato rsp,siac_d_programma_stato pstato, siac_d_programma_tipo tipo
   	 where  tipo.ente_proprietario_id=enteProprietarioId
     and    tipo.programma_tipo_code=G_FASE
     and    prog.programma_tipo_id=tipo.programma_tipo_id
     and    cronop.programma_id=prog.programma_id
     and    rs.cronop_id=cronop.cronop_id
     and    stato.cronop_stato_id=rs.cronop_stato_id
     and    stato.cronop_stato_code='VA'
     and    rsp.programma_id=prog.programma_id
     and    pstato.programma_stato_id=rsp.programma_stato_id
     and    pstato.programma_stato_code='VA'
     and    rs.data_cancellazione is null
     and    rs.validita_fine is null
     and    rsp.data_cancellazione is null
     and    rsp.validita_fine is null
     and    prog.data_cancellazione is null
     and    prog.validita_fine is null
     and    cronop.data_cancellazione is null
     and    cronop.validita_fine is null
    )
    select cronop_anno.cronop_id cronop_new_id,
           mov_res_anno.movgest_ts_id
    from mov_res_anno, mov_res_anno_prec, cronop cronop_anno_prec, cronop cronop_anno
    where mov_res_anno.movgest_anno=mov_res_anno_prec.movgest_anno
    and   mov_res_anno.movgest_numero=mov_res_anno_prec.movgest_numero
    and   mov_res_anno.movgest_subnumero=mov_res_anno_prec.movgest_subnumero
    and   cronop_anno_prec.cronop_id=mov_res_anno_prec.cronop_id
    and   cronop_anno.bil_id=bilancioId
    and   cronop_anno.programma_code=cronop_anno_prec.programma_code
    and   cronop_anno.cronop_code=cronop_anno_prec.cronop_code
   ) query
  );
  GET DIAGNOSTICS codResult = ROW_COUNT;
  raise notice '% siac_r_movgest_ts_cronop_elem res.inserimenti =%', strMessaggio,codResult;

  strMessaggio:=strMessaggio||' Inserite num.=%'||coalesce(codResult,0)||' righe.';
  codResult:=null;
  insert into fase_bil_t_elaborazione_log
  (fase_bil_elab_id,fase_bil_elab_log_operazione,
   validita_inizio, login_operazione, ente_proprietario_id
  )
  values
  (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
  returning fase_bil_elab_log_id into codResult;
  if codResult is null then
     raise exception ' Errore in inserimento LOG.';
  end if;


  codResult:=null;
  strMessaggio:='Ribaltamento legame tra impegni e programmi-cronop dettaglio - inserimento siac_r_movgest_ts_cronop_elem  residui.';
  -- siac_r_movgest_ts_cronop_elem
  insert into siac_r_movgest_ts_cronop_elem
  (
  	movgest_ts_id,
    cronop_id,
    cronop_elem_id,
    validita_inizio,
    login_operazione,
    ente_proprietario_id
  )
  (
  select query.movgest_ts_id,
  	     query.cronop_new_id,
         query.cronop_elem_new_id,
         clock_timestamp(),
         loginOperazione,
         enteProprietarioId
  from
  (
    with
    mov_res_anno as
    (
      select mov.movgest_anno::integer,mov.movgest_numero::INTEGER,
             (case when tipo.movgest_ts_tipo_code='T' then 0 else ts.movgest_ts_code::integer end ) movgest_subnumero,
             mov.movgest_tipo_id,
             ts.movgest_ts_id
      from siac_t_movgest mov,siac_d_movgest_tipo tipomov,
           siac_t_movgest_ts ts,siac_r_movgest_ts_stato rs,siac_d_movgest_stato stato,
           siac_d_movgest_Ts_tipo tipo
      where mov.bil_id=bilancioId
      and   tipomov.movgest_tipo_id=mov.movgest_tipo_id
      and   tipomov.movgest_tipo_code='I'
      and   mov.movgest_anno::integer<annoBilancio
      and   ts.movgest_id=mov.movgest_id
      and   rs.movgest_ts_id=ts.movgest_ts_id
      and   stato.movgest_stato_id=rs.movgest_stato_id
      and   stato.movgest_stato_code in ('D','N')
      and   tipo.movgest_ts_tipo_id=ts.movgest_ts_tipo_id
      and   mov.data_cancellazione is null
      and   mov.validita_fine is null
      and   ts.data_cancellazione is null
      and   ts.validita_fine is null
      and   rs.data_cancellazione is null
      and   rs.validita_fine is null
    ),
    mov_res_anno_prec as
    (
      select mov.movgest_anno::integer,mov.movgest_numero::INTEGER,
             (case when tipo.movgest_ts_tipo_code='T' then 0 else ts.movgest_ts_code::integer end)  movgest_subnumero,
             mov.movgest_tipo_id, r.cronop_elem_id
      from siac_t_movgest mov,siac_d_movgest_tipo tipomov,
           siac_t_movgest_ts ts,siac_r_movgest_ts_stato rs,siac_d_movgest_stato stato,
           siac_d_movgest_Ts_tipo tipo,siac_r_movgest_ts_cronop_elem r
      where mov.bil_id=bilancioPrecId
      and   tipomov.movgest_tipo_id=mov.movgest_tipo_id
      and   tipomov.movgest_tipo_code='I'
      and   mov.movgest_anno::integer<annoBilancio
      and   ts.movgest_id=mov.movgest_id
      and   r.movgest_ts_id=ts.movgest_ts_id
      and   r.cronop_elem_id is not null
      and   rs.movgest_ts_id=ts.movgest_ts_id
      and   stato.movgest_stato_id=rs.movgest_stato_id
      and   stato.movgest_stato_code in ('D','N')
      and   tipo.movgest_ts_tipo_id=ts.movgest_ts_tipo_id
      and   mov.data_cancellazione is null
      and   mov.validita_fine is null
      and   ts.data_cancellazione is null
      and   ts.validita_fine is null
      and   rs.data_cancellazione is null
      and   rs.validita_fine is null
      and   r.data_cancellazione is null
      and   r.validita_fine is null
    ),
    cronop_elem as
    (
     select  cronop.cronop_id, cronop.bil_id,
             cronop.cronop_code,
             prog.programma_id, prog.programma_code,
             celem.cronop_elem_id,
             coalesce(celem.cronop_elem_code,'')  cronop_elem_code,
             coalesce(celem.cronop_elem_code2,'') cronop_elem_code2,
             coalesce(celem.cronop_elem_code3,'') cronop_elem_code3,
             coalesce(celem.elem_tipo_id,0)       elem_tipo_id,
             coalesce(celem.cronop_elem_desc,'')  cronop_elem_desc,
             coalesce(celem.cronop_elem_desc2,'') cronop_elem_desc2,
             coalesce(det.periodo_id,0)           periodo_id,
             coalesce(det.cronop_elem_det_importo,0) cronop_elem_det_importo,
             coalesce(det.cronop_elem_det_desc,'') cronop_elem_det_desc,
             coalesce(det.anno_entrata,'')        anno_entrata,
             coalesce(det.elem_det_tipo_id,0)     elem_det_tipo_id
     from siac_t_cronop cronop,siac_r_cronop_stato rs,siac_d_cronop_stato stato,
          siac_t_programma prog,siac_r_programma_stato rsp,siac_d_programma_stato pstato, siac_d_programma_tipo tipo,
          siac_t_cronop_elem celem,siac_t_cronop_elem_det det
   	 where  tipo.ente_proprietario_id=enteProprietarioId
     and    tipo.programma_tipo_code=G_FASE
     and    prog.programma_tipo_id=tipo.programma_tipo_id
     and    cronop.programma_id=prog.programma_id
     and    celem.cronop_id=cronop.cronop_id
     and    det.cronop_elem_id=celem.cronop_elem_id
     and    rs.cronop_id=cronop.cronop_id
     and    stato.cronop_stato_id=rs.cronop_stato_id
     and    stato.cronop_stato_code='VA'
     and    rsp.programma_id=prog.programma_id
     and    pstato.programma_stato_id=rsp.programma_stato_id
     and    pstato.programma_stato_code='VA'
     and    rs.data_cancellazione is null
     and    rs.validita_fine is null
     and    rsp.data_cancellazione is null
     and    rsp.validita_fine is null
     and    prog.data_cancellazione is null
     and    prog.validita_fine is null
     and    cronop.data_cancellazione is null
     and    cronop.validita_fine is null
     and    celem.data_cancellazione is null
     and    celem.validita_fine is null
     and    det.data_cancellazione is null
     and    det.validita_fine is null

    )
    select cronop_elem_anno.cronop_elem_id cronop_elem_new_id,
           cronop_elem_anno.cronop_id cronop_new_id,
           mov_res_anno.movgest_ts_id
    from mov_res_anno, mov_res_anno_prec, cronop_elem cronop_elem_anno_prec, cronop_elem cronop_elem_anno
    where mov_res_anno.movgest_anno=mov_res_anno_prec.movgest_anno
    and   mov_res_anno.movgest_numero=mov_res_anno_prec.movgest_numero
    and   mov_res_anno.movgest_subnumero=mov_res_anno_prec.movgest_subnumero
    and   cronop_elem_anno_prec.cronop_elem_id=mov_res_anno_prec.cronop_elem_id
    and   cronop_elem_anno.bil_id=bilancioId
    and   cronop_elem_anno.programma_code=cronop_elem_anno_prec.programma_code
    and   cronop_elem_anno.cronop_code=cronop_elem_anno_prec.cronop_code
    and   cronop_elem_anno.cronop_elem_code=cronop_elem_anno_prec.cronop_elem_code
    and   cronop_elem_anno.cronop_elem_code2=cronop_elem_anno_prec.cronop_elem_code2
    and   cronop_elem_anno.cronop_elem_code3=cronop_elem_anno_prec.cronop_elem_code3
    and   cronop_elem_anno.elem_tipo_id=cronop_elem_anno_prec.elem_tipo_id
    and   cronop_elem_anno.cronop_elem_desc=cronop_elem_anno_prec.cronop_elem_desc
    and   cronop_elem_anno.cronop_elem_desc2=cronop_elem_anno_prec.cronop_elem_desc2
    and   cronop_elem_anno.periodo_id=cronop_elem_anno_prec.periodo_id
    and   cronop_elem_anno.cronop_elem_det_importo=cronop_elem_anno_prec.cronop_elem_det_importo
    and   cronop_elem_anno.cronop_elem_det_desc=cronop_elem_anno_prec.cronop_elem_det_desc
    and   cronop_elem_anno.anno_entrata=cronop_elem_anno_prec.anno_entrata
    and   cronop_elem_anno.elem_det_tipo_id=cronop_elem_anno_prec.elem_det_tipo_id
    and   exists
    (
    	select 1
        from siac_r_cronop_elem_class rc,siac_t_class c,siac_d_class_tipo tipo
        where rc.cronop_elem_id=cronop_elem_anno_prec.cronop_elem_id
        and   c.classif_id=rc.classif_id
        and   tipo.classif_tipo_id=c.classif_tipo_id
        and   exists
        (
        	select 1
            from siac_r_cronop_elem_class rc1,siac_t_class c1
            where rc1.cronop_elem_id=cronop_elem_anno.cronop_elem_id
            and   c1.classif_id=rc1.classif_id
            and   c1.classif_tipo_id=tipo.classif_tipo_id
            and   c1.classif_code=c.classif_code
            and   rc1.data_cancellazione is null
            and   rc1.validita_fine is null
        )
        and   rc.data_cancellazione is null
        and   rc.validita_fine is null
    )
    and not exists
    (
    	select 1
        from siac_r_cronop_elem_class rc,siac_t_class c,siac_d_class_tipo tipo
        where rc.cronop_elem_id=cronop_elem_anno_prec.cronop_elem_id
        and   c.classif_id=rc.classif_id
        and   tipo.classif_tipo_id=c.classif_tipo_id
        and   not exists
        (
        	select 1
            from siac_r_cronop_elem_class rc1,siac_t_class c1
            where rc1.cronop_elem_id=cronop_elem_anno.cronop_elem_id
            and   c1.classif_id=rc1.classif_id
            and   c1.classif_tipo_id=tipo.classif_tipo_id
            and   c1.classif_code=c.classif_code
            and   rc1.data_cancellazione is null
            and   rc1.validita_fine is null
        )
        and   rc.data_cancellazione is null
        and   rc.validita_fine is null
    )
   ) query
  );
  GET DIAGNOSTICS codResult = ROW_COUNT;
  raise notice '% siac_r_movgest_ts_cronop_elem res.inserimenti =%', strMessaggio,codResult;

  strMessaggio:=strMessaggio||' Inserite num.=%'||coalesce(codResult,0)||' righe.';
  codResult:=null;
  insert into fase_bil_t_elaborazione_log
  (fase_bil_elab_id,fase_bil_elab_log_operazione,
   validita_inizio, login_operazione, ente_proprietario_id
  )
  values
  (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
  returning fase_bil_elab_log_id into codResult;
  if codResult is null then
     raise exception ' Errore in inserimento LOG.';
  end if;

  codResult:=null;
  strMessaggio:='Ribaltamento legame tra impegni e programmi-cronop dettaglio - inserimento siac_r_movgest_ts_cronop_elem  pluriennali.';
  -- siac_r_movgest_ts_cronop_elem
  insert into siac_r_movgest_ts_cronop_elem
  (
  	movgest_ts_id,
    cronop_id,
    cronop_elem_id,
    validita_inizio,
    login_operazione,
    ente_proprietario_id
  )
  (
  select query.movgest_ts_id,
  	     query.cronop_new_id,
         query.cronop_elem_new_id,
         clock_timestamp(),
         loginOperazione,
         enteProprietarioId
  from
  (
    with
    mov_res_anno as
    (
      select mov.movgest_anno::integer,mov.movgest_numero::INTEGER,
             (case when tipo.movgest_ts_tipo_code='T' then 0 else ts.movgest_ts_code::integer end ) movgest_subnumero,
             mov.movgest_tipo_id,
             ts.movgest_ts_id
      from siac_t_movgest mov,siac_d_movgest_tipo tipomov,
           siac_t_movgest_ts ts,siac_r_movgest_ts_stato rs,siac_d_movgest_stato stato,
           siac_d_movgest_Ts_tipo tipo
      where mov.bil_id=bilancioId
      and   tipomov.movgest_tipo_id=mov.movgest_tipo_id
      and   tipomov.movgest_tipo_code='I'
      and   mov.movgest_anno::integer>=annoBilancio
      and   ts.movgest_id=mov.movgest_id
      and   rs.movgest_ts_id=ts.movgest_ts_id
      and   stato.movgest_stato_id=rs.movgest_stato_id
      and   stato.movgest_stato_code!='A'
      and   tipo.movgest_ts_tipo_id=ts.movgest_ts_tipo_id
      and   mov.data_cancellazione is null
      and   mov.validita_fine is null
      and   ts.data_cancellazione is null
      and   ts.validita_fine is null
      and   rs.data_cancellazione is null
      and   rs.validita_fine is null
    ),
    mov_res_anno_prec as
    (
      select mov.movgest_anno::integer,mov.movgest_numero::INTEGER,
             (case when tipo.movgest_ts_tipo_code='T' then 0 else ts.movgest_ts_code::integer end)  movgest_subnumero,
             mov.movgest_tipo_id, r.cronop_elem_id
      from siac_t_movgest mov,siac_d_movgest_tipo tipomov,
           siac_t_movgest_ts ts,siac_r_movgest_ts_stato rs,siac_d_movgest_stato stato,
           siac_d_movgest_Ts_tipo tipo,siac_r_movgest_ts_cronop_elem r
      where mov.bil_id=bilancioPrecId
      and   tipomov.movgest_tipo_id=mov.movgest_tipo_id
      and   tipomov.movgest_tipo_code='I'
      and   mov.movgest_anno::integer>=annoBilancio
      and   ts.movgest_id=mov.movgest_id
      and   r.movgest_ts_id=ts.movgest_ts_id
      and   r.cronop_elem_id is not null
      and   rs.movgest_ts_id=ts.movgest_ts_id
      and   stato.movgest_stato_id=rs.movgest_stato_id
      and   stato.movgest_stato_code!='A'
      and   tipo.movgest_ts_tipo_id=ts.movgest_ts_tipo_id
      and   mov.data_cancellazione is null
      and   mov.validita_fine is null
      and   ts.data_cancellazione is null
      and   ts.validita_fine is null
      and   rs.data_cancellazione is null
      and   rs.validita_fine is null
      and   r.data_cancellazione is null
      and   r.validita_fine is null
    ),
    cronop_elem as
    (
     select  cronop.cronop_id, cronop.bil_id,
             cronop.cronop_code,
             prog.programma_id, prog.programma_code,
             celem.cronop_elem_id,
             coalesce(celem.cronop_elem_code,'')  cronop_elem_code,
             coalesce(celem.cronop_elem_code2,'') cronop_elem_code2,
             coalesce(celem.cronop_elem_code3,'') cronop_elem_code3,
             coalesce(celem.elem_tipo_id,0)      elem_tipo_id,
             coalesce(celem.cronop_elem_desc,'')  cronop_elem_desc,
             coalesce(celem.cronop_elem_desc2,'')  cronop_elem_desc2,
             coalesce(det.periodo_id,0)           periodo_id,
             coalesce(det.cronop_elem_det_importo,0) cronop_elem_det_importo,
             coalesce(det.cronop_elem_det_desc,'') cronop_elem_det_desc,
             coalesce(det.anno_entrata,'')        anno_entrata,
             coalesce(det.elem_det_tipo_id,0)     elem_det_tipo_id
     from siac_t_cronop cronop,siac_r_cronop_stato rs,siac_d_cronop_stato stato,
          siac_t_programma prog,siac_r_programma_stato rsp,siac_d_programma_stato pstato, siac_d_programma_tipo tipo,
          siac_t_cronop_elem celem,siac_t_cronop_elem_det det
   	 where  tipo.ente_proprietario_id=enteProprietarioId
     and    tipo.programma_tipo_code=G_FASE
     and    prog.programma_tipo_id=tipo.programma_tipo_id
     and    cronop.programma_id=prog.programma_id
     and    celem.cronop_id=cronop.cronop_id
     and    det.cronop_elem_id=celem.cronop_elem_id
     and    rs.cronop_id=cronop.cronop_id
     and    stato.cronop_stato_id=rs.cronop_stato_id
     and    stato.cronop_stato_code='VA'
     and    rsp.programma_id=prog.programma_id
     and    pstato.programma_stato_id=rsp.programma_stato_id
     and    pstato.programma_stato_code='VA'
     and    rs.data_cancellazione is null
     and    rs.validita_fine is null
     and    rsp.data_cancellazione is null
     and    rsp.validita_fine is null
     and    prog.data_cancellazione is null
     and    prog.validita_fine is null
     and    cronop.data_cancellazione is null
     and    cronop.validita_fine is null
     and    celem.data_cancellazione is null
     and    celem.validita_fine is null
     and    det.data_cancellazione is null
     and    det.validita_fine is null

    )
    select cronop_elem_anno.cronop_elem_id cronop_elem_new_id,
           cronop_elem_anno.cronop_id cronop_new_id,
           mov_res_anno.movgest_ts_id
    from mov_res_anno, mov_res_anno_prec, cronop_elem cronop_elem_anno_prec, cronop_elem cronop_elem_anno
    where mov_res_anno.movgest_anno=mov_res_anno_prec.movgest_anno
    and   mov_res_anno.movgest_numero=mov_res_anno_prec.movgest_numero
    and   mov_res_anno.movgest_subnumero=mov_res_anno_prec.movgest_subnumero
    and   cronop_elem_anno_prec.cronop_elem_id=mov_res_anno_prec.cronop_elem_id
    and   cronop_elem_anno.bil_id=bilancioId
    and   cronop_elem_anno.programma_code=cronop_elem_anno_prec.programma_code
    and   cronop_elem_anno.cronop_code=cronop_elem_anno_prec.cronop_code
    and   cronop_elem_anno.cronop_elem_code=cronop_elem_anno_prec.cronop_elem_code
    and   cronop_elem_anno.cronop_elem_code2=cronop_elem_anno_prec.cronop_elem_code2
    and   cronop_elem_anno.cronop_elem_code3=cronop_elem_anno_prec.cronop_elem_code3
    and   cronop_elem_anno.elem_tipo_id=cronop_elem_anno_prec.elem_tipo_id
    and   cronop_elem_anno.cronop_elem_desc=cronop_elem_anno_prec.cronop_elem_desc
    and   cronop_elem_anno.cronop_elem_desc2=cronop_elem_anno_prec.cronop_elem_desc2
    and   cronop_elem_anno.periodo_id=cronop_elem_anno_prec.periodo_id
    and   cronop_elem_anno.cronop_elem_det_importo=cronop_elem_anno_prec.cronop_elem_det_importo
    and   cronop_elem_anno.cronop_elem_det_desc=cronop_elem_anno_prec.cronop_elem_det_desc
    and   cronop_elem_anno.anno_entrata=cronop_elem_anno_prec.anno_entrata
    and   cronop_elem_anno.elem_det_tipo_id=cronop_elem_anno_prec.elem_det_tipo_id
    and   exists
    (
    	select 1
        from siac_r_cronop_elem_class rc,siac_t_class c
        where rc.cronop_elem_id=cronop_elem_anno_prec.cronop_elem_id
        and   c.classif_id=rc.classif_id
        and   exists
        (
        	select 1
            from siac_r_cronop_elem_class rc1,siac_t_class c1
            where rc1.cronop_elem_id=cronop_elem_anno.cronop_elem_id
            and   c1.classif_id=rc1.classif_id
            and   c1.classif_tipo_id=c.classif_tipo_id
            and   c1.classif_code=c.classif_code
            and   rc1.data_cancellazione is null
            and   rc1.validita_fine is null
        )
        and   rc.data_cancellazione is null
        and   rc.validita_fine is null
    )
    and not exists
    (
    	select 1
        from siac_r_cronop_elem_class rc,siac_t_class c
        where rc.cronop_elem_id=cronop_elem_anno_prec.cronop_elem_id
        and   c.classif_id=rc.classif_id
        and   not exists
        (
        	select 1
            from siac_r_cronop_elem_class rc1,siac_t_class c1
            where rc1.cronop_elem_id=cronop_elem_anno.cronop_elem_id
            and   c1.classif_id=rc1.classif_id
            and   c1.classif_tipo_id=c.classif_tipo_id
            and   c1.classif_code=c.classif_code
            and   rc1.data_cancellazione is null
            and   rc1.validita_fine is null
        )
        and   rc.data_cancellazione is null
        and   rc.validita_fine is null
    )
   ) query
  );
  GET DIAGNOSTICS codResult = ROW_COUNT;
  raise notice '% siac_r_movgest_ts_cronop_elem res.inserimenti =%', strMessaggio,codResult;

  strMessaggio:=strMessaggio||' Inserite num.=%'||coalesce(codResult,0)||' righe.';
  codResult:=null;
  insert into fase_bil_t_elaborazione_log
  (fase_bil_elab_id,fase_bil_elab_log_operazione,
   validita_inizio, login_operazione, ente_proprietario_id
  )
  values
  (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
  returning fase_bil_elab_log_id into codResult;
  if codResult is null then
     raise exception ' Errore in inserimento LOG.';
  end if;

  strMessaggio:='Ribaltamento legame tra movimenti di gestione e programmi-cronop - fine.';
  codResult:=null;
  insert into fase_bil_t_elaborazione_log
  (fase_bil_elab_id,fase_bil_elab_log_operazione,
    validita_inizio, login_operazione, ente_proprietario_id
  )
  values
  (faseBilElabId,strMessaggioFinale||'-'||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
  returning fase_bil_elab_log_id into codResult;
  if codResult is null then
  	raise exception ' Errore in inserimento LOG.';
  end if;
 end if;
 -- 06.05.2019 Sofia siac-6255



 strMessaggio:='Inserimento LOG.';
 codResult:=null;
 insert into fase_bil_t_elaborazione_log
 (fase_bil_elab_id,fase_bil_elab_log_operazione,
  validita_inizio, login_operazione, ente_proprietario_id
 )
 values
 (faseBilElabId,strMessaggioFinale||'-FINE.',clock_timestamp(),loginOperazione,enteProprietarioId)
  returning fase_bil_elab_log_id into codResult;
 if codResult is null then
  	raise exception ' Errore in inserimento LOG.';
 end if;


 if codiceRisultato=0 then
   	messaggioRisultato:=strMessaggioFinale||'- FINE.';
 else messaggioRisultato:=strMessaggioFinale||strMessaggio;
 end if;

 return;

exception
    when RAISE_EXCEPTION THEN
    	raise notice '% % ERRORE : %',strMessaggioFinale,strMessaggio,
	        	substring(upper(SQLERRM) from 1 for 1500);
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'ERRORE :'||' '||substring(upper(SQLERRM) from 1 for 1000) ;
        codiceRisultato:=-1;
        return;

	when no_data_found THEN
		raise notice ' % % Nessun elemento trovato.' ,strMessaggioFinale,strMessaggio;
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'Nessun elemento trovato.' ;
        codiceRisultato:=-1;
		return;
	when others  THEN
		raise notice '% % Errore DB % %',strMessaggioFinale,strMessaggio,SQLSTATE,
	        	substring(upper(SQLERRM) from 1 for 1500);
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'Errore DB '||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 1000) ;
        codiceRisultato:=-1;
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

CREATE OR REPLACE FUNCTION fnc_fasi_bil_gest_apertura_programmi (
  annobilancio integer,
  enteproprietarioid integer,
  tipoapertura varchar,
  loginoperazione varchar,
  dataelaborazione timestamp,
  out fasebilelabidret integer,
  out codicerisultato integer,
  out messaggiorisultato varchar
)
RETURNS record AS
$body$
  DECLARE
   strMessaggio       			VARCHAR(1500)	:='';
   strMessaggiofinale 			VARCHAR(1500)	:='';
   codResult              		INTEGER  		:=NULL;
   dataInizioVal 				timestamp		:=NULL;
   faseBilElabId 		        integer:=null;
   bilancioId                   integer:=null;
   periodoId                    integer:=null;

   faseOp                       varchar(50):=null;
   strRec record;

   APE_GEST_PROGRAMMI    	    CONSTANT varchar:='APE_GEST_PROGRAMMI';
   P_FASE						CONSTANT varchar:='P';
   G_FASE					    CONSTANT varchar:='G';
  BEGIN

   messaggioRisultato:='';
   codicerisultato:=0;
   faseBilElabIdRet:=0;
   dataInizioVal:= clock_timestamp();

   strmessaggiofinale:='Apertura Programmi-Cronoprogrammi di tipo '||tipoApertura||' per annoBilancio='||annoBilancio::varchar||'.';

   strMessaggio:='Verifica esistenza fase elaborazione '||APE_GEST_PROGRAMMI||' IN CORSO.';
   select 1 into codResult
   from fase_bil_t_elaborazione fase, fase_bil_d_elaborazione_tipo tipo
   where tipo.ente_proprietario_id=enteProprietarioId
   and   tipo.fase_bil_elab_tipo_code=APE_GEST_PROGRAMMI
   and   fase.fase_bil_elab_tipo_id=tipo.fase_bil_elab_tipo_id
   and   fase.fase_bil_elab_esito like 'IN%'
   and   fase.data_cancellazione is null
   and   fase.validita_fine is null
   and   tipo.data_cancellazione is null
   and   tipo.validita_fine is null;
   if codResult is not null then
   	raise exception ' Esistenza fase in corso.';
   end if;


    -- inserimento fase_bil_t_elaborazione
	strMessaggio:='Inserimento fase elaborazione [fase_bil_t_elaborazione].';
    insert into fase_bil_t_elaborazione
    (fase_bil_elab_esito, fase_bil_elab_esito_msg,
     fase_bil_elab_tipo_id,
     ente_proprietario_id,validita_inizio, login_operazione)
    (select 'IN','ELABORAZIONE FASE BILANCIO '||APE_GEST_PROGRAMMI||' IN CORSO.',
            tipo.fase_bil_elab_tipo_id,enteProprietarioId, dataInizioVal, loginOperazione
     from fase_bil_d_elaborazione_tipo tipo
     where tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.fase_bil_elab_tipo_code=APE_GEST_PROGRAMMI
     and   tipo.data_cancellazione is null
     and   tipo.validita_fine is null)
     returning fase_bil_elab_id into faseBilElabId;

     if faseBilElabId is null then
     	raise exception ' Inserimento non effettuato.';
     end if;

	 strMessaggio:='Inserimento LOG.';
 	 codResult:=null;
	 insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggioFinale||' INIZIO.',clock_timestamp(),loginOperazione,enteProprietarioId)
     returning fase_bil_elab_log_id into codResult;
     if codResult is null then
    	raise exception ' Errore in inserimento LOG.';
     end if;

     strMessaggio:='Lettura bilancioId e periodoId  per annoBilancio='||annoBilancio::varchar||'.';
     select bil.bil_id , per.periodo_id into strict bilancioId, periodoId
     from siac_t_bil bil, siac_t_periodo per
     where bil.ente_proprietario_id=enteProprietarioId
     and   per.periodo_id=bil.periodo_id
     and   per.anno::INTEGER=annoBilancio
     and   bil.data_cancellazione is null
     and   per.data_cancellazione is null;


	 strMessaggio:='Verifica fase di bilancio di corrente.';
	 select fase.fase_operativa_code into faseOp
     from siac_r_bil_fase_operativa r, siac_d_fase_operativa fase
     where r.bil_id=bilancioId
     and   fase.fase_operativa_id=r.fase_operativa_id
     and   r.data_cancellazione is null
     and   r.validita_fine is null;
     if faseOp is null or faseOp not in (P_FASE,G_FASE) then
      	raise exception ' Il bilancio deve essere in fase % o %.',P_FASE,G_FASE;
     end if;

     strMessaggio:='Verifica coerenza tipo di apertura programmi-fase di bilancio di corrente.';
	 if tipoApertura!=faseOp then
     	raise exception ' Tipo di apertura % non consentita in fase di bilancio %.', tipoApertura,faseOp;
     end if;

 	 strMessaggio:='Inizio Popola programmi-cronop da elaborare.';
     select * into strRec
     from fnc_fasi_bil_gest_apertura_programmi_popola
     (
      faseBilElabId,
      enteproprietarioid,
      annobilancio,
      tipoApertura,
      loginoperazione,
	  dataelaborazione
     );
     if strRec.codiceRisultato!=0 then
        strMessaggio:=strRec.messaggioRisultato;
        codiceRisultato:=strRec.codiceRisultato;
     end if;

     if codiceRisultato=0 then
	     strMessaggio:='Inizio Elabora programmi-cronop.';
    	 select * into strRec
	     from fnc_fasi_bil_gest_apertura_programmi_elabora
    	 (
	      faseBilElabId,
    	  enteproprietarioid,
	      annobilancio,
          tipoApertura,
          loginoperazione,
          dataelaborazione
         );
         if strRec.codiceRisultato!=0 then
            strMessaggio:=strRec.messaggioRisultato;
            codiceRisultato:=strRec.codiceRisultato;
         end if;

     end if;


     if codiceRisultato=0 and faseBilElabId is not null then
	   strMessaggio:=' Chiusura fase_bil_t_elaborazione OK.';
       insert into fase_bil_t_elaborazione_log
	   (fase_bil_elab_id,fase_bil_elab_log_operazione,
        validita_inizio, login_operazione, ente_proprietario_id
	   )
	   values
       (faseBilElabId,strMessaggioFinale||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
	   returning fase_bil_elab_log_id into codResult;

	   if codResult is null then
    	 	raise exception ' Errore in inserimento LOG.';
	   end if;

       update fase_bil_t_elaborazione
       set fase_bil_elab_esito='OK',
           fase_bil_elab_esito_msg='ELABORAZIONE FASE BILANCIO '||APE_GEST_PROGRAMMI||'TERMINATA CON SUCCESSO.'
       where fase_bil_elab_id=faseBilElabId;

       insert into fase_bil_t_elaborazione_log
	   (fase_bil_elab_id,fase_bil_elab_log_operazione,
        validita_inizio, login_operazione, ente_proprietario_id
	   )
	   values
       (faseBilElabId,strMessaggioFinale||' FINE.',clock_timestamp(),loginOperazione,enteProprietarioId)
	   returning fase_bil_elab_log_id into codResult;

	   if codResult is null then
    	 	raise exception ' Errore in inserimento LOG.';
	   end if;

	 else
      if codiceRisultato!=0 and faseBilElabId is not null then
	   strMessaggio:=strMessaggio||' Chiusura fase_bil_t_elaborazione KO.';
       insert into fase_bil_t_elaborazione_log
	   (fase_bil_elab_id,fase_bil_elab_log_operazione,
        validita_inizio, login_operazione, ente_proprietario_id
	   )
	   values
       (faseBilElabId,strMessaggioFinale||strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
	   returning fase_bil_elab_log_id into codResult;

	   if codResult is null then
    	 	raise exception ' Errore in inserimento LOG.';
	   end if;

       update fase_bil_t_elaborazione
       set fase_bil_elab_esito='KO',
           fase_bil_elab_esito_msg='ELABORAZIONE FASE BILANCIO '||APE_GEST_PROGRAMMI||'TERMINATA CON ERRORE.'||upper (strMessaggio)
       where fase_bil_elab_id=faseBilElabId;
      end if;

     end if;
	 if  codiceRisultato=0 then
	  	 messaggioRisultato := strMessaggioFinale||' Operazione terminata correttamente';
	 else
  	  	 messaggioRisultato := strMessaggioFinale||strMessaggio;
     end if;

	 RETURN;
EXCEPTION
  WHEN raise_exception THEN
    RAISE notice '% % Errore DB % %',strmessaggiofinale,strmessaggio,SQLSTATE, substring(upper(SQLERRM) FROM 1 FOR 1500);
    messaggiorisultato:=strmessaggiofinale||strmessaggio||'ERRORE: . '||SQLSTATE||' '||substring(upper(SQLERRM) FROM 1 FOR 1500) ;
    codicerisultato:=-1;
    RETURN;
  WHEN no_data_found THEN
    RAISE notice '% % Errore DB % %',strmessaggiofinale,strmessaggio,SQLSTATE, substring(upper(SQLERRM) FROM 1 FOR 1500);
    messaggiorisultato:=strmessaggiofinale||strmessaggio||'Nessun elemento trovato. '||SQLSTATE||' '||substring(upper(SQLERRM) FROM 1 FOR 1500) ;
    codicerisultato:=-1;
    RETURN;
  WHEN OTHERS THEN
    RAISE notice '% % Errore DB % %',strmessaggiofinale,strmessaggio,SQLSTATE, substring(upper(SQLERRM) FROM 1 FOR 1500);
    messaggiorisultato:=strmessaggiofinale||strmessaggio||'Errore OTHERS DB '||SQLSTATE||' '||substring(upper(SQLERRM) FROM 1 FOR 1500) ;
    codicerisultato:=-1;
    RETURN;
  END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;


CREATE OR REPLACE FUNCTION fnc_fasi_bil_gest_apertura_acc_elabora(
  enteProprietarioId     integer,
  annoBilancio           integer,
  faseBilElabId          integer,
  minId                  integer,
  maxId                  integer,
  loginOperazione        varchar,
  dataElaborazione       timestamp,
  out codiceRisultato    integer,
  out messaggioRisultato varchar
)
RETURNS record AS
$body$
DECLARE
	strMessaggio VARCHAR(1500):='';
    strMessaggioTemp VARCHAR(1000):='';
	strMessaggioFinale VARCHAR(1500):='';

	codResult         integer:=null;

	tipoMovGestId      integer:=null;
    movGestTsTipoId    integer:=null;
    tipoMovGestTsSId   integer:=null;
    tipoMovGestTsTId   integer:=null;
    tipoCapitoloGestId integer:=null;

    bilancioId        integer:=null;
  	bilancioPrecId    integer:=null;
    periodoId         integer:=null;
    periodoPrecId     integer:=null;
	dataInizioVal     timestamp:=null;
    dataEmissione     timestamp:=null;
	movGestIdRet      integer:=null;
    movGestTsIdRet    integer:=null;
    elemNewId         integer:=null;
	movGestTsTipoTId  integer:=null;
	movGestTsTipoSId  integer:=null;
	movGestTsTipoCode VARCHAR(10):=null;
    movGestStatoAId   integer:=null;
	movgGestTsIdPadre integer:=null;

    movGestRec        record;

    -- tipo periodo annuale
    SY_PER_TIPO       CONSTANT varchar:='SY';
    -- tipo anno ordinario annuale
	BIL_ORD_TIPO      CONSTANT varchar:='BIL_ORD';


	ACC_MOVGEST_TIPO CONSTANT varchar:='A';
  	IMP_MOVGEST_TIPO CONSTANT varchar:='I';

	CAP_UG_TIPO      CONSTANT varchar:='CAP-EG';

    MOVGEST_TS_T_TIPO CONSTANT varchar:='T';
    MOVGEST_TS_S_TIPO CONSTANT varchar:='S';

    A_MOV_GEST_STATO  CONSTANT varchar:='A';
    APE_GEST_ACC_RES    CONSTANT varchar:='APE_GEST_ACC_RES';

    A_MOV_GEST_DET_TIPO  CONSTANT varchar:='A';
    I_MOV_GEST_DET_TIPO  CONSTANT varchar:='I';
    U_MOV_GEST_DET_TIPO  CONSTANT varchar:='U';

    -- 17.02.2017 Sofia HD-INC000001535447
    ATTO_AMM_FIT_TIPO  CONSTANT varchar:='SPR';
    ATTO_AMM_FIT_OGG CONSTANT varchar:='Passaggio residuo.';
    ATTO_AMM_FIT_STATO CONSTANT VARCHAR:='DEFINITIVO';
    attoAmmFittizioId integer:=null;
	attoAmmNumeroFittizio  VARCHAR(10):='9'||annoBilancio::varchar||'99';

	-- 03.05.2019 Sofia siac-6255
    faseOp                    VARCHAR(10):=null;
    G_FASE                    CONSTANT varchar:='G'; -- gestione approvata

BEGIN
    codiceRisultato:=null;
    messaggioRisultato:=null;



    dataInizioVal:= clock_timestamp();

	strMessaggioFinale:='Apertura bilancio gestione.Ribaltamento accertamenti  residui  da Gestione precedente. Anno bilancio='||annoBilancio::varchar
                         ||'.Elabora  minId='||coalesce(minId::varchar,' ')||' maxId='||coalesce(maxId::varchar,' ')
                         ||'. Fase Elaborazione Id='||faseBilElabId||'.';

     raise notice 'strMessaggioFinale %',strMessaggioFinale;

     strMessaggio:='Inserimento LOG.';
	 codResult:=null;
	 insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggioFinale||' INIZIO.',clock_timestamp(),loginOperazione,enteProprietarioId)
     returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

	codResult:=null;
    strMessaggio:='Verifica stato fase_bil_t_elaborazione.';
    select 1  into codResult
    from fase_bil_t_elaborazione fase
    where fase.fase_bil_elab_id=faseBilElabId
    and   fase.fase_bil_elab_esito like 'IN-%'
    and   fase.data_cancellazione is null
    and   fase.validita_fine is null;
    if codResult is null then
      raise exception ' Nessuna elaborazione in corso [IN-n].';
    end if;

    codResult:=null;
    strMessaggio:='Verifica esistenza in fase_bil_t_gest_apertura_acc di movimenti da generare.';
    select 1 into codResult
    from fase_bil_t_gest_apertura_acc fase
 	where fase.fase_bil_elab_id=faseBilElabId
    and   fase.data_cancellazione is null
	and   fase.validita_fine is null
    and   fase.fl_elab='N'
    and   fase.movgest_orig_id is not null
    and   fase.movgest_orig_ts_id is not null;
    if codResult is null then
    	 raise exception ' Nessun movimento presente.';
    end if;

    if coalesce(minId,0)=0 or coalesce(maxId,0)=0 then
        strMessaggio:='Calcolo min, max Id da elaborare in [fase_bil_t_gest_apertura_acc].';
    	minId:=1;

        select max(fase.fase_bil_gest_ape_acc_id) into maxId
        from fase_bil_t_gest_apertura_acc fase
	    where fase.fase_bil_elab_id=faseBilElabId
    	and   fase.data_cancellazione is null
	    and   fase.validita_fine is null
        and   fase.fl_elab='N';
        if coalesce(maxId ,0)=0 then
        	raise exception ' Impossibile determinare il maxId';
        end if;

    end if;


     strMessaggio:='Lettura id identificativo per tipo capitolo='||CAP_UG_TIPO||'.';
	 select tipo.elem_tipo_id into strict tipoCapitoloGestId
     from siac_d_bil_elem_tipo tipo
     where tipo.elem_tipo_code=CAP_UG_TIPO
     and   tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.data_cancellazione is null
     and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
     and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);



	 strMessaggio:='Lettura bilancioId e periodoId  per annoBilancio='||annoBilancio::varchar||'.';
     select bil.bil_id , per.periodo_id into strict bilancioId, periodoId
     from siac_t_bil bil, siac_t_periodo per
     where bil.ente_proprietario_id=enteProprietarioId
     and   per.periodo_id=bil.periodo_id
     and   per.anno::INTEGER=annoBilancio
     and   bil.data_cancellazione is null
     and   per.data_cancellazione is null;

     strMessaggio:='Lettura bilancioId e periodoId  per annoBilancio-1='||(annoBilancio-1)::varchar||'.';
     select bil.bil_id , per.periodo_id into strict bilancioPrecId, periodoPrecId
     from siac_t_bil bil, siac_t_periodo per
     where bil.ente_proprietario_id=enteProprietarioId
     and   per.periodo_id=bil.periodo_id
     and   per.anno::INTEGER=annoBilancio-1
     and   bil.data_cancellazione is null
     and   per.data_cancellazione is null;

     strMessaggio:='Lettura id identificativo per movGestStatoA='||A_MOV_GEST_STATO||'.';
     select stato.movgest_stato_id into strict movGestStatoAId
     from siac_d_movgest_stato stato
     where stato.ente_proprietario_id=enteProprietarioId
     and   stato.movgest_stato_code=A_MOV_GEST_STATO
     and   stato.data_cancellazione is null
     and   stato.validita_fine is null;

     -- per A
     strMessaggio:='Lettura id identificativo per tipoMovGestImp='||ACC_MOVGEST_TIPO||'.';
     select tipo.movgest_tipo_id into strict tipoMovGestId
     from siac_d_movgest_tipo tipo
     where tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.movgest_tipo_code=ACC_MOVGEST_TIPO
     and   tipo.data_cancellazione is null
     and   tipo.validita_fine is null;





     strMessaggio:='Lettura identificativo per tipoMovGestTsT='||MOVGEST_TS_T_TIPO||'.';
     select tipo.movgest_ts_tipo_id into strict tipoMovGestTsTId
     from siac_d_movgest_ts_tipo tipo
     where tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.movgest_ts_tipo_code=MOVGEST_TS_T_TIPO
     and   tipo.data_cancellazione is null
     and   tipo.validita_fine is null;

     strMessaggio:='Lettura identificativo per tipoMovGestTsS='||MOVGEST_TS_S_TIPO||'.';
     select tipo.movgest_ts_tipo_id into strict tipoMovGestTsSId
     from siac_d_movgest_ts_tipo tipo
     where tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.movgest_ts_tipo_code=MOVGEST_TS_S_TIPO
     and   tipo.data_cancellazione is null
     and   tipo.validita_fine is null;

     -- 17.02.2017 Sofia HD-INC000001535447
     strMessaggio:='Lettura id identificativo atto amministrativo fittizio per passaggio residui.';
	 select a.attoamm_id into attoAmmFittizioId
     from siac_d_atto_amm_tipo tipo, siac_t_atto_amm a
     where tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.attoamm_tipo_code=ATTO_AMM_FIT_TIPO
     and   a.attoamm_tipo_id=tipo.attoamm_tipo_id
     and   a.attoamm_anno::integer=annoBilancio
     and   a.attoamm_numero=attoAmmNumeroFittizio::integer
     and   a.data_cancellazione is null
     and   a.validita_fine is null;

     if attoAmmFittizioId is null then
        strMessaggio:='Inserimento atto amministrativo fittizio per passaggio residui.';
     	insert into siac_t_atto_amm
        ( attoamm_anno,
          attoamm_numero,
          attoamm_oggetto,
          attoamm_tipo_id,
          validita_inizio,
          login_operazione,
          ente_proprietario_id
        )
        (select
          annoBilancio::varchar,
          attoAmmNumeroFittizio::integer,
          ATTO_AMM_FIT_OGG,
		  tipo.attoamm_tipo_id,
          dataInizioVal,
          loginOperazione,
          enteProprietarioId
         from siac_d_atto_amm_tipo tipo
         where tipo.ente_proprietario_id=enteProprietarioId
	     and   tipo.attoamm_tipo_code=ATTO_AMM_FIT_TIPO
        )
        returning attoamm_id into attoAmmFittizioId;

        if attoAmmFittizioId is null then
        	raise exception 'Inserimento non effettuato.';
        end if;

        codResult:=null;
        strMessaggio:='Inserimento stato atto amministrativo fittizio per passaggio residui.';
        insert into siac_r_atto_amm_stato
        (attoamm_id,
         attoamm_stato_id,
         validita_inizio,
         login_operazione,
         ente_proprietario_id
        )
        (select  attoAmmFittizioId,
                 stato.attoamm_stato_id,
        		 dataInizioVal,
         		 loginOperazione,
		         enteProprietarioId
         from siac_d_atto_amm_stato stato
         where stato.ente_proprietario_id=enteProprietarioId
         and   stato.attoamm_stato_code=ATTO_AMM_FIT_STATO
         )
         returning att_attoamm_stato_id into codResult;
         if codResult is null then
         	raise exception 'Inserimento non effettuato.';
         end if;
     end if;
     -- 17.02.2017 Sofia HD-INC000001535447

	 -- 03.05.2019 Sofia siac-6255
     strMessaggio:='Lettura fase di bilancio di corrente.';
	 select fase.fase_operativa_code into faseOp
     from siac_r_bil_fase_operativa r, siac_d_fase_operativa fase
     where r.bil_id=bilancioId
     and   fase.fase_operativa_id=r.fase_operativa_id
     and   r.data_cancellazione is null
     and   r.validita_fine is null;
     if faseOp is null then
		 raise exception ' Impossibile determinare Fase.';
     end if;


     codResult:=null;
	 insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
     returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;


     strMessaggio:='Inizio ciclo per generazione accertamenti.';
     codResult:=null;
	 insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
     returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

     raise notice 'Prima di inizio ciclo';
     for movGestRec in
     (select  fase.fase_bil_gest_ape_acc_id,
	   		  fase.movgest_ts_tipo,
		      fase.movgest_orig_id,
	          fase.movgest_orig_ts_id,
		      fase.elem_orig_id,
              fase.elem_id,
	          fase.imp_importo
      from  fase_bil_t_gest_apertura_acc fase
      where fase.fase_bil_elab_id=faseBilElabId
      and   fase.fase_bil_gest_ape_acc_id between minId and maxId
      and   fase.fl_elab='N'
      and   fase.data_cancellazione is null
      and   fase.validita_fine is null
      order by fase.movgest_ts_tipo desc,fase.movgest_orig_id,
	           fase.movgest_orig_ts_id
     )
     loop

     	movGestTsIdRet:=null;
        movGestIdRet:=null;
        movgGestTsIdPadre:=null;
        codResult:=null;




         strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'.';
 		 insert into fase_bil_t_elaborazione_log
	     (fase_bil_elab_id,fase_bil_elab_log_operazione,
    	 validita_inizio, login_operazione, ente_proprietario_id
	     )
	     values
    	 (faseBilElabId,strMessaggio||' INIZIO.',clock_timestamp(),loginOperazione,enteProprietarioId)
	     returning fase_bil_elab_log_id into codResult;

	     if codResult is null then
    	 	raise exception ' Errore in inserimento LOG.';
	     end if;

    	 codResult:=null;
		 if movGestRec.movgest_ts_tipo=MOVGEST_TS_T_TIPO then
      	  strMessaggio:=strMessaggio||'Inserimento Accertamento [siac_t_movgest].';

          raise notice 'strMessaggio %',strMessaggio;
     	  insert into siac_t_movgest
          (movgest_anno,
		   movgest_numero,
		   movgest_desc,
		   movgest_tipo_id,
		   bil_id,
		   validita_inizio,
	       ente_proprietario_id,
	       login_operazione,
	       parere_finanziario,
	       parere_finanziario_data_modifica,
	       parere_finanziario_login_operazione)
          (select
           m.movgest_anno,
		   m.movgest_numero,
		   m.movgest_desc,
		   m.movgest_tipo_id,
		   bilancioId,
		   dataInizioVal,
	       enteProprietarioId,
	       loginOperazione,
	       m.parere_finanziario,
	       m.parere_finanziario_data_modifica,
	       m.parere_finanziario_login_operazione
           from siac_t_movgest m
           where m.movgest_id=movGestRec.movgest_orig_id
          )
          returning movgest_id into movGestIdRet;
          if movGestIdRet is null then
            strMessaggioTemp:=strMessaggio;
            codResult:=-1;
          end if;

		  raise notice 'dopo inserimento siac_t_movgest T movGestIdRet=%',movGestIdRet;
		  raise notice 'dopo inserimento siac_t_movgest T strMessaggioTemp=%',strMessaggioTemp;

	      if codResult is null then
          	  strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'. Inserimento relazione elemento di bilancio [siac_r_movgest_bil_elem].';
	          insert into siac_r_movgest_bil_elem
    	      (movgest_id,
	    	   elem_id,
	           validita_inizio,
    	       ente_proprietario_id,
        	   login_operazione)
	          values
    	      (movGestIdRet,
        	   movGestRec.elem_id,
	           dataInizioVal,
    	       enteProprietarioId,
        	   loginOperazione
		       )
    	       returning movgest_atto_amm_id into codResult;
        	   if codResult is null then
            	codResult:=-1;
	            strMessaggioTemp:=strMessaggio;
               else codResult:=null;
    	       end if;
          end if;
      else

        strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'.Lettura identificativo accertamento.';

          raise notice 'strMessaggio %',strMessaggio;
		select mov.movgest_id into movGestIdRet
        from siac_t_movgest mov, siac_t_movgest movprec
        where movprec.movgest_id=movGestRec.movgest_orig_id
        and   mov.bil_id=bilancioId
        and   mov.movgest_tipo_id=tipoMovGestId
        and   mov.movgest_anno=movprec.movgest_anno
        and   mov.movgest_numero=movprec.movgest_numero
        and   mov.data_cancellazione is null
        and   mov.validita_fine is null
        and   movprec.data_cancellazione is null
        and   movprec.validita_fine is null;

        if movGestIdRet is null then
	        codResult:=-1;
            strMessaggioTemp:=strMessaggio;
        end if;

        raise notice 'dopo lettura siac_t_movgest T per inserimento subaccertamento movGestIdRet=%',movGestIdRet;

        if codResult is null then

         	 strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'.Lettura identificativo siac_t_movgest_ts movgGestTsIdPadre.';

        	select ts.movgest_ts_id into movgGestTsIdPadre
	        from siac_t_movgest_ts ts
    	    where ts.movgest_id=movGestIdRet
	        and   ts.movgest_ts_tipo_id=tipoMovGestTsTId
    	    and   ts.data_cancellazione is null
        	and   ts.validita_fine is null;

			raise notice 'dopo lettura siac_t_movgest_ts T per inserimento subaccertamento movgGestTsIdPadre=%',movgGestTsIdPadre;

        end if;

        raise notice 'dopo lettura siac_t_movgest movGestIdRet=%',movGestIdRet;
        raise notice 'dopo lettura siac_t_movgest strMessaggioTemp=%',strMessaggioTemp;
      end if;

      -- inserimento TS sia T che S
      if codResult is null then
   	   strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'Inserimento [siac_t_movgest_ts].';

		raise notice 'strMessaggio=% ',strMessaggio;

        insert into siac_t_movgest_ts
        ( movgest_ts_code,
          movgest_ts_desc,
          movgest_id,
	      movgest_ts_tipo_id,
          movgest_ts_id_padre,
          movgest_ts_scadenza_data,
	      ordine,
		  livello,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione,
	      login_creazione,
	      siope_tipo_debito_id,
		  siope_assenza_motivazione_id

        )
        ( select
          ts.movgest_ts_code,
          ts.movgest_ts_desc,
          movGestIdRet,    -- inserito se I, per SUB ricavato
          ts.movgest_ts_tipo_id,
          movgGestTsIdPadre, -- da ricavare dal TS T di accertamento padre
          ts.movgest_ts_scadenza_data,
          ts.ordine,
          ts.livello,
--          dataEmissione,
          ts.validita_inizio, -- i residui devono mantenere la loro data di emissione originale
          enteProprietarioId,
          loginOperazione,
          loginOperazione,
          ts.siope_tipo_debito_id,
		  ts.siope_assenza_motivazione_id


          from siac_t_movgest_ts ts
          where ts.movgest_ts_id=movGestRec.movgest_orig_ts_id
         )
        returning movgest_ts_id into  movGestTsIdRet;
        if movGestTsIdRet is null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        end if;
       end if;

       raise notice 'dopo inserimento siac_t_movgest_ts movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

       -- siac_r_movgest_ts_stato
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                       ' [siac_r_movgest_ts_stato].';

        insert into siac_r_movgest_ts_stato
        ( movgest_ts_id,
          movgest_stato_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.movgest_stato_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_movgest_ts_stato r, siac_d_movgest_stato stato
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   stato.movgest_stato_id=r.movgest_stato_id
          and   r.data_cancellazione is null
          and   r.validita_fine is null
          and   stato.data_cancellazione is null
          and   stato.validita_fine is null
         )
        returning movgest_stato_r_id into  codResult;
        if codResult is null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;
        raise notice 'dopo inserimento siac_r_movgest_ts_stato movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

       -- siac_t_movgest_ts_det
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                     ' [siac_t_movgest_ts_det].';
        raise notice ' inserimento siac_t_movgest_ts_det movGestTsIdRet=% movGestRec.movgest_orig_ts_id=%', movGestTsIdRet,movGestRec.movgest_orig_ts_id;

        insert into siac_t_movgest_ts_det
        ( movgest_ts_id,
          movgest_ts_det_tipo_id,
	      movgest_ts_det_importo,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        (  select
           movGestTsIdRet,
           tipo.movgest_ts_det_tipo_id,
           movGestRec.imp_importo,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_d_movgest_ts_det_tipo tipo
          where  tipo.ente_proprietario_id=enteProprietarioId
          and    tipo.movgest_ts_det_tipo_code in (A_MOV_GEST_DET_TIPO,I_MOV_GEST_DET_TIPO,U_MOV_GEST_DET_TIPO)
         );

		select 1 into codResult
        from siac_t_movgest_ts_det det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;

        raise notice 'dopo inserimento siac_t_movgest_ts_det movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       -- siac_r_movgest_class
       if codResult is null then
   	   strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                     ' [siac_r_movgest_class].';

        insert into siac_r_movgest_class
        ( movgest_ts_id,
          classif_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.classif_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_movgest_class r, siac_t_class class
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   class.classif_id=r.classif_id
          and   r.data_cancellazione is null
          and   r.validita_fine is null
          and   class.data_cancellazione is null
          and   class.validita_fine is null
         );

        select 1 into codResult
        from siac_r_movgest_class det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;

        raise notice 'dopo inserimento siac_r_movgest_class movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
         else codResult:=null;
         end if;
       end if;

       -- siac_r_movgest_ts_attr
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_movgest_ts_attr].';

        insert into siac_r_movgest_ts_attr
        ( movgest_ts_id,
          attr_id,
          tabella_id,
		  boolean,
	      percentuale,
		  testo,
	      numerico,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
          movGestTsIdRet,
          r.attr_id,
          r.tabella_id,
		  r.boolean,
	      r.percentuale,
		  r.testo,
	      r.numerico,
          dataInizioVal,
          enteProprietarioId,
          loginOperazione
          from siac_r_movgest_ts_attr r, siac_t_attr attr
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   attr.attr_id=r.attr_id
          and   r.data_cancellazione is null
          and   r.validita_fine is null
          and   attr.data_cancellazione is null
          and   attr.validita_fine is null
         );

		select 1 into codResult
        from siac_r_movgest_ts_attr det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;

        raise notice 'dopo inserimento siac_r_movgest_ts_attr movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       -- siac_r_movgest_ts_atto_amm
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_movgest_ts_atto_amm].';

        insert into siac_r_movgest_ts_atto_amm
        ( movgest_ts_id,
          attoamm_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.attoamm_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_movgest_ts_atto_amm r, siac_t_atto_amm atto
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   atto.attoamm_id=r.attoamm_id
          and   r.data_cancellazione is null
          and   r.validita_fine is null
--          and   atto.data_cancellazione is null 17.02.2017 Sofia HD-INC000001535447
--          and   atto.validita_fine is null
         );



		select 1  into codResult
        from siac_r_movgest_ts_atto_amm det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_movgest_ts_atto_amm det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);

        raise notice 'dopo inserimento siac_r_movgest_ts_atto_amm movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

		-- 17.02.2017 Sofia HD-INC000001535447 inserimento relazione con atto amministrativo fittizio
        if codResult is not null then
        	codResult:=null;
            strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_movgest_ts_atto_amm]. Inserimento atto amm. fittizio.';
        	insert into siac_r_movgest_ts_atto_amm
            (
             movgest_ts_id,
		     attoamm_id,
			 validita_inizio,
			 login_operazione,
			 ente_proprietario_id
            )
            values
            (
             movGestTsIdRet,
             attoAmmFittizioId,
             dataInizioVal,
	         loginOperazione,
             enteProprietarioId
            )
            returning movgest_atto_amm_id into codResult;

            if codResult is null then
       	 		codResult:=-1;
	         	strMessaggioTemp:=strMessaggio;
    	    else codResult:=null;
        	end if;
        end if;
        -- 17.02.2017 Sofia HD-INC000001535447 inserimento relazione con atto amministrativo fittizio
        /*if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;*/

       end if;

       -- siac_r_movgest_ts_sog
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_movgest_ts_sog].';

        insert into siac_r_movgest_ts_sog
        ( movgest_ts_id,
          soggetto_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.soggetto_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_movgest_ts_sog r,siac_t_soggetto sogg
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   sogg.soggetto_id=r.soggetto_id
          and   sogg.data_cancellazione is null
          and   sogg.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );



 		select 1  into codResult
        from siac_r_movgest_ts_sog det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_movgest_ts_sog det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);

        raise notice 'dopo inserimento siac_r_movgest_ts_sog movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;


        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       -- siac_r_movgest_ts_sogclasse
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_movgest_ts_sogclasse].';

        insert into siac_r_movgest_ts_sogclasse
        ( movgest_ts_id,
          soggetto_classe_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.soggetto_classe_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_movgest_ts_sogclasse r,siac_d_soggetto_classe classe
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   classe.soggetto_classe_id=r.soggetto_classe_id
--          and   classe.data_cancellazione is null
--          and   classe.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );

        select 1  into codResult
        from siac_r_movgest_ts_sogclasse det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_movgest_ts_sogclasse det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);
        raise notice 'dopo inserimento siac_r_movgest_ts_sogclasse movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;


       -- siac_r_causale_movgest_ts
       /* non si gestisce in seguito ad indicazioni di Annalina
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_causale_movgest_ts].';

        insert into siac_r_causale_movgest_ts
        ( movgest_ts_id,
          caus_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.caus_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_causale_movgest_ts r,siac_d_causale caus
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   caus.caus_id=r.caus_id
          and   caus.data_cancellazione is null
          and   caus.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );

		select 1  into codResult
        from siac_r_causale_movgest_ts det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_causale_movgest_ts det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);
        raise notice 'dopo inserimento siac_r_causale_movgest_ts movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if; */


       -- siac_r_subdoc_movgest_ts
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_subdoc_movgest_ts].';
        -- 12.01.2017 Sofia sistemazione gestione quote per escludere quelle incassate
        insert into siac_r_subdoc_movgest_ts
        ( movgest_ts_id,
          subdoc_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select distinct
           movGestTsIdRet,
           r.subdoc_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_subdoc_movgest_ts r,siac_t_subdoc sub
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   sub.subdoc_id=r.subdoc_id
          and   not exists (select 1
                            from siac_r_subdoc_ordinativo_ts rord,siac_t_ordinativo_ts tsord, siac_t_ordinativo ord,
                                 siac_r_ordinativo_stato rstato, siac_d_ordinativo_stato stato
 		                	where rord.subdoc_id=r.subdoc_id
	        		        and   tsord.ord_ts_id=rord.ord_ts_id
			                and   ord.ord_id=tsord.ord_id
			                and   ord.bil_id=bilancioPrecId
		            	    and   rstato.ord_id=ord.ord_id
		                	and   stato.ord_stato_id=rstato.ord_stato_id
			                and   stato.ord_stato_code!='A'
			                and   rord.data_cancellazione is null
			                and   rord.validita_fine is null
		    	            and   rstato.data_cancellazione is null
		        	        and   rstato.validita_fine is null
        		    	   )
          and   sub.data_cancellazione is null
          and   sub.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
          -- 10.04.2018 Daniela esclusione documenti annullati (SIAC-6015)
          and   not exists (select 1
          				    from siac_t_doc doc, siac_r_doc_stato rst, siac_d_doc_stato st
                            where doc.doc_id = sub.doc_id
                            and   doc.doc_id = rst.doc_id
                            and   rst.data_cancellazione is null
                            and   rst.validita_fine is null
                            and   st.doc_stato_id = rst.doc_stato_id
                            and   st.doc_stato_code = 'A')
         );

		select 1  into codResult
        from siac_r_subdoc_movgest_ts det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   not exists (select 1
                            from siac_r_subdoc_ordinativo_ts rord,siac_t_ordinativo_ts tsord, siac_t_ordinativo ord,
                                 siac_r_ordinativo_stato rstato, siac_d_ordinativo_stato stato
 		                	where rord.subdoc_id=det1.subdoc_id
	        		        and   tsord.ord_ts_id=rord.ord_ts_id
			                and   ord.ord_id=tsord.ord_id
			                and   ord.bil_id=bilancioPrecId
		            	    and   rstato.ord_id=ord.ord_id
		                	and   stato.ord_stato_id=rstato.ord_stato_id
			                and   stato.ord_stato_code!='A'
			                and   rord.data_cancellazione is null
			                and   rord.validita_fine is null
		    	            and   rstato.data_cancellazione is null
		        	        and   rstato.validita_fine is null
        		    	   )
        and   not exists (select 1 from siac_r_subdoc_movgest_ts det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione)
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1
          				    from siac_t_subdoc sub, siac_t_doc doc, siac_r_doc_stato rst, siac_d_doc_stato st
                            where det1.subdoc_id = sub.subdoc_id
                            and   doc.doc_id = sub.doc_id
                            and   doc.doc_id = rst.doc_id
                            and   rst.data_cancellazione is null
                            and   rst.validita_fine is null
                            and   st.doc_stato_id = rst.doc_stato_id
                            and   st.doc_stato_code = 'A')
        ;
        raise notice 'dopo inserimento siac_r_subdoc_movgest_ts movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       -- siac_r_predoc_movgest_ts
	   if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_predoc_movgest_ts].';

        insert into siac_r_predoc_movgest_ts
        ( movgest_ts_id,
          predoc_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.predoc_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_predoc_movgest_ts r,siac_t_predoc sub
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   sub.predoc_id=r.predoc_id
          and   sub.data_cancellazione is null
          and   sub.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );

		select 1  into codResult
        from siac_r_predoc_movgest_ts det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_predoc_movgest_ts det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);

        raise notice 'dopo inserimento siac_r_predoc_movgest_ts movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       --- cancellazione relazioni del movimento precedente
	   -- siac_r_subdoc_movgest_ts
       /** spostato sotto
       if codResult is null then
	        strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'. Cancellazione relazioni su gestione prec. [siac_r_subdoc_movgest_ts].';
	        update siac_r_subdoc_movgest_ts r
    	    set    data_cancellazione=dataElaborazione,
        	       validita_fine=dataElaborazione,
            	   login_operazione=r.login_operazione||'-'||loginOperazione
	        where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
    	    and   r.data_cancellazione is null
        	and   r.validita_fine is null;

	        select 1 into codResult
    	    from siac_r_subdoc_movgest_ts r
        	where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
	        and   r.data_cancellazione is null
    	    and   r.validita_fine is null;

        	if codResult is not null then
	    	    strMessaggioTemp:=strMessaggio;
    	        codResult:=-1;
	    	else codResult:=null;
	       end if;

       end if;

       -- siac_r_predoc_movgest_ts
       if codResult is null then
	        strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'. Cancellazione relazioni su gestione prec. [siac_r_predoc_movgest_ts].';
	        update siac_r_predoc_movgest_ts r
    	    set    data_cancellazione=dataElaborazione,
        	       validita_fine=dataElaborazione,
            	   login_operazione=r.login_operazione||'-'||loginOperazione
	        where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
    	    and   r.data_cancellazione is null
        	and   r.validita_fine is null;

	        select 1 into codResult
    	    from siac_r_predoc_movgest_ts r
        	where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
	        and   r.data_cancellazione is null
    	    and   r.validita_fine is null;

        	if codResult is not null then
	    	    strMessaggioTemp:=strMessaggio;
    	        codResult:=-1;
	    	else codResult:=null;
	        end if;
       end if; **/

	   -- 03.05.2019 Sofia siac-6255
       -- siac_r_movgest_ts_programma
       if codResult is null then
	   	if faseOp=G_FASE then
          strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                         ' movgest_orig_id='||movGestRec.movgest_orig_id||
                         ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                         ' elem_orig_id='||movGestRec.elem_orig_id||
                         ' elem_id='||movGestRec.elem_id||
                        ' [siac_r_movgest_ts_programma].';

          insert into siac_r_movgest_ts_programma
          ( movgest_ts_id,
            programma_id,
            validita_inizio,
            ente_proprietario_id,
            login_operazione
          )
          ( select
             movGestTsIdRet,
             pnew.programma_id,
             dataInizioVal,
             enteProprietarioId,
             loginOperazione
            from siac_r_movgest_ts_programma r,siac_t_programma prog,
                 siac_t_programma pnew,siac_d_programma_tipo tipo,
                 siac_r_programma_stato rs,siac_d_programma_stato stato
            where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
            and   prog.programma_id=r.programma_id
            and   tipo.ente_proprietario_id=prog.ente_proprietario_id
            and   tipo.programma_tipo_code='G'
            and   pnew.programma_tipo_id=tipo.programma_tipo_id
            and   pnew.bil_id=bilancioId
            and   pnew.programma_code=prog.programma_code
            and   rs.programma_id=pnew.programma_id
            and   stato.programma_stato_id=rs.programma_stato_id
            and   stato.programma_stato_code='VA'
            and   prog.data_cancellazione is null
            and   prog.validita_fine is null
            and   r.data_cancellazione is null
            and   r.validita_fine is null
            and   pnew.data_cancellazione is null
            and   pnew.validita_fine is null
            and   rs.data_cancellazione is null
            and   rs.validita_fine is null
           );
        end if;
       end if;

       -- pulizia dati inseriti
       -- aggiornamento fase_bil_t_gest_apertura_acc per scarto
	   if codResult=-1 then


        if movGestTsIdRet is not null then


         -- siac_r_movgest_class
	     strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_class.';
         delete from siac_r_movgest_class    where movgest_ts_id=movGestTsIdRet;
         -- siac_r_movgest_attr
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_ts_attr.';
         delete from siac_r_movgest_ts_attr     where movgest_ts_id=movGestTsIdRet;
		 -- siac_r_movgest_ts_atto_amm
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_ts_attr.';
         delete from siac_r_movgest_ts_atto_amm     where movgest_ts_id=movGestTsIdRet;
         -- siac_r_movgest_ts_stato
		 strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_ts_stato.';
         delete from siac_r_movgest_ts_stato     where movgest_ts_id=movGestTsIdRet;
		 strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_ts_sog.';
         delete from siac_r_movgest_ts_sog      where movgest_ts_id=movGestTsIdRet;
         -- siac_r_movgest_ts_sogclasse
		 strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_ts_sogclasse.';
         delete from siac_r_movgest_ts_sogclasse      where movgest_ts_id=movGestTsIdRet;
         -- siac_t_movgest_ts_det
		 strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_t_movgest_ts_det.';
         delete from siac_t_movgest_ts_det      where movgest_ts_id=movGestTsIdRet;
/*
         -- siac_r_causale_movgest_ts
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_causale_movgest_ts.';
         delete from siac_r_causale_movgest_ts where movgest_ts_id=movGestTsIdRet;*/

         -- siac_r_subdoc_movgest_ts
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_subdoc_movgest_ts.';
         delete from siac_r_subdoc_movgest_ts where movgest_ts_id=movGestTsIdRet;
         -- siac_r_predoc_movgest_ts
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_predoc_movgest_ts.';
         delete from siac_r_predoc_movgest_ts where movgest_ts_id=movGestTsIdRet;

 		 -- 03.05.2019 Sofia siac-6255
		 -- siac_r_movgest_ts_programma
         strMessaggio:=strMessaggioTemp||
                      ' Non Effettuato. Cancellazione siac_r_movgest_ts_programma.';
         delete from siac_r_movgest_ts_programma   where movgest_ts_id=movGestTsIdRet;

         -- siac_t_movgest_ts
 	     strMessaggio:=strMessaggioTemp||
                      ' Non Effettuato. Cancellazione siac_t_movgest_ts.';
         delete from siac_t_movgest_ts         where movgest_ts_id=movGestTsIdRet;
        end if;

		if  movGestRec.movgest_ts_tipo=MOVGEST_TS_T_TIPO then
            -- siac_r_movgest_bil_elem
            strMessaggio:=strMessaggioTemp||
                          ' Non Effettuato. Cancellazione siac_t_movgest.';

            delete from siac_r_movgest_bil_elem where movgest_id=movGestIdRet;
        	-- siac_t_movgest
            strMessaggio:=strMessaggioTemp||
                          ' Non Effettuato. Cancellazione siac_t_movgest.';
            delete from siac_t_movgest          where movgest_id=movGestIdRet;

        end if;

        /*strMessaggio:=strMessaggioTemp||
                     ' Non Effettuato. Aggiornamento fase_bil_t_gest_apertura_acc per scarto.';*/
        strMessaggioTemp:=strMessaggio;
        strMessaggio:=strMessaggio||
                      'Aggiornamento fase_bil_t_gest_apertura_acc per scarto.';
      	update fase_bil_t_gest_apertura_acc fase
        set fl_elab='X',
            scarto_code='RES1',
            scarto_desc='Movimento accertamento/subaccertamento residuo non inserito.'||strMessaggioTemp
        where fase.fase_bil_gest_ape_acc_id=movGestRec.fase_bil_gest_ape_acc_id
        and   fase.fase_bil_elab_id=faseBilElabId
        and   fase.fl_elab='N'
        and   fase.data_cancellazione is null
        and   fase.validita_fine is null;

		continue;
       end if;


       --- cancellazione relazioni del movimento precedente
	   -- siac_r_subdoc_movgest_ts
       if codResult is null then
       	    -- 12.01.2017 Sofia sistemazione gestione quote per escludere quote incassate
	        strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'. Cancellazione relazioni su gestione prec. [siac_r_subdoc_movgest_ts].';
	        update siac_r_subdoc_movgest_ts r
    	    set    data_cancellazione=dataElaborazione,
        	       validita_fine=dataElaborazione,
            	   login_operazione=r.login_operazione||'-'||loginOperazione
	        where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
            and   not exists (select 1
                            from siac_r_subdoc_ordinativo_ts rord,siac_t_ordinativo_ts tsord, siac_t_ordinativo ord,
                                 siac_r_ordinativo_stato rstato, siac_d_ordinativo_stato stato
 		                	where rord.subdoc_id=r.subdoc_id
	        		        and   tsord.ord_ts_id=rord.ord_ts_id
			                and   ord.ord_id=tsord.ord_id
			                and   ord.bil_id=bilancioPrecId
		            	    and   rstato.ord_id=ord.ord_id
		                	and   stato.ord_stato_id=rstato.ord_stato_id
			                and   stato.ord_stato_code!='A'
			                and   rord.data_cancellazione is null
			                and   rord.validita_fine is null
		    	            and   rstato.data_cancellazione is null
		        	        and   rstato.validita_fine is null
        		    	   )
    	    and   r.data_cancellazione is null
        	and   r.validita_fine is null
			and   not exists (select 1
                              from siac_t_subdoc sub, siac_t_doc doc, siac_r_doc_stato rst, siac_d_doc_stato st
                              where r.subdoc_id = sub.subdoc_id
                              and   doc.doc_id = sub.doc_id
                              and   doc.doc_id = rst.doc_id
                              and   rst.data_cancellazione is null
                              and   rst.validita_fine is null
                              and   st.doc_stato_id = rst.doc_stato_id
                              and   st.doc_stato_code = 'A')
            ;

	        select 1 into codResult
    	    from siac_r_subdoc_movgest_ts r
        	where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
            and   not exists (select 1
                            from siac_r_subdoc_ordinativo_ts rord,siac_t_ordinativo_ts tsord, siac_t_ordinativo ord,
                                 siac_r_ordinativo_stato rstato, siac_d_ordinativo_stato stato
 		                	where rord.subdoc_id=r.subdoc_id
	        		        and   tsord.ord_ts_id=rord.ord_ts_id
			                and   ord.ord_id=tsord.ord_id
			                and   ord.bil_id=bilancioPrecId
		            	    and   rstato.ord_id=ord.ord_id
		                	and   stato.ord_stato_id=rstato.ord_stato_id
			                and   stato.ord_stato_code!='A'
			                and   rord.data_cancellazione is null
			                and   rord.validita_fine is null
		    	            and   rstato.data_cancellazione is null
		        	        and   rstato.validita_fine is null
        		    	   )
	        and   r.data_cancellazione is null
    	    and   r.validita_fine is null
            and   not exists (select 1
                              from siac_t_subdoc sub, siac_t_doc doc, siac_r_doc_stato rst, siac_d_doc_stato st
                              where r.subdoc_id = sub.subdoc_id
                              and   doc.doc_id = sub.doc_id
                              and   doc.doc_id = rst.doc_id
                              and   rst.data_cancellazione is null
                              and   rst.validita_fine is null
                              and   st.doc_stato_id = rst.doc_stato_id
                              and   st.doc_stato_code = 'A')
            ;

        	if codResult is not null then
--	    	    strMessaggioTemp:=strMessaggio;
    	        codResult:=-1;
                raise exception ' Errore in aggiornamento.';
	    	else codResult:=null;
	       end if;

       end if;

       -- siac_r_predoc_movgest_ts
       if codResult is null then
	        strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'. Cancellazione relazioni su gestione prec. [siac_r_predoc_movgest_ts].';
	        update siac_r_predoc_movgest_ts r
    	    set    data_cancellazione=dataElaborazione,
        	       validita_fine=dataElaborazione,
            	   login_operazione=r.login_operazione||'-'||loginOperazione
	        where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
    	    and   r.data_cancellazione is null
        	and   r.validita_fine is null;

	        select 1 into codResult
    	    from siac_r_predoc_movgest_ts r
        	where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
	        and   r.data_cancellazione is null
    	    and   r.validita_fine is null;

        	if codResult is not null then
--	    	    strMessaggioTemp:=strMessaggio;
    	        codResult:=-1;
                raise exception ' Errore in aggiornamento.';
	    	else codResult:=null;
	        end if;
       end if;

	   strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'. Aggiornamento fase_bil_t_gest_apertura_acc per fine elaborazione.';
      	update fase_bil_t_gest_apertura_acc fase
        set fl_elab='I',
            movgest_id=movGestIdRet,
            movgest_ts_id=movGestTsIdRet
        where fase.fase_bil_gest_ape_acc_id=movGestRec.fase_bil_gest_ape_acc_id
        and   fase.fase_bil_elab_id=faseBilElabId
        and   fase.fl_elab='N'
        and   fase.data_cancellazione is null
        and   fase.validita_fine is null;


       codResult:=null;
	   insert into fase_bil_t_elaborazione_log
	   (fase_bil_elab_id,fase_bil_elab_log_operazione,
        validita_inizio, login_operazione, ente_proprietario_id
	   )
	   values
       (faseBilElabId,strMessaggio||' FINE.',clock_timestamp(),loginOperazione,enteProprietarioId)
	   returning fase_bil_elab_log_id into codResult;

	   if codResult is null then
    	 	raise exception ' Errore in inserimento LOG.';
	   end if;

     end loop;



     strMessaggio:='Aggiornamento stato fase bilancio IN-2.';
     update fase_bil_t_elaborazione
     set fase_bil_elab_esito='IN-2',
         fase_bil_elab_esito_msg='ELABORAZIONE FASE BILANCIO '||APE_GEST_ACC_RES||' IN CORSO IN-2.Elabora Acc.'
     where fase_bil_elab_id=faseBilElabId;


     codiceRisultato:=0;
     messaggioRisultato:=strMessaggioFinale||' FINE';
     return;

exception
    when RAISE_EXCEPTION THEN
    	raise notice '% % ERRORE : %',strMessaggioFinale,coalesce(strMessaggio,''),
	        	substring(upper(SQLERRM) from 1 for 1500);
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||'ERRORE :'||' '||substring(upper(SQLERRM) from 1 for 1500) ;
        codiceRisultato:=-1;
        return;

	when no_data_found THEN
		raise notice ' % % Nessun elemento trovato.' ,strMessaggioFinale,coalesce(strMessaggio,'');
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||'Nessun elemento trovato.' ;
        codiceRisultato:=-1;
		return;
	when others  THEN
		raise notice '% % Errore DB % %',strMessaggioFinale,coalesce(strMessaggio,''),SQLSTATE,
	        	substring(upper(SQLERRM) from 1 for 1500);
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||'Errore DB '||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 1500) ;
        codiceRisultato:=-1;
        return;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

CREATE OR REPLACE FUNCTION fnc_fasi_bil_gest_apertura_liq_elabora_imp(
  enteProprietarioId     integer,
  annoBilancio           integer,
  tipoElab               varchar,
  faseBilElabId          integer,
  minId                  integer,
  maxId                  integer,
  loginOperazione        varchar,
  dataElaborazione       timestamp,
  out codiceRisultato    integer,
  out messaggioRisultato varchar
)
RETURNS record AS
$body$
DECLARE
	strMessaggio VARCHAR(1500):='';
    strMessaggioTemp VARCHAR(1000):='';
	strMessaggioFinale VARCHAR(1500):='';

	codResult         integer:=null;

	tipoMovGestId      integer:=null;
    movGestTsTipoId    integer:=null;
    tipoMovGestTsSId   integer:=null;
    tipoMovGestTsTId   integer:=null;
    tipoCapitoloGestId integer:=null;

    bilancioId        integer:=null;
  	bilancioPrecId    integer:=null;
    periodoId         integer:=null;
    periodoPrecId     integer:=null;
	dataInizioVal     timestamp:=null;
    dataEmissione     timestamp:=null;
	movGestIdRet      integer:=null;
    movGestTsIdRet    integer:=null;
    elemNewId         integer:=null;
	movGestTsTipoTId  integer:=null;
	movGestTsTipoSId  integer:=null;
	movGestTsTipoCode VARCHAR(10):=null;
    movGestStatoAId   integer:=null;
	movgGestTsIdPadre integer:=null;

    movGestRec        record;
    aggProgressivi    record;

    -- tipo periodo annuale
    SY_PER_TIPO       CONSTANT varchar:='SY';
    -- tipo anno ordinario annuale
	BIL_ORD_TIPO      CONSTANT varchar:='BIL_ORD';


	IMP_MOVGEST_TIPO CONSTANT varchar:='I';

	CAP_UG_TIPO      CONSTANT varchar:='CAP-UG';

    MOVGEST_TS_T_TIPO CONSTANT varchar:='T';
    MOVGEST_TS_S_TIPO CONSTANT varchar:='S';

    A_MOV_GEST_STATO  CONSTANT varchar:='A';
    APE_GEST_LIQ_RES  CONSTANT varchar:='APE_GEST_LIQ_RES';

    APE_GEST_IMP_RES  CONSTANT varchar:='APE_GEST_IMP_RES';

    A_MOV_GEST_DET_TIPO  CONSTANT varchar:='A';
    I_MOV_GEST_DET_TIPO  CONSTANT varchar:='I';

	-- 15.02.2017 Sofia SIAC-4425
	FRAZIONABILE_ATTR CONSTANT varchar:='flagFrazionabile';
    flagFrazAttrId integer:=null;

    -- 15.02.2017 Sofia HD-INC000001535447
    ATTO_AMM_FIT_TIPO  CONSTANT varchar:='SPR';
    ATTO_AMM_FIT_OGG CONSTANT varchar:='Passaggio residuo.';
    ATTO_AMM_FIT_STATO CONSTANT VARCHAR:='DEFINITIVO';
    attoAmmFittizioId integer:=null;
	attoAmmNumeroFittizio  VARCHAR(10):='9'||annoBilancio::varchar||'99';


	-- 03.05.2019 Sofia siac-6255
    faseOp                    VARCHAR(10):=null;
    G_FASE                    CONSTANT varchar:='G'; -- gestione approvata

BEGIN
    codiceRisultato:=null;
    messaggioRisultato:=null;



    dataInizioVal:= clock_timestamp();

    if tipoElab=APE_GEST_LIQ_RES then
 	 strMessaggioFinale:='Apertura bilancio gestione.Ribaltamento movimenti  residui per ribaltamento liquidazioni res da Gestione precedente. Anno bilancio='||annoBilancio::varchar
                         ||'.Elabora  minId='||coalesce(minId::varchar,' ')||' maxId='||coalesce(maxId::varchar,' ')
                         ||'. Fase Elaborazione Id='||faseBilElabId||'.';
    else
     strMessaggioFinale:='Apertura bilancio gestione.Ribaltamento movimenti  residui da Gestione precedente. Anno bilancio='||annoBilancio::varchar
                         ||'.Elabora  minId='||coalesce(minId::varchar,' ')||' maxId='||coalesce(maxId::varchar,' ')
                         ||'. Fase Elaborazione Id='||faseBilElabId||'.';
    end if;

     raise notice 'strMessaggioFinale %',strMessaggioFinale;

     strMessaggio:='Inserimento LOG.';
	 codResult:=null;
	 insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggioFinale||' INIZIO.',clock_timestamp(),loginOperazione,enteProprietarioId)
     returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

	codResult:=null;
    strMessaggio:='Verifica stato fase_bil_t_elaborazione.';
    select 1  into codResult
    from fase_bil_t_elaborazione fase
    where fase.fase_bil_elab_id=faseBilElabId
    and   fase.fase_bil_elab_esito like 'IN-%'
    and   fase.data_cancellazione is null
    and   fase.validita_fine is null;
    if codResult is null then
      raise exception ' Nessuna elaborazione in corso [IN-n].';
    end if;


    codResult:=null;
    strMessaggio:='Verifica esistenza movimenti da creare in fase_bil_t_gest_apertura_liq_imp.';
    select 1 into codResult
    from fase_bil_t_gest_apertura_liq_imp fase
    where fase.fase_bil_elab_id=faseBilElabId
    and   fase.data_cancellazione is null
    and   fase.validita_fine is null
    and   fase.fl_elab='N';
    if codResult is null then
      raise exception ' Nessun impegno da creare.';
    end if;

    if coalesce(minId,0)=0 or coalesce(maxId,0)=0 then
        strMessaggio:='Calcolo min, max Id da elaborare in [fase_bil_t_gest_apertura_liq_imp].';
    	minId:=1;

        select max(fase.fase_bil_gest_ape_liq_imp_id) into maxId
        from fase_bil_t_gest_apertura_liq_imp fase
	    where fase.fase_bil_elab_id=faseBilElabId
    	and   fase.data_cancellazione is null
	    and   fase.validita_fine is null
        and   fase.fl_elab='N';
        if coalesce(maxId ,0)=0 then
        	raise exception ' Impossibile determinare il maxId';
        end if;

    end if;


     strMessaggio:='Lettura id identificativo per tipo capitolo='||CAP_UG_TIPO||'.';
	 select tipo.elem_tipo_id into strict tipoCapitoloGestId
     from siac_d_bil_elem_tipo tipo
     where tipo.elem_tipo_code=CAP_UG_TIPO
     and   tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.data_cancellazione is null
     and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
     and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);



	 strMessaggio:='Lettura bilancioId e periodoId  per annoBilancio='||annoBilancio::varchar||'.';
     select bil.bil_id , per.periodo_id into strict bilancioId, periodoId
     from siac_t_bil bil, siac_t_periodo per
     where bil.ente_proprietario_id=enteProprietarioId
     and   per.periodo_id=bil.periodo_id
     and   per.anno::INTEGER=annoBilancio
     and   bil.data_cancellazione is null
     and   per.data_cancellazione is null;

     strMessaggio:='Lettura bilancioId e periodoId  per annoBilancio-1='||(annoBilancio-1)::varchar||'.';
     select bil.bil_id , per.periodo_id into strict bilancioPrecId, periodoPrecId
     from siac_t_bil bil, siac_t_periodo per
     where bil.ente_proprietario_id=enteProprietarioId
     and   per.periodo_id=bil.periodo_id
     and   per.anno::INTEGER=annoBilancio-1
     and   bil.data_cancellazione is null
     and   per.data_cancellazione is null;

     strMessaggio:='Lettura id identificativo per movGestStatoA='||A_MOV_GEST_STATO||'.';
     select stato.movgest_stato_id into strict movGestStatoAId
     from siac_d_movgest_stato stato
     where stato.ente_proprietario_id=enteProprietarioId
     and   stato.movgest_stato_code=A_MOV_GEST_STATO
     and   stato.data_cancellazione is null
     and   stato.validita_fine is null;

     -- per I
     strMessaggio:='Lettura id identificativo per tipoMovGestImp='||IMP_MOVGEST_TIPO||'.';
     select tipo.movgest_tipo_id into strict tipoMovGestId
     from siac_d_movgest_tipo tipo
     where tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.movgest_tipo_code=IMP_MOVGEST_TIPO
     and   tipo.data_cancellazione is null
     and   tipo.validita_fine is null;


     -- 15.02.2017 Sofia HD-INC000001535447
     strMessaggio:='Lettura id identificativo atto amministrativo fittizio per passaggio residui.';
	 select a.attoamm_id into attoAmmFittizioId
     from siac_d_atto_amm_tipo tipo, siac_t_atto_amm a
     where tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.attoamm_tipo_code=ATTO_AMM_FIT_TIPO
     and   a.attoamm_tipo_id=tipo.attoamm_tipo_id
     and   a.attoamm_anno::integer=annoBilancio
     and   a.attoamm_numero=attoAmmNumeroFittizio::integer
     and   a.data_cancellazione is null
     and   a.validita_fine is null;

     if attoAmmFittizioId is null then
        strMessaggio:='Inserimento atto amministrativo fittizio per passaggio residui.';
     	insert into siac_t_atto_amm
        ( attoamm_anno,
          attoamm_numero,
          attoamm_oggetto,
          attoamm_tipo_id,
          validita_inizio,
          login_operazione,
          ente_proprietario_id
        )
        (select
          annoBilancio::varchar,
          attoAmmNumeroFittizio::integer,
          ATTO_AMM_FIT_OGG,
		  tipo.attoamm_tipo_id,
          dataInizioVal,
          loginOperazione,
          enteProprietarioId
         from siac_d_atto_amm_tipo tipo
         where tipo.ente_proprietario_id=enteProprietarioId
	     and   tipo.attoamm_tipo_code=ATTO_AMM_FIT_TIPO
        )
        returning attoamm_id into attoAmmFittizioId;

        if attoAmmFittizioId is null then
        	raise exception 'Inserimento non effettuato.';
        end if;

        codResult:=null;
        strMessaggio:='Inserimento stato atto amministrativo fittizio per passaggio residui.';
        insert into siac_r_atto_amm_stato
        (attoamm_id,
         attoamm_stato_id,
         validita_inizio,
         login_operazione,
         ente_proprietario_id
        )
        (select  attoAmmFittizioId,
                 stato.attoamm_stato_id,
        		 dataInizioVal,
         		 loginOperazione,
		         enteProprietarioId
         from siac_d_atto_amm_stato stato
         where stato.ente_proprietario_id=enteProprietarioId
         and   stato.attoamm_stato_code=ATTO_AMM_FIT_STATO
         )
         returning att_attoamm_stato_id into codResult;
         if codResult is null then
         	raise exception 'Inserimento non effettuato.';
         end if;
     end if;
     -- 15.02.2017 Sofia HD-INC000001535447

     strMessaggio:='Lettura identificativo per tipoMovGestTsT='||MOVGEST_TS_T_TIPO||'.';
     select tipo.movgest_ts_tipo_id into strict tipoMovGestTsTId
     from siac_d_movgest_ts_tipo tipo
     where tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.movgest_ts_tipo_code=MOVGEST_TS_T_TIPO
     and   tipo.data_cancellazione is null
     and   tipo.validita_fine is null;

     strMessaggio:='Lettura identificativo per tipoMovGestTsS='||MOVGEST_TS_S_TIPO||'.';
     select tipo.movgest_ts_tipo_id into strict tipoMovGestTsSId
     from siac_d_movgest_ts_tipo tipo
     where tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.movgest_ts_tipo_code=MOVGEST_TS_S_TIPO
     and   tipo.data_cancellazione is null
     and   tipo.validita_fine is null;

	 -- 15.02.2017 Sofia SIAC-4425
     strMessaggio:='Lettura identificativo per flagFrazAttrCode='||FRAZIONABILE_ATTR||'.';
   	 select attr.attr_id into strict flagFrazAttrId
     from siac_t_attr attr
     where attr.ente_proprietario_id=enteProprietarioId
     and   attr.attr_code=FRAZIONABILE_ATTR
     and   attr.data_cancellazione is null
     and   attr.validita_fine is null;


     -- 03.05.2019 Sofia siac-6255
     strMessaggio:='Lettura fase di bilancio di corrente.';
	 select fase.fase_operativa_code into faseOp
     from siac_r_bil_fase_operativa r, siac_d_fase_operativa fase
     where r.bil_id=bilancioId
     and   fase.fase_operativa_id=r.fase_operativa_id
     and   r.data_cancellazione is null
     and   r.validita_fine is null;
     if faseOp is null then
		 raise exception ' Impossibile determinare Fase.';
     end if;

     codResult:=null;
	 insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
     returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;


     strMessaggio:='Inizio ciclo per generazione impegni.';
     codResult:=null;
	 insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
     returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

     raise notice 'Prima di inizio ciclo';
     for movGestRec in
     (select  fase.fase_bil_gest_ape_liq_imp_id,
	   		  fase.movgest_ts_tipo,
		      fase.movgest_orig_id,
	          fase.movgest_orig_ts_id,
		      fase.elem_orig_id,
              fase.elem_id,
	          fase.imp_importo
      from  fase_bil_t_gest_apertura_liq_imp fase
      where fase.fase_bil_elab_id=faseBilElabId
      and   fase.fase_bil_gest_ape_liq_imp_id between minId and maxId
      and   fase.fl_elab='N'
      and   fase.data_cancellazione is null
      and   fase.validita_fine is null
/*      and   exists -- x test siac-6255
      (
      select 1
      from siac_r_movgest_ts_programma r
      where r.movgest_ts_id=fase.movgest_orig_ts_id
      and   r.data_cancellazione is null
      and   r.validita_fine is null
      ) */
      order by fase.movgest_ts_tipo desc,fase.movgest_orig_id,
	           fase.movgest_orig_ts_id
     )
     loop

     	movGestTsIdRet:=null;
        movGestIdRet:=null;
        movgGestTsIdPadre:=null;
        codResult:=null;




         strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'.';
 		 insert into fase_bil_t_elaborazione_log
	     (fase_bil_elab_id,fase_bil_elab_log_operazione,
    	 validita_inizio, login_operazione, ente_proprietario_id
	     )
	     values
    	 (faseBilElabId,strMessaggio||' INIZIO.',clock_timestamp(),loginOperazione,enteProprietarioId)
	     returning fase_bil_elab_log_id into codResult;

	     if codResult is null then
    	 	raise exception ' Errore in inserimento LOG.';
	     end if;

    	 codResult:=null;
		 if movGestRec.movgest_ts_tipo=MOVGEST_TS_T_TIPO then
      	  strMessaggio:=strMessaggio||'Inserimento Impegno [siac_t_movgest].';

          raise notice 'strMessaggio %',strMessaggio;
     	  insert into siac_t_movgest
          (movgest_anno,
		   movgest_numero,
		   movgest_desc,
		   movgest_tipo_id,
		   bil_id,
		   validita_inizio,
	       ente_proprietario_id,
	       login_operazione,
	       parere_finanziario,
	       parere_finanziario_data_modifica,
	       parere_finanziario_login_operazione
		   )
          (select
           m.movgest_anno,
		   m.movgest_numero,
		   m.movgest_desc,
		   m.movgest_tipo_id,
		   bilancioId,
		   dataInizioVal,
	       enteProprietarioId,
	       loginOperazione,
	       m.parere_finanziario,
	       m.parere_finanziario_data_modifica,
	       m.parere_finanziario_login_operazione
           from siac_t_movgest m
           where m.movgest_id=movGestRec.movgest_orig_id
          )
          returning movgest_id into movGestIdRet;
          if movGestIdRet is null then
            strMessaggioTemp:=strMessaggio;
            codResult:=-1;
          end if;

		  raise notice 'dopo inserimento siac_t_movgest T movGestIdRet=%',movGestIdRet;
		  raise notice 'dopo inserimento siac_t_movgest T strMessaggioTemp=%',strMessaggioTemp;

	      if codResult is null then
          	  strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'. Inserimento relazione elemento di bilancio [siac_r_movgest_bil_elem].';
	          insert into siac_r_movgest_bil_elem
    	      (movgest_id,
	    	   elem_id,
	           validita_inizio,
    	       ente_proprietario_id,
        	   login_operazione)
	          values
    	      (movGestIdRet,
        	   movGestRec.elem_id,
	           dataInizioVal,
    	       enteProprietarioId,
        	   loginOperazione
		       )
    	       returning movgest_atto_amm_id into codResult;
        	   if codResult is null then
            	codResult:=-1;
	            strMessaggioTemp:=strMessaggio;
               else codResult:=null;
    	       end if;
          end if;
      else

        strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'.Lettura identificativo impegno.';

          raise notice 'strMessaggio %',strMessaggio;
		select mov.movgest_id into movGestIdRet
        from siac_t_movgest mov, siac_t_movgest movprec
        where movprec.movgest_id=movGestRec.movgest_orig_id
        and   mov.bil_id=bilancioId
        and   mov.movgest_tipo_id=tipoMovGestId
        and   mov.movgest_anno=movprec.movgest_anno
        and   mov.movgest_numero=movprec.movgest_numero
        and   mov.data_cancellazione is null
        and   mov.validita_fine is null
        and   movprec.data_cancellazione is null
        and   movprec.validita_fine is null;

        if movGestIdRet is null then
	        codResult:=-1;
            strMessaggioTemp:=strMessaggio;
        end if;

        raise notice 'dopo lettura siac_t_movgest T per inserimento subimpegno movGestIdRet=%',movGestIdRet;

        if codResult is null then

         	 strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'.Lettura identificativo siac_t_movgest_ts movgGestTsIdPadre.';
			strMessaggioTemp:=strMessaggio;
        	select ts.movgest_ts_id into movgGestTsIdPadre
	        from siac_t_movgest_ts ts
    	    where ts.movgest_id=movGestIdRet
	        and   ts.movgest_ts_tipo_id=tipoMovGestTsTId
    	    and   ts.data_cancellazione is null
        	and   ts.validita_fine is null;

			raise notice 'dopo lettura siac_t_movgest_ts T per inserimento subimpegno movgGestTsIdPadre=%',movgGestTsIdPadre;

        end if;

        raise notice 'dopo lettura siac_t_movgest movGestIdRet=%',movGestIdRet;
        raise notice 'dopo lettura siac_t_movgest strMessaggioTemp=%',strMessaggioTemp;
      end if;

      -- inserimento TS sia T che S
      if codResult is null then
   	   strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'Inserimento [siac_t_movgest_ts].';

		raise notice 'strMessaggio=% ',strMessaggio;

        insert into siac_t_movgest_ts
        ( movgest_ts_code,
          movgest_ts_desc,
          movgest_id,
	      movgest_ts_tipo_id,
          movgest_ts_id_padre,
          movgest_ts_scadenza_data,
	      ordine,
		  livello,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione,
	      login_creazione,
		  siope_tipo_debito_id ,
  		  siope_assenza_motivazione_id
        )
        ( select
          ts.movgest_ts_code,
          ts.movgest_ts_desc,
          movGestIdRet,    -- inserito se I, per SUB ricavato
          ts.movgest_ts_tipo_id,
          movgGestTsIdPadre, -- da ricavare dal TS T di impegno padre
          ts.movgest_ts_scadenza_data,
          ts.ordine,
          ts.livello,
--          dataEmissione,
          ts.validita_inizio, -- i residui devono mantenere la loro data di emissione originale
          enteProprietarioId,
          loginOperazione,
          loginOperazione,
		  ts.siope_tipo_debito_id ,
  		  ts.siope_assenza_motivazione_id
          from siac_t_movgest_ts ts
          where ts.movgest_ts_id=movGestRec.movgest_orig_ts_id
         )
        returning movgest_ts_id into  movGestTsIdRet;
        if movGestTsIdRet is null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        end if;
       end if;

       raise notice 'dopo inserimento siac_t_movgest_ts movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

       -- siac_r_movgest_ts_stato
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                       ' [siac_r_movgest_ts_stato].';

        insert into siac_r_movgest_ts_stato
        ( movgest_ts_id,
          movgest_stato_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.movgest_stato_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_movgest_ts_stato r, siac_d_movgest_stato stato
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   stato.movgest_stato_id=r.movgest_stato_id
          and   r.data_cancellazione is null
          and   r.validita_fine is null
          and   stato.data_cancellazione is null
          and   stato.validita_fine is null
         )
        returning movgest_stato_r_id into  codResult;
        if codResult is null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;
        raise notice 'dopo inserimento siac_r_movgest_ts_stato movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

       -- siac_t_movgest_ts_det
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                     ' [siac_t_movgest_ts_det].';
        raise notice ' inserimento siac_t_movgest_ts_det movGestTsIdRet=% movGestRec.movgest_orig_ts_id=%', movGestTsIdRet,movGestRec.movgest_orig_ts_id;

        insert into siac_t_movgest_ts_det
        ( movgest_ts_id,
          movgest_ts_det_tipo_id,
	      movgest_ts_det_importo,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        (  select
           movGestTsIdRet,
           tipo.movgest_ts_det_tipo_id,
           movGestRec.imp_importo,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_d_movgest_ts_det_tipo tipo
          where  tipo.ente_proprietario_id=enteProprietarioId
          and    tipo.movgest_ts_det_tipo_code in (A_MOV_GEST_DET_TIPO,I_MOV_GEST_DET_TIPO)
         );

		select 1 into codResult
        from siac_t_movgest_ts_det det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;

        raise notice 'dopo inserimento siac_t_movgest_ts_det movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       -- siac_r_movgest_class
       if codResult is null then
   	   strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                     ' [siac_r_movgest_class].';

        insert into siac_r_movgest_class
        ( movgest_ts_id,
          classif_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.classif_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_movgest_class r, siac_t_class class
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   class.classif_id=r.classif_id
          and   r.data_cancellazione is null
          and   r.validita_fine is null
          and   class.data_cancellazione is null
          and   class.validita_fine is null
         );

        select 1 into codResult
        from siac_r_movgest_class det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;

        raise notice 'dopo inserimento siac_r_movgest_class movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
         else codResult:=null;
         end if;
       end if;

       -- siac_r_movgest_ts_attr
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_movgest_ts_attr].';

        insert into siac_r_movgest_ts_attr
        ( movgest_ts_id,
          attr_id,
          tabella_id,
		  boolean,
	      percentuale,
		  testo,
	      numerico,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
          movGestTsIdRet,
          r.attr_id,
          r.tabella_id,
		  r.boolean,
	      r.percentuale,
		  r.testo,
	      r.numerico,
          dataInizioVal,
          enteProprietarioId,
          loginOperazione
          from siac_r_movgest_ts_attr r, siac_t_attr attr
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   attr.attr_id=r.attr_id
          and   r.data_cancellazione is null
          and   r.validita_fine is null
          and   attr.data_cancellazione is null
          and   attr.validita_fine is null
         );

		select 1 into codResult
        from siac_r_movgest_ts_attr det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;

        raise notice 'dopo inserimento siac_r_movgest_ts_attr movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       -- siac_r_movgest_ts_atto_amm
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_movgest_ts_atto_amm].';

        insert into siac_r_movgest_ts_atto_amm
        ( movgest_ts_id,
          attoamm_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.attoamm_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_movgest_ts_atto_amm r, siac_t_atto_amm atto
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   atto.attoamm_id=r.attoamm_id
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         -- and   atto.data_cancellazione is null 15.02.2017 Sofia HD-INC000001535447
         -- and   atto.validita_fine is null
         );

       /* select 1 into codResult
        from siac_r_movgest_ts_atto_amm det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;*/

		select 1  into codResult
        from siac_r_movgest_ts_atto_amm det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_movgest_ts_atto_amm det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);

       -- raise notice 'dopo inserimento siac_r_movgest_ts_atto_amm movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        -- 15.02.2017 Sofia HD-INC000001535447 inserimento relazione con atto amministrativo fittizio
        if codResult is not null then
        	codResult:=null;
            strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_movgest_ts_atto_amm]. Inserimento atto amm. fittizio.';
        	insert into siac_r_movgest_ts_atto_amm
            (
             movgest_ts_id,
		     attoamm_id,
			 validita_inizio,
			 login_operazione,
			 ente_proprietario_id
            )
            values
            (
             movGestTsIdRet,
             attoAmmFittizioId,
             dataInizioVal,
	         loginOperazione,
             enteProprietarioId
            )
            returning movgest_atto_amm_id into codResult;

            if codResult is null then
       	 		codResult:=-1;
	         strMessaggioTemp:=strMessaggio;
    	    else codResult:=null;
        	end if;
        end if;

       end if;

       -- siac_r_movgest_ts_sog
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_movgest_ts_sog].';

        insert into siac_r_movgest_ts_sog
        ( movgest_ts_id,
          soggetto_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.soggetto_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_movgest_ts_sog r,siac_t_soggetto sogg
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   sogg.soggetto_id=r.soggetto_id
          and   sogg.data_cancellazione is null
          and   sogg.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );



 		select 1  into codResult
        from siac_r_movgest_ts_sog det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_movgest_ts_sog det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);

        raise notice 'dopo inserimento siac_r_movgest_ts_sog movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;


        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       -- siac_r_movgest_ts_sogclasse
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_movgest_ts_sogclasse].';

        insert into siac_r_movgest_ts_sogclasse
        ( movgest_ts_id,
          soggetto_classe_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.soggetto_classe_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_movgest_ts_sogclasse r,siac_d_soggetto_classe classe
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   classe.soggetto_classe_id=r.soggetto_classe_id
--          and   classe.data_cancellazione is null
--          and   classe.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );

        select 1  into codResult
        from siac_r_movgest_ts_sogclasse det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_movgest_ts_sogclasse det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);
        raise notice 'dopo inserimento siac_r_movgest_ts_sogclasse movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       -- siac_r_movgest_ts_programma
       if codResult is null then
	   	if faseOp=G_FASE then
          strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                         ' movgest_orig_id='||movGestRec.movgest_orig_id||
                         ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                         ' elem_orig_id='||movGestRec.elem_orig_id||
                         ' elem_id='||movGestRec.elem_id||
                        ' [siac_r_movgest_ts_programma].';

          insert into siac_r_movgest_ts_programma
          ( movgest_ts_id,
            programma_id,
            validita_inizio,
            ente_proprietario_id,
            login_operazione
          )
          ( select
             movGestTsIdRet,
             pnew.programma_id,
             dataInizioVal,
             enteProprietarioId,
             loginOperazione
            from siac_r_movgest_ts_programma r,siac_t_programma prog,
                 siac_t_programma pnew,siac_d_programma_tipo tipo,
                 siac_r_programma_stato rs,siac_d_programma_stato stato
            where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
            and   prog.programma_id=r.programma_id
            and   tipo.ente_proprietario_id=prog.ente_proprietario_id
            and   tipo.programma_tipo_code='G'
            and   pnew.programma_tipo_id=tipo.programma_tipo_id
            and   pnew.bil_id=bilancioId
            and   pnew.programma_code=prog.programma_code
            and   rs.programma_id=pnew.programma_id
            and   stato.programma_stato_id=rs.programma_stato_id
            and   stato.programma_stato_code='VA'
            and   prog.data_cancellazione is null
            and   prog.validita_fine is null
            and   r.data_cancellazione is null
            and   r.validita_fine is null
            and   pnew.data_cancellazione is null
            and   pnew.validita_fine is null
            and   rs.data_cancellazione is null
            and   rs.validita_fine is null
           );

		   strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                         ' movgest_orig_id='||movGestRec.movgest_orig_id||
                         ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                         ' elem_orig_id='||movGestRec.elem_orig_id||
                         ' elem_id='||movGestRec.elem_id||
                         ' solo cronop [siac_r_movgest_ts_cronop_elem].';

          insert into siac_r_movgest_ts_cronop_elem
          ( movgest_ts_id,
            cronop_id,
            validita_inizio,
            ente_proprietario_id,
            login_operazione
          )
          ( select
             movGestTsIdRet,
             cnew.cronop_id,
             dataInizioVal,
             enteProprietarioId,
             loginOperazione
            from siac_r_movgest_ts_cronop_elem r,
                 siac_t_cronop cronop,
                 siac_t_programma prog,
                 siac_t_programma pnew,siac_d_programma_tipo tipo,
                 siac_r_programma_stato rs,siac_d_programma_stato stato,
                 siac_t_cronop cnew, siac_r_cronop_stato rsc, siac_d_cronop_stato cstato
            where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
            and   r.cronop_elem_id is null
            and   cronop.cronop_id=r.cronop_id
            and   prog.programma_id=cronop.programma_id
            and   tipo.ente_proprietario_id=prog.ente_proprietario_id
            and   tipo.programma_tipo_code='G'
            and   pnew.programma_tipo_id=tipo.programma_tipo_id
            and   pnew.programma_code=prog.programma_code
            and   cnew.programma_id=pnew.programma_id
            and   cnew.bil_id=bilancioId
			and   cnew.cronop_code=cronop.cronop_code
            and   rs.programma_id=pnew.programma_id
            and   stato.programma_stato_id=rs.programma_stato_id
            and   stato.programma_stato_code='VA'
            and   rsc.cronop_id=cnew.cronop_id
            and   cstato.cronop_stato_id=rsc.cronop_stato_id
            and   cstato.cronop_stato_code='VA'
            and   r.data_cancellazione is null
            and   r.validita_fine is null
            and   prog.data_cancellazione is null
            and   prog.validita_fine is null
            and   cronop.data_cancellazione is null
            and   cronop.validita_fine is null
            and   pnew.data_cancellazione is null
            and   pnew.validita_fine is null
            and   cnew.data_cancellazione is null
            and   cnew.validita_fine is null
            and   rs.data_cancellazione is null
            and   rs.validita_fine is null
            and   rsc.data_cancellazione is null
            and   rsc.validita_fine is null
           );

           strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                         ' movgest_orig_id='||movGestRec.movgest_orig_id||
                         ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                         ' elem_orig_id='||movGestRec.elem_orig_id||
                         ' elem_id='||movGestRec.elem_id||
                         ' dettaglio cronop [siac_r_movgest_ts_cronop_elem].';

          insert into siac_r_movgest_ts_cronop_elem
          ( movgest_ts_id,
            cronop_id,
            cronop_elem_id,
            validita_inizio,
            ente_proprietario_id,
            login_operazione
          )
          ( select
             movGestTsIdRet,
             celem_new.cronop_id,
             celem_new.cronop_elem_id,
             dataInizioVal,
             enteProprietarioId,
             loginOperazione
            from siac_r_movgest_ts_cronop_elem r,siac_t_cronop_elem celem,
		         siac_t_cronop_elem_det det,
                 siac_t_cronop cronop,
                 siac_t_programma prog,
                 siac_t_programma pnew,siac_d_programma_tipo tipo,
                 siac_r_programma_stato rs,siac_d_programma_stato stato,
                 siac_t_cronop cnew, siac_r_cronop_stato rsc, siac_d_cronop_stato cstato,
                 siac_t_cronop_elem celem_new,siac_t_cronop_elem_det det_new
            where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
            and   r.cronop_elem_id is not null
            and   celem.cronop_elem_id=r.cronop_elem_id
            and   det.cronop_elem_id=celem.cronop_elem_id
            and   cronop.cronop_id=celem.cronop_id
            and   prog.programma_id=cronop.programma_id
            and   tipo.ente_proprietario_id=prog.ente_proprietario_id
            and   tipo.programma_tipo_code='G'
            and   pnew.programma_tipo_id=tipo.programma_tipo_id
            and   pnew.programma_code=prog.programma_code
            and   cnew.programma_id=pnew.programma_id
            and   celem_new.cronop_id=cnew.cronop_id
            and   det_new.cronop_elem_id=celem_new.cronop_elem_id
            and   cnew.bil_id=bilancioId
			and   cnew.cronop_code=cronop.cronop_code
            and   coalesce(celem_new.cronop_elem_code,'')=coalesce(celem.cronop_elem_code,'')
            and   coalesce(celem_new.cronop_elem_code2,'')=coalesce(celem.cronop_elem_code2,'')
            and   coalesce(celem_new.cronop_elem_code3,'')=coalesce(celem.cronop_elem_code3,'')
            and   coalesce(celem_new.elem_tipo_id,0)=coalesce(celem.elem_tipo_id,0)
            and   coalesce(celem_new.cronop_elem_desc,'')=coalesce(celem.cronop_elem_desc,'')
            and   coalesce(celem_new.cronop_elem_desc2,'')=coalesce(celem.cronop_elem_desc2,'')
            and   coalesce(det_new.periodo_id,0)=coalesce(det.periodo_id,0)
		    and   coalesce(det_new.cronop_elem_det_importo,0)=coalesce(det.cronop_elem_det_importo,0)
            and   coalesce(det_new.cronop_elem_det_desc,'')=coalesce(det.cronop_elem_det_desc,'')
	        and   coalesce(det_new.anno_entrata,'')=coalesce(det.anno_entrata,'')
	        and   coalesce(det_new.elem_det_tipo_id,0)=coalesce(det.elem_det_tipo_id,0)
            and   rs.programma_id=pnew.programma_id
            and   stato.programma_stato_id=rs.programma_stato_id
            and   stato.programma_stato_code='VA'
            and   rsc.cronop_id=cnew.cronop_id
            and   cstato.cronop_stato_id=rsc.cronop_stato_id
            and   cstato.cronop_stato_code='VA'
            and   exists
            (
              select 1
              from siac_r_cronop_elem_class rc,siac_t_class c,siac_d_class_tipo tipo
              where rc.cronop_elem_id=celem.cronop_elem_id
              and   c.classif_id=rc.classif_id
              and   tipo.classif_tipo_id=c.classif_tipo_id
              and   exists
              (
                select 1
                from siac_r_cronop_elem_class rc1, siac_t_class c1
                where rc1.cronop_elem_id=celem_new.cronop_elem_id
                and   c1.classif_id=rc1.classif_id
                and   c1.classif_tipo_id=tipo.classif_tipo_id
                and   c1.classif_code=c.classif_code
                and   rc1.data_cancellazione is null
                and   rc1.validita_fine is null
              )
              and   rc.data_cancellazione is null
              and   rc.validita_fine is null
            )
            and  not exists
            (
              select 1
              from siac_r_cronop_elem_class rc,siac_t_class c,siac_d_class_tipo tipo
              where rc.cronop_elem_id=celem.cronop_elem_id
              and   c.classif_id=rc.classif_id
              and   tipo.classif_tipo_id=c.classif_tipo_id
              and   not exists
              (
                select 1
                from siac_r_cronop_elem_class rc1, siac_t_class c1
                where rc1.cronop_elem_id=celem_new.cronop_elem_id
                and   c1.classif_id=rc1.classif_id
                and   c1.classif_tipo_id=tipo.classif_tipo_id
                and   c1.classif_code=c.classif_code
                and   rc1.data_cancellazione is null
                and   rc1.validita_fine is null
              )
              and   rc.data_cancellazione is null
              and   rc.validita_fine is null
            )
            and   r.data_cancellazione is null
            and   r.validita_fine is null
            and   prog.data_cancellazione is null
            and   prog.validita_fine is null
            and   cronop.data_cancellazione is null
            and   cronop.validita_fine is null
            and   celem.data_cancellazione is null
            and   celem.validita_fine is null
            and   det.data_cancellazione is null
            and   det.validita_fine is null
            and   pnew.data_cancellazione is null
            and   pnew.validita_fine is null
            and   cnew.data_cancellazione is null
            and   cnew.validita_fine is null
            and   celem_new.data_cancellazione is null
            and   celem_new.validita_fine is null
            and   det_new.data_cancellazione is null
            and   det_new.validita_fine is null
            and   rs.data_cancellazione is null
            and   rs.validita_fine is null
            and   rsc.data_cancellazione is null
            and   rsc.validita_fine is null
           );
        end if;
       end if;


       /*if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_movgest_ts_programma].';

        insert into siac_r_movgest_ts_programma
        ( movgest_ts_id,
          programma_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.programma_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_movgest_ts_programma r,siac_t_programma prog
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   prog.programma_id=r.programma_id
          and   prog.data_cancellazione is null
          and   prog.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );


		select 1  into codResult
        from siac_r_movgest_ts_programma det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_movgest_ts_programma det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);
        raise notice 'dopo inserimento siac_r_movgest_ts_programma movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;*/

       -- siac_r_mutuo_voce_movgest
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_mutuo_voce_movgest].';

        insert into siac_r_mutuo_voce_movgest
        ( movgest_ts_id,
          mut_voce_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.mut_voce_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_mutuo_voce_movgest r,siac_t_mutuo_voce voce
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   voce.mut_voce_id=r.mut_voce_id
          and   voce.data_cancellazione is null
          and   voce.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );


		select 1  into codResult
        from siac_r_mutuo_voce_movgest det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_mutuo_voce_movgest det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);
        raise notice 'dopo inserimento siac_r_mutuo_voce_movgest movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       -- inserire il resto dei record legati al TS
       -- verificare quali sono da ribaltare e verificare se usare

       -- siac_r_giustificativo_movgest
       /* cassa-economale da non ribaltare come da indicazioni di Irene
        if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_giustificativo_movgest].';

        insert into siac_r_giustificativo_movgest
        ( movgest_ts_id,
          gst_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.gst_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_giustificativo_movgest r,siac_t_giustificativo gst
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   gst.gst_id=r.gst_id
          and   gst.data_cancellazione is null
          and   gst.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );


		select 1  into codResult
        from siac_r_giustificativo_movgest det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_giustificativo_movgest det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);
        raise notice 'dopo inserimento siac_r_giustificativo_movgest movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;*/


       -- siac_r_cartacont_det_movgest_ts
       /* Non si ribalta in seguito ad indicazioni di Annalina
        if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_cartacont_det_movgest_ts].';

        insert into siac_r_cartacont_det_movgest_ts
        ( movgest_ts_id,
          cartac_det_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.cartac_det_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_cartacont_det_movgest_ts r,siac_t_cartacont_det carta
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   carta.cartac_det_id=r.cartac_det_id
          and   carta.data_cancellazione is null
          and   carta.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );


		select 1  into codResult
        from siac_r_cartacont_det_movgest_ts det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_cartacont_det_movgest_ts det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);
        raise notice 'dopo inserimento siac_r_cartacont_det_movgest_ts movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if; **/

       -- siac_r_causale_movgest_ts
       /* non si gestisce in seguito ad indicazioni di Annalina
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_causale_movgest_ts].';

        insert into siac_r_causale_movgest_ts
        ( movgest_ts_id,
          caus_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.caus_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_causale_movgest_ts r,siac_d_causale caus
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   caus.caus_id=r.caus_id
          and   caus.data_cancellazione is null
          and   caus.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );

		select 1  into codResult
        from siac_r_causale_movgest_ts det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_causale_movgest_ts det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);
        raise notice 'dopo inserimento siac_r_causale_movgest_ts movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if; */

       -- siac_r_fondo_econ_movgest
       /* cassa-economale da non ribaltare come da indicazioni di Irene
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_causale_movgest_ts].';

        insert into siac_r_fondo_econ_movgest
        ( movgest_ts_id,
          fondoecon_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.fondoecon_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_fondo_econ_movgest r,siac_t_fondo_econ econ
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   econ.fondoecon_id=r.fondoecon_id
          and   econ.data_cancellazione is null
          and   econ.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );

		select 1  into codResult
        from siac_r_fondo_econ_movgest det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_fondo_econ_movgest det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);
        raise notice 'dopo inserimento siac_r_fondo_econ_movgest movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;*/

       -- siac_r_richiesta_econ_movgest
       /* cassa-economale da non ribaltare come da indicazioni di Irene
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_richiesta_econ_movgest].';

        insert into siac_r_richiesta_econ_movgest
        ( movgest_ts_id,
          ricecon_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.ricecon_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_richiesta_econ_movgest r,siac_t_richiesta_econ econ
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   econ.ricecon_id=r.ricecon_id
          and   econ.data_cancellazione is null
          and   econ.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );

		select 1  into codResult
        from siac_r_richiesta_econ_movgest det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_richiesta_econ_movgest det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);
        raise notice 'dopo inserimento siac_r_richiesta_econ_movgest movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;*/

       -- siac_r_subdoc_movgest_ts
       if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_subdoc_movgest_ts].';
        -- 12.01.2017 Sofia correzione per esclusione quote pagate
        insert into siac_r_subdoc_movgest_ts
        ( movgest_ts_id,
          subdoc_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select distinct
           movGestTsIdRet,
           r.subdoc_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_subdoc_movgest_ts r,siac_t_subdoc sub
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   sub.subdoc_id=r.subdoc_id
          and   not exists (select 1
                            from siac_r_subdoc_ordinativo_ts rord,siac_t_ordinativo_ts tsord, siac_t_ordinativo ord,
                                 siac_r_ordinativo_stato rstato, siac_d_ordinativo_stato stato
 		                	where rord.subdoc_id=r.subdoc_id
	        		        and   tsord.ord_ts_id=rord.ord_ts_id
			                and   ord.ord_id=tsord.ord_id
			                and   ord.bil_id=bilancioPrecId
		            	    and   rstato.ord_id=ord.ord_id
		                	and   stato.ord_stato_id=rstato.ord_stato_id
			                and   stato.ord_stato_code!='A'
			                and   rord.data_cancellazione is null
			                and   rord.validita_fine is null
		    	            and   rstato.data_cancellazione is null
		        	        and   rstato.validita_fine is null
        		    	   )
          and   sub.data_cancellazione is null
          and   sub.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
          -- 10.04.2018 Daniela esclusione documenti annullati (SIAC-6015)
          and   not exists (select 1
          				    from siac_t_doc doc, siac_r_doc_stato rst, siac_d_doc_stato st
                            where doc.doc_id = sub.doc_id
                            and   doc.doc_id = rst.doc_id
                            and   rst.data_cancellazione is null
                            and   rst.validita_fine is null
                            and   st.doc_stato_id = rst.doc_stato_id
                            and   st.doc_stato_code = 'A')
         );

		select 1  into codResult
        from siac_r_subdoc_movgest_ts det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   not exists (select 1
                            from siac_r_subdoc_ordinativo_ts rord,siac_t_ordinativo_ts tsord, siac_t_ordinativo ord,
                                 siac_r_ordinativo_stato rstato, siac_d_ordinativo_stato stato
 		                	where rord.subdoc_id=det1.subdoc_id
	        		        and   tsord.ord_ts_id=rord.ord_ts_id
			                and   ord.ord_id=tsord.ord_id
			                and   ord.bil_id=bilancioPrecId
		            	    and   rstato.ord_id=ord.ord_id
		                	and   stato.ord_stato_id=rstato.ord_stato_id
			                and   stato.ord_stato_code!='A'
			                and   rord.data_cancellazione is null
			                and   rord.validita_fine is null
		    	            and   rstato.data_cancellazione is null
		        	        and   rstato.validita_fine is null
        		    	   )
        and   not exists (select 1 from siac_r_subdoc_movgest_ts det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione)
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1
          				    from siac_t_subdoc sub, siac_t_doc doc, siac_r_doc_stato rst, siac_d_doc_stato st
                            where det1.subdoc_id = sub.subdoc_id
                            and   doc.doc_id = sub.doc_id
                            and   doc.doc_id = rst.doc_id
                            and   rst.data_cancellazione is null
                            and   rst.validita_fine is null
                            and   st.doc_stato_id = rst.doc_stato_id
                            and   st.doc_stato_code = 'A');

        raise notice 'dopo inserimento siac_r_subdoc_movgest_ts movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       -- siac_r_predoc_movgest_ts
	   if codResult is null then
   	    strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||
                      ' [siac_r_predoc_movgest_ts].';

        insert into siac_r_predoc_movgest_ts
        ( movgest_ts_id,
          predoc_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.predoc_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_predoc_movgest_ts r,siac_t_predoc sub
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   sub.predoc_id=r.predoc_id
          and   sub.data_cancellazione is null
          and   sub.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );

		select 1  into codResult
        from siac_r_predoc_movgest_ts det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   not exists (select 1 from siac_r_predoc_movgest_ts det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione)
		and   det1.data_cancellazione is null
        and   det1.validita_fine is null;

        raise notice 'dopo inserimento siac_r_predoc_movgest_ts movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       --- cancellazione relazioni del movimento precedente
	   -- siac_r_subdoc_movgest_ts
      /*   spostato sotto dopo pulizia in caso di codResult null
           if codResult is null then
	        strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'. Cancellazione relazioni su gestione prec. [siac_r_subdoc_movgest_ts].';
	        update siac_r_subdoc_movgest_ts r
    	    set    data_cancellazione=dataElaborazione,
        	       validita_fine=dataElaborazione,
            	   login_operazione=r.login_operazione||'-'||loginOperazione
	        where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
    	    and   r.data_cancellazione is null
        	and   r.validita_fine is null;

	        select 1 into codResult
    	    from siac_r_subdoc_movgest_ts r
        	where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
	        and   r.data_cancellazione is null
    	    and   r.validita_fine is null;

        	if codResult is not null then
	    	    strMessaggioTemp:=strMessaggio;
    	        codResult:=-1;
	    	else codResult:=null;
	       end if;

       end if;

       -- siac_r_predoc_movgest_ts
       if codResult is null then
	        strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'. Cancellazione relazioni su gestione prec. [siac_r_predoc_movgest_ts].';
	        update siac_r_predoc_movgest_ts r
    	    set    data_cancellazione=dataElaborazione,
        	       validita_fine=dataElaborazione,
            	   login_operazione=r.login_operazione||'-'||loginOperazione
	        where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
    	    and   r.data_cancellazione is null
        	and   r.validita_fine is null;

	        select 1 into codResult
    	    from siac_r_predoc_movgest_ts r
        	where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
	        and   r.data_cancellazione is null
    	    and   r.validita_fine is null;

        	if codResult is not null then
	    	    strMessaggioTemp:=strMessaggio;
    	        codResult:=-1;
	    	else codResult:=null;
	        end if;
       end if; */

       -- siac_r_cartacont_det_movgest_ts
       /* non si gestisce in seguito ad indicazioni di Annalina
       if codResult is null then
    	 	strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
	                      ' movgest_orig_id='||movGestRec.movgest_orig_id||
                          ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                          ' elem_orig_id='||movGestRec.elem_orig_id||
                          ' elem_id='||movGestRec.elem_id||'. Cancellazione relazioni su gestione prec. [siac_r_cartacont_det_movgest_ts].';
	        update siac_r_cartacont_det_movgest_ts r
    	    set    data_cancellazione=dataElaborazione,
        	       validita_fine=dataElaborazione,
            	   login_operazione=r.login_operazione||'-'||loginOperazione
	        where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
    	    and   r.data_cancellazione is null
        	and   r.validita_fine is null;

	        select 1 into codResult
    	    from siac_r_cartacont_det_movgest_ts r
        	where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
	        and   r.data_cancellazione is null
    	    and   r.validita_fine is null;

        	if codResult is not null then
	    	    strMessaggioTemp:=strMessaggio;
    	        codResult:=-1;
	    	else codResult:=null;
	       end if;
       end if; */



       -- pulizia dati inseriti
       -- aggiornamento fase_bil_t_gest_apertura_liq_imp per scarto
	   if codResult=-1 then


        if movGestTsIdRet is not null then


         -- siac_r_movgest_class
	     strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_class.';
         delete from siac_r_movgest_class    where movgest_ts_id=movGestTsIdRet;
         -- siac_r_movgest_attr
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_ts_attr.';
         delete from siac_r_movgest_ts_attr     where movgest_ts_id=movGestTsIdRet;
		 -- siac_r_movgest_ts_atto_amm
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_ts_attr.';
         delete from siac_r_movgest_ts_atto_amm     where movgest_ts_id=movGestTsIdRet;
         -- siac_r_movgest_ts_stato
		 strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_ts_stato.';
         delete from siac_r_movgest_ts_stato     where movgest_ts_id=movGestTsIdRet;
		 strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_ts_sog.';
         delete from siac_r_movgest_ts_sog      where movgest_ts_id=movGestTsIdRet;
         -- siac_r_movgest_ts_sogclasse
		 strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_ts_sogclasse.';
         delete from siac_r_movgest_ts_sogclasse      where movgest_ts_id=movGestTsIdRet;
         -- siac_t_movgest_ts_det
		 strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_t_movgest_ts_det.';
         delete from siac_t_movgest_ts_det      where movgest_ts_id=movGestTsIdRet;
         -- siac_r_movgest_ts_programma
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_ts_programma.';
         delete from siac_r_movgest_ts_programma where movgest_ts_id=movGestTsIdRet;
         -- siac_r_mutuo_voce_movgest
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_mutuo_voce_movgest.';
         delete from siac_r_mutuo_voce_movgest where movgest_ts_id=movGestTsIdRet;
         -- siac_r_giustificativo_movgest
/*         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_giustificativo_movgest.';
         delete from siac_r_giustificativo_movgest where movgest_ts_id=movGestTsIdRet;
         -- siac_r_cartacont_det_movgest_ts
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_cartacont_det_movgest_ts.';
         delete from siac_r_cartacont_det_movgest_ts where movgest_ts_id=movGestTsIdRet;
         -- siac_r_causale_movgest_ts
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_causale_movgest_ts.';
         delete from siac_r_causale_movgest_ts where movgest_ts_id=movGestTsIdRet;

		 -- siac_r_fondo_econ_movgest
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_fondo_econ_movgest.';
         delete from siac_r_fondo_econ_movgest where movgest_ts_id=movGestTsIdRet;
	     -- siac_r_richiesta_econ_movgest
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_richiesta_econ_movgest.';
         delete from siac_r_richiesta_econ_movgest where movgest_ts_id=movGestTsIdRet; */
         -- siac_r_subdoc_movgest_ts
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_subdoc_movgest_ts.';
         delete from siac_r_subdoc_movgest_ts where movgest_ts_id=movGestTsIdRet;
         -- siac_r_predoc_movgest_ts
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_predoc_movgest_ts.';
         delete from siac_r_predoc_movgest_ts where movgest_ts_id=movGestTsIdRet;

		 -- 03.05.2019 Sofia siac-6255
		 -- siac_r_movgest_ts_programma
         strMessaggio:=strMessaggioTemp||
                      ' Non Effettuato. Cancellazione siac_r_movgest_ts_programma.';
         delete from siac_r_movgest_ts_programma   where movgest_ts_id=movGestTsIdRet;
         -- siac_r_movgest_ts_cronop_elem
         strMessaggio:=strMessaggioTemp||
                      ' Non Effettuato. Cancellazione siac_r_movgest_ts_cronop_elem.';
         delete from siac_r_movgest_ts_cronop_elem where movgest_ts_id=movGestTsIdRet;

         -- siac_t_movgest_ts
 	     strMessaggio:=strMessaggioTemp||
                      ' Non Effettuato. Cancellazione siac_t_movgest_ts.';
         delete from siac_t_movgest_ts         where movgest_ts_id=movGestTsIdRet;
        end if;

		if  movGestRec.movgest_ts_tipo=MOVGEST_TS_T_TIPO then
            -- siac_r_movgest_bil_elem
            strMessaggio:=strMessaggioTemp||
                          ' Non Effettuato. Cancellazione siac_t_movgest.';

            delete from siac_r_movgest_bil_elem where movgest_id=movGestIdRet;
        	-- siac_t_movgest
            strMessaggio:=strMessaggioTemp||
                          ' Non Effettuato. Cancellazione siac_t_movgest.';
            delete from siac_t_movgest          where movgest_id=movGestIdRet;

        end if;




/*        strMessaggio:=strMessaggioTemp||
                     ' Non Effettuato. Aggiornamento fase_bil_t_gest_apertura_liq_imp per scarto.';*/
        strMessaggioTemp:=strMessaggio;
        strMessaggio:=strMessaggio||
                      'Aggiornamento fase_bil_t_gest_apertura_liq_imp per scarto.';

      	update fase_bil_t_gest_apertura_liq_imp fase
        set fl_elab='X',
            scarto_code='RES1',
            scarto_desc='Movimento impegno/subimpegno residuo non inserito.'||strMessaggioTemp
        where fase.fase_bil_gest_ape_liq_imp_id=movGestRec.fase_bil_gest_ape_liq_imp_id
        and   fase.fase_bil_elab_id=faseBilElabId
        and   fase.fl_elab='N'
        and   fase.data_cancellazione is null
        and   fase.validita_fine is null;

		continue;
       end if;

       --- cancellazione relazioni del movimento precedente
	   -- siac_r_subdoc_movgest_ts
       if codResult is null then
            --- 12.01.2017 Sofia - sistemazione update per escludere le quote pagate
	        strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'. Cancellazione relazioni su gestione prec. [siac_r_subdoc_movgest_ts].';
	        update siac_r_subdoc_movgest_ts r
    	    set    data_cancellazione=dataElaborazione,
        	       validita_fine=dataElaborazione,
            	   login_operazione=r.login_operazione||'-'||loginOperazione
	        where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
            and   not exists (select 1
                              from siac_r_subdoc_ordinativo_ts rord,siac_t_ordinativo_ts tsord, siac_t_ordinativo ord,
                                   siac_r_ordinativo_stato rstato, siac_d_ordinativo_stato stato
 		                	  where rord.subdoc_id=r.subdoc_id
	        		          and   tsord.ord_ts_id=rord.ord_ts_id
			                  and   ord.ord_id=tsord.ord_id
			                  and   ord.bil_id=bilancioPrecId
		            	      and   rstato.ord_id=ord.ord_id
		                	  and   stato.ord_stato_id=rstato.ord_stato_id
			                  and   stato.ord_stato_code!='A'
			                  and   rord.data_cancellazione is null
			                  and   rord.validita_fine is null
		    	              and   rstato.data_cancellazione is null
		        	          and   rstato.validita_fine is null
        		    	     )
    	    and   r.data_cancellazione is null
        	and   r.validita_fine is null
            and   not exists (select 1
                              from siac_t_subdoc sub,siac_t_doc  doc, siac_r_doc_stato rst, siac_d_doc_stato st
                              where r.subdoc_id = sub.subdoc_id
                              and   doc.doc_id = sub.doc_id
                              and   doc.doc_id = rst.doc_id
                              and   rst.data_cancellazione is null
                              and   rst.validita_fine is null
                              and   st.doc_stato_id = rst.doc_stato_id
                              and   st.doc_stato_code = 'A')
            ;

	        select 1 into codResult
    	    from siac_r_subdoc_movgest_ts r
        	where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
            and   not exists (select 1
                              from siac_r_subdoc_ordinativo_ts rord,siac_t_ordinativo_ts tsord, siac_t_ordinativo ord,
                                   siac_r_ordinativo_stato rstato, siac_d_ordinativo_stato stato
 		                	  where rord.subdoc_id=r.subdoc_id
	        		          and   tsord.ord_ts_id=rord.ord_ts_id
			                  and   ord.ord_id=tsord.ord_id
			                  and   ord.bil_id=bilancioPrecId
		            	      and   rstato.ord_id=ord.ord_id
		                	  and   stato.ord_stato_id=rstato.ord_stato_id
			                  and   stato.ord_stato_code!='A'
			                  and   rord.data_cancellazione is null
			                  and   rord.validita_fine is null
		    	              and   rstato.data_cancellazione is null
		        	          and   rstato.validita_fine is null
        		    	     )
	        and   r.data_cancellazione is null
    	    and   r.validita_fine is null
            and   not exists (select 1
                              from siac_t_subdoc sub, siac_t_doc doc, siac_r_doc_stato rst, siac_d_doc_stato st
                              where r.subdoc_id = sub.subdoc_id
                              and   doc.doc_id = sub.doc_id
                              and   doc.doc_id = rst.doc_id
                              and   rst.data_cancellazione is null
                              and   rst.validita_fine is null
                              and   st.doc_stato_id = rst.doc_stato_id
                              and   st.doc_stato_code = 'A')
            ;

        	if codResult is not null then
	    	    --strMessaggioTemp:=strMessaggio;
    	        codResult:=-1;
                raise exception ' Errore in aggiornamento.';
	    	else codResult:=null;
	        end if;
        end if;

       -- siac_r_predoc_movgest_ts
       if codResult is null then
	        strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'. Cancellazione relazioni su gestione prec. [siac_r_predoc_movgest_ts].';
	        update siac_r_predoc_movgest_ts r
    	    set    data_cancellazione=dataElaborazione,
        	       validita_fine=dataElaborazione,
            	   login_operazione=r.login_operazione||'-'||loginOperazione
	        where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
    	    and   r.data_cancellazione is null
        	and   r.validita_fine is null;

	        select 1 into codResult
    	    from siac_r_predoc_movgest_ts r
        	where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
	        and   r.data_cancellazione is null
    	    and   r.validita_fine is null;

        	if codResult is not null then
--	    	    strMessaggioTemp:=strMessaggio;
    	        codResult:=-1;
                raise exception ' Errore in aggiornamento.';
	    	else codResult:=null;
	        end if;
       end if;

	   strMessaggio:='Movimento movGestTsTipo='||movGestRec.movgest_ts_tipo||
                       ' movgest_orig_id='||movGestRec.movgest_orig_id||
                       ' movgest_orig_ts_id='||movGestRec.movgest_orig_ts_id||
                       ' elem_orig_id='||movGestRec.elem_orig_id||
                       ' elem_id='||movGestRec.elem_id||'. Aggiornamento fase_bil_t_gest_apertura_liq_imp per fine elaborazione.';
      	update fase_bil_t_gest_apertura_liq_imp fase
        set fl_elab='I',
            movgest_id=movGestIdRet,
            movgest_ts_id=movGestTsIdRet
        where fase.fase_bil_gest_ape_liq_imp_id=movGestRec.fase_bil_gest_ape_liq_imp_id
        and   fase.fase_bil_elab_id=faseBilElabId
        and   fase.fl_elab='N'
        and   fase.data_cancellazione is null
        and   fase.validita_fine is null;


       codResult:=null;
	   insert into fase_bil_t_elaborazione_log
	   (fase_bil_elab_id,fase_bil_elab_log_operazione,
        validita_inizio, login_operazione, ente_proprietario_id
	   )
	   values
       (faseBilElabId,strMessaggio||' FINE.',clock_timestamp(),loginOperazione,enteProprietarioId)
	   returning fase_bil_elab_log_id into codResult;

	   if codResult is null then
    	 	raise exception ' Errore in inserimento LOG.';
	   end if;

     end loop;


	 -- 15.02.2017 Sofia SIAC-4425 - gestione attributo flagFrazionabile
     -- insert N per impegni mov.movgest_anno::integer<annoBilancio or mov.movgest_anno::integer>annoBilancio
     -- essendo residui consideriamo solo mov.movgest_anno::integer<annoBilancio
     -- che non hanno ancora attributo
     strMessaggio:='Gestione attributo '||FRAZIONABILE_ATTR||'. Inserimento valore N per impegni residui.';
     INSERT INTO siac_r_movgest_ts_attr
	 (
	  movgest_ts_id,
	  attr_id,
	  boolean,
	  validita_inizio,
	  ente_proprietario_id,
	  login_operazione
	 )
	 select ts.movgest_ts_id,
	        flagFrazAttrId,
            'N',
		    dataInizioVal,
		    ts.ente_proprietario_id,
		    loginOperazione
	 from siac_t_movgest mov, siac_t_movgest_ts ts
	 where mov.bil_id=bilancioId
--		and   ( mov.movgest_anno::integer<annoBilancio or mov.movgest_anno::integer>annoBilancio)
     and   mov.movgest_anno::integer<annoBilancio
	 and   mov.movgest_tipo_id=tipoMovGestId
	 and   ts.movgest_id=mov.movgest_id
     and   ts.movgest_ts_tipo_id=tipoMovGestTsTId
	 and   not exists (select 1 from siac_r_movgest_ts_attr r1
       		           where r1.movgest_ts_id=ts.movgest_ts_id
                       and   r1.attr_id=flagFrazAttrId
                       and   r1.data_cancellazione is null
                       and   r1.validita_fine is null);

     -- insert S per impegni mov.movgest_anno::integer=annoBilancio
     -- che non hanno ancora attributo
     strMessaggio:='Gestione attributo '||FRAZIONABILE_ATTR||'. Inserimento valore S per impegni di competenza senza atto amministrativo antecedente.';
	 INSERT INTO siac_r_movgest_ts_attr
	 (
	  movgest_ts_id,
	  attr_id,
	  boolean,
	  validita_inizio,
	  ente_proprietario_id,
	  login_operazione
	 )
	 select ts.movgest_ts_id,
	        flagFrazAttrId,
            'S',
	        dataInizioVal,
	        ts.ente_proprietario_id,
	        loginOperazione
	 from siac_t_movgest mov, siac_t_movgest_ts ts
	 where mov.bil_id=bilancioId
	 and   mov.movgest_anno::integer=annoBilancio
	 and   mov.movgest_tipo_id=tipoMovGestId
	 and   ts.movgest_id=mov.movgest_id
     and   ts.movgest_ts_tipo_id=tipoMovGestTsTId
	 and   not exists (select 1 from siac_r_movgest_ts_attr r1
       		           where r1.movgest_ts_id=ts.movgest_ts_id
                       and   r1.attr_id=flagFrazAttrId
                       and   r1.data_cancellazione is null
                       and   r1.validita_fine is null)
     and  not exists (select 1 from siac_r_movgest_ts_atto_amm ra,siac_t_atto_amm atto
					  where ra.movgest_ts_id=ts.movgest_ts_id
					  and   atto.attoamm_id=ra.attoamm_id
				 	  and   atto.attoamm_anno::integer < annoBilancio
		     		  and   ra.data_cancellazione is null
				      and   ra.validita_fine is null);

     -- aggiornamento N per impegni mov.movgest_anno::integer<annoBilancio or mov.movgest_anno::integer>annoBilancio
     -- essendo residui consideriamo solo mov.movgest_anno::integer<annoBilancio
     -- che  hanno  attributo ='S'
     strMessaggio:='Gestione attributo '||FRAZIONABILE_ATTR||'. Aggiornamento valore N per impegni residui.';
	 update  siac_r_movgest_ts_attr r set boolean='N'
	 from siac_t_movgest mov, siac_t_movgest_ts ts
	 where  mov.bil_id=bilancioId
--		and   ( mov.movgest_anno::integer<2017 or mov.movgest_anno::integer>2017)
	 and   mov.movgest_anno::integer<annoBilancio
	 and   mov.movgest_tipo_id=tipoMovGestId
	 and   ts.movgest_id=mov.movgest_id
     and   ts.movgest_ts_tipo_id=tipoMovGestTsTId
	 and   r.movgest_ts_id=ts.movgest_ts_id
     and   r.attr_id=flagFrazAttrId
	 and   r.boolean='S'
     and   r.data_cancellazione is null
     and   r.validita_fine is null;

     -- aggiornamento N per impegni mov.movgest_anno::integer=annoBilancio e atto.attoamm_anno::integer < annoBilancio
     -- che  hanno  attributo ='S'
     strMessaggio:='Gestione attributo '||FRAZIONABILE_ATTR||'. Aggiornamento valore N per impegni di competenza e atti amministrativi antecedenti.';
     update siac_r_movgest_ts_attr r set boolean='N'
  	 from siac_t_movgest mov, siac_t_movgest_ts ts,
	      siac_r_movgest_ts_atto_amm ra,siac_t_atto_amm atto
  	 where mov.bil_id=bilancioId
	 and   mov.movgest_anno::INTEGER=2017
	 and   mov.movgest_tipo_id=tipoMovGestId
	 and   ts.movgest_id=mov.movgest_id
     and   ts.movgest_ts_tipo_id=tipoMovGestTsTId
	 and   r.movgest_ts_id=ts.movgest_ts_id
     and   r.attr_id=flagFrazAttrId
	 and   ra.movgest_ts_id=ts.movgest_ts_id
	 and   atto.attoamm_id=ra.attoamm_id
	 and   atto.attoamm_anno::integer < annoBilancio
	 and   r.boolean='S'
     and   r.data_cancellazione is null
     and   r.validita_fine is null
     and   ra.data_cancellazione is null
     and   ra.validita_fine is null;
    -- 15.02.2017 Sofia SIAC-4425 - gestione attributo flagFrazionabile

    strMessaggio:='Aggiornamento stato fase bilancio IN-2.';
    update fase_bil_t_elaborazione
    set fase_bil_elab_esito='IN-2',
        fase_bil_elab_esito_msg='ELABORAZIONE FASE BILANCIO '||tipoElab||' IN CORSO IN-2.Elabora Imp.'
    where fase_bil_elab_id=faseBilElabId;


    codiceRisultato:=0;
    messaggioRisultato:=strMessaggioFinale||' FINE';
    return;

exception
    when RAISE_EXCEPTION THEN
    	raise notice '% % ERRORE : %',strMessaggioFinale,coalesce(strMessaggio,''),
	        	substring(upper(SQLERRM) from 1 for 500);
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||'ERRORE :'||' '||substring(upper(SQLERRM) from 1 for 1500) ;
        codiceRisultato:=-1;
        return;

	when no_data_found THEN
		raise notice ' % % Nessun elemento trovato.' ,strMessaggioFinale,coalesce(strMessaggio,'');
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||'Nessun elemento trovato.' ;
        codiceRisultato:=-1;
		return;
	when others  THEN
		raise notice '% % Errore DB % %',strMessaggioFinale,coalesce(strMessaggio,''),SQLSTATE,
	        	substring(upper(SQLERRM) from 1 for 50);
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||'Errore DB '||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 1500) ;
        codiceRisultato:=-1;
        return;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

CREATE OR REPLACE FUNCTION fnc_fasi_bil_gest_apertura_pluri_elabora (
  enteproprietarioid integer,
  annobilancio integer,
  fasebilelabid integer,
  tipocapitologest varchar,
  tipomovgest varchar,
  tipomovgestts varchar,
  minid integer,
  maxid integer,
  loginoperazione varchar,
  dataelaborazione timestamp,
  out codicerisultato integer,
  out messaggiorisultato varchar
)
RETURNS record AS
$body$
DECLARE
	strMessaggio VARCHAR(1500):='';
    strMessaggioTemp VARCHAR(1000):='';
	strMessaggioFinale VARCHAR(1500):='';

	codResult         integer:=null;

	tipoMovGestId      integer:=null;
    movGestTsTipoId    integer:=null;
    tipoMovGestTsSId   integer:=null;
    tipoMovGestTsTId   integer:=null;
    tipoCapitoloGestId integer:=null;

    bilancioId        integer:=null;
  	bilancioPrecId    integer:=null;
    periodoId         integer:=null;
    periodoPrecId     integer:=null;
	dataInizioVal     timestamp:=null;
    dataEmissione     timestamp:=null;
	movGestIdRet      integer:=null;
    movGestTsIdRet    integer:=null;
    elemNewId         integer:=null;
	movGestTsTipoTId  integer:=null;
	movGestTsTipoSId  integer:=null;
	movGestTsTipoCode VARCHAR(10):=null;
    movGestStatoAId   integer:=null;

    movGestRec        record;
    aggProgressivi    record;


	movgestTsTipoDetIniz integer; -- 29.01.2018 Sofia siac-5830
    movgestTsTipoDetAtt  integer; -- 29.01.2018 Sofia siac-5830
    movgestTsTipoDetUtil integer; -- 29.01.2018 Sofia siac-5830

    -- tipo periodo annuale
    SY_PER_TIPO       CONSTANT varchar:='SY';
    -- tipo anno ordinario annuale
	BIL_ORD_TIPO      CONSTANT varchar:='BIL_ORD';


	IMP_MOVGEST_TIPO CONSTANT varchar:='I';
    ACC_MOVGEST_TIPO CONSTANT varchar:='A';
	SIM_MOVGEST_TS_TIPO CONSTANT varchar:='SIM';
    SAC_MOVGEST_TS_TIPO CONSTANT varchar:='SAC';


    MOVGEST_TS_T_TIPO CONSTANT varchar:='T';
    MOVGEST_TS_S_TIPO CONSTANT varchar:='S';

    APE_GEST_PLURI    CONSTANT varchar:='APE_GEST_PLURI';
    A_MOV_GEST_STATO  CONSTANT varchar:='A';

	-- 14.02.2017 Sofia SIAC-4425
	FRAZIONABILE_ATTR CONSTANT varchar:='flagFrazionabile';
    flagFrazAttrId integer:=null;


    INIZ_MOVGEST_TS_DET_TIPO  constant varchar:='I'; -- 29.01.2018 Sofia siac-5830
    ATT_MOVGEST_TS_DET_TIPO   constant varchar:='A'; -- 29.01.2018 Sofia siac-5830
    UTI_MOVGEST_TS_DET_TIPO   constant varchar:='U'; -- 29.01.2018 Sofia siac-5830

	-- 03.05.2019 Sofia siac-6255
    faseOp                    VARCHAR(10):=null;
    G_FASE                    CONSTANT varchar:='G'; -- gestione approvata


BEGIN
    codiceRisultato:=null;
    messaggioRisultato:=null;

    raise notice 'fnc_fasi_bil_gest_apertura_pluri_elabora tipoCapitoloGest=%',tipoCapitoloGest;

	if tipoMovGest=IMP_MOVGEST_TIPO then
    	 movGestTsTipoCode=SIM_MOVGEST_TS_TIPO;
    else movGestTsTipoCode=SAC_MOVGEST_TS_TIPO;
    end if;

    dataInizioVal:= clock_timestamp();
--    dataEmissione:=((annoBilancio-1)::varchar||'-12-31')::timestamp; -- da capire che data impostare come data emissione
    -- 23.08.2016 Sofia in attesa di indicazioni diverse ho deciso di impostare il primo di gennaio del nuovo anno di bilancio
    dataEmissione:=(annoBilancio::varchar||'-01-01')::timestamp;
--    raise notice 'fasbilElabId %',faseBilElabId;
	strMessaggioFinale:='Apertura bilancio gestione.Ribaltamento movimenti  pluriennali da Gestione precedente. Anno bilancio='||annoBilancio::varchar
                         ||'.Elabora tipoMovGest='||tipoMovGest||' minId='||coalesce(minId::varchar,' ')||' maxId='||coalesce(maxId::varchar,' ')
                         ||'. Fase Elaborazione Id='||faseBilElabId||'.';
     strMessaggio:='Inserimento LOG.';
	 codResult:=null;
	 insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggioFinale||' INIZIO.',clock_timestamp(),loginOperazione,enteProprietarioId)
     returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

	codResult:=null;
    strMessaggio:='Verifica stato fase_bil_t_elaborazione.';
    select 1  into codResult
    from fase_bil_t_elaborazione fase
    where fase.fase_bil_elab_id=faseBilElabId
    and   fase.fase_bil_elab_esito like 'IN-%'
    and   fase.data_cancellazione is null
    and   fase.validita_fine is null;
    if codResult is null then
      raise exception ' Nessuna elaborazione in corso [IN-n].';
    end if;


    codResult:=null;
    strMessaggio:='Verifica esistenza movimenti da creare in fase_bil_t_gest_apertura_pluri.';
    select 1 into codResult
    from fase_bil_t_gest_apertura_pluri fase
    where fase.fase_bil_elab_id=faseBilElabId
    and   fase.data_cancellazione is null
    and   fase.validita_fine is null;
    if codResult is null then
      raise exception ' Nessuna movimento da creare.';
    end if;


    if coalesce(minId,0)=0 or coalesce(maxId,0)=0 then
        strMessaggio:='Calcolo min, max Id da elaborare in [fase_bil_t_gest_apertura_pluri].';
    	minId:=1;

        select max(fase.fase_bil_gest_ape_pluri_id) into maxId
        from fase_bil_t_gest_apertura_pluri fase
	    where fase.fase_bil_elab_id=faseBilElabId
    	and   fase.data_cancellazione is null
	    and   fase.validita_fine is null;
        if coalesce(maxId ,0)=0 then
        	raise exception ' Impossibile determinare il maxId';
        end if;

    end if;


     strMessaggio:='Lettura id identificativo per tipo capitolo='||tipoCapitoloGest||'.';
	 select tipo.elem_tipo_id into strict tipoCapitoloGestId
     from siac_d_bil_elem_tipo tipo
     where tipo.elem_tipo_code=tipoCapitoloGest
     and   tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.data_cancellazione is null
     and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
     and   ( date_trunc('day',dataElaborazione)<=date_trunc('day',tipo.validita_fine) or tipo.validita_fine is null);



	 strMessaggio:='Lettura bilancioId e periodoId  per annoBilancio='||annoBilancio::varchar||'.';
     select bil.bil_id , per.periodo_id into strict bilancioId, periodoId
     from siac_t_bil bil, siac_t_periodo per
     where bil.ente_proprietario_id=enteProprietarioId
     and   per.periodo_id=bil.periodo_id
     and   per.anno::INTEGER=annoBilancio
     and   bil.data_cancellazione is null
     and   per.data_cancellazione is null;

     strMessaggio:='Lettura bilancioId e periodoId  per annoBilancio-1='||(annoBilancio-1)::varchar||'.';
     select bil.bil_id , per.periodo_id into strict bilancioPrecId, periodoPrecId
     from siac_t_bil bil, siac_t_periodo per
     where bil.ente_proprietario_id=enteProprietarioId
     and   per.periodo_id=bil.periodo_id
     and   per.anno::INTEGER=annoBilancio-1
     and   bil.data_cancellazione is null
     and   per.data_cancellazione is null;

     strMessaggio:='Lettura id identificativo per movGestStatoA='||A_MOV_GEST_STATO||'.';
     select stato.movgest_stato_id into strict movGestStatoAId
     from siac_d_movgest_stato stato
     where stato.ente_proprietario_id=enteProprietarioId
     and   stato.movgest_stato_code=A_MOV_GEST_STATO
     and   stato.data_cancellazione is null
     and   stato.validita_fine is null;

     -- per I,A
     strMessaggio:='Lettura id identificativo per tipoMovGest='||tipoMovGest||'.';
     select tipo.movgest_tipo_id into strict tipoMovGestId
     from siac_d_movgest_tipo tipo
     where tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.movgest_tipo_code=tipoMovGest
     and   tipo.data_cancellazione is null
     and   tipo.validita_fine is null;





     strMessaggio:='Lettura identificativo per tipoMovGestTsT='||MOVGEST_TS_T_TIPO||'.';
     select tipo.movgest_ts_tipo_id into strict tipoMovGestTsTId
     from siac_d_movgest_ts_tipo tipo
     where tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.movgest_ts_tipo_code=MOVGEST_TS_T_TIPO
     and   tipo.data_cancellazione is null
     and   tipo.validita_fine is null;

     strMessaggio:='Lettura identificativo per tipoMovGestTsS='||MOVGEST_TS_S_TIPO||'.';
     select tipo.movgest_ts_tipo_id into strict tipoMovGestTsSId
     from siac_d_movgest_ts_tipo tipo
     where tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.movgest_ts_tipo_code=MOVGEST_TS_S_TIPO
     and   tipo.data_cancellazione is null
     and   tipo.validita_fine is null;

     if tipoMovGestTs=MOVGEST_TS_T_TIPO then
          movGestTsTipoId:=tipoMovGestTsTId;
     else movGestTsTipoId:=tipoMovGestTsSId;
     end if;

     if movGestTsTipoId is null then
      strMessaggio:='Lettura identificativo per tipoMovGestTs='||tipoMovGestTs||'.';
      select tipo.movgest_ts_tipo_id into strict movGestTsTipoId
      from siac_d_movgest_ts_tipo tipo
      where tipo.ente_proprietario_id=enteProprietarioId
      and   tipo.movgest_ts_tipo_code=tipoMovGestTs
      and   tipo.data_cancellazione is null
      and   tipo.validita_fine is null;
     end if;


	 -- 14.02.2017 Sofia SIAC-4425
     if tipoMovGest=IMP_MOVGEST_TIPO and tipoMovGestTs=MOVGEST_TS_T_TIPO then
        strMessaggio:='Lettura identificativo per flagFrazAttrCode='||FRAZIONABILE_ATTR||'.';
     	select attr.attr_id into strict flagFrazAttrId
        from siac_t_attr attr
        where attr.ente_proprietario_id=enteProprietarioId
        and   attr.attr_code=FRAZIONABILE_ATTR
        and   attr.data_cancellazione is null
        and   attr.validita_fine is null;
     end if;

	 -- 29.01.2018 Sofia siac-5830
     strMessaggio:='Lettura identificativo per tipo importo='||INIZ_MOVGEST_TS_DET_TIPO||'.';
     select tipo.movgest_ts_det_tipo_id into strict movgestTsTipoDetIniz
     from siac_d_movgest_ts_det_tipo tipo
     where tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.movgest_ts_det_tipo_code=INIZ_MOVGEST_TS_DET_TIPO;

     strMessaggio:='Lettura identificativo per tipo importo='||ATT_MOVGEST_TS_DET_TIPO||'.';

     select tipo.movgest_ts_det_tipo_id into strict movgestTsTipoDetAtt
     from siac_d_movgest_ts_det_tipo tipo
     where tipo.ente_proprietario_id=enteProprietarioId
     and   tipo.movgest_ts_det_tipo_code=ATT_MOVGEST_TS_DET_TIPO;

--	 if tipoMovGest=ACC_MOVGEST_TIPO then
     	 strMessaggio:='Lettura identificativo per tipo importo='||UTI_MOVGEST_TS_DET_TIPO||'.';
		 select tipo.movgest_ts_det_tipo_id into strict movgestTsTipoDetUtil
    	 from siac_d_movgest_ts_det_tipo tipo
	     where tipo.ente_proprietario_id=enteProprietarioId
    	 and   tipo.movgest_ts_det_tipo_code=UTI_MOVGEST_TS_DET_TIPO;
  --   end if;
     -- 29.01.2018 Sofia siac-5830

	 -- 03.05.2019 Sofia siac-6255
     strMessaggio:='Lettura fase di bilancio di corrente.';
	 select fase.fase_operativa_code into faseOp
     from siac_r_bil_fase_operativa r, siac_d_fase_operativa fase
     where r.bil_id=bilancioId
     and   fase.fase_operativa_id=r.fase_operativa_id
     and   r.data_cancellazione is null
     and   r.validita_fine is null;
     if faseOp is null then
		 raise exception ' Impossibile determinare Fase.';
     end if;

     codResult:=null;
	 insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
     returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;

     -- se impegno-accertamento verifico che i relativi capitoli siano presenti sul nuovo Bilancio
     if tipoMovGestTs=MOVGEST_TS_T_TIPO then
     	strMessaggio:='Aggiornamento fase_bil_t_gest_apertura_pluri per scarti movimenti privi di relativo capitolo nel nuovo bilancio. INIZIO.';
	   	codResult:=null;
		insert into fase_bil_t_elaborazione_log
	    (fase_bil_elab_id,fase_bil_elab_log_operazione,
       	 validita_inizio, login_operazione, ente_proprietario_id
      	)
      	values
      	(faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
      	returning fase_bil_elab_log_id into codResult;

      	if codResult is null then
     		raise exception ' Errore in inserimento LOG.';
      	end if;

        update fase_bil_t_gest_apertura_pluri fase
        set fl_elab='X',
            scarto_code='IMAC1',
            scarto_desc='Movimento impegno/accertamento pluriennale privo di capitolo nel nuovo bilancio'
      	from siac_t_bil_elem elem
      	where fase.fase_bil_elab_id=faseBilElabId
      	and   fase.fase_bil_gest_ape_pluri_id between minId and maxId
      	and   fase.movgest_tipo=movGestTsTipoCode
     	and   fase.fl_elab='N'
        and   fase.fase_bil_gest_ape_pluri_id between minId and maxId
     	and   elem.ente_proprietario_id=fase.ente_proprietario_id
        and   elem.elem_id=fase.elem_orig_id
    	and   fase.data_cancellazione is null
    	and   fase.validita_fine is null
     	and   elem.data_cancellazione is null
     	and   elem.validita_fine is null
        and   not exists (select 1 from siac_t_bil_elem elemnew
                          where elemnew.ente_proprietario_id=elem.ente_proprietario_id
                          and   elemnew.elem_tipo_id=elem.elem_tipo_id
                          and   elemnew.bil_id=bilancioId
                          and   elemnew.elem_code=elem.elem_code
                          and   elemnew.elem_code2=elem.elem_code2
                          and   elemnew.elem_code3=elem.elem_code3
                          and   elemnew.data_cancellazione is null
                          and   elemnew.validita_fine is null
                         );


        strMessaggio:='Aggiornamento fase_bil_t_gest_apertura_pluri per scarti movimenti privi di relativo capitolo nel nuovo bilancio. FINE.';
	   	codResult:=null;
		insert into fase_bil_t_elaborazione_log
	    (fase_bil_elab_id,fase_bil_elab_log_operazione,
       	 validita_inizio, login_operazione, ente_proprietario_id
      	)
      	values
      	(faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
      	returning fase_bil_elab_log_id into codResult;

      	if codResult is null then
     		raise exception ' Errore in inserimento LOG.';
      	end if;

     end if;
     -- se sub, verifico prima se i relativi padri sono stati elaborati e creati
     -- se non sono stati ribaltati scarto  i relativi sub per escluderli da elaborazione

     if tipoMovGestTs=MOVGEST_TS_S_TIPO then
      strMessaggio:='Aggiornamento fase_bil_t_gest_apertura_pluri per scarti sub privi di relativo padre ribaltato. INIZIO.';
	  codResult:=null;
	  insert into fase_bil_t_elaborazione_log
      (fase_bil_elab_id,fase_bil_elab_log_operazione,
       validita_inizio, login_operazione, ente_proprietario_id
      )
      values
      (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
      returning fase_bil_elab_log_id into codResult;

      if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
      end if;

      update fase_bil_t_gest_apertura_pluri fase
      set fl_elab='X',
          scarto_code='SUB1',
          scarto_desc='Movimento sub impegno/accertamento pluriennale privo di impegno/accertamento pluri nel nuovo bilancio'
      from siac_t_movgest mprec
      where fase.fase_bil_elab_id=faseBilElabId
      and   fase.fase_bil_gest_ape_pluri_id between minId and maxId
      and   fase.movgest_tipo=movGestTsTipoCode
      and   fase.fl_elab='N'
      and   fase.fase_bil_gest_ape_pluri_id between minId and maxId
      and   mprec.ente_proprietario_id=fase.ente_proprietario_id
      and   mprec.movgest_id=fase.movgest_orig_id
      and   fase.data_cancellazione is null
      and   fase.validita_fine is null
      and   mprec.data_cancellazione is null
      and   mprec.validita_fine is null
      and   not exists (select 1 from siac_t_movgest mnew
                        where mnew.ente_proprietario_id=mprec.ente_proprietario_id
                        and   mnew.movgest_tipo_id=mprec.movgest_tipo_id
                        and   mnew.bil_id=bilancioId
                        and   mnew.movgest_anno=mprec.movgest_anno
                        and   mnew.movgest_numero=mprec.movgest_numero
                        and   mnew.data_cancellazione is null
                        and   mnew.validita_fine is null
                        );
      strMessaggio:='Aggiornamento fase_bil_t_gest_apertura_pluri per scarti sub privi di relativo padre ribaltato. FINE.';
	  codResult:=null;
	  insert into fase_bil_t_elaborazione_log
      (fase_bil_elab_id,fase_bil_elab_log_operazione,
       validita_inizio, login_operazione, ente_proprietario_id
      )
      values
      (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
      returning fase_bil_elab_log_id into codResult;

      if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
      end if;

     end if;

     strMessaggio:='Inizio ciclo per tipoMovGest='||tipoMovGest||' tipoMovGestTs='||tipoMovGestTs||'.';
     codResult:=null;
	 insert into fase_bil_t_elaborazione_log
     (fase_bil_elab_id,fase_bil_elab_log_operazione,
      validita_inizio, login_operazione, ente_proprietario_id
     )
     values
     (faseBilElabId,strMessaggio,clock_timestamp(),loginOperazione,enteProprietarioId)
     returning fase_bil_elab_log_id into codResult;

     if codResult is null then
     	raise exception ' Errore in inserimento LOG.';
     end if;


     for movGestRec in
     (select tipo.movgest_tipo_code,
     		 m.*,
             tstipo.movgest_ts_tipo_code,
             ts.*,
             fase.fase_bil_gest_ape_pluri_id,
             fase.movgest_orig_id,
             fase.movgest_orig_ts_id,
             fase.elem_orig_id,
             mpadre.movgest_id movgest_id_new,
             tspadre.movgest_ts_id movgest_ts_id_padre_new
      from  fase_bil_t_gest_apertura_pluri fase
             join siac_t_movgest m
               left outer join
               ( siac_t_movgest mpadre join  siac_t_movgest_ts tspadre
                   on (tspadre.movgest_id=mpadre.movgest_id
                   and tspadre.movgest_ts_tipo_id=tipoMovGestTsTId
                   and tspadre.data_cancellazione is null
                   and tspadre.validita_fine is null)
                )
                on (mpadre.movgest_anno=m.movgest_anno
                and mpadre.movgest_numero=m.movgest_numero
                and mpadre.bil_id=bilancioId
                and mpadre.ente_proprietario_id=m.ente_proprietario_id
                and mpadre.movgest_tipo_id = tipoMovGestId
                and mpadre.data_cancellazione is null
                and mpadre.validita_fine is null)
             on   ( m.ente_proprietario_id=fase.ente_proprietario_id  and   m.movgest_id=fase.movgest_orig_id),
            siac_d_movgest_tipo tipo,
            siac_t_movgest_ts ts,
            siac_d_movgest_ts_tipo tstipo
      where fase.fase_bil_elab_id=faseBilElabId
          and   tipo.ente_proprietario_id=fase.ente_proprietario_id
          and   tipo.movgest_tipo_code=tipoMovGest
          and   tstipo.ente_proprietario_id=fase.ente_proprietario_id
          and   tstipo.movgest_ts_tipo_code=tipoMovGestTs
          and   m.ente_proprietario_id=fase.ente_proprietario_id
          and   m.movgest_id=fase.movgest_orig_id
          and   m.movgest_tipo_id=tipo.movgest_tipo_id
          and   ts.ente_proprietario_id=fase.ente_proprietario_id
          and   ts.movgest_ts_id=fase.movgest_orig_ts_id
          and   ts.movgest_ts_tipo_id=tstipo.movgest_ts_tipo_id
          and   fase.fase_bil_gest_ape_pluri_id between minId and maxId
          and   fase.fl_elab='N'
          and   fase.data_cancellazione is null
          and   fase.validita_fine is null
          order by fase_bil_gest_ape_pluri_id
     )
     loop

     	movGestTsIdRet:=null;
        movGestIdRet:=null;
        codResult:=null;
		elemNewId:=null;

        strMessaggio:='Movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTsTipo='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||'.';
         raise notice 'strMessaggio=%  movGestRec.movgest_id_new=%', strMessaggio, movGestRec.movgest_id_new;
		insert into fase_bil_t_elaborazione_log
	    (fase_bil_elab_id,fase_bil_elab_log_operazione,
    	 validita_inizio, login_operazione, ente_proprietario_id
	    )
	    values
    	(faseBilElabId,strMessaggio||' INIZIO.',clock_timestamp(),loginOperazione,enteProprietarioId)
	    returning fase_bil_elab_log_id into codResult;

	    if codResult is null then
    	 	raise exception ' Errore in inserimento LOG.';
	    end if;

    	codResult:=null;
        if movGestRec.movgest_id_new is null then
      	 strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                       ' anno='||movGestRec.movgest_anno||
                       ' numero='||movGestRec.movgest_numero||' [siac_t_movgest].';
     	 insert into siac_t_movgest
         (movgest_anno,
		  movgest_numero,
		  movgest_desc,
		  movgest_tipo_id,
		  bil_id,
		  validita_inizio,
	      ente_proprietario_id,
	      login_operazione,
	      parere_finanziario,
	      parere_finanziario_data_modifica,
	      parere_finanziario_login_operazione)
         values
         (movGestRec.movgest_anno,
		  movGestRec.movgest_numero,
		  movGestRec.movgest_desc,
		  movGestRec.movgest_tipo_id,
		  bilancioId,
		  dataInizioVal,
	      enteProprietarioId,
	      loginOperazione,
	      movGestRec.parere_finanziario,
	      movGestRec.parere_finanziario_data_modifica,
	      movGestRec.parere_finanziario_login_operazione
         )
         returning movgest_id into movGestIdRet;
         if movGestIdRet is null then
           strMessaggioTemp:=strMessaggio;
           codResult:=-1;
         end if;
			raise notice 'dopo inserimento siac_t_movgest movGestIdRet=%',movGestIdRet;
		 if codResult is null then
         strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                        ' anno='||movGestRec.movgest_anno||
                        ' numero='||movGestRec.movgest_numero||'. Lettura elem_id bilancio corrente.';

         raise notice 'strMessaggio=%',strMessaggio;

         select  new.elem_id into elemNewId
         from siac_r_movgest_bil_elem r,
              siac_t_bil_elem prec, siac_t_bil_elem new
         where r.movgest_id=movGestRec.movgest_orig_id
         and   prec.elem_id=r.elem_id
         and   new.elem_code=prec.elem_code
         and   new.elem_code2=prec.elem_code2
         and   new.elem_code3=prec.elem_code3
         and   prec.elem_tipo_id=new.elem_tipo_id
         and   prec.bil_id=bilancioPrecId
         and   new.bil_id=bilancioId
         and   r.data_cancellazione is null
         and   r.validita_fine is null
         and   prec.data_cancellazione is null
         and   prec.validita_fine is null
         and   new.data_cancellazione is null
         and   new.validita_fine is null;
         if elemNewId is null then
	        codResult:=-1;
            strMessaggioTemp:=strMessaggio;
         end if;
		 raise notice 'elemNewId=%',elemNewId;
		 if codResult is null then
          	  strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
             	            ' anno='||movGestRec.movgest_anno||
                 	        ' numero='||movGestRec.movgest_numero||' [siac_r_movgest_bil_elem]';
	          insert into siac_r_movgest_bil_elem
    	      (movgest_id,
	    	   elem_id,
	           validita_inizio,
    	       ente_proprietario_id,
        	   login_operazione)
	          values
    	      (movGestIdRet,
        	   elemNewId,
	           dataInizioVal,
    	       enteProprietarioId,
        	   loginOperazione
		       )
    	       returning movgest_atto_amm_id into codResult;
        	   if codResult is null then
            	codResult:=-1;
	            strMessaggioTemp:=strMessaggio;
               else codResult:=null;
    	       end if;
         end if;
        end if;
      else
        movGestIdRet:=movGestRec.movgest_id_new;
        strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||'. Lettura elem_id bilancio corrente.';
        select  r.elem_id into elemNewId
        from siac_r_movgest_bil_elem r
        where r.movgest_id=movGestIdRet
        and   r.data_cancellazione is null
        and   r.validita_fine is null;

        if elemNewId is null then
	        codResult:=-1;
            strMessaggioTemp:=strMessaggio;
        end if;
      end if;


      if codResult is null then
   	   strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                     ' anno='||movGestRec.movgest_anno||
                     ' numero='||movGestRec.movgest_numero||
                     ' movGestTipoTs='||tipoMovGestTs||
                     ' sub='||movGestRec.movgest_ts_code||
                     ' [siac_t_movgest_ts].';
		raise notice 'strMessaggio=% ',strMessaggio;
/*        dataEmissione:=( (2018::varchar||'-01-01')
            ||' ' ||EXTRACT(hour FROM clock_timestamp())
            ||':'|| EXTRACT(minute FROM clock_timestamp())
            ||':'||EXTRACT(Second FROM clock_timestamp())::integer+random()
           )::timestamp;*/

        -- 21.02.2019 Sofia SIAC-6683
        dataEmissione:=( (annoBilancio::varchar||'-01-01')
            ||' ' ||EXTRACT(hour FROM clock_timestamp())
            ||':'|| EXTRACT(minute FROM clock_timestamp())
            ||':'||EXTRACT(Second FROM clock_timestamp())::integer+random()
           )::timestamp;
        raise notice 'dataEmissione=% ',dataEmissione;

        insert into siac_t_movgest_ts
        ( movgest_ts_code,
          movgest_ts_desc,
          movgest_id,
	      movgest_ts_tipo_id,
          movgest_ts_id_padre,
          movgest_ts_scadenza_data,
	      ordine,
		  livello,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione,
	      login_creazione,
		  siope_tipo_debito_id,
		  siope_assenza_motivazione_id

        )
        values
        ( movGestRec.movgest_ts_code,
          movGestRec.movgest_ts_desc,
          movGestIdRet,    -- inserito se I/A, per SUB ricavato
          movGestRec.movgest_ts_tipo_id,
          movGestRec.movgest_ts_id_padre_new,  -- valorizzato se SUB
          movGestRec.movgest_ts_scadenza_data,
          movGestRec.ordine,
          movGestRec.livello,
--          (case when tipoMovGestTs=MOVGEST_TS_T_TIPO then dataInizioVal else dataEmissione end), -- 25.11.2016 Sofia
--          (case when tipoMovGestTs=MOVGEST_TS_T_TIPO then dataEmissione else dataInizioVal end), -- 25.11.2016 Sofia
--          dataEmissione, -- 12.04.2017 Sofia
          dataEmissione,   -- 09.02.2018 Sofia
          enteProprietarioId,
          loginOperazione,
          loginOperazione,
          movGestRec.siope_tipo_debito_id,
		  movGestRec.siope_assenza_motivazione_id
         )
        returning movgest_ts_id into  movGestTsIdRet;
        if movGestTsIdRet is null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        end if;
       end if;
        raise notice 'dopo inserimento siac_t_movgest_ts movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;
       -- siac_r_liquidazione_movgest --> x pluriennali non dovrebbe esserci legame e andrebbe ricreato cmq con il ribaltamento delle liq
       -- siac_r_ordinativo_ts_movgest_ts --> x pluriennali non dovrebbe esistere legame in ogni caso non deve essere  ribaltato
       -- siac_r_movgest_ts --> legame da creare alla conclusione del ribaltamento dei pluriennali e dei residui

       -- siac_r_movgest_ts_stato
       if codResult is null then
   	   strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                     ' anno='||movGestRec.movgest_anno||
                     ' numero='||movGestRec.movgest_numero||
                     ' movGestTipoTs='||tipoMovGestTs||
                     ' sub='||movGestRec.movgest_ts_code||
                     ' [siac_r_movgest_ts_stato].';

        insert into siac_r_movgest_ts_stato
        ( movgest_ts_id,
          movgest_stato_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.movgest_stato_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_movgest_ts_stato r, siac_d_movgest_stato stato
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   stato.movgest_stato_id=r.movgest_stato_id
          and   r.data_cancellazione is null
          and   r.validita_fine is null
          and   stato.data_cancellazione is null
          and   stato.validita_fine is null
         )
        returning movgest_stato_r_id into  codResult;
        if codResult is null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;
        raise notice 'dopo inserimento siac_r_movgest_ts_stato movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

       -- siac_t_movgest_ts_det
       if codResult is null then
   	   strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                     ' anno='||movGestRec.movgest_anno||
                     ' numero='||movGestRec.movgest_numero||
                     ' movGestTipoTs='||tipoMovGestTs||
                     ' sub='||movGestRec.movgest_ts_code||
                     ' [siac_t_movgest_ts_det].';
        raise notice ' inserimento siac_t_movgest_ts_det movGestTsIdRet=% movGestRec.movgest_orig_ts_id=%', movGestTsIdRet,movGestRec.movgest_orig_ts_id;

        -- 29.01.2018 Sofia siac-5830 - insert sostituita con le tre successive


        /*insert into siac_t_movgest_ts_det
        ( movgest_ts_id,
          movgest_ts_det_tipo_id,
	      movgest_ts_det_importo,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.movgest_ts_det_tipo_id,
           r.movgest_ts_det_importo,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_t_movgest_ts_det r
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );*/
        --returning movgest_ts_det_id into  codResult;

        -- 29.01.2018 Sofia siac-5830 - iniziale = attuale
        insert into siac_t_movgest_ts_det
        ( movgest_ts_id,
          movgest_ts_det_tipo_id,
	      movgest_ts_det_importo,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           movgestTsTipoDetIniz,
           r.movgest_ts_det_importo,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_t_movgest_ts_det r
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   r.movgest_ts_det_tipo_id=movgestTsTipoDetAtt
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );

        -- 29.01.2018 Sofia siac-5830 - attuale = attuale
        insert into siac_t_movgest_ts_det
        ( movgest_ts_id,
          movgest_ts_det_tipo_id,
	      movgest_ts_det_importo,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.movgest_ts_det_tipo_id,
           r.movgest_ts_det_importo,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_t_movgest_ts_det r
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   r.movgest_ts_det_tipo_id=movgestTsTipoDetAtt
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );

        -- 29.01.2018 Sofia siac-5830 - utilizzabile = attuale
        insert into siac_t_movgest_ts_det
        ( movgest_ts_id,
          movgest_ts_det_tipo_id,
	      movgest_ts_det_importo,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           movgestTsTipoDetUtil,
           r.movgest_ts_det_importo,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_t_movgest_ts_det r
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   r.movgest_ts_det_tipo_id=movgestTsTipoDetAtt
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );

		select 1 into codResult
        from siac_t_movgest_ts_det det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;

        raise notice 'dopo inserimento siac_t_movgest_ts_det movGestTsIdRet=% codResult=%', movGestTsIdRet,codResult;

        if codResult is null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       -- siac_r_movgest_class
       if codResult is null then
   	   strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                     ' anno='||movGestRec.movgest_anno||
                     ' numero='||movGestRec.movgest_numero||
                     ' movGestTipoTs='||tipoMovGestTs||
                     ' sub='||movGestRec.movgest_ts_code||
                     ' [siac_r_movgest_class].';

        insert into siac_r_movgest_class
        ( movgest_ts_id,
          classif_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.classif_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_movgest_class r, siac_t_class class
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   class.classif_id=r.classif_id
          and   r.data_cancellazione is null
          and   r.validita_fine is null
          and   class.data_cancellazione is null
          and   class.validita_fine is null
         );
--        returning movgest_classif_id into  codResult;

        select 1 into codResult
        from siac_r_movgest_class det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;


        if codResult is null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
         else codResult:=null;
         end if;
       end if;

       -- siac_r_movgest_ts_attr
       if codResult is null then
   	    strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTipoTs='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||
                      ' [siac_r_movgest_ts_attr].';

        insert into siac_r_movgest_ts_attr
        ( movgest_ts_id,
          attr_id,
          tabella_id,
		  boolean,
	      percentuale,
		  testo,
	      numerico,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
          movGestTsIdRet,
          r.attr_id,
          r.tabella_id,
		  r.boolean,
	      r.percentuale,
		  r.testo,
	      r.numerico,
          dataInizioVal,
          enteProprietarioId,
          loginOperazione
          from siac_r_movgest_ts_attr r, siac_t_attr attr
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   attr.attr_id=r.attr_id
          and   r.data_cancellazione is null
          and   r.validita_fine is null
          and   attr.data_cancellazione is null
          and   attr.validita_fine is null
         );
        --returning bil_elem_attr_id into  codResult;

		select 1 into codResult
        from siac_r_movgest_ts_attr det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;

        if codResult is null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       -- siac_r_movgest_ts_atto_amm
       if codResult is null then
   	    strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTipoTs='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||
                      ' [siac_r_movgest_ts_atto_amm].';

        insert into siac_r_movgest_ts_atto_amm
        ( movgest_ts_id,
          attoamm_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.attoamm_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_movgest_ts_atto_amm r, siac_t_atto_amm atto
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   atto.attoamm_id=r.attoamm_id
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         -- and   atto.data_cancellazione is null 15.02.2017 Sofia HD-INC000001535447
         -- and   atto.validita_fine is null
         );

        /*select 1 into codResult
        from siac_r_movgest_ts_atto_amm det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;

        --returning movgest_atto_amm_id into  codResult;
        if codResult is null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
         end if;
       end if;*/

       -- se movimento provvisorio atto_amm potrebbe non esserci
	   select 1  into codResult
       from siac_r_movgest_ts_atto_amm det1
       where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
       and   det1.data_cancellazione is null
       and   det1.validita_fine is null
       and   not exists (select 1 from siac_r_movgest_ts_atto_amm det
			             where det.movgest_ts_id=movGestTsIdRet
					       and   det.data_cancellazione is null
					       and   det.validita_fine is null
					       and   det.login_operazione=loginOperazione);

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       -- siac_r_movgest_ts_sog
       if codResult is null then
   	    strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTipoTs='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||
                      ' [siac_r_movgest_ts_sog].';

        insert into siac_r_movgest_ts_sog
        ( movgest_ts_id,
          soggetto_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.soggetto_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_movgest_ts_sog r,siac_t_soggetto sogg
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   sogg.soggetto_id=r.soggetto_id
          and   sogg.data_cancellazione is null
          and   sogg.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );
        --returning movgest_ts_sog_id into  codResult;

        /*select 1 into codResult
        from siac_r_movgest_ts_sog det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;*/

 		select 1  into codResult
        from siac_r_movgest_ts_sog det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_movgest_ts_sog det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       -- siac_r_movgest_ts_sogclasse
       if codResult is null then
   	    strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTipoTs='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||
                      ' [siac_r_movgest_ts_sogclasse].';

        insert into siac_r_movgest_ts_sogclasse
        ( movgest_ts_id,
          soggetto_classe_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.soggetto_classe_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_movgest_ts_sogclasse r,siac_d_soggetto_classe classe
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   classe.soggetto_classe_id=r.soggetto_classe_id
          and   classe.data_cancellazione is null
          and   classe.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );
        --returning soggetto_classe_id into  codResult;

        select 1  into codResult
        from siac_r_movgest_ts_sogclasse det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_movgest_ts_sogclasse det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       -- 03.05.2019 Sofia siac-6255
       if codResult is null then
         -- siac_r_movgest_ts_programma
         if faseOp=G_FASE then
          strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                        ' anno='||movGestRec.movgest_anno||
                        ' numero='||movGestRec.movgest_numero||
                        ' movGestTipoTs='||tipoMovGestTs||
                        ' sub='||movGestRec.movgest_ts_code||
                        ' [siac_r_movgest_ts_programma].';

          insert into siac_r_movgest_ts_programma
          ( movgest_ts_id,
            programma_id,
            validita_inizio,
            ente_proprietario_id,
            login_operazione
          )
          ( select
             movGestTsIdRet,
             pnew.programma_id,
             dataInizioVal,
             enteProprietarioId,
             loginOperazione
            from siac_r_movgest_ts_programma r,siac_t_programma prog,
                 siac_t_programma pnew, siac_d_programma_tipo tipo,
                 siac_r_programma_stato rs,siac_d_programma_stato stato
            where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
            and   prog.programma_id=r.programma_id
            and   tipo.ente_proprietario_id=prog.ente_proprietario_id
            and   tipo.programma_tipo_code='G'
            and   pnew.programma_tipo_id=tipo.programma_tipo_id
            and   pnew.bil_id=bilancioId
            and   pnew.programma_code=prog.programma_code
            and   rs.programma_id=pnew.programma_id
            and   stato.programma_stato_id=rs.programma_stato_id
            and   stato.programma_stato_code='VA'
            and   prog.data_cancellazione is null
            and   prog.validita_fine is null
            and   r.data_cancellazione is null
            and   r.validita_fine is null
            and   pnew.data_cancellazione is null
            and   pnew.validita_fine is null
            and   rs.data_cancellazione is null
            and   rs.validita_fine is null
           );
          --returning movgest_ts_programma_id into  codResult;
          /*select 1 into codResult
          from siac_r_movgest_ts_programma det
          where det.movgest_ts_id=movGestTsIdRet
          and   det.data_cancellazione is null
          and   det.validita_fine is null
          and   det.login_operazione=loginOperazione;*/

		  -- 03.05.2019 Sofia siac-6255
          /*
          insert into siac_r_movgest_ts_programma
        ( movgest_ts_id,
          programma_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.programma_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_movgest_ts_programma r,siac_t_programma prog
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   prog.programma_id=r.programma_id
          and   prog.data_cancellazione is null
          and   prog.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );
          select 1  into codResult
          from siac_r_movgest_ts_programma det1
          where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   det1.data_cancellazione is null
          and   det1.validita_fine is null
          and   not exists (select 1 from siac_r_movgest_ts_programma det
                            where det.movgest_ts_id=movGestTsIdRet
                              and   det.data_cancellazione is null
                              and   det.validita_fine is null
                              and   det.login_operazione=loginOperazione);

          if codResult is not null then
           codResult:=-1;
           strMessaggioTemp:=strMessaggio;
          else codResult:=null;
          end if;*/

          -- siac_r_movgest_ts_cronop_elem
          strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                        ' anno='||movGestRec.movgest_anno||
                        ' numero='||movGestRec.movgest_numero||
                        ' movGestTipoTs='||tipoMovGestTs||
                        ' sub='||movGestRec.movgest_ts_code||
                        ' solo cronop [siac_r_movgest_ts_cronop_elem].';

          insert into siac_r_movgest_ts_cronop_elem
          (
          	movgest_ts_id,
            cronop_id,
            validita_inizio,
            ente_proprietario_id,
            login_operazione
          )
          select
             movGestTsIdRet,
             cnew.cronop_id,
             dataInizioVal,
             enteProprietarioId,
             loginOperazione
            from siac_r_movgest_ts_cronop_elem r,
                 siac_t_cronop cronop,
                 siac_t_programma prog,
                 siac_t_programma pnew, siac_d_programma_tipo tipo,
                 siac_r_programma_stato rs,siac_d_programma_stato stato,
                 siac_t_cronop cnew, siac_r_cronop_stato rsc, siac_d_cronop_stato cstato
            where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
            and   r.cronop_elem_id is null
            and   cronop.cronop_id=r.cronop_id
            and   prog.programma_id=cronop.programma_id
            and   tipo.ente_proprietario_id=prog.ente_proprietario_id
            and   tipo.programma_tipo_code='G'
            and   pnew.programma_tipo_id=tipo.programma_tipo_id
            and   pnew.programma_code=prog.programma_code
            and   cnew.programma_id=pnew.programma_id
            and   cnew.bil_id=bilancioId
            and   cnew.cronop_code=cronop.cronop_code
            and   rs.programma_id=pnew.programma_id
            and   stato.programma_stato_id=rs.programma_stato_id
            and   stato.programma_stato_code='VA'
            and   rsc.cronop_id=cnew.cronop_id
            and   cstato.cronop_stato_id=rsc.cronop_stato_id
            and   cstato.cronop_stato_code='VA'
            and   r.data_cancellazione is null
            and   r.validita_fine is null
            and   prog.data_cancellazione is null
            and   prog.validita_fine is null
            and   cronop.data_cancellazione is null
            and   cronop.validita_fine is null
            and   pnew.data_cancellazione is null
            and   pnew.validita_fine is null
            and   cnew.data_cancellazione is null
            and   cnew.validita_fine is null
            and   rs.data_cancellazione is null
            and   rs.validita_fine is null
            and   rsc.data_cancellazione is null
            and   rsc.validita_fine is null;

          strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                        ' anno='||movGestRec.movgest_anno||
                        ' numero='||movGestRec.movgest_numero||
                        ' movGestTipoTs='||tipoMovGestTs||
                        ' sub='||movGestRec.movgest_ts_code||
                        ' dettaglio cronop [siac_r_movgest_ts_cronop_elem].';

          insert into siac_r_movgest_ts_cronop_elem
          (
          	movgest_ts_id,
            cronop_id,
            cronop_elem_id,
            validita_inizio,
            ente_proprietario_id,
            login_operazione
          )
          select
             movGestTsIdRet,
             celem_new.cronop_id,
             celem_new.cronop_elem_id,
             dataInizioVal,
             enteProprietarioId,
             loginOperazione
            from siac_r_movgest_ts_cronop_elem r,siac_t_cronop_elem celem,
                 siac_t_cronop_elem_det det,
                 siac_t_cronop cronop,
                 siac_t_programma prog,
                 siac_t_programma pnew, siac_d_programma_tipo tipo,
                 siac_r_programma_stato rs,siac_d_programma_stato stato,
                 siac_t_cronop cnew, siac_r_cronop_stato rsc, siac_d_cronop_stato cstato,
                 siac_t_cronop_elem celem_new,siac_t_cronop_elem_det det_new
            where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
            and   r.cronop_elem_id is not null
            and   celem.cronop_elem_id=r.cronop_elem_id
            and   det.cronop_elem_id=celem.cronop_elem_id
            and   cronop.cronop_id=celem.cronop_id
            and   prog.programma_id=cronop.programma_id
            and   tipo.ente_proprietario_id=prog.ente_proprietario_id
            and   tipo.programma_tipo_code='G'
            and   pnew.programma_tipo_id=tipo.programma_tipo_id
            and   pnew.programma_code=prog.programma_code
            and   cnew.programma_id=pnew.programma_id
            and   cnew.bil_id=bilancioId
            and   celem_new.cronop_id=cnew.cronop_id
            and   det_new.cronop_elem_id=celem_new.cronop_elem_id
            and   cnew.cronop_code=cronop.cronop_code
            and   coalesce(celem_new.cronop_elem_code,'')=coalesce(celem.cronop_elem_code,'')
            and   coalesce(celem_new.cronop_elem_code2,'')=coalesce(celem.cronop_elem_code2,'')
            and   coalesce(celem_new.cronop_elem_code3,'')=coalesce(celem.cronop_elem_code3,'')
            and   coalesce(celem_new.elem_tipo_id,0)=coalesce(celem.elem_tipo_id,0)
            and   coalesce(celem_new.cronop_elem_desc,'')=coalesce(celem.cronop_elem_desc,'')
            and   coalesce(celem_new.cronop_elem_desc2,'')=coalesce(celem.cronop_elem_desc2,'')
            and   coalesce(det_new.periodo_id,0)=coalesce(det.periodo_id,0)
		    and   coalesce(det_new.cronop_elem_det_importo,0)=coalesce(det.cronop_elem_det_importo,0)
            and   coalesce(det_new.cronop_elem_det_desc,'')=coalesce(det.cronop_elem_det_desc,'')
	        and   coalesce(det_new.anno_entrata,'')=coalesce(det.anno_entrata,'')
	        and   coalesce(det_new.elem_det_tipo_id,0)=coalesce(det.elem_det_tipo_id,0)
            and   rs.programma_id=pnew.programma_id
            and   stato.programma_stato_id=rs.programma_stato_id
            and   stato.programma_stato_code='VA'
            and   rsc.cronop_id=cnew.cronop_id
            and   cstato.cronop_stato_id=rsc.cronop_stato_id
            and   cstato.cronop_stato_code='VA'
            and   exists
            (
              select 1
              from siac_r_cronop_elem_class rc,siac_t_class c,siac_d_class_tipo tipo
              where rc.cronop_elem_id=celem.cronop_elem_id
              and   c.classif_id=rc.classif_id
              and   tipo.classif_tipo_id=c.classif_tipo_id
              and   exists
              (
                select 1
                from siac_r_cronop_elem_class rc1, siac_t_class c1
                where rc1.cronop_elem_id=celem_new.cronop_elem_id
                and   c1.classif_id=rc1.classif_id
                and   c1.classif_tipo_id=tipo.classif_tipo_id
                and   c1.classif_code=c.classif_code
                and   rc1.data_cancellazione is null
                and   rc1.validita_fine is null
              )
              and   rc.data_cancellazione is null
              and   rc.validita_fine is null
            )
            and  not exists
            (
              select 1
              from siac_r_cronop_elem_class rc,siac_t_class c,siac_d_class_tipo tipo
              where rc.cronop_elem_id=celem.cronop_elem_id
              and   c.classif_id=rc.classif_id
              and   tipo.classif_tipo_id=c.classif_tipo_id
              and   not exists
              (
                select 1
                from siac_r_cronop_elem_class rc1, siac_t_class c1
                where rc1.cronop_elem_id=celem_new.cronop_elem_id
                and   c1.classif_id=rc1.classif_id
                and   c1.classif_tipo_id=tipo.classif_tipo_id
                and   c1.classif_code=c.classif_code
                and   rc1.data_cancellazione is null
                and   rc1.validita_fine is null
              )
              and   rc.data_cancellazione is null
              and   rc.validita_fine is null
            )
            and   r.data_cancellazione is null
            and   r.validita_fine is null
            and   prog.data_cancellazione is null
            and   prog.validita_fine is null
            and   cronop.data_cancellazione is null
            and   cronop.validita_fine is null
            and   celem.data_cancellazione is null
            and   celem.validita_fine is null
            and   det.data_cancellazione is null
            and   det.validita_fine is null
            and   pnew.data_cancellazione is null
            and   pnew.validita_fine is null
            and   cnew.data_cancellazione is null
            and   cnew.validita_fine is null
            and   celem_new.data_cancellazione is null
            and   celem_new.validita_fine is null
            and   det_new.data_cancellazione is null
            and   det_new.validita_fine is null
            and   rs.data_cancellazione is null
            and   rs.validita_fine is null
            and   rsc.data_cancellazione is null
            and   rsc.validita_fine is null;
         end if;
       end if;
       -- 03.05.2019 Sofia siac-6255

       -- siac_r_mutuo_voce_movgest
       if codResult is null then
   	    strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTipoTs='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||
                      ' [siac_r_mutuo_voce_movgest].';

        insert into siac_r_mutuo_voce_movgest
        ( movgest_ts_id,
          mut_voce_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.mut_voce_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_mutuo_voce_movgest r,siac_t_mutuo_voce voce
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   voce.mut_voce_id=r.mut_voce_id
          and   voce.data_cancellazione is null
          and   voce.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );
        --returning mut_voce_movgest_id into  codResult;

        /*select 1 into codResult
        from siac_r_mutuo_voce_movgest det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;*/

		select 1  into codResult
        from siac_r_mutuo_voce_movgest det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_mutuo_voce_movgest det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       -- inserire il resto dei record legati al TS
       -- verificare quali sono da ribaltare e verificare se usare

       -- siac_r_giustificativo_movgest
       /* cassa economale - da non ricreare come da indicazioni di Irene
       if codResult is null then
   	    strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTipoTs='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||
                      ' [siac_r_giustificativo_movgest].';

        insert into siac_r_giustificativo_movgest
        ( movgest_ts_id,
          gst_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.gst_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_giustificativo_movgest r,siac_t_giustificativo gst
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   gst.gst_id=r.gst_id
          and   gst.data_cancellazione is null
          and   gst.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );
        --returning gstmovgest_id into  codResult;

    /*    select 1 into codResult
        from siac_r_giustificativo_movgest det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;*/

		select 1  into codResult
        from siac_r_giustificativo_movgest det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_giustificativo_movgest det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if; */


       -- siac_r_cartacont_det_movgest_ts
       /* non si gestisce in seguito ad indicazioni di Annalina
       if codResult is null then
   	    strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTipoTs='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||
                      ' [siac_r_cartacont_det_movgest_ts].';

        insert into siac_r_cartacont_det_movgest_ts
        ( movgest_ts_id,
          cartac_det_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.cartac_det_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_cartacont_det_movgest_ts r,siac_t_cartacont_det carta
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   carta.cartac_det_id=r.cartac_det_id
          and   carta.data_cancellazione is null
          and   carta.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );
        --returning subdoc_movgest_ts_id into  codResult;

        /*select 1 into codResult
        from siac_r_cartacont_det_movgest_ts det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;*/


		select 1  into codResult
        from siac_r_cartacont_det_movgest_ts det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_cartacont_det_movgest_ts det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if; */

       -- siac_r_causale_movgest_ts
       if codResult is null then
   	    strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTipoTs='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||
                      ' [siac_r_causale_movgest_ts].';

        insert into siac_r_causale_movgest_ts
        ( movgest_ts_id,
          caus_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.caus_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_causale_movgest_ts r,siac_d_causale caus
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   caus.caus_id=r.caus_id
          and   caus.data_cancellazione is null
          and   caus.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );
        --returning caus_movgest_ts_id into  codResult;

        /*select 1 into codResult
        from siac_r_causale_movgest_ts det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;*/

		select 1  into codResult
        from siac_r_causale_movgest_ts det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_causale_movgest_ts det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       -- siac_r_fondo_econ_movgest
       /* cassa economale - da non ribaltare come da indicazioni di Irene
       if codResult is null then
   	    strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTipoTs='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||
                      ' [siac_r_causale_movgest_ts].';

        insert into siac_r_fondo_econ_movgest
        ( movgest_ts_id,
          fondoecon_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.fondoecon_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_fondo_econ_movgest r,siac_t_fondo_econ econ
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   econ.fondoecon_id=r.fondoecon_id
          and   econ.data_cancellazione is null
          and   econ.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );
        --returning liq_movgest_id into  codResult;

       /* select 1 into codResult
        from siac_r_fondo_econ_movgest det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;*/

		select 1  into codResult
        from siac_r_fondo_econ_movgest det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_fondo_econ_movgest det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if; */

       -- siac_r_richiesta_econ_movgest
       /* cassa economale - da non ribaltare come da indicazioni di Irene
       if codResult is null then
   	    strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTipoTs='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||
                      ' [siac_r_richiesta_econ_movgest].';

        insert into siac_r_richiesta_econ_movgest
        ( movgest_ts_id,
          ricecon_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.ricecon_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_richiesta_econ_movgest r,siac_t_richiesta_econ econ
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   econ.ricecon_id=r.ricecon_id
          and   econ.data_cancellazione is null
          and   econ.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );
        --returning riceconsog_id into  codResult;

       /* select 1 into codResult
        from siac_r_richiesta_econ_movgest det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;*/

		select 1  into codResult
        from siac_r_richiesta_econ_movgest det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_richiesta_econ_movgest det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if; */

       -- siac_r_subdoc_movgest_ts
       if codResult is null then
   	    strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTipoTs='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||
                      ' [siac_r_subdoc_movgest_ts].';

        insert into siac_r_subdoc_movgest_ts
        ( movgest_ts_id,
          subdoc_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.subdoc_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_subdoc_movgest_ts r,siac_t_subdoc sub
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   sub.subdoc_id=r.subdoc_id
          and   sub.data_cancellazione is null
          and   sub.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );
        --returning subdoc_movgest_ts_id into  codResult;

       /* select 1 into codResult
        from siac_r_subdoc_movgest_ts det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;*/

		select 1  into codResult
        from siac_r_subdoc_movgest_ts det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_subdoc_movgest_ts det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);

        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

       -- siac_r_predoc_movgest_ts
	   if codResult is null then
   	    strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTipoTs='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||
                      ' [siac_r_predoc_movgest_ts].';

        insert into siac_r_predoc_movgest_ts
        ( movgest_ts_id,
          predoc_id,
	      validita_inizio,
	      ente_proprietario_id,
          login_operazione
        )
        ( select
           movGestTsIdRet,
           r.predoc_id,
           dataInizioVal,
           enteProprietarioId,
           loginOperazione
          from siac_r_predoc_movgest_ts r,siac_t_predoc sub
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   sub.predoc_id=r.predoc_id
          and   sub.data_cancellazione is null
          and   sub.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null
         );
        --returning predoc_movgest_ts_id into  codResult;

        /*select 1 into codResult
        from siac_r_predoc_movgest_ts det
        where det.movgest_ts_id=movGestTsIdRet
        and   det.data_cancellazione is null
        and   det.validita_fine is null
        and   det.login_operazione=loginOperazione;*/

		select 1  into codResult
        from siac_r_predoc_movgest_ts det1
        where det1.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   det1.data_cancellazione is null
        and   det1.validita_fine is null
        and   not exists (select 1 from siac_r_predoc_movgest_ts det
				          where det.movgest_ts_id=movGestTsIdRet
					        and   det.data_cancellazione is null
					        and   det.validita_fine is null
					        and   det.login_operazione=loginOperazione);


        if codResult is not null then
       	 codResult:=-1;
         strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;


       -- cancellazione logica relazioni anno precedente
       -- siac_r_cartacont_det_movgest_ts
/*  non si gestisce in seguito ad indicazioni con Annalina
       if codResult is null then
        strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTipoTs='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||
                      ' . Cancellazione siac_r_cartacont_det_movgest_ts anno bilancio precedente.';

        update siac_r_cartacont_det_movgest_ts r
        set  data_cancellazione=dataElaborazione,
             validita_fine=dataElaborazione,
             login_operazione=r.login_operazione||'-'||loginOperazione
       	from siac_t_cartacont_det carta
        where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   carta.cartac_det_id=r.cartac_det_id
        and   carta.data_cancellazione is null
        and   carta.validita_fine is null
        and   r.data_cancellazione is null
        and   r.validita_fine is null;

        select 1 into codResult
        from siac_r_cartacont_det_movgest_ts r,	siac_t_cartacont_det carta
        where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   carta.cartac_det_id=r.cartac_det_id
        and   carta.data_cancellazione is null
        and   carta.validita_fine is null
        and   r.data_cancellazione is null
        and   r.validita_fine is null;

        if codResult is not null then
        	 strMessaggioTemp:=strMessaggio;
        	 codResult:=-1;
        else codResult:=null;
        end if;
       end if; */


       -- siac_r_subdoc_movgest_ts
       /** spostato sotto
       if codResult is null then
        strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTipoTs='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||
                      '. Cancellazione siac_r_subdoc_movgest_ts anno bilancio precedente.';
        update siac_r_subdoc_movgest_ts r
        set data_cancellazione=dataElaborazione,
            validita_fine=dataElaborazione,
            login_operazione=r.login_operazione||'-'||loginOperazione
       	from siac_t_subdoc sub
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   sub.subdoc_id=r.subdoc_id
          and   sub.data_cancellazione is null
          and   sub.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null;

        select 1 into codResult
        from   siac_r_subdoc_movgest_ts r,siac_t_subdoc sub
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   sub.subdoc_id=r.subdoc_id
          and   sub.data_cancellazione is null
          and   sub.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null;
        if codResult is not null then
        	 codResult:=-1;
             strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if;

	   -- siac_r_predoc_movgest_ts
       if codResult is null then
        strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTipoTs='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||
                      '. Cancellazione siac_r_predoc_movgest_ts anno bilancio precedente.';
        update siac_r_predoc_movgest_ts r
        set  data_cancellazione=dataElaborazione,
             validita_fine=dataElaborazione,
             login_operazione=r.login_operazione||'-'||loginOperazione
       	from siac_t_predoc sub
        where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   sub.predoc_id=r.predoc_id
        and   sub.data_cancellazione is null
        and   sub.validita_fine is null
        and   r.data_cancellazione is null
        and   r.validita_fine is null;

        select 1 into codResult
        from siac_r_predoc_movgest_ts r,siac_t_predoc sub
        where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   sub.predoc_id=r.predoc_id
        and   sub.data_cancellazione is null
        and   sub.validita_fine is null
        and   r.data_cancellazione is null
        and   r.validita_fine is null;

		if codResult is not null then
             codResult:=-1;
             strMessaggioTemp:=strMessaggio;
        else codResult:=null;
        end if;
       end if; **/


       -- pulizia dati inseriti
       -- aggiornamento fase_bil_t_gest_apertura_pluri per scarto
	   if codResult=-1 then
       	/*if movGestRec.movgest_id_new is null then
        	-- siac_t_movgest
            strMessaggio:=strMessaggioTemp||
                          ' Non Effettuato. Cancellazione siac_t_movgest.';
            delete from siac_t_movgest          where movgest_id=movGestIdRet;
            -- siac_r_movgest_bil_elem
            strMessaggio:=strMessaggioTemp||
                          ' Non Effettuato. Cancellazione siac_t_movgest.';
            delete from siac_r_movgest_bil_elem where movgest_id=movGestIdRet;
        end if; spostato sotto */

        if movGestTsIdRet is not null then
         -- siac_t_movgest_ts
 	    /*strMessaggio:=strMessaggioTemp||
                      ' Non Effettuato. Cancellazione siac_t_movgest_ts.';
         delete from siac_t_movgest_ts         where movgest_ts_id=movGestTsIdRet; spostato sotto */

         -- siac_r_movgest_class
	     strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_class.';
         delete from siac_r_movgest_class    where movgest_ts_id=movGestTsIdRet;
         -- siac_r_movgest_attr
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_ts_attr.';
         delete from siac_r_movgest_ts_attr     where movgest_ts_id=movGestTsIdRet;
		 -- siac_r_movgest_ts_atto_amm
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_ts_attr.';
         delete from siac_r_movgest_ts_atto_amm     where movgest_ts_id=movGestTsIdRet;
         -- siac_r_movgest_ts_stato
		 strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_ts_stato.';
         delete from siac_r_movgest_ts_stato     where movgest_ts_id=movGestTsIdRet;
		 strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_ts_sog.';
         delete from siac_r_movgest_ts_sog      where movgest_ts_id=movGestTsIdRet;
         -- siac_r_movgest_ts_sogclasse
		 strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_ts_sogclasse.';
         delete from siac_r_movgest_ts_sogclasse      where movgest_ts_id=movGestTsIdRet;
         -- siac_t_movgest_ts_det
		 strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_t_movgest_ts_det.';
         delete from siac_t_movgest_ts_det      where movgest_ts_id=movGestTsIdRet;
         -- siac_r_movgest_ts_programma
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_movgest_ts_programma.';
         delete from siac_r_movgest_ts_programma where movgest_ts_id=movGestTsIdRet;
         -- siac_r_mutuo_voce_movgest
/*
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_mutuo_voce_movgest.';
         delete from siac_r_mutuo_voce_movgest where movgest_ts_id=movGestTsIdRet;
         -- siac_r_giustificativo_movgest
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_giustificativo_movgest.';
         delete from siac_r_giustificativo_movgest where movgest_ts_id=movGestTsIdRet;
         -- siac_r_cartacont_det_movgest_ts
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_cartacont_det_movgest_ts.';
         delete from siac_r_cartacont_det_movgest_ts where movgest_ts_id=movGestTsIdRet;
         -- siac_r_causale_movgest_ts
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_causale_movgest_ts.';
         delete from siac_r_causale_movgest_ts where movgest_ts_id=movGestTsIdRet;

		 -- siac_r_fondo_econ_movgest
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_fondo_econ_movgest.';
         delete from siac_r_fondo_econ_movgest where movgest_ts_id=movGestTsIdRet;
	     -- siac_r_richiesta_econ_movgest
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_richiesta_econ_movgest.';
         delete from siac_r_richiesta_econ_movgest where movgest_ts_id=movGestTsIdRet;*/
         -- siac_r_subdoc_movgest_ts
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_subdoc_movgest_ts.';
         delete from siac_r_subdoc_movgest_ts where movgest_ts_id=movGestTsIdRet;
         -- siac_r_predoc_movgest_ts
         strMessaggio:=strMessaggioTemp||
                       ' Non Effettuato. Cancellazione siac_r_predoc_movgest_ts.';
         delete from siac_r_predoc_movgest_ts where movgest_ts_id=movGestTsIdRet;

		 -- 03.05.2019 Sofia siac-6255
		 -- siac_r_movgest_ts_programma
         strMessaggio:=strMessaggioTemp||
                      ' Non Effettuato. Cancellazione siac_r_movgest_ts_programma.';
         delete from siac_r_movgest_ts_programma   where movgest_ts_id=movGestTsIdRet;
         -- siac_r_movgest_ts_cronop_elem
         strMessaggio:=strMessaggioTemp||
                      ' Non Effettuato. Cancellazione siac_r_movgest_ts_cronop_elem.';
         delete from siac_r_movgest_ts_cronop_elem where movgest_ts_id=movGestTsIdRet;

         -- siac_t_movgest_ts
 	     strMessaggio:=strMessaggioTemp||
                      ' Non Effettuato. Cancellazione siac_t_movgest_ts.';
         delete from siac_t_movgest_ts         where movgest_ts_id=movGestTsIdRet;
        end if;

		if movGestRec.movgest_id_new is null then
            -- siac_r_movgest_bil_elem
            strMessaggio:=strMessaggioTemp||
                          ' Non Effettuato. Cancellazione siac_t_movgest.';

            delete from siac_r_movgest_bil_elem where movgest_id=movGestIdRet;
        	-- siac_t_movgest
            strMessaggio:=strMessaggioTemp||
                          ' Non Effettuato. Cancellazione siac_t_movgest.';
            delete from siac_t_movgest          where movgest_id=movGestIdRet;

        end if;


        /*strMessaggio:=strMessaggioTemp||
                     ' Non Effettuato. Aggiornamento fase_bil_t_gest_apertura_pluri per scarto.';*/
	    strMessaggioTemp:=strMessaggio;
        strMessaggio:=strMessaggio||
                      'Aggiornamento fase_bil_t_gest_apertura_pluri per scarto.';
      	update fase_bil_t_gest_apertura_pluri fase
        set fl_elab='X',
            scarto_code='PLUR1',
            scarto_desc='Movimento impegno/accertamento sub  pluriennale non inserito.'||strMessaggioTemp
        where fase.fase_bil_gest_ape_pluri_id=movGestRec.fase_bil_gest_ape_pluri_id;

		continue;
       end if;

	   -- annullamento relazioni movimenti precedenti
       -- siac_r_subdoc_movgest_ts
       if codResult is null then
        strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTipoTs='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||
                      '. Cancellazione siac_r_subdoc_movgest_ts anno bilancio precedente.';
        update siac_r_subdoc_movgest_ts r
        set data_cancellazione=dataElaborazione,
            validita_fine=dataElaborazione,
            login_operazione=r.login_operazione||'-'||loginOperazione
       	from siac_t_subdoc sub
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   sub.subdoc_id=r.subdoc_id
          and   sub.data_cancellazione is null
          and   sub.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null;

        select 1 into codResult
        from   siac_r_subdoc_movgest_ts r,siac_t_subdoc sub
          where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
          and   sub.subdoc_id=r.subdoc_id
          and   sub.data_cancellazione is null
          and   sub.validita_fine is null
          and   r.data_cancellazione is null
          and   r.validita_fine is null;
        if codResult is not null then
        	 codResult:=-1;
             --strMessaggioTemp:=strMessaggio;
             raise exception ' Errore in aggiornamento.';
        else codResult:=null;
        end if;
       end if;

	   -- siac_r_predoc_movgest_ts
       if codResult is null then
        strMessaggio:='Inserimento movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTipoTs='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||
                      '. Cancellazione siac_r_predoc_movgest_ts anno bilancio precedente.';
        update siac_r_predoc_movgest_ts r
        set  data_cancellazione=dataElaborazione,
             validita_fine=dataElaborazione,
             login_operazione=r.login_operazione||'-'||loginOperazione
       	from siac_t_predoc sub
        where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   sub.predoc_id=r.predoc_id
        and   sub.data_cancellazione is null
        and   sub.validita_fine is null
        and   r.data_cancellazione is null
        and   r.validita_fine is null;

        select 1 into codResult
        from siac_r_predoc_movgest_ts r,siac_t_predoc sub
        where r.movgest_ts_id=movGestRec.movgest_orig_ts_id
        and   sub.predoc_id=r.predoc_id
        and   sub.data_cancellazione is null
        and   sub.validita_fine is null
        and   r.data_cancellazione is null
        and   r.validita_fine is null;

		if codResult is not null then
             codResult:=-1;
--             strMessaggioTemp:=strMessaggio;
               raise exception ' Errore in aggiornamento.';
        else codResult:=null;
        end if;
       end if;

	   strMessaggio:='Movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTsTipo='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||'. Aggiornamento fase_bil_t_gest_apertura_pluri per fine elaborazione.';
      	update fase_bil_t_gest_apertura_pluri fase
        set fl_elab='S',
            movgest_id=movGestIdRet,
            movgest_ts_id=movGestTsIdRet,
            elem_id=elemNewId,
            bil_id=bilancioId
        where fase.fase_bil_gest_ape_pluri_id=movGestRec.fase_bil_gest_ape_pluri_id;

       strMessaggio:='Movimento movGestTipo='||tipoMovGest||
                      ' anno='||movGestRec.movgest_anno||
                      ' numero='||movGestRec.movgest_numero||
                      ' movGestTsTipo='||tipoMovGestTs||
                      ' sub='||movGestRec.movgest_ts_code||'.';
       codResult:=null;
	   insert into fase_bil_t_elaborazione_log
	   (fase_bil_elab_id,fase_bil_elab_log_operazione,
        validita_inizio, login_operazione, ente_proprietario_id
	   )
	   values
       (faseBilElabId,strMessaggio||' FINE.',clock_timestamp(),loginOperazione,enteProprietarioId)
	   returning fase_bil_elab_log_id into codResult;

	   if codResult is null then
    	 	raise exception ' Errore in inserimento LOG.';
	   end if;

     end loop;


     -- aggiornamento progressivi
	 if tipoMovGestTs=MOVGEST_TS_T_TIPO then
     	 strMessaggio:='Aggiornamento progressivi.';
		 select * into aggProgressivi
   		 from fnc_aggiorna_progressivi(enteProprietarioId, tipoMovGest, loginOperazione);
	     if aggProgressivi.codresult=-1 then
			RAISE EXCEPTION ' % ', aggProgressivi.messaggioRisultato;
     	 end if;
     end if;

     -- 14.02.2017 Sofia SIAC-4425 - gestione attributo flagFrazionabile
     if tipoMovGest=IMP_MOVGEST_TIPO and tipoMovGestTs=MOVGEST_TS_T_TIPO then
        -- insert N per impegni mov.movgest_anno::integer<annoBilancio or mov.movgest_anno::integer>annoBilancio
        -- essendo pluriennali consideriamo solo mov.movgest_anno::integer>annoBilancio
        -- che non hanno ancora attributo
        strMessaggio:='Gestione attributo '||FRAZIONABILE_ATTR||'. Inserimento valore N per impegni pluriennali.';
     	INSERT INTO siac_r_movgest_ts_attr
		(
		  movgest_ts_id,
		  attr_id,
		  boolean,
		  validita_inizio,
		  ente_proprietario_id,
		  login_operazione
		)
		select ts.movgest_ts_id,
		       flagFrazAttrId,
               'N',
		       dataInizioVal,
		       ts.ente_proprietario_id,
		       loginOperazione
		from siac_t_movgest mov, siac_t_movgest_ts ts
		where mov.bil_id=bilancioId
--		and   ( mov.movgest_anno::integer<annoBilancio or mov.movgest_anno::integer>annoBilancio)
        and   mov.movgest_anno::integer>annoBilancio
		and   mov.movgest_tipo_id=tipoMovGestId
		and   ts.movgest_id=mov.movgest_id
        and   ts.movgest_ts_tipo_id=tipoMovGestTsTId
		and   not exists (select 1 from siac_r_movgest_ts_attr r1
        		          where r1.movgest_ts_id=ts.movgest_ts_id
                          and   r1.attr_id=flagFrazAttrId
                          and   r1.data_cancellazione is null
                          and   r1.validita_fine is null);

        -- insert S per impegni mov.movgest_anno::integer=annoBilancio
        -- che non hanno ancora attributo
        strMessaggio:='Gestione attributo '||FRAZIONABILE_ATTR||'. Inserimento valore S per impegni di competenza senza atto amministrativo antecedente.';
		INSERT INTO siac_r_movgest_ts_attr
		(
		  movgest_ts_id,
		  attr_id,
		  boolean,
		  validita_inizio,
		  ente_proprietario_id,
		  login_operazione
		)
		select ts.movgest_ts_id,
		       flagFrazAttrId,
               'S',
		       dataInizioVal,
		       ts.ente_proprietario_id,
		       loginOperazione
		from siac_t_movgest mov, siac_t_movgest_ts ts
		where mov.bil_id=bilancioId
		and   mov.movgest_anno::integer=annoBilancio
		and   mov.movgest_tipo_id=tipoMovGestId
		and   ts.movgest_id=mov.movgest_id
        and   ts.movgest_ts_tipo_id=tipoMovGestTsTId
		and   not exists (select 1 from siac_r_movgest_ts_attr r1
        		          where r1.movgest_ts_id=ts.movgest_ts_id
                          and   r1.attr_id=flagFrazAttrId
                          and   r1.data_cancellazione is null
                          and   r1.validita_fine is null)
        and  not exists (select 1 from siac_r_movgest_ts_atto_amm ra,siac_t_atto_amm atto
						 where ra.movgest_ts_id=ts.movgest_ts_id
						 and   atto.attoamm_id=ra.attoamm_id
				 		 and   atto.attoamm_anno::integer < annoBilancio
		     			 and   ra.data_cancellazione is null
				         and   ra.validita_fine is null);

        -- aggiornamento N per impegni mov.movgest_anno::integer<annoBilancio or mov.movgest_anno::integer>annoBilancio
        -- -- essendo pluriennali consideriamo solo mov.movgest_anno::integer>annoBilancio
        -- che  hanno  attributo ='S'
        strMessaggio:='Gestione attributo '||FRAZIONABILE_ATTR||'. Aggiornamento valore N per impegni pluriennali.';
		update  siac_r_movgest_ts_attr r set boolean='N'
		from siac_t_movgest mov, siac_t_movgest_ts ts
		where  mov.bil_id=bilancioId
--		and   ( mov.movgest_anno::integer<2017 or mov.movgest_anno::integer>2017)
		and   mov.movgest_anno::integer>annoBilancio
		and   mov.movgest_tipo_id=tipoMovGestId
		and   ts.movgest_id=mov.movgest_id
        and   ts.movgest_ts_tipo_id=tipoMovGestTsTId
		and   r.movgest_ts_id=ts.movgest_ts_id
        and   r.attr_id=flagFrazAttrId
		and   r.boolean='S'
        and   r.data_cancellazione is null
        and   r.validita_fine is null;

        -- aggiornamento N per impegni mov.movgest_anno::integer=annoBilancio e atto.attoamm_anno::integer < annoBilancio
        -- che  hanno  attributo ='S'
        strMessaggio:='Gestione attributo '||FRAZIONABILE_ATTR||'. Aggiornamento valore N per impegni di competenza e atto amministrativo antecedente.';
        update  siac_r_movgest_ts_attr r set boolean='N'
		from siac_t_movgest mov, siac_t_movgest_ts ts,
		     siac_r_movgest_ts_atto_amm ra,siac_t_atto_amm atto
		where mov.bil_id=bilancioId
		and   mov.movgest_anno::INTEGER=annoBilancio
		and   mov.movgest_tipo_id=tipoMovGestId
		and   ts.movgest_id=mov.movgest_id
        and   ts.movgest_ts_tipo_id=tipoMovGestTsTId
		and   r.movgest_ts_id=ts.movgest_ts_id
        and   r.attr_id=flagFrazAttrId
		and   ra.movgest_ts_id=ts.movgest_ts_id
		and   atto.attoamm_id=ra.attoamm_id
		and   atto.attoamm_anno::integer < annoBilancio
		and   r.boolean='S'
        and   r.data_cancellazione is null
        and   r.validita_fine is null
        and   ra.data_cancellazione is null
        and   ra.validita_fine is null;

     end if;

     -- 14.02.2017 Sofia SIAC-4425 - gestione attributo flagFrazionabile


     strMessaggio:='Aggiornamento stato fase bilancio IN-2.';
     update fase_bil_t_elaborazione
     set fase_bil_elab_esito='IN-2',
         fase_bil_elab_esito_msg='ELABORAZIONE FASE BILANCIO '||APE_GEST_PLURI||' IN CORSO IN-2.'
     where fase_bil_elab_id=faseBilElabId;


     codiceRisultato:=0;
     messaggioRisultato:=strMessaggioFinale||' FINE';
     return;

exception
    when RAISE_EXCEPTION THEN
    	raise notice '% % ERRORE : %',strMessaggioFinale,coalesce(strMessaggio,''),
	        	substring(upper(SQLERRM) from 1 for 500);
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||'ERRORE :'||' '||substring(upper(SQLERRM) from 1 for 500) ;
        codiceRisultato:=-1;
        return;

	when no_data_found THEN
		raise notice ' % % Nessun elemento trovato.' ,strMessaggioFinale,coalesce(strMessaggio,'');
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||'Nessun elemento trovato.' ;
        codiceRisultato:=-1;
		return;
	when others  THEN
		raise notice '% % Errore DB % %',strMessaggioFinale,coalesce(strMessaggio,''),SQLSTATE,
	        	substring(upper(SQLERRM) from 1 for 50);
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||'Errore DB '||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 50) ;
        codiceRisultato:=-1;
        return;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

CREATE OR REPLACE FUNCTION fnc_fasi_bil_prev_apertura_all
(
  annobilancio           integer,
  checkPrev              boolean,
  impostaImporti         boolean,
  stepPartenza           integer,
  enteproprietarioid     integer,
  loginoperazione        varchar,
  dataelaborazione       timestamp,
  out faseBilElabIdRet   integer,
  out codicerisultato    integer,
  out messaggiorisultato varchar
)
RETURNS record AS
$body$
DECLARE
	strMessaggio 		VARCHAR(1500):='';
	strMessaggioFinale 	VARCHAR(1500):='';

	codResult         	integer:=null;
    faseBilElabId     	integer:=null;

    prevAggImpRec 		record;
    prevCapRec 			record;
    prevRibVincoli		record;

	strRec 				record;
    CAP_EP_STR          CONSTANT varchar:='CAP-EP';
    CAP_UP_STR          CONSTANT varchar:='CAP-UP';
    CAP_EG_STR          CONSTANT varchar:='CAP-EG';
    CAP_UG_STR          CONSTANT varchar:='CAP-UG';

    U_STR               CONSTANT varchar:='U';
    E_STR               CONSTANT varchar:='E';

BEGIN
	messaggioRisultato:='';
    codiceRisultato:=0;
    faseBilElabIdRet:=0;

	strMessaggioFinale:='Apertura bilancio di previsione per Anno bilancio='||annoBilancio::varchar||'.';

    if not (stepPartenza=99 or stepPartenza>=2) then
        strMessaggio:='Step ri-partenza non corretto valori ammessi >=2 99.';
        codiceRisultato:=-1;
    end if;

    -- STEP 1 -- CAPITOLI USCITA
    -- ESEGUITO SOLO SE ESEGUITI TUTTI
    if codiceRisultato=0 and stepPartenza=99 then
  	 strMessaggio:='Capitoli uscita.';

     select * into prevCapRec
     from fnc_fasi_bil_prev_apertura
     (
      annobilancio,
      U_STR,
      CAP_UP_STR,
      CAP_UG_STR,
      true,       -- checkPrev,
      true,       -- impostaImporti,
      enteproprietarioid,
      loginoperazione,
      dataelaborazione
     );

     if prevCapRec.codiceRisultato=0 then
    	faseBilElabId:=prevCapRec.faseBilElabIdRet;
     else
        strMessaggio:=prevCapRec.messaggioRisultato;
        codiceRisultato:=prevCapRec.codiceRisultato;
     end if;
    end if;

    -- STEP 2 -- CAPITOLI DI ENTRATA
    -- STEP DI RIPARTENZA
    if codiceRisultato=0  and stepPartenza>=2 then
		strMessaggio:='Capitoli entrata.';
        select * into prevCapRec
        from fnc_fasi_bil_prev_apertura
		(annobilancio,
		 E_STR,
		 CAP_EP_STR,
		 CAP_EG_STR,
		 true,       ---checkPrev,
		 true,       ---impostaImporti,
		 enteproprietarioid,
		 loginoperazione,
 	     dataelaborazione);
        if prevCapRec.codiceRisultato=0 then
    		faseBilElabId:=prevCapRec.faseBilElabIdRet;
        else
	        strMessaggio:=prevCapRec.messaggioRisultato;
    	    codiceRisultato:=prevCapRec.codiceRisultato;
        end if;
    end if;

	-- STEP 3 -- popolamento dei vincoli di previsione

	if codiceRisultato=0 and stepPartenza>=2 then    -- deve essere stato eseguito sia spesa che entrata
		strMessaggio:='vincoli entrata.';
        select * into prevRibVincoli
		from fnc_fasi_bil_prev_ribaltamento_vincoli (annoBilancio,enteProprietarioId,loginOperazione,dataElaborazione);

		if prevRibVincoli.codiceRisultato=0 then
            -- 05.12.2017 Sofia JIRA  SIAC-5630
    		-- faseBilElabId:=prevRibVincoli.faseBilElabIdRet;
        else
	        strMessaggio:=prevRibVincoli.messaggioRisultato;
    	    codiceRisultato:=prevRibVincoli.codiceRisultato;
        end if;
	end if;

    -- STEP 4 -- popolamento diCuiImpegnato e dati anno prec
    -- rieseguito ogni volta che si richiede esecuzione
    -- spesa-entrata o solo entrata
	if codiceRisultato=0 and stepPartenza>=1 then
		strMessaggio:='Capitoli previsione aggiorna importi e dati prec.';

        select *  into prevAggImpRec
        from  fnc_fasi_bil_aggiorna_importi_bilprev
        (annobilancio,
		 true,   --flagaggimpo boolean,
         true,   --flagdicuiimpe boolean,
	     faseBilElabId,
	     enteProprietarioId,
	     loginOperazione,
	     dataElaborazione
         );

        if prevAggImpRec.codiceRisultato!=0 then
        	strMessaggio:=prevAggImpRec.messaggioRisultato;
            codiceRisultato:=prevAggImpRec.codiceRisultato;
        end if;
    end if;

    -- STEP 5 -- popolamento dei programmi-cronoprogrammi di previsione
	if codiceRisultato=0 and stepPartenza>=2 then    -- deve essere stato eseguito sia spesa che entrata
    	strMessaggio:='Ribaltamento Programmi-Cronoprogrammi di previsione da gestione precedente.';
       	select * into strRec
       	from fnc_fasi_bil_gest_apertura_programmi
             (
			  annoBilancio,
			  enteProprietarioId,
			  'P',
			  loginOperazione,
			  dataElaborazione
             );
       if strRec.codiceRisultato!=0 then
       	strMessaggio:=strRec.messaggioRisultato;
        codiceRisultato:=strRec.codiceRisultato;
       end if;
    end if;

    if codiceRisultato=0 then
    	messaggioRisultato:=strMessaggioFinale||' Elaborazione terminata con successo.';
        faseBilElabIdRet:=faseBilElabId;
    else messaggioRisultato:=strMessaggioFinale||strMessaggio;
    end if;

    return;

exception
    when RAISE_EXCEPTION THEN
    	raise notice '% % ERRORE : %',strMessaggioFinale,strMessaggio,
	        	substring(upper(SQLERRM) from 1 for 500);
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'ERRORE :'||' '||substring(upper(SQLERRM) from 1 for 500) ;
        codiceRisultato:=-1;
        return;

	when no_data_found THEN
		raise notice ' % % Nessun elemento trovato.' ,strMessaggioFinale,strMessaggio;
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'Nessun elemento trovato.' ;
        codiceRisultato:=-1;
		return;
	when others  THEN
		raise notice '% % Errore DB % %',strMessaggioFinale,strMessaggio,SQLSTATE,
	        	substring(upper(SQLERRM) from 1 for 50);
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'Errore DB '||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 50) ;
        codiceRisultato:=-1;
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

CREATE OR REPLACE FUNCTION fnc_fasi_bil_prev_approva_all
(
  annobilancio           integer,
  faseBilancio           varchar,
  stepPartenza           integer,
  checkGest              boolean,
  impostaImporti         boolean,




  enteproprietarioid     integer,
  loginoperazione        varchar,
  dataelaborazione       timestamp,
  out faseBilElabIdRet   integer,

  out codicerisultato    integer,
  out messaggiorisultato varchar
)
RETURNS record AS
$body$
DECLARE
	strMessaggio VARCHAR(1500):='';
	strMessaggioFinale VARCHAR(1500):='';

	codResult         integer:=null;
    faseBilElabId     integer:=null;

    prevAggImpRec record;
    prevCapRec record;
    strRec record;

    CAP_EP_STR          CONSTANT varchar:='CAP-EP';
    CAP_UP_STR          CONSTANT varchar:='CAP-UP';
    CAP_EG_STR          CONSTANT varchar:='CAP-EG';
    CAP_UG_STR          CONSTANT varchar:='CAP-UG';

    U_STR               CONSTANT varchar:='U';
    E_STR               CONSTANT varchar:='E';

    GESTIONE_FASE               CONSTANT varchar:='G';

BEGIN
	messaggioRisultato:='';
    codiceRisultato:=0;
    faseBilElabIdRet:=0;

	strMessaggioFinale:='Approvazione bilancio di previsione per Anno bilancio='||annoBilancio::varchar||'.';

    if not (stepPartenza=99 or stepPartenza>=2) then
        strMessaggio:='Step ri-partenza non corretto valori ammessi >=2 99.';
        codiceRisultato:=-1;
    end if;

    if faseBilancio is null or faseBilancio!=GESTIONE_FASE then
    	raise exception 'Fase Bilancio da indicare %.',GESTIONE_FASE;
    end if;
    -- STEP 1 -- CAPITOLI USCITA
    -- ESEGUITO SOLO SE ESEGUITI TUTTI
    if codiceRisultato=0 and stepPartenza=99 then
  	 strMessaggio:='Capitoli uscita.';

     select * into prevCapRec
     from fnc_fasi_bil_prev_approva
	 (annobilancio,
      U_STR,
      CAP_UP_STR,
      CAP_UG_STR,
      faseBilancio,
      true,--checkGest
      true,--impostaImporti
	  enteProprietarioId,
	  loginoperazione,
 	  dataelaborazione
     );

     if prevCapRec.codiceRisultato=0 then
    	faseBilElabId:=prevCapRec.faseBilElabIdRet;
     else
        strMessaggio:=prevCapRec.messaggioRisultato;
        codiceRisultato:=prevCapRec.codiceRisultato;
     end if;
    end if;

    -- STEP 2 -- CAPITOLI DI ENTRATA
    -- STEP DI RIPARTENZA
    if codiceRisultato=0  and stepPartenza>=2 then
		strMessaggio:='Capitoli entrata.';
        select * into prevCapRec
        from fnc_fasi_bil_prev_approva
		(annobilancio,
		 E_STR,
		 CAP_EP_STR,
		 CAP_EG_STR,
         faseBilancio,
		 true,--checkGest
         true,--impostaImporti
		 enteproprietarioid,
		 loginoperazione,
 	     dataelaborazione);
        if prevCapRec.codiceRisultato=0 then
    		faseBilElabId:=prevCapRec.faseBilElabIdRet;
        else
	        strMessaggio:=prevCapRec.messaggioRisultato;
    	    codiceRisultato:=prevCapRec.codiceRisultato;
        end if;
    end if;


    -- STEP 3 -- popolamento dei vincoli di gestione da previsione
    if codiceRisultato=0 and stepPartenza>=2 then
	    select * into strRec
        from fnc_fasi_bil_gest_ribaltamento_vincoli
        ('PREV-GEST',
         annoBilancio,
         enteProprietarioid,
         loginOperazione,
         dataElaborazione );

         if strRec.codiceRisultato=0 then
            faseBilElabId:=strRec.faseBilElabIdRet;
	    else
    	    strMessaggio:=strRec.messaggioRisultato;
        	codiceRisultato:=strRec.codiceRisultato;
	    end if;
    end if;


	-- STEP 5 -- popolamento dei programmi-cronoprogrammi di gestione
	if codiceRisultato=0 and stepPartenza>=2 then    -- deve essere stato eseguito sia spesa che entrata
    	strMessaggio:='Ribaltamento Programmi-Cronoprogrammi di gestione da previsione corrente.';
       	select * into strRec
       	from fnc_fasi_bil_gest_apertura_programmi
             (
			  annoBilancio,
			  enteProprietarioId,
			  'G',
			  loginOperazione,
			  dataElaborazione
             );
       if strRec.codiceRisultato!=0 then
       	strMessaggio:=strRec.messaggioRisultato;
        codiceRisultato:=strRec.codiceRisultato;
       end if;
    end if;

    if codiceRisultato=0 then
    	messaggioRisultato:=strMessaggioFinale||' Elaborazione terminata con successo.';
        faseBilElabIdRet:=faseBilElabId;
    else messaggioRisultato:=strMessaggioFinale||strMessaggio;
    end if;

    return;

exception
    when RAISE_EXCEPTION THEN
    	raise notice '% % ERRORE : %',strMessaggioFinale,strMessaggio,
	        	substring(upper(SQLERRM) from 1 for 500);
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'ERRORE :'||' '||substring(upper(SQLERRM) from 1 for 500) ;
        codiceRisultato:=-1;
        return;

	when no_data_found THEN
		raise notice ' % % Nessun elemento trovato.' ,strMessaggioFinale,strMessaggio;
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'Nessun elemento trovato.' ;
        codiceRisultato:=-1;
		return;
	when others  THEN
		raise notice '% % Errore DB % %',strMessaggioFinale,strMessaggio,SQLSTATE,
	        	substring(upper(SQLERRM) from 1 for 50);
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'Errore DB '||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 50) ;
        codiceRisultato:=-1;
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

CREATE OR REPLACE FUNCTION fnc_fasi_bil_gest_apertura_all
(
  annobilancio           integer,
  faseBilancio           varchar,
  stepPartenza           integer,
  checkGest              boolean,
  impostaImporti         boolean,
  enteproprietarioid     integer,
  loginoperazione        varchar,
  dataelaborazione       timestamp,
  out faseBilElabIdRet   integer,
  out codicerisultato    integer,
  out messaggiorisultato varchar
)
RETURNS record AS
$body$
DECLARE
	strMessaggio VARCHAR(1500):='';
	strMessaggioFinale VARCHAR(1500):='';

    faseBilElabId     integer:=null;

    strRec record;

    CAP_EP_STR          CONSTANT varchar:='CAP-EP';
    CAP_UP_STR          CONSTANT varchar:='CAP-UP';
    CAP_EG_STR          CONSTANT varchar:='CAP-EG';
    CAP_UG_STR          CONSTANT varchar:='CAP-UG';

    U_STR               CONSTANT varchar:='U';
    E_STR               CONSTANT varchar:='E';


BEGIN
	messaggioRisultato:='';
    codiceRisultato:=0;
    faseBilElabIdRet:=0;


	strMessaggioFinale:='Apertura bilancio gestione per Anno bilancio='||annoBilancio::varchar||
                        '. Fase Bilancio di apertura='||faseBilancio||'.';

    if not (stepPartenza=99 or stepPartenza>=1) then
        strMessaggio:='Step ri-partenza non corretto valori ammessi >=1 99.';
        codiceRisultato:=-1;
    end if;

    -- STEP 1 - capitoli di uscita eseguiro per stepPartenza 1, 99
    if stepPartenza=1 or stepPartenza=99 then
 	 strMessaggio:='Capitolo di uscita.';
     select * into strRec
     from fnc_fasi_bil_gest_apertura
     (annobilancio,
      U_STR,
      CAP_UP_STR,
      CAP_UG_STR,
      faseBilancio,
      checkGest,
      impostaImporti,
      enteProprietarioId,
      loginOperazione,
      dataElaborazione
     );
     if strRec.codiceRisultato=0 then
      	faseBilElabId:=strRec.faseBilElabIdRet;
     else
        strMessaggio:=strRec.messaggioRisultato;
        codiceRisultato:=strRec.codiceRisultato;
     end if;
   end if;

   -- STEP 2 - capitoli di entrata eseguiro per stepPartenza >=2
   if codiceRisultato=0 and stepPartenza>=2 then
    	strMessaggio:='Capitolo di entrata.';
    	select * into strRec
	    from fnc_fasi_bil_gest_apertura
    	(annobilancio,
	     E_STR,
    	 CAP_EP_STR,
	     CAP_EG_STR,
	     faseBilancio,
	     checkGest,
     	 impostaImporti,
	     enteProprietarioId,
    	 loginOperazione,
	     dataElaborazione
    	);
        if strRec.codiceRisultato=0 then
      		faseBilElabId:=strRec.faseBilElabIdRet;
	    else
    	    strMessaggio:=strRec.messaggioRisultato;
        	codiceRisultato:=strRec.codiceRisultato;
	    end if;
    end if;

    if codiceRisultato=0 then
    	messaggioRisultato:=strMessaggioFinale||' Elaborazione terminata con successo.';
        faseBilElabIdRet:=faseBilElabId;
    else
    	messaggioRisultato:=strMessaggioFinale||strMessaggio;
    end if;


    -- STEP 3 -- popolamento dei vincoli di gestione
    if codiceRisultato=0 and stepPartenza>=2 then
		strMessaggio:='Ribaltamento vincoli.';
    	if faseBilancio = 'E' then
	    	select * into strRec from fnc_fasi_bil_gest_ribaltamento_vincoli ('GEST-GEST',annobilancio,enteproprietarioid,loginoperazione, dataelaborazione );
		else
			select * into strRec from fnc_fasi_bil_gest_ribaltamento_vincoli ('PREV-GEST',annobilancio,enteproprietarioid,loginoperazione, dataelaborazione );
		end if;

	    if strRec.codiceRisultato=0 then
            faseBilElabId:=strRec.faseBilElabIdRet;
	    else
    	    strMessaggio:=strRec.messaggioRisultato;
        	codiceRisultato:=strRec.codiceRisultato;
	    end if;


    end if;

    -- STEP 4 -- popolamento dei programmi-cronop di gestione
    if codiceRisultato=0 and stepPartenza>=2 then
    	if faseBilancio = 'G' then
            strMessaggio:='Ribaltamento Programmi-Cronoprogrammi di gestione da previsione corrente.';
        	select * into strRec
        	from fnc_fasi_bil_gest_apertura_programmi
	             (
				  annoBilancio,
				  enteProprietarioId,
				  'G',
				  loginOperazione,
				  dataElaborazione
                 );
            if  strRec.codiceRisultato!=0 then
            	strMessaggio:=strRec.messaggioRisultato;
        		codiceRisultato:=strRec.codiceRisultato;
            end if;
        end if;
    end if;

    if codiceRisultato=0 then
	   	messaggioRisultato:=strMessaggioFinale||' Elaborazione terminata con successo.';
	    faseBilElabIdRet:=faseBilElabId;
	else
	  	messaggioRisultato:=strMessaggioFinale||strMessaggio;
    end if;

    return;

exception
    when RAISE_EXCEPTION THEN
    	raise notice '% % ERRORE : %',strMessaggioFinale,strMessaggio,
	        	substring(upper(SQLERRM) from 1 for 500);
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'ERRORE :'||' '||substring(upper(SQLERRM) from 1 for 500) ;
        codiceRisultato:=-1;
        return;

	when no_data_found THEN
		raise notice ' % % Nessun elemento trovato.' ,strMessaggioFinale,strMessaggio;
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'Nessun elemento trovato.' ;
        codiceRisultato:=-1;
		return;
	when others  THEN
		raise notice '% % Errore DB % %',strMessaggioFinale,strMessaggio,SQLSTATE,
	        	substring(upper(SQLERRM) from 1 for 50);
        messaggioRisultato:=strMessaggioFinale||strMessaggio||'Errore DB '||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 50) ;
        codiceRisultato:=-1;
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;


-- fasi bilancio fine
-- DWH inizio

drop function if exists fnc_siac_dwh_impegno 
(
  p_anno_bilancio varchar,
  p_ente_proprietario_id integer,
  p_data timestamp
);

drop function if exists fnc_siac_dwh_programma 
(
  p_ente_proprietario_id integer,
  p_data timestamp
);

drop function if exists fnc_siac_dwh_programma_cronop
(
  p_ente_proprietario_id integer,
  p_anno_bilancio varchar,
  p_data timestamp
);


CREATE OR REPLACE FUNCTION fnc_siac_dwh_impegno (
  p_anno_bilancio varchar,
  p_ente_proprietario_id integer,
  p_data timestamp
)
RETURNS TABLE (
  esito varchar
) AS
$body$
declare
v_user_table varchar;
params varchar;

begin

select fnc_siac_random_user()
into	v_user_table;

IF p_data IS NULL THEN
   IF p_anno_bilancio::integer < to_char(now(),'YYYY')::integer THEN
      p_data = to_timestamp('31/12/'||p_anno_bilancio, 'dd/mm/yyyy');
   ELSE
      p_data := now();
   END IF;
END IF;

params := p_anno_bilancio||' - '||p_ente_proprietario_id::varchar||' - '||p_data::varchar;


insert into
siac_dwh_log_elaborazioni (
ente_proprietario_id,
fnc_name ,
fnc_parameters ,
fnc_elaborazione_inizio ,
fnc_user
)
values (
p_ente_proprietario_id,
'fnc_siac_dwh_impegno',
params,
clock_timestamp(),
v_user_table
);



delete from siac_dwh_impegno where
ente_proprietario_id=p_ente_proprietario_id
AND   bil_anno = p_anno_bilancio;
delete from siac_dwh_subimpegno where
ente_proprietario_id=p_ente_proprietario_id
AND   bil_anno = p_anno_bilancio;

INSERT INTO
  siac.siac_dwh_impegno
(
  ente_proprietario_id,  ente_denominazione,  bil_anno,  cod_fase_operativa,  desc_fase_operativa,
  anno_impegno,  num_impegno,  desc_impegno,  cod_impegno,  cod_stato_impegno,  desc_stato_impegno,
  data_scadenza,  parere_finanziario,  cod_capitolo,  cod_articolo,  cod_ueb,  desc_capitolo,  desc_articolo,
  soggetto_id, cod_soggetto, desc_soggetto,  cf_soggetto,  cf_estero_soggetto, p_iva_soggetto,  cod_classe_soggetto,  desc_classe_soggetto,
  cod_tipo_impegno,  desc_tipo_impegno,   cod_spesa_ricorrente,  desc_spesa_ricorrente,  cod_perimetro_sanita_spesa,  desc_perimetro_sanita_spesa,
  cod_transazione_ue_spesa,  desc_transazione_ue_spesa,  cod_politiche_regionali_unit,  desc_politiche_regionali_unit,
  cod_pdc_finanziario_i,  desc_pdc_finanziario_i,  cod_pdc_finanziario_ii,  desc_pdc_finanziario_ii,
  cod_pdc_finanziario_iii,  desc_pdc_finanziario_iii,  cod_pdc_finanziario_iv,  desc_pdc_finanziario_iv,
  cod_pdc_finanziario_v,  desc_pdc_finanziario_v,  cod_pdc_economico_i,  desc_pdc_economico_i,
  cod_pdc_economico_ii,  desc_pdc_economico_ii,  cod_pdc_economico_iii,  desc_pdc_economico_iii,
  cod_pdc_economico_iv,  desc_pdc_economico_iv,  cod_pdc_economico_v,  desc_pdc_economico_v,
  cod_cofog_divisione,  desc_cofog_divisione,  cod_cofog_gruppo,  desc_cofog_gruppo,
  classificatore_1,  classificatore_1_valore,  classificatore_1_desc_valore,
  classificatore_2,  classificatore_2_valore,  classificatore_2_desc_valore,
  classificatore_3,  classificatore_3_valore,  classificatore_3_desc_valore,
  classificatore_4,  classificatore_4_valore,  classificatore_4_desc_valore,
  classificatore_5,  classificatore_5_valore,  classificatore_5_desc_valore,
  annocapitoloorigine,  numcapitoloorigine,  annoorigineplur, numarticoloorigine,  annoriaccertato,  numriaccertato,  numorigineplur,
  flagdariaccertamento,
  anno_atto_amministrativo,  num_atto_amministrativo,  oggetto_atto_amministrativo,  note_atto_amministrativo,
  cod_tipo_atto_amministrativo, desc_tipo_atto_amministrativo, desc_stato_atto_amministrativo,
  importo_iniziale,  importo_attuale,  importo_utilizzabile,
  note,  anno_finanziamento,  cig,  cup,  num_ueb_origine,  validato,
  num_accertamento_finanziamento,  importo_liquidato,  importo_quietanziato,  importo_emesso,
  --data_elaborazione,
  flagcassaeconomale,  data_inizio_val_stato_imp,  data_inizio_val_imp,
  data_creazione_imp,  data_modifica_imp,
  cod_cdc_atto_amministrativo,  desc_cdc_atto_amministrativo,
  cod_cdr_atto_amministrativo,  desc_cdr_atto_amministrativo,
  cod_programma, desc_programma,
  flagPrenotazione, flagPrenotazioneLiquidabile, flagFrazionabile,
  cod_siope_tipo_debito, desc_siope_tipo_debito, desc_siope_tipo_debito_bnkit,
  cod_siope_assenza_motivazione, desc_siope_assenza_motivazione, desc_siope_assenza_motiv_bnkit,
  flag_attiva_gsa, -- 28.05.2018 Sofia siac-6202
  -- 23.10.2018 Sofia siac-6336
  stato_programma,
  versione_cronop,
  desc_cronop,
  anno_cronop
  )
select
xx.ente_proprietario_id, xx.ente_denominazione, xx.anno,xx.fase_operativa_code, xx.fase_operativa_desc ,
xx.movgest_anno, xx.movgest_numero, xx.movgest_desc, xx.movgest_ts_code, --xx.movgest_ts_desc,
xx.movgest_stato_code, xx.movgest_stato_desc, xx.movgest_ts_scadenza_data,
case when xx.parere_finanziario=false then 'F' else 'S' end parere_finanziario
,-- xx.movgest_id, xx.movgest_ts_id, xx.movgest_ts_tipo_code,
xx.elem_code, xx.elem_code2, xx.elem_code3, xx.elem_desc, xx.elem_desc2, --xx.bil_id,
xx.soggetto_id, xx.soggetto_code, xx.soggetto_desc, xx.codice_fiscale,xx.codice_fiscale_estero, xx.partita_iva, xx.soggetto_classe_code, xx.soggetto_classe_desc,
xx.tipoimpegno_classif_code,xx.tipoimpegno_classif_desc,xx.ricorrentespesa_classif_code,xx.ricorrentespesa_classif_desc,
xx.persaspesa_classif_code,xx.persaspesa_classif_desc, xx.truespesa_classif_code, xx.truespesa_classif_desc, xx.polregunitarie_classif_code,xx.polregunitarie_classif_desc,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_I else xx.pdc4_codice_pdc_finanziario_I end codice_pdc_finanziario_II,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_I else xx.pdc4_descrizione_pdc_finanziario_I end descrizione_pdc_finanziario_I,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_II else xx.pdc4_codice_pdc_finanziario_II end codice_pdc_finanziario_II,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_II else xx.pdc4_descrizione_pdc_finanziario_II end descrizione_pdc_finanziario_II,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_III else xx.pdc4_codice_pdc_finanziario_III end codice_pdc_finanziario_III,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_III else xx.pdc4_descrizione_pdc_finanziario_III end descrizione_pdc_finanziario_III,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_IV else xx.pdc4_codice_pdc_finanziario_IV end codice_pdc_finanziario_IV  ,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_IV else xx.pdc4_descrizione_pdc_finanziario_IV end descrizione_pdc_finanziario_IV,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_V end codice_pdc_finanziario_V  ,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_V end descrizione_pdc_finanziario_V,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_I else xx.pce4_codice_pdc_economico_I end codice_pdc_economico_I,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_I else xx.pce4_descrizione_pdc_economico_I end descrizione_pdc_economico_I,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_II else xx.pce4_codice_pdc_economico_II end codice_pdc_economico_II,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_II else xx.pce4_descrizione_pdc_economico_II end descrizione_pdc_economico_II,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_III else xx.pce4_codice_pdc_economico_III end codice_pdc_economico_III,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_III else xx.pce4_descrizione_pdc_economico_III end descrizione_pdc_economico_III,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_IV else xx.pce4_codice_pdc_economico_IV end codice_pdc_economico_IV  ,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_IV else xx.pce4_descrizione_pdc_economico_IV end descrizione_pdc_economico_IV,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_V end codice_pdc_economico_V  ,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_V end descrizione_pdc_economico_V,
xx.codice_cofog_divisione, xx.descrizione_cofog_divisione,xx.codice_cofog_gruppo,xx.descrizione_cofog_gruppo,
xx.cla11_classif_tipo_desc,xx.cla11_classif_code,xx.cla11_classif_desc,
xx.cla12_classif_tipo_desc,xx.cla12_classif_code,xx.cla12_classif_desc,
xx.cla13_classif_tipo_desc,xx.cla13_classif_code,xx.cla13_classif_desc,
xx.cla14_classif_tipo_desc,xx.cla14_classif_code,xx.cla14_classif_desc,
xx.cla15_classif_tipo_desc,xx.cla15_classif_code,xx.cla15_classif_desc,
xx.annoCapitoloOrigine,xx.numeroCapitoloOrigine,xx.annoOriginePlur,xx.numeroArticoloOrigine,xx.annoRiaccertato,xx.numeroRiaccertato,
xx.numeroOriginePlur, xx.flagDaRiaccertamento,
xx.attoamm_anno, xx.attoamm_numero, xx.attoamm_oggetto, xx.attoamm_note,
xx.attoamm_tipo_code, xx.attoamm_tipo_desc, xx.attoamm_stato_desc,
xx.importo_iniziale, xx.importo_attuale, xx.importo_utilizzabile,
xx.NOTE_MOVGEST,  xx.annoFinanziamento, xx.cig,xx.cup, xx.numeroUEBOrigine,  xx.validato,
--xx.attoamm_id,
xx.numeroAccFinanziamento,  xx.importo_liquidato,  xx.importo_quietanziato, xx.importo_emesso,
xx.flagCassaEconomale,
xx.data_inizio_val_stato_subimp, xx.data_inizio_val_imp,
xx.data_creazione_imp, xx.data_modifica_imp,
case when xx.cdc_cdc_code::varchar is not null then  xx.cdc_cdc_code::varchar else xx.cdr_cdc_code::varchar end cdc_code,
case when xx.cdc_cdc_code::varchar is not null then  xx.cdc_cdc_desc::varchar else xx.cdr_cdc_desc::varchar end cdc_desc,
case when xx.cdc_cdc_code::varchar is not null then  xx.cdc_cdr_code::varchar else xx.cdr_cdr_code::varchar end cdr_code,
case when xx.cdc_cdc_code::varchar is not null then  xx.cdc_cdr_desc::varchar else xx.cdr_cdr_desc::varchar end cdr_desc,
xx.programma_code, xx.programma_desc,
xx.flagPrenotazione, xx.flagPrenotazioneLiquidabile, xx.flagFrazionabile,
xx.siope_tipo_debito_code, xx.siope_tipo_debito_desc, xx.siope_tipo_debito_desc_bnkit,
xx.siope_assenza_motivazione_code, xx.siope_assenza_motivazione_desc, xx.siope_assenza_motivazione_desc_bnkit,
xx.flag_attiva_gsa, -- 28.05.2018 Sofia siac-6102
/*xx.data_inizio_val_stato_subimp, xx.data_inizio_val_subimp,
xx.data_creazione_subimp, xx.data_modifica_subimp,*/
-- 23.10.2018 Sofia SIAC-6336
xx.programma_stato,
xx.versione_cronop,
xx.desc_cronop,
xx.anno_cronop
 from (
with imp as (
SELECT
e.ente_proprietario_id, e.ente_denominazione, d.anno,
       b.movgest_anno, b.movgest_numero, b.movgest_desc, a.movgest_ts_code, a.movgest_ts_desc,
       i.movgest_stato_code, i.movgest_stato_desc,
       a.movgest_ts_scadenza_data, b.parere_finanziario, b.movgest_id, a.movgest_ts_id,
       g.movgest_ts_tipo_code,    c.bil_id,
       h.validita_inizio as data_inizio_val_stato_subimp,
       a.data_creazione as data_creazione_subimp,
       a.validita_inizio as  data_inizio_val_subimp,
       a.data_modifica as data_modifica_subimp,
       b.data_creazione as data_creazione_imp,
       b.validita_inizio as data_inizio_val_imp,
       b.data_modifica as data_modifica_imp,
       m.fase_operativa_code, m.fase_operativa_desc,
       n.siope_tipo_debito_code, n.siope_tipo_debito_desc, n.siope_tipo_debito_desc_bnkit,
       o.siope_assenza_motivazione_code, o.siope_assenza_motivazione_desc, o.siope_assenza_motivazione_desc_bnkit
FROM
siac_t_movgest_ts a
left join siac_d_siope_tipo_debito n on n.siope_tipo_debito_id = a.siope_tipo_debito_id
                                     and n.data_cancellazione is null
                                     and n.validita_fine is null
left join siac_d_siope_assenza_motivazione o on o.siope_assenza_motivazione_id = a.siope_assenza_motivazione_id
                                             and o.data_cancellazione is null
                                             and o.validita_fine is null
, siac_t_movgest b
, siac_t_bil c
, siac_t_periodo d
, siac_t_ente_proprietario e
, siac_d_movgest_tipo f
, siac_d_movgest_ts_tipo g
, siac_r_movgest_ts_stato h
, siac_d_movgest_stato i,
siac_r_bil_fase_operativa l, siac_d_fase_operativa m
where a.movgest_id=  b.movgest_id and
 b.bil_id = c.bil_id and
 d.periodo_id = c.periodo_id and
 e.ente_proprietario_id = b.ente_proprietario_id   and
 b.movgest_tipo_id = f.movgest_tipo_id and
 a.movgest_ts_tipo_id = g.movgest_ts_tipo_id      and
 h.movgest_ts_id = a.movgest_ts_id   and
 h.movgest_stato_id = i.movgest_stato_id
and e.ente_proprietario_id = p_ente_proprietario_id
AND d.anno = p_anno_bilancio
AND f.movgest_tipo_code = 'I'
--and b.movgest_anno::integer=2018
--and b.movgest_numero::integer between 2550 and 3000
-- 22.11.2018 Sofia jira SIAC-6548
-- AND p_data BETWEEN h.validita_inizio AND COALESCE(h.validita_fine, p_data)
and l.bil_id=c.bil_id
and m.fase_operativa_id=l.fase_operativa_id
--AND p_data BETWEEN l.validita_inizio AND COALESCE(l.validita_fine, p_data)
--and  b.movgest_anno::integer=2018
--and  b.movgest_numero::integer in (2892,2901,3065,3157,3158,3178)
AND a.data_cancellazione IS NULL
AND b.data_cancellazione IS NULL
AND c.data_cancellazione IS NULL
AND d.data_cancellazione IS NULL
AND e.data_cancellazione IS NULL
AND f.data_cancellazione IS NULL
AND g.data_cancellazione IS NULL
AND h.data_cancellazione IS NULL
AND i.data_cancellazione IS NULL
AND a.validita_fine IS NULL
AND b.validita_fine IS NULL
AND c.validita_fine IS NULL
AND d.validita_fine IS NULL
AND e.validita_fine IS NULL
AND f.validita_fine IS NULL
AND g.validita_fine IS NULL
AND h.validita_fine IS NULL
AND i.validita_fine IS NULL
)
, cap as (
select l.movgest_id
,m.elem_code, m.elem_code2, m.elem_code3, m.elem_desc, m.elem_desc2
From siac_r_movgest_bil_elem l, siac_t_bil_elem m
where l.elem_id=m.elem_id
and l.ente_proprietario_id=p_ente_proprietario_id
--AND p_data BETWEEN l.validita_inizio AND COALESCE(l.validita_fine, p_data)
AND l.data_cancellazione IS NULL
AND m.data_cancellazione IS NULL
AND l.validita_fine IS NULL
AND m.validita_fine IS NULL
),
sogg as (SELECT
a.movgest_ts_id,
b.soggetto_code, b.soggetto_desc, b.codice_fiscale,
b.codice_fiscale_estero, b.partita_iva, b.soggetto_id
/*INTO v_codice_soggetto, v_descrizione_soggetto, v_codice_fiscale_soggetto,
v_codice_fiscale_estero_soggetto, v_partita_iva_soggetto, v_soggetto_id*/
FROM siac_r_movgest_ts_sog a, siac_t_soggetto b
WHERE a.soggetto_id = b.soggetto_id
and a.ente_proprietario_id=p_ente_proprietario_id
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
),
sogcla as (SELECT
a.movgest_ts_id,b.soggetto_classe_code, b.soggetto_classe_desc
--INTO v_codice_classe_soggetto, v_descrizione_classe_soggetto
FROM siac_r_movgest_ts_sogclasse a, siac.siac_d_soggetto_classe b
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.soggetto_classe_id = b.soggetto_classe_id
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
),
--classificatori non gerarchici
tipoimpegno as (
SELECT
a.movgest_ts_id,b.classif_code tipoimpegno_classif_code,b.classif_desc tipoimpegno_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='TIPO_IMPEGNO'
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
ricorrentespesa as (
SELECT
a.movgest_ts_id,b.classif_code ricorrentespesa_classif_code,b.classif_desc ricorrentespesa_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='RICORRENTE_SPESA'
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
truespesa as (
SELECT
a.movgest_ts_id,b.classif_code truespesa_classif_code,b.classif_desc truespesa_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='TRANSAZIONE_UE_SPESA'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
persaspesa as (
SELECT
a.movgest_ts_id,b.classif_code persaspesa_classif_code,b.classif_desc persaspesa_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='PERIMETRO_SANITARIO_SPESA'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
polregunitarie as (
SELECT
a.movgest_ts_id,b.classif_code polregunitarie_classif_code,b.classif_desc polregunitarie_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='POLITICHE_REGIONALI_UNITARIE'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
cla11 as (
SELECT
a.movgest_ts_id,b.classif_code cla11_classif_code,b.classif_desc cla11_classif_desc,
c.classif_tipo_desc cla11_classif_tipo_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_11'
-- AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
,
cla12 as (
SELECT
a.movgest_ts_id,b.classif_code cla12_classif_code,b.classif_desc cla12_classif_desc,
c.classif_tipo_desc cla12_classif_tipo_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_12'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
,
cla13 as (
SELECT
a.movgest_ts_id,b.classif_code cla13_classif_code,b.classif_desc cla13_classif_desc,
c.classif_tipo_desc cla13_classif_tipo_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_13'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
,
cla14 as (
SELECT
a.movgest_ts_id,b.classif_code cla14_classif_code,b.classif_desc cla14_classif_desc,
c.classif_tipo_desc cla14_classif_tipo_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_14'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
,
cla15 as (
SELECT
a.movgest_ts_id,b.classif_code cla15_classif_code,b.classif_desc cla15_classif_desc,
c.classif_tipo_desc cla15_classif_tipo_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_15'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
--sezione attributi
, t_annoCapitoloOrigine as (
SELECT
a.movgest_ts_id
, a.testo annoCapitoloOrigine
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='annoCapitoloOrigine' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroCapitoloOrigine as (
SELECT
a.movgest_ts_id
, a.testo numeroCapitoloOrigine
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroCapitoloOrigine' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_annoOriginePlur as (
SELECT
a.movgest_ts_id
, a.testo annoOriginePlur
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='annoOriginePlur' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroArticoloOrigine as (
SELECT
a.movgest_ts_id
, a.testo numeroArticoloOrigine
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroArticoloOrigine' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_annoRiaccertato as (
SELECT
a.movgest_ts_id
, a.testo annoRiaccertato
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='annoRiaccertato' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroRiaccertato as (
SELECT
a.movgest_ts_id
, a.testo numeroRiaccertato
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroRiaccertato' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroOriginePlur as (
SELECT
a.movgest_ts_id
, a.testo numeroOriginePlur
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroOriginePlur' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_flagDaRiaccertamento as (
SELECT
a.movgest_ts_id
, a."boolean" flagDaRiaccertamento
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagDaRiaccertamento' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroUEBOrigine as (
SELECT
a.movgest_ts_id
, a.testo numeroUEBOrigine
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroUEBOrigine' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_cig as (
SELECT
a.movgest_ts_id
, a.testo cig
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='cig' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_cup as (
SELECT
a.movgest_ts_id
, a.testo cup
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='cup' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_NOTE_MOVGEST as (
SELECT
a.movgest_ts_id
, a.testo NOTE_MOVGEST
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='NOTE_MOVGEST' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_validato as (
SELECT
a.movgest_ts_id
, a."boolean" validato
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='validato' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_annoFinanziamento as (
SELECT
a.movgest_ts_id
, a.testo annoFinanziamento
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='annoFinanziamento' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroAccFinanziamento as (
SELECT
a.movgest_ts_id
, a.testo numeroAccFinanziamento
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroAccFinanziamento' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_flagCassaEconomale as (
SELECT
a.movgest_ts_id
, a."boolean" flagCassaEconomale
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagCassaEconomale' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_flagPrenotazione as (
SELECT
a.movgest_ts_id
, a."boolean" flagPrenotazione
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagPrenotazione' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_flagPrenotazioneLiquidabile as (
SELECT
a.movgest_ts_id
, a."boolean" flagPrenotazioneLiquidabile
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagPrenotazioneLiquidabile' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
),
t_flagFrazionabile as (
SELECT
a.movgest_ts_id
, a."boolean" flagFrazionabile
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagFrazionabile' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
),
--atto amm
attoamm as (
with atmc as (
with atm as (
SELECT
a.movgest_ts_id,
b.attoamm_anno, b.attoamm_numero, b.attoamm_oggetto, b.attoamm_note,
       e.attoamm_tipo_code, e.attoamm_tipo_desc, d.attoamm_stato_desc, b.attoamm_id
FROM
siac.siac_r_movgest_ts_atto_amm a,
siac.siac_t_atto_amm b, siac.siac_r_atto_amm_stato c,
siac.siac_d_atto_amm_stato d, siac.siac_d_atto_amm_tipo e
WHERE
a.ente_proprietario_id=p_ente_proprietario_id--p_ente_proprietario_id
and a.attoamm_id=b.attoamm_id
AND c.attoamm_id = b.attoamm_id
AND d.attoamm_stato_id = c.attoamm_stato_id
AND e.attoamm_tipo_id = b.attoamm_tipo_id
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   d.data_cancellazione IS NULL
AND   e.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
AND   d.validita_fine IS NULL
AND   e.validita_fine IS NULL
)
,
atmrclass as (select a.attoamm_id,a.classif_id from siac_r_atto_amm_class a where
a.ente_proprietario_id=p_ente_proprietario_id and
a.data_cancellazione is null
and a.validita_fine is null
--and p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
)
select atm.*,atmrclass.classif_id from atm left join atmrclass
on atmrclass.attoamm_id=atm.attoamm_id
)
,
cdc as (
select a.classif_id,a.classif_code cdc_cdc_code,a.classif_desc cdc_cdc_desc
,a2.classif_code cdc_cdr_code,a2.classif_desc cdc_cdr_desc
 from siaC_t_class a,siac_d_class_tipo b, siac_r_class_fam_tree c,siaC_t_class a2
where a.ente_proprietario_id=p_ente_proprietario_id
and b.classif_tipo_id=a.classif_tipo_id
and b.classif_tipo_code='CDC'
and c.classif_id=a.classif_id
and a2.classif_id=c.classif_id_padre
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
and a2.data_cancellazione is null
/*and a.validita_fine is null
and b.validita_fine is null
and c.validita_fine is null
and a2.validita_fine is null*/
)
,cdr as (
select a.classif_id,null cdr_cdc_code,null cdr_cdc_desc
,a.classif_code cdr_cdr_code,a.classif_desc cdr_cdr_desc
 from siaC_t_class a,siac_d_class_tipo b
 where a.ente_proprietario_id=p_ente_proprietario_id
and b.classif_tipo_id=a.classif_tipo_id
and b.classif_tipo_code='CDR'
and a.data_cancellazione is null
and b.data_cancellazione is null
/*and a.validita_fine is null
and b.validita_fine is null*/
)
select
atmc.movgest_ts_id,
atmc.attoamm_anno, atmc.attoamm_numero, atmc.attoamm_oggetto, atmc.attoamm_note,
atmc.attoamm_tipo_code, atmc.attoamm_tipo_desc, atmc.attoamm_stato_desc, atmc.attoamm_id,
cdc.cdc_cdc_code,cdc.cdc_cdc_desc,cdc.cdc_cdr_code,cdc.cdc_cdr_desc,
cdr.cdr_cdc_code,cdr.cdr_cdc_desc,cdr.cdr_cdr_code,cdr.cdr_cdr_desc
from atmc left join cdc on
atmc.classif_id=cdc.classif_id
left join cdr on
atmc.classif_id=cdr.classif_id),
impattuale as (
SELECT COALESCE(SUM(a.movgest_ts_det_importo),0) importo_attuale, a.movgest_ts_id
FROM siac.siac_t_movgest_ts_det a, siac.siac_d_movgest_ts_det_tipo b
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.movgest_ts_det_tipo_id = b.movgest_ts_det_tipo_id
AND a.data_cancellazione IS NULL
AND b.data_cancellazione IS NULL
AND a.validita_fine IS NULL
AND b.validita_fine IS NULL
and b.movgest_ts_det_tipo_code='A'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
GROUP BY  a.movgest_ts_id, b.movgest_ts_det_tipo_code
)
,
impiniziale as (
SELECT COALESCE(SUM(a.movgest_ts_det_importo),0) importo_iniziale, a.movgest_ts_id
FROM siac.siac_t_movgest_ts_det a, siac.siac_d_movgest_ts_det_tipo b
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.movgest_ts_det_tipo_id = b.movgest_ts_det_tipo_id
AND a.data_cancellazione IS NULL
AND b.data_cancellazione IS NULL
AND a.validita_fine IS NULL
AND b.validita_fine IS NULL
and b.movgest_ts_det_tipo_code='I'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
GROUP BY  a.movgest_ts_id, b.movgest_ts_det_tipo_code
)
,
imputilizzabile as (
SELECT COALESCE(SUM(a.movgest_ts_det_importo),0) importo_utilizzabile, a.movgest_ts_id
FROM siac.siac_t_movgest_ts_det a, siac.siac_d_movgest_ts_det_tipo b
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.movgest_ts_det_tipo_id = b.movgest_ts_det_tipo_id
AND a.data_cancellazione IS NULL
AND b.data_cancellazione IS NULL
AND a.validita_fine IS NULL
AND b.validita_fine IS NULL
and b.movgest_ts_det_tipo_code='U'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
GROUP BY  a.movgest_ts_id, b.movgest_ts_det_tipo_code
),
impliquidatoemessoquietanziato as (select tz.* from (
with liquid as (
 SELECT sum(COALESCE(b.liq_importo,0)) importo_liquidato, a.movgest_ts_id,
b.liq_id
    FROM siac.siac_r_liquidazione_movgest a, siac.siac_t_liquidazione b,
    siac.siac_d_liquidazione_stato c, siac.siac_r_liquidazione_stato d
    WHERE
    a.ente_proprietario_id=p_ente_proprietario_id
    AND   a.liq_id = b.liq_id
    AND   b.liq_id = d.liq_id
    AND   d.liq_stato_id = c.liq_stato_id
    AND   c.liq_stato_code <> 'A'
    --AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
    --AND p_data BETWEEN d.validita_inizio AND COALESCE(d.validita_fine, p_data)
    AND a.data_cancellazione IS NULL
    AND b.data_cancellazione IS NULL
    AND c.data_cancellazione IS NULL
    AND d.data_cancellazione IS NULL
    AND a.validita_fine IS NULL
    AND b.validita_fine IS NULL
    AND c.validita_fine IS NULL
    AND d.validita_fine IS NULL
    group by a.movgest_ts_id, b.liq_id),
emes as (
  SELECT COALESCE(SUM(e.ord_ts_det_importo),0) importo_emesso, a.liq_id
            FROM
            siac_r_liquidazione_ord a,
            siac_t_ordinativo_ts b,
                 siac_r_ordinativo_stato c, siac_d_ordinativo_stato d,
                 siac_t_ordinativo_ts_det e, siac_d_ordinativo_ts_det_tipo f
            WHERE
            a.ente_proprietario_id=p_ente_proprietario_id and
            a.sord_id=b.ord_ts_id
            AND  c.ord_id = b.ord_id
            AND  c.ord_stato_id = d.ord_stato_id
            AND  e.ord_ts_id = b.ord_ts_id
            AND  f.ord_ts_det_tipo_id = e.ord_ts_det_tipo_id
            AND  d.ord_stato_code <> 'A'
            AND  f.ord_ts_det_tipo_code = 'A'
            --AND  p_data BETWEEN  a.validita_inizio  AND COALESCE(a.validita_fine, p_data)
            --AND  p_data BETWEEN  c.validita_inizio  AND COALESCE(c.validita_fine, p_data)
            AND  a.data_cancellazione IS NULL
            AND  b.data_cancellazione IS NULL
            AND  c.data_cancellazione IS NULL
            AND  d.data_cancellazione IS NULL
            AND  e.data_cancellazione IS NULL
            AND  f.data_cancellazione IS NULL
            AND  a.validita_fine IS NULL
            AND  b.validita_fine IS NULL
            AND  c.validita_fine IS NULL
            AND  d.validita_fine IS NULL
            AND  e.validita_fine IS NULL
            AND  f.validita_fine IS NULL
            group by a.liq_id),
quiet as (
  SELECT COALESCE(SUM(e.ord_ts_det_importo),0) importo_quietanziato, a.liq_id
            FROM
            siac_r_liquidazione_ord a,
            siac_t_ordinativo_ts b,
                 siac_r_ordinativo_stato c, siac_d_ordinativo_stato d,
                 siac_t_ordinativo_ts_det e, siac_d_ordinativo_ts_det_tipo f
            WHERE
            a.ente_proprietario_id=p_ente_proprietario_id and
            a.sord_id=b.ord_ts_id
            AND  c.ord_id = b.ord_id
            AND  c.ord_stato_id = d.ord_stato_id
            AND  e.ord_ts_id = b.ord_ts_id
            AND  f.ord_ts_det_tipo_id = e.ord_ts_det_tipo_id
            AND  d.ord_stato_code= 'Q'
            AND  f.ord_ts_det_tipo_code = 'A'
            --AND  p_data BETWEEN  a.validita_inizio  AND COALESCE(a.validita_fine, p_data)
            --AND  p_data BETWEEN  c.validita_inizio  AND COALESCE(c.validita_fine, p_data)
            AND  a.data_cancellazione IS NULL
            AND  b.data_cancellazione IS NULL
            AND  c.data_cancellazione IS NULL
            AND  d.data_cancellazione IS NULL
            AND  e.data_cancellazione IS NULL
            AND  f.data_cancellazione IS NULL
            AND  a.validita_fine IS NULL
            AND  b.validita_fine IS NULL
            AND  c.validita_fine IS NULL
            AND  d.validita_fine IS NULL
            AND  e.validita_fine IS NULL
            AND  f.validita_fine IS NULL
            group by a.liq_id)
select liquid.movgest_ts_id,coalesce(sum(liquid.importo_liquidato),0) importo_liquidato,
coalesce(sum(emes.importo_emesso),0) importo_emesso,
coalesce(sum(quiet.importo_quietanziato),0) importo_quietanziato
from liquid left join emes ON
liquid.liq_id=emes.liq_id
left join quiet ON
liquid.liq_id=quiet.liq_id
group by liquid.movgest_ts_id
) as tz),
cofog as (
select distinct r.movgest_ts_id,
a.classif_code codice_cofog_gruppo,a.classif_desc descrizione_cofog_gruppo,
a2.classif_code codice_cofog_divisione,a2.classif_desc descrizione_cofog_divisione
from
siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--DIVISIONE_COFOG
siac_r_class_fam_tree d2,
siac_t_class a2
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='GRUPPO_COFOG'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
--and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
)
, pdc5 as (
select distinct
r.movgest_ts_id,
a.classif_code pdc5_codice_pdc_finanziario_V,a.classif_desc pdc5_descrizione_pdc_finanziario_V,
a2.classif_code pdc5_codice_pdc_finanziario_IV,a2.classif_desc pdc5_descrizione_pdc_finanziario_IV,
a3.classif_code pdc5_codice_pdc_finanziario_III,a3.classif_desc pdc5_descrizione_pdc_finanziario_III,
a4.classif_code pdc5_codice_pdc_finanziario_II,a4.classif_desc pdc5_descrizione_pdc_finanziario_II,
a5.classif_code pdc5_codice_pdc_finanziario_I,a5.classif_desc pdc5_descrizione_pdc_finanziario_I
 from siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4,
--PDC_I
siac_r_class_fam_tree d5,
siac_t_class a5
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PDC_V'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and d5.classif_id=a4.classif_id
and a5.classif_id=d5.classif_id_padre
-- SIAC-5883 Daniela 13.02.2018
-- and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
-- SIAC-5883 FINE Daniela 13.02.2018
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
--and p_data BETWEEN d3.validita_inizio and COALESCE(d3.validita_fine,p_data)
--and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
--and p_data BETWEEN d5.validita_inizio and COALESCE(d5.validita_fine,p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   d3.data_cancellazione IS NULL
AND   a3.data_cancellazione IS NULL
AND   d4.data_cancellazione IS NULL
AND   a4.data_cancellazione IS NULL
AND   d5.data_cancellazione IS NULL
AND   a5.data_cancellazione IS NULL
/*AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
AND   d3.validita_fine IS NULL
AND   a3.validita_fine IS NULL
AND   d4.validita_fine IS NULL
AND   a4.validita_fine IS NULL
AND   d5.validita_fine IS NULL
AND   a5.validita_fine IS NULL*/
)
, pdc4 as (
select distinct r.movgest_ts_id,
a.classif_code pdc4_codice_pdc_finanziario_IV,a.classif_desc pdc4_descrizione_pdc_finanziario_IV,
a2.classif_code pdc4_codice_pdc_finanziario_III,a2.classif_desc pdc4_descrizione_pdc_finanziario_III,
a3.classif_code pdc4_codice_pdc_finanziario_II,a3.classif_desc pdc4_descrizione_pdc_finanziario_II,
a4.classif_code pdc4_codice_pdc_finanziario_I,a4.classif_desc pdc4_descrizione_pdc_finanziario_I
 from siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PDC_IV'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
-- SIAC-5883 Daniela 13.02.2018
-- and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
-- SIAC-5883 FINE Daniela 13.02.2018
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
--and p_data BETWEEN d3.validita_inizio and COALESCE(d3.validita_fine,p_data)
--and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   d3.data_cancellazione IS NULL
AND   a3.data_cancellazione IS NULL
AND   d4.data_cancellazione IS NULL
AND   a4.data_cancellazione IS NULL
/*AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
AND   d3.validita_fine IS NULL
AND   a3.validita_fine IS NULL
AND   d4.validita_fine IS NULL
AND   a4.validita_fine IS NULL*/
)
, pce5 as (
select distinct r.movgest_ts_id,
--r.classif_id,
a.classif_code pce5_codice_pdc_economico_V,a.classif_desc pce5_descrizione_pdc_economico_V,
a2.classif_code pce5_codice_pdc_economico_IV,a2.classif_desc pce5_descrizione_pdc_economico_IV,
a3.classif_code pce5_codice_pdc_economico_III,a3.classif_desc pce5_descrizione_pdc_economico_III,
a4.classif_code pce5_codice_pdc_economico_II,a4.classif_desc pce5_descrizione_pdc_economico_II,
a5.classif_code pce5_codice_pdc_economico_I,a5.classif_desc pce5_descrizione_pdc_economico_I
 from siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4,
--PDC_I
siac_r_class_fam_tree d5,
siac_t_class a5
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PCE_V'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and d5.classif_id=a4.classif_id
and a5.classif_id=d5.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
--and p_data BETWEEN d3.validita_inizio and COALESCE(d3.validita_fine,p_data)
--and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
--and p_data BETWEEN d5.validita_inizio and COALESCE(d5.validita_fine,p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   d3.data_cancellazione IS NULL
AND   a3.data_cancellazione IS NULL
AND   d4.data_cancellazione IS NULL
AND   a4.data_cancellazione IS NULL
AND   d5.data_cancellazione IS NULL
AND   a5.data_cancellazione IS NULL
/*AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
AND   d3.validita_fine IS NULL
AND   a3.validita_fine IS NULL
AND   d4.validita_fine IS NULL
AND   a4.validita_fine IS NULL
AND   d5.validita_fine IS NULL
AND   a5.validita_fine IS NULL*/
)
, pce4 as (
select distinct r.movgest_ts_id,
a.classif_code pce4_codice_pdc_economico_IV,a.classif_desc pce4_descrizione_pdc_economico_IV,
a2.classif_code pce4_codice_pdc_economico_III,a2.classif_desc pce4_descrizione_pdc_economico_III,
a3.classif_code pce4_codice_pdc_economico_II,a3.classif_desc pce4_descrizione_pdc_economico_II,
a4.classif_code pce4_codice_pdc_economico_I,a4.classif_desc pce4_descrizione_pdc_economico_I
 from siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PCE_IV'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
--and p_data BETWEEN d3.validita_inizio and COALESCE(d3.validita_fine,p_data)
--and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   d3.data_cancellazione IS NULL
AND   a3.data_cancellazione IS NULL
AND   d4.data_cancellazione IS NULL
AND   a4.data_cancellazione IS NULL
/*AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
AND   d3.validita_fine IS NULL
AND   a3.validita_fine IS NULL
AND   d4.validita_fine IS NULL
AND   a4.validita_fine IS NULL*/
),
-- 30.04.2019 Sofia siac-6255 - modificato tutto il pezzo per tirare su il programma-cronop secondo
-- nuovo collegamento o secondo vecchio collegamento se non esiste tramite nuovo
progr_all_all as
(
with
progr_all as
(
with
-- 23.10.2018 Sofia siac-6336
progetto_old as -- vecchio collegamento
(
with
 progr as
 (
  select rmtp.movgest_ts_id, tp.programma_code, tp.programma_desc,
         stato.programma_stato_code  programma_stato,
         rmtp.programma_id
  from   siac_r_movgest_ts_programma rmtp, siac_t_programma tp, siac_r_programma_stato rs, siac_d_programma_stato stato
  where  rmtp.programma_id = tp.programma_id
  --and    p_data BETWEEN rmtp.validita_inizio and COALESCE(rmtp.validita_fine,p_data)
  --and    p_data BETWEEN tp.validita_inizio and COALESCE(tp.validita_fine,p_data)
  and    rs.programma_id=tp.programma_id
  and    stato.programma_stato_id=rs.programma_stato_id
  and    rmtp.data_cancellazione IS NULL
  and    tp.data_cancellazione IS NULL
  and    rmtp.validita_fine IS NULL
  and    tp.validita_fine IS NULL
  and    rs.data_cancellazione is null
  and    rs.validita_fine is null
 ),
 -- 23.10.2018 Sofia siac-6336
 cronop as
 (
  select cronop.programma_id,
		 cronop.cronop_id,
         cronop.cronop_code versione_cronop,
         cronop.cronop_desc desc_cronop,
         per.anno::varchar  anno_cronop
  from siac_t_cronop cronop, siac_r_cronop_stato rs, siac_d_cronop_stato stato,
       siac_t_periodo per,siac_t_bil bil
  where stato.ente_proprietario_id=p_ente_proprietario_id
  and   stato.cronop_stato_code='VA'
  and   rs.cronop_stato_id=stato.cronop_stato_id
  and   cronop.cronop_id=rs.cronop_id
  and   bil.bil_id=cronop.bil_id
  and   per.periodo_id=bil.periodo_id
  and   per.anno::INTEGER=p_anno_bilancio::integer
  and   rs.data_cancellazione is null
  and   rs.validita_fine is null
  and   cronop.data_cancellazione is null
  and   cronop.validita_fine is null
  ),
  cronop_ultimo as
  (
  select cronop.programma_id,
		 max(cronop.cronop_id) cronop_id
  from siac_t_cronop cronop, siac_r_cronop_stato rs, siac_d_cronop_stato stato,
       siac_t_bil bil ,siac_t_periodo per
  where stato.ente_proprietario_id=p_ente_proprietario_id
  and   stato.cronop_stato_code='VA'
  and   rs.cronop_stato_id=stato.cronop_stato_id
  and   cronop.cronop_id=rs.cronop_id
  and   bil.bil_id=cronop.bil_id
  and   per.periodo_id=bil.periodo_id
  and   per.anno::INTEGER=p_anno_bilancio::integer
  and   rs.data_cancellazione is null
  and   rs.validita_fine is null
  and   cronop.data_cancellazione is null
  and   cronop.validita_fine is null
  group by cronop.programma_id
  )
  select 1 programma_tipo_coll,
         progr.movgest_ts_id, progr.programma_code, progr.programma_desc,
         progr.programma_stato ,
         cronop.versione_cronop,
         cronop.desc_cronop,
         cronop.anno_cronop
  from progr
   left join cronop join cronop_ultimo on (cronop.cronop_id=cronop_ultimo.cronop_id)
    on (progr.programma_id=cronop.programma_id)
),
-- 30.04.2019 Sofia siac-6255 - nuovo collegamento
progetto as
(
 with
 progr as
 (
  select tp.programma_code, tp.programma_desc,
         stato.programma_stato_code  programma_stato,
         tp.programma_id
  from   siac_t_programma tp, siac_r_programma_stato rs, siac_d_programma_stato stato
  where  stato.ente_proprietario_id=p_ente_proprietario_id
  and    rs.programma_stato_id=stato.programma_stato_id
  and    tp.programma_id=rs.programma_id
  and    tp.data_cancellazione IS NULL
  and    tp.validita_fine IS NULL
  and    rs.data_cancellazione is null
  and    rs.validita_fine is null
 ),
 cronop as
 (
  select rmov.movgest_ts_id,
         cronop.programma_id,
		 cronop.cronop_id,
         cronop.cronop_code versione_cronop,
         cronop.cronop_desc desc_cronop,
         per.anno::varchar  anno_cronop,
         rmov.data_creazione
  from siac_r_movgest_ts_cronop_elem rmov, siac_t_cronop_elem celem,
       siac_t_cronop cronop, siac_r_cronop_stato rs, siac_d_cronop_stato stato,
       siac_t_periodo per,siac_t_bil bil
  where stato.ente_proprietario_id=p_ente_proprietario_id
  and   stato.cronop_stato_code='VA'
  and   rs.cronop_stato_id=stato.cronop_stato_id
  and   cronop.cronop_id=rs.cronop_id
  and   bil.bil_id=cronop.bil_id
  and   per.periodo_id=bil.periodo_id
  and   per.anno::INTEGER=p_anno_bilancio::integer
  and   celem.cronop_id=cronop.cronop_id
  and   rmov.cronop_elem_id=celem.cronop_elem_id
  and   rs.data_cancellazione is null
  and   rs.validita_fine is null
  and   cronop.data_cancellazione is null
  and   cronop.validita_fine is null
  and   celem.data_cancellazione is null
  and   celem.validita_fine is null
  and   rmov.data_cancellazione is null
  and   rmov.validita_fine is null
 ),
 cronop_ultimo as
 (
  select rmov.movgest_ts_id,
         max(cronop.cronop_id) ult_cronop_id
  from siac_r_movgest_ts_cronop_elem rmov, siac_t_cronop_elem celem,
       siac_t_cronop cronop, siac_r_cronop_stato rs, siac_d_cronop_stato stato,
       siac_t_periodo per,siac_t_bil bil
  where stato.ente_proprietario_id=p_ente_proprietario_id
  and   stato.cronop_stato_code='VA'
  and   rs.cronop_stato_id=stato.cronop_stato_id
  and   cronop.cronop_id=rs.cronop_id
  and   bil.bil_id=cronop.bil_id
  and   per.periodo_id=bil.periodo_id
  and   per.anno::INTEGER=p_anno_bilancio::integer
  and   celem.cronop_id=cronop.cronop_id
  and   rmov.cronop_elem_id=celem.cronop_elem_id
  and   rs.data_cancellazione is null
  and   rs.validita_fine is null
  and   cronop.data_cancellazione is null
  and   cronop.validita_fine is null
  and   celem.data_cancellazione is null
  and   celem.validita_fine is null
  and   rmov.data_cancellazione is null
  and   rmov.validita_fine is null
  group by rmov.movgest_ts_id
 )
 select 2 programma_tipo_coll,
        cronop.movgest_ts_id,
        progr.programma_code, progr.programma_desc,
        progr.programma_stato ,
        cronop.versione_cronop,
        cronop.desc_cronop,
        cronop.anno_cronop
 from progr, cronop ,cronop_ultimo
 where cronop.programma_id=progr.programma_id
 and   cronop_ultimo.ult_cronop_id=cronop.cronop_id
 and   cronop_ultimo.movgest_ts_id=cronop.movgest_ts_id
)
select *
from progetto_old
union
select *
from progetto
)
select *
from progr_all p1
where
(  ( p1.programma_tipo_coll=1 and p1.movgest_ts_id is not null ) or
   (p1.programma_tipo_coll=2
    and   not exists (select 1 from progr_all p2 where p2.programma_tipo_coll=1 and p2.movgest_Ts_id is not null)
   )
)
),
-- 30.04.2019 Sofia siac-6255 - fine
impFlagAttivaGsa as -- 28.05.2018 Sofia siac-6102
(
select rattr.movgest_ts_id, rattr.boolean flag_attiva_gsa
from siac_r_movgest_ts_attr rattr, siac_t_attr attr
where attr.ente_proprietario_id=p_ente_proprietario_id
and   attr.attr_code='FlagAttivaGsa'
and   rattr.attr_id=attr.attr_id
and   rattr.data_cancellazione is null
and   rattr.validita_fine is null
)
select
imp.ente_proprietario_id, imp.ente_denominazione, imp.anno,
imp.movgest_anno, imp.movgest_numero, imp.movgest_desc, imp.movgest_ts_code, imp.movgest_ts_desc,
imp.movgest_stato_code, imp.movgest_stato_desc,
imp.movgest_ts_scadenza_data, imp.parere_finanziario, imp.movgest_id, imp.movgest_ts_id,
imp.movgest_ts_tipo_code,
cap.elem_code, cap.elem_code2, cap.elem_code3, cap.elem_desc, cap.elem_desc2,
imp.bil_id,
imp.data_inizio_val_stato_subimp,
imp.data_creazione_subimp,
imp.data_inizio_val_subimp,
imp.data_modifica_subimp,
imp.data_creazione_imp,
imp.data_inizio_val_imp,
imp.data_modifica_imp,
imp.fase_operativa_code, imp.fase_operativa_desc ,
sogg.soggetto_code, sogg.soggetto_desc, sogg.codice_fiscale,
sogg.codice_fiscale_estero, sogg.partita_iva, sogg.soggetto_id
,sogcla.soggetto_classe_code, sogcla.soggetto_classe_desc,
tipoimpegno.tipoimpegno_classif_code,
tipoimpegno.tipoimpegno_classif_desc,
ricorrentespesa.ricorrentespesa_classif_code,
ricorrentespesa.ricorrentespesa_classif_desc,
truespesa.truespesa_classif_code,
truespesa.truespesa_classif_desc,
persaspesa.persaspesa_classif_code,
persaspesa.persaspesa_classif_desc,
polregunitarie.polregunitarie_classif_code,
polregunitarie.polregunitarie_classif_desc,
cla11.cla11_classif_code,
cla11.cla11_classif_desc,
cla11.cla11_classif_tipo_desc,
cla12.cla12_classif_code,
cla12.cla12_classif_desc,
cla12.cla12_classif_tipo_desc,
cla13.cla13_classif_code,
cla13.cla13_classif_desc,
cla13.cla13_classif_tipo_desc,
cla14.cla14_classif_code,
cla14.cla14_classif_desc,
cla14.cla14_classif_tipo_desc,
cla15.cla15_classif_code,
cla15.cla15_classif_desc,
cla15.cla15_classif_tipo_desc,
t_annoCapitoloOrigine.annoCapitoloOrigine,
t_numeroCapitoloOrigine.numeroCapitoloOrigine,
t_annoOriginePlur.annoOriginePlur,
t_numeroArticoloOrigine.numeroArticoloOrigine,
t_annoRiaccertato.annoRiaccertato,
t_numeroRiaccertato.numeroRiaccertato,
t_numeroOriginePlur.numeroOriginePlur,
t_flagDaRiaccertamento.flagDaRiaccertamento,
t_numeroUEBOrigine.numeroUEBOrigine,
t_cig.cig,
t_cup.cup,
t_NOTE_MOVGEST.NOTE_MOVGEST,
t_validato.validato,
t_annoFinanziamento.annoFinanziamento,
t_numeroAccFinanziamento.numeroAccFinanziamento,
t_flagCassaEconomale.flagCassaEconomale,
attoamm.attoamm_anno, attoamm.attoamm_numero, attoamm.attoamm_oggetto, attoamm.attoamm_note,
attoamm.attoamm_tipo_code, attoamm.attoamm_tipo_desc, attoamm.attoamm_stato_desc, attoamm.attoamm_id,
impattuale.importo_attuale,
impiniziale.importo_iniziale,
imputilizzabile.importo_utilizzabile,
impliquidatoemessoquietanziato.importo_liquidato,
impliquidatoemessoquietanziato.importo_emesso,
impliquidatoemessoquietanziato,importo_quietanziato,
cofog.codice_cofog_gruppo,
cofog.descrizione_cofog_gruppo,
cofog.codice_cofog_divisione,
cofog.descrizione_cofog_divisione,
pdc5.pdc5_codice_pdc_finanziario_V,pdc5.pdc5_descrizione_pdc_finanziario_V,
pdc5.pdc5_codice_pdc_finanziario_IV,pdc5.pdc5_descrizione_pdc_finanziario_IV,
pdc5.pdc5_codice_pdc_finanziario_III,pdc5.pdc5_descrizione_pdc_finanziario_III,
pdc5.pdc5_codice_pdc_finanziario_II,pdc5.pdc5_descrizione_pdc_finanziario_II,
pdc5.pdc5_codice_pdc_finanziario_I,pdc5.pdc5_descrizione_pdc_finanziario_I,
pdc4.pdc4_codice_pdc_finanziario_IV,pdc4.pdc4_descrizione_pdc_finanziario_IV,
pdc4.pdc4_codice_pdc_finanziario_III,pdc4.pdc4_descrizione_pdc_finanziario_III,
pdc4.pdc4_codice_pdc_finanziario_II,pdc4.pdc4_descrizione_pdc_finanziario_II,
pdc4.pdc4_codice_pdc_finanziario_I,pdc4.pdc4_descrizione_pdc_finanziario_I,
pce5.pce5_codice_pdc_economico_V,pce5.pce5_descrizione_pdc_economico_V,
pce5.pce5_codice_pdc_economico_IV,pce5.pce5_descrizione_pdc_economico_IV,
pce5.pce5_codice_pdc_economico_III,pce5.pce5_descrizione_pdc_economico_III,
pce5.pce5_codice_pdc_economico_II,pce5.pce5_descrizione_pdc_economico_II,
pce5.pce5_codice_pdc_economico_I,pce5.pce5_descrizione_pdc_economico_I,
pce4.pce4_codice_pdc_economico_IV,pce4.pce4_descrizione_pdc_economico_IV,
pce4.pce4_codice_pdc_economico_III,pce4.pce4_descrizione_pdc_economico_III,
pce4.pce4_codice_pdc_economico_II,pce4.pce4_descrizione_pdc_economico_II,
pce4.pce4_codice_pdc_economico_I,pce4.pce4_descrizione_pdc_economico_I,
attoamm.cdc_cdc_code,attoamm.cdc_cdc_desc,attoamm.cdc_cdr_code,attoamm.cdc_cdr_desc,
attoamm.cdr_cdc_code,attoamm.cdr_cdc_desc,attoamm.cdr_cdr_code,attoamm.cdr_cdr_desc,
-- 30.04.2019 Sofia siac-6255 - cambiato qui solo nome alias progr_all_all
progr_all_all.programma_code, progr_all_all.programma_desc,
t_flagPrenotazione.flagPrenotazione, t_flagPrenotazioneLiquidabile.flagPrenotazioneLiquidabile,
t_flagFrazionabile.flagFrazionabile,
imp.siope_tipo_debito_code, imp.siope_tipo_debito_desc, imp.siope_tipo_debito_desc_bnkit,
imp.siope_assenza_motivazione_code, imp.siope_assenza_motivazione_desc, imp.siope_assenza_motivazione_desc_bnkit,
coalesce(impFlagAttivaGsa.flag_attiva_gsa,'N') flag_attiva_gsa, -- 28.05.2018 Sofia siac-6102
-- 23.10.2018 Sofia SIAC-6336
-- 30.04.2019 Sofia siac-6255 - cambiato qui solo nome alias progr_all_all
progr_all_all.programma_stato,
progr_all_all.versione_cronop,
progr_all_all.desc_cronop,
progr_all_all.anno_cronop
from
imp left join cap
on
imp.movgest_id=cap.movgest_id
left join sogg
on
imp.movgest_ts_id=sogg.movgest_ts_id
left join sogcla
on
imp.movgest_ts_id=sogcla.movgest_ts_id
left join tipoimpegno
on
imp.movgest_ts_id=tipoimpegno.movgest_ts_id
left join ricorrentespesa
on
imp.movgest_ts_id=ricorrentespesa.movgest_ts_id
left join truespesa
on
imp.movgest_ts_id=truespesa.movgest_ts_id
left join persaspesa
on
imp.movgest_ts_id=persaspesa.movgest_ts_id
left join polregunitarie
on
imp.movgest_ts_id=polregunitarie.movgest_ts_id
left join cla11
on
imp.movgest_ts_id=cla11.movgest_ts_id
left join cla12
on
imp.movgest_ts_id=cla12.movgest_ts_id
left join cla13
on
imp.movgest_ts_id=cla13.movgest_ts_id
left join cla14
on
imp.movgest_ts_id=cla14.movgest_ts_id
left join cla15
on
imp.movgest_ts_id=cla15.movgest_ts_id
left join t_annoCapitoloOrigine
on
imp.movgest_ts_id=t_annoCapitoloOrigine.movgest_ts_id
left join t_numeroCapitoloOrigine
on
imp.movgest_ts_id=t_numeroCapitoloOrigine.movgest_ts_id
left join t_annoOriginePlur
on
imp.movgest_ts_id=t_annoOriginePlur.movgest_ts_id
left join t_numeroArticoloOrigine
on
imp.movgest_ts_id=t_numeroArticoloOrigine.movgest_ts_id
left join t_annoRiaccertato
on
imp.movgest_ts_id=t_annoRiaccertato.movgest_ts_id
left join t_numeroRiaccertato
on
imp.movgest_ts_id=t_numeroRiaccertato.movgest_ts_id
left join t_numeroOriginePlur
on
imp.movgest_ts_id=t_numeroOriginePlur.movgest_ts_id
left join t_flagDaRiaccertamento
on
imp.movgest_ts_id=t_flagDaRiaccertamento.movgest_ts_id
left join t_numeroUEBOrigine
on
imp.movgest_ts_id=t_numeroUEBOrigine.movgest_ts_id
left join t_cig
on
imp.movgest_ts_id=t_cig.movgest_ts_id
left join t_cup
on
imp.movgest_ts_id=t_cup.movgest_ts_id
left join t_NOTE_MOVGEST
on
imp.movgest_ts_id=t_NOTE_MOVGEST.movgest_ts_id
left join t_validato
on
imp.movgest_ts_id=t_validato.movgest_ts_id
left join t_annoFinanziamento
on
imp.movgest_ts_id=t_annoFinanziamento.movgest_ts_id
left join t_numeroAccFinanziamento
on
imp.movgest_ts_id=t_numeroAccFinanziamento.movgest_ts_id
left join t_flagCassaEconomale
on
imp.movgest_ts_id=t_flagCassaEconomale.movgest_ts_id
left join attoamm
on
imp.movgest_ts_id=attoamm.movgest_ts_id
left join impattuale
on
imp.movgest_ts_id=impattuale.movgest_ts_id
left join impiniziale
on
imp.movgest_ts_id=impiniziale.movgest_ts_id
left join imputilizzabile
on
imp.movgest_ts_id=imputilizzabile.movgest_ts_id
left join impliquidatoemessoquietanziato
on
imp.movgest_ts_id=impliquidatoemessoquietanziato.movgest_ts_id
left join cofog
on
imp.movgest_ts_id=cofog.movgest_ts_id
left join pdc5
on
imp.movgest_ts_id=pdc5.movgest_ts_id
left join pdc4
on
imp.movgest_ts_id=pdc4.movgest_ts_id
left join pce5
on
imp.movgest_ts_id=pce5.movgest_ts_id
left join pce4
on
imp.movgest_ts_id=pce4.movgest_ts_id
left join progr_all_all
on
imp.movgest_ts_id=progr_all_all.movgest_ts_id
left join t_flagPrenotazione
on
imp.movgest_ts_id=t_flagPrenotazione.movgest_ts_id
left join t_flagPrenotazioneLiquidabile
on
imp.movgest_ts_id=t_flagPrenotazioneLiquidabile.movgest_ts_id
left join t_flagFrazionabile
on
imp.movgest_ts_id=t_flagFrazionabile.movgest_ts_id
left join impFlagAttivaGsa
on
imp.movgest_ts_id=impFlagAttivaGsa.movgest_ts_id -- 28.05.2018 Sofia siac-6102
) xx
where xx.movgest_ts_tipo_code='T';



--------subimp

INSERT INTO
  siac.siac_dwh_subimpegno
(
  ente_proprietario_id,  ente_denominazione,  bil_anno,  cod_fase_operativa,  desc_fase_operativa,
  anno_impegno,  num_impegno,  desc_impegno,  cod_subimpegno,  cod_stato_subimpegno,  desc_stato_subimpegno,
  data_scadenza,  parere_finanziario,  cod_capitolo,  cod_articolo,  cod_ueb,  desc_capitolo,  desc_articolo,
  soggetto_id, cod_soggetto, desc_soggetto,  cf_soggetto,  cf_estero_soggetto, p_iva_soggetto,  cod_classe_soggetto,  desc_classe_soggetto,
  cod_tipo_impegno,  desc_tipo_impegno,   cod_spesa_ricorrente,  desc_spesa_ricorrente,  cod_perimetro_sanita_spesa,  desc_perimetro_sanita_spesa,
  cod_transazione_ue_spesa,  desc_transazione_ue_spesa,  cod_politiche_regionali_unit,  desc_politiche_regionali_unit,
  cod_pdc_finanziario_i,  desc_pdc_finanziario_i,  cod_pdc_finanziario_ii,  desc_pdc_finanziario_ii,
  cod_pdc_finanziario_iii,  desc_pdc_finanziario_iii,  cod_pdc_finanziario_iv,  desc_pdc_finanziario_iv,
  cod_pdc_finanziario_v,  desc_pdc_finanziario_v,  cod_pdc_economico_i,  desc_pdc_economico_i,
  cod_pdc_economico_ii,  desc_pdc_economico_ii,  cod_pdc_economico_iii,  desc_pdc_economico_iii,
  cod_pdc_economico_iv,  desc_pdc_economico_iv,  cod_pdc_economico_v,  desc_pdc_economico_v,
  cod_cofog_divisione,  desc_cofog_divisione,  cod_cofog_gruppo,  desc_cofog_gruppo,
  classificatore_1,  classificatore_1_valore,  classificatore_1_desc_valore,
  classificatore_2,  classificatore_2_valore,  classificatore_2_desc_valore,
  classificatore_3,  classificatore_3_valore,  classificatore_3_desc_valore,
  classificatore_4,  classificatore_4_valore,  classificatore_4_desc_valore,
  classificatore_5,  classificatore_5_valore,  classificatore_5_desc_valore,
  annocapitoloorigine,  numcapitoloorigine,  annoorigineplur, numarticoloorigine,  annoriaccertato,  numriaccertato,  numorigineplur,
  flagdariaccertamento,
  anno_atto_amministrativo,  num_atto_amministrativo,  oggetto_atto_amministrativo,  note_atto_amministrativo,
  cod_tipo_atto_amministrativo, desc_tipo_atto_amministrativo, desc_stato_atto_amministrativo,
   importo_iniziale,  importo_attuale,  importo_utilizzabile,
  note,  anno_finanziamento,  cig,  cup,  num_ueb_origine,  validato,
  num_accertamento_finanziamento,  importo_liquidato,  importo_quietanziato,  importo_emesso,
  --data_elaborazione,
  flagcassaeconomale,  data_inizio_val_stato_subimp,  data_inizio_val_subimp,
  data_creazione_subimp,  data_modifica_subimp,
  cod_cdc_atto_amministrativo,  desc_cdc_atto_amministrativo,
  cod_cdr_atto_amministrativo,  desc_cdr_atto_amministrativo,
  flagPrenotazione, flagPrenotazioneLiquidabile, flagFrazionabile,
  cod_siope_tipo_debito, desc_siope_tipo_debito, desc_siope_tipo_debito_bnkit,
  cod_siope_assenza_motivazione, desc_siope_assenza_motivazione, desc_siope_assenza_motiv_bnkit,
  flag_attiva_gsa -- 28.05.2018 Sofia siac-6202
  )
select
xx.ente_proprietario_id, xx.ente_denominazione, xx.anno,xx.fase_operativa_code, xx.fase_operativa_desc ,
xx.movgest_anno, xx.movgest_numero, xx.movgest_desc, xx.movgest_ts_code, --xx.movgest_ts_desc,
xx.movgest_stato_code, xx.movgest_stato_desc, xx.movgest_ts_scadenza_data,
case when xx.parere_finanziario=false then 'F' else 'S' end parere_finanziario,-- xx.movgest_id, xx.movgest_ts_id, xx.movgest_ts_tipo_code,
xx.elem_code, xx.elem_code2, xx.elem_code3, xx.elem_desc, xx.elem_desc2, --xx.bil_id,
xx.soggetto_id, xx.soggetto_code, xx.soggetto_desc, xx.codice_fiscale,xx.codice_fiscale_estero, xx.partita_iva, xx.soggetto_classe_code, xx.soggetto_classe_desc,
xx.tipoimpegno_classif_code,xx.tipoimpegno_classif_desc,xx.ricorrentespesa_classif_code,xx.ricorrentespesa_classif_desc,
xx.persaspesa_classif_code,xx.persaspesa_classif_desc, xx.truespesa_classif_code, xx.truespesa_classif_desc, xx.polregunitarie_classif_code,xx.polregunitarie_classif_desc,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_I else xx.pdc4_codice_pdc_finanziario_I end codice_pdc_finanziario_II,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_I else xx.pdc4_descrizione_pdc_finanziario_I end descrizione_pdc_finanziario_I,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_II else xx.pdc4_codice_pdc_finanziario_II end codice_pdc_finanziario_II,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_II else xx.pdc4_descrizione_pdc_finanziario_II end descrizione_pdc_finanziario_II,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_III else xx.pdc4_codice_pdc_finanziario_III end codice_pdc_finanziario_III,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_III else xx.pdc4_descrizione_pdc_finanziario_III end descrizione_pdc_finanziario_III,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_IV else xx.pdc4_codice_pdc_finanziario_IV end codice_pdc_finanziario_IV  ,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_IV else xx.pdc4_descrizione_pdc_finanziario_IV end descrizione_pdc_finanziario_IV,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_codice_pdc_finanziario_V end codice_pdc_finanziario_V  ,
case when   xx.pdc5_codice_pdc_finanziario_V is not null then    xx.pdc5_descrizione_pdc_finanziario_V end descrizione_pdc_finanziario_V,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_I else xx.pce4_codice_pdc_economico_I end codice_pdc_economico_I,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_I else xx.pce4_descrizione_pdc_economico_I end descrizione_pdc_economico_I,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_II else xx.pce4_codice_pdc_economico_II end codice_pdc_economico_II,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_II else xx.pce4_descrizione_pdc_economico_II end descrizione_pdc_economico_II,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_III else xx.pce4_codice_pdc_economico_III end codice_pdc_economico_III,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_III else xx.pce4_descrizione_pdc_economico_III end descrizione_pdc_economico_III,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_IV else xx.pce4_codice_pdc_economico_IV end codice_pdc_economico_IV  ,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_IV else xx.pce4_descrizione_pdc_economico_IV end descrizione_pdc_economico_IV,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_codice_pdc_economico_V end codice_pdc_economico_V  ,
case when   xx.pce5_codice_pdc_economico_V is not null then    xx.pce5_descrizione_pdc_economico_V end descrizione_pdc_economico_V,
xx.codice_cofog_divisione, xx.descrizione_cofog_divisione,xx.codice_cofog_gruppo,xx.descrizione_cofog_gruppo,
xx.cla11_classif_tipo_code,xx.cla11_classif_code,xx.cla11_classif_desc,xx.cla12_classif_tipo_code,xx.cla12_classif_code,xx.cla12_classif_desc,
xx.cla13_classif_tipo_code,xx.cla13_classif_code,xx.cla13_classif_desc,xx.cla14_classif_tipo_code,xx.cla14_classif_code,xx.cla14_classif_desc,
xx.cla15_classif_tipo_code,xx.cla15_classif_code,xx.cla15_classif_desc,
xx.annoCapitoloOrigine,xx.numeroCapitoloOrigine,xx.annoOriginePlur,xx.numeroArticoloOrigine,xx.annoRiaccertato,xx.numeroRiaccertato,
xx.numeroOriginePlur, xx.flagDaRiaccertamento,
xx.attoamm_anno, xx.attoamm_numero, xx.attoamm_oggetto, xx.attoamm_note,
xx.attoamm_tipo_code, xx.attoamm_tipo_desc, xx.attoamm_stato_desc,
xx.importo_iniziale, xx.importo_attuale, xx.importo_utilizzabile,
xx.NOTE_MOVGEST,  xx.annoFinanziamento, xx.cig,xx.cup, xx.numeroUEBOrigine,  xx.validato,
--xx.attoamm_id,
xx.numeroAccFinanziamento,  xx.importo_liquidato,  xx.importo_quietanziato, xx.importo_emesso,
xx.flagCassaEconomale,
xx.data_inizio_val_stato_subimp, xx.data_inizio_val_subimp,
xx.data_creazione_subimp, xx.data_modifica_subimp,
case when xx.cdc_cdc_code::varchar is not null then  xx.cdc_cdc_code::varchar else xx.cdr_cdc_code::varchar end cdc_code,
case when xx.cdc_cdc_code::varchar is not null then  xx.cdc_cdc_desc::varchar else xx.cdr_cdc_desc::varchar end cdc_desc,
case when xx.cdc_cdc_code::varchar is not null then  xx.cdc_cdr_code::varchar else xx.cdr_cdr_code::varchar end cdr_code,
case when xx.cdc_cdc_code::varchar is not null then  xx.cdc_cdr_desc::varchar else xx.cdr_cdr_desc::varchar end cdr_desc,
xx.flagPrenotazione, xx.flagPrenotazioneLiquidabile, xx.flagFrazionabile,
xx.siope_tipo_debito_code, xx.siope_tipo_debito_desc, xx.siope_tipo_debito_desc_bnkit,
xx.siope_assenza_motivazione_code, xx.siope_assenza_motivazione_desc, xx.siope_assenza_motivazione_desc_bnkit,
xx.flag_attiva_gsa -- 28.05.2018 Sofia siac-6202
/*xx.data_inizio_val_stato_subimp, xx.data_inizio_val_subimp,
xx.data_creazione_subimp, xx.data_modifica_subimp,*/
 from (
with imp as (
SELECT
e.ente_proprietario_id, e.ente_denominazione, d.anno,
       b.movgest_anno, b.movgest_numero, b.movgest_desc, a.movgest_ts_code, a.movgest_ts_desc,
       i.movgest_stato_code, i.movgest_stato_desc,
       a.movgest_ts_scadenza_data, b.parere_finanziario, b.movgest_id, a.movgest_ts_id,
       g.movgest_ts_tipo_code,    c.bil_id,
       h.validita_inizio as data_inizio_val_stato_subimp,
       a.data_creazione as data_creazione_subimp,
       a.validita_inizio as  data_inizio_val_subimp,
       a.data_modifica as data_modifica_subimp,
       b.data_creazione as data_creazione_imp,
       b.validita_inizio as data_inizio_val_imp,
       b.data_modifica as data_modifica_imp,
       m.fase_operativa_code, m.fase_operativa_desc,
       n.siope_tipo_debito_code, n.siope_tipo_debito_desc, n.siope_tipo_debito_desc_bnkit,
       o.siope_assenza_motivazione_code, o.siope_assenza_motivazione_desc, o.siope_assenza_motivazione_desc_bnkit
FROM
siac_t_movgest_ts a
left join siac_d_siope_tipo_debito n on n.siope_tipo_debito_id = a.siope_tipo_debito_id
                                     and n.data_cancellazione is null
                                     and n.validita_fine is null
left join siac_d_siope_assenza_motivazione o on o.siope_assenza_motivazione_id = a.siope_assenza_motivazione_id
                                             and o.data_cancellazione is null
                                             and o.validita_fine is null
, siac_t_movgest b
, siac_t_bil c
,  siac_t_periodo d
, siac_t_ente_proprietario e
,  siac_d_movgest_tipo f
,  siac_d_movgest_ts_tipo g
,  siac_r_movgest_ts_stato h
,  siac_d_movgest_stato i,
siac_r_bil_fase_operativa l, siac_d_fase_operativa m
where a.movgest_id=  b.movgest_id and
 b.bil_id = c.bil_id and
 d.periodo_id = c.periodo_id and
 e.ente_proprietario_id = b.ente_proprietario_id   and
 b.movgest_tipo_id = f.movgest_tipo_id and
 a.movgest_ts_tipo_id = g.movgest_ts_tipo_id      and
 h.movgest_ts_id = a.movgest_ts_id   and
 h.movgest_stato_id = i.movgest_stato_id
and e.ente_proprietario_id = p_ente_proprietario_id
AND d.anno = p_anno_bilancio
AND f.movgest_tipo_code = 'I'
--AND p_data BETWEEN h.validita_inizio AND COALESCE(h.validita_fine, p_data)
and l.bil_id=c.bil_id
and m.fase_operativa_id=l.fase_operativa_id
--AND p_data BETWEEN l.validita_inizio AND COALESCE(l.validita_fine, p_data)
AND a.data_cancellazione IS NULL
AND b.data_cancellazione IS NULL
AND c.data_cancellazione IS NULL
AND d.data_cancellazione IS NULL
AND e.data_cancellazione IS NULL
AND f.data_cancellazione IS NULL
AND g.data_cancellazione IS NULL
AND h.data_cancellazione IS NULL
AND i.data_cancellazione IS NULL
AND a.validita_fine IS NULL
AND b.validita_fine IS NULL
AND c.validita_fine IS NULL
AND d.validita_fine IS NULL
AND e.validita_fine IS NULL
AND f.validita_fine IS NULL
AND g.validita_fine IS NULL
AND h.validita_fine IS NULL
AND i.validita_fine IS NULL
)
, cap as (
select l.movgest_id
,m.elem_code, m.elem_code2, m.elem_code3, m.elem_desc, m.elem_desc2
From siac_r_movgest_bil_elem l, siac_t_bil_elem m
where l.elem_id=m.elem_id
and l.ente_proprietario_id=p_ente_proprietario_id
--AND p_data BETWEEN l.validita_inizio AND COALESCE(l.validita_fine, p_data)
AND l.data_cancellazione IS NULL
AND m.data_cancellazione IS NULL
AND l.validita_fine IS NULL
AND m.validita_fine IS NULL
),
sogg as (SELECT
a.movgest_ts_id,
b.soggetto_code, b.soggetto_desc, b.codice_fiscale,
b.codice_fiscale_estero, b.partita_iva, b.soggetto_id
/*INTO v_codice_soggetto, v_descrizione_soggetto, v_codice_fiscale_soggetto,
v_codice_fiscale_estero_soggetto, v_partita_iva_soggetto, v_soggetto_id*/
FROM siac_r_movgest_ts_sog a, siac_t_soggetto b
WHERE a.soggetto_id = b.soggetto_id
and a.ente_proprietario_id=p_ente_proprietario_id
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
),
sogcla as (SELECT
a.movgest_ts_id,b.soggetto_classe_code, b.soggetto_classe_desc
--INTO v_codice_classe_soggetto, v_descrizione_classe_soggetto
FROM siac_r_movgest_ts_sogclasse a, siac.siac_d_soggetto_classe b
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.soggetto_classe_id = b.soggetto_classe_id
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
)
,
--classificatori non gerarchici
tipoimpegno as (
SELECT
a.movgest_ts_id,b.classif_code tipoimpegno_classif_code,b.classif_desc tipoimpegno_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='TIPO_IMPEGNO'
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
ricorrentespesa as (
SELECT
a.movgest_ts_id,b.classif_code ricorrentespesa_classif_code,b.classif_desc ricorrentespesa_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='RICORRENTE_SPESA'
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
truespesa as (
SELECT
a.movgest_ts_id,b.classif_code truespesa_classif_code,b.classif_desc truespesa_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='TRANSAZIONE_UE_SPESA'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
persaspesa as (
SELECT
a.movgest_ts_id,b.classif_code persaspesa_classif_code,b.classif_desc persaspesa_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='PERIMETRO_SANITARIO_SPESA'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
polregunitarie as (
SELECT
a.movgest_ts_id,b.classif_code polregunitarie_classif_code,b.classif_desc polregunitarie_classif_desc
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='POLITICHE_REGIONALI_UNITARIE'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
),
cla11 as (
SELECT
a.movgest_ts_id,b.classif_code cla11_classif_code,b.classif_desc cla11_classif_desc, c.classif_tipo_code cla11_classif_tipo_code
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_11'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
,
cla12 as (
SELECT
a.movgest_ts_id,b.classif_code cla12_classif_code,b.classif_desc cla12_classif_desc, c.classif_tipo_code cla12_classif_tipo_code
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_12'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
,
cla13 as (
SELECT
a.movgest_ts_id,b.classif_code cla13_classif_code,b.classif_desc cla13_classif_desc, c.classif_tipo_code cla13_classif_tipo_code
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_13'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
,
cla14 as (
SELECT
a.movgest_ts_id,b.classif_code cla14_classif_code,b.classif_desc cla14_classif_desc, c.classif_tipo_code cla14_classif_tipo_code
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_14'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
,
cla15 as (
SELECT
a.movgest_ts_id,b.classif_code cla15_classif_code,b.classif_desc cla15_classif_desc, c.classif_tipo_code cla15_classif_tipo_code
 from siac_r_movgest_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_15'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
)
--sezione attributi
, t_annoCapitoloOrigine as (
SELECT
a.movgest_ts_id
, a.testo annoCapitoloOrigine
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='annoCapitoloOrigine' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroCapitoloOrigine as (
SELECT
a.movgest_ts_id
, a.testo numeroCapitoloOrigine
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroCapitoloOrigine' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_annoOriginePlur as (
SELECT
a.movgest_ts_id
, a.testo annoOriginePlur
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='annoOriginePlur' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroArticoloOrigine as (
SELECT
a.movgest_ts_id
, a.testo numeroArticoloOrigine
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroArticoloOrigine' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_annoRiaccertato as (
SELECT
a.movgest_ts_id
, a.testo annoRiaccertato
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='annoRiaccertato' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroRiaccertato as (
SELECT
a.movgest_ts_id
, a.testo numeroRiaccertato
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroRiaccertato' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroOriginePlur as (
SELECT
a.movgest_ts_id
, a.testo numeroOriginePlur
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroOriginePlur' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_flagDaRiaccertamento as (
SELECT
a.movgest_ts_id
, a."boolean" flagDaRiaccertamento
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagDaRiaccertamento' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroUEBOrigine as (
SELECT
a.movgest_ts_id
, a.testo numeroUEBOrigine
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroUEBOrigine' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_cig as (
SELECT
a.movgest_ts_id
, a.testo cig
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='cig' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_cup as (
SELECT
a.movgest_ts_id
, a.testo cup
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='cup' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_NOTE_MOVGEST as (
SELECT
a.movgest_ts_id
, a.testo NOTE_MOVGEST
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='NOTE_MOVGEST' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_validato as (
SELECT
a.movgest_ts_id
, a."boolean" validato
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='validato' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_annoFinanziamento as (
SELECT
a.movgest_ts_id
, a.testo annoFinanziamento
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='annoFinanziamento' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_numeroAccFinanziamento as (
SELECT
a.movgest_ts_id
, a.testo numeroAccFinanziamento
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='numeroAccFinanziamento' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_flagCassaEconomale as (
SELECT
a.movgest_ts_id
, a."boolean" flagCassaEconomale
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagCassaEconomale' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_flagPrenotazione as (
SELECT
a.movgest_ts_id
, a."boolean" flagPrenotazione
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagPrenotazione' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
)
, t_flagPrenotazioneLiquidabile as (
SELECT
a.movgest_ts_id
, a."boolean" flagPrenotazioneLiquidabile
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagPrenotazioneLiquidabile' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
),
t_flagFrazionabile as (
SELECT
a.movgest_ts_id
, a."boolean" flagFrazionabile
FROM   siac.siac_r_movgest_ts_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagFrazionabile' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
--AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    a.validita_fine IS NULL
AND    b.validita_fine IS NULL
),
--atto amm
attoamm as (
with atmc as (
with atm as (
SELECT
a.movgest_ts_id,
b.attoamm_anno, b.attoamm_numero, b.attoamm_oggetto, b.attoamm_note,
       e.attoamm_tipo_code, e.attoamm_tipo_desc, d.attoamm_stato_desc, b.attoamm_id
FROM
siac.siac_r_movgest_ts_atto_amm a,
siac.siac_t_atto_amm b, siac.siac_r_atto_amm_stato c,
siac.siac_d_atto_amm_stato d, siac.siac_d_atto_amm_tipo e
WHERE
a.ente_proprietario_id=p_ente_proprietario_id--p_ente_proprietario_id
and a.attoamm_id=b.attoamm_id
AND c.attoamm_id = b.attoamm_id
AND d.attoamm_stato_id = c.attoamm_stato_id
AND e.attoamm_tipo_id = b.attoamm_tipo_id
--AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   d.data_cancellazione IS NULL
AND   e.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   c.validita_fine IS NULL
AND   d.validita_fine IS NULL
AND   e.validita_fine IS NULL
)
, atmrclass as (select a.attoamm_id,a.classif_id from siac_r_atto_amm_class a where
a.ente_proprietario_id=p_ente_proprietario_id and
a.data_cancellazione is null
AND   a.validita_fine IS NULL
--and p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
)
select atm.*,atmrclass.classif_id from atm left join atmrclass
on atmrclass.attoamm_id=atm.attoamm_id
)
,
cdc as (
select a.classif_id,a.classif_code cdc_cdc_code,a.classif_desc cdc_cdc_desc
,a2.classif_code cdc_cdr_code,a2.classif_desc cdc_cdr_desc
 from siaC_t_class a,siac_d_class_tipo b, siac_r_class_fam_tree c,siaC_t_class a2
where a.ente_proprietario_id=p_ente_proprietario_id
and b.classif_tipo_id=a.classif_tipo_id
and b.classif_tipo_code='CDC'
and c.classif_id=a.classif_id
--and p_data BETWEEN c.validita_inizio AND COALESCE(c.validita_fine, p_data)
and a2.classif_id=c.classif_id_padre
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
and a2.data_cancellazione is null
and a2.classif_id=c.classif_id_padre
/*and a.validita_fine is null
and b.validita_fine is null
and c.validita_fine is null
and a2.validita_fine is null*/
)
,cdr as (
select a.classif_id,null cdr_cdc_code,null cdr_cdc_desc
,a.classif_code cdr_cdr_code,a.classif_desc cdr_cdr_desc
 from siaC_t_class a,siac_d_class_tipo b
 where a.ente_proprietario_id=p_ente_proprietario_id
and b.classif_tipo_id=a.classif_tipo_id
and b.classif_tipo_code='CDR'
and a.data_cancellazione is null
and b.data_cancellazione is null
/*and a.validita_fine is null
and b.validita_fine is null*/
)
select
atmc.movgest_ts_id,
atmc.attoamm_anno, atmc.attoamm_numero, atmc.attoamm_oggetto, atmc.attoamm_note,
atmc.attoamm_tipo_code, atmc.attoamm_tipo_desc, atmc.attoamm_stato_desc, atmc.attoamm_id,
cdc.cdc_cdc_code,cdc.cdc_cdc_desc,cdc.cdc_cdr_code,cdc.cdc_cdr_desc,
cdr.cdr_cdc_code,cdr.cdr_cdc_desc,cdr.cdr_cdr_code,cdr.cdr_cdr_desc
from atmc left join cdc on
atmc.classif_id=cdc.classif_id
left join cdr on
atmc.classif_id=cdr.classif_id),
impattuale as (
SELECT COALESCE(SUM(a.movgest_ts_det_importo),0) importo_attuale, a.movgest_ts_id
FROM siac.siac_t_movgest_ts_det a, siac.siac_d_movgest_ts_det_tipo b
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.movgest_ts_det_tipo_id = b.movgest_ts_det_tipo_id
AND a.data_cancellazione IS NULL
AND b.data_cancellazione IS NULL
and a.validita_fine is null
and b.validita_fine is null
and b.movgest_ts_det_tipo_code='A'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
GROUP BY  a.movgest_ts_id, b.movgest_ts_det_tipo_code
)
,
impiniziale as (
SELECT COALESCE(SUM(a.movgest_ts_det_importo),0) importo_iniziale, a.movgest_ts_id
FROM siac.siac_t_movgest_ts_det a, siac.siac_d_movgest_ts_det_tipo b
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.movgest_ts_det_tipo_id = b.movgest_ts_det_tipo_id
AND a.data_cancellazione IS NULL
AND b.data_cancellazione IS NULL
and a.validita_fine is null
and b.validita_fine is null
and b.movgest_ts_det_tipo_code='I'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
GROUP BY  a.movgest_ts_id, b.movgest_ts_det_tipo_code
)
,
imputilizzabile as (
SELECT COALESCE(SUM(a.movgest_ts_det_importo),0) importo_utilizzabile, a.movgest_ts_id
FROM siac.siac_t_movgest_ts_det a, siac.siac_d_movgest_ts_det_tipo b
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.movgest_ts_det_tipo_id = b.movgest_ts_det_tipo_id
AND a.data_cancellazione IS NULL
AND b.data_cancellazione IS NULL
and a.validita_fine is null
and b.validita_fine is null
and b.movgest_ts_det_tipo_code='U'
--AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
GROUP BY  a.movgest_ts_id, b.movgest_ts_det_tipo_code
),
impliquidatoemessoquietanziato as (select tz.* from (
with liquid as (
 SELECT sum(COALESCE(b.liq_importo,0)) importo_liquidato, a.movgest_ts_id,
b.liq_id
    FROM siac.siac_r_liquidazione_movgest a, siac.siac_t_liquidazione b,
    siac.siac_d_liquidazione_stato c, siac.siac_r_liquidazione_stato d
    WHERE
    a.ente_proprietario_id=p_ente_proprietario_id
    AND   a.liq_id = b.liq_id
    AND   b.liq_id = d.liq_id
    AND   d.liq_stato_id = c.liq_stato_id
    AND   c.liq_stato_code <> 'A'
    --AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
    --AND p_data BETWEEN d.validita_inizio AND COALESCE(d.validita_fine, p_data)
    AND a.data_cancellazione IS NULL
    AND b.data_cancellazione IS NULL
    AND c.data_cancellazione IS NULL
    AND d.data_cancellazione IS NULL
    AND a.validita_fine IS NULL
    AND b.validita_fine IS NULL
    AND c.validita_fine IS NULL
    AND d.validita_fine IS NULL
    group by a.movgest_ts_id, b.liq_id),
emes as (
  SELECT COALESCE(SUM(e.ord_ts_det_importo),0) importo_emesso, a.liq_id
            FROM
            siac_r_liquidazione_ord a,
            siac_t_ordinativo_ts b,
                 siac_r_ordinativo_stato c, siac_d_ordinativo_stato d,
                 siac_t_ordinativo_ts_det e, siac_d_ordinativo_ts_det_tipo f
            WHERE
            a.ente_proprietario_id=p_ente_proprietario_id and
            a.sord_id=b.ord_ts_id
            AND  c.ord_id = b.ord_id
            AND  c.ord_stato_id = d.ord_stato_id
            AND  e.ord_ts_id = b.ord_ts_id
            AND  f.ord_ts_det_tipo_id = e.ord_ts_det_tipo_id
            AND  d.ord_stato_code <> 'A'
            AND  f.ord_ts_det_tipo_code = 'A'
            --AND  p_data BETWEEN  a.validita_inizio  AND COALESCE(a.validita_fine, p_data)
            --AND  p_data BETWEEN  c.validita_inizio  AND COALESCE(c.validita_fine, p_data)
            AND  a.data_cancellazione IS NULL
            AND  b.data_cancellazione IS NULL
            AND  c.data_cancellazione IS NULL
            AND  d.data_cancellazione IS NULL
            AND  e.data_cancellazione IS NULL
            AND  f.data_cancellazione IS NULL
            AND  a.validita_fine IS NULL
            AND  b.validita_fine IS NULL
            AND  c.validita_fine IS NULL
            AND  d.validita_fine IS NULL
            AND  e.validita_fine IS NULL
            AND  f.validita_fine IS NULL
            group by a.liq_id),
quiet as (
  SELECT COALESCE(SUM(e.ord_ts_det_importo),0) importo_quietanziato, a.liq_id
            FROM
            siac_r_liquidazione_ord a,
            siac_t_ordinativo_ts b,
                 siac_r_ordinativo_stato c, siac_d_ordinativo_stato d,
                 siac_t_ordinativo_ts_det e, siac_d_ordinativo_ts_det_tipo f
            WHERE
            a.ente_proprietario_id=p_ente_proprietario_id and
            a.sord_id=b.ord_ts_id
            AND  c.ord_id = b.ord_id
            AND  c.ord_stato_id = d.ord_stato_id
            AND  e.ord_ts_id = b.ord_ts_id
            AND  f.ord_ts_det_tipo_id = e.ord_ts_det_tipo_id
            AND  d.ord_stato_code= 'Q'
            AND  f.ord_ts_det_tipo_code = 'A'
            --AND  p_data BETWEEN  a.validita_inizio  AND COALESCE(a.validita_fine, p_data)
            --AND  p_data BETWEEN  c.validita_inizio  AND COALESCE(c.validita_fine, p_data)
            AND  a.data_cancellazione IS NULL
            AND  b.data_cancellazione IS NULL
            AND  c.data_cancellazione IS NULL
            AND  d.data_cancellazione IS NULL
            AND  e.data_cancellazione IS NULL
            AND  f.data_cancellazione IS NULL
            AND  a.validita_fine IS NULL
            AND  b.validita_fine IS NULL
            AND  c.validita_fine IS NULL
            AND  d.validita_fine IS NULL
            AND  e.validita_fine IS NULL
            AND  f.validita_fine IS NULL
            group by a.liq_id)
select liquid.movgest_ts_id,coalesce(sum(liquid.importo_liquidato),0) importo_liquidato,
coalesce(sum(emes.importo_emesso),0) importo_emesso,
coalesce(sum(quiet.importo_quietanziato),0) importo_quietanziato
from liquid left join emes ON
liquid.liq_id=emes.liq_id
left join quiet ON
liquid.liq_id=quiet.liq_id
group by liquid.movgest_ts_id
) as tz),
cofog as (
select distinct r.movgest_ts_id,
a.classif_code codice_cofog_gruppo,a.classif_desc descrizione_cofog_gruppo,
a2.classif_code codice_cofog_divisione,a2.classif_desc descrizione_cofog_divisione
from
siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--DIVISIONE_COFOG
siac_r_class_fam_tree d2,
siac_t_class a2
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='GRUPPO_COFOG'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
--and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
)
, pdc5 as (
select distinct
r.movgest_ts_id,
a.classif_code pdc5_codice_pdc_finanziario_V,a.classif_desc pdc5_descrizione_pdc_finanziario_V,
a2.classif_code pdc5_codice_pdc_finanziario_IV,a2.classif_desc pdc5_descrizione_pdc_finanziario_IV,
a3.classif_code pdc5_codice_pdc_finanziario_III,a3.classif_desc pdc5_descrizione_pdc_finanziario_III,
a4.classif_code pdc5_codice_pdc_finanziario_II,a4.classif_desc pdc5_descrizione_pdc_finanziario_II,
a5.classif_code pdc5_codice_pdc_finanziario_I,a5.classif_desc pdc5_descrizione_pdc_finanziario_I
 from siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4,
--PDC_I
siac_r_class_fam_tree d5,
siac_t_class a5
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PDC_V'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and d5.classif_id=a4.classif_id
and a5.classif_id=d5.classif_id_padre
-- SIAC-5883 Daniela 13.02.2018
-- and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
-- FINE SIAC-5883 Daniela 13.02.2018
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
--and p_data BETWEEN d3.validita_inizio and COALESCE(d3.validita_fine,p_data)
--and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
--and p_data BETWEEN d5.validita_inizio and COALESCE(d5.validita_fine,p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   d3.data_cancellazione IS NULL
AND   a3.data_cancellazione IS NULL
AND   d4.data_cancellazione IS NULL
AND   a4.data_cancellazione IS NULL
AND   d5.data_cancellazione IS NULL
AND   a5.data_cancellazione IS NULL
/*AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
AND   d3.validita_fine IS NULL
AND   a3.validita_fine IS NULL
AND   d4.validita_fine IS NULL
AND   a4.validita_fine IS NULL
AND   d5.validita_fine IS NULL
AND   a5.validita_fine IS NULL*/
)
, pdc4 as (
select distinct r.movgest_ts_id,
a.classif_code pdc4_codice_pdc_finanziario_IV,a.classif_desc pdc4_descrizione_pdc_finanziario_IV,
a2.classif_code pdc4_codice_pdc_finanziario_III,a2.classif_desc pdc4_descrizione_pdc_finanziario_III,
a3.classif_code pdc4_codice_pdc_finanziario_II,a3.classif_desc pdc4_descrizione_pdc_finanziario_II,
a4.classif_code pdc4_codice_pdc_finanziario_I,a4.classif_desc pdc4_descrizione_pdc_finanziario_I
 from siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PDC_IV'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
-- SIAC-5883 Daniela 13.02.2018
-- and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
-- FINE SIAC-5883 Daniela 13.02.2018
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
--and p_data BETWEEN d3.validita_inizio and COALESCE(d3.validita_fine,p_data)
--and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   d3.data_cancellazione IS NULL
AND   a3.data_cancellazione IS NULL
AND   d4.data_cancellazione IS NULL
AND   a4.data_cancellazione IS NULL
/*AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
AND   d3.validita_fine IS NULL
AND   a3.validita_fine IS NULL
AND   d4.validita_fine IS NULL
AND   a4.validita_fine IS NULL*/
)
, pce5 as (
select distinct r.movgest_ts_id,
--r.classif_id,
a.classif_code pce5_codice_pdc_economico_V,a.classif_desc pce5_descrizione_pdc_economico_V,
a2.classif_code pce5_codice_pdc_economico_IV,a2.classif_desc pce5_descrizione_pdc_economico_IV,
a3.classif_code pce5_codice_pdc_economico_III,a3.classif_desc pce5_descrizione_pdc_economico_III,
a4.classif_code pce5_codice_pdc_economico_II,a4.classif_desc pce5_descrizione_pdc_economico_II,
a5.classif_code pce5_codice_pdc_economico_I,a5.classif_desc pce5_descrizione_pdc_economico_I
 from siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4,
--PDC_I
siac_r_class_fam_tree d5,
siac_t_class a5
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PCE_V'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and d5.classif_id=a4.classif_id
and a5.classif_id=d5.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
--and p_data BETWEEN d3.validita_inizio and COALESCE(d3.validita_fine,p_data)
--and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
--and p_data BETWEEN d5.validita_inizio and COALESCE(d5.validita_fine,p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   d3.data_cancellazione IS NULL
AND   a3.data_cancellazione IS NULL
AND   d4.data_cancellazione IS NULL
AND   a4.data_cancellazione IS NULL
AND   d5.data_cancellazione IS NULL
AND   a5.data_cancellazione IS NULL
/*AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
AND   d3.validita_fine IS NULL
AND   a3.validita_fine IS NULL
AND   d4.validita_fine IS NULL
AND   a4.validita_fine IS NULL
AND   d5.validita_fine IS NULL
AND   a5.validita_fine IS NULL*/
)
, pce4 as (
select distinct r.movgest_ts_id,
a.classif_code pce4_codice_pdc_economico_IV,a.classif_desc pce4_descrizione_pdc_economico_IV,
a2.classif_code pce4_codice_pdc_economico_III,a2.classif_desc pce4_descrizione_pdc_economico_III,
a3.classif_code pce4_codice_pdc_economico_II,a3.classif_desc pce4_descrizione_pdc_economico_II,
a4.classif_code pce4_codice_pdc_economico_I,a4.classif_desc pce4_descrizione_pdc_economico_I
 from siac_r_movgest_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PCE_IV'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
--and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
--and p_data BETWEEN d3.validita_inizio and COALESCE(d3.validita_fine,p_data)
--and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   r.data_cancellazione IS NULL
AND   d2.data_cancellazione IS NULL
AND   a2.data_cancellazione IS NULL
AND   d3.data_cancellazione IS NULL
AND   a3.data_cancellazione IS NULL
AND   d4.data_cancellazione IS NULL
AND   a4.data_cancellazione IS NULL
/*AND   a.validita_fine IS NULL
AND   b.validita_fine IS NULL
AND   r.validita_fine IS NULL
AND   d2.validita_fine IS NULL
AND   a2.validita_fine IS NULL
AND   d3.validita_fine IS NULL
AND   a3.validita_fine IS NULL
AND   d4.validita_fine IS NULL
AND   a4.validita_fine IS NULL*/
),
impFlagAttivaGsa as -- 28.05.2018 Sofia siac-6102
(
select rattr.movgest_ts_id, rattr.boolean flag_attiva_gsa
from siac_r_movgest_ts_attr rattr, siac_t_attr attr
where attr.ente_proprietario_id=p_ente_proprietario_id
and   attr.attr_code='FlagAttivaGsa'
and   rattr.attr_id=attr.attr_id
and   rattr.data_cancellazione is null
and   rattr.validita_fine is null
)
select
imp.ente_proprietario_id, imp.ente_denominazione, imp.anno,
imp.movgest_anno, imp.movgest_numero, imp.movgest_desc, imp.movgest_ts_code, imp.movgest_ts_desc,
imp.movgest_stato_code, imp.movgest_stato_desc,
imp.movgest_ts_scadenza_data, imp.parere_finanziario, imp.movgest_id, imp.movgest_ts_id,
imp.movgest_ts_tipo_code,
cap.elem_code, cap.elem_code2, cap.elem_code3, cap.elem_desc, cap.elem_desc2,
imp.bil_id,
imp.data_inizio_val_stato_subimp,
imp.data_creazione_subimp,
imp.data_inizio_val_subimp,
imp.data_modifica_subimp,
imp.data_creazione_imp,
imp.data_inizio_val_imp,
imp.data_modifica_imp,
imp.fase_operativa_code, imp.fase_operativa_desc ,
sogg.soggetto_code, sogg.soggetto_desc, sogg.codice_fiscale,
sogg.codice_fiscale_estero, sogg.partita_iva, sogg.soggetto_id
,sogcla.soggetto_classe_code, sogcla.soggetto_classe_desc,
tipoimpegno.tipoimpegno_classif_code,
tipoimpegno.tipoimpegno_classif_desc,
ricorrentespesa.ricorrentespesa_classif_code,
ricorrentespesa.ricorrentespesa_classif_desc,
truespesa.truespesa_classif_code,
truespesa.truespesa_classif_desc,
persaspesa.persaspesa_classif_code,
persaspesa.persaspesa_classif_desc,
polregunitarie.polregunitarie_classif_code,
polregunitarie.polregunitarie_classif_desc,
cla11.cla11_classif_code,
cla11.cla11_classif_desc,
cla11.cla11_classif_tipo_code,
cla12.cla12_classif_code,
cla12.cla12_classif_desc,
cla12.cla12_classif_tipo_code,
cla13.cla13_classif_code,
cla13.cla13_classif_desc,
cla13.cla13_classif_tipo_code,
cla14.cla14_classif_code,
cla14.cla14_classif_desc,
cla14.cla14_classif_tipo_code,
cla15.cla15_classif_code,
cla15.cla15_classif_desc,
cla15.cla15_classif_tipo_code,
t_annoCapitoloOrigine.annoCapitoloOrigine,
t_numeroCapitoloOrigine.numeroCapitoloOrigine,
t_annoOriginePlur.annoOriginePlur,
t_numeroArticoloOrigine.numeroArticoloOrigine,
t_annoRiaccertato.annoRiaccertato,
t_numeroRiaccertato.numeroRiaccertato,
t_numeroOriginePlur.numeroOriginePlur,
t_flagDaRiaccertamento.flagDaRiaccertamento,
t_numeroUEBOrigine.numeroUEBOrigine,
t_cig.cig,
t_cup.cup,
t_NOTE_MOVGEST.NOTE_MOVGEST,
t_validato.validato,
t_annoFinanziamento.annoFinanziamento,
t_numeroAccFinanziamento.numeroAccFinanziamento,
t_flagCassaEconomale.flagCassaEconomale,
attoamm.attoamm_anno, attoamm.attoamm_numero, attoamm.attoamm_oggetto, attoamm.attoamm_note,
attoamm.attoamm_tipo_code, attoamm.attoamm_tipo_desc, attoamm.attoamm_stato_desc, attoamm.attoamm_id,
impattuale.importo_attuale,
impiniziale.importo_iniziale,
imputilizzabile.importo_utilizzabile,
impliquidatoemessoquietanziato.importo_liquidato,
impliquidatoemessoquietanziato.importo_emesso,
impliquidatoemessoquietanziato,importo_quietanziato,
cofog.codice_cofog_gruppo,
cofog.descrizione_cofog_gruppo,
cofog.codice_cofog_divisione,
cofog.descrizione_cofog_divisione,
pdc5.pdc5_codice_pdc_finanziario_V,pdc5.pdc5_descrizione_pdc_finanziario_V,
pdc5.pdc5_codice_pdc_finanziario_IV,pdc5.pdc5_descrizione_pdc_finanziario_IV,
pdc5.pdc5_codice_pdc_finanziario_III,pdc5.pdc5_descrizione_pdc_finanziario_III,
pdc5.pdc5_codice_pdc_finanziario_II,pdc5.pdc5_descrizione_pdc_finanziario_II,
pdc5.pdc5_codice_pdc_finanziario_I,pdc5.pdc5_descrizione_pdc_finanziario_I,
pdc4.pdc4_codice_pdc_finanziario_IV,pdc4.pdc4_descrizione_pdc_finanziario_IV,
pdc4.pdc4_codice_pdc_finanziario_III,pdc4.pdc4_descrizione_pdc_finanziario_III,
pdc4.pdc4_codice_pdc_finanziario_II,pdc4.pdc4_descrizione_pdc_finanziario_II,
pdc4.pdc4_codice_pdc_finanziario_I,pdc4.pdc4_descrizione_pdc_finanziario_I,
pce5.pce5_codice_pdc_economico_V,pce5.pce5_descrizione_pdc_economico_V,
pce5.pce5_codice_pdc_economico_IV,pce5.pce5_descrizione_pdc_economico_IV,
pce5.pce5_codice_pdc_economico_III,pce5.pce5_descrizione_pdc_economico_III,
pce5.pce5_codice_pdc_economico_II,pce5.pce5_descrizione_pdc_economico_II,
pce5.pce5_codice_pdc_economico_I,pce5.pce5_descrizione_pdc_economico_I,
pce4.pce4_codice_pdc_economico_IV,pce4.pce4_descrizione_pdc_economico_IV,
pce4.pce4_codice_pdc_economico_III,pce4.pce4_descrizione_pdc_economico_III,
pce4.pce4_codice_pdc_economico_II,pce4.pce4_descrizione_pdc_economico_II,
pce4.pce4_codice_pdc_economico_I,pce4.pce4_descrizione_pdc_economico_I,
attoamm.cdc_cdc_code,attoamm.cdc_cdc_desc,attoamm.cdc_cdr_code,attoamm.cdc_cdr_desc,
attoamm.cdr_cdc_code,attoamm.cdr_cdc_desc,attoamm.cdr_cdr_code,attoamm.cdr_cdr_desc,
t_flagPrenotazione.flagPrenotazione, t_flagPrenotazioneLiquidabile.flagPrenotazioneLiquidabile,
t_flagFrazionabile.flagFrazionabile,
imp.siope_tipo_debito_code, imp.siope_tipo_debito_desc, imp.siope_tipo_debito_desc_bnkit,
imp.siope_assenza_motivazione_code, imp.siope_assenza_motivazione_desc, imp.siope_assenza_motivazione_desc_bnkit,
coalesce(impFlagAttivaGsa.flag_attiva_gsa,'N') flag_attiva_gsa -- 28.05.2018 Sofia siac-6102
from
imp left join cap
on
imp.movgest_id=cap.movgest_id
left join sogg
on
imp.movgest_ts_id=sogg.movgest_ts_id
left join sogcla
on
imp.movgest_ts_id=sogcla.movgest_ts_id
left join tipoimpegno
on
imp.movgest_ts_id=tipoimpegno.movgest_ts_id
left join ricorrentespesa
on
imp.movgest_ts_id=ricorrentespesa.movgest_ts_id
left join truespesa
on
imp.movgest_ts_id=truespesa.movgest_ts_id
left join persaspesa
on
imp.movgest_ts_id=persaspesa.movgest_ts_id
left join polregunitarie
on
imp.movgest_ts_id=polregunitarie.movgest_ts_id
left join cla11
on
imp.movgest_ts_id=cla11.movgest_ts_id
left join cla12
on
imp.movgest_ts_id=cla12.movgest_ts_id
left join cla13
on
imp.movgest_ts_id=cla13.movgest_ts_id
left join cla14
on
imp.movgest_ts_id=cla14.movgest_ts_id
left join cla15
on
imp.movgest_ts_id=cla15.movgest_ts_id
left join t_annoCapitoloOrigine
on
imp.movgest_ts_id=t_annoCapitoloOrigine.movgest_ts_id
left join t_numeroCapitoloOrigine
on
imp.movgest_ts_id=t_numeroCapitoloOrigine.movgest_ts_id
left join t_annoOriginePlur
on
imp.movgest_ts_id=t_annoOriginePlur.movgest_ts_id
left join t_numeroArticoloOrigine
on
imp.movgest_ts_id=t_numeroArticoloOrigine.movgest_ts_id
left join t_annoRiaccertato
on
imp.movgest_ts_id=t_annoRiaccertato.movgest_ts_id
left join t_numeroRiaccertato
on
imp.movgest_ts_id=t_numeroRiaccertato.movgest_ts_id
left join t_numeroOriginePlur
on
imp.movgest_ts_id=t_numeroOriginePlur.movgest_ts_id
left join t_flagDaRiaccertamento
on
imp.movgest_ts_id=t_flagDaRiaccertamento.movgest_ts_id
left join t_numeroUEBOrigine
on
imp.movgest_ts_id=t_numeroUEBOrigine.movgest_ts_id
left join t_cig
on
imp.movgest_ts_id=t_cig.movgest_ts_id
left join t_cup
on
imp.movgest_ts_id=t_cup.movgest_ts_id
left join t_NOTE_MOVGEST
on
imp.movgest_ts_id=t_NOTE_MOVGEST.movgest_ts_id
left join t_validato
on
imp.movgest_ts_id=t_validato.movgest_ts_id
left join t_annoFinanziamento
on
imp.movgest_ts_id=t_annoFinanziamento.movgest_ts_id
left join t_numeroAccFinanziamento
on
imp.movgest_ts_id=t_numeroAccFinanziamento.movgest_ts_id
left join t_flagCassaEconomale
on
imp.movgest_ts_id=t_flagCassaEconomale.movgest_ts_id
left join attoamm
on
imp.movgest_ts_id=attoamm.movgest_ts_id
left join impattuale
on
imp.movgest_ts_id=impattuale.movgest_ts_id
left join impiniziale
on
imp.movgest_ts_id=impiniziale.movgest_ts_id
left join imputilizzabile
on
imp.movgest_ts_id=imputilizzabile.movgest_ts_id
left join impliquidatoemessoquietanziato
on
imp.movgest_ts_id=impliquidatoemessoquietanziato.movgest_ts_id
left join cofog
on
imp.movgest_ts_id=cofog.movgest_ts_id
left join pdc5
on
imp.movgest_ts_id=pdc5.movgest_ts_id
left join pdc4
on
imp.movgest_ts_id=pdc4.movgest_ts_id
left join pce5
on
imp.movgest_ts_id=pce5.movgest_ts_id
left join pce4
on
imp.movgest_ts_id=pce4.movgest_ts_id
left join t_flagPrenotazione
on
imp.movgest_ts_id=t_flagPrenotazione.movgest_ts_id
left join t_flagPrenotazioneLiquidabile
on
imp.movgest_ts_id=t_flagPrenotazioneLiquidabile.movgest_ts_id
left join t_flagFrazionabile
on
imp.movgest_ts_id=t_flagFrazionabile.movgest_ts_id
left join impFlagAttivaGsa  -- 28.05.2018 Sofia siac-6102
on
imp.movgest_ts_id=impFlagAttivaGsa.movgest_ts_id
) xx
where xx.movgest_ts_tipo_code='S';

update siac_dwh_log_elaborazioni  set fnc_elaborazione_fine = clock_timestamp(),
fnc_durata=clock_timestamp()-fnc_elaborazione_inizio
where fnc_user=v_user_table;

esito:='ok';

EXCEPTION
WHEN others THEN
  esito:='Funzione carico impegni (FNC_SIAC_DWH_IMPEGNO) terminata con errori';
  RAISE NOTICE '%-%.',SQLSTATE,SQLERRM;
RETURN;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY DEFINER
COST 100 ROWS 1000;

CREATE OR REPLACE FUNCTION fnc_siac_dwh_programma (
  p_ente_proprietario_id integer,
  p_data timestamp
)
RETURNS TABLE (
  esito varchar
) AS
$body$
DECLARE

rec_programma_id record;
rec_classif_id record;
rec_classif_id_attr record;
rec_attr record;
-- Variabili per campi estratti dal cursore rec_programma_id
v_ente_proprietario_id INTEGER := null;
v_ente_denominazione VARCHAR := null;
v_programma_code VARCHAR := null;
v_programma_desc VARCHAR := null;
v_programma_data_gara_aggiudicazione TIMESTAMP := null;
v_programma_data_gara_indizione TIMESTAMP := null;
v_investimento_in_definizione BOOLEAN;
v_programma_stato_code VARCHAR := null;
v_programma_stato_desc VARCHAR := null;
-- Variabili per classificatori non in gerarchia
v_cod_tipo_ambito VARCHAR := null;
v_desc_tipo_ambito VARCHAR := null;
-- Variabili attributo
v_FlagRilevanteFPV VARCHAR := null;
v_ValoreComplessivoProgramma NUMERIC := null;
v_Note VARCHAR := null;
-- Variabili atto amministrativo
v_anno_atto_amministrativo VARCHAR := null;
v_numero_atto_amministrativo INTEGER := null;
v_oggetto_atto_amministrativo VARCHAR := null;
v_note_atto_amministrativo VARCHAR := null;
v_codice_tipo_atto_amministrativo VARCHAR := null;
v_descrizione_tipo_atto_amministrativo VARCHAR := null;
v_descrizione_stato_atto_amministrativo VARCHAR := null;
v_cod_cdr_atto_amministrativo VARCHAR := null;
v_desc_cdr_atto_amministrativo VARCHAR := null;
v_cod_cdc_atto_amministrativo VARCHAR := null;
v_desc_cdc_atto_amministrativo VARCHAR := null;
-- Variabili utili per il caricamento
v_classif_id_part INTEGER := null;
v_classif_id_padre INTEGER := null;
v_classif_code VARCHAR := null;
v_classif_desc VARCHAR := null;
v_classif_tipo_code VARCHAR := null;
v_classif_tipo_desc VARCHAR := null;
v_classif_tipo_id INTEGER := null;
v_conta_ciclo_classif INTEGER := null;
v_programma_id INTEGER := null;
v_attoamm_id INTEGER := null;
v_flag_attributo VARCHAR := null;

-- 29.04.2019 Sofia jira siac-6255
v_programma_responsabile_unico VARCHAR := null;
v_programma_spazi_finanziari   boolean :=  null;
v_programma_anno_bilancio      VARCHAR := null;
v_programma_tipo_code          VARCHAR := null;
v_programma_tipo_desc          VARCHAR := null;
v_programma_affidamento_code   VARCHAR := null;
v_programma_affidamento_desc   VARCHAR := null;


v_user_table varchar;
params varchar;
fnc_eseguita integer;

BEGIN

select count(*) into fnc_eseguita
from siac_dwh_log_elaborazioni
a where
a.ente_proprietario_id=p_ente_proprietario_id and
a.fnc_elaborazione_inizio >= (now() - interval '13 hours')::timestamp -- non deve esistere  una elaborazione uguale nelle 13 ore che precedono la chimata
and a.fnc_name='fnc_siac_dwh_programma';

if fnc_eseguita> 0 then

return;

else

IF p_ente_proprietario_id IS NULL THEN
   RAISE EXCEPTION 'Errore: Parametro Ente Propietario nullo';
   RETURN;
END IF;

IF p_data IS NULL THEN
   p_data := now();
END IF;

select fnc_siac_random_user()
into	v_user_table;

params := p_ente_proprietario_id::varchar||' - '||p_data::varchar;


insert into
siac_dwh_log_elaborazioni (
ente_proprietario_id,
fnc_name ,
fnc_parameters ,
fnc_elaborazione_inizio ,
fnc_user
)
values (
p_ente_proprietario_id,
'fnc_siac_dwh_programma',
params,
clock_timestamp(),
v_user_table
);

esito:= 'Inizio funzione carico programmi (FNC_SIAC_DWH_PROGRAMMA) - '||clock_timestamp();
RETURN NEXT;

esito:= '  Inizio eliminazione dati pregressi - '||clock_timestamp();
return next;
DELETE FROM siac.siac_dwh_programma
WHERE ente_proprietario_id = p_ente_proprietario_id;
esito:= '  Fine eliminazione dati pregressi - '||clock_timestamp();
return next;

-- Ciclo per estrarre programma_id
FOR rec_programma_id IN
SELECT tep.ente_proprietario_id, tep.ente_denominazione,
       tp.programma_code, tp.programma_desc, tp.programma_data_gara_aggiudicazione,
       tp.programma_data_gara_indizione, tp.investimento_in_definizione,
       dps.programma_stato_code, dps.programma_stato_desc, tp.programma_id,
       -- 29.04.2019 Sofia jira siac-6255
       tp.programma_responsabile_unico ,
       tp.programma_spazi_finanziari,
       per.anno programma_anno_bilancio,
       tipo.programma_tipo_code,
       tipo.programma_tipo_desc,
       aff.programma_affidamento_code,
       aff.programma_affidamento_desc
FROM siac.siac_t_programma tp
INNER JOIN  siac.siac_t_ente_proprietario tep ON tep.ente_proprietario_id = tp.ente_proprietario_id
INNER JOIN  siac.siac_r_programma_stato rps ON rps.programma_id = tp.programma_id
INNER JOIN  siac.siac_d_programma_stato dps ON dps.programma_stato_id = rps.programma_stato_id
-- 29.04.2019 Sofia jira siac-6255
INNER JOIN siac_d_programma_tipo tipo on ( tipo.programma_tipo_id=tp.programma_tipo_id)
LEFT  JOIN  siac_t_bil bil inner join siac_t_periodo per on (bil.periodo_id=per.periodo_id)
      on ( bil.bil_id=tp.bil_id )
LEFT JOIN  siac_d_programma_affidamento aff on  (aff.programma_affidamento_id=tp.programma_affidamento_id)
WHERE tep.ente_proprietario_id = p_ente_proprietario_id
AND p_data BETWEEN tp.validita_inizio AND COALESCE(tp.validita_fine, p_data)
AND tp.data_cancellazione IS NULL
AND p_data BETWEEN tep.validita_inizio AND COALESCE(tep.validita_fine, p_data)
AND tep.data_cancellazione IS NULL
AND p_data BETWEEN rps.validita_inizio AND COALESCE(rps.validita_fine, p_data)
AND rps.data_cancellazione IS NULL
AND p_data BETWEEN dps.validita_inizio AND COALESCE(dps.validita_fine, p_data)
AND dps.data_cancellazione IS NULL

LOOP

  v_ente_proprietario_id := null;
  v_ente_denominazione := null;
  v_programma_code := null;
  v_programma_desc := null;
  v_programma_data_gara_aggiudicazione := null;
  v_programma_data_gara_indizione := null;
  v_investimento_in_definizione := null;
  v_programma_stato_code := null;
  v_programma_stato_desc := null;
  v_cod_tipo_ambito := null;
  v_desc_tipo_ambito := null;
  v_programma_id := null;
  v_classif_tipo_id := null;

  -- 29.04.2019 Sofia JIRA siac-6255
  v_programma_responsabile_unico  := null;
  v_programma_spazi_finanziari    :=  null;
  v_programma_anno_bilancio       := null;
  v_programma_tipo_code           := null;
  v_programma_tipo_desc           := null;
  v_programma_affidamento_code    := null;
  v_programma_affidamento_desc    := null;

  v_ente_proprietario_id := rec_programma_id.ente_proprietario_id;
  v_ente_denominazione := rec_programma_id.ente_denominazione;
  v_programma_code := rec_programma_id.programma_code;
  v_programma_desc := rec_programma_id.programma_desc;
  v_programma_data_gara_aggiudicazione := rec_programma_id.programma_data_gara_aggiudicazione;
  v_programma_data_gara_indizione := rec_programma_id.programma_data_gara_indizione;
  v_investimento_in_definizione := rec_programma_id.investimento_in_definizione;
  v_programma_stato_code := rec_programma_id.programma_stato_code;
  v_programma_stato_desc := rec_programma_id.programma_stato_desc;

  v_programma_id := rec_programma_id.programma_id;

  -- 29.04.2019 Sofia JIRA siac-6255
  v_programma_responsabile_unico:= rec_programma_id.programma_responsabile_unico;
  v_programma_spazi_finanziari  := rec_programma_id.programma_spazi_finanziari;
  v_programma_anno_bilancio:=rec_programma_id.programma_anno_bilancio;
  v_programma_tipo_code:=rec_programma_id.programma_tipo_code;
  v_programma_tipo_desc:=rec_programma_id.programma_tipo_desc;
  v_programma_affidamento_code:=rec_programma_id.programma_affidamento_code;
  v_programma_affidamento_desc:=rec_programma_id.programma_affidamento_desc;

  esito:= '  Inizio ciclo programma ('||v_programma_id||') - '||clock_timestamp();
  return next;

  -- Sezione per i classificatori legati ai programmi
  esito:= '    Inizio step classificatori per programmi - '||clock_timestamp();
  return next;
  FOR rec_classif_id IN
  SELECT tc.classif_tipo_id, tc.classif_code, tc.classif_desc
  FROM siac.siac_r_programma_class rpc, siac.siac_t_class tc
  WHERE tc.classif_id = rpc.classif_id
  AND   rpc.programma_id = v_programma_id
  AND   rpc.data_cancellazione IS NULL
  AND   tc.data_cancellazione IS NULL
  AND   p_data BETWEEN rpc.validita_inizio AND COALESCE(rpc.validita_fine, p_data)
  AND   p_data BETWEEN tc.validita_inizio AND COALESCE(tc.validita_fine, p_data)

  LOOP

    v_classif_tipo_id :=  rec_classif_id.classif_tipo_id;
    v_classif_code := rec_classif_id.classif_code;
    v_classif_desc := rec_classif_id.classif_desc;

    v_classif_tipo_code := null;

    SELECT dct.classif_tipo_code
    INTO   v_classif_tipo_code
    FROM   siac.siac_d_class_tipo dct
    WHERE  dct.classif_tipo_id = v_classif_tipo_id
    AND    dct.data_cancellazione IS NULL
    AND    p_data BETWEEN dct.validita_inizio AND COALESCE(dct.validita_fine, p_data);

    IF v_classif_tipo_code = 'TIPO_AMBITO' THEN
       v_cod_tipo_ambito  := v_classif_code;
       v_desc_tipo_ambito :=  v_classif_desc;
    END IF;

  END LOOP;
  esito:= '    Fine step classificatori per programmi - '||clock_timestamp();
  return next;

-- Sezione pe gli attributi
v_FlagRilevanteFPV := null;
v_ValoreComplessivoProgramma := null;
v_Note := null;
v_flag_attributo := null;
-- Ciclo per estrarre gli attibuti relativi ad un programma_id
FOR rec_attr IN
SELECT ta.attr_code, dat.attr_tipo_code,
       rpa.tabella_id, rpa.percentuale, rpa."boolean" true_false, rpa.numerico, rpa.testo
FROM   siac.siac_r_programma_attr rpa, siac.siac_t_attr ta, siac.siac_d_attr_tipo dat
WHERE  rpa.attr_id = ta.attr_id
AND    ta.attr_tipo_id = dat.attr_tipo_id
AND    rpa.programma_id = v_programma_id
AND    rpa.data_cancellazione IS NULL
AND    ta.data_cancellazione IS NULL
AND    dat.data_cancellazione IS NULL
AND    p_data BETWEEN rpa.validita_inizio AND COALESCE(rpa.validita_fine, p_data)
AND    p_data BETWEEN ta.validita_inizio AND COALESCE(ta.validita_fine, p_data)
AND    p_data BETWEEN dat.validita_inizio AND COALESCE(dat.validita_fine, p_data)

LOOP

  IF rec_attr.attr_tipo_code = 'X' THEN
     v_flag_attributo := rec_attr.testo::varchar;
  ELSIF rec_attr.attr_tipo_code = 'N' THEN
     v_flag_attributo := rec_attr.numerico::varchar;
  ELSIF rec_attr.attr_tipo_code = 'P' THEN
     v_flag_attributo := rec_attr.percentuale::varchar;
  ELSIF rec_attr.attr_tipo_code = 'B' THEN
     v_flag_attributo := rec_attr.true_false::varchar;
  ELSIF rec_attr.attr_tipo_code = 'T' THEN
     v_flag_attributo := rec_attr.tabella_id::varchar;
  END IF;

  IF rec_attr.attr_code = 'FlagRilevanteFPV' THEN
     v_FlagRilevanteFPV := v_flag_attributo;
  ELSIF rec_attr.attr_code = 'ValoreComplessivoProgramma' THEN
     v_ValoreComplessivoProgramma := v_flag_attributo;
  ELSIF rec_attr.attr_code = 'Note' THEN
     v_Note := v_flag_attributo;
  END IF;

END LOOP;
-- Sezione pe i dati amministrativi
v_anno_atto_amministrativo := null;
v_numero_atto_amministrativo := null;
v_oggetto_atto_amministrativo := null;
v_note_atto_amministrativo := null;
v_codice_tipo_atto_amministrativo := null;
v_descrizione_tipo_atto_amministrativo := null;
v_descrizione_stato_atto_amministrativo := null;
v_cod_cdr_atto_amministrativo := null;
v_desc_cdr_atto_amministrativo := null;
v_cod_cdc_atto_amministrativo := null;
v_desc_cdc_atto_amministrativo := null;
v_attoamm_id := null;
SELECT taa.attoamm_anno, taa.attoamm_numero, taa.attoamm_oggetto, taa.attoamm_note,
       daat.attoamm_tipo_code, daat.attoamm_tipo_desc, daas.attoamm_stato_desc, taa.attoamm_id
INTO   v_anno_atto_amministrativo, v_numero_atto_amministrativo, v_oggetto_atto_amministrativo,
       v_note_atto_amministrativo, v_codice_tipo_atto_amministrativo,
       v_descrizione_tipo_atto_amministrativo, v_descrizione_stato_atto_amministrativo, v_attoamm_id
FROM siac.siac_r_programma_atto_amm rpaa, siac.siac_t_atto_amm taa, siac.siac_r_atto_amm_stato raas, siac.siac_d_atto_amm_stato daas,
     siac.siac_d_atto_amm_tipo daat
WHERE taa.attoamm_id = rpaa.attoamm_id
AND   taa.attoamm_id = raas.attoamm_id
AND   raas.attoamm_stato_id = daas.attoamm_stato_id
AND   taa.attoamm_tipo_id = daat.attoamm_tipo_id
AND   rpaa.programma_id = v_programma_id
AND   rpaa.data_cancellazione IS NULL
AND   taa.data_cancellazione IS NULL
AND   raas.data_cancellazione IS NULL
AND   daas.data_cancellazione IS NULL
AND   daat.data_cancellazione IS NULL
AND   p_data BETWEEN rpaa.validita_inizio AND COALESCE(rpaa.validita_fine, p_data)
AND   p_data BETWEEN taa.validita_inizio AND COALESCE(taa.validita_fine, p_data)
AND   p_data BETWEEN raas.validita_inizio AND COALESCE(raas.validita_fine, p_data)
AND   p_data BETWEEN daas.validita_inizio AND COALESCE(daas.validita_fine, p_data)
AND   p_data BETWEEN daat.validita_inizio AND COALESCE(daat.validita_fine, p_data);

-- Sezione per i classificatori legati agli atti amministrativi
esito:= '    Inizio step classificatori in gerarchia per atti amministrativi - '||clock_timestamp();
return next;
FOR rec_classif_id_attr IN
SELECT raac.classif_id
FROM  siac.siac_r_atto_amm_class raac
WHERE raac.attoamm_id = v_attoamm_id
AND   raac.data_cancellazione IS NULL
AND   p_data BETWEEN raac.validita_inizio AND COALESCE(raac.validita_fine, p_data)

LOOP

  v_conta_ciclo_classif :=0;
  v_classif_id_padre := null;

  -- Loop per RISALIRE la gerarchia di un dato classificatore
  LOOP

      v_classif_code := null;
      v_classif_desc := null;
      v_classif_id_part := null;
      v_classif_tipo_code := null;
      v_classif_tipo_desc := null;

      IF v_conta_ciclo_classif = 0 THEN
         v_classif_id_part := rec_classif_id_attr.classif_id;
      ELSE
         v_classif_id_part := v_classif_id_padre;
      END IF;

      SELECT tc.classif_code, tc.classif_desc, rcft.classif_id_padre, dct.classif_tipo_code, dct.classif_tipo_desc
      INTO   v_classif_code, v_classif_desc, v_classif_id_padre, v_classif_tipo_code, v_classif_tipo_desc
      FROM  siac.siac_r_class_fam_tree rcft, siac.siac_t_class tc, siac.siac_d_class_tipo dct
      WHERE rcft.classif_id = tc.classif_id
      AND   dct.classif_tipo_id = tc.classif_tipo_id
      AND   tc.classif_id = v_classif_id_part
      AND   rcft.data_cancellazione IS NULL
      AND   tc.data_cancellazione IS NULL
      AND   dct.data_cancellazione IS NULL
      AND   p_data BETWEEN rcft.validita_inizio AND COALESCE(rcft.validita_fine, p_data)
      AND   p_data BETWEEN tc.validita_inizio AND COALESCE(tc.validita_fine, p_data)
      AND   p_data BETWEEN dct.validita_inizio AND COALESCE(dct.validita_fine, p_data);

      IF v_classif_tipo_code = 'CDR' THEN
         v_cod_cdr_atto_amministrativo := v_classif_code;
         v_desc_cdr_atto_amministrativo := v_classif_desc;
      ELSIF v_classif_tipo_code = 'CDC' THEN
         v_cod_cdc_atto_amministrativo := v_classif_code;
         v_desc_cdc_atto_amministrativo := v_classif_desc;
      END IF;

      v_conta_ciclo_classif := v_conta_ciclo_classif +1;
      EXIT WHEN v_classif_id_padre IS NULL;

  END LOOP;
END LOOP;
esito:= '    Fine step classificatori in gerarchia per atti amministrativi - '||clock_timestamp();
return next;



  INSERT INTO siac.siac_dwh_programma
  (ente_proprietario_id,
  ente_denominazione,
  cod_programma,
  desc_programma,
  data_aggiudicazione_gara_progr,
  data_indizione_gara_progr,
  investimento_in_def_progr,
  cod_stato_programma,
  desc_stato_programma,
  cod_tipo_ambito,
  desc_tipo_ambito,
  flagrilevante_fpv,
  ValoreComplessivoProgramma,
  note,
  anno_atto_amministrativo,
  num_atto_amministrativo,
  oggetto_atto_amministrativo,
  note_atto_amministrativo,
  cod_tipo_atto_amministrativo,
  desc_tipo_atto_amministrativo,
  desc_stato_atto_amministrativo,
  cod_cdr_atto_amministrativo,
  desc_cdr_atto_amministrativo,
  cod_cdc_atto_amministrativo,
  desc_cdc_atto_amministrativo,
  -- 29.04.2019 Sofia Jira siac-6255
  programma_responsabile_unico,
  programma_spazi_finanziari,
  programma_anno_bilancio,
  programma_tipo_code,
  programma_tipo_desc,
  programma_affidamento_code,
  programma_affidamento_desc
  )
  VALUES (v_ente_proprietario_id,
          v_ente_denominazione,
          v_programma_code,
          v_programma_desc,
          v_programma_data_gara_aggiudicazione,
          v_programma_data_gara_indizione,
          v_investimento_in_definizione,
          v_programma_stato_code,
          v_programma_stato_desc,
          v_cod_tipo_ambito,
          v_desc_tipo_ambito,
          v_FlagRilevanteFPV,
          v_ValoreComplessivoProgramma,
          v_Note,
          v_anno_atto_amministrativo,
          v_numero_atto_amministrativo::varchar,
          v_oggetto_atto_amministrativo,
          v_note_atto_amministrativo,
          v_codice_tipo_atto_amministrativo,
          v_descrizione_tipo_atto_amministrativo,
          v_descrizione_stato_atto_amministrativo,
          v_cod_cdr_atto_amministrativo,
          v_desc_cdr_atto_amministrativo,
          v_cod_cdc_atto_amministrativo,
          v_desc_cdc_atto_amministrativo,
          -- 29.04.2019 Sofia Jira siac-6255
          v_programma_responsabile_unico,
		  v_programma_spazi_finanziari,
		  v_programma_anno_bilancio,
		  v_programma_tipo_code,
	      v_programma_tipo_desc,
          v_programma_affidamento_code,
	      v_programma_affidamento_desc
         );

esito:= '  Fine ciclo programma ('||v_programma_id||') - '||clock_timestamp();
RETURN NEXT;
END LOOP;
esito:= 'Fine funzione carico programmi (FNC_SIAC_DWH_PROGRAMMA) - '||clock_timestamp();
RETURN NEXT;

update siac_dwh_log_elaborazioni  set fnc_elaborazione_fine = clock_timestamp(),
fnc_durata=clock_timestamp()-fnc_elaborazione_inizio
where fnc_user=v_user_table;

end if;

EXCEPTION
WHEN others THEN
  esito:='Funzione carico programmi (FNC_SIAC_DWH_PROGRAMMA) terminata con errori';
  RAISE NOTICE '%-%.',SQLSTATE,SQLERRM;
RETURN;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY DEFINER
COST 100 ROWS 1000;

CREATE OR REPLACE FUNCTION fnc_siac_dwh_programma_cronop
(
  p_ente_proprietario_id integer,
  p_anno_bilancio varchar,
  p_data timestamp
)
RETURNS TABLE (
  esito varchar
) AS
$body$
DECLARE


v_user_table varchar;
params varchar;
fnc_eseguita integer;
interval_esec integer:=1;

BEGIN

esito:='fnc_siac_dwh_programma_cronop : inizio - '||clock_timestamp()||'.';
return next;

IF p_ente_proprietario_id IS NULL THEN
	   RAISE EXCEPTION 'Errore: Parametro Ente Propietario nullo.';
END IF;

IF p_anno_bilancio IS NULL THEN
	   RAISE EXCEPTION 'Errore: Parametro Anno Bilancio nullo.';
END IF;


select count(*) into fnc_eseguita
from siac_dwh_log_elaborazioni log
where log.ente_proprietario_id=p_ente_proprietario_id
and	  log.fnc_elaborazione_inizio >= (now() - interval '13 hours' )::timestamp -- non deve esistere  una elaborazione uguale nelle 13 ore che precedono la chimata
and   log.fnc_name='fnc_siac_dwh_programma_cronop';

if fnc_eseguita<= 0 then
	esito:= 'fnc_siac_dwh_programma_cronop : continue - eseguita da piu'' di '|| interval_esec::varchar||' ore - '||clock_timestamp()||'.';
	return next;


	IF p_data IS NULL THEN
	   IF p_anno_bilancio::integer < to_char(now(),'YYYY')::integer THEN
    	  p_data = to_timestamp('31/12/'||p_anno_bilancio, 'dd/mm/yyyy');
	   ELSE
    	  p_data := now();
	   END IF;
	END IF;


	select fnc_siac_random_user() into	v_user_table;

	params := p_ente_proprietario_id::varchar||' - '||p_anno_bilancio||' - '||p_data::varchar;


	insert into	siac_dwh_log_elaborazioni
    (
		ente_proprietario_id,
		fnc_name ,
		fnc_parameters ,
		fnc_elaborazione_inizio ,
		fnc_user
	)
	values
    (
		p_ente_proprietario_id,
		'fnc_siac_dwh_programma_cronop',
		params,
		clock_timestamp(),
		v_user_table
	);


	esito:= 'fnc_siac_dwh_programma_cronop : continue - inizio eliminazione dati pregressi (siac_dwh_programma_cronop) - '||clock_timestamp()||'.';
	return next;
	DELETE FROM siac_dwh_programma_cronop
    WHERE ente_proprietario_id = p_ente_proprietario_id
    and   programma_cronop_bil_anno=p_anno_bilancio;
	esito:= 'fnc_siac_dwh_programma_cronop : continue - fine eliminazione dati pregressi (siac_dwh_programma_cronop) - '||clock_timestamp()||'.';
	return next;

	esito:= 'fnc_siac_dwh_programma_cronop : continue - inizio caricamento programmi-cronop (siac_dwh_programma_cronop) - '||clock_timestamp()||'.';
	RETURN NEXT;

    insert into siac_dwh_programma_cronop
    (
      ente_proprietario_id,
      ente_denominazione,
      programma_code,
      programma_desc,
      programma_stato_code,
      programma_stato_desc,
      programma_ambito_code,
      programma_ambito_desc,
      programma_rilevante_fpv,
      programma_valore_complessivo,
      programma_gara_data_indizione,
      programma_gara_data_aggiudic,
      programma_investimento_in_def,
      programma_note,
      programma_anno_atto_amm,
      programma_num_atto_amm,
      programma_oggetto_atto_amm,
      programma_note_atto_amm,
      programma_code_tipo_atto_amm,
      programma_desc_tipo_atto_amm,
      programma_code_stato_atto_amm,
      programma_desc_stato_atto_amm,
      programma_code_cdr_atto_amm,
      programma_desc_cdr_atto_amm,
      programma_code_cdc_atto_amm,
      programma_desc_cdc_atto_amm,
      programma_cronop_bil_anno,
      programma_cronop_tipo,
      programma_cronop_versione,
      programma_cronop_desc,
      programma_cronop_anno_comp,
      programma_cronop_cap_tipo,
      programma_cronop_cap_articolo,
      programma_cronop_classif_bil,
      programma_cronop_anno_entrata,
      programma_cronop_valore_prev,
      -- 29.04.2019 Sofia jira siac-6255
      -- siac_t_programma
      programma_responsabile_unico,
      programma_spazi_finanziari,
      programma_tipo_code,
      programma_tipo_desc,
      programma_affidamento_code,
      programma_affidamento_desc,
      programma_anno_bilancio,
      -- 29.04.2019 Sofia siac-6255
      -- siac_t_cronop
      programma_cronop_data_appfat,
      programma_cronop_data_appdef,
      programma_cronop_data_appesec,
      programma_cronop_data_avviopr,
      programma_cronop_data_agglav,
      programma_cronop_data_inizlav,
      programma_cronop_data_finelav,
      programma_cronop_giorni_dur,
      programma_cronop_data_coll,
      programma_cronop_gest_quad_eco,
      programma_cronop_us_per_fpv_pr,
      programma_cronop_ann_atto_amm,
      programma_cronop_num_atto_amm,
      programma_cronop_ogg_atto_amm,
      programma_cronop_nte_atto_amm,
      programma_cronop_tpc_atto_amm,
      programma_cronop_tpd_atto_amm,
      programma_cronop_stc_atto_amm,
      programma_cronop_std_atto_amm,
      programma_cronop_crc_atto_amm,
      programma_cronop_crd_atto_amm,
      programma_cronop_cdc_atto_amm,
      programma_cronop_cdd_atto_amm
    )
    select
      ente.ente_proprietario_id,
      ente.ente_denominazione,
      query.programma_code,
      query.programma_desc,
      query.programma_stato_code,
      query.programma_stato_desc,
      query.programma_ambito_code,
      query.programma_ambito_desc,
      query.programma_rilevante_fpv,
      query.programma_valore_complessivo,
      query.programma_gara_data_indizione,
      query.programma_gara_data_aggiudic,
      query.programma_investimento_in_def,
      query.programma_note,
      query.programma_anno_atto_amm,
      query.programma_num_atto_amm,
      query.programma_oggetto_atto_amm,
      query.programma_note_atto_amm,
      query.programma_code_tipo_atto_amm,
      query.programma_desc_tipo_atto_amm,
      query.programma_code_stato_atto_amm,
      query.programma_desc_stato_atto_amm,
      query.programma_code_cdr_atto_amm,
      query.programma_desc_cdr_atto_amm,
      query.programma_code_cdc_atto_amm,
      query.programma_desc_cdc_atto_amm,
      query.programma_cronop_bil_anno,
      query.programma_cronop_tipo,
      query.programma_cronop_versione,
      query.programma_cronop_desc,
      query.programma_cronop_anno_comp,
      query.programma_cronop_cap_tipo,
      query.programma_cronop_cap_articolo,
      query.programma_cronop_classif_bil,
      query.programma_cronop_anno_entrata,
      query.programma_cronop_valore_prev,
      -- 29.04.2019 Sofia jira siac-6255
      -- siac_t_programma
      query.programma_responsabile_unico,
      query.programma_spazi_finanziari,
      query.programma_tipo_code,
      query.programma_tipo_desc,
      query.programma_affidamento_code,
      query.programma_affidamento_desc,
      query.programma_anno_bilancio,
      -- 29.04.2019 Sofia siac-6255
      -- siac_t_cronop
      query.cronop_data_approvazione_fattibilita,
      query.cronop_data_approvazione_programma_def,
      query.cronop_data_approvazione_programma_esec,
      query.cronop_data_avvio_procedura,
      query.cronop_data_aggiudicazione_lavori,
      query.cronop_data_inizio_lavori,
      query.cronop_data_fine_lavori,
      query.cronop_giorni_durata,
      query.cronop_data_collaudo,
      query.cronop_gestione_quadro_economico,
      query.cronop_usato_per_fpv_prov,
      query.cronop_anno_atto_amm,
      query.cronop_num_atto_amm,
      query.cronop_oggetto_atto_amm,
      query.cronop_note_atto_amm,
      query.cronop_code_tipo_atto_amm,
      query.cronop_desc_tipo_atto_amm,
      query.cronop_code_stato_atto_amm,
      query.cronop_desc_stato_atto_amm,
      query.cronop_code_cdr_atto_amm,
      query.cronop_desc_cdr_atto_amm,
      query.cronop_code_cdc_atto_amm,
      query.cronop_desc_cdc_atto_amm
    from
    (
    with
    programma as
    (
      select progr.ente_proprietario_id,
             progr.programma_id,
             progr.programma_code,
             progr.programma_desc,
             stato.programma_stato_code,
             stato.programma_stato_desc,
             progr.programma_data_gara_indizione programma_gara_data_indizione,
		     progr.programma_data_gara_aggiudicazione programma_gara_data_aggiudic,
		     progr.investimento_in_definizione programma_investimento_in_def,
             -- 29.04.2019 Sofia siac-6255
             progr.programma_responsabile_unico,
             progr.programma_spazi_finanziari,
             progr.programma_affidamento_id,
             progr.bil_id,
             tipo.programma_tipo_code,
             tipo.programma_tipo_desc
      from siac_t_programma progr, siac_r_programma_stato rs, siac_d_programma_stato stato,
           siac_d_programma_tipo tipo              -- 29.04.2019 Sofia siac-6255
      where stato.ente_proprietario_id=p_ente_proprietario_id
      and   rs.programma_stato_id=stato.programma_stato_id
      and   progr.programma_id=rs.programma_id
      -- 29.04.2019 Sofia siac-6255
      and   tipo.programma_tipo_id=progr.programma_tipo_id
      and   p_data BETWEEN progr.validita_inizio AND COALESCE(progr.validita_fine, p_data)
      and   progr.data_cancellazione is null
      AND   p_data BETWEEN rs.validita_inizio AND COALESCE(rs.validita_fine, p_data)
      and   rs.data_cancellazione  is null
    ),
    progr_ambito_class as
    (
    select rc.programma_id,
           c.classif_code programma_ambito_code,
           c.classif_desc  programma_ambito_desc
    from siac_r_programma_class rc, siac_t_class c, siac_d_class_tipo tipo
    where tipo.ente_proprietario_id=p_ente_proprietario_id
    and   tipo.classif_tipo_code='TIPO_AMBITO'
    and   c.classif_tipo_id=tipo.classif_tipo_id
    and   rc.classif_id=c.classif_id
    and   p_data BETWEEN rc.validita_inizio AND COALESCE(rc.validita_fine, p_data)
    and   rc.data_cancellazione is null
    and   c.data_cancellazione is null
    ),
    progr_note_attr_ril_fpv as
    (
    select rattr.programma_id,
           rattr.boolean programma_rilevante_fpv
    from siac_r_programma_attr rattr,siac_t_attr attr
    where attr.ente_proprietario_id=p_ente_proprietario_id
    and   attr.attr_code='FlagRilevanteFPV'
    and   rattr.attr_id=attr.attr_id
    and   p_data BETWEEN rattr.validita_inizio AND COALESCE(rattr.validita_fine, p_data)
    and   rattr.data_cancellazione is null
    ),
    progr_note_attr_note as
    (
    select rattr.programma_id,
           rattr.boolean programma_note
    from siac_r_programma_attr rattr,siac_t_attr attr
    where attr.ente_proprietario_id=p_ente_proprietario_id
    and   attr.attr_code='Note'
    and   rattr.attr_id=attr.attr_id
    and   p_data BETWEEN rattr.validita_inizio AND COALESCE(rattr.validita_fine, p_data)
    and   rattr.data_cancellazione is null
    ),
    progr_note_attr_val_compl as
    (
    select rattr.programma_id,
           rattr.numerico programma_valore_complessivo
    from siac_r_programma_attr rattr,siac_t_attr attr
    where attr.ente_proprietario_id=p_ente_proprietario_id
    and   attr.attr_code='ValoreComplessivoProgramma'
    and   rattr.attr_id=attr.attr_id
    and   p_data BETWEEN rattr.validita_inizio AND COALESCE(rattr.validita_fine, p_data)
    and   rattr.data_cancellazione is null
    ),
    progr_atto_amm as
    (
     with
     progr_atto as
     (
      select ratto.programma_id,
             ratto.attoamm_id,
             atto.attoamm_anno        programma_anno_atto_amm,
             atto.attoamm_numero      programma_num_atto_amm,
             atto.attoamm_oggetto     programma_oggetto_atto_amm,
             atto.attoamm_note        programma_note_atto_amm,
             tipo.attoamm_tipo_code   programma_code_tipo_atto_amm,
             tipo.attoamm_tipo_desc   programma_desc_tipo_atto_amm,
             stato.attoamm_stato_code programma_code_stato_atto_amm,
             stato.attoamm_stato_desc programma_desc_stato_atto_amm
      from siac_r_programma_atto_amm ratto , siac_t_atto_amm atto,siac_d_atto_amm_tipo tipo,
           siac_r_atto_amm_stato rs, siac_d_atto_amm_stato stato
      where ratto.ente_proprietario_id=p_ente_proprietario_id
      and   atto.attoamm_id=ratto.attoamm_id
      and   tipo.attoamm_tipo_id=atto.attoamm_tipo_id
      and   rs.attoamm_id=atto.attoamm_id
      and   stato.attoamm_stato_id=rs.attoamm_stato_id
      and   p_data BETWEEN ratto.validita_inizio AND COALESCE(ratto.validita_fine, p_data)
      and   ratto.data_cancellazione is null
      and   p_data BETWEEN atto.validita_inizio AND COALESCE(atto.validita_fine, p_data)
      and   atto.data_cancellazione is null
      and   p_data BETWEEN rs.validita_inizio AND COALESCE(rs.validita_fine, p_data)
      and   rs.data_cancellazione is null
     ),
     atto_cdr as
     (
     select rc.attoamm_id,
            c.classif_code programma_code_cdr_atto_amm,
            c.classif_desc programma_desc_cdr_atto_amm
     from siac_r_atto_amm_class rc, siac_t_class c , siac_d_class_tipo tipo
     where tipo.ente_proprietario_id=p_ente_proprietario_id
     and   tipo.classif_tipo_code='CDR'
     and   c.classif_tipo_id=tipo.classif_tipo_id
     and   rc.classif_id=c.classif_id
     and   p_data BETWEEN rc.validita_inizio AND COALESCE(rc.validita_fine, p_data)
     and   rc.data_cancellazione is null
     and   c.data_cancellazione is null
     ),
     atto_cdc as
     (
     select rc.attoamm_id,
            c.classif_code programma_code_cdc_atto_amm,
            c.classif_desc programma_desc_cdc_atto_amm
     from siac_r_atto_amm_class rc, siac_t_class c , siac_d_class_tipo tipo
     where tipo.ente_proprietario_id=p_ente_proprietario_id
     and   tipo.classif_tipo_code='CDC'
     and   c.classif_tipo_id=tipo.classif_tipo_id
     and   rc.classif_id=c.classif_id
     and   p_data BETWEEN rc.validita_inizio AND COALESCE(rc.validita_fine, p_data)
     and   rc.data_cancellazione is null
     and   c.data_cancellazione is null
     )
     select progr_atto.*,
            atto_cdr.programma_code_cdr_atto_amm,
            atto_cdr.programma_desc_cdr_atto_amm,
            atto_cdc.programma_code_cdc_atto_amm,
            atto_cdc.programma_desc_cdc_atto_amm
     from progr_atto
           left join atto_cdr on (progr_atto.attoamm_id=atto_cdr.attoamm_id)
           left join atto_cdc on (progr_atto.attoamm_id=atto_cdc.attoamm_id)
    ),
    -- 29.04.2019 Sofia siac-6255
    progr_affid as
    (
     select aff.programma_affidamento_code,
            aff.programma_affidamento_desc,
            aff.programma_affidamento_id
     from  siac_d_programma_affidamento aff
     where aff.ente_proprietario_id=p_ente_proprietario_id
    ),
    progr_bil_anno as
    (
    select bil.bil_id, per.anno anno_bilancio
    from siac_t_bil bil,siac_t_periodo per
    where bil.ente_proprietario_id=p_ente_proprietario_id
    and   per.periodo_id=bil.periodo_id
    ),
    cronop_progr as
    (
    with
     cronop_entrata as
     (
       with
         ce as
         (
           select cronop.programma_id,
                  per_bil.anno::varchar programma_cronop_bil_anno,
                  'E'::varchar programma_cronop_tipo,
                  cronop.cronop_code programma_cronop_versione,
                  cronop.cronop_desc programma_cronop_desc,
                  -- 29.04.2019 Sofia jira siac-6255
                  cronop.cronop_id,
                  cronop.cronop_data_approvazione_fattibilita,
                  cronop.cronop_data_approvazione_programma_def,
                  cronop.cronop_data_approvazione_programma_esec,
                  cronop.cronop_data_avvio_procedura,
                  cronop.cronop_data_aggiudicazione_lavori,
                  cronop.cronop_data_inizio_lavori,
                  cronop.cronop_data_fine_lavori,
                  cronop.cronop_giorni_durata,
                  cronop.cronop_data_collaudo,
                  cronop.gestione_quadro_economico,
                  cronop.usato_per_fpv_prov,
                  -- 29.04.2019 Sofia jira siac-6255
                  per.anno::varchar  programma_cronop_anno_comp,
                  tipo.elem_tipo_code programma_cronop_cap_tipo,
                  cronop_elem.cronop_elem_code||'/'||cronop_elem.cronop_elem_code2 programma_cronop_cap_articolo,
                  ''::varchar programma_cronop_anno_entrata,
                  cronop_elem_det.cronop_elem_det_importo programma_cronop_valore_prev,
                  cronop_elem.cronop_elem_id
           from siac_t_cronop cronop,siac_r_cronop_stato rs, siac_d_cronop_stato stato,
                siac_t_bil bil, siac_t_periodo per_bil,
                siac_t_periodo per,
                siac_t_cronop_elem cronop_elem,
                siac_d_bil_elem_tipo tipo,
                siac_t_cronop_elem_det cronop_elem_det
           where stato.ente_proprietario_id=p_ente_proprietario_id
           and   stato.cronop_stato_code='VA'
           and   rs.cronop_stato_id=stato.cronop_stato_id
           and   cronop.cronop_id=rs.cronop_id
           and   bil.bil_id=cronop.bil_id
           and   per_bil.periodo_id=bil.periodo_id
           and   per_bil.anno::integer=p_anno_bilancio::integer
           and   cronop_elem.cronop_id=cronop.cronop_id
           and   tipo.elem_tipo_id=cronop_elem.elem_tipo_id
           and   tipo.elem_tipo_code in ('CAP-EP','CAP-EG')
           and   cronop_elem_det.cronop_elem_id=cronop_elem.cronop_elem_id
           and   per.periodo_id=cronop_elem_det.periodo_id
           and   p_data BETWEEN rs.validita_inizio AND COALESCE(rs.validita_fine, p_data)
           and   rs.data_cancellazione is null
           and   p_data BETWEEN cronop.validita_inizio AND COALESCE(cronop.validita_fine, p_data)
           and   cronop.data_cancellazione is null
           and   p_data BETWEEN cronop_elem.validita_inizio AND COALESCE(cronop_elem.validita_fine, p_data)
           and   cronop_elem.data_cancellazione is null
           and   p_data BETWEEN cronop_elem_det.validita_inizio AND COALESCE(cronop_elem_det.validita_fine, p_data)
           and   cronop_elem_det.data_cancellazione is null
         ),
         classif_bil as
         (
            select distinct
                   r_cronp_class.cronop_elem_id,
		           titolo.classif_code            				titolo_code ,
	               titolo.classif_desc            				titolo_desc,
	               tipologia.classif_code           			tipologia_code,
	               tipologia.classif_desc           			tipologia_desc
            from siac_t_class_fam_tree 			titolo_tree,
            	 siac_d_class_fam 				titolo_fam,
	             siac_r_class_fam_tree 			titolo_r_cft,
	             siac_t_class 					titolo,
	             siac_d_class_tipo 				titolo_tipo,
	             siac_d_class_tipo 				tipologia_tipo,
     	         siac_t_class 					tipologia,
	             siac_r_cronop_elem_class		r_cronp_class
            where 	titolo_fam.classif_fam_desc					=	'Entrata - TitoliTipologieCategorie'
            and 	titolo_tree.classif_fam_id					=	titolo_fam.classif_fam_id
            and 	titolo_r_cft.classif_fam_tree_id			=	titolo_tree.classif_fam_tree_id
            and 	titolo.classif_id							=	titolo_r_cft.classif_id_padre
            and 	titolo_tipo.classif_tipo_code				=	'TITOLO_ENTRATA'
            and 	titolo.classif_tipo_id						=	titolo_tipo.classif_tipo_id
            and 	tipologia_tipo.classif_tipo_code			=	'TIPOLOGIA'
            and 	tipologia.classif_tipo_id					=	tipologia_tipo.classif_tipo_id
            and 	titolo_r_cft.classif_id						=	tipologia.classif_id
            and 	r_cronp_class.classif_id					=	tipologia.classif_id
            and 	titolo.ente_proprietario_id					=	p_ente_proprietario_id
            and 	titolo.data_cancellazione					is null
            and 	tipologia.data_cancellazione				is null
            and		r_cronp_class.data_cancellazione			is null
            and 	titolo_tree.data_cancellazione				is null
            and 	titolo_fam.data_cancellazione				is null
            and 	titolo_r_cft.data_cancellazione				is null
            and 	titolo_tipo.data_cancellazione				is null
            and 	tipologia_tipo.data_cancellazione			is null
          ),
          -- 29.04.2019 Sofia jira siac-6255
          cronop_atto_amm as
          (
           with
           cronop_atto as
           (
            select ratto.cronop_id,
                   ratto.attoamm_id,
                   atto.attoamm_anno        cronop_anno_atto_amm,
                   atto.attoamm_numero      cronop_num_atto_amm,
                   atto.attoamm_oggetto     cronop_oggetto_atto_amm,
                   atto.attoamm_note        cronop_note_atto_amm,
                   tipo.attoamm_tipo_code   cronop_code_tipo_atto_amm,
                   tipo.attoamm_tipo_desc   cronop_desc_tipo_atto_amm,
                   stato.attoamm_stato_code cronop_code_stato_atto_amm,
                   stato.attoamm_stato_desc cronop_desc_stato_atto_amm
            from siac_r_cronop_atto_amm ratto , siac_t_atto_amm atto,siac_d_atto_amm_tipo tipo,
                 siac_r_atto_amm_stato rs, siac_d_atto_amm_stato stato
            where ratto.ente_proprietario_id=p_ente_proprietario_id
            and   atto.attoamm_id=ratto.attoamm_id
            and   tipo.attoamm_tipo_id=atto.attoamm_tipo_id
            and   rs.attoamm_id=atto.attoamm_id
            and   stato.attoamm_stato_id=rs.attoamm_stato_id
            and   p_data BETWEEN ratto.validita_inizio AND COALESCE(ratto.validita_fine, p_data)
            and   ratto.data_cancellazione is null
            and   p_data BETWEEN atto.validita_inizio AND COALESCE(atto.validita_fine, p_data)
            and   atto.data_cancellazione is null
            and   p_data BETWEEN rs.validita_inizio AND COALESCE(rs.validita_fine, p_data)
            and   rs.data_cancellazione is null
           ),
           cronop_atto_cdr as
           (
           select rc.attoamm_id,
                  c.classif_code cronop_code_cdr_atto_amm,
                  c.classif_desc cronop_desc_cdr_atto_amm
           from siac_r_atto_amm_class rc, siac_t_class c , siac_d_class_tipo tipo
           where tipo.ente_proprietario_id=p_ente_proprietario_id
           and   tipo.classif_tipo_code='CDR'
           and   c.classif_tipo_id=tipo.classif_tipo_id
           and   rc.classif_id=c.classif_id
           and   p_data BETWEEN rc.validita_inizio AND COALESCE(rc.validita_fine, p_data)
           and   rc.data_cancellazione is null
           and   c.data_cancellazione is null
           ),
           cronop_atto_cdc as
           (
           select rc.attoamm_id,
                  c.classif_code cronop_code_cdc_atto_amm,
                  c.classif_desc cronop_desc_cdc_atto_amm
           from siac_r_atto_amm_class rc, siac_t_class c , siac_d_class_tipo tipo
           where tipo.ente_proprietario_id=p_ente_proprietario_id
           and   tipo.classif_tipo_code='CDC'
           and   c.classif_tipo_id=tipo.classif_tipo_id
           and   rc.classif_id=c.classif_id
           and   p_data BETWEEN rc.validita_inizio AND COALESCE(rc.validita_fine, p_data)
           and   rc.data_cancellazione is null
           and   c.data_cancellazione is null
           )
           select cronop_atto.*,
                  cronop_atto_cdr.cronop_code_cdr_atto_amm,
                  cronop_atto_cdr.cronop_desc_cdr_atto_amm,
                  cronop_atto_cdc.cronop_code_cdc_atto_amm,
                  cronop_atto_cdc.cronop_desc_cdc_atto_amm
           from cronop_atto
                 left join cronop_atto_cdr on (cronop_atto.attoamm_id=cronop_atto_cdr.attoamm_id)
                 left join cronop_atto_cdc on (cronop_atto.attoamm_id=cronop_atto_cdc.attoamm_id)
          )
          select ce.programma_id,
                 ce.programma_cronop_bil_anno,
                 ce.programma_cronop_tipo,
                 ce.programma_cronop_versione,
                 ce.programma_cronop_desc,
                 ce.programma_cronop_anno_comp,
                 ce.programma_cronop_cap_tipo,
                 ce.programma_cronop_cap_articolo,
                 (coalesce(classif_bil.titolo_code,' ') ||' - ' ||coalesce(classif_bil.tipologia_code,' '))::varchar programma_cronop_classif_bil,
                 ce.programma_cronop_anno_entrata,
                 ce.programma_cronop_valore_prev,
                 -- 29.04.2019 Sofia jira siac-6255
                 ce.cronop_id,
                 ce.cronop_data_approvazione_fattibilita,
                 ce.cronop_data_approvazione_programma_def,
                 ce.cronop_data_approvazione_programma_esec,
                 ce.cronop_data_avvio_procedura,
                 ce.cronop_data_aggiudicazione_lavori,
                 ce.cronop_data_inizio_lavori,
                 ce.cronop_data_fine_lavori,
                 ce.cronop_giorni_durata,
                 ce.cronop_data_collaudo,
                 ce.gestione_quadro_economico cronop_gestione_quadro_economico,
                 ce.usato_per_fpv_prov cronop_usato_per_fpv_prov,
                 cronop_atto_amm.cronop_anno_atto_amm,
		         cronop_atto_amm.cronop_num_atto_amm,
                 cronop_atto_amm.cronop_oggetto_atto_amm,
                 cronop_atto_amm.cronop_note_atto_amm,
                 cronop_atto_amm.cronop_code_tipo_atto_amm,
                 cronop_atto_amm.cronop_desc_tipo_atto_amm,
                 cronop_atto_amm.cronop_code_stato_atto_amm,
                 cronop_atto_amm.cronop_desc_stato_atto_amm,
                 cronop_atto_amm.cronop_code_cdr_atto_amm,
                 cronop_atto_amm.cronop_desc_cdr_atto_amm,
                 cronop_atto_amm.cronop_code_cdc_atto_amm,
                 cronop_atto_amm.cronop_desc_cdc_atto_amm
          from ce
               left join classif_bil on (ce.cronop_elem_id=classif_bil.cronop_elem_id)
               -- 29.04.2019 Sofia jira siac-6255
               left join cronop_atto_amm on (ce.cronop_id=cronop_atto_amm.cronop_id)

     ),
     cronop_uscita as
     (
     with
     ce as
     (
       select cronop.programma_id,
              per_bil.anno::varchar programma_cronop_bil_anno,
              'U'::varchar programma_cronop_tipo,
              cronop.cronop_code programma_cronop_versione,
              cronop.cronop_desc programma_cronop_desc,
              -- 29.04.2019 Sofia jira siac-6255
              cronop.cronop_id,
              cronop.cronop_data_approvazione_fattibilita,
              cronop.cronop_data_approvazione_programma_def,
              cronop.cronop_data_approvazione_programma_esec,
              cronop.cronop_data_avvio_procedura,
              cronop.cronop_data_aggiudicazione_lavori,
              cronop.cronop_data_inizio_lavori,
              cronop.cronop_data_fine_lavori,
              cronop.cronop_giorni_durata,
              cronop.cronop_data_collaudo,
              cronop.gestione_quadro_economico,
              cronop.usato_per_fpv_prov,
              -- 29.04.2019 Sofia jira siac-6255
              per.anno::varchar  programma_cronop_anno_comp,
              tipo.elem_tipo_code programma_cronop_cap_tipo,
              cronop_elem.cronop_elem_code||'/'||cronop_elem.cronop_elem_code2 programma_cronop_cap_articolo,
              cronop_elem_det.anno_entrata::varchar programma_cronop_anno_entrata,
              cronop_elem_det.cronop_elem_det_importo programma_cronop_valore_prev,
              cronop_elem.cronop_elem_id
       from siac_t_cronop cronop,siac_r_cronop_stato rs, siac_d_cronop_stato stato,
            siac_t_bil bil, siac_t_periodo per_bil,
            siac_t_periodo per,
            siac_t_cronop_elem cronop_elem,
            siac_d_bil_elem_tipo tipo,
            siac_t_cronop_elem_det cronop_elem_det
       where stato.ente_proprietario_id=p_ente_proprietario_id
       and   stato.cronop_stato_code='VA'
       and   rs.cronop_stato_id=stato.cronop_stato_id
       and   cronop.cronop_id=rs.cronop_id
       and   bil.bil_id=cronop.bil_id
       and   per_bil.periodo_id=bil.periodo_id
       and   per_bil.anno::integer=p_anno_bilancio::integer
       and   cronop_elem.cronop_id=cronop.cronop_id
       and   tipo.elem_tipo_id=cronop_elem.elem_tipo_id
       and   tipo.elem_tipo_code in ('CAP-UP','CAP-UG')
       and   cronop_elem_det.cronop_elem_id=cronop_elem.cronop_elem_id
       and   per.periodo_id=cronop_elem_det.periodo_id
       and   p_data BETWEEN rs.validita_inizio AND COALESCE(rs.validita_fine, p_data)
       and   rs.data_cancellazione is null
       and   p_data BETWEEN cronop.validita_inizio AND COALESCE(cronop.validita_fine, p_data)
       and   cronop.data_cancellazione is null
       and   p_data BETWEEN cronop_elem.validita_inizio AND COALESCE(cronop_elem.validita_fine, p_data)
       and   cronop_elem.data_cancellazione is null
       and   p_data BETWEEN cronop_elem_det.validita_inizio AND COALESCE(cronop_elem_det.validita_fine, p_data)
       and   cronop_elem_det.data_cancellazione is null
     ),
     classif_bil as
     (
        select  distinct
        		r_cronp_class_titolo.cronop_elem_id,
		        missione.classif_code 					missione_code,
		        missione.classif_desc 					missione_desc,
		        programma.classif_code 					programma_code,
		        programma.classif_desc 					programma_desc,
		        titusc.classif_code 					titolo_code,
		        titusc.classif_desc 					titolo_desc
        from siac_t_class_fam_tree 			missione_tree,
             siac_d_class_fam 				missione_fam,
	         siac_r_class_fam_tree 			missione_r_cft,
	         siac_t_class 					missione,
	         siac_d_class_tipo 				missione_tipo ,
     	     siac_d_class_tipo 				programma_tipo,
	         siac_t_class 					programma,
      	     siac_t_class_fam_tree 			titusc_tree,
	         siac_d_class_fam 				titusc_fam,
	         siac_r_class_fam_tree 			titusc_r_cft,
	         siac_t_class 					titusc,
	         siac_d_class_tipo 				titusc_tipo,
	         siac_r_cronop_elem_class		r_cronp_class_programma,
	         siac_r_cronop_elem_class		r_cronp_class_titolo
        where missione_fam.classif_fam_desc						=	'Spesa - MissioniProgrammi'
        and	  missione_tree.classif_fam_id				=	missione_fam.classif_fam_id
        and	  missione_r_cft.classif_fam_tree_id			=	missione_tree.classif_fam_tree_id
        and	  missione.classif_id							=	missione_r_cft.classif_id_padre
        and	  missione_tipo.classif_tipo_code				=	'MISSIONE'
        and	  missione.classif_tipo_id					=	missione_tipo.classif_tipo_id
        and	  programma_tipo.classif_tipo_code			=	'PROGRAMMA'
        and	  programma.classif_tipo_id					=	programma_tipo.classif_tipo_id
        and	  missione_r_cft.classif_id					=	programma.classif_id
        and	  programma.classif_id						=	r_cronp_class_programma.classif_id
        and	  titusc_fam.classif_fam_desc					=	'Spesa - TitoliMacroaggregati'
        and	  titusc_tree.classif_fam_id					=	titusc_fam.classif_fam_id
        and	  titusc_r_cft.classif_fam_tree_id			=	titusc_tree.classif_fam_tree_id
        and	  titusc.classif_id							=	titusc_r_cft.classif_id_padre
        and	  titusc_tipo.classif_tipo_code				=	'TITOLO_SPESA'
        and	  titusc.classif_tipo_id						=	titusc_tipo.classif_tipo_id
        and	  titusc.classif_id							=	r_cronp_class_titolo.classif_id
        and   r_cronp_class_programma.cronop_elem_id		= 	r_cronp_class_titolo.cronop_elem_id
        and   missione_tree.ente_proprietario_id			=	p_ente_proprietario_id
        and   missione_tree.data_cancellazione			is null
        and   missione_fam.data_cancellazione			is null
        AND   missione_r_cft.data_cancellazione			is null
        and   missione.data_cancellazione				is null
        AND   missione_tipo.data_cancellazione			is null
        AND   programma_tipo.data_cancellazione			is null
        AND   programma.data_cancellazione				is null
        and   titusc_tree.data_cancellazione			is null
        AND   titusc_fam.data_cancellazione				is null
        and   titusc_r_cft.data_cancellazione			is null
        and   titusc.data_cancellazione					is null
        AND   titusc_tipo.data_cancellazione			is null
        and	  r_cronp_class_titolo.data_cancellazione	is null
     ),
     -- 29.04.2019 Sofia jira siac-6255
     cronop_atto_amm as
     (
       with
       cronop_atto as
       (
        select ratto.cronop_id,
               ratto.attoamm_id,
               atto.attoamm_anno        cronop_anno_atto_amm,
               atto.attoamm_numero      cronop_num_atto_amm,
               atto.attoamm_oggetto     cronop_oggetto_atto_amm,
               atto.attoamm_note        cronop_note_atto_amm,
               tipo.attoamm_tipo_code   cronop_code_tipo_atto_amm,
               tipo.attoamm_tipo_desc   cronop_desc_tipo_atto_amm,
               stato.attoamm_stato_code cronop_code_stato_atto_amm,
               stato.attoamm_stato_desc cronop_desc_stato_atto_amm
        from siac_r_cronop_atto_amm ratto , siac_t_atto_amm atto,siac_d_atto_amm_tipo tipo,
             siac_r_atto_amm_stato rs, siac_d_atto_amm_stato stato
        where ratto.ente_proprietario_id=p_ente_proprietario_id
        and   atto.attoamm_id=ratto.attoamm_id
        and   tipo.attoamm_tipo_id=atto.attoamm_tipo_id
        and   rs.attoamm_id=atto.attoamm_id
        and   stato.attoamm_stato_id=rs.attoamm_stato_id
        and   p_data BETWEEN ratto.validita_inizio AND COALESCE(ratto.validita_fine, p_data)
        and   ratto.data_cancellazione is null
        and   p_data BETWEEN atto.validita_inizio AND COALESCE(atto.validita_fine, p_data)
        and   atto.data_cancellazione is null
        and   p_data BETWEEN rs.validita_inizio AND COALESCE(rs.validita_fine, p_data)
        and   rs.data_cancellazione is null
       ),
       cronop_atto_cdr as
       (
       select rc.attoamm_id,
              c.classif_code cronop_code_cdr_atto_amm,
              c.classif_desc cronop_desc_cdr_atto_amm
       from siac_r_atto_amm_class rc, siac_t_class c , siac_d_class_tipo tipo
       where tipo.ente_proprietario_id=p_ente_proprietario_id
       and   tipo.classif_tipo_code='CDR'
       and   c.classif_tipo_id=tipo.classif_tipo_id
       and   rc.classif_id=c.classif_id
       and   p_data BETWEEN rc.validita_inizio AND COALESCE(rc.validita_fine, p_data)
       and   rc.data_cancellazione is null
       and   c.data_cancellazione is null
       ),
       cronop_atto_cdc as
       (
       select rc.attoamm_id,
              c.classif_code cronop_code_cdc_atto_amm,
              c.classif_desc cronop_desc_cdc_atto_amm
       from siac_r_atto_amm_class rc, siac_t_class c , siac_d_class_tipo tipo
       where tipo.ente_proprietario_id=p_ente_proprietario_id
       and   tipo.classif_tipo_code='CDC'
       and   c.classif_tipo_id=tipo.classif_tipo_id
       and   rc.classif_id=c.classif_id
       and   p_data BETWEEN rc.validita_inizio AND COALESCE(rc.validita_fine, p_data)
       and   rc.data_cancellazione is null
       and   c.data_cancellazione is null
       )
       select cronop_atto.*,
              cronop_atto_cdr.cronop_code_cdr_atto_amm,
              cronop_atto_cdr.cronop_desc_cdr_atto_amm,
              cronop_atto_cdc.cronop_code_cdc_atto_amm,
              cronop_atto_cdc.cronop_desc_cdc_atto_amm
       from cronop_atto
             left join cronop_atto_cdr on (cronop_atto.attoamm_id=cronop_atto_cdr.attoamm_id)
             left join cronop_atto_cdc on (cronop_atto.attoamm_id=cronop_atto_cdc.attoamm_id)
     )
     select ce.programma_id,
            ce.programma_cronop_bil_anno,
            ce.programma_cronop_tipo,
            ce.programma_cronop_versione,
            ce.programma_cronop_desc,
            ce.programma_cronop_anno_comp,
            ce.programma_cronop_cap_tipo,
            ce.programma_cronop_cap_articolo,
            (coalesce(classif_bil.missione_code,' ')||
             ' - '||coalesce(classif_bil.programma_code,' ')||
             ' - '||coalesce(classif_bil.titolo_code,' '))::varchar programma_cronop_classif_bil,
            ce.programma_cronop_anno_entrata,
            ce.programma_cronop_valore_prev,
            -- 29.04.2019 Sofia jira siac-6255
            ce.cronop_id,
            ce.cronop_data_approvazione_fattibilita,
            ce.cronop_data_approvazione_programma_def,
            ce.cronop_data_approvazione_programma_esec,
            ce.cronop_data_avvio_procedura,
            ce.cronop_data_aggiudicazione_lavori,
            ce.cronop_data_inizio_lavori,
            ce.cronop_data_fine_lavori,
            ce.cronop_giorni_durata,
            ce.cronop_data_collaudo,
            ce.gestione_quadro_economico cronop_gestione_quadro_economico,
            ce.usato_per_fpv_prov cronop_usato_per_fpv_prov,
            cronop_atto_amm.cronop_anno_atto_amm,
            cronop_atto_amm.cronop_num_atto_amm,
            cronop_atto_amm.cronop_oggetto_atto_amm,
            cronop_atto_amm.cronop_note_atto_amm,
            cronop_atto_amm.cronop_code_tipo_atto_amm,
            cronop_atto_amm.cronop_desc_tipo_atto_amm,
            cronop_atto_amm.cronop_code_stato_atto_amm,
            cronop_atto_amm.cronop_desc_stato_atto_amm,
            cronop_atto_amm.cronop_code_cdr_atto_amm,
            cronop_atto_amm.cronop_desc_cdr_atto_amm,
            cronop_atto_amm.cronop_code_cdc_atto_amm,
            cronop_atto_amm.cronop_desc_cdc_atto_amm
     from ce
          left join classif_bil on (ce.cronop_elem_id=classif_bil.cronop_elem_id)
          -- 29.04.2019 Sofia jira siac-6255
          left join cronop_atto_amm on ( ce.cronop_id=cronop_atto_amm.cronop_id)
     )
     select cronop_entrata.programma_id,
     	    cronop_entrata.programma_cronop_bil_anno,
            cronop_entrata.programma_cronop_tipo,
            cronop_entrata.programma_cronop_versione,
            cronop_entrata.programma_cronop_desc,
	        cronop_entrata.programma_cronop_anno_comp,
            cronop_entrata.programma_cronop_cap_tipo,
	        cronop_entrata.programma_cronop_cap_articolo,
	        cronop_entrata.programma_cronop_classif_bil,
	        cronop_entrata.programma_cronop_anno_entrata,
            cronop_entrata.programma_cronop_valore_prev,
            -- 29.04.2019 Sofia jira siac-6255
            cronop_entrata.cronop_id,
            cronop_entrata.cronop_data_approvazione_fattibilita,
            cronop_entrata.cronop_data_approvazione_programma_def,
            cronop_entrata.cronop_data_approvazione_programma_esec,
            cronop_entrata.cronop_data_avvio_procedura,
            cronop_entrata.cronop_data_aggiudicazione_lavori,
            cronop_entrata.cronop_data_inizio_lavori,
            cronop_entrata.cronop_data_fine_lavori,
            cronop_entrata.cronop_giorni_durata,
            cronop_entrata.cronop_data_collaudo,
            cronop_entrata.cronop_gestione_quadro_economico,
            cronop_entrata.cronop_usato_per_fpv_prov,
            cronop_entrata.cronop_anno_atto_amm,
            cronop_entrata.cronop_num_atto_amm,
            cronop_entrata.cronop_oggetto_atto_amm,
            cronop_entrata.cronop_note_atto_amm,
            cronop_entrata.cronop_code_tipo_atto_amm,
            cronop_entrata.cronop_desc_tipo_atto_amm,
            cronop_entrata.cronop_code_stato_atto_amm,
            cronop_entrata.cronop_desc_stato_atto_amm,
            cronop_entrata.cronop_code_cdr_atto_amm,
            cronop_entrata.cronop_desc_cdr_atto_amm,
            cronop_entrata.cronop_code_cdc_atto_amm,
            cronop_entrata.cronop_desc_cdc_atto_amm
     from cronop_entrata
     union
     select cronop_uscita.programma_id,
     	    cronop_uscita.programma_cronop_bil_anno,
            cronop_uscita.programma_cronop_tipo,
            cronop_uscita.programma_cronop_versione,
            cronop_uscita.programma_cronop_desc,
	        cronop_uscita.programma_cronop_anno_comp,
            cronop_uscita.programma_cronop_cap_tipo,
	        cronop_uscita.programma_cronop_cap_articolo,
	        cronop_uscita.programma_cronop_classif_bil,
	        cronop_uscita.programma_cronop_anno_entrata,
            cronop_uscita.programma_cronop_valore_prev,
            -- 29.04.2019 Sofia jira siac-6255
            cronop_uscita.cronop_id,
            cronop_uscita.cronop_data_approvazione_fattibilita,
            cronop_uscita.cronop_data_approvazione_programma_def,
            cronop_uscita.cronop_data_approvazione_programma_esec,
            cronop_uscita.cronop_data_avvio_procedura,
            cronop_uscita.cronop_data_aggiudicazione_lavori,
            cronop_uscita.cronop_data_inizio_lavori,
            cronop_uscita.cronop_data_fine_lavori,
            cronop_uscita.cronop_giorni_durata,
            cronop_uscita.cronop_data_collaudo,
            cronop_uscita.cronop_gestione_quadro_economico,
            cronop_uscita.cronop_usato_per_fpv_prov,
            cronop_uscita.cronop_anno_atto_amm,
            cronop_uscita.cronop_num_atto_amm,
            cronop_uscita.cronop_oggetto_atto_amm,
            cronop_uscita.cronop_note_atto_amm,
            cronop_uscita.cronop_code_tipo_atto_amm,
            cronop_uscita.cronop_desc_tipo_atto_amm,
            cronop_uscita.cronop_code_stato_atto_amm,
            cronop_uscita.cronop_desc_stato_atto_amm,
            cronop_uscita.cronop_code_cdr_atto_amm,
            cronop_uscita.cronop_desc_cdr_atto_amm,
            cronop_uscita.cronop_code_cdc_atto_amm,
            cronop_uscita.cronop_desc_cdc_atto_amm
     from cronop_uscita
    )
    select programma.*,
           progr_ambito_class.programma_ambito_code,
           progr_ambito_class.programma_ambito_desc,
           progr_note_attr_ril_fpv.programma_rilevante_fpv,
           progr_note_attr_note.programma_note,
           progr_note_attr_val_compl.programma_valore_complessivo,
           progr_atto_amm.programma_anno_atto_amm,
           progr_atto_amm.programma_num_atto_amm,
           progr_atto_amm.programma_oggetto_atto_amm,
           progr_atto_amm.programma_note_atto_amm,
           progr_atto_amm.programma_code_tipo_atto_amm,
           progr_atto_amm.programma_desc_tipo_atto_amm,
           progr_atto_amm.programma_code_stato_atto_amm,
           progr_atto_amm.programma_desc_stato_atto_amm,
           progr_atto_amm.programma_code_cdr_atto_amm,
           progr_atto_amm.programma_desc_cdr_atto_amm,
           progr_atto_amm.programma_code_cdc_atto_amm,
           progr_atto_amm.programma_desc_cdc_atto_amm,
           -- 29.04.2019 Sofia siac-6255
           progr_affid.programma_affidamento_code,
           progr_affid.programma_affidamento_desc,
           progr_bil_anno.anno_bilancio programma_anno_bilancio,
           -- 29.04.2019 Sofia siac-6255
	       cronop_progr.programma_cronop_bil_anno,
           cronop_progr.programma_cronop_tipo,
           cronop_progr.programma_cronop_versione,
      	   cronop_progr.programma_cronop_desc,
	       cronop_progr.programma_cronop_anno_comp,
	       cronop_progr.programma_cronop_cap_tipo,
	       cronop_progr.programma_cronop_cap_articolo,
	       cronop_progr.programma_cronop_classif_bil,
		   cronop_progr.programma_cronop_anno_entrata,
	       cronop_progr.programma_cronop_valore_prev,
           -- 29.04.2019 Sofia siac-6255
           cronop_progr.cronop_data_approvazione_fattibilita,
           cronop_progr.cronop_data_approvazione_programma_def,
           cronop_progr.cronop_data_approvazione_programma_esec,
           cronop_progr.cronop_data_avvio_procedura,
           cronop_progr.cronop_data_aggiudicazione_lavori,
           cronop_progr.cronop_data_inizio_lavori,
           cronop_progr.cronop_data_fine_lavori,
           cronop_progr.cronop_giorni_durata,
           cronop_progr.cronop_data_collaudo,
           cronop_progr.cronop_gestione_quadro_economico,
           cronop_progr.cronop_usato_per_fpv_prov,
           cronop_progr.cronop_anno_atto_amm,
           cronop_progr.cronop_num_atto_amm,
           cronop_progr.cronop_oggetto_atto_amm,
           cronop_progr.cronop_note_atto_amm,
           cronop_progr.cronop_code_tipo_atto_amm,
           cronop_progr.cronop_desc_tipo_atto_amm,
           cronop_progr.cronop_code_stato_atto_amm,
           cronop_progr.cronop_desc_stato_atto_amm,
           cronop_progr.cronop_code_cdr_atto_amm,
           cronop_progr.cronop_desc_cdr_atto_amm,
           cronop_progr.cronop_code_cdc_atto_amm,
           cronop_progr.cronop_desc_cdc_atto_amm
    from cronop_progr,
         programma
          left join progr_ambito_class           on (programma.programma_id=progr_ambito_class.programma_id)
          left join progr_note_attr_ril_fpv      on (programma.programma_id=progr_note_attr_ril_fpv.programma_id)
          left join progr_note_attr_note         on (programma.programma_id=progr_note_attr_note.programma_id)
          left join progr_note_attr_val_compl    on (programma.programma_id=progr_note_attr_val_compl.programma_id)
          left join progr_atto_amm               on (programma.programma_id=progr_atto_amm.programma_id)
          -- 29.04.2019 Sofia jira siac-6255
          left join  progr_affid                 on (programma.programma_affidamento_id=progr_affid.programma_affidamento_id)
          left  join  progr_bil_anno              on (programma.bil_id=progr_bil_anno.bil_id)
    where programma.programma_id=cronop_progr.programma_id
    ) query,siac_t_ente_proprietario ente
    where ente.ente_proprietario_id=p_ente_proprietario_id
    and   query.ente_proprietario_id=ente.ente_proprietario_id;


	esito:= 'fnc_siac_dwh_programma_cronop : continue - aggiornamento durata su  siac_dwh_log_elaborazioni - '||clock_timestamp()||'.';
	update siac_dwh_log_elaborazioni
    set    fnc_elaborazione_fine = clock_timestamp(),
	       fnc_durata=clock_timestamp()-fnc_elaborazione_inizio
	where  fnc_user=v_user_table;
	return next;

    esito:= 'fnc_siac_dwh_programma_cronop : fine - esito OK  - '||clock_timestamp()||'.';
    return next;
else
	esito:= 'fnc_siac_dwh_programma_cronop : fine - eseguita da meno di '|| interval_esec::varchar||' ore - '||clock_timestamp()||'.';

	return next;

end if;

return;

EXCEPTION
 WHEN RAISE_EXCEPTION THEN
  esito:='fnc_siac_dwh_programma_cronop : fine con errori - '||clock_timestamp();
  esito:=esito||' - '||SQLSTATE||'-'||substring(upper(SQLERRM) from 1 for 2500)||'.';
  RAISE NOTICE '%',esito;
  RETURN next;
  return;
 WHEN others THEN
  esito:='fnc_siac_dwh_programma_cronop : fine con errori - '||clock_timestamp();
  esito:=esito||' - '||SQLSTATE||'-'||substring(upper(SQLERRM) from 1 for 2500)||'.';
  RAISE NOTICE '%',esito;
  RETURN next;
  return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY DEFINER
COST 100;

-- DWH fine

/*****************************************************************************************
   FUNCTION FINE : creazione function
******************************************************************************************/

/*****************************************************************************************
   VIEW FINE : creazione VIEW
******************************************************************************************/
drop VIEW if exists siac_v_dwh_anag_progetti;

CREATE OR REPLACE VIEW siac_v_dwh_anag_progetti (
  ente_proprietario_id,
  programma_code,
  programma_desc,
  tipo_progetto_code,
  tipo_progetto_desc,
  programma_stato_code,
  programma_stato_desc,
  attoamm_anno,
  attoamm_numero,
  attoamm_tipo_code,
  attoamm_tipo_desc,
  cod_sac,
  desc_sac,
  investimento_in_definizione,
  programma_data_gara_aggiudicazione,
  programma_data_gara_indizione ,
  FlagRilevanteFPV,
  importo_progetto,
  -- 30.04.2019 Sofia siac-6255
  programma_anno_bilancio,
  programma_tipo_code,
  programma_tipo_desc,
  programma_affidamento_code,
  programma_affidamento_desc,
  programma_responsabile_unico,
  programma_spazi_finanziari

)
AS
------------------- ANAGRAFICA PROGETTI
WITH zz AS (
select a.ente_proprietario_id, a.programma_code,
a.programma_desc,
tipo.classif_code as tipo_progetto_code,
tipo.classif_desc as tipo_progetto_desc,
c.programma_stato_code, c.programma_stato_desc,
h.attoamm_anno,
h.attoamm_numero,
daat.attoamm_tipo_code,
daat.attoamm_tipo_desc,
a.investimento_in_definizione,
a.programma_data_gara_aggiudicazione,
a.programma_data_gara_indizione ,
dfpv."boolean" as FlagRilevanteFPV,
dimp.numerico as importo_progetto,
h.attoamm_id,
-- 30.04.2019 Sofia siac-6255
a.programma_responsabile_unico,
a.programma_spazi_finanziari,
tipop.programma_tipo_code,
tipop.programma_tipo_desc,
aff.programma_affidamento_code,
aff.programma_affidamento_desc,
per.anno programma_anno_bilancio
--,attrimp.attr_code
from siac_t_programma a
  join siac_r_programma_stato b on a.programma_id=b.programma_id
  join siac_d_programma_stato c on b.programma_stato_id=c.programma_stato_id
  join siac_d_programma_tipo tipop on a.programma_tipo_id=tipop.programma_tipo_id -- 30.04.2019 Sofia siac-6255
  left join siac_r_programma_attr dfpv on dfpv.programma_id = a.programma_id
  join siac_t_attr attrfpv on
     ( attrfpv.attr_id=dfpv.attr_id and attrfpv.attr_code ='FlagRilevanteFPV' and dfpv.data_cancellazione is null)
  left join siac_r_programma_attr dimp on dimp.programma_id = a.programma_id
  join siac_t_attr attrimp on
     ( attrimp.attr_id=dimp.attr_id and attrimp.attr_code ='ValoreComplessivoProgramma'
     and dimp.data_cancellazione is null)
  left join siac_r_programma_class rtipo on
     ( rtipo.programma_id = a.programma_id and rtipo.data_cancellazione is NULL)
  left join siac_t_class tipo on
     (tipo.classif_id = rtipo.classif_id)
  left join siac_r_programma_atto_amm ratto on ( ratto.programma_id=a.programma_id and ratto.data_cancellazione is null)
  left JOIN siac_t_atto_amm h ON h.attoamm_id = ratto.attoamm_id
  left JOIN siac_d_atto_amm_tipo daat ON daat.attoamm_tipo_id = h.attoamm_tipo_id
  -- 30.04.2019 Sofia siac-6255
  left join siac_d_programma_affidamento aff on (a.programma_affidamento_id=aff.programma_affidamento_id)
  left join siac_t_bil bil inner join siac_t_periodo per on (per.periodo_id=bil.periodo_id) on (a.bil_id=bil.bil_id)
where a.data_cancellazione is null
and b.data_cancellazione is null
), aa AS (
    SELECT i.attoamm_id, l.classif_id, l.classif_code, l.classif_desc,
            m.classif_tipo_code
    FROM siac_r_atto_amm_class i, siac_t_class l, siac_d_class_tipo m,
            siac_r_class_fam_tree n, siac_t_class_fam_tree o,
            siac_d_class_fam p
    WHERE i.classif_id = l.classif_id AND m.classif_tipo_id = l.classif_tipo_id
        AND n.classif_id = l.classif_id AND n.classif_fam_tree_id = o.classif_fam_tree_id AND o.classif_fam_id = p.classif_fam_id AND p.classif_fam_code::text = '00005'::text AND i.data_cancellazione IS NULL AND l.data_cancellazione IS NULL AND m.data_cancellazione IS NULL AND n.data_cancellazione IS NULL AND o.data_cancellazione IS NULL AND p.data_cancellazione IS NULL
    )
    SELECT
       zz.ente_proprietario_id,
       zz.programma_code,
       zz.programma_desc,
       zz.tipo_progetto_code,
       zz.tipo_progetto_desc,
       zz.programma_stato_code, zz.programma_stato_desc,
       zz.attoamm_anno,
       zz.attoamm_numero,
       zz.attoamm_tipo_code,
       zz.attoamm_tipo_desc,
       aa.classif_code AS cod_sac, aa.classif_desc AS desc_sac,
       zz.investimento_in_definizione,
       zz.programma_data_gara_aggiudicazione,
       zz.programma_data_gara_indizione ,
       zz.FlagRilevanteFPV,
       zz.importo_progetto,
       -- 30.04.2019 Sofia siac-6255
       zz.programma_anno_bilancio,
	   zz.programma_tipo_code,
	   zz.programma_tipo_desc,
	   zz.programma_affidamento_code,
	   zz.programma_affidamento_desc,
	   zz.programma_responsabile_unico,
	   zz.programma_spazi_finanziari

    FROM zz
   LEFT JOIN aa ON zz.attoamm_id = aa.attoamm_id;

/*****************************************************************************************
   VIEW FINE : creazione VIEW
******************************************************************************************/

/*****************************************************************************************
   siac_t_quadro_economico  : inserimento dati - inizio
******************************************************************************************/
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '01','Lavori in appalto',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='01' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='01' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='A' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='02' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='01' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='A' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='02' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='01' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='A' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='02' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '04','Iva lavori',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='01' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='A' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='04' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '01','Lavori in appalto',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='01' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='01' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='B' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='02' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='01' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='B' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='02' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='01' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='B' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='02' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '04','Iva lavori',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='01' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='B' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='04' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '01','Lavori in appalto',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='01' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='01' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='C' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='02' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='01' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='C' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='02' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='01' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='C' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='02' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '04','Iva lavori',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='01' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='C' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='04' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='02' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='02' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='02' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '03','Eventuale stato di consistenza impresa uscente',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='03' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '03','Eventuale stato di consistenza impresa uscente',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='03' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '03','Eventuale stato di consistenza impresa uscente',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='03' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '04','Iva lavori',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='04' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '04','Iva lavori',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='04' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '04','Iva lavori',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='04' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '05','Servizi complementari(traslochi,sistemazione,ecc.)',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='05' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '05','Servizi complementari(traslochi,sistemazione,ecc.)',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='05' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '05','Servizi complementari(traslochi,sistemazione,ecc.)',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='05' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '06','Lavori in economia previsti in progetto ed esclusi dall''appalto,(max 10'||chr(37)||' del costo totale dell''appalto)',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='06' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '06','Lavori in economia previsti in progetto ed esclusi dall''appalto,(max 10'||chr(37)||' del costo totale dell''appalto)',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='06' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '06','Lavori in economia previsti in progetto ed esclusi dall''appalto,(max 10'||chr(37)||' del costo totale dell''appalto)',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='06' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '07','Rilievi, accertamenti e indagini',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='07' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '07','Rilievi, accertamenti e indagini',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='07' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '07','Rilievi, accertamenti e indagini',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='07' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '08','Allacciamenti ai pubblici servizi(spostamento e risoluzione interferenze)',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='08' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '08','Allacciamenti ai pubblici servizi(spostamento e risoluzione interferenze)',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='08' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '08','Allacciamenti ai pubblici servizi(spostamento e risoluzione interferenze)',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='08' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '09','Imprevisti',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='09' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '09','Imprevisti',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='09' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '09','Imprevisti',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='09' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '10','Acquisizione aree o immobili e pertinenti indennizzi',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='10' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '10','Acquisizione aree o immobili e pertinenti indennizzi',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='10' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '10','Acquisizione aree o immobili e pertinenti indennizzi',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='10' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '11','Termini di adempimento, penali, adeguamenti dei prezzi caro materiali accantonamento di cui all''articolo 133, commi 3 e 4, del codice;',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='11' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '11','Termini di adempimento, penali, adeguamenti dei prezzi caro materiali accantonamento di cui all''articolo 133, commi 3 e 4, del codice;',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='11' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '11','Termini di adempimento, penali, adeguamenti dei prezzi caro materiali accantonamento di cui all''articolo 133, commi 3 e 4, del codice;',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='11' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '12','Assicurazione dipendenti spese di cui agli articoli 90, comma 5 e art.92,comma 7-bis',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='12' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '12','Assicurazione dipendenti spese di cui agli articoli 90, comma 5 e art.92,comma 7-bis',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='12' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '12','Assicurazione dipendenti spese di cui agli articoli 90, comma 5 e art.92,comma 7-bis',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='12' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '13','Spese tecniche relative alla progettazione e csp,cse,dl',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='13' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '13','Spese tecniche relative alla progettazione e csp,cse,dl',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='13' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '13','Spese tecniche relative alla progettazione e csp,cse,dl',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='13' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '14','Incentivo',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='14' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '14','Incentivo',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='14' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '14','Incentivo',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='14' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '15','Spese per attività tecnico amministrative connesse alla progettazione, di supporto al responsabile del procedimento, e di verifica e validazione;',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='15' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '15','Spese per attività tecnico amministrative connesse alla progettazione, di supporto al responsabile del procedimento, e di verifica e validazione;',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='15' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '15','Spese per attività tecnico amministrative connesse alla progettazione, di supporto al responsabile del procedimento, e di verifica e validazione;',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='15' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '16','Spese per commissioni giudicatrici;',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='16' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '16','Spese per commissioni giudicatrici;',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='16' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '16','Spese per commissioni giudicatrici;',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='16' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '17','Spese per pubblicità',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='17' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '17','Spese per pubblicità',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='17' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '17','Spese per pubblicità',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='17' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '18','Spese per collaudi, accertamenti di laboratorio e verifiche tecniche',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='18' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '18','Spese per collaudi, accertamenti di laboratorio e verifiche tecniche',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='18' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '18','Spese per collaudi, accertamenti di laboratorio e verifiche tecniche',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='18' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '19','Spese per accordi bonari',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='19' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '19','Spese per accordi bonari',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='19' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '19','Spese per accordi bonari',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='19' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '20','Ribasso di gara disponibile',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='20' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '20','Ribasso di gara disponibile',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='20' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '20','Ribasso di gara disponibile',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='20' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '21','Lavori complementari',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='21' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '21','Lavori complementari',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='21' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '21','Lavori complementari',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='21' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '22','Lavori somma urgenza',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='22' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='22' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='A' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='02' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='22' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='A' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='02' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='22' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='A' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='02' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '04','Iva lavori',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='22' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='A' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='04' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '22','Lavori somma urgenza',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='22' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='22' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='B' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='02' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='22' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='B' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='02' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='22' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='B' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='02' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '04','Iva lavori',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='22' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='B' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='04' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '22','Lavori somma urgenza',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='22' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='22' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='C' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='02' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='22' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='C' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='02' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '02','Oneri per la sicurezza non soggetti a ribasso d''asta',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='22' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='C' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='02' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '04','Iva lavori',1, p.parte_id , q_pa.quadro_economico_id , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente, siac_t_quadro_economico q_pa, siac_d_quadro_economico_parte p_pa where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and q_pa.ente_proprietario_id=ente.ente_proprietario_id and q_pa.quadro_economico_code='22' and q_pa.parte_id=p_pa.parte_id and p_pa.parte_code='C' and q_pa.quadro_economico_id_padre is null and q_pa.data_cancellazione is null and q_pa.validita_fine is null and  not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.quadro_economico_code='04' and q1.parte_id=p.parte_id and q1.quadro_economico_id_padre=q_pa.quadro_economico_id and q1.data_cancellazione is null and q1.validita_fine is null );
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '23','Spese generali',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='23' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '23','Spese generali',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='23' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '23','Spese generali',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='23' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '24','Contributo AVCP',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='24' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '24','Contributo AVCP',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='24' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '24','Contributo AVCP',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='24' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '25','Incentivo di progettazione - fondo per la progettazione',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='25' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '25','Incentivo di progettazione - fondo per la progettazione',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='25' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '25','Incentivo di progettazione - fondo per la progettazione',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='25' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '26','Incentivo di progettazione - fondo per l''innovazione',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='26' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '26','Incentivo di progettazione - fondo per l''innovazione',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='26' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '26','Incentivo di progettazione - fondo per l''innovazione',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='26' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '27','Ribasso accantonato',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='27' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '27','Ribasso accantonato',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='27' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '27','Ribasso accantonato',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='27' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '28','Forniture',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='28' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '28','Forniture',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='28' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '28','Forniture',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='28' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '29','Altro',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='29' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '29','Altro',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='29' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '29','Altro',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='29' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '30',' Incentivo di progettazione - fondo per la progettazione variante',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='30' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '30',' Incentivo di progettazione - fondo per la progettazione variante',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='30' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '30',' Incentivo di progettazione - fondo per la progettazione variante',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='30' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '31','Incentivo di progettazione - fondo per l''innovazione variante',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='31' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '31','Incentivo di progettazione - fondo per l''innovazione variante',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='31' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '31','Incentivo di progettazione - fondo per l''innovazione variante',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='31' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '32','Acquisto di beni servizi lavori ',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='A' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='32' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '32','Acquisto di beni servizi lavori ',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='B' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='32' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);
insert into siac_t_quadro_economico ( quadro_economico_code, quadro_economico_desc, livello, parte_id, quadro_economico_id_padre,login_operazione,login_creazione,validita_inizio,ente_proprietario_id ) select '32','Acquisto di beni servizi lavori ',0, p.parte_id , null , 'SIAC-6255','SIAC-6255',now(), ente.ente_proprietario_id from siac_d_quadro_economico_parte p , siac_t_ente_proprietario ente where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29) and p.parte_code='C' and p.ente_proprietario_id=ente.ente_proprietario_id and not exists ( select 1 from siac_t_quadro_economico q1 where q1.ente_proprietario_id=ente.ente_proprietario_id and q1.parte_id=p.parte_id and  q1.quadro_economico_code='32' and q1.data_cancellazione is null and q1.validita_fine is null and q1.quadro_economico_id_padre is null);


insert into siac_r_quadro_economico_stato
(
	quadro_economico_id,
    quadro_economico_stato_id,
    validita_inizio,
    login_operazione,
    ente_proprietario_id
)
select  q.quadro_economico_id,
        stato.quadro_economico_stato_id,
        now(),
        'SIAC-6255',
        ente.ente_proprietario_id
from siac_t_quadro_economico q,
     siac_d_quadro_economico_stato stato,
     (
       select 2 ente_proprietario_id
       union
       select 3 ente_proprietario_id
       union
       select 4 ente_proprietario_id
       union
       select 5 ente_proprietario_id
       union
       select 10 ente_proprietario_id
       union
       select 13 ente_proprietario_id
       union
       select 14 ente_proprietario_id
       union
       select 16 ente_proprietario_id
       union
       select 29 ente_proprietario_id
     ) ente
where stato.ente_proprietario_id=ente.ente_proprietario_id
and   stato.quadro_economico_stato_code='V'
and   stato.data_cancellazione is null
and   q.ente_proprietario_id=ente.ente_proprietario_id
and   not exists
(
select 1 from siac_r_quadro_economico_stato rs
where rs.ente_proprietario_id=ente.ente_proprietario_id
and   rs.quadro_economico_id=q.quadro_economico_id
and   rs.quadro_economico_stato_id=stato.quadro_economico_stato_id
and   rs.data_cancellazione is null
and   rs.validita_fine is null
);



insert into siac_t_class
(
	classif_code,
    classif_desc,
    classif_tipo_id,
    validita_inizio,
    login_operazione,
    ente_proprietario_id
)
select 'CON',
       'Consulenze',
       tipo.classif_tipo_id,
       now(),
       'SIAC-6255',
       ente.ente_proprietario_id

from siac_t_ente_proprietario ente,siac_d_class_tipo tipo
where ente.ente_proprietario_id in (2,3,4,5,10,13,14,16,29)
and   tipo.ente_proprietario_id=ente.ente_proprietario_id
and   tipo.classif_tipo_code='TIPO_AMBITO'
and   not exists
(
select 1
from siac_t_class c1
where c1.ente_proprietario_id=ente.ente_proprietario_id
and   c1.classif_tipo_id=tipo.classif_tipo_id
and   c1.classif_code='CON'
and   c1.data_cancellazione is null
);


/*****************************************************************************************
   siac_t_quadro_economico  : inserimento dati - fine
******************************************************************************************/
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------
-------------              SIAC-6255 FINE               ----------------------------
--------------------------------------------------------------------------------------
--------------------------------------------------------------------------------------


--SIAC-6849 - Maurizio - INIZIO 

DROP FUNCTION if exists siac."BILR221_Allegato_B_Fondo_Pluriennale_vincolato_Rend_capitolo"(p_ente_prop_id integer, p_anno varchar);

DROP FUNCTION if exists siac."BILR222_Allegato_B_Fondo_Pluri_vinc_Rend_capitolo_stanz_agg"(p_ente_prop_id integer, p_anno varchar);

DROP FUNCTION if exists siac."BILR223_Allegato_B_Fondo_Pluriennale_vincolato_capitolo"(p_ente_prop_id integer, p_anno varchar, p_anno_prospetto varchar);

DROP FUNCTION if exists siac."BILR223_allegato_fpv_previsione_dati_gestione_capitolo"(p_ente_prop_id integer, p_anno varchar, p_anno_prospetto varchar);

CREATE OR REPLACE FUNCTION siac."BILR221_Allegato_B_Fondo_Pluriennale_vincolato_Rend_capitolo" (
  p_ente_prop_id integer,
  p_anno varchar
)
RETURNS TABLE (
  bil_anno varchar,
  missione_tipo_code varchar,
  missione_tipo_desc varchar,
  missione_code varchar,
  missione_desc varchar,
  programma_tipo_code varchar,
  programma_tipo_desc varchar,
  programma_code varchar,
  programma_desc varchar,
  elem_id_fpv integer,
  bil_ele_code_fpv varchar,
  bil_ele_desc_fpv varchar,
  bil_ele_code2_fpv varchar,
  bil_ele_desc2_fpv varchar,
  bil_ele_code3_fpv varchar,
  elem_id_std integer,
  bil_ele_code_std varchar,
  bil_ele_desc_std varchar,
  bil_ele_code2_std varchar,
  bil_ele_desc2_std varchar,
  bil_ele_code3_std varchar,
  fondo_plur_anno_prec_a numeric,
  spese_impe_anni_prec_b numeric,
  quota_fond_plur_anni_prec_c numeric,
  spese_da_impeg_anno1_d numeric,
  spese_da_impeg_anno2_e numeric,
  spese_da_impeg_anni_succ_f numeric,
  riacc_colonna_x numeric,
  riacc_colonna_y numeric,
  fondo_plur_anno_g numeric,
  fpv_stanziato_anno numeric,
  imp_cronoprogramma numeric
) AS
$body$
DECLARE


classifBilRec record;
var_fondo_plur_anno_prec_a numeric;
var_spese_impe_anni_prec_b numeric;

annoCapImp varchar;
annoCapImp1 varchar;
annoCapImp2 varchar;
tipoImpComp varchar;
tipoImpCassa varchar;
tipoImpRes varchar;
elemTipoCode varchar;
DEF_NULL	constant varchar:=''; 
RTN_MESSAGGIO varchar(1000):=DEF_NULL;
user_table	varchar;
annoPrec varchar;
annoProspInt integer;
annoBilInt integer;
conflagfpv boolean ;
a_dacapfpv boolean ;
h_dacapfpv boolean ;
flagretrocomp boolean ;

h_count integer :=0;
v_fam_missioneprogramma varchar :='00001';
v_fam_titolomacroaggregato varchar := '00002';
id_bil INTEGER;

BEGIN

annoCapImp:= p_anno; 
annoCapImp1:= ((p_anno::INTEGER)+1)::VARCHAR;   
annoCapImp2:= ((p_anno::INTEGER)+2)::VARCHAR; 
annoPrec:= ((p_anno::INTEGER)-1)::VARCHAR; 

TipoImpComp='STA';  -- competenza
TipoImpCassa='SCA'; -- cassa
TipoImpRes='STR';   -- residui
elemTipoCode:='CAP-UG'; -- tipo capitolo gestione


annoBilInt=p_anno::INTEGER;

bil_anno='';
missione_tipo_code='';
missione_tipo_desc='';
missione_code='';
missione_desc='';
programma_tipo_code='';
programma_tipo_desc='';
programma_code='';
programma_desc='';

var_fondo_plur_anno_prec_a=0;
var_spese_impe_anni_prec_b=0;
quota_fond_plur_anni_prec_c=0;
spese_da_impeg_anno1_d=0;
spese_da_impeg_anno2_e=0;
spese_da_impeg_anni_succ_f=0;
fondo_plur_anno_g=0;


select fnc_siac_random_user()
into	user_table;

select t_bil.bil_id
	into id_bil
from siac_t_bil t_bil,
	siac_t_periodo t_periodo
where t_bil.periodo_id=t_periodo.periodo_id
	and t_bil.ente_proprietario_id = p_ente_prop_id
    and t_periodo.anno= p_anno    
    and t_bil.data_cancellazione IS NULL
    and t_periodo.data_cancellazione IS NULL;
IF NOT FOUND THEN
	raise notice 'Codice del bilancio non trovato';
    return;
END IF;


        
return query  
	with strut_bilancio as(
     		select  *
            from "fnc_bilr_struttura_cap_bilancio_spese"(p_ente_prop_id, p_anno,'') a
            where a.missione_code::integer <= 19),
    capitoli_fpv as(
    	select 	programma.classif_id programma_id,
			macroaggr.classif_id macroaggregato_id,
        	p_anno anno_bilancio, r_bil_elem_fpv.elem_id elem_id_std,
       		capitolo.*
		from 
     		siac_d_class_tipo programma_tipo,
     		siac_t_class programma,
     		siac_d_class_tipo macroaggr_tipo,
     		siac_t_class macroaggr,
	 		siac_t_bil_elem capitolo
	/* 27/05/2019: SIAC-6849.
    	Aggiunta la gestione della tabella siac_r_bil_elem_fpv dove e' registrata
        la relazione tra i capitoli FPV e quelli STD.
        Gli importi estratti sono relativi ai capitoli standard perche' gli impegni
        sono associati solo a questo tipo di capitolo.
        Pero' il report deve presentare l'elenco dei capitoli FPV, quindi
        occorre estrarre il capitolo FPV a cui e' relazionato ogni record. */            
            	left join siac_r_bil_elem_fpv r_bil_elem_fpv
                	on (r_bil_elem_fpv.elem_fpv_id = capitolo.elem_id 
                    	and r_bil_elem_fpv.data_cancellazione IS NULL
                        and r_bil_elem_fpv.validita_fine IS NULL),
	 		siac_d_bil_elem_tipo tipo_elemento,
     		siac_r_bil_elem_class r_capitolo_programma,
     		siac_r_bil_elem_class r_capitolo_macroaggr,
     		siac_d_bil_elem_stato stato_capitolo, 
     		siac_r_bil_elem_stato r_capitolo_stato,
	 		siac_d_bil_elem_categoria cat_del_capitolo,
     		siac_r_bil_elem_categoria r_cat_capitolo
		where capitolo.elem_tipo_id=tipo_elemento.elem_tipo_id 	and
            programma.classif_tipo_id	=programma_tipo.classif_tipo_id and
            programma.classif_id	=r_capitolo_programma.classif_id and
            macroaggr.classif_tipo_id	=macroaggr_tipo.classif_tipo_id and
    		macroaggr.classif_id	=r_capitolo_macroaggr.classif_id and			     		 
    		capitolo.elem_id=r_capitolo_programma.elem_id	and
    		capitolo.elem_id=r_capitolo_macroaggr.elem_id	and
    		capitolo.elem_id		=	r_capitolo_stato.elem_id and
			r_capitolo_stato.elem_stato_id	=	stato_capitolo.elem_stato_id and
			capitolo.elem_id				=	r_cat_capitolo.elem_id	and
			r_cat_capitolo.elem_cat_id	=cat_del_capitolo.elem_cat_id and
            capitolo.bil_id 				= id_bil and
            capitolo.ente_proprietario_id	=	p_ente_prop_id	and
    		tipo_elemento.elem_tipo_code = elemTipoCode		and	
			programma_tipo.classif_tipo_code	='PROGRAMMA'  and		        
    		macroaggr_tipo.classif_tipo_code	='MACROAGGREGATO' and   
			stato_capitolo.elem_stato_code	=	'VA'	and
    		--cat_del_capitolo.elem_cat_code	in ('STD','FPV','FSC','FPVC') and 
            cat_del_capitolo.elem_cat_code	in ('FPV','FPVC') and 
			programma_tipo.data_cancellazione			is null 	and
    		programma.data_cancellazione 				is null 	and
    		macroaggr_tipo.data_cancellazione	 		is null 	and
    		macroaggr.data_cancellazione 				is null 	and
    		tipo_elemento.data_cancellazione 			is null 	and
    		r_capitolo_programma.data_cancellazione 	is null 	and
    		r_capitolo_macroaggr.data_cancellazione 	is null 	and    		
    		stato_capitolo.data_cancellazione 			is null 	and 
    		r_capitolo_stato.data_cancellazione 		is null 	and
			cat_del_capitolo.data_cancellazione 		is null 	and
    		r_cat_capitolo.data_cancellazione 			is null 	and
			capitolo.data_cancellazione 				is null), 
	capitoli_std as (
    	select 	programma.classif_id programma_id,
			macroaggr.classif_id macroaggregato_id,
        	p_anno anno_bilancio,
       		capitolo.*
		from 
     		siac_d_class_tipo programma_tipo,
     		siac_t_class programma,
     		siac_d_class_tipo macroaggr_tipo,
     		siac_t_class macroaggr,
	 		siac_t_bil_elem capitolo,
	 		siac_d_bil_elem_tipo tipo_elemento,
     		siac_r_bil_elem_class r_capitolo_programma,
     		siac_r_bil_elem_class r_capitolo_macroaggr,
     		siac_d_bil_elem_stato stato_capitolo, 
     		siac_r_bil_elem_stato r_capitolo_stato,
	 		siac_d_bil_elem_categoria cat_del_capitolo,
     		siac_r_bil_elem_categoria r_cat_capitolo
		where capitolo.elem_tipo_id=tipo_elemento.elem_tipo_id 	and
            programma.classif_tipo_id	=programma_tipo.classif_tipo_id and
            programma.classif_id	=r_capitolo_programma.classif_id and
            macroaggr.classif_tipo_id	=macroaggr_tipo.classif_tipo_id and
    		macroaggr.classif_id	=r_capitolo_macroaggr.classif_id and			     		 
    		capitolo.elem_id=r_capitolo_programma.elem_id	and
    		capitolo.elem_id=r_capitolo_macroaggr.elem_id	and
    		capitolo.elem_id		=	r_capitolo_stato.elem_id and
			r_capitolo_stato.elem_stato_id	=	stato_capitolo.elem_stato_id and
			capitolo.elem_id				=	r_cat_capitolo.elem_id	and
			r_cat_capitolo.elem_cat_id	=cat_del_capitolo.elem_cat_id and
            capitolo.bil_id 				= id_bil and
            capitolo.ente_proprietario_id	=	p_ente_prop_id	and
    		tipo_elemento.elem_tipo_code = elemTipoCode		and	
			programma_tipo.classif_tipo_code	='PROGRAMMA'  and		        
    		macroaggr_tipo.classif_tipo_code	='MACROAGGREGATO' and   
			stato_capitolo.elem_stato_code	=	'VA'	and
            cat_del_capitolo.elem_cat_code	in ('STD','FSC') and 
			programma_tipo.data_cancellazione			is null 	and
    		programma.data_cancellazione 				is null 	and
    		macroaggr_tipo.data_cancellazione	 		is null 	and
    		macroaggr.data_cancellazione 				is null 	and
    		tipo_elemento.data_cancellazione 			is null 	and
    		r_capitolo_programma.data_cancellazione 	is null 	and
    		r_capitolo_macroaggr.data_cancellazione 	is null 	and    		
    		stato_capitolo.data_cancellazione 			is null 	and 
    		r_capitolo_stato.data_cancellazione 		is null 	and
			cat_del_capitolo.data_cancellazione 		is null 	and
    		r_cat_capitolo.data_cancellazione 			is null 	and
			capitolo.data_cancellazione 				is null),
fpv_stanziamento_anno as (               
select 	 capitolo.elem_id,
	sum(capitolo_importi.elem_det_importo) importo_fpv_stanz_anno
from 		siac_t_bil_elem_det 		capitolo_importi,
         	siac_d_bil_elem_det_tipo 	capitolo_imp_tipo,
         	siac_t_periodo 				capitolo_imp_periodo,
            siac_t_bil_elem 			capitolo,
            siac_t_bil					t_bil,
            siac_t_periodo				t_periodo_bil,
            siac_d_bil_elem_tipo 		tipo_elemento,
	 		siac_d_bil_elem_stato 		stato_capitolo, 
     		siac_r_bil_elem_stato 		r_capitolo_stato,
	 		siac_d_bil_elem_categoria 	cat_del_capitolo,
     		siac_r_bil_elem_categoria 	r_cat_capitolo,
            siac_r_bil_elem_class r_bil_elem_class,
            siac_t_class t_class, 
            siac_d_class_tipo d_class_tipo
where capitolo.elem_id = capitolo_importi.elem_id 
	and	capitolo.bil_id = t_bil.bil_id
	and t_periodo_bil.periodo_id =t_bil.periodo_id	
	and	capitolo.elem_tipo_id = tipo_elemento.elem_tipo_id
	and	capitolo_importi.elem_det_tipo_id = capitolo_imp_tipo.elem_det_tipo_id 		
	and	capitolo_imp_periodo.periodo_id = capitolo_importi.periodo_id 
	and	capitolo.elem_id = r_capitolo_stato.elem_id			
	and	r_capitolo_stato.elem_stato_id = stato_capitolo.elem_stato_id
	and	capitolo.elem_id = r_cat_capitolo.elem_id				
	and	r_cat_capitolo.elem_cat_id = cat_del_capitolo.elem_cat_id	
    and d_class_tipo.classif_tipo_id=t_class.classif_tipo_id
    and capitolo.elem_id = r_bil_elem_class.elem_id
    and r_bil_elem_class.classif_id = t_class.classif_id
	and capitolo_importi.ente_proprietario_id = p_ente_prop_id 					
	and	tipo_elemento.elem_tipo_code = elemTipoCode 
	and	t_periodo_bil.anno = p_anno	
	and	capitolo_imp_periodo.anno = p_anno	
	and	stato_capitolo.elem_stato_code = 'VA'								
	and	cat_del_capitolo.elem_cat_code in ('FPV','FPVC')
	and capitolo_imp_tipo.elem_det_tipo_code = 'STA'	
    and d_class_tipo.classif_tipo_code='PROGRAMMA'			
	and	capitolo_importi.data_cancellazione 		is null
	and	capitolo_imp_tipo.data_cancellazione 		is null
	and	capitolo_imp_periodo.data_cancellazione 	is null
	and	capitolo.data_cancellazione 				is null
	and	tipo_elemento.data_cancellazione 			is null
	and	stato_capitolo.data_cancellazione 			is null 
	and	r_capitolo_stato.data_cancellazione 		is null
	and cat_del_capitolo.data_cancellazione 		is null
	and	r_cat_capitolo.data_cancellazione 			is null
	and t_bil.data_cancellazione 					is null
	and t_periodo_bil.data_cancellazione 			is null
    and r_bil_elem_class.data_cancellazione 		is null
    and t_class.data_cancellazione 					is null
    and d_class_tipo.data_cancellazione 		is null        
GROUP BY capitolo.elem_id ),            
 fpv_anno_prec_da_capitoli as (               
select 	 capitolo.elem_id,
		capitolo.elem_code, capitolo.elem_code2, capitolo.elem_code3,
	sum(capitolo_importi.elem_det_importo) importo_fpv_anno_prec
from 		siac_t_bil_elem_det 		capitolo_importi,
         	siac_d_bil_elem_det_tipo 	capitolo_imp_tipo,
         	siac_t_periodo 				capitolo_imp_periodo,
            siac_t_bil_elem 			capitolo,
            siac_t_bil					t_bil,
            siac_t_periodo				t_periodo_bil,
            siac_d_bil_elem_tipo 		tipo_elemento,
	 		siac_d_bil_elem_stato 		stato_capitolo, 
     		siac_r_bil_elem_stato 		r_capitolo_stato,
	 		siac_d_bil_elem_categoria 	cat_del_capitolo,
     		siac_r_bil_elem_categoria 	r_cat_capitolo,
            siac_r_bil_elem_class r_bil_elem_class,
            siac_t_class t_class, 
            siac_d_class_tipo d_class_tipo
where capitolo.elem_id = capitolo_importi.elem_id 
	and	capitolo.bil_id = t_bil.bil_id
	and t_periodo_bil.periodo_id =t_bil.periodo_id	
	and	capitolo.elem_tipo_id = tipo_elemento.elem_tipo_id
	and	capitolo_importi.elem_det_tipo_id = capitolo_imp_tipo.elem_det_tipo_id 		
	and	capitolo_imp_periodo.periodo_id = capitolo_importi.periodo_id 
	and	capitolo.elem_id = r_capitolo_stato.elem_id			
	and	r_capitolo_stato.elem_stato_id = stato_capitolo.elem_stato_id
	and	capitolo.elem_id = r_cat_capitolo.elem_id				
	and	r_cat_capitolo.elem_cat_id = cat_del_capitolo.elem_cat_id	
    and d_class_tipo.classif_tipo_id=t_class.classif_tipo_id
    and capitolo.elem_id = r_bil_elem_class.elem_id
    and r_bil_elem_class.classif_id = t_class.classif_id
	and capitolo_importi.ente_proprietario_id = p_ente_prop_id 					
	and	tipo_elemento.elem_tipo_code = elemTipoCode 
	and	t_periodo_bil.anno = annoPrec	--anno bilancio -1	
	and	capitolo_imp_periodo.anno = annoPrec	--anno bilancio -1		  	
	and	stato_capitolo.elem_stato_code = 'VA'								
	and	cat_del_capitolo.elem_cat_code in ('FPV','FPVC')
	and capitolo_imp_tipo.elem_det_tipo_code = 'STA'	
    and d_class_tipo.classif_tipo_code='PROGRAMMA'			
	and	capitolo_importi.data_cancellazione 		is null
	and	capitolo_imp_tipo.data_cancellazione 		is null
	and	capitolo_imp_periodo.data_cancellazione 	is null
	and	capitolo.data_cancellazione 				is null
	and	tipo_elemento.data_cancellazione 			is null
	and	stato_capitolo.data_cancellazione 			is null 
	and	r_capitolo_stato.data_cancellazione 		is null
	and cat_del_capitolo.data_cancellazione 		is null
	and	r_cat_capitolo.data_cancellazione 			is null
	and t_bil.data_cancellazione 					is null
	and t_periodo_bil.data_cancellazione 			is null
    and r_bil_elem_class.data_cancellazione 		is null
    and t_class.data_cancellazione 					is null
    and d_class_tipo.data_cancellazione 		is null        
GROUP BY capitolo.elem_id, capitolo.elem_code, capitolo.elem_code2, capitolo.elem_code3 ),
importi_anni_prec as (
select t_bil_elem.elem_id,
	sum(coalesce( r_movgest_ts.movgest_ts_importo ,0)) spese_impe_anni_prec    	
    from siac_t_movgest t_movgest,  
          siac_t_movgest_ts t_movgest_ts, siac_t_movgest_ts_det t_movgest_ts_det,
          siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, siac_t_bil_elem t_bil_elem, 
		  siac_r_movgest_bil_elem r_movgest_bil_elem,
          siac_r_movgest_ts_stato r_movgest_ts_stato, siac_d_movgest_stato d_movgest_stato,
          siac_r_bil_elem_class r_bil_elem_class,
          siac_t_class t_class, siac_d_class_tipo d_class_tipo, 
           siac_d_movgest_tipo d_mov_tipo,
           siac_r_movgest_ts r_movgest_ts, 
           siac_t_avanzovincolo t_avanzovincolo, 
           siac_d_avanzovincolo_tipo d_avanzovincolo_tipo
    where 
           t_movgest.movgest_id = t_movgest_ts.movgest_id  
          and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
          and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
          and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
          and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
          and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
          and r_bil_elem_class.classif_id = t_class.classif_id
          and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
          and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id
          and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
          and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id 
          and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
          and t_avanzovincolo.avav_tipo_id=d_avanzovincolo_tipo.avav_tipo_id 
		  and t_movgest.bil_id = id_bil
          and t_movgest.ente_proprietario_id= p_ente_prop_id      
          and d_class_tipo.classif_tipo_code='PROGRAMMA'
          and t_movgest.movgest_anno =  annoBilInt
          and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='I'
          and d_movgest_stato.movgest_stato_code in ('D', 'N')
          and d_mov_tipo.movgest_tipo_code='I' --Impegni      
          and d_avanzovincolo_tipo.avav_tipo_code like'FPV%'  
          and t_movgest_ts.movgest_ts_id_padre is NULL              
          and r_movgest_bil_elem.data_cancellazione is null
          and r_movgest_bil_elem.validita_fine is NULL          
          and r_movgest_ts_stato.data_cancellazione is null
          and r_movgest_ts_stato.validita_fine is null
          and d_mov_tipo.data_cancellazione is null
          and d_mov_tipo.validita_fine is null              
          and r_bil_elem_class.data_cancellazione is null
          and r_bil_elem_class.validita_fine is null
          and t_movgest_ts_det.data_cancellazione is null
          and t_movgest_ts_det.validita_fine is null
          and r_movgest_ts.avav_id=t_avanzovincolo.avav_id                                  
          and r_movgest_ts.data_cancellazione is null
          and r_movgest_ts.validita_fine is null
		  and t_bil_elem.data_cancellazione is null
    group by t_bil_elem.elem_id ),
riaccert_colonna_x as (
--Riaccertamento degli impegni di cui alla lettera b) effettuata nel corso dell'eserczio N (cd. economie di impegno)
--riduzioni su impegni di competenza con anno atto minore dell'anno di bilancio 
--e coperti anche solo parzialmente da fondo   
	select t_bil_elem.elem_id,
		sum(COALESCE(t_movgest_ts_det_mod.movgest_ts_det_importo,0)*-1) riacc_colonna_x                
      from siac_r_modifica_stato r_modifica_stato, 
      siac_t_movgest_ts_det_mod t_movgest_ts_det_mod,
      siac_t_movgest_ts t_movgest_ts, siac_d_modifica_stato d_modifica_stato,
      siac_t_movgest t_movgest, siac_d_movgest_tipo d_movgest_tipo, 
      siac_t_modifica t_modifica, siac_d_modifica_tipo d_modifica_tipo,
      siac_t_bil_elem t_bil_elem, siac_r_movgest_bil_elem r_movgest_bil_elem,
      siac_r_bil_elem_class r_bil_elem_class, 
      siac_t_class t_class, siac_d_class_tipo d_class_tipo,
      siac_r_movgest_ts_atto_amm r_movgest_ts_atto_amm,
      siac_t_atto_amm t_atto_amm ,
      siac_r_movgest_ts_stato r_movgest_ts_stato, 
      siac_d_movgest_stato d_movgest_stato    
      where t_movgest_ts_det_mod.mod_stato_r_id=r_modifica_stato.mod_stato_r_id
      and t_movgest_ts_det_mod.movgest_ts_id = t_movgest_ts.movgest_ts_id
      and t_movgest.movgest_tipo_id=d_movgest_tipo.movgest_tipo_id
      and d_modifica_stato.mod_stato_id=r_modifica_stato.mod_stato_id      
      and t_movgest.movgest_id=t_movgest_ts.movgest_id
      and t_modifica.mod_id=r_modifica_stato.mod_id
      and t_modifica.mod_tipo_id=d_modifica_tipo.mod_tipo_id
      and r_movgest_ts_atto_amm.movgest_ts_id=t_movgest_ts.movgest_ts_id
      and r_movgest_ts_atto_amm.attoamm_id = t_atto_amm.attoamm_id
      and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
      and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
      and r_bil_elem_class.elem_id=t_bil_elem.elem_id
      and r_bil_elem_class.classif_id=t_class.classif_id
      and r_movgest_ts_stato.movgest_ts_id = t_movgest_ts.movgest_ts_id
      and r_movgest_ts_stato.movgest_stato_id = d_movgest_stato.movgest_stato_id      
      and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
      and t_movgest.bil_id=id_bil
      and r_modifica_stato.ente_proprietario_id=p_ente_prop_id
      and d_modifica_stato.mod_stato_code='V'
      and d_movgest_tipo.movgest_tipo_code='I'
      and 
      (d_modifica_tipo.mod_tipo_code like  'ECON%'
         or d_modifica_tipo.mod_tipo_desc like  'ROR%')
      and d_modifica_tipo.mod_tipo_code <> 'REIMP'
      and d_class_tipo.classif_tipo_code='PROGRAMMA'
      and d_movgest_stato.movgest_stato_code in ('D', 'N')
      and t_movgest.movgest_anno = annoBilInt 
      and r_movgest_ts_stato.data_cancellazione is NULL
      and r_movgest_ts_stato.validita_fine is null
      and t_movgest_ts.movgest_ts_id_padre is null
      and r_modifica_stato.data_cancellazione is null
      and r_modifica_stato.validita_fine is null
      and t_movgest_ts_det_mod.data_cancellazione is null
      and t_movgest_ts_det_mod.validita_fine is null
      and t_movgest_ts.data_cancellazione is null
      and t_movgest_ts.validita_fine is null
      and d_modifica_stato.data_cancellazione is null
      and d_modifica_stato.validita_fine is null
      and t_movgest.data_cancellazione is null
      and t_movgest.validita_fine is null
      and d_movgest_tipo.data_cancellazione is null
      and d_movgest_tipo.validita_fine is null
      and t_modifica.data_cancellazione is null
      and t_modifica.validita_fine is null
      and d_modifica_tipo.data_cancellazione is null
      and d_modifica_tipo.validita_fine is null
      and t_bil_elem.data_cancellazione is null
      and t_bil_elem.validita_fine is null
      and r_movgest_bil_elem.data_cancellazione is null
      and r_movgest_bil_elem.validita_fine is null
      and r_bil_elem_class.data_cancellazione is null
      and r_bil_elem_class.validita_fine is null
      and t_class.data_cancellazione is null
      and t_class.validita_fine is null
      and d_class_tipo.data_cancellazione is null
      and d_class_tipo.validita_fine is null
      and t_atto_amm.data_cancellazione is null
      and t_atto_amm.validita_fine is null      
      and r_movgest_ts_atto_amm.data_cancellazione is null
      and r_movgest_ts_atto_amm.validita_fine is null
      and d_movgest_stato.data_cancellazione is null
      and d_movgest_stato.validita_fine is null      
      and exists (select 
          		1 
                from siac_r_movgest_ts r_movgest_ts, 
            	siac_t_avanzovincolo t_avanzovincolo, 
                siac_d_avanzovincolo_tipo d_avanzovincolo_tipo
			where r_movgest_ts.avav_id=t_avanzovincolo.avav_id     
                and t_avanzovincolo.avav_tipo_id=d_avanzovincolo_tipo.avav_tipo_id 
                and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                and d_avanzovincolo_tipo.avav_tipo_code like'FPV%'                 
                and r_movgest_ts.data_cancellazione is null
                and r_movgest_ts.validita_fine is null 
               )
      group by t_bil_elem.elem_id)  ,
riaccert_colonna_y as (
--Riaccertamento degli impegni di cui alla lettera b) effettuata nel corso dell'eserczio N (cd. economie di impegno) su impegni pluriennali finanziati dal FPV e imputati agli esercizi successivi  a N
--riduzioni su impegni di competenza con anno atto minore dell'anno di bilancio 
--e coperti anche solo parzialmente da fondo 
select t_bil_elem.elem_id,
	sum(COALESCE(t_movgest_ts_det_mod.movgest_ts_det_importo,0)*-1) riacc_colonna_y
      from siac_r_modifica_stato r_modifica_stato, 
      siac_t_movgest_ts_det_mod t_movgest_ts_det_mod,
      siac_t_movgest_ts t_movgest_ts, 
      siac_d_modifica_stato d_modifica_stato,
      siac_t_movgest t_movgest, siac_d_movgest_tipo d_movgest_tipo,  
      siac_t_modifica t_modifica, siac_d_modifica_tipo d_modifica_tipo,
      siac_t_bil_elem t_bil_elem, siac_r_movgest_bil_elem r_movgest_bil_elem,
      siac_r_bil_elem_class r_bil_elem_class, 
      siac_t_class t_class, siac_d_class_tipo d_class_tipo,
      siac_r_movgest_ts_atto_amm r_movgest_ts_atto_amm,
      siac_t_atto_amm t_atto_amm ,
      siac_r_movgest_ts_stato r_movgest_ts_stato, 
      siac_d_movgest_stato d_movgest_stato    
      where t_movgest_ts_det_mod.mod_stato_r_id=r_modifica_stato.mod_stato_r_id
      and t_movgest_ts_det_mod.movgest_ts_id = t_movgest_ts.movgest_ts_id
      and t_movgest.movgest_tipo_id=d_movgest_tipo.movgest_tipo_id
      and d_modifica_stato.mod_stato_id=r_modifica_stato.mod_stato_id      
      and t_movgest.movgest_id=t_movgest_ts.movgest_id
      and t_modifica.mod_id=r_modifica_stato.mod_id
      and t_modifica.mod_tipo_id=d_modifica_tipo.mod_tipo_id      
      and r_movgest_ts_atto_amm.movgest_ts_id=t_movgest_ts.movgest_ts_id
      and r_movgest_ts_atto_amm.attoamm_id = t_atto_amm.attoamm_id
      and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
      and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
      and r_bil_elem_class.elem_id=t_bil_elem.elem_id
      and r_bil_elem_class.classif_id=t_class.classif_id
      and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id    
      and r_movgest_ts_stato.movgest_ts_id = t_movgest_ts.movgest_ts_id
      and r_movgest_ts_stato.movgest_stato_id = d_movgest_stato.movgest_stato_id  
      and t_movgest.bil_id= id_bil
      and r_modifica_stato.ente_proprietario_id=p_ente_prop_id
      and t_movgest.movgest_anno > annoBilInt 
      and d_modifica_stato.mod_stato_code='V'
      and d_movgest_tipo.movgest_tipo_code='I'
      and 
      (d_modifica_tipo.mod_tipo_code like  'ECON%'
         or d_modifica_tipo.mod_tipo_desc like  'ROR%')
      and d_modifica_tipo.mod_tipo_code <> 'REIMP'
      and d_class_tipo.classif_tipo_code='PROGRAMMA'
      and d_movgest_stato.movgest_stato_code in ('D', 'N')
      and r_movgest_ts_stato.data_cancellazione is NULL
      and r_movgest_ts_stato.validita_fine is null
      and t_movgest_ts.movgest_ts_id_padre is null
      and r_modifica_stato.data_cancellazione is null
      and r_modifica_stato.validita_fine is null
      and t_movgest_ts_det_mod.data_cancellazione is null
      and t_movgest_ts_det_mod.validita_fine is null
      and t_movgest_ts.data_cancellazione is null
      and t_movgest_ts.validita_fine is null
      and d_modifica_stato.data_cancellazione is null
      and d_modifica_stato.validita_fine is null
      and t_movgest.data_cancellazione is null
      and t_movgest.validita_fine is null
      and d_movgest_tipo.data_cancellazione is null
      and d_movgest_tipo.validita_fine is null
      and t_modifica.data_cancellazione is null
      and t_modifica.validita_fine is null
      and d_modifica_tipo.data_cancellazione is null
      and d_modifica_tipo.validita_fine is null
      and t_bil_elem.data_cancellazione is null
      and t_bil_elem.validita_fine is null
      and r_movgest_bil_elem.data_cancellazione is null
      and r_movgest_bil_elem.validita_fine is null
      and r_bil_elem_class.data_cancellazione is null
      and r_bil_elem_class.validita_fine is null
      and t_class.data_cancellazione is null
      and t_class.validita_fine is null
      and d_class_tipo.data_cancellazione is null
      and d_class_tipo.validita_fine is null
      and r_movgest_ts_atto_amm.data_cancellazione is null
      and r_movgest_ts_atto_amm.validita_fine is null
      and t_atto_amm.data_cancellazione is null
      and t_atto_amm.validita_fine is null
      and d_movgest_stato.data_cancellazione is null
      and d_movgest_stato.validita_fine is null
      and exists (select 
          		1 
                from siac_r_movgest_ts r_movgest_ts, 
            	siac_t_avanzovincolo t_avanzovincolo, 
                siac_d_avanzovincolo_tipo d_avanzovincolo_tipo
			where r_movgest_ts.avav_id=t_avanzovincolo.avav_id     
                and t_avanzovincolo.avav_tipo_id=d_avanzovincolo_tipo.avav_tipo_id 
                and d_avanzovincolo_tipo.avav_tipo_code like'FPV%' 
                and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                and r_movgest_ts.data_cancellazione is null
                and r_movgest_ts.validita_fine is null )
      group by t_bil_elem.elem_id) ,
impegni_anno1_d as(
      -- Spese impegnate nell'esercizio N con imputazione all'esercizio N+1 e 
      -- coperte dal fondo pluriennale vincolato
      -- impegni anno + 1 con atto nell'anno legati ad accertamenti 
      -- di competenza oppure ad avanzo
select x.elem_id,
	sum(x.spese_da_impeg_anno1_d) as spese_da_impeg_anno1_d   
from (
               (
              select t_bil_elem.elem_id,
              	sum(COALESCE(r_movgest_ts.movgest_ts_importo,0)) spese_da_impeg_anno1_d              
                        from siac_t_movgest t_movgest,  
                        siac_t_movgest_ts t_movgest_ts, 
                        siac_t_movgest_ts_det t_movgest_ts_det,
                        siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_movgest_bil_elem,
                        siac_r_movgest_ts_stato r_movgest_ts_stato, 
                        siac_d_movgest_stato d_movgest_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class t_class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_r_movgest_ts_atto_amm r_movgest_ts_atto_amm,
                        siac_t_atto_amm t_atto_amm, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, siac_t_movgest_ts acc_ts,
                        siac_t_movgest acc,
                        siac_r_movgest_ts_stato rstacc,
                        siac_d_movgest_stato dstacc
                where 
                        t_movgest.movgest_id = t_movgest_ts.movgest_id  
                        and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
                        and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
                        and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = t_class.classif_id
                        and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id
                        and r_movgest_ts_atto_amm.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_atto_amm.attoamm_id = t_atto_amm.attoamm_id
                        and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
                        and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id 
                        and r_movgest_ts.movgest_ts_a_id = acc_ts.movgest_ts_id
                        and acc_ts.movgest_id = acc.movgest_id
                        and rstacc.movgest_ts_id=acc_ts.movgest_ts_id
                        and rstacc.movgest_stato_id=dstacc.movgest_stato_id
                        and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and t_movgest.bil_id =id_bil
                        and t_movgest.ente_proprietario_id= p_ente_prop_id      
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and t_movgest.movgest_anno = annoBilInt + 1
                        and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_movgest_stato.movgest_stato_code in ('D', 'N')
                        and d_mov_tipo.movgest_tipo_code='I' 
                        and dstacc.movgest_stato_code in ('D', 'N')   
                        and acc.movgest_anno = annoBilInt  
                        and t_movgest_ts.movgest_ts_id_padre is NULL                            
                        and r_movgest_bil_elem.data_cancellazione is null
                        and r_movgest_bil_elem.validita_fine is NULL          
                        and r_movgest_ts_stato.data_cancellazione is null
                        and r_movgest_ts_stato.validita_fine is null
                        and t_movgest_ts_det.data_cancellazione is null
                        and t_movgest_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null
                        and r_movgest_ts_atto_amm.data_cancellazione is null
                        and r_movgest_ts_atto_amm.validita_fine is null                        
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null                         
                        and acc_ts.movgest_ts_id_padre is null                        
                        and acc.validita_fine is null
                        and acc.data_cancellazione is null
                        and acc_ts.validita_fine is null
                        and acc_ts.data_cancellazione is null                                                
                        and rstacc.validita_fine is null
                        and rstacc.data_cancellazione is null   
                        and t_movgest.data_cancellazione is null 
                        and t_movgest.validita_fine is null  
                        and t_bil_elem.data_cancellazione is null 
                        and t_bil_elem.validita_fine is null  
                        and t_class.data_cancellazione is null 
                        and t_class.validita_fine is null                                                                                                           
              	group by t_bil_elem.elem_id)
              union(
              select t_bil_elem.elem_id,
              		sum(COALESCE(r_movgest_ts.movgest_ts_importo,0)) spese_da_impeg_anno1_d
                from siac_t_movgest t_movgest,  
                        siac_t_movgest_ts t_movgest_ts, 
                        siac_t_movgest_ts_det t_movgest_ts_det,
                        siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_movgest_bil_elem,
                        siac_r_movgest_ts_stato r_movgest_ts_stato, 
                        siac_d_movgest_stato d_movgest_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class t_class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_r_movgest_ts_atto_amm r_movgest_ts_atto_amm,
                        siac_t_atto_amm t_atto_amm, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, 
                        siac_t_avanzovincolo t_avanzovincolo, 
                        siac_d_avanzovincolo_tipo d_avanzovincolo_tipo 
                      where 
                        t_movgest.movgest_id = t_movgest_ts.movgest_id  
                        and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
                        and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
                        and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = t_class.classif_id
                        and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id
                        and r_movgest_ts_atto_amm.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_atto_amm.attoamm_id = t_atto_amm.attoamm_id
                        and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
                        and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
                        and t_avanzovincolo.avav_tipo_id=d_avanzovincolo_tipo.avav_tipo_id
                        and r_movgest_ts.avav_id=t_avanzovincolo.avav_id
                        and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and t_movgest.bil_id =id_bil
                        and t_movgest.ente_proprietario_id = p_ente_prop_id       
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and t_movgest.movgest_anno = annoBilInt + 1
                        and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_movgest_stato.movgest_stato_code in ('D', 'N')
                        and d_mov_tipo.movgest_tipo_code='I' 
                        and d_avanzovincolo_tipo.avav_tipo_code = 'AAM'
                        and t_movgest_ts.movgest_ts_id_padre is NULL                             
                        and r_movgest_bil_elem.data_cancellazione is null
                        and r_movgest_bil_elem.validita_fine is NULL          
                        and r_movgest_ts_stato.data_cancellazione is null
                        and r_movgest_ts_stato.validita_fine is null
                        and t_movgest_ts_det.data_cancellazione is null
                        and t_movgest_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null
                        and r_movgest_ts_atto_amm.data_cancellazione is null
                        and r_movgest_ts_atto_amm.validita_fine is null                                                                                                       
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null 
                        and t_movgest.data_cancellazione is null
                        and t_movgest.validita_fine is null                        
                   group by t_bil_elem.elem_id
              )--- Impegni da riaccertamento - reimputazione nel bilancio successivo 
              union(
              select t_bil_elem.elem_id,
              		sum(COALESCE(r_movgest_ts.movgest_ts_importo,0)) spese_da_impeg_anno1_d
                        from siac_t_movgest t_movgest,  
                        siac_t_movgest_ts t_movgest_ts, 
                        siac_t_movgest_ts_det t_movgest_ts_det,
                        siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_movgest_bil_elem,
                        siac_r_movgest_ts_stato r_movgest_ts_stato, 
                        siac_d_movgest_stato d_movgest_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class t_class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, 
                        siac_t_avanzovincolo t_avanzovincolo, 
                        siac_d_avanzovincolo_tipo d_avanzovincolo_tipo 
                      where 
                        t_movgest.movgest_id = t_movgest_ts.movgest_id  
                        and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
                        and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
                        and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = t_class.classif_id
                        and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id                        
                        and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
                        and r_movgest_ts.avav_id=t_avanzovincolo.avav_id     
                        and t_avanzovincolo.avav_tipo_id=d_avanzovincolo_tipo.avav_tipo_id 
                        and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
                        and t_movgest.bil_id = id_bil
                        and t_movgest.ente_proprietario_id= p_ente_prop_id     
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and t_movgest.movgest_anno = annoBilInt + 1
                        and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_movgest_stato.movgest_stato_code <> 'A'
                        and d_mov_tipo.movgest_tipo_code='I'
                        and d_avanzovincolo_tipo.avav_tipo_code like'FPV%' 
                        and t_movgest_ts.movgest_ts_id_padre is NULL                             
                        and r_movgest_bil_elem.data_cancellazione is null
                        and r_movgest_bil_elem.validita_fine is NULL          
                        and r_movgest_ts_stato.data_cancellazione is null
                        and r_movgest_ts_stato.validita_fine is null
                        and t_movgest_ts_det.data_cancellazione is null
                        and t_movgest_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null                                                                         
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null 
                        and t_movgest.data_cancellazione is null
                        and t_movgest.validita_fine is null 
                        and exists (
                        	select 1
                            from fase_bil_t_elaborazione fase, fase_bil_d_elaborazione_tipo tipo,
                                 fase_bil_t_reimputazione fasereimp, siac_t_bil bilprec, siac_t_periodo pprec
                            where tipo.ente_proprietario_id= t_movgest.ente_proprietario_id                             
                            and   fase.fase_bil_elab_tipo_id=tipo.fase_bil_elab_tipo_id                            
                            and   fasereimp.fasebilelabid=fase.fase_bil_elab_id
                            and   fasereimp.movgest_tipo_id=d_mov_tipo.movgest_tipo_id
                            and   fasereimp.bil_id=bilprec.bil_id
                            and   bilprec.periodo_id = pprec.periodo_id
                            and   fasereimp.movgestnew_id = t_movgest.movgest_id                            
                            and   fasereimp.fl_elab is not null and fasereimp.fl_elab='S'
                            and   tipo.fase_bil_elab_tipo_code='APE_GEST_REIMP'
                            and   fase.fase_bil_elab_esito='OK'
                            and   pprec.anno=p_anno                            
                            and   fase.data_cancellazione is null
                            and   fase.validita_fine is null
                            and   tipo.data_cancellazione is null
                            and   tipo.validita_fine is null
                        )
                        and not exists 
                        (
                           select 
                             1
                             from fase_bil_t_reimputazione_vincoli vreimp, siac_r_movgest_ts rold,
                             siac_r_movgest_ts rnew, siac_t_avanzovincolo avold, siac_d_avanzovincolo_tipo davold
                             where 
                             vreimp.movgest_ts_r_new_id =  r_movgest_ts.movgest_ts_r_id 
                             and vreimp.movgest_ts_r_id=rold.movgest_ts_r_id
                             and vreimp.movgest_ts_r_new_id = rnew.movgest_ts_r_id
                             and avold.avav_id=rold.avav_id
                             and avold.avav_tipo_id = davold.avav_tipo_id
                             and davold.avav_tipo_code like '%FPV%'
                        )
                        group by t_bil_elem.elem_id
              )    
              ) as x
                group by x.elem_id ),
impegni_anno2_e as(
      -- Spese impegnate nell'esercizio N con imputazione all'esercizio N+1 e 
      -- coperte dal fondo pluriennale vincolato
      -- impegni anno + 1 con atto nell'anno legati ad accertamenti 
      -- di competenza oppure ad avanzo
select x.elem_id,
	sum(x.spese_da_impeg_anno2_e) as spese_da_impeg_anno2_e   
from (
               (
              select t_bil_elem.elem_id,
              	sum(COALESCE(r_movgest_ts.movgest_ts_importo,0)) spese_da_impeg_anno2_e              
                        from siac_t_movgest t_movgest,  
                        siac_t_movgest_ts t_movgest_ts, 
                        siac_t_movgest_ts_det t_movgest_ts_det,
                        siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_movgest_bil_elem,
                        siac_r_movgest_ts_stato r_movgest_ts_stato, 
                        siac_d_movgest_stato d_movgest_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class t_class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_r_movgest_ts_atto_amm r_movgest_ts_atto_amm,
                        siac_t_atto_amm t_atto_amm, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, siac_t_movgest_ts acc_ts,
                        siac_t_movgest acc,
                        siac_r_movgest_ts_stato rstacc,
                        siac_d_movgest_stato dstacc
                where 
                        t_movgest.movgest_id = t_movgest_ts.movgest_id  
                        and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
                        and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
                        and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = t_class.classif_id
                        and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id
                        and r_movgest_ts_atto_amm.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_atto_amm.attoamm_id = t_atto_amm.attoamm_id
                        and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
                        and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id 
                        and r_movgest_ts.movgest_ts_a_id = acc_ts.movgest_ts_id
                        and acc_ts.movgest_id = acc.movgest_id
                        and rstacc.movgest_ts_id=acc_ts.movgest_ts_id
                        and rstacc.movgest_stato_id=dstacc.movgest_stato_id
                        and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and t_movgest.bil_id =id_bil
                        and t_movgest.ente_proprietario_id= p_ente_prop_id      
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and t_movgest.movgest_anno = annoBilInt + 2
                        and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_movgest_stato.movgest_stato_code in ('D', 'N')
                        and d_mov_tipo.movgest_tipo_code='I' 
                        and dstacc.movgest_stato_code in ('D', 'N')   
                        and acc.movgest_anno = annoBilInt  
                        and t_movgest_ts.movgest_ts_id_padre is NULL                            
                        and r_movgest_bil_elem.data_cancellazione is null
                        and r_movgest_bil_elem.validita_fine is NULL          
                        and r_movgest_ts_stato.data_cancellazione is null
                        and r_movgest_ts_stato.validita_fine is null
                        and t_movgest_ts_det.data_cancellazione is null
                        and t_movgest_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null
                        and r_movgest_ts_atto_amm.data_cancellazione is null
                        and r_movgest_ts_atto_amm.validita_fine is null                        
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null                         
                        and acc_ts.movgest_ts_id_padre is null                        
                        and acc.validita_fine is null
                        and acc.data_cancellazione is null
                        and acc_ts.validita_fine is null
                        and acc_ts.data_cancellazione is null                                                
                        and rstacc.validita_fine is null
                        and rstacc.data_cancellazione is null   
                        and t_movgest.data_cancellazione is null 
                        and t_movgest.validita_fine is null  
                        and t_bil_elem.data_cancellazione is null 
                        and t_bil_elem.validita_fine is null  
                        and t_class.data_cancellazione is null 
                        and t_class.validita_fine is null                                                                                                           
              	group by t_bil_elem.elem_id)
              union(
              select t_bil_elem.elem_id,
              		sum(COALESCE(r_movgest_ts.movgest_ts_importo,0)) spese_da_impeg_anno2_e
                from siac_t_movgest t_movgest,  
                        siac_t_movgest_ts t_movgest_ts, 
                        siac_t_movgest_ts_det t_movgest_ts_det,
                        siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_movgest_bil_elem,
                        siac_r_movgest_ts_stato r_movgest_ts_stato, 
                        siac_d_movgest_stato d_movgest_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class t_class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_r_movgest_ts_atto_amm r_movgest_ts_atto_amm,
                        siac_t_atto_amm t_atto_amm, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, 
                        siac_t_avanzovincolo t_avanzovincolo, 
                        siac_d_avanzovincolo_tipo d_avanzovincolo_tipo 
                      where 
                        t_movgest.movgest_id = t_movgest_ts.movgest_id  
                        and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
                        and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
                        and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = t_class.classif_id
                        and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id
                        and r_movgest_ts_atto_amm.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_atto_amm.attoamm_id = t_atto_amm.attoamm_id
                        and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
                        and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
                        and t_avanzovincolo.avav_tipo_id=d_avanzovincolo_tipo.avav_tipo_id
                        and r_movgest_ts.avav_id=t_avanzovincolo.avav_id
                        and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and t_movgest.bil_id =id_bil
                        and t_movgest.ente_proprietario_id = p_ente_prop_id       
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and t_movgest.movgest_anno = annoBilInt + 2
                        and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_movgest_stato.movgest_stato_code in ('D', 'N')
                        and d_mov_tipo.movgest_tipo_code='I' 
                        and d_avanzovincolo_tipo.avav_tipo_code = 'AAM'
                        and t_movgest_ts.movgest_ts_id_padre is NULL                             
                        and r_movgest_bil_elem.data_cancellazione is null
                        and r_movgest_bil_elem.validita_fine is NULL          
                        and r_movgest_ts_stato.data_cancellazione is null
                        and r_movgest_ts_stato.validita_fine is null
                        and t_movgest_ts_det.data_cancellazione is null
                        and t_movgest_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null
                        and r_movgest_ts_atto_amm.data_cancellazione is null
                        and r_movgest_ts_atto_amm.validita_fine is null                                                                                                       
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null 
                        and t_movgest.data_cancellazione is null
                        and t_movgest.validita_fine is null                        
                   group by t_bil_elem.elem_id
              )--- Impegni da riaccertamento - reimputazione nel bilancio successivo 
              union(
              select t_bil_elem.elem_id,
              		sum(COALESCE(r_movgest_ts.movgest_ts_importo,0)) spese_da_impeg_anno2_e
                        from siac_t_movgest t_movgest,  
                        siac_t_movgest_ts t_movgest_ts, 
                        siac_t_movgest_ts_det t_movgest_ts_det,
                        siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_movgest_bil_elem,
                        siac_r_movgest_ts_stato r_movgest_ts_stato, 
                        siac_d_movgest_stato d_movgest_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class t_class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, 
                        siac_t_avanzovincolo t_avanzovincolo, 
                        siac_d_avanzovincolo_tipo d_avanzovincolo_tipo 
                      where 
                        t_movgest.movgest_id = t_movgest_ts.movgest_id  
                        and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
                        and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
                        and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = t_class.classif_id
                        and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id                        
                        and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
                        and r_movgest_ts.avav_id=t_avanzovincolo.avav_id     
                        and t_avanzovincolo.avav_tipo_id=d_avanzovincolo_tipo.avav_tipo_id 
                        and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
                        and t_movgest.bil_id = id_bil
                        and t_movgest.ente_proprietario_id= p_ente_prop_id     
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and t_movgest.movgest_anno = annoBilInt + 2
                        and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_movgest_stato.movgest_stato_code <> 'A'
                        and d_mov_tipo.movgest_tipo_code='I'
                        and d_avanzovincolo_tipo.avav_tipo_code like'FPV%' 
                        and t_movgest_ts.movgest_ts_id_padre is NULL                             
                        and r_movgest_bil_elem.data_cancellazione is null
                        and r_movgest_bil_elem.validita_fine is NULL          
                        and r_movgest_ts_stato.data_cancellazione is null
                        and r_movgest_ts_stato.validita_fine is null
                        and t_movgest_ts_det.data_cancellazione is null
                        and t_movgest_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null                                                                         
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null 
                        and t_movgest.data_cancellazione is null
                        and t_movgest.validita_fine is null 
                        and exists (
                        	select 1
                            from fase_bil_t_elaborazione fase, fase_bil_d_elaborazione_tipo tipo,
                                 fase_bil_t_reimputazione fasereimp, siac_t_bil bilprec, siac_t_periodo pprec
                            where tipo.ente_proprietario_id= t_movgest.ente_proprietario_id                             
                            and   fase.fase_bil_elab_tipo_id=tipo.fase_bil_elab_tipo_id                            
                            and   fasereimp.fasebilelabid=fase.fase_bil_elab_id
                            and   fasereimp.movgest_tipo_id=d_mov_tipo.movgest_tipo_id
                            and   fasereimp.bil_id=bilprec.bil_id
                            and   bilprec.periodo_id = pprec.periodo_id
                            and   fasereimp.movgestnew_id = t_movgest.movgest_id                            
                            and   fasereimp.fl_elab is not null and fasereimp.fl_elab='S'
                            and   tipo.fase_bil_elab_tipo_code='APE_GEST_REIMP'
                            and   fase.fase_bil_elab_esito='OK'
                            and   pprec.anno=p_anno                            
                            and   fase.data_cancellazione is null
                            and   fase.validita_fine is null
                            and   tipo.data_cancellazione is null
                            and   tipo.validita_fine is null
                        )
                        and not exists 
                        (
                           select 
                             1
                             from fase_bil_t_reimputazione_vincoli vreimp, siac_r_movgest_ts rold,
                             siac_r_movgest_ts rnew, siac_t_avanzovincolo avold, siac_d_avanzovincolo_tipo davold
                             where 
                             vreimp.movgest_ts_r_new_id =  r_movgest_ts.movgest_ts_r_id 
                             and vreimp.movgest_ts_r_id=rold.movgest_ts_r_id
                             and vreimp.movgest_ts_r_new_id = rnew.movgest_ts_r_id
                             and avold.avav_id=rold.avav_id
                             and avold.avav_tipo_id = davold.avav_tipo_id
                             and davold.avav_tipo_code like '%FPV%'
                        )
                        group by t_bil_elem.elem_id
              )    
              ) as x
                group by x.elem_id ),
impegni_annisucc_f as(
      -- Spese impegnate nell'esercizio N con imputazione all'esercizio N+1 e 
      -- coperte dal fondo pluriennale vincolato
      -- impegni anno + 1 con atto nell'anno legati ad accertamenti 
      -- di competenza oppure ad avanzo
select x.elem_id,
	sum(x.spese_da_impeg_anni_succ_f) as spese_da_impeg_anni_succ_f   
from (
               (
              select t_bil_elem.elem_id,
              	sum(COALESCE(r_movgest_ts.movgest_ts_importo,0)) spese_da_impeg_anni_succ_f              
                        from siac_t_movgest t_movgest,  
                        siac_t_movgest_ts t_movgest_ts, 
                        siac_t_movgest_ts_det t_movgest_ts_det,
                        siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_movgest_bil_elem,
                        siac_r_movgest_ts_stato r_movgest_ts_stato, 
                        siac_d_movgest_stato d_movgest_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class t_class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_r_movgest_ts_atto_amm r_movgest_ts_atto_amm,
                        siac_t_atto_amm t_atto_amm, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, siac_t_movgest_ts acc_ts,
                        siac_t_movgest acc,
                        siac_r_movgest_ts_stato rstacc,
                        siac_d_movgest_stato dstacc
                where 
                        t_movgest.movgest_id = t_movgest_ts.movgest_id  
                        and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
                        and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
                        and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = t_class.classif_id
                        and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id
                        and r_movgest_ts_atto_amm.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_atto_amm.attoamm_id = t_atto_amm.attoamm_id
                        and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
                        and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id 
                        and r_movgest_ts.movgest_ts_a_id = acc_ts.movgest_ts_id
                        and acc_ts.movgest_id = acc.movgest_id
                        and rstacc.movgest_ts_id=acc_ts.movgest_ts_id
                        and rstacc.movgest_stato_id=dstacc.movgest_stato_id
                        and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and t_movgest.bil_id =id_bil
                        and t_movgest.ente_proprietario_id= p_ente_prop_id      
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and t_movgest.movgest_anno > annoBilInt + 2
                        and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_movgest_stato.movgest_stato_code in ('D', 'N')
                        and d_mov_tipo.movgest_tipo_code='I' 
                        and dstacc.movgest_stato_code in ('D', 'N')   
                        and acc.movgest_anno = annoBilInt  
                        and t_movgest_ts.movgest_ts_id_padre is NULL                            
                        and r_movgest_bil_elem.data_cancellazione is null
                        and r_movgest_bil_elem.validita_fine is NULL          
                        and r_movgest_ts_stato.data_cancellazione is null
                        and r_movgest_ts_stato.validita_fine is null
                        and t_movgest_ts_det.data_cancellazione is null
                        and t_movgest_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null
                        and r_movgest_ts_atto_amm.data_cancellazione is null
                        and r_movgest_ts_atto_amm.validita_fine is null                        
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null                         
                        and acc_ts.movgest_ts_id_padre is null                        
                        and acc.validita_fine is null
                        and acc.data_cancellazione is null
                        and acc_ts.validita_fine is null
                        and acc_ts.data_cancellazione is null                                                
                        and rstacc.validita_fine is null
                        and rstacc.data_cancellazione is null   
                        and t_movgest.data_cancellazione is null 
                        and t_movgest.validita_fine is null  
                        and t_bil_elem.data_cancellazione is null 
                        and t_bil_elem.validita_fine is null  
                        and t_class.data_cancellazione is null 
                        and t_class.validita_fine is null                                                                                                           
              	group by t_bil_elem.elem_id)
              union(
              select t_bil_elem.elem_id,
              		sum(COALESCE(r_movgest_ts.movgest_ts_importo,0)) spese_da_impeg_anni_succ_f
                from siac_t_movgest t_movgest,  
                        siac_t_movgest_ts t_movgest_ts, 
                        siac_t_movgest_ts_det t_movgest_ts_det,
                        siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_movgest_bil_elem,
                        siac_r_movgest_ts_stato r_movgest_ts_stato, 
                        siac_d_movgest_stato d_movgest_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class t_class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_r_movgest_ts_atto_amm r_movgest_ts_atto_amm,
                        siac_t_atto_amm t_atto_amm, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, 
                        siac_t_avanzovincolo t_avanzovincolo, 
                        siac_d_avanzovincolo_tipo d_avanzovincolo_tipo 
                      where 
                        t_movgest.movgest_id = t_movgest_ts.movgest_id  
                        and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
                        and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
                        and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = t_class.classif_id
                        and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id
                        and r_movgest_ts_atto_amm.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_atto_amm.attoamm_id = t_atto_amm.attoamm_id
                        and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
                        and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
                        and t_avanzovincolo.avav_tipo_id=d_avanzovincolo_tipo.avav_tipo_id
                        and r_movgest_ts.avav_id=t_avanzovincolo.avav_id
                        and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and t_movgest.bil_id =id_bil
                        and t_movgest.ente_proprietario_id = p_ente_prop_id       
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and t_movgest.movgest_anno > annoBilInt + 2
                        and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_movgest_stato.movgest_stato_code in ('D', 'N')
                        and d_mov_tipo.movgest_tipo_code='I' 
                        and d_avanzovincolo_tipo.avav_tipo_code = 'AAM'
                        and t_movgest_ts.movgest_ts_id_padre is NULL                             
                        and r_movgest_bil_elem.data_cancellazione is null
                        and r_movgest_bil_elem.validita_fine is NULL          
                        and r_movgest_ts_stato.data_cancellazione is null
                        and r_movgest_ts_stato.validita_fine is null
                        and t_movgest_ts_det.data_cancellazione is null
                        and t_movgest_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null
                        and r_movgest_ts_atto_amm.data_cancellazione is null
                        and r_movgest_ts_atto_amm.validita_fine is null                                                                                                       
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null 
                        and t_movgest.data_cancellazione is null
                        and t_movgest.validita_fine is null                        
                   group by t_bil_elem.elem_id
              )--- Impegni da riaccertamento - reimputazione nel bilancio successivo 
              union(
              select t_bil_elem.elem_id,
              		sum(COALESCE(r_movgest_ts.movgest_ts_importo,0)) spese_da_impeg_anni_succ_f
                        from siac_t_movgest t_movgest,  
                        siac_t_movgest_ts t_movgest_ts, 
                        siac_t_movgest_ts_det t_movgest_ts_det,
                        siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_movgest_bil_elem,
                        siac_r_movgest_ts_stato r_movgest_ts_stato, 
                        siac_d_movgest_stato d_movgest_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class t_class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, 
                        siac_t_avanzovincolo t_avanzovincolo, 
                        siac_d_avanzovincolo_tipo d_avanzovincolo_tipo 
                      where 
                        t_movgest.movgest_id = t_movgest_ts.movgest_id  
                        and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
                        and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
                        and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = t_class.classif_id
                        and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id                        
                        and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
                        and r_movgest_ts.avav_id=t_avanzovincolo.avav_id     
                        and t_avanzovincolo.avav_tipo_id=d_avanzovincolo_tipo.avav_tipo_id 
                        and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
                        and t_movgest.bil_id = id_bil
                        and t_movgest.ente_proprietario_id= p_ente_prop_id     
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and t_movgest.movgest_anno > annoBilInt + 2
                        and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_movgest_stato.movgest_stato_code <> 'A'
                        and d_mov_tipo.movgest_tipo_code='I'
                        and d_avanzovincolo_tipo.avav_tipo_code like'FPV%' 
                        and t_movgest_ts.movgest_ts_id_padre is NULL                             
                        and r_movgest_bil_elem.data_cancellazione is null
                        and r_movgest_bil_elem.validita_fine is NULL          
                        and r_movgest_ts_stato.data_cancellazione is null
                        and r_movgest_ts_stato.validita_fine is null
                        and t_movgest_ts_det.data_cancellazione is null
                        and t_movgest_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null                                                                         
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null 
                        and t_movgest.data_cancellazione is null
                        and t_movgest.validita_fine is null 
                        and exists (
                        	select 1
                            from fase_bil_t_elaborazione fase, fase_bil_d_elaborazione_tipo tipo,
                                 fase_bil_t_reimputazione fasereimp, siac_t_bil bilprec, siac_t_periodo pprec
                            where tipo.ente_proprietario_id= t_movgest.ente_proprietario_id                             
                            and   fase.fase_bil_elab_tipo_id=tipo.fase_bil_elab_tipo_id                            
                            and   fasereimp.fasebilelabid=fase.fase_bil_elab_id
                            and   fasereimp.movgest_tipo_id=d_mov_tipo.movgest_tipo_id
                            and   fasereimp.bil_id=bilprec.bil_id
                            and   bilprec.periodo_id = pprec.periodo_id
                            and   fasereimp.movgestnew_id = t_movgest.movgest_id                            
                            and   fasereimp.fl_elab is not null and fasereimp.fl_elab='S'
                            and   tipo.fase_bil_elab_tipo_code='APE_GEST_REIMP'
                            and   fase.fase_bil_elab_esito='OK'
                            and   pprec.anno=p_anno                            
                            and   fase.data_cancellazione is null
                            and   fase.validita_fine is null
                            and   tipo.data_cancellazione is null
                            and   tipo.validita_fine is null
                        )
                        and not exists 
                        (
                           select 
                             1
                             from fase_bil_t_reimputazione_vincoli vreimp, siac_r_movgest_ts rold,
                             siac_r_movgest_ts rnew, siac_t_avanzovincolo avold, siac_d_avanzovincolo_tipo davold
                             where 
                             vreimp.movgest_ts_r_new_id =  r_movgest_ts.movgest_ts_r_id 
                             and vreimp.movgest_ts_r_id=rold.movgest_ts_r_id
                             and vreimp.movgest_ts_r_new_id = rnew.movgest_ts_r_id
                             and avold.avav_id=rold.avav_id
                             and avold.avav_tipo_id = davold.avav_tipo_id
                             and davold.avav_tipo_code like '%FPV%'
                        )
                        group by t_bil_elem.elem_id
              )    
              ) as x
                group by x.elem_id ),
/* Per la gestione degli importi del cronoprogramma, come da indicazioni di Troiano, 
		occorre:
	- Prendere i dati dei progetti relativi all'ultimo cronoprogrogramma (data_creazione)
      con flag "usato_per_fpv" = true.
    - Se non esiste prendere i dati dell'ultimo cronoprogramma in bozza cioe' con
      "usato_per_fpv" = false i cui progetti non  abbiano impegni collegati.

*/                
 cronoprogrammi_fpv as (select cronop.* from 
 		(select a.cronop_id, a.cronop_code, d.cronop_elem_code,
			d.cronop_elem_code2, d.cronop_elem_code3,
    		COALESCE(sum(e.cronop_elem_det_importo),0)::numeric importo_crono			
          from siac_t_programma pr, siac_t_cronop a, 
          siac_t_bil b, siac_t_periodo c,
          siac_t_cronop_elem d,          	
          siac_d_bil_elem_tipo dt,
          siac_t_cronop_elem_det e, siac_t_periodo f,
          siac_r_cronop_elem_class rcl2, siac_d_class_tipo clt2, siac_t_class cl2,
          siac_r_cronop_stato stc , siac_d_cronop_stato stct,
          siac_r_programma_stato stpr, siac_d_programma_stato stprt
          where  pr.programma_id=a.programma_id
          and a.bil_id = b.bil_id
          and b.periodo_id=c.periodo_id
          and d.cronop_id=a.cronop_id
          and d.cronop_elem_id=e.cronop_elem_id
          and dt.elem_tipo_id=d.elem_tipo_id
          and e.periodo_id = f.periodo_id
          and rcl2.cronop_elem_id = d.cronop_elem_id
          and rcl2.classif_id=cl2.classif_id
          and cl2.classif_tipo_id=clt2.classif_tipo_id
          and stc.cronop_id=a.cronop_id
          and stc.cronop_stato_id=stct.cronop_stato_id
          and stpr.programma_id=pr.programma_id
          and stpr.programma_stato_id=stprt.programma_stato_id
          and pr.ente_proprietario_id=p_ente_prop_id
          and c.anno = p_anno -- anno bilancio
          and a.usato_per_fpv::boolean = true          
          and clt2.classif_tipo_code='PROGRAMMA'        
          and stct.cronop_stato_code='VA'          
          and stprt.programma_stato_code='VA'
          and stpr.data_cancellazione is null
          and stc.data_cancellazione is null
          and a.data_cancellazione is null
          and pr.data_cancellazione is null
          and b.data_cancellazione is null
          and c.data_cancellazione is null
          and d.data_cancellazione is null
          and e.data_cancellazione is null
          and rcl2.data_cancellazione is null
          group by a.cronop_id, a.cronop_code, 
          d.cronop_elem_code,
	d.cronop_elem_code2,d.cronop_elem_code3) cronop,
 		(select t_cronop.cronop_id, 
    max(t_cronop.data_creazione) max_data_creazione
    from siac_t_cronop t_cronop, 
    	siac_t_bil t_bil, siac_t_periodo t_periodo
    where t_cronop.bil_id=t_bil.bil_id
    	and t_bil.periodo_id=t_periodo.periodo_id
        and t_cronop.ente_proprietario_id=p_ente_prop_id
        and t_periodo.anno=p_anno
        and t_cronop.usato_per_fpv::boolean=true
        and t_cronop.data_cancellazione IS NULL
        and t_bil.data_cancellazione IS NULL
        and t_periodo.data_cancellazione IS NULL
    group by t_cronop.cronop_id
   order by max_data_creazione DESC
   limit 1) id_cronop_last_versione 
where id_cronop_last_versione.cronop_id =  cronop.cronop_id ),
cronoprogrammi_bozza as(
	select cronop_bozza.* from 
    (select a.cronop_id, a.cronop_code, d.cronop_elem_code,
			d.cronop_elem_code2, d.cronop_elem_code3,
    		COALESCE(sum(e.cronop_elem_det_importo),0)::numeric importo_crono			
          from siac_t_programma pr, siac_t_cronop a, 
          siac_t_bil b, siac_t_periodo c,
          siac_t_cronop_elem d,          	
          siac_d_bil_elem_tipo dt,
          siac_t_cronop_elem_det e, siac_t_periodo f,
          siac_r_cronop_elem_class rcl2, siac_d_class_tipo clt2, siac_t_class cl2,
          siac_r_cronop_stato stc , siac_d_cronop_stato stct,
          siac_r_programma_stato stpr, siac_d_programma_stato stprt
          where  pr.programma_id=a.programma_id
          and a.bil_id = b.bil_id
          and b.periodo_id=c.periodo_id
          and d.cronop_id=a.cronop_id
          and d.cronop_elem_id=e.cronop_elem_id
          and dt.elem_tipo_id=d.elem_tipo_id
          and e.periodo_id = f.periodo_id
          and rcl2.cronop_elem_id = d.cronop_elem_id
          and rcl2.classif_id=cl2.classif_id
          and cl2.classif_tipo_id=clt2.classif_tipo_id
          and stc.cronop_id=a.cronop_id
          and stc.cronop_stato_id=stct.cronop_stato_id
          and stpr.programma_id=pr.programma_id
          and stpr.programma_stato_id=stprt.programma_stato_id
          and pr.ente_proprietario_id=p_ente_prop_id
          and c.anno = p_anno -- anno bilancio
          and a.usato_per_fpv::boolean = false          
          and clt2.classif_tipo_code='PROGRAMMA'        
          and stct.cronop_stato_code='VA'          
          and stprt.programma_stato_code='VA'
          and pr.programma_id not in (
        	select r_movgest_ts_programma.programma_id
            	from siac_r_movgest_ts_programma r_movgest_ts_programma
            	where r_movgest_ts_programma.ente_proprietario_id=p_ente_prop_id
                	and r_movgest_ts_programma.data_cancellazione IS NULL
                    and r_movgest_ts_programma.validita_fine IS NULL)
          and stpr.data_cancellazione is null
          and stc.data_cancellazione is null
          and a.data_cancellazione is null
          and pr.data_cancellazione is null
          and b.data_cancellazione is null
          and c.data_cancellazione is null
          and d.data_cancellazione is null
          and e.data_cancellazione is null
          and rcl2.data_cancellazione is null
          group by a.cronop_id, a.cronop_code, 
          d.cronop_elem_code,
	d.cronop_elem_code2,d.cronop_elem_code3) cronop_bozza,  
    (select t_cronop.cronop_id, 
    max(t_cronop.data_creazione) max_data_creazione
    from siac_t_cronop t_cronop, 
    	siac_t_bil t_bil, siac_t_periodo t_periodo,
        siac_t_programma t_programma
    where t_cronop.bil_id=t_bil.bil_id
    	and t_bil.periodo_id=t_periodo.periodo_id
        and t_programma.programma_id= t_cronop.programma_id
        and t_cronop.ente_proprietario_id=p_ente_prop_id
        and t_periodo.anno=p_anno
        and t_cronop.usato_per_fpv::boolean=false
        and t_cronop.data_cancellazione IS NULL
        and t_bil.data_cancellazione IS NULL
        and t_periodo.data_cancellazione IS NULL
       and t_programma.programma_id not in (
        	select r_movgest_ts_programma.programma_id
            	from siac_r_movgest_ts_programma r_movgest_ts_programma
            	where r_movgest_ts_programma.ente_proprietario_id=p_ente_prop_id
                	and r_movgest_ts_programma.data_cancellazione IS NULL
                    and r_movgest_ts_programma.validita_fine IS NULL)
    group by t_cronop.cronop_id
   order by max_data_creazione DESC
   limit 1) id_cronop_bozza 
where id_cronop_bozza.cronop_id =  cronop_bozza.cronop_id ),
exist_last_versione as (select count(*) last_version
    from siac_t_cronop t_cronop, 
    	siac_t_bil t_bil, siac_t_periodo t_periodo
    where t_cronop.bil_id=t_bil.bil_id
    	and t_bil.periodo_id=t_periodo.periodo_id
        and t_cronop.ente_proprietario_id=p_ente_prop_id
        and t_periodo.anno=p_anno
        and t_cronop.usato_per_fpv::boolean=true
        and t_cronop.data_cancellazione IS NULL
        and t_bil.data_cancellazione IS NULL
        and t_periodo.data_cancellazione IS NULL)               
select 
p_anno::varchar  bil_anno ,
''::varchar  missione_tipo_code ,
strut_bilancio.missione_tipo_desc ,
strut_bilancio.missione_code ,
strut_bilancio.missione_desc ,
''::varchar programma_tipo_code ,
strut_bilancio.programma_tipo_desc ,
strut_bilancio.programma_code ,
strut_bilancio.programma_desc ,
capitoli_fpv.elem_id::integer elem_id_fpv,
capitoli_fpv.elem_code::varchar bil_ele_code_fpv,
capitoli_fpv.elem_desc::varchar bil_ele_desc_fpv,
capitoli_fpv.elem_code2::varchar bil_ele_code2_fpv,
capitoli_fpv.elem_desc2::varchar bil_ele_desc2_fpv,
capitoli_fpv.elem_code3::varchar bil_ele_code3_fpv,
capitoli_std.elem_id::integer elem_id_std,
capitoli_std.elem_code::varchar bil_ele_code_std,
capitoli_std.elem_desc::varchar bil_ele_desc_std,
capitoli_std.elem_code2::varchar bil_ele_code2_std,
capitoli_std.elem_desc2::varchar bil_ele_desc2_std,
capitoli_std.elem_code3::varchar bil_ele_code3_std,
COALESCE(fpv_anno_prec_da_capitoli.importo_fpv_anno_prec,0)::numeric fondo_plur_anno_prec_a,
COALESCE(importi_anni_prec.spese_impe_anni_prec,0)::numeric spese_impe_anni_prec_b,
COALESCE(fpv_anno_prec_da_capitoli.importo_fpv_anno_prec,0) -
	COALESCE(importi_anni_prec.spese_impe_anni_prec,0) -
    COALESCE(riaccert_colonna_x.riacc_colonna_x,0) -
    COALESCE(riaccert_colonna_y.riacc_colonna_y,0)::numeric quota_fond_plur_anni_prec_c,
COALESCE(impegni_anno1_d.spese_da_impeg_anno1_d,0)::numeric spese_da_impeg_anno1_d,
COALESCE(impegni_anno2_e.spese_da_impeg_anno2_e,0)::numeric spese_da_impeg_anno2_e,
COALESCE(impegni_annisucc_f.spese_da_impeg_anni_succ_f,0)::numeric spese_da_impeg_anni_succ_f,
COALESCE(riaccert_colonna_x.riacc_colonna_x,0)::numeric riacc_colonna_x,
COALESCE(riaccert_colonna_y.riacc_colonna_y,0)::numeric riacc_colonna_y,
COALESCE(impegni_anno1_d.spese_da_impeg_anno1_d,0) +
	COALESCE(impegni_anno2_e.spese_da_impeg_anno2_e,0) +
    COALESCE(impegni_annisucc_f.spese_da_impeg_anni_succ_f,0)::numeric fondo_plur_anno_g,
COALESCE(fpv_stanziamento_anno.importo_fpv_stanz_anno,0)::numeric fpv_stanziato_anno,
	--se NON esiste una versione con "usato_per_fpv" = true prendo i dati di
    --cronoprogramma in BOZZA, altrimenti quelli della versione approvata.
CASE WHEN exist_last_versione.last_version = 0
	THEN COALESCE(cronoprogrammi_bozza.importo_crono,0)
    ELSE COALESCE(cronoprogrammi_fpv.importo_crono,0) end ::numeric imp_cronoprogramma
from strut_bilancio
left JOIN capitoli_fpv on (strut_bilancio.programma_id = capitoli_fpv.programma_id
			AND strut_bilancio.macroag_id = capitoli_fpv.macroaggregato_id)
left join capitoli_std
	on capitoli_fpv.elem_id_std = capitoli_std.elem_id
left join fpv_anno_prec_da_capitoli
	on (capitoli_fpv.elem_code=fpv_anno_prec_da_capitoli.elem_code
    	AND capitoli_fpv.elem_code2=fpv_anno_prec_da_capitoli.elem_code2
        AND capitoli_fpv.elem_code3=fpv_anno_prec_da_capitoli.elem_code3) 
        --27/05/2019: SIAC-6849.
        -- gli importi delle colonne a, b, x, y, c, d, e, f
        -- dipendono dai capitoli STD e non da quelli FPV.  
left join importi_anni_prec 
	on capitoli_std.elem_id = importi_anni_prec.elem_id 
left join riaccert_colonna_x
	on capitoli_std.elem_id = riaccert_colonna_x. elem_id
left join riaccert_colonna_y
	on capitoli_std.elem_id = riaccert_colonna_y.elem_id
left join impegni_anno1_d
	on capitoli_fpv.elem_id = impegni_anno1_d.elem_id
left join impegni_anno2_e
	on capitoli_fpv.elem_id = impegni_anno2_e.elem_id
left join impegni_annisucc_f
	on capitoli_fpv.elem_id = impegni_annisucc_f.elem_id 
    	--lo stanziato FPV e' legato ai capitoli FPV.
left join fpv_stanziamento_anno
	on capitoli_fpv.elem_id = fpv_stanziamento_anno.elem_id
left join cronoprogrammi_fpv
    on (capitoli_fpv.elem_code=cronoprogrammi_fpv.cronop_elem_code
    	AND capitoli_fpv.elem_code2=cronoprogrammi_fpv.cronop_elem_code2
        AND capitoli_fpv.elem_code3=cronoprogrammi_fpv.cronop_elem_code3)
left join cronoprogrammi_bozza
    on (capitoli_fpv.elem_code=cronoprogrammi_bozza.cronop_elem_code
    	AND capitoli_fpv.elem_code2=cronoprogrammi_bozza.cronop_elem_code2
        AND capitoli_fpv.elem_code3=cronoprogrammi_bozza.cronop_elem_code3),
exist_last_versione        ;            
          
raise notice 'fine OK';
    exception
    when no_data_found THEN
    raise notice 'Nessun dato trovato per i capitoli FPV.';
    return;
    when others  THEN
  	RTN_MESSAGGIO:='struttura bilancio altro errore';
 	RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
    return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

CREATE OR REPLACE FUNCTION siac."BILR222_Allegato_B_Fondo_Pluri_vinc_Rend_capitolo_stanz_agg" (
  p_ente_prop_id integer,
  p_anno varchar
)
RETURNS TABLE (
  bil_anno varchar,
  missione_tipo_code varchar,
  missione_tipo_desc varchar,
  missione_code varchar,
  missione_desc varchar,
  programma_tipo_code varchar,
  programma_tipo_desc varchar,
  programma_code varchar,
  programma_desc varchar,
  elem_id_fpv integer,
  bil_ele_code_fpv varchar,
  bil_ele_desc_fpv varchar,
  bil_ele_code2_fpv varchar,
  bil_ele_desc2_fpv varchar,
  elem_id_std integer,
  bil_ele_code_std varchar,
  bil_ele_desc_std varchar,
  bil_ele_code2_std varchar,
  bil_ele_desc2_std varchar,
  bil_ele_code3_std varchar,
  fondo_plur_anno_prec_a numeric,
  spese_impe_anni_prec_b numeric,
  quota_fond_plur_anni_prec_c numeric,
  spese_da_impeg_anno1_d numeric,
  spese_da_impeg_anno2_e numeric,
  spese_da_impeg_anni_succ_f numeric,
  riacc_colonna_x numeric,
  riacc_colonna_y numeric,
  fondo_plur_anno_g numeric,
  fpv_stanziato_anno numeric,
  imp_cronoprogramma numeric
) AS
$body$
DECLARE


classifBilRec record;
var_fondo_plur_anno_prec_a numeric;
var_spese_impe_anni_prec_b numeric;

annoCapImp varchar;
annoCapImp1 varchar;
annoCapImp2 varchar;
tipoImpComp varchar;
tipoImpCassa varchar;
tipoImpRes varchar;
elemTipoCode varchar;
DEF_NULL	constant varchar:=''; 
RTN_MESSAGGIO varchar(1000):=DEF_NULL;
user_table	varchar;
annoPrec varchar;
annoProspInt integer;
annoBilInt integer;
conflagfpv boolean ;
a_dacapfpv boolean ;
h_dacapfpv boolean ;
flagretrocomp boolean ;

h_count integer :=0;
v_fam_missioneprogramma varchar :='00001';
v_fam_titolomacroaggregato varchar := '00002';
id_bil INTEGER;

BEGIN

/*
	Funzione identica alla "BILR221_Allegato_B_Fondo_Pluriennale_vincolato_Rend_capitolo"
    fatta eccezione per il calcolo del campo "fondo_plur_anno_prec_a" che in questa 
    funzione tiene conto anche delle varizioni avvenute durante l'anno. 
    
*/
annoCapImp:= p_anno; 
annoCapImp1:= ((p_anno::INTEGER)+1)::VARCHAR;   
annoCapImp2:= ((p_anno::INTEGER)+2)::VARCHAR; 
annoPrec:= ((p_anno::INTEGER)-1)::VARCHAR; 

TipoImpComp='STA';  -- competenza
TipoImpCassa='SCA'; -- cassa
TipoImpRes='STR';   -- residui
elemTipoCode:='CAP-UG'; -- tipo capitolo gestione


annoBilInt=p_anno::INTEGER;

bil_anno='';
missione_tipo_code='';
missione_tipo_desc='';
missione_code='';
missione_desc='';
programma_tipo_code='';
programma_tipo_desc='';
programma_code='';
programma_desc='';

var_fondo_plur_anno_prec_a=0;
var_spese_impe_anni_prec_b=0;
quota_fond_plur_anni_prec_c=0;
spese_da_impeg_anno1_d=0;
spese_da_impeg_anno2_e=0;
spese_da_impeg_anni_succ_f=0;
fondo_plur_anno_g=0;


select fnc_siac_random_user()
into	user_table;

select t_bil.bil_id
	into id_bil
from siac_t_bil t_bil,
	siac_t_periodo t_periodo
where t_bil.periodo_id=t_periodo.periodo_id
	and t_bil.ente_proprietario_id = p_ente_prop_id
    and t_periodo.anno= p_anno    
    and t_bil.data_cancellazione IS NULL
    and t_periodo.data_cancellazione IS NULL;
IF NOT FOUND THEN
	raise notice 'Codice del bilancio non trovato';
    return;
END IF;


        
return query  
	with strut_bilancio as(
     		select  *
            from "fnc_bilr_struttura_cap_bilancio_spese"(p_ente_prop_id, p_anno,'') a
            where a.missione_code::integer <= 19),
    capitoli_fpv as(
    	select 	programma.classif_id programma_id,
			macroaggr.classif_id macroaggregato_id,
        	p_anno anno_bilancio, r_bil_elem_fpv.elem_id elem_id_std,
       		capitolo.*
		from 
     		siac_d_class_tipo programma_tipo,
     		siac_t_class programma,
     		siac_d_class_tipo macroaggr_tipo,
     		siac_t_class macroaggr,
	 		siac_t_bil_elem capitolo
	/* 27/05/2019: SIAC-6849.
    	Aggiunta la gestione della tabella siac_r_bil_elem_fpv dove e' registrata
        la relazione tra i capitoli FPV e quelli STD.
        Gli importi estratti sono relativi ai capitoli standard perche' gli impegni
        sono associati solo a questo tipo di capitolo.
        Pero' il report deve presentare l'elenco dei capitoli FPV, quindi
        occorre estrarre il capitolo FPV a cui e' relazionato ogni record. */             
            	left join siac_r_bil_elem_fpv r_bil_elem_fpv
                	on (r_bil_elem_fpv.elem_fpv_id = capitolo.elem_id 
                    	and r_bil_elem_fpv.data_cancellazione IS NULL
                        and r_bil_elem_fpv.validita_fine IS NULL),
	 		siac_d_bil_elem_tipo tipo_elemento,
     		siac_r_bil_elem_class r_capitolo_programma,
     		siac_r_bil_elem_class r_capitolo_macroaggr,
     		siac_d_bil_elem_stato stato_capitolo, 
     		siac_r_bil_elem_stato r_capitolo_stato,
	 		siac_d_bil_elem_categoria cat_del_capitolo,
     		siac_r_bil_elem_categoria r_cat_capitolo
		where capitolo.elem_tipo_id=tipo_elemento.elem_tipo_id 	and
            programma.classif_tipo_id	=programma_tipo.classif_tipo_id and
            programma.classif_id	=r_capitolo_programma.classif_id and
            macroaggr.classif_tipo_id	=macroaggr_tipo.classif_tipo_id and
    		macroaggr.classif_id	=r_capitolo_macroaggr.classif_id and			     		 
    		capitolo.elem_id=r_capitolo_programma.elem_id	and
    		capitolo.elem_id=r_capitolo_macroaggr.elem_id	and
    		capitolo.elem_id		=	r_capitolo_stato.elem_id and
			r_capitolo_stato.elem_stato_id	=	stato_capitolo.elem_stato_id and
			capitolo.elem_id				=	r_cat_capitolo.elem_id	and
			r_cat_capitolo.elem_cat_id	=cat_del_capitolo.elem_cat_id and
            capitolo.bil_id 				= id_bil and
            capitolo.ente_proprietario_id	=	p_ente_prop_id	and
    		tipo_elemento.elem_tipo_code = elemTipoCode		and	
			programma_tipo.classif_tipo_code	='PROGRAMMA'  and		        
    		macroaggr_tipo.classif_tipo_code	='MACROAGGREGATO' and   
			stato_capitolo.elem_stato_code	=	'VA'	and
    		--cat_del_capitolo.elem_cat_code	in ('STD','FPV','FSC','FPVC') and 
            cat_del_capitolo.elem_cat_code	in ('FPV','FPVC') and 
			programma_tipo.data_cancellazione			is null 	and
    		programma.data_cancellazione 				is null 	and
    		macroaggr_tipo.data_cancellazione	 		is null 	and
    		macroaggr.data_cancellazione 				is null 	and
    		tipo_elemento.data_cancellazione 			is null 	and
    		r_capitolo_programma.data_cancellazione 	is null 	and
    		r_capitolo_macroaggr.data_cancellazione 	is null 	and    		
    		stato_capitolo.data_cancellazione 			is null 	and 
    		r_capitolo_stato.data_cancellazione 		is null 	and
			cat_del_capitolo.data_cancellazione 		is null 	and
    		r_cat_capitolo.data_cancellazione 			is null 	and
			capitolo.data_cancellazione 				is null),  
capitoli_std as (
    	select 	programma.classif_id programma_id,
			macroaggr.classif_id macroaggregato_id,
        	p_anno anno_bilancio,
       		capitolo.*
		from 
     		siac_d_class_tipo programma_tipo,
     		siac_t_class programma,
     		siac_d_class_tipo macroaggr_tipo,
     		siac_t_class macroaggr,
	 		siac_t_bil_elem capitolo,
	 		siac_d_bil_elem_tipo tipo_elemento,
     		siac_r_bil_elem_class r_capitolo_programma,
     		siac_r_bil_elem_class r_capitolo_macroaggr,
     		siac_d_bil_elem_stato stato_capitolo, 
     		siac_r_bil_elem_stato r_capitolo_stato,
	 		siac_d_bil_elem_categoria cat_del_capitolo,
     		siac_r_bil_elem_categoria r_cat_capitolo
		where capitolo.elem_tipo_id=tipo_elemento.elem_tipo_id 	and
            programma.classif_tipo_id	=programma_tipo.classif_tipo_id and
            programma.classif_id	=r_capitolo_programma.classif_id and
            macroaggr.classif_tipo_id	=macroaggr_tipo.classif_tipo_id and
    		macroaggr.classif_id	=r_capitolo_macroaggr.classif_id and			     		 
    		capitolo.elem_id=r_capitolo_programma.elem_id	and
    		capitolo.elem_id=r_capitolo_macroaggr.elem_id	and
    		capitolo.elem_id		=	r_capitolo_stato.elem_id and
			r_capitolo_stato.elem_stato_id	=	stato_capitolo.elem_stato_id and
			capitolo.elem_id				=	r_cat_capitolo.elem_id	and
			r_cat_capitolo.elem_cat_id	=cat_del_capitolo.elem_cat_id and
            capitolo.bil_id 				= id_bil and
            capitolo.ente_proprietario_id	=	p_ente_prop_id	and
    		tipo_elemento.elem_tipo_code = elemTipoCode		and	
			programma_tipo.classif_tipo_code	='PROGRAMMA'  and		        
    		macroaggr_tipo.classif_tipo_code	='MACROAGGREGATO' and   
			stato_capitolo.elem_stato_code	=	'VA'	and
            cat_del_capitolo.elem_cat_code	in ('STD','FSC') and 
			programma_tipo.data_cancellazione			is null 	and
    		programma.data_cancellazione 				is null 	and
    		macroaggr_tipo.data_cancellazione	 		is null 	and
    		macroaggr.data_cancellazione 				is null 	and
    		tipo_elemento.data_cancellazione 			is null 	and
    		r_capitolo_programma.data_cancellazione 	is null 	and
    		r_capitolo_macroaggr.data_cancellazione 	is null 	and    		
    		stato_capitolo.data_cancellazione 			is null 	and 
    		r_capitolo_stato.data_cancellazione 		is null 	and
			cat_del_capitolo.data_cancellazione 		is null 	and
    		r_cat_capitolo.data_cancellazione 			is null 	and
			capitolo.data_cancellazione 				is null),            
fpv_stanziamento_anno as (               
select 	 capitolo.elem_id,
	sum(capitolo_importi.elem_det_importo) importo_fpv_stanz_anno
from 		siac_t_bil_elem_det 		capitolo_importi,
         	siac_d_bil_elem_det_tipo 	capitolo_imp_tipo,
         	siac_t_periodo 				capitolo_imp_periodo,
            siac_t_bil_elem 			capitolo,
            siac_t_bil					t_bil,
            siac_t_periodo				t_periodo_bil,
            siac_d_bil_elem_tipo 		tipo_elemento,
	 		siac_d_bil_elem_stato 		stato_capitolo, 
     		siac_r_bil_elem_stato 		r_capitolo_stato,
	 		siac_d_bil_elem_categoria 	cat_del_capitolo,
     		siac_r_bil_elem_categoria 	r_cat_capitolo,
            siac_r_bil_elem_class r_bil_elem_class,
            siac_t_class t_class, 
            siac_d_class_tipo d_class_tipo
where capitolo.elem_id = capitolo_importi.elem_id 
	and	capitolo.bil_id = t_bil.bil_id
	and t_periodo_bil.periodo_id =t_bil.periodo_id	
	and	capitolo.elem_tipo_id = tipo_elemento.elem_tipo_id
	and	capitolo_importi.elem_det_tipo_id = capitolo_imp_tipo.elem_det_tipo_id 		
	and	capitolo_imp_periodo.periodo_id = capitolo_importi.periodo_id 
	and	capitolo.elem_id = r_capitolo_stato.elem_id			
	and	r_capitolo_stato.elem_stato_id = stato_capitolo.elem_stato_id
	and	capitolo.elem_id = r_cat_capitolo.elem_id				
	and	r_cat_capitolo.elem_cat_id = cat_del_capitolo.elem_cat_id	
    and d_class_tipo.classif_tipo_id=t_class.classif_tipo_id
    and capitolo.elem_id = r_bil_elem_class.elem_id
    and r_bil_elem_class.classif_id = t_class.classif_id
	and capitolo_importi.ente_proprietario_id = p_ente_prop_id 					
	and	tipo_elemento.elem_tipo_code = elemTipoCode 
	and	t_periodo_bil.anno = p_anno	
	and	capitolo_imp_periodo.anno = p_anno	
	and	stato_capitolo.elem_stato_code = 'VA'								
	and	cat_del_capitolo.elem_cat_code in ('FPV','FPVC')
	and capitolo_imp_tipo.elem_det_tipo_code = 'STA'	
    and d_class_tipo.classif_tipo_code='PROGRAMMA'			
	and	capitolo_importi.data_cancellazione 		is null
	and	capitolo_imp_tipo.data_cancellazione 		is null
	and	capitolo_imp_periodo.data_cancellazione 	is null
	and	capitolo.data_cancellazione 				is null
	and	tipo_elemento.data_cancellazione 			is null
	and	stato_capitolo.data_cancellazione 			is null 
	and	r_capitolo_stato.data_cancellazione 		is null
	and cat_del_capitolo.data_cancellazione 		is null
	and	r_cat_capitolo.data_cancellazione 			is null
	and t_bil.data_cancellazione 					is null
	and t_periodo_bil.data_cancellazione 			is null
    and r_bil_elem_class.data_cancellazione 		is null
    and t_class.data_cancellazione 					is null
    and d_class_tipo.data_cancellazione 		is null        
 GROUP BY capitolo.elem_id ),            
fpv_anno_prec_da_capitoli as (               
select 	 capitolo.elem_id,
		capitolo.elem_code, capitolo.elem_code2, capitolo.elem_code3,
	sum(capitolo_importi.elem_det_importo) importo_fpv_anno_prec
from 		siac_t_bil_elem_det 		capitolo_importi,
         	siac_d_bil_elem_det_tipo 	capitolo_imp_tipo,
         	siac_t_periodo 				capitolo_imp_periodo,
            siac_t_bil_elem 			capitolo,
            siac_t_bil					t_bil,
            siac_t_periodo				t_periodo_bil,
            siac_d_bil_elem_tipo 		tipo_elemento,
	 		siac_d_bil_elem_stato 		stato_capitolo, 
     		siac_r_bil_elem_stato 		r_capitolo_stato,
	 		siac_d_bil_elem_categoria 	cat_del_capitolo,
     		siac_r_bil_elem_categoria 	r_cat_capitolo,
            siac_r_bil_elem_class r_bil_elem_class,
            siac_t_class t_class, 
            siac_d_class_tipo d_class_tipo
where capitolo.elem_id = capitolo_importi.elem_id 
	and	capitolo.bil_id = t_bil.bil_id
	and t_periodo_bil.periodo_id =t_bil.periodo_id	
	and	capitolo.elem_tipo_id = tipo_elemento.elem_tipo_id
	and	capitolo_importi.elem_det_tipo_id = capitolo_imp_tipo.elem_det_tipo_id 		
	and	capitolo_imp_periodo.periodo_id = capitolo_importi.periodo_id 
	and	capitolo.elem_id = r_capitolo_stato.elem_id			
	and	r_capitolo_stato.elem_stato_id = stato_capitolo.elem_stato_id
	and	capitolo.elem_id = r_cat_capitolo.elem_id				
	and	r_cat_capitolo.elem_cat_id = cat_del_capitolo.elem_cat_id	
    and d_class_tipo.classif_tipo_id=t_class.classif_tipo_id
    and capitolo.elem_id = r_bil_elem_class.elem_id
    and r_bil_elem_class.classif_id = t_class.classif_id
	and capitolo_importi.ente_proprietario_id = p_ente_prop_id 					
	and	tipo_elemento.elem_tipo_code = elemTipoCode 
	and	t_periodo_bil.anno = annoPrec	--anno bilancio -1	
	and	capitolo_imp_periodo.anno = annoPrec	--anno bilancio -1		  	
	and	stato_capitolo.elem_stato_code = 'VA'								
	and	cat_del_capitolo.elem_cat_code in ('FPV','FPVC')
	and capitolo_imp_tipo.elem_det_tipo_code = 'STA'	
    and d_class_tipo.classif_tipo_code='PROGRAMMA'			
	and	capitolo_importi.data_cancellazione 		is null
	and	capitolo_imp_tipo.data_cancellazione 		is null
	and	capitolo_imp_periodo.data_cancellazione 	is null
	and	capitolo.data_cancellazione 				is null
	and	tipo_elemento.data_cancellazione 			is null
	and	stato_capitolo.data_cancellazione 			is null 
	and	r_capitolo_stato.data_cancellazione 		is null
	and cat_del_capitolo.data_cancellazione 		is null
	and	r_cat_capitolo.data_cancellazione 			is null
	and t_bil.data_cancellazione 					is null
	and t_periodo_bil.data_cancellazione 			is null
    and r_bil_elem_class.data_cancellazione 		is null
    and t_class.data_cancellazione 					is null
    and d_class_tipo.data_cancellazione 		is null        
  GROUP BY capitolo.elem_id, capitolo.elem_code, capitolo.elem_code2, capitolo.elem_code3 ),
fpv_variaz_anno_prec as (
select	dettaglio_variazione.elem_id,
			capitolo.elem_code, capitolo.elem_code2, capitolo.elem_code3,
            sum(dettaglio_variazione.elem_det_importo) importo_var            	      	
    from 	siac_r_variazione_stato		r_variazione_stato,
            siac_t_variazione 			testata_variazione,
            siac_d_variazione_tipo		tipologia_variazione,
            siac_d_variazione_stato 	tipologia_stato_var,
            siac_t_bil_elem_det_var 	dettaglio_variazione,
            siac_t_bil_elem				capitolo,
            siac_d_bil_elem_tipo 		tipo_capitolo,
            siac_d_bil_elem_det_tipo	tipo_elemento,
            siac_t_periodo 				anno_eserc ,
            siac_t_periodo              anno_importo,
            siac_t_bil                  bilancio ,
            siac_d_bil_elem_categoria 	cat_del_capitolo,
            siac_r_bil_elem_categoria 	r_cat_capitolo
  where 	r_variazione_stato.variazione_id =	testata_variazione.variazione_id
    and		testata_variazione.variazione_tipo_id				=	tipologia_variazione.variazione_tipo_id	 
    and		anno_importo.periodo_id 							=	dettaglio_variazione.periodo_id					
    and     anno_eserc.periodo_id                               = bilancio.periodo_id
    and     testata_variazione.bil_id                           = bilancio.bil_id 
    and     capitolo.bil_id                                     = bilancio.bil_id       
    and 	tipologia_stato_var.variazione_stato_tipo_id		=	r_variazione_stato.variazione_stato_tipo_id
    and		r_variazione_stato.variazione_stato_id				=	dettaglio_variazione.variazione_stato_id
    and		dettaglio_variazione.elem_id						=	capitolo.elem_id
    and		capitolo.elem_tipo_id								=	tipo_capitolo.elem_tipo_id
    and		dettaglio_variazione.elem_det_tipo_id				=	tipo_elemento.elem_det_tipo_id  
    and 	r_cat_capitolo.elem_id = capitolo.elem_id
    and 	cat_del_capitolo.elem_cat_id = r_cat_capitolo.elem_cat_id
    and		testata_variazione.ente_proprietario_id				= p_ente_prop_id 
    and		anno_eserc.anno			= 	annoPrec
    and		tipologia_stato_var.variazione_stato_tipo_code not in ('D','A')
    and		tipo_capitolo.elem_tipo_code = 'CAP-UG'
    and	    tipo_elemento.elem_det_tipo_code in ('STA')
    and	    cat_del_capitolo.elem_cat_code in ('FPV','FPVC')
    and   	anno_importo.anno = annoPrec 
    and		r_variazione_stato.data_cancellazione		is null
    and		testata_variazione.data_cancellazione		is null
    and		tipologia_variazione.data_cancellazione		is null
    and		tipologia_stato_var.data_cancellazione		is null
    and 	dettaglio_variazione.data_cancellazione		is null
    and 	capitolo.data_cancellazione					is null
    and		tipo_capitolo.data_cancellazione			is null
    and		tipo_elemento.data_cancellazione			is null  
    and 	r_cat_capitolo.data_cancellazione			is null 
    and 	cat_del_capitolo.data_cancellazione			is null 
    group by 	dettaglio_variazione.elem_id,
    	capitolo.elem_code, capitolo.elem_code2, capitolo.elem_code3),
importi_anni_prec as (
select t_bil_elem.elem_id,
	sum(coalesce( r_movgest_ts.movgest_ts_importo ,0)) spese_impe_anni_prec    	
    from siac_t_movgest t_movgest,  
          siac_t_movgest_ts t_movgest_ts, siac_t_movgest_ts_det t_movgest_ts_det,
          siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, siac_t_bil_elem t_bil_elem, 
		  siac_r_movgest_bil_elem r_movgest_bil_elem,
          siac_r_movgest_ts_stato r_movgest_ts_stato, siac_d_movgest_stato d_movgest_stato,
          siac_r_bil_elem_class r_bil_elem_class,
          siac_t_class t_class, siac_d_class_tipo d_class_tipo, 
           siac_d_movgest_tipo d_mov_tipo,
           siac_r_movgest_ts r_movgest_ts, 
           siac_t_avanzovincolo t_avanzovincolo, 
           siac_d_avanzovincolo_tipo d_avanzovincolo_tipo
    where 
           t_movgest.movgest_id = t_movgest_ts.movgest_id  
          and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
          and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
          and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
          and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
          and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
          and r_bil_elem_class.classif_id = t_class.classif_id
          and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
          and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id
          and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
          and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id 
          and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
          and t_avanzovincolo.avav_tipo_id=d_avanzovincolo_tipo.avav_tipo_id 
		  and t_movgest.bil_id = id_bil
          and t_movgest.ente_proprietario_id= p_ente_prop_id      
          and d_class_tipo.classif_tipo_code='PROGRAMMA'
          and t_movgest.movgest_anno =  annoBilInt
          and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='I'
          and d_movgest_stato.movgest_stato_code in ('D', 'N')
          and d_mov_tipo.movgest_tipo_code='I' --Impegni      
          and d_avanzovincolo_tipo.avav_tipo_code like'FPV%'  
          and t_movgest_ts.movgest_ts_id_padre is NULL              
          and r_movgest_bil_elem.data_cancellazione is null
          and r_movgest_bil_elem.validita_fine is NULL          
          and r_movgest_ts_stato.data_cancellazione is null
          and r_movgest_ts_stato.validita_fine is null
          and d_mov_tipo.data_cancellazione is null
          and d_mov_tipo.validita_fine is null              
          and r_bil_elem_class.data_cancellazione is null
          and r_bil_elem_class.validita_fine is null
          and t_movgest_ts_det.data_cancellazione is null
          and t_movgest_ts_det.validita_fine is null
          and r_movgest_ts.avav_id=t_avanzovincolo.avav_id                                  
          and r_movgest_ts.data_cancellazione is null
          and r_movgest_ts.validita_fine is null
		  and t_bil_elem.data_cancellazione is null
    group by t_bil_elem.elem_id ),
riaccert_colonna_x as (
--Riaccertamento degli impegni di cui alla lettera b) effettuata nel corso dell'eserczio N (cd. economie di impegno)
--riduzioni su impegni di competenza con anno atto minore dell'anno di bilancio 
--e coperti anche solo parzialmente da fondo   
	select t_bil_elem.elem_id,
		sum(COALESCE(t_movgest_ts_det_mod.movgest_ts_det_importo,0)*-1) riacc_colonna_x                
      from siac_r_modifica_stato r_modifica_stato, 
      siac_t_movgest_ts_det_mod t_movgest_ts_det_mod,
      siac_t_movgest_ts t_movgest_ts, siac_d_modifica_stato d_modifica_stato,
      siac_t_movgest t_movgest, siac_d_movgest_tipo d_movgest_tipo, 
      siac_t_modifica t_modifica, siac_d_modifica_tipo d_modifica_tipo,
      siac_t_bil_elem t_bil_elem, siac_r_movgest_bil_elem r_movgest_bil_elem,
      siac_r_bil_elem_class r_bil_elem_class, 
      siac_t_class t_class, siac_d_class_tipo d_class_tipo,
      siac_r_movgest_ts_atto_amm r_movgest_ts_atto_amm,
      siac_t_atto_amm t_atto_amm ,
      siac_r_movgest_ts_stato r_movgest_ts_stato, 
      siac_d_movgest_stato d_movgest_stato    
      where t_movgest_ts_det_mod.mod_stato_r_id=r_modifica_stato.mod_stato_r_id
      and t_movgest_ts_det_mod.movgest_ts_id = t_movgest_ts.movgest_ts_id
      and t_movgest.movgest_tipo_id=d_movgest_tipo.movgest_tipo_id
      and d_modifica_stato.mod_stato_id=r_modifica_stato.mod_stato_id      
      and t_movgest.movgest_id=t_movgest_ts.movgest_id
      and t_modifica.mod_id=r_modifica_stato.mod_id
      and t_modifica.mod_tipo_id=d_modifica_tipo.mod_tipo_id
      and r_movgest_ts_atto_amm.movgest_ts_id=t_movgest_ts.movgest_ts_id
      and r_movgest_ts_atto_amm.attoamm_id = t_atto_amm.attoamm_id
      and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
      and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
      and r_bil_elem_class.elem_id=t_bil_elem.elem_id
      and r_bil_elem_class.classif_id=t_class.classif_id
      and r_movgest_ts_stato.movgest_ts_id = t_movgest_ts.movgest_ts_id
      and r_movgest_ts_stato.movgest_stato_id = d_movgest_stato.movgest_stato_id      
      and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
      and t_movgest.bil_id=id_bil
      and r_modifica_stato.ente_proprietario_id=p_ente_prop_id
      and d_modifica_stato.mod_stato_code='V'
      and d_movgest_tipo.movgest_tipo_code='I'
      and 
      (d_modifica_tipo.mod_tipo_code like  'ECON%'
         or d_modifica_tipo.mod_tipo_desc like  'ROR%')
      and d_modifica_tipo.mod_tipo_code <> 'REIMP'
      and d_class_tipo.classif_tipo_code='PROGRAMMA'
      and d_movgest_stato.movgest_stato_code in ('D', 'N')
      and t_movgest.movgest_anno = annoBilInt 
      and r_movgest_ts_stato.data_cancellazione is NULL
      and r_movgest_ts_stato.validita_fine is null
      and t_movgest_ts.movgest_ts_id_padre is null
      and r_modifica_stato.data_cancellazione is null
      and r_modifica_stato.validita_fine is null
      and t_movgest_ts_det_mod.data_cancellazione is null
      and t_movgest_ts_det_mod.validita_fine is null
      and t_movgest_ts.data_cancellazione is null
      and t_movgest_ts.validita_fine is null
      and d_modifica_stato.data_cancellazione is null
      and d_modifica_stato.validita_fine is null
      and t_movgest.data_cancellazione is null
      and t_movgest.validita_fine is null
      and d_movgest_tipo.data_cancellazione is null
      and d_movgest_tipo.validita_fine is null
      and t_modifica.data_cancellazione is null
      and t_modifica.validita_fine is null
      and d_modifica_tipo.data_cancellazione is null
      and d_modifica_tipo.validita_fine is null
      and t_bil_elem.data_cancellazione is null
      and t_bil_elem.validita_fine is null
      and r_movgest_bil_elem.data_cancellazione is null
      and r_movgest_bil_elem.validita_fine is null
      and r_bil_elem_class.data_cancellazione is null
      and r_bil_elem_class.validita_fine is null
      and t_class.data_cancellazione is null
      and t_class.validita_fine is null
      and d_class_tipo.data_cancellazione is null
      and d_class_tipo.validita_fine is null
      and t_atto_amm.data_cancellazione is null
      and t_atto_amm.validita_fine is null      
      and r_movgest_ts_atto_amm.data_cancellazione is null
      and r_movgest_ts_atto_amm.validita_fine is null
      and d_movgest_stato.data_cancellazione is null
      and d_movgest_stato.validita_fine is null      
      and exists (select 
          		1 
                from siac_r_movgest_ts r_movgest_ts, 
            	siac_t_avanzovincolo t_avanzovincolo, 
                siac_d_avanzovincolo_tipo d_avanzovincolo_tipo
			where r_movgest_ts.avav_id=t_avanzovincolo.avav_id     
                and t_avanzovincolo.avav_tipo_id=d_avanzovincolo_tipo.avav_tipo_id 
                and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                and d_avanzovincolo_tipo.avav_tipo_code like'FPV%'                 
                and r_movgest_ts.data_cancellazione is null
                and r_movgest_ts.validita_fine is null 
               )
      group by t_bil_elem.elem_id)  ,
riaccert_colonna_y as (
--Riaccertamento degli impegni di cui alla lettera b) effettuata nel corso dell'eserczio N (cd. economie di impegno) su impegni pluriennali finanziati dal FPV e imputati agli esercizi successivi  a N
--riduzioni su impegni di competenza con anno atto minore dell'anno di bilancio 
--e coperti anche solo parzialmente da fondo 
select t_bil_elem.elem_id,
	sum(COALESCE(t_movgest_ts_det_mod.movgest_ts_det_importo,0)*-1) riacc_colonna_y
      from siac_r_modifica_stato r_modifica_stato, 
      siac_t_movgest_ts_det_mod t_movgest_ts_det_mod,
      siac_t_movgest_ts t_movgest_ts, 
      siac_d_modifica_stato d_modifica_stato,
      siac_t_movgest t_movgest, siac_d_movgest_tipo d_movgest_tipo,  
      siac_t_modifica t_modifica, siac_d_modifica_tipo d_modifica_tipo,
      siac_t_bil_elem t_bil_elem, siac_r_movgest_bil_elem r_movgest_bil_elem,
      siac_r_bil_elem_class r_bil_elem_class, 
      siac_t_class t_class, siac_d_class_tipo d_class_tipo,
      siac_r_movgest_ts_atto_amm r_movgest_ts_atto_amm,
      siac_t_atto_amm t_atto_amm ,
      siac_r_movgest_ts_stato r_movgest_ts_stato, 
      siac_d_movgest_stato d_movgest_stato    
      where t_movgest_ts_det_mod.mod_stato_r_id=r_modifica_stato.mod_stato_r_id
      and t_movgest_ts_det_mod.movgest_ts_id = t_movgest_ts.movgest_ts_id
      and t_movgest.movgest_tipo_id=d_movgest_tipo.movgest_tipo_id
      and d_modifica_stato.mod_stato_id=r_modifica_stato.mod_stato_id      
      and t_movgest.movgest_id=t_movgest_ts.movgest_id
      and t_modifica.mod_id=r_modifica_stato.mod_id
      and t_modifica.mod_tipo_id=d_modifica_tipo.mod_tipo_id      
      and r_movgest_ts_atto_amm.movgest_ts_id=t_movgest_ts.movgest_ts_id
      and r_movgest_ts_atto_amm.attoamm_id = t_atto_amm.attoamm_id
      and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
      and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
      and r_bil_elem_class.elem_id=t_bil_elem.elem_id
      and r_bil_elem_class.classif_id=t_class.classif_id
      and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id    
      and r_movgest_ts_stato.movgest_ts_id = t_movgest_ts.movgest_ts_id
      and r_movgest_ts_stato.movgest_stato_id = d_movgest_stato.movgest_stato_id  
      and t_movgest.bil_id= id_bil
      and r_modifica_stato.ente_proprietario_id=p_ente_prop_id
      and t_movgest.movgest_anno > annoBilInt 
      and d_modifica_stato.mod_stato_code='V'
      and d_movgest_tipo.movgest_tipo_code='I'
      and 
      (d_modifica_tipo.mod_tipo_code like  'ECON%'
         or d_modifica_tipo.mod_tipo_desc like  'ROR%')
      and d_modifica_tipo.mod_tipo_code <> 'REIMP'
      and d_class_tipo.classif_tipo_code='PROGRAMMA'
      and d_movgest_stato.movgest_stato_code in ('D', 'N')
      and r_movgest_ts_stato.data_cancellazione is NULL
      and r_movgest_ts_stato.validita_fine is null
      and t_movgest_ts.movgest_ts_id_padre is null
      and r_modifica_stato.data_cancellazione is null
      and r_modifica_stato.validita_fine is null
      and t_movgest_ts_det_mod.data_cancellazione is null
      and t_movgest_ts_det_mod.validita_fine is null
      and t_movgest_ts.data_cancellazione is null
      and t_movgest_ts.validita_fine is null
      and d_modifica_stato.data_cancellazione is null
      and d_modifica_stato.validita_fine is null
      and t_movgest.data_cancellazione is null
      and t_movgest.validita_fine is null
      and d_movgest_tipo.data_cancellazione is null
      and d_movgest_tipo.validita_fine is null
      and t_modifica.data_cancellazione is null
      and t_modifica.validita_fine is null
      and d_modifica_tipo.data_cancellazione is null
      and d_modifica_tipo.validita_fine is null
      and t_bil_elem.data_cancellazione is null
      and t_bil_elem.validita_fine is null
      and r_movgest_bil_elem.data_cancellazione is null
      and r_movgest_bil_elem.validita_fine is null
      and r_bil_elem_class.data_cancellazione is null
      and r_bil_elem_class.validita_fine is null
      and t_class.data_cancellazione is null
      and t_class.validita_fine is null
      and d_class_tipo.data_cancellazione is null
      and d_class_tipo.validita_fine is null
      and r_movgest_ts_atto_amm.data_cancellazione is null
      and r_movgest_ts_atto_amm.validita_fine is null
      and t_atto_amm.data_cancellazione is null
      and t_atto_amm.validita_fine is null
      and d_movgest_stato.data_cancellazione is null
      and d_movgest_stato.validita_fine is null
      and exists (select 
          		1 
                from siac_r_movgest_ts r_movgest_ts, 
            	siac_t_avanzovincolo t_avanzovincolo, 
                siac_d_avanzovincolo_tipo d_avanzovincolo_tipo
			where r_movgest_ts.avav_id=t_avanzovincolo.avav_id     
                and t_avanzovincolo.avav_tipo_id=d_avanzovincolo_tipo.avav_tipo_id 
                and d_avanzovincolo_tipo.avav_tipo_code like'FPV%' 
                and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                and r_movgest_ts.data_cancellazione is null
                and r_movgest_ts.validita_fine is null )
      group by t_bil_elem.elem_id) ,
impegni_anno1_d as(
      -- Spese impegnate nell'esercizio N con imputazione all'esercizio N+1 e 
      -- coperte dal fondo pluriennale vincolato
      -- impegni anno + 1 con atto nell'anno legati ad accertamenti 
      -- di competenza oppure ad avanzo
select x.elem_id,
	sum(x.spese_da_impeg_anno1_d) as spese_da_impeg_anno1_d   
from (
               (
              select t_bil_elem.elem_id,
              	sum(COALESCE(r_movgest_ts.movgest_ts_importo,0)) spese_da_impeg_anno1_d              
                        from siac_t_movgest t_movgest,  
                        siac_t_movgest_ts t_movgest_ts, 
                        siac_t_movgest_ts_det t_movgest_ts_det,
                        siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_movgest_bil_elem,
                        siac_r_movgest_ts_stato r_movgest_ts_stato, 
                        siac_d_movgest_stato d_movgest_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class t_class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_r_movgest_ts_atto_amm r_movgest_ts_atto_amm,
                        siac_t_atto_amm t_atto_amm, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, siac_t_movgest_ts acc_ts,
                        siac_t_movgest acc,
                        siac_r_movgest_ts_stato rstacc,
                        siac_d_movgest_stato dstacc
                where 
                        t_movgest.movgest_id = t_movgest_ts.movgest_id  
                        and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
                        and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
                        and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = t_class.classif_id
                        and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id
                        and r_movgest_ts_atto_amm.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_atto_amm.attoamm_id = t_atto_amm.attoamm_id
                        and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
                        and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id 
                        and r_movgest_ts.movgest_ts_a_id = acc_ts.movgest_ts_id
                        and acc_ts.movgest_id = acc.movgest_id
                        and rstacc.movgest_ts_id=acc_ts.movgest_ts_id
                        and rstacc.movgest_stato_id=dstacc.movgest_stato_id
                        and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and t_movgest.bil_id =id_bil
                        and t_movgest.ente_proprietario_id= p_ente_prop_id      
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and t_movgest.movgest_anno = annoBilInt + 1
                        and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_movgest_stato.movgest_stato_code in ('D', 'N')
                        and d_mov_tipo.movgest_tipo_code='I' 
                        and dstacc.movgest_stato_code in ('D', 'N')   
                        and acc.movgest_anno = annoBilInt  
                        and t_movgest_ts.movgest_ts_id_padre is NULL                            
                        and r_movgest_bil_elem.data_cancellazione is null
                        and r_movgest_bil_elem.validita_fine is NULL          
                        and r_movgest_ts_stato.data_cancellazione is null
                        and r_movgest_ts_stato.validita_fine is null
                        and t_movgest_ts_det.data_cancellazione is null
                        and t_movgest_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null
                        and r_movgest_ts_atto_amm.data_cancellazione is null
                        and r_movgest_ts_atto_amm.validita_fine is null                        
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null                         
                        and acc_ts.movgest_ts_id_padre is null                        
                        and acc.validita_fine is null
                        and acc.data_cancellazione is null
                        and acc_ts.validita_fine is null
                        and acc_ts.data_cancellazione is null                                                
                        and rstacc.validita_fine is null
                        and rstacc.data_cancellazione is null   
                        and t_movgest.data_cancellazione is null 
                        and t_movgest.validita_fine is null  
                        and t_bil_elem.data_cancellazione is null 
                        and t_bil_elem.validita_fine is null  
                        and t_class.data_cancellazione is null 
                        and t_class.validita_fine is null                                                                                                           
              	group by t_bil_elem.elem_id)
              union(
              select t_bil_elem.elem_id,
              		sum(COALESCE(r_movgest_ts.movgest_ts_importo,0)) spese_da_impeg_anno1_d
                from siac_t_movgest t_movgest,  
                        siac_t_movgest_ts t_movgest_ts, 
                        siac_t_movgest_ts_det t_movgest_ts_det,
                        siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_movgest_bil_elem,
                        siac_r_movgest_ts_stato r_movgest_ts_stato, 
                        siac_d_movgest_stato d_movgest_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class t_class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_r_movgest_ts_atto_amm r_movgest_ts_atto_amm,
                        siac_t_atto_amm t_atto_amm, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, 
                        siac_t_avanzovincolo t_avanzovincolo, 
                        siac_d_avanzovincolo_tipo d_avanzovincolo_tipo 
                      where 
                        t_movgest.movgest_id = t_movgest_ts.movgest_id  
                        and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
                        and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
                        and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = t_class.classif_id
                        and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id
                        and r_movgest_ts_atto_amm.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_atto_amm.attoamm_id = t_atto_amm.attoamm_id
                        and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
                        and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
                        and t_avanzovincolo.avav_tipo_id=d_avanzovincolo_tipo.avav_tipo_id
                        and r_movgest_ts.avav_id=t_avanzovincolo.avav_id
                        and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and t_movgest.bil_id =id_bil
                        and t_movgest.ente_proprietario_id = p_ente_prop_id       
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and t_movgest.movgest_anno = annoBilInt + 1
                        and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_movgest_stato.movgest_stato_code in ('D', 'N')
                        and d_mov_tipo.movgest_tipo_code='I' 
                        and d_avanzovincolo_tipo.avav_tipo_code = 'AAM'
                        and t_movgest_ts.movgest_ts_id_padre is NULL                             
                        and r_movgest_bil_elem.data_cancellazione is null
                        and r_movgest_bil_elem.validita_fine is NULL          
                        and r_movgest_ts_stato.data_cancellazione is null
                        and r_movgest_ts_stato.validita_fine is null
                        and t_movgest_ts_det.data_cancellazione is null
                        and t_movgest_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null
                        and r_movgest_ts_atto_amm.data_cancellazione is null
                        and r_movgest_ts_atto_amm.validita_fine is null                                                                                                       
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null 
                        and t_movgest.data_cancellazione is null
                        and t_movgest.validita_fine is null                        
                   group by t_bil_elem.elem_id
              )--- Impegni da riaccertamento - reimputazione nel bilancio successivo 
              union(
              select t_bil_elem.elem_id,
              		sum(COALESCE(r_movgest_ts.movgest_ts_importo,0)) spese_da_impeg_anno1_d
                        from siac_t_movgest t_movgest,  
                        siac_t_movgest_ts t_movgest_ts, 
                        siac_t_movgest_ts_det t_movgest_ts_det,
                        siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_movgest_bil_elem,
                        siac_r_movgest_ts_stato r_movgest_ts_stato, 
                        siac_d_movgest_stato d_movgest_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class t_class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, 
                        siac_t_avanzovincolo t_avanzovincolo, 
                        siac_d_avanzovincolo_tipo d_avanzovincolo_tipo 
                      where 
                        t_movgest.movgest_id = t_movgest_ts.movgest_id  
                        and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
                        and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
                        and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = t_class.classif_id
                        and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id                        
                        and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
                        and r_movgest_ts.avav_id=t_avanzovincolo.avav_id     
                        and t_avanzovincolo.avav_tipo_id=d_avanzovincolo_tipo.avav_tipo_id 
                        and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
                        and t_movgest.bil_id = id_bil
                        and t_movgest.ente_proprietario_id= p_ente_prop_id     
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and t_movgest.movgest_anno = annoBilInt + 1
                        and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_movgest_stato.movgest_stato_code <> 'A'
                        and d_mov_tipo.movgest_tipo_code='I'
                        and d_avanzovincolo_tipo.avav_tipo_code like'FPV%' 
                        and t_movgest_ts.movgest_ts_id_padre is NULL                             
                        and r_movgest_bil_elem.data_cancellazione is null
                        and r_movgest_bil_elem.validita_fine is NULL          
                        and r_movgest_ts_stato.data_cancellazione is null
                        and r_movgest_ts_stato.validita_fine is null
                        and t_movgest_ts_det.data_cancellazione is null
                        and t_movgest_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null                                                                         
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null 
                        and t_movgest.data_cancellazione is null
                        and t_movgest.validita_fine is null 
                        and exists (
                        	select 1
                            from fase_bil_t_elaborazione fase, fase_bil_d_elaborazione_tipo tipo,
                                 fase_bil_t_reimputazione fasereimp, siac_t_bil bilprec, siac_t_periodo pprec
                            where tipo.ente_proprietario_id= t_movgest.ente_proprietario_id                             
                            and   fase.fase_bil_elab_tipo_id=tipo.fase_bil_elab_tipo_id                            
                            and   fasereimp.fasebilelabid=fase.fase_bil_elab_id
                            and   fasereimp.movgest_tipo_id=d_mov_tipo.movgest_tipo_id
                            and   fasereimp.bil_id=bilprec.bil_id
                            and   bilprec.periodo_id = pprec.periodo_id
                            and   fasereimp.movgestnew_id = t_movgest.movgest_id                            
                            and   fasereimp.fl_elab is not null and fasereimp.fl_elab='S'
                            and   tipo.fase_bil_elab_tipo_code='APE_GEST_REIMP'
                            and   fase.fase_bil_elab_esito='OK'
                            and   pprec.anno=p_anno                            
                            and   fase.data_cancellazione is null
                            and   fase.validita_fine is null
                            and   tipo.data_cancellazione is null
                            and   tipo.validita_fine is null
                        )
                        and not exists 
                        (
                           select 
                             1
                             from fase_bil_t_reimputazione_vincoli vreimp, siac_r_movgest_ts rold,
                             siac_r_movgest_ts rnew, siac_t_avanzovincolo avold, siac_d_avanzovincolo_tipo davold
                             where 
                             vreimp.movgest_ts_r_new_id =  r_movgest_ts.movgest_ts_r_id 
                             and vreimp.movgest_ts_r_id=rold.movgest_ts_r_id
                             and vreimp.movgest_ts_r_new_id = rnew.movgest_ts_r_id
                             and avold.avav_id=rold.avav_id
                             and avold.avav_tipo_id = davold.avav_tipo_id
                             and davold.avav_tipo_code like '%FPV%'
                        )
                        group by t_bil_elem.elem_id
              )    
              ) as x
                group by x.elem_id ),
impegni_anno2_e as(
      -- Spese impegnate nell'esercizio N con imputazione all'esercizio N+1 e 
      -- coperte dal fondo pluriennale vincolato
      -- impegni anno + 1 con atto nell'anno legati ad accertamenti 
      -- di competenza oppure ad avanzo
select x.elem_id,
	sum(x.spese_da_impeg_anno2_e) as spese_da_impeg_anno2_e   
from (
               (
              select t_bil_elem.elem_id,
              	sum(COALESCE(r_movgest_ts.movgest_ts_importo,0)) spese_da_impeg_anno2_e              
                        from siac_t_movgest t_movgest,  
                        siac_t_movgest_ts t_movgest_ts, 
                        siac_t_movgest_ts_det t_movgest_ts_det,
                        siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_movgest_bil_elem,
                        siac_r_movgest_ts_stato r_movgest_ts_stato, 
                        siac_d_movgest_stato d_movgest_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class t_class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_r_movgest_ts_atto_amm r_movgest_ts_atto_amm,
                        siac_t_atto_amm t_atto_amm, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, siac_t_movgest_ts acc_ts,
                        siac_t_movgest acc,
                        siac_r_movgest_ts_stato rstacc,
                        siac_d_movgest_stato dstacc
                where 
                        t_movgest.movgest_id = t_movgest_ts.movgest_id  
                        and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
                        and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
                        and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = t_class.classif_id
                        and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id
                        and r_movgest_ts_atto_amm.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_atto_amm.attoamm_id = t_atto_amm.attoamm_id
                        and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
                        and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id 
                        and r_movgest_ts.movgest_ts_a_id = acc_ts.movgest_ts_id
                        and acc_ts.movgest_id = acc.movgest_id
                        and rstacc.movgest_ts_id=acc_ts.movgest_ts_id
                        and rstacc.movgest_stato_id=dstacc.movgest_stato_id
                        and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and t_movgest.bil_id =id_bil
                        and t_movgest.ente_proprietario_id= p_ente_prop_id      
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and t_movgest.movgest_anno = annoBilInt + 2
                        and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_movgest_stato.movgest_stato_code in ('D', 'N')
                        and d_mov_tipo.movgest_tipo_code='I' 
                        and dstacc.movgest_stato_code in ('D', 'N')   
                        and acc.movgest_anno = annoBilInt  
                        and t_movgest_ts.movgest_ts_id_padre is NULL                            
                        and r_movgest_bil_elem.data_cancellazione is null
                        and r_movgest_bil_elem.validita_fine is NULL          
                        and r_movgest_ts_stato.data_cancellazione is null
                        and r_movgest_ts_stato.validita_fine is null
                        and t_movgest_ts_det.data_cancellazione is null
                        and t_movgest_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null
                        and r_movgest_ts_atto_amm.data_cancellazione is null
                        and r_movgest_ts_atto_amm.validita_fine is null                        
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null                         
                        and acc_ts.movgest_ts_id_padre is null                        
                        and acc.validita_fine is null
                        and acc.data_cancellazione is null
                        and acc_ts.validita_fine is null
                        and acc_ts.data_cancellazione is null                                                
                        and rstacc.validita_fine is null
                        and rstacc.data_cancellazione is null   
                        and t_movgest.data_cancellazione is null 
                        and t_movgest.validita_fine is null  
                        and t_bil_elem.data_cancellazione is null 
                        and t_bil_elem.validita_fine is null  
                        and t_class.data_cancellazione is null 
                        and t_class.validita_fine is null                                                                                                           
              	group by t_bil_elem.elem_id)
              union(
              select t_bil_elem.elem_id,
              		sum(COALESCE(r_movgest_ts.movgest_ts_importo,0)) spese_da_impeg_anno2_e
                from siac_t_movgest t_movgest,  
                        siac_t_movgest_ts t_movgest_ts, 
                        siac_t_movgest_ts_det t_movgest_ts_det,
                        siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_movgest_bil_elem,
                        siac_r_movgest_ts_stato r_movgest_ts_stato, 
                        siac_d_movgest_stato d_movgest_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class t_class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_r_movgest_ts_atto_amm r_movgest_ts_atto_amm,
                        siac_t_atto_amm t_atto_amm, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, 
                        siac_t_avanzovincolo t_avanzovincolo, 
                        siac_d_avanzovincolo_tipo d_avanzovincolo_tipo 
                      where 
                        t_movgest.movgest_id = t_movgest_ts.movgest_id  
                        and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
                        and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
                        and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = t_class.classif_id
                        and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id
                        and r_movgest_ts_atto_amm.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_atto_amm.attoamm_id = t_atto_amm.attoamm_id
                        and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
                        and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
                        and t_avanzovincolo.avav_tipo_id=d_avanzovincolo_tipo.avav_tipo_id
                        and r_movgest_ts.avav_id=t_avanzovincolo.avav_id
                        and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and t_movgest.bil_id =id_bil
                        and t_movgest.ente_proprietario_id = p_ente_prop_id       
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and t_movgest.movgest_anno = annoBilInt + 2
                        and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_movgest_stato.movgest_stato_code in ('D', 'N')
                        and d_mov_tipo.movgest_tipo_code='I' 
                        and d_avanzovincolo_tipo.avav_tipo_code = 'AAM'
                        and t_movgest_ts.movgest_ts_id_padre is NULL                             
                        and r_movgest_bil_elem.data_cancellazione is null
                        and r_movgest_bil_elem.validita_fine is NULL          
                        and r_movgest_ts_stato.data_cancellazione is null
                        and r_movgest_ts_stato.validita_fine is null
                        and t_movgest_ts_det.data_cancellazione is null
                        and t_movgest_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null
                        and r_movgest_ts_atto_amm.data_cancellazione is null
                        and r_movgest_ts_atto_amm.validita_fine is null                                                                                                       
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null 
                        and t_movgest.data_cancellazione is null
                        and t_movgest.validita_fine is null                        
                   group by t_bil_elem.elem_id
              )--- Impegni da riaccertamento - reimputazione nel bilancio successivo 
              union(
              select t_bil_elem.elem_id,
              		sum(COALESCE(r_movgest_ts.movgest_ts_importo,0)) spese_da_impeg_anno2_e
                        from siac_t_movgest t_movgest,  
                        siac_t_movgest_ts t_movgest_ts, 
                        siac_t_movgest_ts_det t_movgest_ts_det,
                        siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_movgest_bil_elem,
                        siac_r_movgest_ts_stato r_movgest_ts_stato, 
                        siac_d_movgest_stato d_movgest_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class t_class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, 
                        siac_t_avanzovincolo t_avanzovincolo, 
                        siac_d_avanzovincolo_tipo d_avanzovincolo_tipo 
                      where 
                        t_movgest.movgest_id = t_movgest_ts.movgest_id  
                        and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
                        and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
                        and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = t_class.classif_id
                        and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id                        
                        and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
                        and r_movgest_ts.avav_id=t_avanzovincolo.avav_id     
                        and t_avanzovincolo.avav_tipo_id=d_avanzovincolo_tipo.avav_tipo_id 
                        and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
                        and t_movgest.bil_id = id_bil
                        and t_movgest.ente_proprietario_id= p_ente_prop_id     
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and t_movgest.movgest_anno = annoBilInt + 2
                        and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_movgest_stato.movgest_stato_code <> 'A'
                        and d_mov_tipo.movgest_tipo_code='I'
                        and d_avanzovincolo_tipo.avav_tipo_code like'FPV%' 
                        and t_movgest_ts.movgest_ts_id_padre is NULL                             
                        and r_movgest_bil_elem.data_cancellazione is null
                        and r_movgest_bil_elem.validita_fine is NULL          
                        and r_movgest_ts_stato.data_cancellazione is null
                        and r_movgest_ts_stato.validita_fine is null
                        and t_movgest_ts_det.data_cancellazione is null
                        and t_movgest_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null                                                                         
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null 
                        and t_movgest.data_cancellazione is null
                        and t_movgest.validita_fine is null 
                        and exists (
                        	select 1
                            from fase_bil_t_elaborazione fase, fase_bil_d_elaborazione_tipo tipo,
                                 fase_bil_t_reimputazione fasereimp, siac_t_bil bilprec, siac_t_periodo pprec
                            where tipo.ente_proprietario_id= t_movgest.ente_proprietario_id                             
                            and   fase.fase_bil_elab_tipo_id=tipo.fase_bil_elab_tipo_id                            
                            and   fasereimp.fasebilelabid=fase.fase_bil_elab_id
                            and   fasereimp.movgest_tipo_id=d_mov_tipo.movgest_tipo_id
                            and   fasereimp.bil_id=bilprec.bil_id
                            and   bilprec.periodo_id = pprec.periodo_id
                            and   fasereimp.movgestnew_id = t_movgest.movgest_id                            
                            and   fasereimp.fl_elab is not null and fasereimp.fl_elab='S'
                            and   tipo.fase_bil_elab_tipo_code='APE_GEST_REIMP'
                            and   fase.fase_bil_elab_esito='OK'
                            and   pprec.anno=p_anno                            
                            and   fase.data_cancellazione is null
                            and   fase.validita_fine is null
                            and   tipo.data_cancellazione is null
                            and   tipo.validita_fine is null
                        )
                        and not exists 
                        (
                           select 
                             1
                             from fase_bil_t_reimputazione_vincoli vreimp, siac_r_movgest_ts rold,
                             siac_r_movgest_ts rnew, siac_t_avanzovincolo avold, siac_d_avanzovincolo_tipo davold
                             where 
                             vreimp.movgest_ts_r_new_id =  r_movgest_ts.movgest_ts_r_id 
                             and vreimp.movgest_ts_r_id=rold.movgest_ts_r_id
                             and vreimp.movgest_ts_r_new_id = rnew.movgest_ts_r_id
                             and avold.avav_id=rold.avav_id
                             and avold.avav_tipo_id = davold.avav_tipo_id
                             and davold.avav_tipo_code like '%FPV%'
                        )
                        group by t_bil_elem.elem_id
              )    
              ) as x
                group by x.elem_id ),
impegni_annisucc_f as(
      -- Spese impegnate nell'esercizio N con imputazione all'esercizio N+1 e 
      -- coperte dal fondo pluriennale vincolato
      -- impegni anno + 1 con atto nell'anno legati ad accertamenti 
      -- di competenza oppure ad avanzo
select x.elem_id,
	sum(x.spese_da_impeg_anni_succ_f) as spese_da_impeg_anni_succ_f   
from (
               (
              select t_bil_elem.elem_id,
              	sum(COALESCE(r_movgest_ts.movgest_ts_importo,0)) spese_da_impeg_anni_succ_f              
                        from siac_t_movgest t_movgest,  
                        siac_t_movgest_ts t_movgest_ts, 
                        siac_t_movgest_ts_det t_movgest_ts_det,
                        siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_movgest_bil_elem,
                        siac_r_movgest_ts_stato r_movgest_ts_stato, 
                        siac_d_movgest_stato d_movgest_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class t_class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_r_movgest_ts_atto_amm r_movgest_ts_atto_amm,
                        siac_t_atto_amm t_atto_amm, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, siac_t_movgest_ts acc_ts,
                        siac_t_movgest acc,
                        siac_r_movgest_ts_stato rstacc,
                        siac_d_movgest_stato dstacc
                where 
                        t_movgest.movgest_id = t_movgest_ts.movgest_id  
                        and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
                        and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
                        and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = t_class.classif_id
                        and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id
                        and r_movgest_ts_atto_amm.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_atto_amm.attoamm_id = t_atto_amm.attoamm_id
                        and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
                        and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id 
                        and r_movgest_ts.movgest_ts_a_id = acc_ts.movgest_ts_id
                        and acc_ts.movgest_id = acc.movgest_id
                        and rstacc.movgest_ts_id=acc_ts.movgest_ts_id
                        and rstacc.movgest_stato_id=dstacc.movgest_stato_id
                        and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and t_movgest.bil_id =id_bil
                        and t_movgest.ente_proprietario_id= p_ente_prop_id      
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and t_movgest.movgest_anno > annoBilInt + 2
                        and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_movgest_stato.movgest_stato_code in ('D', 'N')
                        and d_mov_tipo.movgest_tipo_code='I' 
                        and dstacc.movgest_stato_code in ('D', 'N')   
                        and acc.movgest_anno = annoBilInt  
                        and t_movgest_ts.movgest_ts_id_padre is NULL                            
                        and r_movgest_bil_elem.data_cancellazione is null
                        and r_movgest_bil_elem.validita_fine is NULL          
                        and r_movgest_ts_stato.data_cancellazione is null
                        and r_movgest_ts_stato.validita_fine is null
                        and t_movgest_ts_det.data_cancellazione is null
                        and t_movgest_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null
                        and r_movgest_ts_atto_amm.data_cancellazione is null
                        and r_movgest_ts_atto_amm.validita_fine is null                        
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null                         
                        and acc_ts.movgest_ts_id_padre is null                        
                        and acc.validita_fine is null
                        and acc.data_cancellazione is null
                        and acc_ts.validita_fine is null
                        and acc_ts.data_cancellazione is null                                                
                        and rstacc.validita_fine is null
                        and rstacc.data_cancellazione is null   
                        and t_movgest.data_cancellazione is null 
                        and t_movgest.validita_fine is null  
                        and t_bil_elem.data_cancellazione is null 
                        and t_bil_elem.validita_fine is null  
                        and t_class.data_cancellazione is null 
                        and t_class.validita_fine is null                                                                                                           
              	group by t_bil_elem.elem_id)
              union(
              select t_bil_elem.elem_id,
              		sum(COALESCE(r_movgest_ts.movgest_ts_importo,0)) spese_da_impeg_anni_succ_f
                from siac_t_movgest t_movgest,  
                        siac_t_movgest_ts t_movgest_ts, 
                        siac_t_movgest_ts_det t_movgest_ts_det,
                        siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_movgest_bil_elem,
                        siac_r_movgest_ts_stato r_movgest_ts_stato, 
                        siac_d_movgest_stato d_movgest_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class t_class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_r_movgest_ts_atto_amm r_movgest_ts_atto_amm,
                        siac_t_atto_amm t_atto_amm, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, 
                        siac_t_avanzovincolo t_avanzovincolo, 
                        siac_d_avanzovincolo_tipo d_avanzovincolo_tipo 
                      where 
                        t_movgest.movgest_id = t_movgest_ts.movgest_id  
                        and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
                        and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
                        and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = t_class.classif_id
                        and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id
                        and r_movgest_ts_atto_amm.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_atto_amm.attoamm_id = t_atto_amm.attoamm_id
                        and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
                        and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
                        and t_avanzovincolo.avav_tipo_id=d_avanzovincolo_tipo.avav_tipo_id
                        and r_movgest_ts.avav_id=t_avanzovincolo.avav_id
                        and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and t_movgest.bil_id =id_bil
                        and t_movgest.ente_proprietario_id = p_ente_prop_id       
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and t_movgest.movgest_anno > annoBilInt + 2
                        and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_movgest_stato.movgest_stato_code in ('D', 'N')
                        and d_mov_tipo.movgest_tipo_code='I' 
                        and d_avanzovincolo_tipo.avav_tipo_code = 'AAM'
                        and t_movgest_ts.movgest_ts_id_padre is NULL                             
                        and r_movgest_bil_elem.data_cancellazione is null
                        and r_movgest_bil_elem.validita_fine is NULL          
                        and r_movgest_ts_stato.data_cancellazione is null
                        and r_movgest_ts_stato.validita_fine is null
                        and t_movgest_ts_det.data_cancellazione is null
                        and t_movgest_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null
                        and r_movgest_ts_atto_amm.data_cancellazione is null
                        and r_movgest_ts_atto_amm.validita_fine is null                                                                                                       
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null 
                        and t_movgest.data_cancellazione is null
                        and t_movgest.validita_fine is null                        
                   group by t_bil_elem.elem_id
              )--- Impegni da riaccertamento - reimputazione nel bilancio successivo 
              union(
              select t_bil_elem.elem_id,
              		sum(COALESCE(r_movgest_ts.movgest_ts_importo,0)) spese_da_impeg_anni_succ_f
                        from siac_t_movgest t_movgest,  
                        siac_t_movgest_ts t_movgest_ts, 
                        siac_t_movgest_ts_det t_movgest_ts_det,
                        siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo, 
                        siac_t_bil_elem t_bil_elem, 
                        siac_r_movgest_bil_elem r_movgest_bil_elem,
                        siac_r_movgest_ts_stato r_movgest_ts_stato, 
                        siac_d_movgest_stato d_movgest_stato,
                        siac_r_bil_elem_class r_bil_elem_class,
                        siac_t_class t_class, 
                        siac_d_class_tipo d_class_tipo, 
                        siac_d_movgest_tipo d_mov_tipo,
                        siac_r_movgest_ts r_movgest_ts, 
                        siac_t_avanzovincolo t_avanzovincolo, 
                        siac_d_avanzovincolo_tipo d_avanzovincolo_tipo 
                      where 
                        t_movgest.movgest_id = t_movgest_ts.movgest_id  
                        and t_movgest_ts.movgest_ts_id = t_movgest_ts_det.movgest_ts_id
                        and t_movgest_ts_det.movgest_ts_det_tipo_id =d_movgest_ts_det_tipo.movgest_ts_det_tipo_id
                        and d_mov_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
                        and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
                        and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
                        and r_bil_elem_class.classif_id = t_class.classif_id
                        and t_class.classif_tipo_id=d_class_tipo.classif_tipo_id
                        and r_bil_elem_class.elem_id = r_movgest_bil_elem.elem_id                        
                        and t_bil_elem.elem_id=r_movgest_bil_elem.elem_id
                        and r_movgest_ts.avav_id=t_avanzovincolo.avav_id     
                        and t_avanzovincolo.avav_tipo_id=d_avanzovincolo_tipo.avav_tipo_id 
                        and t_movgest_ts.movgest_ts_id = r_movgest_ts.movgest_ts_b_id 
                        and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
                        and t_movgest.bil_id = id_bil
                        and t_movgest.ente_proprietario_id= p_ente_prop_id     
                        and d_class_tipo.classif_tipo_code='PROGRAMMA'
                        and t_movgest.movgest_anno > annoBilInt + 2
                        and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
                        and d_movgest_stato.movgest_stato_code <> 'A'
                        and d_mov_tipo.movgest_tipo_code='I'
                        and d_avanzovincolo_tipo.avav_tipo_code like'FPV%' 
                        and t_movgest_ts.movgest_ts_id_padre is NULL                             
                        and r_movgest_bil_elem.data_cancellazione is null
                        and r_movgest_bil_elem.validita_fine is NULL          
                        and r_movgest_ts_stato.data_cancellazione is null
                        and r_movgest_ts_stato.validita_fine is null
                        and t_movgest_ts_det.data_cancellazione is null
                        and t_movgest_ts_det.validita_fine is null
                        and d_mov_tipo.data_cancellazione is null
                        and d_mov_tipo.validita_fine is null              
                        and r_bil_elem_class.data_cancellazione is null
                        and r_bil_elem_class.validita_fine is null                                                                         
                        and r_movgest_ts.data_cancellazione is null
                        and r_movgest_ts.validita_fine is null 
                        and t_movgest.data_cancellazione is null
                        and t_movgest.validita_fine is null 
                        and exists (
                        	select 1
                            from fase_bil_t_elaborazione fase, fase_bil_d_elaborazione_tipo tipo,
                                 fase_bil_t_reimputazione fasereimp, siac_t_bil bilprec, siac_t_periodo pprec
                            where tipo.ente_proprietario_id= t_movgest.ente_proprietario_id                             
                            and   fase.fase_bil_elab_tipo_id=tipo.fase_bil_elab_tipo_id                            
                            and   fasereimp.fasebilelabid=fase.fase_bil_elab_id
                            and   fasereimp.movgest_tipo_id=d_mov_tipo.movgest_tipo_id
                            and   fasereimp.bil_id=bilprec.bil_id
                            and   bilprec.periodo_id = pprec.periodo_id
                            and   fasereimp.movgestnew_id = t_movgest.movgest_id                            
                            and   fasereimp.fl_elab is not null and fasereimp.fl_elab='S'
                            and   tipo.fase_bil_elab_tipo_code='APE_GEST_REIMP'
                            and   fase.fase_bil_elab_esito='OK'
                            and   pprec.anno=p_anno                            
                            and   fase.data_cancellazione is null
                            and   fase.validita_fine is null
                            and   tipo.data_cancellazione is null
                            and   tipo.validita_fine is null
                        )
                        and not exists 
                        (
                           select 
                             1
                             from fase_bil_t_reimputazione_vincoli vreimp, siac_r_movgest_ts rold,
                             siac_r_movgest_ts rnew, siac_t_avanzovincolo avold, siac_d_avanzovincolo_tipo davold
                             where 
                             vreimp.movgest_ts_r_new_id =  r_movgest_ts.movgest_ts_r_id 
                             and vreimp.movgest_ts_r_id=rold.movgest_ts_r_id
                             and vreimp.movgest_ts_r_new_id = rnew.movgest_ts_r_id
                             and avold.avav_id=rold.avav_id
                             and avold.avav_tipo_id = davold.avav_tipo_id
                             and davold.avav_tipo_code like '%FPV%'
                        )
                        group by t_bil_elem.elem_id
              )    
              ) as x
                group by x.elem_id ),
/* Per la gestione degli importi del cronoprogramma, come da indicazioni di Troiano, 
		occorre:
	- Prendere i dati dei progetti relativi all'ultimo cronoprogrogramma (data_creazione)
      con flag "usato_per_fpv" = true.
    - Se non esiste prendere i dati dell'ultimo cronoprogramma in bozza cioe' con
      "usato_per_fpv" = false i cui progetti non  abbiano impegni collegati.

*/                
 cronoprogrammi_fpv as (select cronop.* from 
 		(select a.cronop_id, a.cronop_code, d.cronop_elem_code,
			d.cronop_elem_code2, d.cronop_elem_code3,
    		COALESCE(sum(e.cronop_elem_det_importo),0)::numeric importo_crono			
          from siac_t_programma pr, siac_t_cronop a, 
          siac_t_bil b, siac_t_periodo c,
          siac_t_cronop_elem d,          	
          siac_d_bil_elem_tipo dt,
          siac_t_cronop_elem_det e, siac_t_periodo f,
          siac_r_cronop_elem_class rcl2, siac_d_class_tipo clt2, siac_t_class cl2,
          siac_r_cronop_stato stc , siac_d_cronop_stato stct,
          siac_r_programma_stato stpr, siac_d_programma_stato stprt
          where  pr.programma_id=a.programma_id
          and a.bil_id = b.bil_id
          and b.periodo_id=c.periodo_id
          and d.cronop_id=a.cronop_id
          and d.cronop_elem_id=e.cronop_elem_id
          and dt.elem_tipo_id=d.elem_tipo_id
          and e.periodo_id = f.periodo_id
          and rcl2.cronop_elem_id = d.cronop_elem_id
          and rcl2.classif_id=cl2.classif_id
          and cl2.classif_tipo_id=clt2.classif_tipo_id
          and stc.cronop_id=a.cronop_id
          and stc.cronop_stato_id=stct.cronop_stato_id
          and stpr.programma_id=pr.programma_id
          and stpr.programma_stato_id=stprt.programma_stato_id
          and pr.ente_proprietario_id=p_ente_prop_id
          and c.anno = p_anno -- anno bilancio
          and a.usato_per_fpv::boolean = true          
          and clt2.classif_tipo_code='PROGRAMMA'        
          and stct.cronop_stato_code='VA'          
          and stprt.programma_stato_code='VA'
          and stpr.data_cancellazione is null
          and stc.data_cancellazione is null
          and a.data_cancellazione is null
          and pr.data_cancellazione is null
          and b.data_cancellazione is null
          and c.data_cancellazione is null
          and d.data_cancellazione is null
          and e.data_cancellazione is null
          and rcl2.data_cancellazione is null
          group by a.cronop_id, a.cronop_code, 
          d.cronop_elem_code,
	d.cronop_elem_code2,d.cronop_elem_code3) cronop,
 		(select t_cronop.cronop_id, 
    max(t_cronop.data_creazione) max_data_creazione
    from siac_t_cronop t_cronop, 
    	siac_t_bil t_bil, siac_t_periodo t_periodo
    where t_cronop.bil_id=t_bil.bil_id
    	and t_bil.periodo_id=t_periodo.periodo_id
        and t_cronop.ente_proprietario_id=p_ente_prop_id
        and t_periodo.anno=p_anno
        and t_cronop.usato_per_fpv::boolean=true
        and t_cronop.data_cancellazione IS NULL
        and t_bil.data_cancellazione IS NULL
        and t_periodo.data_cancellazione IS NULL
    group by t_cronop.cronop_id
   order by max_data_creazione DESC
   limit 1) id_cronop_last_versione 
where id_cronop_last_versione.cronop_id =  cronop.cronop_id ),
cronoprogrammi_bozza as(
	select cronop_bozza.* from 
    (select a.cronop_id, a.cronop_code, d.cronop_elem_code,
			d.cronop_elem_code2, d.cronop_elem_code3,
    		COALESCE(sum(e.cronop_elem_det_importo),0)::numeric importo_crono			
          from siac_t_programma pr, siac_t_cronop a, 
          siac_t_bil b, siac_t_periodo c,
          siac_t_cronop_elem d,          	
          siac_d_bil_elem_tipo dt,
          siac_t_cronop_elem_det e, siac_t_periodo f,
          siac_r_cronop_elem_class rcl2, siac_d_class_tipo clt2, siac_t_class cl2,
          siac_r_cronop_stato stc , siac_d_cronop_stato stct,
          siac_r_programma_stato stpr, siac_d_programma_stato stprt
          where  pr.programma_id=a.programma_id
          and a.bil_id = b.bil_id
          and b.periodo_id=c.periodo_id
          and d.cronop_id=a.cronop_id
          and d.cronop_elem_id=e.cronop_elem_id
          and dt.elem_tipo_id=d.elem_tipo_id
          and e.periodo_id = f.periodo_id
          and rcl2.cronop_elem_id = d.cronop_elem_id
          and rcl2.classif_id=cl2.classif_id
          and cl2.classif_tipo_id=clt2.classif_tipo_id
          and stc.cronop_id=a.cronop_id
          and stc.cronop_stato_id=stct.cronop_stato_id
          and stpr.programma_id=pr.programma_id
          and stpr.programma_stato_id=stprt.programma_stato_id
          and pr.ente_proprietario_id=p_ente_prop_id
          and c.anno = p_anno -- anno bilancio
          and a.usato_per_fpv::boolean = false          
          and clt2.classif_tipo_code='PROGRAMMA'        
          and stct.cronop_stato_code='VA'          
          and stprt.programma_stato_code='VA'
          and pr.programma_id not in (
        	select r_movgest_ts_programma.programma_id
            	from siac_r_movgest_ts_programma r_movgest_ts_programma
            	where r_movgest_ts_programma.ente_proprietario_id=p_ente_prop_id
                	and r_movgest_ts_programma.data_cancellazione IS NULL
                    and r_movgest_ts_programma.validita_fine IS NULL)
          and stpr.data_cancellazione is null
          and stc.data_cancellazione is null
          and a.data_cancellazione is null
          and pr.data_cancellazione is null
          and b.data_cancellazione is null
          and c.data_cancellazione is null
          and d.data_cancellazione is null
          and e.data_cancellazione is null
          and rcl2.data_cancellazione is null
          group by a.cronop_id, a.cronop_code, 
          d.cronop_elem_code,
	d.cronop_elem_code2,d.cronop_elem_code3) cronop_bozza,  
    (select t_cronop.cronop_id, 
    max(t_cronop.data_creazione) max_data_creazione
    from siac_t_cronop t_cronop, 
    	siac_t_bil t_bil, siac_t_periodo t_periodo,
        siac_t_programma t_programma
    where t_cronop.bil_id=t_bil.bil_id
    	and t_bil.periodo_id=t_periodo.periodo_id
        and t_programma.programma_id= t_cronop.programma_id
        and t_cronop.ente_proprietario_id=p_ente_prop_id
        and t_periodo.anno=p_anno
        and t_cronop.usato_per_fpv::boolean=false
        and t_cronop.data_cancellazione IS NULL
        and t_bil.data_cancellazione IS NULL
        and t_periodo.data_cancellazione IS NULL
       and t_programma.programma_id not in (
        	select r_movgest_ts_programma.programma_id
            	from siac_r_movgest_ts_programma r_movgest_ts_programma
            	where r_movgest_ts_programma.ente_proprietario_id=p_ente_prop_id
                	and r_movgest_ts_programma.data_cancellazione IS NULL
                    and r_movgest_ts_programma.validita_fine IS NULL)
    group by t_cronop.cronop_id
   order by max_data_creazione DESC
   limit 1) id_cronop_bozza 
where id_cronop_bozza.cronop_id =  cronop_bozza.cronop_id ),
exist_last_versione as (select count(*) last_version
    from siac_t_cronop t_cronop, 
    	siac_t_bil t_bil, siac_t_periodo t_periodo
    where t_cronop.bil_id=t_bil.bil_id
    	and t_bil.periodo_id=t_periodo.periodo_id
        and t_cronop.ente_proprietario_id=p_ente_prop_id
        and t_periodo.anno=p_anno
        and t_cronop.usato_per_fpv::boolean=true
        and t_cronop.data_cancellazione IS NULL
        and t_bil.data_cancellazione IS NULL
        and t_periodo.data_cancellazione IS NULL)               
select 
p_anno::varchar  bil_anno ,
''::varchar  missione_tipo_code ,
strut_bilancio.missione_tipo_desc ,
strut_bilancio.missione_code ,
strut_bilancio.missione_desc ,
''::varchar programma_tipo_code ,
strut_bilancio.programma_tipo_desc ,
strut_bilancio.programma_code ,
strut_bilancio.programma_desc ,
capitoli_fpv.elem_id::integer elem_id_fpv,
capitoli_fpv.elem_code::varchar bil_ele_code_fpv,
capitoli_fpv.elem_desc::varchar bil_ele_desc_fpv,
capitoli_fpv.elem_code2::varchar bil_ele_code2_fpv,
capitoli_fpv.elem_desc2::varchar bil_ele_desc2_fpv,
capitoli_std.elem_id::integer elem_id_std,
capitoli_std.elem_code::varchar bil_ele_code_std,
capitoli_std.elem_desc::varchar bil_ele_desc_std,
capitoli_std.elem_code2::varchar bil_ele_code2_std,
capitoli_std.elem_desc2::varchar bil_ele_desc2_std,
capitoli_std.elem_code3::varchar bil_ele_code3_std,
COALESCE(fpv_anno_prec_da_capitoli.importo_fpv_anno_prec,0) +
	COALESCE(fpv_variaz_anno_prec.importo_var,0)::numeric fondo_plur_anno_prec_a,
COALESCE(importi_anni_prec.spese_impe_anni_prec,0)::numeric spese_impe_anni_prec_b,
COALESCE(fpv_anno_prec_da_capitoli.importo_fpv_anno_prec,0) -
	COALESCE(importi_anni_prec.spese_impe_anni_prec,0) -
    COALESCE(riaccert_colonna_x.riacc_colonna_x,0) -
    COALESCE(riaccert_colonna_y.riacc_colonna_y,0)::numeric quota_fond_plur_anni_prec_c,
COALESCE(impegni_anno1_d.spese_da_impeg_anno1_d,0)::numeric spese_da_impeg_anno1_d,
COALESCE(impegni_anno2_e.spese_da_impeg_anno2_e,0)::numeric spese_da_impeg_anno2_e,
COALESCE(impegni_annisucc_f.spese_da_impeg_anni_succ_f,0)::numeric spese_da_impeg_anni_succ_f,
COALESCE(riaccert_colonna_x.riacc_colonna_x,0)::numeric riacc_colonna_x,
COALESCE(riaccert_colonna_y.riacc_colonna_y,0)::numeric riacc_colonna_y,
COALESCE(impegni_anno1_d.spese_da_impeg_anno1_d,0) +
	COALESCE(impegni_anno2_e.spese_da_impeg_anno2_e,0) +
    COALESCE(impegni_annisucc_f.spese_da_impeg_anni_succ_f,0)::numeric fondo_plur_anno_g,
COALESCE(fpv_stanziamento_anno.importo_fpv_stanz_anno,0)::numeric fpv_stanziato_anno,
	--se NON esiste una versione con "usato_per_fpv" = true prendo i dati di
    --cronoprogramma in BOZZA, altrimenti quelli della versione approvata.
CASE WHEN exist_last_versione.last_version = 0
	THEN COALESCE(cronoprogrammi_bozza.importo_crono,0)
    ELSE COALESCE(cronoprogrammi_fpv.importo_crono,0) end ::numeric imp_cronoprogramma
from strut_bilancio
left JOIN capitoli_fpv on (strut_bilancio.programma_id = capitoli_fpv.programma_id
			AND strut_bilancio.macroag_id = capitoli_fpv.macroaggregato_id)
left join capitoli_std
	on capitoli_fpv.elem_id_std = capitoli_std.elem_id            
left join fpv_anno_prec_da_capitoli
	on (capitoli_fpv.elem_code=fpv_anno_prec_da_capitoli.elem_code
    	AND capitoli_fpv.elem_code2=fpv_anno_prec_da_capitoli.elem_code2
        AND capitoli_fpv.elem_code3=fpv_anno_prec_da_capitoli.elem_code3)   
left join fpv_variaz_anno_prec 
	on (capitoli_fpv.elem_code=fpv_variaz_anno_prec.elem_code
    	AND capitoli_fpv.elem_code2=fpv_variaz_anno_prec.elem_code2
        AND capitoli_fpv.elem_code3=fpv_variaz_anno_prec.elem_code3)   
        --27/05/2019: SIAC-6849.   
        -- gli importi delle colonne a, b, x, y, c, d, e, f
        -- dipendono dai capitoli STD e non da quelli FPV.  
left join importi_anni_prec 
	on capitoli_std.elem_id = importi_anni_prec.elem_id 
left join riaccert_colonna_x
	on capitoli_std.elem_id = riaccert_colonna_x. elem_id
left join riaccert_colonna_y
	on capitoli_std.elem_id = riaccert_colonna_y.elem_id
left join impegni_anno1_d
	on capitoli_fpv.elem_id = impegni_anno1_d.elem_id
left join impegni_anno2_e
	on capitoli_fpv.elem_id = impegni_anno2_e.elem_id
left join impegni_annisucc_f
	on capitoli_fpv.elem_id = impegni_annisucc_f.elem_id 
    	--lo stanziato FPV e' legato ai capitoli FPV.
left join fpv_stanziamento_anno
	on capitoli_fpv.elem_id = fpv_stanziamento_anno.elem_id
left join cronoprogrammi_fpv
    on (capitoli_fpv.elem_code=cronoprogrammi_fpv.cronop_elem_code
    	AND capitoli_fpv.elem_code2=cronoprogrammi_fpv.cronop_elem_code2
        AND capitoli_fpv.elem_code3=cronoprogrammi_fpv.cronop_elem_code3)
left join cronoprogrammi_bozza
    on (capitoli_fpv.elem_code=cronoprogrammi_bozza.cronop_elem_code
    	AND capitoli_fpv.elem_code2=cronoprogrammi_bozza.cronop_elem_code2
        AND capitoli_fpv.elem_code3=cronoprogrammi_bozza.cronop_elem_code3),
exist_last_versione        ;            
raise notice 'fine OK';
    exception
    when no_data_found THEN
    raise notice 'nessun dato trovato per struttura bilancio';
    return;
    when others  THEN
  	RTN_MESSAGGIO:='struttura bilancio altro errore';
 	RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
    return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

CREATE OR REPLACE FUNCTION siac."BILR223_Allegato_B_Fondo_Pluriennale_vincolato_capitolo" (
  p_ente_prop_id integer,
  p_anno varchar,
  p_anno_prospetto varchar
)
RETURNS TABLE (
  bil_anno varchar,
  missione_tipo_code varchar,
  missione_tipo_desc varchar,
  missione_code varchar,
  missione_desc varchar,
  programma_tipo_code varchar,
  programma_tipo_desc varchar,
  programma_code varchar,
  programma_desc varchar,
  bil_elem_code varchar,
  bil_elem_desc varchar,
  bil_elem_code2 varchar,
  bil_elem_desc2 varchar,
  bil_elem_code3 varchar,
  fondo_plur_anno_prec_a numeric,
  spese_impe_anni_prec_b numeric,
  quota_fond_plur_anni_prec_c numeric,
  spese_da_impeg_anno1_d numeric,
  spese_da_impeg_anno2_e numeric,
  spese_da_impeg_anni_succ_f numeric,
  spese_da_impeg_non_def_g numeric,
  fondo_plur_anno_h numeric
) AS
$body$
DECLARE

classifBilRec record;


annoCapImp varchar;
annoCapImp1 varchar;
annoCapImp2 varchar;
tipoImpComp varchar;
tipoImpCassa varchar;
tipoImpRes varchar;
elemTipoCode varchar;
DEF_NULL	constant varchar:=''; 
RTN_MESSAGGIO varchar(1000):=DEF_NULL;
user_table	varchar;
annoPrec varchar;
annoProspInt integer;
annoBilInt integer;
conflagfpv boolean ;
a_dacapfpv boolean ;
h_dacapfpv boolean ;
flagretrocomp boolean ;

h_count integer :=0;
v_fam_missioneprogramma varchar :='00001';
v_fam_titolomacroaggregato varchar := '00002';
id_bil INTEGER;

BEGIN

annoCapImp:= p_anno; 
annoCapImp1:= ((p_anno::INTEGER)+1)::VARCHAR;   
annoCapImp2:= ((p_anno::INTEGER)+2)::VARCHAR; 
conflagfpv:=TRUE;
a_dacapfpv:=false;
h_dacapfpv:=false;
flagretrocomp:=false;

TipoImpComp='STA';  -- competenza
TipoImpCassa='SCA'; -- cassa
TipoImpRes='STR';   -- residui
elemTipoCode:='CAP-UP'; -- tipo capitolo previsione


annoPrec:=((p_anno::INTEGER)-1)::VARCHAR;
annoProspInt=p_anno_prospetto::INTEGER;
annoBilInt=p_anno::INTEGER;

bil_anno='';
missione_tipo_code='';
missione_tipo_desc='';
missione_code='';
missione_desc='';
programma_tipo_code='';
programma_tipo_desc='';
programma_code='';
programma_desc='';

fondo_plur_anno_prec_a=0;
spese_impe_anni_prec_b=0;
quota_fond_plur_anni_prec_c=0;
spese_da_impeg_anno1_d=0;
spese_da_impeg_anno2_e=0;
spese_da_impeg_anni_succ_f=0;
spese_da_impeg_non_def_g=0;
fondo_plur_anno_h=0;

/* 08/03/2019: revisione per SIAC-6623 
	I campi fondo_plur_anno_prec_a, spese_impe_anni_prec_b, quota_fond_plur_anni_prec_c e
    fondo_plur_anno_h anche se valorizzati non sono utilizzati dal report perche'
    prende quelli di gestione calcolati tramite la funzione 
    BILR223_allegato_fpv_previsione_dati_gestione_capitolo che e' una copia di 
    BILR011_allegato_fpv_previsione_con_dati_gestione (ex BILR171).
*/

select t_bil.bil_id
	into id_bil
from siac_t_bil t_bil,
	siac_t_periodo t_periodo
where t_bil.periodo_id=t_periodo.periodo_id
	and t_bil.ente_proprietario_id = p_ente_prop_id
    and t_periodo.anno= p_anno    
    and t_bil.data_cancellazione IS NULL
    and t_periodo.data_cancellazione IS NULL;
IF NOT FOUND THEN
	raise notice 'Codice del bilancio non trovato';
    return;
END IF;

for classifBilRec in
	with strutt_capitoli as (select *
		from "fnc_bilr_struttura_cap_bilancio_spese"(p_ente_prop_id,p_anno,'')),
	capitoli as (select programma.classif_id programma_id,
		macroaggr.classif_id macroag_id,
       	capitolo.*
	from siac_d_class_tipo programma_tipo,
     	siac_t_class programma,
     	siac_d_class_tipo macroaggr_tipo,
     	siac_t_class macroaggr,
	 	siac_t_bil_elem capitolo,
	 	siac_d_bil_elem_tipo tipo_elemento,
     	siac_r_bil_elem_class r_capitolo_programma,
     	siac_r_bil_elem_class r_capitolo_macroaggr, 
	 	siac_d_bil_elem_stato stato_capitolo, 
     	siac_r_bil_elem_stato r_capitolo_stato,
	 	siac_d_bil_elem_categoria cat_del_capitolo,
     	siac_r_bil_elem_categoria r_cat_capitolo
	where macroaggr.classif_tipo_id=macroaggr_tipo.classif_tipo_id 				and
    	macroaggr.classif_id=r_capitolo_macroaggr.classif_id					and
    	programma.classif_tipo_id=programma_tipo.classif_tipo_id 				and
    	programma.classif_id=r_capitolo_programma.classif_id					and    		       
    	capitolo.elem_id=r_capitolo_programma.elem_id							and
    	capitolo.elem_id=r_capitolo_macroaggr.elem_id							and
   		capitolo.elem_tipo_id=tipo_elemento.elem_tipo_id 						and
    	capitolo.elem_id				=	r_capitolo_stato.elem_id			and
		r_capitolo_stato.elem_stato_id	=	stato_capitolo.elem_stato_id		and
    	capitolo.elem_id				=	r_cat_capitolo.elem_id				and
		r_cat_capitolo.elem_cat_id		=	cat_del_capitolo.elem_cat_id		and
        capitolo.ente_proprietario_id=p_ente_prop_id      						and
        capitolo.bil_id= id_bil													and   	
    	tipo_elemento.elem_tipo_code = elemTipoCode						     	and 
    	macroaggr_tipo.classif_tipo_code='MACROAGGREGATO'						and
    	programma_tipo.classif_tipo_code='PROGRAMMA' 							and	        
		stato_capitolo.elem_stato_code	=	'VA'								and    
			--04/08/2016: aggiunto FPVC 
		cat_del_capitolo.elem_cat_code	in	('FPV','FPVC')								
    	and	now() between programma.validita_inizio and coalesce (programma.validita_fine, now()) 
		and	now() between macroaggr.validita_inizio and coalesce (macroaggr.validita_fine, now())
      	and	now() between capitolo.validita_inizio and coalesce (capitolo.validita_fine, now())
        and	now() between programma_tipo.validita_inizio and coalesce (programma_tipo.validita_fine, now())
        and	now() between macroaggr_tipo.validita_inizio and coalesce (macroaggr_tipo.validita_fine, now())
        and	now() between tipo_elemento.validita_inizio and coalesce (tipo_elemento.validita_fine, now())
        and	now() between r_capitolo_programma.validita_inizio and coalesce (r_capitolo_programma.validita_fine, now())
        and	now() between r_capitolo_macroaggr.validita_inizio and coalesce (r_capitolo_macroaggr.validita_fine, now())
        and	now() between stato_capitolo.validita_inizio and coalesce (stato_capitolo.validita_fine, now())
        and	now() between r_capitolo_stato.validita_inizio and coalesce (r_capitolo_stato.validita_fine, now())
        and	now() between cat_del_capitolo.validita_inizio and coalesce (cat_del_capitolo.validita_fine, now())
        and	now() between r_cat_capitolo.validita_inizio and coalesce (r_cat_capitolo.validita_fine, now())        
        and	programma_tipo.data_cancellazione 			is null
        and	programma.data_cancellazione 				is null
        and	macroaggr_tipo.data_cancellazione 			is null
        and	macroaggr.data_cancellazione 				is null
        and	capitolo.data_cancellazione 				is null
        and	tipo_elemento.data_cancellazione 			is null
        and	r_capitolo_programma.data_cancellazione 	is null
        and	r_capitolo_macroaggr.data_cancellazione 	is null 
        and	stato_capitolo.data_cancellazione 			is null 
        and	r_capitolo_stato.data_cancellazione 		is null
        and	cat_del_capitolo.data_cancellazione 		is null
        and	r_cat_capitolo.data_cancellazione 			is null),
    importi_capitoli_anno1 as (select 		capitolo_importi.elem_id,
                capitolo_imp_periodo.anno 				BIL_ELE_IMP_ANNO,
                capitolo_imp_tipo.elem_det_tipo_code 	TIPO_IMP,
                sum(capitolo_importi.elem_det_importo) stanziamento_fpv_anno1      
    from 		siac_t_bil_elem_det 		capitolo_importi,
                siac_d_bil_elem_det_tipo 	capitolo_imp_tipo,
                siac_t_periodo 				capitolo_imp_periodo,
                siac_t_bil_elem 			capitolo,
                siac_d_bil_elem_tipo 		tipo_elemento,                 
                siac_d_bil_elem_stato 		stato_capitolo, 
                siac_r_bil_elem_stato 		r_capitolo_stato,
                siac_d_bil_elem_categoria 	cat_del_capitolo,
                siac_r_bil_elem_categoria 	r_cat_capitolo
        where 	capitolo.elem_id	=	capitolo_importi.elem_id 
            and	capitolo.elem_tipo_id=tipo_elemento.elem_tipo_id 
            and	capitolo_importi.elem_det_tipo_id=capitolo_imp_tipo.elem_det_tipo_id 		
            and	capitolo_imp_periodo.periodo_id=capitolo_importi.periodo_id 	
            and	capitolo.elem_id				=	r_capitolo_stato.elem_id			
            and	r_capitolo_stato.elem_stato_id	=	stato_capitolo.elem_stato_id
            and	capitolo.elem_id				=	r_cat_capitolo.elem_id				
            and	r_cat_capitolo.elem_cat_id		=	cat_del_capitolo.elem_cat_id
            and capitolo_importi.ente_proprietario_id 	=p_ente_prop_id  
            and capitolo.bil_id					= id_bil					
            and	tipo_elemento.elem_tipo_code = elemTipoCode   
            and capitolo_imp_tipo.elem_det_tipo_code = TipoImpComp    --'STA' 			  
            and	capitolo_imp_periodo.anno = annoCapImp --p_anno       		
            and	stato_capitolo.elem_stato_code	=	'VA'								        		
            	--04/08/2016: aggiunto FPVC
            and	cat_del_capitolo.elem_cat_code	in(	'FPV','FPVC')							
            and	now() between capitolo_importi.validita_inizio and coalesce (capitolo_importi.validita_fine, now())
            and	now() between capitolo_imp_periodo.validita_inizio and coalesce (capitolo_imp_periodo.validita_fine, now())
            and	now() between capitolo_imp_tipo.validita_inizio and coalesce (capitolo_imp_tipo.validita_fine, now())
            and	now() between capitolo.validita_inizio and coalesce (capitolo.validita_fine, now())
            and	now() between tipo_elemento.validita_inizio and coalesce (tipo_elemento.validita_fine, now())
            and	now() between stato_capitolo.validita_inizio and coalesce (stato_capitolo.validita_fine, now())
            and	now() between r_capitolo_stato.validita_inizio and coalesce (r_capitolo_stato.validita_fine, now())
            and	now() between cat_del_capitolo.validita_inizio and coalesce (cat_del_capitolo.validita_fine, now())
            and	now() between r_cat_capitolo.validita_inizio and coalesce (r_cat_capitolo.validita_fine, now())
            and	capitolo_importi.data_cancellazione 		is null
            and	capitolo_imp_tipo.data_cancellazione 		is null
            and	capitolo_imp_periodo.data_cancellazione 	is null
            and	capitolo.data_cancellazione 				is null
            and	tipo_elemento.data_cancellazione 			is null            
            and	stato_capitolo.data_cancellazione 			is null 
            and	r_capitolo_stato.data_cancellazione 		is null
            and cat_del_capitolo.data_cancellazione 		is null
            and	r_cat_capitolo.data_cancellazione 			is null
        group by	capitolo_importi.elem_id,capitolo_imp_tipo.elem_det_tipo_code,
            capitolo_imp_periodo.anno),
	importi_capitoli_anno2 as (select 		capitolo_importi.elem_id,
                capitolo_imp_periodo.anno 				BIL_ELE_IMP_ANNO,
                capitolo_imp_tipo.elem_det_tipo_code 	TIPO_IMP,
                sum(capitolo_importi.elem_det_importo) stanziamento_fpv_anno2      
    from 		siac_t_bil_elem_det 		capitolo_importi,
                siac_d_bil_elem_det_tipo 	capitolo_imp_tipo,
                siac_t_periodo 				capitolo_imp_periodo,
                siac_t_bil_elem 			capitolo,
                siac_d_bil_elem_tipo 		tipo_elemento,
                siac_d_bil_elem_stato 		stato_capitolo, 
                siac_r_bil_elem_stato 		r_capitolo_stato,
                siac_d_bil_elem_categoria 	cat_del_capitolo,
                siac_r_bil_elem_categoria 	r_cat_capitolo
        where  	capitolo.elem_id	=	capitolo_importi.elem_id 
            and	capitolo.elem_tipo_id=tipo_elemento.elem_tipo_id 
            and	capitolo_importi.elem_det_tipo_id=capitolo_imp_tipo.elem_det_tipo_id 		
            and	capitolo_imp_periodo.periodo_id=capitolo_importi.periodo_id 	
            and	capitolo.elem_id				=	r_capitolo_stato.elem_id			
            and	r_capitolo_stato.elem_stato_id	=	stato_capitolo.elem_stato_id
            and	capitolo.elem_id				=	r_cat_capitolo.elem_id				
            and	r_cat_capitolo.elem_cat_id		=	cat_del_capitolo.elem_cat_id            
            and capitolo_importi.ente_proprietario_id 	=p_ente_prop_id  
            and	capitolo.bil_id					= id_bil					
            and	tipo_elemento.elem_tipo_code = elemTipoCode   
            and capitolo_imp_tipo.elem_det_tipo_code = TipoImpComp    --'STA' 			  
            and	capitolo_imp_periodo.anno = annoCapImp1 --p_anno +1      		
            and	stato_capitolo.elem_stato_code	=	'VA'								        		
            	--04/08/2016: aggiunto FPVC
            and	cat_del_capitolo.elem_cat_code	in(	'FPV','FPVC')							
            and	now() between capitolo_importi.validita_inizio and coalesce (capitolo_importi.validita_fine, now())
            and	now() between capitolo_imp_periodo.validita_inizio and coalesce (capitolo_imp_periodo.validita_fine, now())
            and	now() between capitolo_imp_tipo.validita_inizio and coalesce (capitolo_imp_tipo.validita_fine, now())
            and	now() between capitolo.validita_inizio and coalesce (capitolo.validita_fine, now())
            and	now() between tipo_elemento.validita_inizio and coalesce (tipo_elemento.validita_fine, now())
            and	now() between stato_capitolo.validita_inizio and coalesce (stato_capitolo.validita_fine, now())
            and	now() between r_capitolo_stato.validita_inizio and coalesce (r_capitolo_stato.validita_fine, now())
            and	now() between cat_del_capitolo.validita_inizio and coalesce (cat_del_capitolo.validita_fine, now())
            and	now() between r_cat_capitolo.validita_inizio and coalesce (r_cat_capitolo.validita_fine, now())
            and	capitolo_importi.data_cancellazione 		is null
            and	capitolo_imp_tipo.data_cancellazione 		is null
            and	capitolo_imp_periodo.data_cancellazione 	is null
            and	capitolo.data_cancellazione 				is null
            and	tipo_elemento.data_cancellazione 			is null
            and	stato_capitolo.data_cancellazione 			is null 
            and	r_capitolo_stato.data_cancellazione 		is null
            and cat_del_capitolo.data_cancellazione 		is null
            and	r_cat_capitolo.data_cancellazione 			is null
        group by	capitolo_importi.elem_id,capitolo_imp_tipo.elem_det_tipo_code,
    		capitolo_imp_periodo.anno),
    importi_capitoli_anno3 as (select 		capitolo_importi.elem_id,
                capitolo_imp_periodo.anno 				BIL_ELE_IMP_ANNO,
                capitolo_imp_tipo.elem_det_tipo_code 	TIPO_IMP,
                sum(capitolo_importi.elem_det_importo) stanziamento_fpv_anno3      
    from 		siac_t_bil_elem_det 		capitolo_importi,
                siac_d_bil_elem_det_tipo 	capitolo_imp_tipo,
                siac_t_periodo 				capitolo_imp_periodo,
                siac_t_bil_elem 			capitolo,
                siac_d_bil_elem_tipo 		tipo_elemento,                 
                siac_d_bil_elem_stato 		stato_capitolo, 
                siac_r_bil_elem_stato 		r_capitolo_stato,
                siac_d_bil_elem_categoria 	cat_del_capitolo,
                siac_r_bil_elem_categoria 	r_cat_capitolo
        where 	capitolo.elem_id	=	capitolo_importi.elem_id 
            and	capitolo.elem_tipo_id=tipo_elemento.elem_tipo_id 
            and	capitolo_importi.elem_det_tipo_id=capitolo_imp_tipo.elem_det_tipo_id 		
            and	capitolo_imp_periodo.periodo_id=capitolo_importi.periodo_id 	
            and	capitolo.elem_id				=	r_capitolo_stato.elem_id			
            and	r_capitolo_stato.elem_stato_id	=	stato_capitolo.elem_stato_id
            and	capitolo.elem_id				=	r_cat_capitolo.elem_id				
            and	r_cat_capitolo.elem_cat_id		=	cat_del_capitolo.elem_cat_id
            and capitolo_importi.ente_proprietario_id 	=p_ente_prop_id  
            and capitolo.bil_id					= id_bil					
            and	tipo_elemento.elem_tipo_code = elemTipoCode   
            and capitolo_imp_tipo.elem_det_tipo_code = TipoImpComp    --'STA' 			  
            and	capitolo_imp_periodo.anno = annoCapImp2 --p_anno +2      		
            and	stato_capitolo.elem_stato_code	=	'VA'								        		
            	--04/08/2016: aggiunto FPVC
            and	cat_del_capitolo.elem_cat_code	in(	'FPV','FPVC')							
            and	now() between capitolo_importi.validita_inizio and coalesce (capitolo_importi.validita_fine, now())
            and	now() between capitolo_imp_periodo.validita_inizio and coalesce (capitolo_imp_periodo.validita_fine, now())
            and	now() between capitolo_imp_tipo.validita_inizio and coalesce (capitolo_imp_tipo.validita_fine, now())
            and	now() between capitolo.validita_inizio and coalesce (capitolo.validita_fine, now())
            and	now() between tipo_elemento.validita_inizio and coalesce (tipo_elemento.validita_fine, now())
            and	now() between stato_capitolo.validita_inizio and coalesce (stato_capitolo.validita_fine, now())
            and	now() between r_capitolo_stato.validita_inizio and coalesce (r_capitolo_stato.validita_fine, now())
            and	now() between cat_del_capitolo.validita_inizio and coalesce (cat_del_capitolo.validita_fine, now())
            and	now() between r_cat_capitolo.validita_inizio and coalesce (r_cat_capitolo.validita_fine, now())
            and	capitolo_importi.data_cancellazione 		is null
            and	capitolo_imp_tipo.data_cancellazione 		is null
            and	capitolo_imp_periodo.data_cancellazione 	is null
            and	capitolo.data_cancellazione 				is null
            and	tipo_elemento.data_cancellazione 			is null
            and	stato_capitolo.data_cancellazione 			is null 
            and	r_capitolo_stato.data_cancellazione 		is null
            and cat_del_capitolo.data_cancellazione 		is null
            and	r_cat_capitolo.data_cancellazione 			is null
        group by	capitolo_importi.elem_id,capitolo_imp_tipo.elem_det_tipo_code,
            capitolo_imp_periodo.anno)           
    select strutt_capitoli.missione_tipo_desc			missione_tipo_desc,
		strutt_capitoli.missione_code				missione_code,
		strutt_capitoli.missione_desc				missione_desc,
		strutt_capitoli.programma_tipo_desc			programma_tipo_desc,
		strutt_capitoli.programma_code				programma_code,
		strutt_capitoli.programma_desc				programma_desc,
        capitoli.elem_code							elem_code, 
        capitoli.elem_desc							elem_desc, 
        capitoli.elem_code2							elem_code2,
        capitoli.elem_desc2							elem_desc2, 
        capitoli.elem_code3							elem_code3,
        capitoli.elem_id							elem_id,
        COALESCE(SUM(importi_capitoli_anno1.stanziamento_fpv_anno1),0) stanziamento_fpv_anno1,
        COALESCE(SUM(importi_capitoli_anno2.stanziamento_fpv_anno2),0) stanziamento_fpv_anno2,
        COALESCE(SUM(importi_capitoli_anno3.stanziamento_fpv_anno3),0) stanziamento_fpv_anno3,
        0 fondo_pluri_anno_prec
    from  strutt_capitoli 
        full join capitoli 
            on (capitoli.programma_id = strutt_capitoli.programma_id
                AND capitoli.macroag_id = strutt_capitoli.macroag_id)          
        left join importi_capitoli_anno1
            on importi_capitoli_anno1.elem_id = capitoli.elem_id
        left join importi_capitoli_anno2
            on importi_capitoli_anno2.elem_id = capitoli.elem_id
        left join importi_capitoli_anno3
            on importi_capitoli_anno3.elem_id = capitoli.elem_id
    group by strutt_capitoli.missione_tipo_desc, strutt_capitoli.missione_code, 
    	strutt_capitoli.missione_desc, strutt_capitoli.programma_tipo_desc, 
        strutt_capitoli.programma_code, strutt_capitoli.programma_desc,
        capitoli.elem_code, capitoli.elem_desc , capitoli.elem_code2 ,
        capitoli.elem_desc2 , capitoli.elem_code3, capitoli.elem_id
loop
	missione_tipo_desc:= classifBilRec.missione_tipo_desc;
    missione_code:= classifBilRec.missione_code;
    missione_desc:= classifBilRec.missione_desc;
    programma_tipo_desc:= classifBilRec.programma_tipo_desc;
    programma_code:= classifBilRec.programma_code;
    programma_desc:= classifBilRec.programma_desc;
  	bil_elem_code:=  classifBilRec.elem_code;
  	bil_elem_desc:=  classifBilRec.elem_desc;
  	bil_elem_code2:=  classifBilRec.elem_code2;
  	bil_elem_desc2:=  classifBilRec.elem_desc2;
  	bil_elem_code3:=  classifBilRec.elem_code3;
    
    bil_anno:=p_anno;
    
    if annoProspInt = annoBilInt then
		fondo_plur_anno_prec_a=classifBilRec.fondo_pluri_anno_prec;
        fondo_plur_anno_h=classifBilRec.stanziamento_fpv_anno1;
   	elsif  annoProspInt = annoBilInt+1 and a_dacapfpv=true then
    	fondo_plur_anno_prec_a=classifBilRec.stanziamento_fpv_anno1;
        fondo_plur_anno_h=classifBilRec.stanziamento_fpv_anno2;
    elsif  annoProspInt = annoBilInt+2 and a_dacapfpv=true then
    	fondo_plur_anno_prec_a=classifBilRec.stanziamento_fpv_anno2;
        fondo_plur_anno_h=classifBilRec.stanziamento_fpv_anno3;
    end if;      
    
    if  annoProspInt > annoBilInt and a_dacapfpv=false and flagretrocomp=false then

			--il campo spese_impe_anni_prec_b non viene piu' calcolato in questa
            --procedura.
	      spese_impe_anni_prec_b=0;
           
        /*  select COALESCE(sum(e.cronop_elem_det_importo),0) into
          spese_impe_anni_prec_b
          from siac_t_programma pr, siac_t_cronop a, 
          siac_t_bil b, siac_t_periodo c,
          siac_t_cronop_elem d, siac_d_bil_elem_tipo dt,
          siac_t_cronop_elem_det e, siac_t_periodo f,
          siac_r_cronop_elem_class rcl2, siac_d_class_tipo clt2, siac_t_class cl2,
          siac_r_cronop_stato stc , siac_d_cronop_stato stct,
          siac_r_programma_stato stpr, siac_d_programma_stato stprt
          where pr.ente_proprietario_id=p_ente_prop_id 
          and pr.programma_id=a.programma_id
          and a.bil_id = b.bil_id
          and b.periodo_id=c.periodo_id
          and c.anno = p_anno -- anno bilancio
          and a.usato_per_fpv::boolean = conflagfpv
          and d.cronop_id=a.cronop_id
          and d.cronop_elem_id=e.cronop_elem_id
          and dt.elem_tipo_id=d.elem_tipo_id
          and e.anno_entrata::integer < p_anno_prospetto::integer-1 -- anno prospetto  
          and e.periodo_id = f.periodo_id
          and f.anno= (p_anno_prospetto::integer-1)::varchar -- anno prospetto
          and rcl2.cronop_elem_id = d.cronop_elem_id
          and rcl2.classif_id=cl2.classif_id
          and cl2.classif_tipo_id=clt2.classif_tipo_id
          and clt2.classif_tipo_code='PROGRAMMA'
          and cl2.classif_code=classifBilRec.programma_code
          and stc.cronop_id=a.cronop_id
          and stc.cronop_stato_id=stct.cronop_stato_id
          and stct.cronop_stato_code='VA'
          and stpr.programma_id=pr.programma_id
          and stpr.programma_stato_id=stprt.programma_stato_id
          and stprt.programma_stato_code='VA'
          and stpr.data_cancellazione is null
          and stc.data_cancellazione is null
          and a.data_cancellazione is null
          and pr.data_cancellazione is null
          and b.data_cancellazione is null
          and c.data_cancellazione is null
          and d.data_cancellazione is null
          and e.data_cancellazione is null
          and rcl2.data_cancellazione is null;		*/
       	    
          spese_da_impeg_anno1_d=0;
        
          select COALESCE(sum(e.cronop_elem_det_importo),0) into
          spese_da_impeg_anno1_d 
          from siac_t_programma pr, siac_t_cronop a, 
          siac_t_bil b, siac_t_periodo c,
          siac_t_cronop_elem d, siac_d_bil_elem_tipo dt,
          siac_t_cronop_elem_det e, siac_t_periodo f,
          siac_r_cronop_elem_class rcl2, siac_d_class_tipo clt2, siac_t_class cl2,
          siac_r_cronop_stato stc , siac_d_cronop_stato stct,
          siac_r_programma_stato stpr, siac_d_programma_stato stprt
          where pr.ente_proprietario_id= p_ente_prop_id
          and pr.programma_id=a.programma_id
          and a.bil_id = b.bil_id
          and b.periodo_id=c.periodo_id
          and c.anno=p_anno -- anno bilancio
          and a.usato_per_fpv::boolean = conflagfpv
          and d.cronop_id=a.cronop_id
          and d.cronop_elem_id=e.cronop_elem_id
          and dt.elem_tipo_id=d.elem_tipo_id
          and e.anno_entrata = (p_anno_prospetto::integer -1)::varchar -- anno prospetto 
          and e.periodo_id = f.periodo_id
          and f.anno::integer=p_anno_prospetto::integer  -- anno prospetto + 1
          and rcl2.cronop_elem_id = d.cronop_elem_id
          and rcl2.classif_id=cl2.classif_id
          and cl2.classif_tipo_id=clt2.classif_tipo_id
          and clt2.classif_tipo_code='PROGRAMMA'
          and cl2.classif_code=classifBilRec.programma_code
          and d.cronop_elem_code=classifBilRec.elem_code 
  		  and d.cronop_elem_code2=classifBilRec.elem_code2 
  		  and d.cronop_elem_code3=classifBilRec.elem_code3
          and stc.cronop_id=a.cronop_id
          and stc.cronop_stato_id=stct.cronop_stato_id
          and stct.cronop_stato_code='VA'
          and stpr.programma_id=pr.programma_id
          and stpr.programma_stato_id=stprt.programma_stato_id
          and stprt.programma_stato_code='VA'
          and stpr.data_cancellazione is null
          and stc.data_cancellazione is null
          and a.data_cancellazione is null
          and pr.data_cancellazione is null
          and b.data_cancellazione is null
          and c.data_cancellazione is null
          and d.data_cancellazione is null
          and e.data_cancellazione is null
          and rcl2.data_cancellazione is null;

          spese_da_impeg_anno2_e=0;  
                  
          select COALESCE(sum(e.cronop_elem_det_importo),0) into
          spese_da_impeg_anno2_e  
          from siac_t_programma pr, siac_t_cronop a, 
          siac_t_bil b, siac_t_periodo c,
          siac_t_cronop_elem d, siac_d_bil_elem_tipo dt,
          siac_t_cronop_elem_det e, siac_t_periodo f,
          --siac_r_cronop_elem_class rcl1, siac_d_class_tipo clt1,siac_t_class cl1, 
          siac_r_cronop_elem_class rcl2, siac_d_class_tipo clt2, siac_t_class cl2,
          siac_r_cronop_stato stc , siac_d_cronop_stato stct,
          siac_r_programma_stato stpr, siac_d_programma_stato stprt
          where pr.ente_proprietario_id=p_ente_prop_id 
          and pr.programma_id=a.programma_id
          and a.bil_id = b.bil_id
          and b.periodo_id=c.periodo_id
          and c.anno=p_anno -- anno di bilancio
          and a.usato_per_fpv::boolean = conflagfpv
          and d.cronop_id=a.cronop_id
          and d.cronop_elem_id=e.cronop_elem_id
          and dt.elem_tipo_id=d.elem_tipo_id
          and e.anno_entrata =(p_anno_prospetto::integer-1)::varchar -- anno prospetto 
          and e.periodo_id = f.periodo_id
          and f.anno::integer=p_anno_prospetto::integer+1 -- anno prospetto + 2
          and rcl2.cronop_elem_id = d.cronop_elem_id
          and rcl2.classif_id=cl2.classif_id
          and cl2.classif_tipo_id=clt2.classif_tipo_id
          and clt2.classif_tipo_code='PROGRAMMA'
          and cl2.classif_code=classifBilRec.programma_code
          and d.cronop_elem_code=classifBilRec.elem_code 
  		  and d.cronop_elem_code2=classifBilRec.elem_code2 
  		  and d.cronop_elem_code3=classifBilRec.elem_code3
          and stc.cronop_id=a.cronop_id
          and stc.cronop_stato_id=stct.cronop_stato_id
          and stct.cronop_stato_code='VA'
          and stpr.programma_id=pr.programma_id
          and stpr.programma_stato_id=stprt.programma_stato_id
          and stprt.programma_stato_code='VA'
          and stpr.data_cancellazione is null
          and stc.data_cancellazione is null
          and a.data_cancellazione is null
          and pr.data_cancellazione is null
          and b.data_cancellazione is null
          and c.data_cancellazione is null
          and d.data_cancellazione is null
          and e.data_cancellazione is null
          and rcl2.data_cancellazione is null;

          spese_da_impeg_anni_succ_f=0;
                  
          select COALESCE(sum(e.cronop_elem_det_importo),0) into
          spese_da_impeg_anni_succ_f 
          from siac_t_programma pr, siac_t_cronop a, 
          siac_t_bil b, siac_t_periodo c,
          siac_t_cronop_elem d, siac_d_bil_elem_tipo dt,
          siac_t_cronop_elem_det e, siac_t_periodo f, 
          siac_r_cronop_elem_class rcl2, siac_d_class_tipo clt2, siac_t_class cl2,
          siac_r_cronop_stato stc , siac_d_cronop_stato stct,
          siac_r_programma_stato stpr, siac_d_programma_stato stprt
          where pr.ente_proprietario_id=p_ente_prop_id 
          and pr.programma_id=a.programma_id
          and a.bil_id = b.bil_id
          and b.periodo_id=c.periodo_id
          and c.anno=p_anno -- anno bilancio
          and a.usato_per_fpv::boolean = conflagfpv
          and d.cronop_id=a.cronop_id
          and d.cronop_elem_id=e.cronop_elem_id
          and dt.elem_tipo_id=d.elem_tipo_id
          and e.anno_entrata =(p_anno_prospetto::INTEGER-1)::varchar -- anno prospetto 
          and e.periodo_id = f.periodo_id
          and f.anno::integer > p_anno_prospetto::INTEGER+1 -- anno prospetto + 2
          and rcl2.cronop_elem_id = d.cronop_elem_id
          and rcl2.classif_id=cl2.classif_id
          and cl2.classif_tipo_id=clt2.classif_tipo_id
          and clt2.classif_tipo_code='PROGRAMMA'
          and cl2.classif_code=classifBilRec.programma_code
          and d.cronop_elem_code=classifBilRec.elem_code 
  		  and d.cronop_elem_code2=classifBilRec.elem_code2 
  		  and d.cronop_elem_code3=classifBilRec.elem_code3
          and stc.cronop_id=a.cronop_id
          and stc.cronop_stato_id=stct.cronop_stato_id
          and stct.cronop_stato_code='VA'
          and stpr.programma_id=pr.programma_id
          and stpr.programma_stato_id=stprt.programma_stato_id
          and stprt.programma_stato_code='VA'
          and stpr.data_cancellazione is null
          and stc.data_cancellazione is null
          and a.data_cancellazione is null
          and pr.data_cancellazione is null
          and b.data_cancellazione is null
          and c.data_cancellazione is null
          and d.data_cancellazione is null
          and e.data_cancellazione is null
          and rcl2.data_cancellazione is null;


        if  annoProspInt = annoBilInt+1 then
          	fondo_plur_anno_prec_a=classifBilRec.fondo_pluri_anno_prec - spese_impe_anni_prec_b +
            spese_da_impeg_anno1_d + spese_da_impeg_anno2_e + spese_da_impeg_anni_succ_f;
          	raise notice 'Anno prospetto = %',annoProspInt;
            
        elsif  annoProspInt = annoBilInt+2  then
          fondo_plur_anno_prec_a= - spese_impe_anni_prec_b +
          spese_da_impeg_anno1_d + spese_da_impeg_anno2_e + spese_da_impeg_anni_succ_f;
          	
          spese_impe_anni_prec_b=0;
            --il campo spese_impe_anni_prec_b non viene piu' calcolato in questa
            --procedura.
         /* select COALESCE(sum(e.cronop_elem_det_importo),0) into
          spese_impe_anni_prec_b
          from siac_t_programma pr, siac_t_cronop a, 
          siac_t_bil b, siac_t_periodo c,
          siac_t_cronop_elem d, siac_d_bil_elem_tipo dt,
          siac_t_cronop_elem_det e, siac_t_periodo f,
          siac_r_cronop_elem_class rcl2, siac_d_class_tipo clt2, siac_t_class cl2,
          siac_r_cronop_stato stc , siac_d_cronop_stato stct,
          siac_r_programma_stato stpr, siac_d_programma_stato stprt
          where pr.ente_proprietario_id=p_ente_prop_id 
          and pr.programma_id=a.programma_id
          and a.bil_id = b.bil_id
          and b.periodo_id=c.periodo_id
          and c.anno = p_anno -- anno bilancio
          and a.usato_per_fpv::boolean = conflagfpv
          and d.cronop_id=a.cronop_id
          and d.cronop_elem_id=e.cronop_elem_id
          and dt.elem_tipo_id=d.elem_tipo_id
          and e.anno_entrata::integer < p_anno_prospetto::integer-2 -- anno prospetto  
          and e.periodo_id = f.periodo_id
          and f.anno= (p_anno_prospetto::integer-2)::varchar -- anno prospetto
          and rcl2.cronop_elem_id = d.cronop_elem_id
          and rcl2.classif_id=cl2.classif_id
          and cl2.classif_tipo_id=clt2.classif_tipo_id
          and clt2.classif_tipo_code='PROGRAMMA'
          and cl2.classif_code=classifBilRec.programma_code
          and stc.cronop_id=a.cronop_id
          and stc.cronop_stato_id=stct.cronop_stato_id
          and stct.cronop_stato_code='VA'
          and stpr.programma_id=pr.programma_id
          and stpr.programma_stato_id=stprt.programma_stato_id
          and stprt.programma_stato_code='VA'
          and stpr.data_cancellazione is null
          and stc.data_cancellazione is null
          and a.data_cancellazione is null
          and pr.data_cancellazione is null
          and b.data_cancellazione is null
          and c.data_cancellazione is null
          and d.data_cancellazione is null
          and e.data_cancellazione is null
          and rcl2.data_cancellazione is null;		*/
       	    
          spese_da_impeg_anno1_d=0;
        
          select COALESCE(sum(e.cronop_elem_det_importo),0) into
          spese_da_impeg_anno1_d
          from siac_t_programma pr, siac_t_cronop a, 
          siac_t_bil b, siac_t_periodo c,
          siac_t_cronop_elem d, siac_d_bil_elem_tipo dt,
          siac_t_cronop_elem_det e, siac_t_periodo f, 
          siac_r_cronop_elem_class rcl2, siac_d_class_tipo clt2, siac_t_class cl2,
          siac_r_cronop_stato stc , siac_d_cronop_stato stct,
          siac_r_programma_stato stpr, siac_d_programma_stato stprt
          where pr.ente_proprietario_id= p_ente_prop_id
          and pr.programma_id=a.programma_id
          and a.bil_id = b.bil_id
          and b.periodo_id=c.periodo_id
          and c.anno=p_anno -- anno bilancio
          and a.usato_per_fpv::boolean = conflagfpv
          and d.cronop_id=a.cronop_id
          and d.cronop_elem_id=e.cronop_elem_id
          and dt.elem_tipo_id=d.elem_tipo_id
          and e.anno_entrata = (p_anno_prospetto::integer -2)::varchar -- anno prospetto 
          and e.periodo_id = f.periodo_id
          and f.anno::integer=p_anno_prospetto::integer-1  -- anno prospetto + 1
          and rcl2.cronop_elem_id = d.cronop_elem_id
          and rcl2.classif_id=cl2.classif_id
          and cl2.classif_tipo_id=clt2.classif_tipo_id
          and clt2.classif_tipo_code='PROGRAMMA'
          and cl2.classif_code=classifBilRec.programma_code
          and d.cronop_elem_code=classifBilRec.elem_code 
  		  and d.cronop_elem_code2=classifBilRec.elem_code2 
  		  and d.cronop_elem_code3=classifBilRec.elem_code3
          and stc.cronop_id=a.cronop_id
          and stc.cronop_stato_id=stct.cronop_stato_id
          and stct.cronop_stato_code='VA'
          and stpr.programma_id=pr.programma_id
          and stpr.programma_stato_id=stprt.programma_stato_id
          and stprt.programma_stato_code='VA'
          and stpr.data_cancellazione is null
          and stc.data_cancellazione is null
          and a.data_cancellazione is null
          and pr.data_cancellazione is null
          and b.data_cancellazione is null
          and c.data_cancellazione is null
          and d.data_cancellazione is null
          and e.data_cancellazione is null
          and rcl2.data_cancellazione is null;

          spese_da_impeg_anno2_e=0;  
                  
          select COALESCE(sum(e.cronop_elem_det_importo),0) into
          spese_da_impeg_anno2_e  
          from siac_t_programma pr, siac_t_cronop a, 
          siac_t_bil b, siac_t_periodo c,
          siac_t_cronop_elem d, siac_d_bil_elem_tipo dt,
          siac_t_cronop_elem_det e, siac_t_periodo f,
          siac_r_cronop_elem_class rcl2, siac_d_class_tipo clt2, siac_t_class cl2,
          siac_r_cronop_stato stc , siac_d_cronop_stato stct,
          siac_r_programma_stato stpr, siac_d_programma_stato stprt
          where pr.ente_proprietario_id=p_ente_prop_id 
          and pr.programma_id=a.programma_id
          and a.bil_id = b.bil_id
          and b.periodo_id=c.periodo_id
          and c.anno=p_anno -- anno di bilancio
          and a.usato_per_fpv::boolean = conflagfpv
          and d.cronop_id=a.cronop_id
          and d.cronop_elem_id=e.cronop_elem_id
          and dt.elem_tipo_id=d.elem_tipo_id
          and e.anno_entrata =(p_anno_prospetto::integer-2)::varchar -- anno prospetto 
          and e.periodo_id = f.periodo_id
          and f.anno::integer=p_anno_prospetto::integer -- anno prospetto + 2
          and rcl2.cronop_elem_id = d.cronop_elem_id
          and rcl2.classif_id=cl2.classif_id
          and cl2.classif_tipo_id=clt2.classif_tipo_id
          and clt2.classif_tipo_code='PROGRAMMA'
          and cl2.classif_code=classifBilRec.programma_code
          and d.cronop_elem_code=classifBilRec.elem_code 
  		  and d.cronop_elem_code2=classifBilRec.elem_code2 
  		  and d.cronop_elem_code3=classifBilRec.elem_code3          
          and stc.cronop_id=a.cronop_id
          and stc.cronop_stato_id=stct.cronop_stato_id
          and stct.cronop_stato_code='VA'
          and stpr.programma_id=pr.programma_id
          and stpr.programma_stato_id=stprt.programma_stato_id
          and stprt.programma_stato_code='VA'
          and stpr.data_cancellazione is null
          and stc.data_cancellazione is null
          and a.data_cancellazione is null
          and pr.data_cancellazione is null
          and b.data_cancellazione is null
          and c.data_cancellazione is null
          and d.data_cancellazione is null
          and e.data_cancellazione is null
          and rcl2.data_cancellazione is null;

          spese_da_impeg_anni_succ_f=0;
                  
          select COALESCE(sum(e.cronop_elem_det_importo),0) into
          spese_da_impeg_anni_succ_f
          from siac_t_programma pr, siac_t_cronop a, 
          siac_t_bil b, siac_t_periodo c,
          siac_t_cronop_elem d, siac_d_bil_elem_tipo dt,
          siac_t_cronop_elem_det e, siac_t_periodo f,
          siac_r_cronop_elem_class rcl2, siac_d_class_tipo clt2, siac_t_class cl2,
          siac_r_cronop_stato stc , siac_d_cronop_stato stct,
          siac_r_programma_stato stpr, siac_d_programma_stato stprt
          where pr.ente_proprietario_id=p_ente_prop_id 
          and pr.programma_id=a.programma_id
          and a.bil_id = b.bil_id
          and b.periodo_id=c.periodo_id
          and c.anno=p_anno -- anno bilancio
          and a.usato_per_fpv::boolean = conflagfpv
          and d.cronop_id=a.cronop_id
          and d.cronop_elem_id=e.cronop_elem_id
          and dt.elem_tipo_id=d.elem_tipo_id
          and e.anno_entrata =(p_anno_prospetto::INTEGER-2)::varchar -- anno prospetto 
          and e.periodo_id = f.periodo_id
          and f.anno::integer > p_anno_prospetto::INTEGER -- anno prospetto + 2
          and rcl2.cronop_elem_id = d.cronop_elem_id
          and rcl2.classif_id=cl2.classif_id
          and cl2.classif_tipo_id=clt2.classif_tipo_id
          and clt2.classif_tipo_code='PROGRAMMA'
          and cl2.classif_code=classifBilRec.programma_code
          and d.cronop_elem_code=classifBilRec.elem_code 
  		  and d.cronop_elem_code2=classifBilRec.elem_code2 
  		  and d.cronop_elem_code3=classifBilRec.elem_code3          
          and stc.cronop_id=a.cronop_id
          and stc.cronop_stato_id=stct.cronop_stato_id
          and stct.cronop_stato_code='VA'
          and stpr.programma_id=pr.programma_id
          and stpr.programma_stato_id=stprt.programma_stato_id
          and stprt.programma_stato_code='VA'
          and stpr.data_cancellazione is null
          and stc.data_cancellazione is null
          and a.data_cancellazione is null
          and pr.data_cancellazione is null
          and b.data_cancellazione is null
          and c.data_cancellazione is null
          and d.data_cancellazione is null
          and e.data_cancellazione is null
          and rcl2.data_cancellazione is null;
          --and rcl1.data_cancellazione is null

		fondo_plur_anno_prec_a=fondo_plur_anno_prec_a+classifBilRec.fondo_pluri_anno_prec - spese_impe_anni_prec_b +
            spese_da_impeg_anno1_d + spese_da_impeg_anno2_e + spese_da_impeg_anni_succ_f;            
            
        end if; --if annoProspInt = annoBilInt+1 then 

       end if; -- if  annoProspInt > annoBilInt

/*raise notice 'programma_code = %', programma_code;
raise notice '  spese_impe_anni_prec_b = %', spese_impe_anni_prec_b;
raise notice '  quota_fond_plur_anni_prec_c = %', quota_fond_plur_anni_prec_c;
raise notice '  spese_da_impeg_anno1_d = %', spese_da_impeg_anno1_d;
raise notice '  spese_da_impeg_anno2_e = %', spese_da_impeg_anno2_e;
raise notice '  spese_da_impeg_anni_succ_f = %', spese_da_impeg_anni_succ_f;
raise notice '  spese_da_impeg_non_def_g = %', spese_da_impeg_non_def_g;
*/

/* 17/05/2016: al momento questi campi sono impostati a zero in attesa di
	capire le modalita' di valorizzazione */
		spese_impe_anni_prec_b=0;
        quota_fond_plur_anni_prec_c=0;
        spese_da_impeg_anno1_d=0;
        spese_da_impeg_anno2_e=0;  
        spese_da_impeg_anni_succ_f=0;
        spese_da_impeg_non_def_g=0;
        
        /*COLONNA B -Spese impegnate negli anni precedenti con copertura costituita dal FPV e imputate all’esercizio N
		Occorre prendere tutte le quote di spesa previste nei cronoprogrammi con FPV selezionato, 
		con anno di entrata 2016 (o precedenti) e anno di spesa uguale al 2017.*/ 
       if flagretrocomp = false then
	   		--il campo spese_impe_anni_prec_b non viene piu' calcolato in questa
            --procedura.
            
          /*select COALESCE(sum(e.cronop_elem_det_importo),0) into
          spese_impe_anni_prec_b
          from siac_t_programma pr, siac_t_cronop a, 
          siac_t_bil b, siac_t_periodo c,
          siac_t_cronop_elem d, siac_d_bil_elem_tipo dt,
          siac_t_cronop_elem_det e, siac_t_periodo f,
          siac_r_cronop_elem_class rcl2, siac_d_class_tipo clt2, siac_t_class cl2,
          siac_r_cronop_stato stc , siac_d_cronop_stato stct,
          siac_r_programma_stato stpr, siac_d_programma_stato stprt
          where pr.ente_proprietario_id=p_ente_prop_id 
          and pr.programma_id=a.programma_id
          and a.bil_id = b.bil_id
          and b.periodo_id=c.periodo_id
          and c.anno = p_anno -- anno bilancio
          and a.usato_per_fpv::boolean = conflagfpv
          and d.cronop_id=a.cronop_id
          and d.cronop_elem_id=e.cronop_elem_id
          and dt.elem_tipo_id=d.elem_tipo_id
          and e.anno_entrata::integer < p_anno_prospetto::integer -- anno prospetto  
          and e.periodo_id = f.periodo_id
          and f.anno=p_anno_prospetto -- anno prospetto
          and rcl2.cronop_elem_id = d.cronop_elem_id
          and rcl2.classif_id=cl2.classif_id
          and cl2.classif_tipo_id=clt2.classif_tipo_id
          and clt2.classif_tipo_code='PROGRAMMA'
          and cl2.classif_code=classifBilRec.programma_code
          and stc.cronop_id=a.cronop_id
          and stc.cronop_stato_id=stct.cronop_stato_id
          and stct.cronop_stato_code='VA'
          and stpr.programma_id=pr.programma_id
          and stpr.programma_stato_id=stprt.programma_stato_id
          and stprt.programma_stato_code='VA'
          and stpr.data_cancellazione is null
          and stc.data_cancellazione is null
          and a.data_cancellazione is null
          and pr.data_cancellazione is null
          and b.data_cancellazione is null
          and c.data_cancellazione is null
          and d.data_cancellazione is null
          and e.data_cancellazione is null
          and rcl2.data_cancellazione is null;*/
          
         -- raise notice 'spese_impe_anni_prec_b %' , spese_impe_anni_prec_b; 
        
        /* 3.	Colonna (c) – e' data dalla differenza tra la colonna b e la colonna a genera e
        rappresenta il valore del fondo costituito che verra' utilizzato negli anni 2018 e seguenti; */
        quota_fond_plur_anni_prec_c=fondo_plur_anno_prec_a-spese_impe_anni_prec_b ;  
       -- raise notice 'quota_fond_plur_anni_prec_c = %', quota_fond_plur_anni_prec_c;  
        
        /*
        Colonna d – Occorre prendere tutte le quote di spesa previste nei cronoprogrammi 
        con FPV selezionato, con anno di entrata 2017 e anno di spesa uguale al 2018;
        */
          
          select COALESCE(sum(e.cronop_elem_det_importo),0) into
          spese_da_impeg_anno1_d
          from siac_t_programma pr, siac_t_cronop a, 
          siac_t_bil b, siac_t_periodo c,
          siac_t_cronop_elem d, siac_d_bil_elem_tipo dt,
          siac_t_cronop_elem_det e, siac_t_periodo f, 
          siac_r_cronop_elem_class rcl2, siac_d_class_tipo clt2, siac_t_class cl2,
          siac_r_cronop_stato stc , siac_d_cronop_stato stct,
          siac_r_programma_stato stpr, siac_d_programma_stato stprt
          where pr.ente_proprietario_id= p_ente_prop_id
          and pr.programma_id=a.programma_id
          and a.bil_id = b.bil_id
          and b.periodo_id=c.periodo_id
          and c.anno=p_anno -- anno bilancio
          and a.usato_per_fpv::boolean = conflagfpv
          and d.cronop_id=a.cronop_id
          and d.cronop_elem_id=e.cronop_elem_id
          and dt.elem_tipo_id=d.elem_tipo_id
          and e.anno_entrata = p_anno_prospetto -- anno prospetto 
          and e.periodo_id = f.periodo_id
          and f.anno::integer=p_anno_prospetto::integer+1  -- anno prospetto + 1
          and rcl2.cronop_elem_id = d.cronop_elem_id
          and rcl2.classif_id=cl2.classif_id
          and cl2.classif_tipo_id=clt2.classif_tipo_id
          and clt2.classif_tipo_code='PROGRAMMA'
          and cl2.classif_code=classifBilRec.programma_code
          and d.cronop_elem_code=classifBilRec.elem_code 
  		  and d.cronop_elem_code2=classifBilRec.elem_code2 
  		  and d.cronop_elem_code3=classifBilRec.elem_code3          
          and stc.cronop_id=a.cronop_id
          and stc.cronop_stato_id=stct.cronop_stato_id
          and stct.cronop_stato_code='VA'
          and stpr.programma_id=pr.programma_id
          and stpr.programma_stato_id=stprt.programma_stato_id
          and stprt.programma_stato_code='VA'
          and stpr.data_cancellazione is null
          and stc.data_cancellazione is null
          and a.data_cancellazione is null
          and pr.data_cancellazione is null
          and b.data_cancellazione is null
          and c.data_cancellazione is null
          and d.data_cancellazione is null
          and e.data_cancellazione is null
          and rcl2.data_cancellazione is null;
          --and rcl1.data_cancellazione is null;
              
        
        /*
        Colonna e - Occorre prendere tutte le quote di spesa previste nei cronoprogrammi 
        con FPV selezionato, con anno di entrata 2017 e anno di spesa uguale al 2019;
        */
                  
          select COALESCE(sum(e.cronop_elem_det_importo),0) into
          spese_da_impeg_anno2_e
          from siac_t_programma pr, siac_t_cronop a, 
          siac_t_bil b, siac_t_periodo c,
          siac_t_cronop_elem d, siac_d_bil_elem_tipo dt,
          siac_t_cronop_elem_det e, siac_t_periodo f, 
          siac_r_cronop_elem_class rcl2, siac_d_class_tipo clt2, siac_t_class cl2,
          siac_r_cronop_stato stc , siac_d_cronop_stato stct,
          siac_r_programma_stato stpr, siac_d_programma_stato stprt
          where pr.ente_proprietario_id=p_ente_prop_id 
          and pr.programma_id=a.programma_id
          and a.bil_id = b.bil_id
          and b.periodo_id=c.periodo_id
          and c.anno=p_anno -- anno di bilancio
          and a.usato_per_fpv::boolean = conflagfpv
          and d.cronop_id=a.cronop_id
          and d.cronop_elem_id=e.cronop_elem_id
          and dt.elem_tipo_id=d.elem_tipo_id
          and e.anno_entrata =p_anno_prospetto -- anno prospetto 
          and e.periodo_id = f.periodo_id
          and f.anno::integer=p_anno_prospetto::integer+2 -- anno prospetto + 2
          and rcl2.cronop_elem_id = d.cronop_elem_id
          and rcl2.classif_id=cl2.classif_id
          and cl2.classif_tipo_id=clt2.classif_tipo_id
          and clt2.classif_tipo_code='PROGRAMMA'
          and cl2.classif_code=classifBilRec.programma_code
          and d.cronop_elem_code=classifBilRec.elem_code 
  		  and d.cronop_elem_code2=classifBilRec.elem_code2 
  		  and d.cronop_elem_code3=classifBilRec.elem_code3          
          and stc.cronop_id=a.cronop_id
          and stc.cronop_stato_id=stct.cronop_stato_id
          and stct.cronop_stato_code='VA'
          and stpr.programma_id=pr.programma_id
          and stpr.programma_stato_id=stprt.programma_stato_id
          and stprt.programma_stato_code='VA'
          and stpr.data_cancellazione is null
          and stc.data_cancellazione is null
          and a.data_cancellazione is null
          and pr.data_cancellazione is null
          and b.data_cancellazione is null
          and c.data_cancellazione is null
          and d.data_cancellazione is null
          and e.data_cancellazione is null
          and rcl2.data_cancellazione is null;

        
        
        /* Colonna f - Occorre prendere tutte le quote di 
        spesa previste nei cronoprogrammi con FPV selezionato, 
        con anno di entrata 2017 e anno di spesa uguale al 2020 e successivi;*/
                          
          select COALESCE(sum(e.cronop_elem_det_importo),0) into
          spese_da_impeg_anni_succ_f 
          from siac_t_programma pr, siac_t_cronop a, 
          siac_t_bil b, siac_t_periodo c,
          siac_t_cronop_elem d, siac_d_bil_elem_tipo dt,
          siac_t_cronop_elem_det e, siac_t_periodo f, 
          siac_r_cronop_elem_class rcl2, siac_d_class_tipo clt2, siac_t_class cl2,
          siac_r_cronop_stato stc , siac_d_cronop_stato stct,
          siac_r_programma_stato stpr, siac_d_programma_stato stprt
          where pr.ente_proprietario_id=p_ente_prop_id 
          and pr.programma_id=a.programma_id
          and a.bil_id = b.bil_id
          and b.periodo_id=c.periodo_id
          and c.anno=p_anno -- anno bilancio
          and a.usato_per_fpv::boolean = conflagfpv
          and d.cronop_id=a.cronop_id
          and d.cronop_elem_id=e.cronop_elem_id
          and dt.elem_tipo_id=d.elem_tipo_id
          and e.anno_entrata =p_anno_prospetto -- anno prospetto 
          and e.periodo_id = f.periodo_id
          and f.anno::integer > p_anno_prospetto::INTEGER+2 -- anno prospetto + 2
          and rcl2.cronop_elem_id = d.cronop_elem_id
          and rcl2.classif_id=cl2.classif_id
          and cl2.classif_tipo_id=clt2.classif_tipo_id
          and clt2.classif_tipo_code='PROGRAMMA'
          and cl2.classif_code=classifBilRec.programma_code
          and d.cronop_elem_code=classifBilRec.elem_code 
  		  and d.cronop_elem_code2=classifBilRec.elem_code2 
  		  and d.cronop_elem_code3=classifBilRec.elem_code3          
          and stc.cronop_id=a.cronop_id
          and stc.cronop_stato_id=stct.cronop_stato_id
          and stct.cronop_stato_code='VA'
          and stpr.programma_id=pr.programma_id
          and stpr.programma_stato_id=stprt.programma_stato_id
          and stprt.programma_stato_code='VA'
          and stpr.data_cancellazione is null
          and stc.data_cancellazione is null
          and a.data_cancellazione is null
          and pr.data_cancellazione is null
          and b.data_cancellazione is null
          and c.data_cancellazione is null
          and d.data_cancellazione is null
          and e.data_cancellazione is null
          and rcl2.data_cancellazione is null;
        
        /*
        d.	Colonna g – Occorre prendere l’importo previsto nella sezione spese dei progetti. 
        E’ necessario quindi implementare una tipologia “Cronoprogramma da  definire”, 
        agganciato al progetto per il quale sono necessarie solo due informazioni: 
        l’importo e la Missione/Programma. Rimane incognito l’anno relativo alla spesa 
        (anche se apparira' formalmente agganciato al 2017). 
        Nel momento in cui saranno note le altre informazioni relative al progetto, 
        l’ente operera' nel modo consueto, ovvero inserendo una nuova versione di cronoprogramma 
        e selezionandone il relativo FPV. Operativamente e' sufficiente inserire un flag "Cronoprogramma da definire". 
        L'operatore entrera' comunque nelle due maschere (cosi' come sono ad oggi) di entrata e 
        spesa e inserira' l'importo e la spesa agganciandola a uno o piu' missioni per la spesa e analogamente per le entrate... 
        Inserira' 2017 sia nelle entrate che nella spesa. Essendo anno entrata=anno spesa non si creera' FPV 
        ma avendo il Flag "Cronoprogramma da Definire" l'unione delle due informazione generera' il 
        popolamento della colonna G. Questo escamotage peraltro potra' essere utilizzato anche dagli enti 
        che vorranno tracciare la loro 
        programmazione anche laddove non ci sia la generazione di FPV, ovviamente senza flaggare il campo citato.
        */
         
        
        /*5.	La colonna h  e' la somma dalla colonna c alla colonna g. 
        	NON e' piu' calcolata in questa procedura. */
        
    	if h_dacapfpv = false then
        	fondo_plur_anno_h=quota_fond_plur_anni_prec_c+spese_da_impeg_anno1_d+
            	spese_da_impeg_anno2_e+spese_da_impeg_anni_succ_f+spese_da_impeg_non_def_g;
        end if;
     end if; --if flagretrocomp = false then
    
/*raise notice 'programma_codeXXX = %', programma_code;
raise notice '  spese_impe_anni_prec_b = %', spese_impe_anni_prec_b;
raise notice '  quota_fond_plur_anni_prec_c = %', quota_fond_plur_anni_prec_c;
raise notice '  spese_da_impeg_anno1_d = %', spese_da_impeg_anno1_d;
raise notice '  spese_da_impeg_anno2_e = %', spese_da_impeg_anno2_e;
raise notice '  spese_da_impeg_anni_succ_f = %', spese_da_impeg_anni_succ_f;
raise notice '  spese_da_impeg_non_def_g = %', spese_da_impeg_non_def_g;*/
    
  return next;

  bil_anno='';
  missione_tipo_code='';
  missione_tipo_desc='';
  missione_code='';
  missione_desc='';
  programma_tipo_code='';
  programma_tipo_desc='';
  programma_code='';
  programma_desc='';

  fondo_plur_anno_prec_a=0;
  spese_impe_anni_prec_b=0;
  quota_fond_plur_anni_prec_c=0;
  spese_da_impeg_anno1_d=0;
  spese_da_impeg_anno2_e=0;
  spese_da_impeg_anni_succ_f=0;
  spese_da_impeg_non_def_g=0;
  fondo_plur_anno_h=0;        
end loop;  

raise notice 'fine OK';
    exception
    when no_data_found THEN
    raise notice 'nessun dato trovato per struttura bilancio';
    return;
    when others  THEN
  	RTN_MESSAGGIO:='struttura bilancio altro errore';
 	RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
    return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

CREATE OR REPLACE FUNCTION siac."BILR223_allegato_fpv_previsione_dati_gestione_capitolo" (
  p_ente_prop_id integer,
  p_anno varchar,
  p_anno_prospetto varchar
)
RETURNS TABLE (
  missione_code varchar,
  missione_desc varchar,
  programma_code varchar,
  programma_desc varchar,
  importi_capitoli numeric,
  spese_impegnate numeric,
  spese_impegnate_anno1 numeric,
  spese_impegnate_anno2 numeric,
  spese_impegnate_anno_succ numeric,
  importo_avanzo numeric,
  importo_avanzo_anno1 numeric,
  importo_avanzo_anno2 numeric,
  importo_avanzo_anno_succ numeric,
  elem_id integer,
  anno_esercizio varchar,
  bil_elem_code varchar,
  bil_elem_desc varchar,
  bil_elem_code2 varchar,
  bil_elem_desc2 varchar,
  bil_elem_code3 varchar
) AS
$body$
DECLARE

RTN_MESSAGGIO text;
bilancio_id integer;
bilancio_id_prec integer;
cod_fase_operativa varchar;
anno_esercizio varchar;
anno_esercizio_prec varchar;
annoimpimpegni_int integer;
annoprospetto_int integer;
annoprospetto_prec_int varchar;

BEGIN

/*
	12/03/2019: SIAC-6623.
    	Funzione copia della BILR011_allegato_fpv_previsione_con_dati_gestione  
        con in piu' i dati del capitolo FPV.
    	La funzione  serve per il calcolo dei campi relativi alle prime 2 colonne 
        del report BILR223 come avviene per il report BILR011.
*/

/*Se la fase di bilancio e' Previsione allora l''anno di esercizio e il bilancio id saranno
quelli di p_anno-1 per tutte le colonne. 

Se la fase di bilancio e' Esercizio Provvisorio allora l''anno di esercizio e il bilancio id saranno
quelli di p_anno per tutte le colonne tranne quella relativa agli importi dei capitolo (colonna a).
In questo caso l''anno di esercizio e il bilancio id saranno quelli di p_anno-1.

L'anno relativo agli importi dei capitoli e' anno_esercizio_prec
L'anno relativo agli importi degli impegni e' annoImpImpegni_int*/


-- SIAC-6063
/*Aggiunto parametro p_anno_prospetto
Variabile annoImpImpegni_int sostituita da annoprospetto_int
Azzerati importi  spese_impegnate_anno1
                  spese_impegnate_anno2
                  spese_impegnate_anno_succ
                  importo_avanzo_anno1
                  importo_avanzo_anno2
                  importo_avanzo_anno_succ*/

RTN_MESSAGGIO := 'select 1'; 

bilancio_id := null;
bilancio_id_prec := null;

select bil.bil_id, fase_operativa.fase_operativa_code
into   bilancio_id, cod_fase_operativa
from  siac_d_fase_operativa fase_operativa, 
      siac_r_bil_fase_operativa bil_fase_operativa, 
      siac_t_bil bil, 
      siac_t_periodo periodo
where fase_operativa.fase_operativa_id = bil_fase_operativa.fase_operativa_id
and   bil_fase_operativa.bil_id = bil.bil_id
and   periodo.periodo_id = bil.periodo_id
and   fase_operativa.fase_operativa_code in ('P','E','G') -- SIAC-5778 Aggiunto G
and   bil.ente_proprietario_id = p_ente_prop_id
and   periodo.anno = p_anno
and   fase_operativa.data_cancellazione is null
and   bil_fase_operativa.data_cancellazione is null 
and   bil.data_cancellazione is null 
and   periodo.data_cancellazione is null;
 
/*if cod_fase_operativa = 'P' then
  
  anno_esercizio := ((p_anno::integer)-1)::varchar;   

  select a.bil_id 
  into bilancio_id 
  from siac_t_bil a,siac_t_periodo b
  where a.ente_proprietario_id = p_ente_prop_id 
  and b.periodo_id = a.periodo_id
  and b.anno = anno_esercizio;
  
  annoprospetto_int := p_anno_prospetto::integer-1;
  
elsif cod_fase_operativa in ('E','G') then

  anno_esercizio := p_anno;
  annoprospetto_int := p_anno_prospetto::integer;
   
end if;*/
 
  anno_esercizio := ((p_anno::integer)-1)::varchar;   

  select a.bil_id 
  into bilancio_id 
  from siac_t_bil a,siac_t_periodo b
  where a.ente_proprietario_id = p_ente_prop_id 
  and b.periodo_id = a.periodo_id
  and b.anno = anno_esercizio;
  
  annoprospetto_int := p_anno_prospetto::integer;
  
  annoprospetto_prec_int := ((p_anno_prospetto::integer)-1)::varchar;

-- anno_esercizio_prec := ((anno_esercizio::integer)-1)::varchar;
anno_esercizio_prec := ((p_anno::integer)-1)::varchar;

select a.bil_id
into bilancio_id_prec 
from siac_t_bil a,siac_t_periodo b
where a.ente_proprietario_id = p_ente_prop_id 
and b.periodo_id = a.periodo_id
and b.anno = anno_esercizio_prec;

-- annoImpImpegni_int := anno_esercizio::integer; 
-- annoImpImpegni_int := p_anno::integer; -- SIAC-6063

return query
select 
zz.*
from (
select 
tab1.*
from (
with struttura as (
select *
from fnc_bilr_struttura_cap_bilancio_spese (p_ente_prop_id,anno_esercizio,null) -- Potrebbe essere anche anno_esercizio_prec
),
capitoli_anno_prec as (
select 	programma.classif_id programma_id,
		macroaggr.classif_id macroaggregato_id,
       	capitolo.elem_code, capitolo.elem_desc, capitolo.elem_code2,
        capitolo.elem_desc2, capitolo.elem_code3, capitolo.elem_id
from siac_t_bil_elem capitolo,
	 siac_d_bil_elem_tipo tipo_elemento,
     siac_r_bil_elem_stato r_capitolo_stato,
     siac_d_bil_elem_stato stato_capitolo,      
     siac_r_bil_elem_class r_capitolo_programma,
     siac_r_bil_elem_class r_capitolo_macroaggr, 	 
	 siac_d_bil_elem_categoria cat_del_capitolo,
     siac_r_bil_elem_categoria r_cat_capitolo,
     siac_d_class_tipo programma_tipo,
     siac_t_class programma,
     siac_d_class_tipo macroaggr_tipo,
     siac_t_class macroaggr
where capitolo.elem_tipo_id = tipo_elemento.elem_tipo_id 						
and capitolo.elem_id = r_capitolo_stato.elem_id							
and	r_capitolo_stato.elem_stato_id = stato_capitolo.elem_stato_id		
and	capitolo.elem_id = r_capitolo_programma.elem_id							
and capitolo.elem_id = r_capitolo_macroaggr.elem_id							
and programma.classif_tipo_id = programma_tipo.classif_tipo_id 				
and programma.classif_id = r_capitolo_programma.classif_id					
and macroaggr.classif_tipo_id = macroaggr_tipo.classif_tipo_id 			
and macroaggr.classif_id = r_capitolo_macroaggr.classif_id					
and	capitolo.elem_id = r_cat_capitolo.elem_id				
and r_cat_capitolo.elem_cat_id = cat_del_capitolo.elem_cat_id		
and capitolo.ente_proprietario_id = p_ente_prop_id							
and capitolo.bil_id = bilancio_id_prec													
and programma_tipo.classif_tipo_code = 'PROGRAMMA'							
and	macroaggr_tipo.classif_tipo_code = 'MACROAGGREGATO'						
and	tipo_elemento.elem_tipo_code = 'CAP-UG'						     		
and stato_capitolo.elem_stato_code = 'VA' 
and cat_del_capitolo.elem_cat_code in ('FPV','FPVC')    
and	programma_tipo.data_cancellazione 			is null
and	programma.data_cancellazione 				is null
and	macroaggr_tipo.data_cancellazione 			is null
and	macroaggr.data_cancellazione 				is null
and	capitolo.data_cancellazione 				is null
and	tipo_elemento.data_cancellazione 			is null
and	r_capitolo_programma.data_cancellazione 	is null
and	r_capitolo_macroaggr.data_cancellazione 	is null 
and	stato_capitolo.data_cancellazione 			is null 
and	r_capitolo_stato.data_cancellazione 		is null
and	cat_del_capitolo.data_cancellazione 		is null
and	r_cat_capitolo.data_cancellazione           is null
),
capitoli_importo as ( -- Fondo pluriennale vincolato al 31 dicembre dell''esercizio N-1
select 		capitolo_importi.elem_id,
           	sum(capitolo_importi.elem_det_importo) importi_capitoli
from 		siac_t_bil_elem_det 		capitolo_importi,
         	siac_d_bil_elem_det_tipo 	capitolo_imp_tipo,
         	siac_t_periodo 				capitolo_imp_periodo,
            siac_t_bil_elem 			capitolo,
            siac_d_bil_elem_tipo 		tipo_elemento,
	 		siac_d_bil_elem_stato 		stato_capitolo, 
     		siac_r_bil_elem_stato 		r_capitolo_stato,
	 		siac_d_bil_elem_categoria 	cat_del_capitolo,
     		siac_r_bil_elem_categoria 	r_cat_capitolo
where capitolo_importi.ente_proprietario_id = p_ente_prop_id  								 
and	capitolo.elem_id = capitolo_importi.elem_id 
and	capitolo.elem_tipo_id = tipo_elemento.elem_tipo_id
and	capitolo_importi.elem_det_tipo_id = capitolo_imp_tipo.elem_det_tipo_id 		
and	capitolo_imp_periodo.periodo_id = capitolo_importi.periodo_id 
and	capitolo.elem_id = r_capitolo_stato.elem_id			
and	r_capitolo_stato.elem_stato_id = stato_capitolo.elem_stato_id
and	capitolo.elem_id = r_cat_capitolo.elem_id				
and	r_cat_capitolo.elem_cat_id = cat_del_capitolo.elem_cat_id	
and	capitolo.bil_id = bilancio_id_prec							
and	tipo_elemento.elem_tipo_code = 'CAP-UG'
and	capitolo_imp_periodo.anno = annoprospetto_prec_int		  
--and	capitolo_imp_periodo.anno = anno_esercizio_prec	
and	stato_capitolo.elem_stato_code = 'VA'								
and	cat_del_capitolo.elem_cat_code in ('FPV','FPVC')
and capitolo_imp_tipo.elem_det_tipo_code = 'STA'				
and	capitolo_importi.data_cancellazione 		is null
and	capitolo_imp_tipo.data_cancellazione 		is null
and	capitolo_imp_periodo.data_cancellazione 	is null
and	capitolo.data_cancellazione 				is null
and	tipo_elemento.data_cancellazione 			is null
and	stato_capitolo.data_cancellazione 			is null 
and	r_capitolo_stato.data_cancellazione 		is null
and cat_del_capitolo.data_cancellazione 		is null
and	r_cat_capitolo.data_cancellazione 			is null
group by capitolo_importi.elem_id
)
select 
struttura.missione_code::varchar,
struttura.missione_desc::varchar,
struttura.programma_code::varchar,
struttura.programma_desc::varchar,
COALESCE(capitoli_importo.importi_capitoli,0)::numeric,
0::numeric spese_impegnate,
0::numeric spese_impegnate_anno1,
0::numeric spese_impegnate_anno2,
0::numeric spese_impegnate_anno_succ,
0::numeric importo_avanzo,
0::numeric importo_avanzo_anno1,
0::numeric importo_avanzo_anno2,
0::numeric importo_avanzo_anno_succ,
capitoli_anno_prec.elem_id::integer,
anno_esercizio::varchar,
capitoli_anno_prec.elem_code::varchar bil_elem_code, 
capitoli_anno_prec.elem_desc::varchar bil_elem_desc, 
capitoli_anno_prec.elem_code2::varchar bil_elem_code2, 
capitoli_anno_prec.elem_desc2::varchar bil_elem_desc2,
capitoli_anno_prec.elem_code3::varchar bil_elem_code3
from struttura
left join capitoli_anno_prec on struttura.programma_id = capitoli_anno_prec.programma_id
                   and struttura.macroag_id = capitoli_anno_prec.macroaggregato_id
left join capitoli_importo on capitoli_anno_prec.elem_id = capitoli_importo.elem_id
) tab1
union all
select 
tab2.*
from (
with struttura as (
select *
from fnc_bilr_struttura_cap_bilancio_spese (p_ente_prop_id,anno_esercizio,null)
),
capitoli as (
select 	programma.classif_id programma_id,
		macroaggr.classif_id macroaggregato_id,
       	capitolo.elem_code, capitolo.elem_desc, capitolo.elem_code2,
        capitolo.elem_desc2, capitolo.elem_code3, capitolo.elem_id,
        capitoli_fpv.elem_fpv_id elem_id_fpv,
    	capitoli_fpv.elem_id_std elem_id_std,
        capitoli_fpv.elem_code elem_code_fpv,
        capitoli_fpv.elem_code2 elem_code2_fpv,
        capitoli_fpv.elem_code3 elem_code3_fpv,
        capitoli_fpv.elem_desc elem_desc_fpv,
        capitoli_fpv.elem_desc2 elem_desc2_fpv
from siac_t_bil_elem capitolo
	/* 27/05/2019: SIAC-6849.
    	Aggiunta la gestione della tabella siac_r_bil_elem_fpv dove e' registrata
        la relazione tra i capitoli FPV e quelli STD.
        Gli importi estratti sono relativi ai capitoli standard perche' gli impegni
        sono associati solo a questo tipo di capitolo.
        Pero' il report deve presentare l'elenco dei capitoli FPV, quindi
        occorre estrarre il capitolo FPV a cui e' relazionato ogni record. */
		left join (select r_bil_elem_fpv.elem_fpv_id,
        			r_bil_elem_fpv.elem_id elem_id_std,
        			t_bil_elem_fpv.elem_code, t_bil_elem_fpv.elem_code2,
					t_bil_elem_fpv.elem_code3, t_bil_elem_fpv.elem_desc,
                    t_bil_elem_fpv.elem_desc2              	
        			from siac_t_bil_elem t_bil_elem_fpv,
        				siac_r_bil_elem_fpv r_bil_elem_fpv
                    where t_bil_elem_fpv.elem_id=r_bil_elem_fpv.elem_fpv_id
                    	and t_bil_elem_fpv.ente_proprietario_id=p_ente_prop_id
        				and r_bil_elem_fpv.data_cancellazione IS NULL
                        and r_bil_elem_fpv.validita_fine IS NULL
                        and t_bil_elem_fpv.data_cancellazione IS NULL
                        and t_bil_elem_fpv.validita_fine IS NULL) capitoli_fpv
                	on capitoli_fpv.elem_id_std=capitolo.elem_id,
	 siac_d_bil_elem_tipo tipo_elemento,
     siac_r_bil_elem_stato r_capitolo_stato,
     siac_d_bil_elem_stato stato_capitolo,      
     siac_r_bil_elem_class r_capitolo_programma,
     siac_r_bil_elem_class r_capitolo_macroaggr, 	 
	 siac_d_bil_elem_categoria cat_del_capitolo,
     siac_r_bil_elem_categoria r_cat_capitolo,
     siac_d_class_tipo programma_tipo,
     siac_t_class programma,
     siac_d_class_tipo macroaggr_tipo,
     siac_t_class macroaggr
where capitolo.elem_tipo_id = tipo_elemento.elem_tipo_id 						
and capitolo.elem_id = r_capitolo_stato.elem_id							
and	r_capitolo_stato.elem_stato_id = stato_capitolo.elem_stato_id		
and	capitolo.elem_id = r_capitolo_programma.elem_id							
and capitolo.elem_id = r_capitolo_macroaggr.elem_id							
and programma.classif_tipo_id = programma_tipo.classif_tipo_id 				
and programma.classif_id = r_capitolo_programma.classif_id					
and macroaggr.classif_tipo_id = macroaggr_tipo.classif_tipo_id 				
and macroaggr.classif_id = r_capitolo_macroaggr.classif_id					
and	capitolo.elem_id = r_cat_capitolo.elem_id				
and r_cat_capitolo.elem_cat_id = cat_del_capitolo.elem_cat_id		
and capitolo.ente_proprietario_id = p_ente_prop_id							
and capitolo.bil_id = bilancio_id													
and programma_tipo.classif_tipo_code = 'PROGRAMMA'							
and	macroaggr_tipo.classif_tipo_code = 'MACROAGGREGATO'						
and	tipo_elemento.elem_tipo_code = 'CAP-UG'						     		
and stato_capitolo.elem_stato_code = 'VA' 
-- and cat_del_capitolo.elem_cat_code in ('FPV','FPVC')    
and	programma_tipo.data_cancellazione 			is null
and	programma.data_cancellazione 				is null
and	macroaggr_tipo.data_cancellazione 			is null
and	macroaggr.data_cancellazione 				is null
and	capitolo.data_cancellazione 				is null
and	tipo_elemento.data_cancellazione 			is null
and	r_capitolo_programma.data_cancellazione 	is null
and	r_capitolo_macroaggr.data_cancellazione 	is null 
and	stato_capitolo.data_cancellazione 			is null 
and	r_capitolo_stato.data_cancellazione 		is null
and	cat_del_capitolo.data_cancellazione 		is null
and	r_cat_capitolo.data_cancellazione           is null
),
dati_impegni as (
with importo_impegni as (
with   impegni as (
select ts_impegni_legati.movgest_ts_b_id,
       movimento.movgest_anno anno_impegno
from   siac_r_movgest_ts ts_impegni_legati
inner  join siac_t_movgest_ts ts_movimento on ts_impegni_legati.movgest_ts_b_id = ts_movimento.movgest_ts_id
inner  join siac_t_movgest movimento on ts_movimento.movgest_id = movimento.movgest_id
inner  join siac_r_movgest_ts_stato ts_stato on ts_stato.movgest_ts_id = ts_movimento.movgest_ts_id-- SIAC-5778
inner  join siac_d_movgest_stato stato on stato.movgest_stato_id = ts_stato.movgest_stato_id-- SIAC-5778
where  ts_impegni_legati.ente_proprietario_id = p_ente_prop_id
and    movimento.movgest_anno  >= annoprospetto_int
-- and    movimento.movgest_anno  >= annoImpImpegni_int
and    movimento.bil_id = bilancio_id
and    stato.movgest_stato_code in ('D','N')-- SIAC-5778
and    ts_impegni_legati.data_cancellazione is null
and    ts_movimento.data_cancellazione is null
and    movimento.data_cancellazione is null
and    ts_impegni_legati.validita_fine is null
and    ts_stato.data_cancellazione is null-- SIAC-5778
and    stato.data_cancellazione is null-- SIAC-5778 
group by ts_impegni_legati.movgest_ts_b_id, movimento.movgest_anno
),
imp_impegni_accertamenti as (
select ts_impegni_legati.movgest_ts_b_id,
       movimento.movgest_anno anno_accertamento,
       sum(ts_impegni_legati.movgest_ts_importo) movgest_ts_importo       
from   siac_r_movgest_ts ts_impegni_legati
inner  join siac_t_movgest_ts ts_movimento on ts_impegni_legati.movgest_ts_a_id = ts_movimento.movgest_ts_id
inner  join siac_t_movgest movimento on ts_movimento.movgest_id = movimento.movgest_id
inner  join siac_r_movgest_ts_stato ts_stato on ts_stato.movgest_ts_id = ts_movimento.movgest_ts_id-- SIAC-5778
inner  join siac_d_movgest_stato stato on stato.movgest_stato_id = ts_stato.movgest_stato_id-- SIAC-5778
where  ts_impegni_legati.ente_proprietario_id = p_ente_prop_id
and    ts_impegni_legati.avav_id is null
and    movimento.bil_id = bilancio_id
and    movimento.movgest_anno <= annoprospetto_int+2
-- and    movimento.movgest_anno <= annoImpImpegni_int+2
and    stato.movgest_stato_code in ('D','N')-- SIAC-5778
and    ts_impegni_legati.data_cancellazione is null
and    ts_movimento.data_cancellazione is null
and    movimento.data_cancellazione is null
and    ts_impegni_legati.validita_fine is null
and    ts_stato.data_cancellazione is null-- SIAC-5778
and    stato.data_cancellazione is null-- SIAC-5778 
group by ts_impegni_legati.movgest_ts_b_id, movimento.movgest_anno 
),
imp_impegni_avanzo as (
select ts_impegni_legati.movgest_ts_b_id,
       sum(ts_impegni_legati.movgest_ts_importo) movgest_ts_importo,
       movimento.movgest_anno        
from   siac_r_movgest_ts ts_impegni_legati
inner  join siac_t_avanzovincolo avanzovincolo on ts_impegni_legati.avav_id = avanzovincolo.avav_id
inner  join siac_d_avanzovincolo_tipo tipo_avanzovincolo on avanzovincolo.avav_tipo_id = tipo_avanzovincolo.avav_tipo_id
inner  join siac_t_movgest_ts ts_movimento on ts_impegni_legati.movgest_ts_b_id = ts_movimento.movgest_ts_id
inner  join siac_t_movgest movimento on ts_movimento.movgest_id = movimento.movgest_id
inner  join siac_r_movgest_ts_stato ts_stato on ts_stato.movgest_ts_id = ts_movimento.movgest_ts_id-- SIAC-5778
inner  join siac_d_movgest_stato stato on stato.movgest_stato_id = ts_stato.movgest_stato_id-- SIAC-5778
where  ts_impegni_legati.ente_proprietario_id = p_ente_prop_id
and    movimento.bil_id = bilancio_id
and    ts_impegni_legati.movgest_ts_a_id is null
and    tipo_avanzovincolo.avav_tipo_code in ('AAM','FPVSC','FPVCC')
and    movimento.movgest_anno >= annoprospetto_int
-- and    movimento.movgest_anno >= annoImpImpegni_int
and    stato.movgest_stato_code in ('D','N')-- SIAC-5778
and    ts_impegni_legati.data_cancellazione is null
and    avanzovincolo.data_cancellazione is null 
and    tipo_avanzovincolo.data_cancellazione is null
and    ts_movimento.data_cancellazione is null 
and    movimento.data_cancellazione is null
and    ts_impegni_legati.validita_fine is null
and    ts_stato.data_cancellazione is null-- SIAC-5778
and    stato.data_cancellazione is null-- SIAC-5778 
group by ts_impegni_legati.movgest_ts_b_id, movimento.movgest_anno 
)
select impegni.movgest_ts_b_id,
       case 
        when impegni.anno_impegno = annoprospetto_int and imp_impegni_accertamenti.anno_accertamento <= annoprospetto_int-1 then
             sum(imp_impegni_accertamenti.movgest_ts_importo)
       end spese_impegnate,  
       case 
        when impegni.anno_impegno = annoprospetto_int+1 and imp_impegni_accertamenti.anno_accertamento <= annoprospetto_int then
             sum(imp_impegni_accertamenti.movgest_ts_importo)
       end spese_impegnate_anno1,   
       case 
        when impegni.anno_impegno = annoprospetto_int+2 and imp_impegni_accertamenti.anno_accertamento <= annoprospetto_int+1 then
             sum(imp_impegni_accertamenti.movgest_ts_importo)
       end spese_impegnate_anno2,    
       case 
        when impegni.anno_impegno > annoprospetto_int+2 and imp_impegni_accertamenti.anno_accertamento <= annoprospetto_int+2 then
             sum(imp_impegni_accertamenti.movgest_ts_importo)
       end spese_impegnate_anno_succ,
       case 
        when impegni.anno_impegno = annoprospetto_int then
             sum(imp_impegni_avanzo.movgest_ts_importo)
       end importo_avanzo,    
       case 
        when impegni.anno_impegno = annoprospetto_int+1 then
             sum(imp_impegni_avanzo.movgest_ts_importo)
       end importo_avanzo_anno1,      
       case 
        when impegni.anno_impegno = annoprospetto_int+2 then
             sum(imp_impegni_avanzo.movgest_ts_importo)            
       end importo_avanzo_anno2,
       case 
        when impegni.anno_impegno > annoprospetto_int+2 then
             sum(imp_impegni_avanzo.movgest_ts_importo)            
       end importo_avanzo_anno_succ                      
from   impegni
left   join imp_impegni_accertamenti on impegni.movgest_ts_b_id = imp_impegni_accertamenti.movgest_ts_b_id
left   join imp_impegni_avanzo on impegni.movgest_ts_b_id = imp_impegni_avanzo.movgest_ts_b_id
group by impegni.movgest_ts_b_id, impegni.anno_impegno, imp_impegni_accertamenti.anno_accertamento
),
capitoli_impegni as (
select capitolo.elem_id, ts_movimento.movgest_ts_id
from  siac_t_bil_elem                 capitolo
inner join siac_r_movgest_bil_elem    r_mov_capitolo on r_mov_capitolo.elem_id = capitolo.elem_id
inner join siac_d_bil_elem_tipo       t_capitolo on capitolo.elem_tipo_id = t_capitolo.elem_tipo_id
inner join siac_t_movgest             movimento on r_mov_capitolo.movgest_id = movimento.movgest_id
inner join siac_t_movgest_ts          ts_movimento on movimento.movgest_id = ts_movimento.movgest_id
inner join siac_r_movgest_ts_stato    ts_stato on ts_stato.movgest_ts_id = ts_movimento.movgest_ts_id-- SIAC-5778
inner join siac_d_movgest_stato       stato on stato.movgest_stato_id = ts_stato.movgest_stato_id-- SIAC-5778
where capitolo.ente_proprietario_id = p_ente_prop_id
and   capitolo.bil_id =	bilancio_id
and   movimento.bil_id = bilancio_id
and   t_capitolo.elem_tipo_code = 'CAP-UG'
and   movimento.movgest_anno >= annoprospetto_int
-- and   movimento.movgest_anno >= annoImpImpegni_int
and   stato.movgest_stato_code in ('D','N')-- SIAC-5778
and   capitolo.data_cancellazione is null 
and   r_mov_capitolo.data_cancellazione is null 
and   t_capitolo.data_cancellazione is null
and   movimento.data_cancellazione is null 
and   ts_movimento.data_cancellazione is null
and   ts_stato.data_cancellazione is null-- SIAC-5778
and   stato.data_cancellazione is null-- SIAC-5778 
)
select 
capitoli_impegni.elem_id,
sum(importo_impegni.spese_impegnate) spese_impegnate,
sum(importo_impegni.spese_impegnate_anno1) spese_impegnate_anno1,
sum(importo_impegni.spese_impegnate_anno2) spese_impegnate_anno2,
sum(importo_impegni.spese_impegnate_anno_succ) spese_impegnate_anno_succ,
sum(importo_impegni.importo_avanzo) importo_avanzo,
sum(importo_impegni.importo_avanzo_anno1) importo_avanzo_anno1,
sum(importo_impegni.importo_avanzo_anno2) importo_avanzo_anno2,
sum(importo_impegni.importo_avanzo_anno_succ) importo_avanzo_anno_succ
from capitoli_impegni
left join importo_impegni on capitoli_impegni.movgest_ts_id = importo_impegni.movgest_ts_b_id
group by capitoli_impegni.elem_id
)
select 
struttura.missione_code::varchar,
struttura.missione_desc::varchar,
struttura.programma_code::varchar,
struttura.programma_desc::varchar,
0::numeric importi_capitoli,
COALESCE(dati_impegni.spese_impegnate,0)::numeric spese_impegnate,
/*COALESCE(dati_impegni.spese_impegnate_anno1,0)::numeric spese_impegnate_anno1,
COALESCE(dati_impegni.spese_impegnate_anno2,0)::numeric spese_impegnate_anno2,
COALESCE(dati_impegni.spese_impegnate_anno_succ,0)::numeric spese_impegnate_anno_succ,*/
0::numeric spese_impegnate_anno1,
0::numeric spese_impegnate_anno2,
0::numeric spese_impegnate_anno_succ,
COALESCE(dati_impegni.importo_avanzo,0)::numeric importo_avanzo,
/*COALESCE(dati_impegni.importo_avanzo_anno1,0)::numeric importo_avanzo_anno1,
COALESCE(dati_impegni.importo_avanzo_anno2,0)::numeric importo_avanzo_anno2,
COALESCE(dati_impegni.importo_avanzo_anno_succ,0)::numeric importo_avanzo_anno_succ,*/
0::numeric importo_avanzo_anno1,
0::numeric importo_avanzo_anno2,
0::numeric importo_avanzo_anno_succ,
capitoli.elem_id::integer, --id del capitolo STD.
anno_esercizio::varchar,
-- 27/05/2019: SIAC-6849. Il capitolo e' quello FPV e non il STD.
capitoli.elem_code_fpv::varchar bil_elem_code, 
capitoli.elem_desc_fpv::varchar bil_elem_desc, 
capitoli.elem_code2_fpv::varchar bil_elem_code2, 
capitoli.elem_desc2_fpv::varchar bil_elem_desc2,
capitoli.elem_code3_fpv::varchar bil_elem_code3
from struttura
left join capitoli on  struttura.programma_id = capitoli.programma_id
                   and struttura.macroag_id = capitoli.macroaggregato_id
left join dati_impegni on  capitoli.elem_id = dati_impegni.elem_id
) tab2
) as zz;

-- raise notice 'Dati % - %',anno_esercizio::varchar,anno_esercizio_prec::varchar;
-- raise notice 'Dati % - %',bilancio_id::varchar,bilancio_id_prec::varchar;

exception
when no_data_found THEN
raise notice 'nessun dato trovato per struttura bilancio';
return;
when others  THEN
RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
return;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--SIAC-6849 - Maurizio - FINE 


--SIAC-6611 e SIAC-6870 e SIAC-6856 - Maurizio - INIZIO

DROP FUNCTION if exists siac."BILR224_quadro_economico"(p_ente_prop_id integer, p_anno varchar, p_id_cronop integer);
DROP FUNCTION if exists siac."BILR225_quadro_economico_movim_contab"(p_ente_prop_id integer, p_anno varchar, p_id_cronop integer);

CREATE OR REPLACE FUNCTION siac."BILR224_quadro_economico" (
  p_ente_prop_id integer,
  p_anno varchar,
  p_id_cronop integer
)
RETURNS TABLE (
  parte_code varchar,
  parte_desc varchar,
  quadro_economico_id integer,
  quadro_economico_code varchar,
  quadro_economico_desc varchar,
  quadro_economico_id_padre integer,
  livello integer,
  quadro_economico_stato_code varchar,
  quadro_economico_stato_desc varchar,
  voce_quadro_economico varchar,
  importo_quadro_economico numeric,
  cronop_data_approvazione_fattibilita timestamp,
  cronop_data_approvazione_programma_def timestamp,
  cronop_data_approvazione_programma_esec timestamp,
  cronop_data_avvio_procedura timestamp,
  cronop_data_aggiudicazione_lavori timestamp,
  cronop_data_inizio_lavori timestamp,
  cronop_data_fine_lavori timestamp,
  cronop_giorni_durata integer,
  cronop_data_collaudo timestamp
) AS
$body$
DECLARE

RTN_MESSAGGIO text;

BEGIN

/*
	29/05/2019.
	Procedura per l'estrazione dei dati del quadro economico.
    
*/    

return query
	
-- Dati relativi ai quadri economici di livello 0, collegati al cronoprogramma.
select  d_qua_econ_parte.parte_code  parte_code,
		d_qua_econ_parte.parte_desc parte_desc,
        t_qua_econ.quadro_economico_id quadro_economico_id,
        t_qua_econ.quadro_economico_code quadro_economico_code,
        t_qua_econ.quadro_economico_desc quadro_economico_desc,        
        t_qua_econ.quadro_economico_id_padre quadro_economico_id_padre,
        t_qua_econ.livello livello,
        d_qua_econ_stato.quadro_economico_stato_code quadro_economico_stato_code,
        d_qua_econ_stato.quadro_economico_stato_desc quadro_economico_stato_desc,
        t_cronop_elem.cronop_elem_desc voce_quadro_economico,
        t_cronop_elem_det.quadro_economico_det_importo::numeric importo_quadro_economico,
        t_cronop.cronop_data_approvazione_fattibilita,
  		t_cronop.cronop_data_approvazione_programma_def,
        t_cronop.cronop_data_approvazione_programma_esec,
        t_cronop.cronop_data_avvio_procedura,
        t_cronop.cronop_data_aggiudicazione_lavori,
        t_cronop.cronop_data_inizio_lavori,
        t_cronop.cronop_data_fine_lavori,
        t_cronop.cronop_giorni_durata,
        t_cronop.cronop_data_collaudo
    from siac_t_programma t_programma,
    	siac_t_cronop t_cronop,
    	siac_t_cronop_elem t_cronop_elem,
    	siac_t_cronop_elem_det t_cronop_elem_det,
        siac_t_bil t_bil,
      	siac_t_periodo t_periodo ,
    	siac_t_quadro_economico t_qua_econ,
        siac_d_quadro_economico_parte d_qua_econ_parte,
        siac_r_quadro_economico_stato r_qua_econ_stato,
        siac_d_quadro_economico_stato d_qua_econ_stato
    where t_programma.programma_id = t_cronop.programma_id 
		and t_cronop_elem.cronop_id = t_cronop.cronop_id
    	and t_cronop_elem_det.cronop_elem_id = t_cronop_elem.cronop_elem_id
    	and t_bil.bil_id = t_cronop.bil_id
    	and t_bil.periodo_id = t_periodo.periodo_id
        	--collegamento con il padre del quadro economico.
        and (t_cronop_elem_det.quadro_economico_id_padre = t_qua_econ.quadro_economico_id AND
              t_cronop_elem_det.quadro_economico_id_figlio IS NULL)
    	and t_qua_econ.parte_id=d_qua_econ_parte.parte_id
    	and t_qua_econ.quadro_economico_id=r_qua_econ_stato.quadro_economico_id
        and r_qua_econ_stato.quadro_economico_stato_id=d_qua_econ_stato.quadro_economico_stato_id        
        and t_programma.ente_proprietario_id=p_ente_prop_id
        and d_qua_econ_stato.quadro_economico_stato_code <> 'A'
        and t_periodo.anno = p_anno
        and t_cronop.cronop_id = p_id_cronop
        and t_qua_econ.data_cancellazione IS NULL
		and d_qua_econ_parte.data_cancellazione IS NULL
        and r_qua_econ_stato.data_cancellazione IS NULL
        and d_qua_econ_stato.data_cancellazione IS NULL        
    	and t_programma.data_cancellazione IS NULL
        and t_cronop.data_cancellazione IS NULL
        and t_cronop_elem.data_cancellazione IS NULL
        and t_cronop_elem_det.data_cancellazione IS NULL
        and t_bil.data_cancellazione IS NULL
        and t_periodo.data_cancellazione IS NULL 
UNION -- Dati relativi ai quadri economici di livello 1, collegati al cronoprogramma.
	select d_qua_econ_parte.parte_code  parte_code,
    	 d_qua_econ_parte.parte_desc parte_desc,
        t_qua_econ.quadro_economico_id quadro_economico_id,
        t_qua_econ.quadro_economico_code quadro_economico_code,
        t_qua_econ.quadro_economico_desc quadro_economico_desc,        
        t_qua_econ.quadro_economico_id_padre quadro_economico_id_padre,
        t_qua_econ.livello livello,
        d_qua_econ_stato.quadro_economico_stato_code quadro_economico_stato_code,
        d_qua_econ_stato.quadro_economico_stato_desc quadro_economico_stato_desc,
        t_cronop_elem.cronop_elem_desc voce_quadro_economico,
        t_cronop_elem_det.quadro_economico_det_importo::numeric importo_quadro_economico,
        t_cronop.cronop_data_approvazione_fattibilita,
  		t_cronop.cronop_data_approvazione_programma_def,
        t_cronop.cronop_data_approvazione_programma_esec,
        t_cronop.cronop_data_avvio_procedura,
        t_cronop.cronop_data_aggiudicazione_lavori,
        t_cronop.cronop_data_inizio_lavori,
        t_cronop.cronop_data_fine_lavori,
        t_cronop.cronop_giorni_durata,
        t_cronop.cronop_data_collaudo
    from siac_t_programma t_programma,
    	siac_t_cronop t_cronop,
    	siac_t_cronop_elem t_cronop_elem,
    	siac_t_cronop_elem_det t_cronop_elem_det,
        siac_t_bil t_bil,
      	siac_t_periodo t_periodo ,
    	siac_t_quadro_economico t_qua_econ,
        siac_d_quadro_economico_parte d_qua_econ_parte,
        siac_r_quadro_economico_stato r_qua_econ_stato,
        siac_d_quadro_economico_stato d_qua_econ_stato
    where t_programma.programma_id = t_cronop.programma_id 
		and t_cronop_elem.cronop_id = t_cronop.cronop_id
    	and t_cronop_elem_det.cronop_elem_id = t_cronop_elem.cronop_elem_id
    	and t_bil.bil_id = t_cronop.bil_id
    	and t_bil.periodo_id = t_periodo.periodo_id       
        	--collegamento con il figlio del quadro economico.
        and (t_cronop_elem_det.quadro_economico_id_figlio IS NOT NULL 
        	AND t_cronop_elem_det.quadro_economico_id_figlio = t_qua_econ.quadro_economico_id)
    	and t_qua_econ.parte_id=d_qua_econ_parte.parte_id
    	and t_qua_econ.quadro_economico_id=r_qua_econ_stato.quadro_economico_id
        and r_qua_econ_stato.quadro_economico_stato_id=d_qua_econ_stato.quadro_economico_stato_id        
        and t_programma.ente_proprietario_id=p_ente_prop_id
        and d_qua_econ_stato.quadro_economico_stato_code <> 'A'
        and t_periodo.anno = p_anno
        and t_cronop.cronop_id = p_id_cronop
        and t_qua_econ.data_cancellazione IS NULL
		and d_qua_econ_parte.data_cancellazione IS NULL
        and r_qua_econ_stato.data_cancellazione IS NULL
        and d_qua_econ_stato.data_cancellazione IS NULL        
    	and t_programma.data_cancellazione IS NULL
        and t_cronop.data_cancellazione IS NULL
        and t_cronop_elem.data_cancellazione IS NULL
        and t_cronop_elem_det.data_cancellazione IS NULL
        and t_bil.data_cancellazione IS NULL
        and t_periodo.data_cancellazione IS NULL                   
    UNION -- estraggo anche le PARTI A, B, C vuote per fare in modo che nel 
    	  -- report esistano sempre.
    	select 
          d_qua_econ_parte.parte_code  parte_code,
          d_qua_econ_parte.parte_desc parte_desc,
          0::integer quadro_economico_id,
          ''::varchar quadro_economico_code,
          ''::varchar quadro_economico_desc,
          0::integer quadro_economico_id_padre,
          0::integer livello,
          ''::varchar quadro_economico_stato_code,
          ''::varchar quadro_economico_stato_desc,
          ''::varchar voce_quadro_economico,
          0::numeric importo_quadro_economico,
          NULL cronop_data_approvazione_fattibilita,
          NULL cronop_data_approvazione_programma_def,
          NULL cronop_data_approvazione_programma_esec,
          NULL cronop_data_avvio_procedura,
          NULL cronop_data_aggiudicazione_lavori,
          NULL cronop_data_inizio_lavori,
          NULL cronop_data_fine_lavori,
          NULL cronop_giorni_durata,
          NULL cronop_data_collaudo
        from siac_d_quadro_economico_parte d_qua_econ_parte
        where d_qua_econ_parte.ente_proprietario_id=p_ente_prop_id
            and d_qua_econ_parte.data_cancellazione IS NULL;
        
exception
	when no_data_found THEN
		raise notice 'Nessun dato trovato per il quadro economico';
		return;
	when others  THEN
		RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
		return;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;


CREATE OR REPLACE FUNCTION siac."BILR225_quadro_economico_movim_contab" (
  p_ente_prop_id integer,
  p_anno varchar,
  p_id_cronop integer
)
RETURNS TABLE (
  parte_code varchar,
  parte_desc varchar,
  quadro_economico_id integer,
  quadro_economico_code varchar,
  quadro_economico_desc varchar,
  quadro_economico_id_padre integer,
  livello integer,
  quadro_economico_stato_code varchar,
  quadro_economico_stato_desc varchar,
  voce_quadro_economico varchar,
  importo_quadro_economico numeric,
  cronop_data_approvazione_fattibilita timestamp,
  cronop_data_approvazione_programma_def timestamp,
  cronop_data_approvazione_programma_esec timestamp,
  cronop_data_avvio_procedura timestamp,
  cronop_data_aggiudicazione_lavori timestamp,
  cronop_data_inizio_lavori timestamp,
  cronop_data_fine_lavori timestamp,
  cronop_giorni_durata integer,
  cronop_data_collaudo timestamp,
  liquidato_anni_prec numeric,
  stanziato_anno numeric,
  impegnato_anno numeric,
  prenotato_anno numeric,
  liquidato_anno numeric,
  stanziato_anno1 numeric,
  impegnato_anno1 numeric,
  prenotato_anno1 numeric,
  stanziato_anno2 numeric,
  impegnato_anno2 numeric,
  prenotato_anno2 numeric,
  stanziato_anni_succ numeric,
  impegnato_anni_succ numeric,
  prenotato_anni_succ numeric
) AS
$body$
DECLARE

RTN_MESSAGGIO text;
bilancio_id integer;

BEGIN


select a.bil_id 
	into bilancio_id 
from siac_t_bil a,siac_t_periodo b
where a.ente_proprietario_id=p_ente_prop_id 
	and b.periodo_id=a.periodo_id
	and b.anno=p_anno;
    
/*
	29/05/2019.
	Procedura per l'estrazione dei dati del quadro economico.
    Oltre a questi estrae anche:
   
- Liquidato Anno prec = liquidazioni legate agli impegni con anno = anno prec

Per anno corrente e successivi:
-- Stanziato = impegni con tipologia I = Importo iniziale
- Impegnato = impegni con tipologia A = Importo attuale
- Prenotato = importo sub impegni legati agli impegni.
- Liquidato = liquidazioni legate agli impegni 

L'anno bilancio e' sempre lo stesso.

*/

return query
	with quadro_economico as (
    select  d_qua_econ_parte.parte_code  parte_code,
            d_qua_econ_parte.parte_desc parte_desc,
            t_qua_econ.quadro_economico_id quadro_economico_id,
            t_qua_econ.quadro_economico_code quadro_economico_code,
            t_qua_econ.quadro_economico_desc quadro_economico_desc,        
            t_qua_econ.quadro_economico_id_padre quadro_economico_id_padre,
            t_qua_econ.livello livello,
            d_qua_econ_stato.quadro_economico_stato_code quadro_economico_stato_code,
            d_qua_econ_stato.quadro_economico_stato_desc quadro_economico_stato_desc,
            t_cronop_elem.cronop_elem_desc voce_quadro_economico,
            t_cronop_elem_det.quadro_economico_det_importo::numeric importo_quadro_economico,
            t_cronop.cronop_data_approvazione_fattibilita,
            t_cronop.cronop_data_approvazione_programma_def,
            t_cronop.cronop_data_approvazione_programma_esec,
            t_cronop.cronop_data_avvio_procedura,
            t_cronop.cronop_data_aggiudicazione_lavori,
            t_cronop.cronop_data_inizio_lavori,
            t_cronop.cronop_data_fine_lavori,
            t_cronop.cronop_giorni_durata,
            t_cronop.cronop_data_collaudo,
            impegni_collegati.movgest_ts_id,
            impegni_collegati.movgest_id
        from siac_t_programma t_programma,
            siac_t_cronop t_cronop,
            siac_t_cronop_elem t_cronop_elem
                LEFT JOIN (select r_movgest_ts_cronop_elem.movgest_ts_id,
                            r_movgest_ts_cronop_elem.cronop_elem_id,
                            t_movgest_ts.movgest_id 
                        from siac_r_movgest_ts_cronop_elem r_movgest_ts_cronop_elem,
                            siac_t_movgest_ts t_movgest_ts
                        where t_movgest_ts.movgest_ts_id = r_movgest_ts_cronop_elem.movgest_ts_id
                            and r_movgest_ts_cronop_elem.ente_proprietario_id = p_ente_prop_id
                            and r_movgest_ts_cronop_elem.validita_fine IS NULL
                            and r_movgest_ts_cronop_elem.data_cancellazione IS NULL
                            and t_movgest_ts.validita_fine IS NULL
                            and t_movgest_ts.data_cancellazione IS NULL) impegni_collegati
                        ON impegni_collegati.cronop_elem_id=t_cronop_elem.cronop_elem_id,
            siac_t_cronop_elem_det t_cronop_elem_det,
            siac_t_bil t_bil,
            siac_t_periodo t_periodo ,
            siac_t_quadro_economico t_qua_econ,
            siac_d_quadro_economico_parte d_qua_econ_parte,
            siac_r_quadro_economico_stato r_qua_econ_stato,
            siac_d_quadro_economico_stato d_qua_econ_stato
        where t_programma.programma_id = t_cronop.programma_id 
            and t_cronop_elem.cronop_id = t_cronop.cronop_id
            and t_cronop_elem_det.cronop_elem_id = t_cronop_elem.cronop_elem_id
            and t_bil.bil_id = t_cronop.bil_id
            and t_bil.periodo_id = t_periodo.periodo_id
                --collegamento con il padre del quadro economico.
            and (t_cronop_elem_det.quadro_economico_id_padre = t_qua_econ.quadro_economico_id AND
                  t_cronop_elem_det.quadro_economico_id_figlio IS NULL)
            and t_qua_econ.parte_id=d_qua_econ_parte.parte_id
            and t_qua_econ.quadro_economico_id=r_qua_econ_stato.quadro_economico_id
            and r_qua_econ_stato.quadro_economico_stato_id=d_qua_econ_stato.quadro_economico_stato_id        
            and t_programma.ente_proprietario_id=p_ente_prop_id
            and d_qua_econ_stato.quadro_economico_stato_code <> 'A'
            and t_periodo.anno = p_anno
            and t_cronop.cronop_id = p_id_cronop
            and t_qua_econ.data_cancellazione IS NULL
            and d_qua_econ_parte.data_cancellazione IS NULL
            and r_qua_econ_stato.data_cancellazione IS NULL
            and d_qua_econ_stato.data_cancellazione IS NULL        
            and t_programma.data_cancellazione IS NULL
            and t_cronop.data_cancellazione IS NULL
            and t_cronop_elem.data_cancellazione IS NULL
            and t_cronop_elem_det.data_cancellazione IS NULL
            and t_bil.data_cancellazione IS NULL
            and t_periodo.data_cancellazione IS NULL 
    UNION -- Dati relativi ai quadri economici di livello 1, collegati al cronoprogramma.
        select d_qua_econ_parte.parte_code  parte_code,
             d_qua_econ_parte.parte_desc parte_desc,
            t_qua_econ.quadro_economico_id quadro_economico_id,
            t_qua_econ.quadro_economico_code quadro_economico_code,
            t_qua_econ.quadro_economico_desc quadro_economico_desc,        
            t_qua_econ.quadro_economico_id_padre quadro_economico_id_padre,
            t_qua_econ.livello livello,
            d_qua_econ_stato.quadro_economico_stato_code quadro_economico_stato_code,
            d_qua_econ_stato.quadro_economico_stato_desc quadro_economico_stato_desc,
            t_cronop_elem.cronop_elem_desc voce_quadro_economico,
            t_cronop_elem_det.quadro_economico_det_importo::numeric importo_quadro_economico,
            t_cronop.cronop_data_approvazione_fattibilita,
            t_cronop.cronop_data_approvazione_programma_def,
            t_cronop.cronop_data_approvazione_programma_esec,
            t_cronop.cronop_data_avvio_procedura,
            t_cronop.cronop_data_aggiudicazione_lavori,
            t_cronop.cronop_data_inizio_lavori,
            t_cronop.cronop_data_fine_lavori,
            t_cronop.cronop_giorni_durata,
            t_cronop.cronop_data_collaudo,
            impegni_collegati.movgest_ts_id,
            impegni_collegati.movgest_id
        from siac_t_programma t_programma,
            siac_t_cronop t_cronop,
            siac_t_cronop_elem t_cronop_elem
                LEFT JOIN (select r_movgest_ts_cronop_elem.movgest_ts_id,
                            r_movgest_ts_cronop_elem.cronop_elem_id,
                            t_movgest_ts.movgest_id 
                        from siac_r_movgest_ts_cronop_elem r_movgest_ts_cronop_elem,
                            siac_t_movgest_ts t_movgest_ts
                        where t_movgest_ts.movgest_ts_id = r_movgest_ts_cronop_elem.movgest_ts_id
                            and r_movgest_ts_cronop_elem.ente_proprietario_id = p_ente_prop_id
                            and r_movgest_ts_cronop_elem.validita_fine IS NULL
                            and r_movgest_ts_cronop_elem.data_cancellazione IS NULL
                            and t_movgest_ts.validita_fine IS NULL
                            and t_movgest_ts.data_cancellazione IS NULL) impegni_collegati
                        ON impegni_collegati.cronop_elem_id=t_cronop_elem.cronop_elem_id,
            siac_t_cronop_elem_det t_cronop_elem_det,
            siac_t_bil t_bil,
            siac_t_periodo t_periodo ,
            siac_t_quadro_economico t_qua_econ,
            siac_d_quadro_economico_parte d_qua_econ_parte,
            siac_r_quadro_economico_stato r_qua_econ_stato,
            siac_d_quadro_economico_stato d_qua_econ_stato
        where t_programma.programma_id = t_cronop.programma_id 
            and t_cronop_elem.cronop_id = t_cronop.cronop_id
            and t_cronop_elem_det.cronop_elem_id = t_cronop_elem.cronop_elem_id
            and t_bil.bil_id = t_cronop.bil_id
            and t_bil.periodo_id = t_periodo.periodo_id       
                --collegamento con il figlio del quadro economico.
            and (t_cronop_elem_det.quadro_economico_id_figlio IS NOT NULL 
                AND t_cronop_elem_det.quadro_economico_id_figlio = t_qua_econ.quadro_economico_id)
            and t_qua_econ.parte_id=d_qua_econ_parte.parte_id
            and t_qua_econ.quadro_economico_id=r_qua_econ_stato.quadro_economico_id
            and r_qua_econ_stato.quadro_economico_stato_id=d_qua_econ_stato.quadro_economico_stato_id        
            and t_programma.ente_proprietario_id=p_ente_prop_id
            and d_qua_econ_stato.quadro_economico_stato_code <> 'A'
            and t_periodo.anno = p_anno
            and t_cronop.cronop_id = p_id_cronop
            and t_qua_econ.data_cancellazione IS NULL
            and d_qua_econ_parte.data_cancellazione IS NULL
            and r_qua_econ_stato.data_cancellazione IS NULL
            and d_qua_econ_stato.data_cancellazione IS NULL        
            and t_programma.data_cancellazione IS NULL
            and t_cronop.data_cancellazione IS NULL
            and t_cronop_elem.data_cancellazione IS NULL
            and t_cronop_elem_det.data_cancellazione IS NULL
            and t_bil.data_cancellazione IS NULL
            and t_periodo.data_cancellazione IS NULL),
	liquidazioni_anno_prec as(
    	select t_movgest_ts.movgest_ts_id,
        	sum(coalesce(t_liq.liq_importo,0)) liquidazioni 
        from siac_t_movgest t_movgest,
        	siac_t_movgest_ts t_movgest_ts,
            siac_r_liquidazione_movgest r_liq_movgest,
            siac_t_liquidazione t_liq,
            siac_t_movgest_ts_det t_movgest_ts_det,
			siac_r_movgest_bil_elem r_movgest_bil_elem,
            siac_d_movgest_tipo d_movgest_tipo,
            siac_r_movgest_ts_stato r_movgest_ts_stato,
            siac_d_movgest_stato d_movgest_stato,
			siac_d_movgest_ts_tipo d_movgest_ts_tipo,
            siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo
 		where t_movgest_ts.movgest_id=t_movgest.movgest_id
           	and t_movgest_ts_det.movgest_ts_id=t_movgest_ts.movgest_ts_id
           	and d_movgest_ts_tipo.movgest_ts_tipo_id=t_movgest_ts.movgest_ts_tipo_id
          	and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
          	and d_movgest_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_id=t_movgest_ts_det.movgest_ts_det_tipo_id
          	and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
          	and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
            and r_liq_movgest.movgest_ts_id = t_movgest_ts.movgest_ts_id
            and t_liq.liq_id = r_liq_movgest.liq_id
            and t_movgest.ente_proprietario_id = p_ente_prop_id
            and t_movgest.bil_id=bilancio_id
            and t_movgest.movgest_anno = (p_anno::integer -1)
            and d_movgest_tipo.movgest_tipo_code='I'
          	and d_movgest_stato.movgest_stato_code in ('D','N')           	
          	and d_movgest_ts_tipo.movgest_ts_tipo_code='T'           	
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
            and r_movgest_ts_stato.validita_fine is NULL
            and r_movgest_ts_stato.data_cancellazione is null
          	and t_movgest.data_cancellazione is null
          	and t_movgest_ts.data_cancellazione is null
          	and t_movgest_ts_det.data_cancellazione is null
          	and r_movgest_bil_elem.data_cancellazione is null
          	and d_movgest_tipo.data_cancellazione is null          	
          	and d_movgest_stato.data_cancellazione is null
          	and d_movgest_ts_tipo.data_cancellazione is null
          	and d_movgest_ts_det_tipo.data_cancellazione is null
            and r_liq_movgest.validita_fine is NULL
            and r_liq_movgest.data_cancellazione is null
            and t_liq.data_cancellazione is null
          group by t_movgest_ts.movgest_ts_id),               
    impegni_anno as(
    	select t_movgest_ts.movgest_ts_id,
        	sum(coalesce(t_movgest_ts_det.movgest_ts_det_importo,0)) impegni 
        from siac_t_movgest t_movgest,
        	siac_t_movgest_ts t_movgest_ts,
            siac_t_movgest_ts_det t_movgest_ts_det,
			siac_r_movgest_bil_elem r_movgest_bil_elem,
            siac_d_movgest_tipo d_movgest_tipo,
            siac_r_movgest_ts_stato r_movgest_ts_stato,
            siac_d_movgest_stato d_movgest_stato,
			siac_d_movgest_ts_tipo d_movgest_ts_tipo,
            siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo
 		where t_movgest_ts.movgest_id=t_movgest.movgest_id
           	and t_movgest_ts_det.movgest_ts_id=t_movgest_ts.movgest_ts_id
           	and d_movgest_ts_tipo.movgest_ts_tipo_id=t_movgest_ts.movgest_ts_tipo_id
          	and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
          	and d_movgest_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_id=t_movgest_ts_det.movgest_ts_det_tipo_id
          	and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
          	and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
            and t_movgest.ente_proprietario_id = p_ente_prop_id
            and t_movgest.bil_id=bilancio_id
            and t_movgest.movgest_anno = p_anno::integer
            and d_movgest_tipo.movgest_tipo_code='I'
            	--escludo solo gli impegni ANNULLATI.
            and d_movgest_stato.movgest_stato_code <> 'A'          	
          	and d_movgest_ts_tipo.movgest_ts_tipo_code='T'   
            	-- l'importo IMPEGNATO ha la tipologia = A - ATTUALE         	
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
            and r_movgest_ts_stato.validita_fine is NULL
            and r_movgest_ts_stato.data_cancellazione is null
          	and t_movgest.data_cancellazione is null
          	and t_movgest_ts.data_cancellazione is null
          	and t_movgest_ts_det.data_cancellazione is null
          	and r_movgest_bil_elem.data_cancellazione is null
          	and d_movgest_tipo.data_cancellazione is null          	
          	and d_movgest_stato.data_cancellazione is null
          	and d_movgest_ts_tipo.data_cancellazione is null
          	and d_movgest_ts_det_tipo.data_cancellazione is null
          group by t_movgest_ts.movgest_ts_id),
	stanziato_anno as(
    	select t_movgest_ts.movgest_ts_id,
        	sum(coalesce(t_movgest_ts_det.movgest_ts_det_importo,0)) stanziato 
        from siac_t_movgest t_movgest,
        	siac_t_movgest_ts t_movgest_ts,
            siac_t_movgest_ts_det t_movgest_ts_det,
			siac_r_movgest_bil_elem r_movgest_bil_elem,
            siac_d_movgest_tipo d_movgest_tipo,
            siac_r_movgest_ts_stato r_movgest_ts_stato,
            siac_d_movgest_stato d_movgest_stato,
			siac_d_movgest_ts_tipo d_movgest_ts_tipo,
            siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo
 		where t_movgest_ts.movgest_id=t_movgest.movgest_id
           	and t_movgest_ts_det.movgest_ts_id=t_movgest_ts.movgest_ts_id
           	and d_movgest_ts_tipo.movgest_ts_tipo_id=t_movgest_ts.movgest_ts_tipo_id
          	and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
          	and d_movgest_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_id=t_movgest_ts_det.movgest_ts_det_tipo_id
          	and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
          	and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
            and t_movgest.ente_proprietario_id = p_ente_prop_id
            and t_movgest.bil_id=bilancio_id
            and t_movgest.movgest_anno = p_anno::integer
            and d_movgest_tipo.movgest_tipo_code='I'
          		--escludo solo gli impegni ANNULLATI.
            and d_movgest_stato.movgest_stato_code <> 'A'           	
          	and d_movgest_ts_tipo.movgest_ts_tipo_code='T'       
            	-- l'importo STANZIATO ha la tipologia = I - INIZIALE    	
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='I'
            and r_movgest_ts_stato.validita_fine is NULL
            and r_movgest_ts_stato.data_cancellazione is null
          	and t_movgest.data_cancellazione is null
          	and t_movgest_ts.data_cancellazione is null
          	and t_movgest_ts_det.data_cancellazione is null
          	and r_movgest_bil_elem.data_cancellazione is null
          	and d_movgest_tipo.data_cancellazione is null          	
          	and d_movgest_stato.data_cancellazione is null
          	and d_movgest_ts_tipo.data_cancellazione is null
          	and d_movgest_ts_det_tipo.data_cancellazione is null
          group by t_movgest_ts.movgest_ts_id),   
        prenotato_anno as(
          select t_movgest_ts.movgest_id,
              sum(coalesce(t_movgest_ts_det.movgest_ts_det_importo,0)) prenotato 
          from siac_t_movgest t_movgest,
              siac_t_movgest_ts t_movgest_ts,
              siac_t_movgest_ts_det t_movgest_ts_det,
              siac_r_movgest_bil_elem r_movgest_bil_elem,
              siac_d_movgest_tipo d_movgest_tipo,
              siac_r_movgest_ts_stato r_movgest_ts_stato,
              siac_d_movgest_stato d_movgest_stato,
              siac_d_movgest_ts_tipo d_movgest_ts_tipo,
              siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo
          where t_movgest_ts.movgest_id=t_movgest.movgest_id
              and t_movgest_ts_det.movgest_ts_id=t_movgest_ts.movgest_ts_id
              and d_movgest_ts_tipo.movgest_ts_tipo_id=t_movgest_ts.movgest_ts_tipo_id
              and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
              and d_movgest_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
              and d_movgest_ts_det_tipo.movgest_ts_det_tipo_id=t_movgest_ts_det.movgest_ts_det_tipo_id
              and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
              and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
              and t_movgest.ente_proprietario_id = p_ente_prop_id
              and t_movgest.bil_id=bilancio_id
              and t_movgest.movgest_anno = p_anno::integer
              and d_movgest_tipo.movgest_tipo_code='I'
              	--escludo solo gli impegni ANNULLATI.
            and d_movgest_stato.movgest_stato_code <> 'A'            	
              	-- per il PRENOTATO devo prendere l'importo dei SUB-IMPEGNI      	
          	  and d_movgest_ts_tipo.movgest_ts_tipo_code='S'     
                  -- l'importo IMPEGNATO ha la tipologia = A - ATTUALE         	
              and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
              and r_movgest_ts_stato.validita_fine is NULL
              and r_movgest_ts_stato.data_cancellazione is null
              and t_movgest.data_cancellazione is null
              and t_movgest_ts.data_cancellazione is null
              and t_movgest_ts_det.data_cancellazione is null
              and r_movgest_bil_elem.data_cancellazione is null
              and d_movgest_tipo.data_cancellazione is null          	
              and d_movgest_stato.data_cancellazione is null
              and d_movgest_ts_tipo.data_cancellazione is null
              and d_movgest_ts_det_tipo.data_cancellazione is null
            group by t_movgest_ts.movgest_id),              
        liquidazioni_anno as(
    	select t_movgest_ts.movgest_ts_id,
        	sum(coalesce(t_liq.liq_importo,0)) liquidazioni 
        from siac_t_movgest t_movgest,
        	siac_t_movgest_ts t_movgest_ts,
            siac_r_liquidazione_movgest r_liq_movgest,
            siac_t_liquidazione t_liq,
            siac_t_movgest_ts_det t_movgest_ts_det,
			siac_r_movgest_bil_elem r_movgest_bil_elem,
            siac_d_movgest_tipo d_movgest_tipo,
            siac_r_movgest_ts_stato r_movgest_ts_stato,
            siac_d_movgest_stato d_movgest_stato,
			siac_d_movgest_ts_tipo d_movgest_ts_tipo,
            siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo
 		where t_movgest_ts.movgest_id=t_movgest.movgest_id
           	and t_movgest_ts_det.movgest_ts_id=t_movgest_ts.movgest_ts_id
           	and d_movgest_ts_tipo.movgest_ts_tipo_id=t_movgest_ts.movgest_ts_tipo_id
          	and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
          	and d_movgest_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_id=t_movgest_ts_det.movgest_ts_det_tipo_id
          	and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
          	and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
            and r_liq_movgest.movgest_ts_id = t_movgest_ts.movgest_ts_id
            and t_liq.liq_id = r_liq_movgest.liq_id
            and t_movgest.ente_proprietario_id = p_ente_prop_id
            and t_movgest.bil_id=bilancio_id
            and t_movgest.movgest_anno = p_anno::integer
            and d_movgest_tipo.movgest_tipo_code='I'
          		--escludo solo gli impegni ANNULLATI.
            and d_movgest_stato.movgest_stato_code <> 'A'            	
          	and d_movgest_ts_tipo.movgest_ts_tipo_code='T'           	
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
            and r_movgest_ts_stato.validita_fine is NULL
            and r_movgest_ts_stato.data_cancellazione is null
          	and t_movgest.data_cancellazione is null
          	and t_movgest_ts.data_cancellazione is null
          	and t_movgest_ts_det.data_cancellazione is null
          	and r_movgest_bil_elem.data_cancellazione is null
          	and d_movgest_tipo.data_cancellazione is null          	
          	and d_movgest_stato.data_cancellazione is null
          	and d_movgest_ts_tipo.data_cancellazione is null
          	and d_movgest_ts_det_tipo.data_cancellazione is null
            and r_liq_movgest.validita_fine is NULL
            and r_liq_movgest.data_cancellazione is null
            and t_liq.data_cancellazione is null
          group by t_movgest_ts.movgest_ts_id),
    impegni_anno1 as(
    	select t_movgest_ts.movgest_ts_id,
        	sum(coalesce(t_movgest_ts_det.movgest_ts_det_importo,0)) impegni 
        from siac_t_movgest t_movgest,
        	siac_t_movgest_ts t_movgest_ts,
            siac_t_movgest_ts_det t_movgest_ts_det,
			siac_r_movgest_bil_elem r_movgest_bil_elem,
            siac_d_movgest_tipo d_movgest_tipo,
            siac_r_movgest_ts_stato r_movgest_ts_stato,
            siac_d_movgest_stato d_movgest_stato,
			siac_d_movgest_ts_tipo d_movgest_ts_tipo,
            siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo
 		where t_movgest_ts.movgest_id=t_movgest.movgest_id
           	and t_movgest_ts_det.movgest_ts_id=t_movgest_ts.movgest_ts_id
           	and d_movgest_ts_tipo.movgest_ts_tipo_id=t_movgest_ts.movgest_ts_tipo_id
          	and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
          	and d_movgest_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_id=t_movgest_ts_det.movgest_ts_det_tipo_id
          	and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
          	and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
            and t_movgest.ente_proprietario_id = p_ente_prop_id
            and t_movgest.bil_id=bilancio_id
            and t_movgest.movgest_anno = (p_anno::integer + 1)
            and d_movgest_tipo.movgest_tipo_code='I'
          		--escludo solo gli impegni ANNULLATI.
            and d_movgest_stato.movgest_stato_code <> 'A'            	
          	and d_movgest_ts_tipo.movgest_ts_tipo_code='T'   
            	-- l'importo IMPEGNATO ha la tipologia = A - ATTUALE         	
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
            and r_movgest_ts_stato.validita_fine is NULL
            and r_movgest_ts_stato.data_cancellazione is null
          	and t_movgest.data_cancellazione is null
          	and t_movgest_ts.data_cancellazione is null
          	and t_movgest_ts_det.data_cancellazione is null
          	and r_movgest_bil_elem.data_cancellazione is null
          	and d_movgest_tipo.data_cancellazione is null          	
          	and d_movgest_stato.data_cancellazione is null
          	and d_movgest_ts_tipo.data_cancellazione is null
          	and d_movgest_ts_det_tipo.data_cancellazione is null
          group by t_movgest_ts.movgest_ts_id),
	stanziato_anno1 as(
    	select t_movgest_ts.movgest_ts_id,
        	sum(coalesce(t_movgest_ts_det.movgest_ts_det_importo,0)) stanziato 
        from siac_t_movgest t_movgest,
        	siac_t_movgest_ts t_movgest_ts,
            siac_t_movgest_ts_det t_movgest_ts_det,
			siac_r_movgest_bil_elem r_movgest_bil_elem,
            siac_d_movgest_tipo d_movgest_tipo,
            siac_r_movgest_ts_stato r_movgest_ts_stato,
            siac_d_movgest_stato d_movgest_stato,
			siac_d_movgest_ts_tipo d_movgest_ts_tipo,
            siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo
 		where t_movgest_ts.movgest_id=t_movgest.movgest_id
           	and t_movgest_ts_det.movgest_ts_id=t_movgest_ts.movgest_ts_id
           	and d_movgest_ts_tipo.movgest_ts_tipo_id=t_movgest_ts.movgest_ts_tipo_id
          	and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
          	and d_movgest_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_id=t_movgest_ts_det.movgest_ts_det_tipo_id
          	and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
          	and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
            and t_movgest.ente_proprietario_id = p_ente_prop_id
            and t_movgest.bil_id=bilancio_id
            and t_movgest.movgest_anno = (p_anno::integer +1)
            and d_movgest_tipo.movgest_tipo_code='I'
          		--escludo solo gli impegni ANNULLATI.
            and d_movgest_stato.movgest_stato_code <> 'A'            	
          	and d_movgest_ts_tipo.movgest_ts_tipo_code='T'       
            	-- l'importo STANZIATO ha la tipologia = I - INIZIALE    	
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='I'
            and r_movgest_ts_stato.validita_fine is NULL
            and r_movgest_ts_stato.data_cancellazione is null
          	and t_movgest.data_cancellazione is null
          	and t_movgest_ts.data_cancellazione is null
          	and t_movgest_ts_det.data_cancellazione is null
          	and r_movgest_bil_elem.data_cancellazione is null
          	and d_movgest_tipo.data_cancellazione is null          	
          	and d_movgest_stato.data_cancellazione is null
          	and d_movgest_ts_tipo.data_cancellazione is null
          	and d_movgest_ts_det_tipo.data_cancellazione is null
          group by t_movgest_ts.movgest_ts_id) ,
	prenotato_anno1 as(
          select t_movgest_ts.movgest_id,
              sum(coalesce(t_movgest_ts_det.movgest_ts_det_importo,0)) prenotato 
          from siac_t_movgest t_movgest,
              siac_t_movgest_ts t_movgest_ts,
              siac_t_movgest_ts_det t_movgest_ts_det,
              siac_r_movgest_bil_elem r_movgest_bil_elem,
              siac_d_movgest_tipo d_movgest_tipo,
              siac_r_movgest_ts_stato r_movgest_ts_stato,
              siac_d_movgest_stato d_movgest_stato,
              siac_d_movgest_ts_tipo d_movgest_ts_tipo,
              siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo
          where t_movgest_ts.movgest_id=t_movgest.movgest_id
              and t_movgest_ts_det.movgest_ts_id=t_movgest_ts.movgest_ts_id
              and d_movgest_ts_tipo.movgest_ts_tipo_id=t_movgest_ts.movgest_ts_tipo_id
              and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
              and d_movgest_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
              and d_movgest_ts_det_tipo.movgest_ts_det_tipo_id=t_movgest_ts_det.movgest_ts_det_tipo_id
              and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
              and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
              and t_movgest.ente_proprietario_id = p_ente_prop_id
              and t_movgest.bil_id=bilancio_id
              and t_movgest.movgest_anno = (p_anno::integer +1)
              and d_movgest_tipo.movgest_tipo_code='I'
              	--escludo solo gli impegni ANNULLATI.
            and d_movgest_stato.movgest_stato_code <> 'A'           	
              	-- per il PRENOTATO devo prendere l'importo dei SUB-IMPEGNI      	
          	  and d_movgest_ts_tipo.movgest_ts_tipo_code='S'     
                  -- l'importo IMPEGNATO ha la tipologia = A - ATTUALE         	
              and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
              and r_movgest_ts_stato.validita_fine is NULL
              and r_movgest_ts_stato.data_cancellazione is null
              and t_movgest.data_cancellazione is null
              and t_movgest_ts.data_cancellazione is null
              and t_movgest_ts_det.data_cancellazione is null
              and r_movgest_bil_elem.data_cancellazione is null
              and d_movgest_tipo.data_cancellazione is null          	
              and d_movgest_stato.data_cancellazione is null
              and d_movgest_ts_tipo.data_cancellazione is null
              and d_movgest_ts_det_tipo.data_cancellazione is null
            group by t_movgest_ts.movgest_id),           
    impegni_anno2 as(
    	select t_movgest_ts.movgest_ts_id,
        	sum(coalesce(t_movgest_ts_det.movgest_ts_det_importo,0)) impegni 
        from siac_t_movgest t_movgest,
        	siac_t_movgest_ts t_movgest_ts,
            siac_t_movgest_ts_det t_movgest_ts_det,
			siac_r_movgest_bil_elem r_movgest_bil_elem,
            siac_d_movgest_tipo d_movgest_tipo,
            siac_r_movgest_ts_stato r_movgest_ts_stato,
            siac_d_movgest_stato d_movgest_stato,
			siac_d_movgest_ts_tipo d_movgest_ts_tipo,
            siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo
 		where t_movgest_ts.movgest_id=t_movgest.movgest_id
           	and t_movgest_ts_det.movgest_ts_id=t_movgest_ts.movgest_ts_id
           	and d_movgest_ts_tipo.movgest_ts_tipo_id=t_movgest_ts.movgest_ts_tipo_id
          	and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
          	and d_movgest_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_id=t_movgest_ts_det.movgest_ts_det_tipo_id
          	and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
          	and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
            and t_movgest.ente_proprietario_id = p_ente_prop_id
            and t_movgest.bil_id=bilancio_id
            and t_movgest.movgest_anno = (p_anno::integer + 2)
            and d_movgest_tipo.movgest_tipo_code='I'
          		--escludo solo gli impegni ANNULLATI.
            and d_movgest_stato.movgest_stato_code <> 'A'           	
          	and d_movgest_ts_tipo.movgest_ts_tipo_code='T'   
            	-- l'importo IMPEGNATO ha la tipologia = A - ATTUALE         	
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
            and r_movgest_ts_stato.validita_fine is NULL
            and r_movgest_ts_stato.data_cancellazione is null
          	and t_movgest.data_cancellazione is null
          	and t_movgest_ts.data_cancellazione is null
          	and t_movgest_ts_det.data_cancellazione is null
          	and r_movgest_bil_elem.data_cancellazione is null
          	and d_movgest_tipo.data_cancellazione is null          	
          	and d_movgest_stato.data_cancellazione is null
          	and d_movgest_ts_tipo.data_cancellazione is null
          	and d_movgest_ts_det_tipo.data_cancellazione is null
          group by t_movgest_ts.movgest_ts_id),
        stanziato_anno2 as(
    	select t_movgest_ts.movgest_ts_id,
        	sum(coalesce(t_movgest_ts_det.movgest_ts_det_importo,0)) stanziato 
        from siac_t_movgest t_movgest,
        	siac_t_movgest_ts t_movgest_ts,
            siac_t_movgest_ts_det t_movgest_ts_det,
			siac_r_movgest_bil_elem r_movgest_bil_elem,
            siac_d_movgest_tipo d_movgest_tipo,
            siac_r_movgest_ts_stato r_movgest_ts_stato,
            siac_d_movgest_stato d_movgest_stato,
			siac_d_movgest_ts_tipo d_movgest_ts_tipo,
            siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo
 		where t_movgest_ts.movgest_id=t_movgest.movgest_id
           	and t_movgest_ts_det.movgest_ts_id=t_movgest_ts.movgest_ts_id
           	and d_movgest_ts_tipo.movgest_ts_tipo_id=t_movgest_ts.movgest_ts_tipo_id
          	and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
          	and d_movgest_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_id=t_movgest_ts_det.movgest_ts_det_tipo_id
          	and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
          	and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
            and t_movgest.ente_proprietario_id = p_ente_prop_id
            and t_movgest.bil_id=bilancio_id
            and t_movgest.movgest_anno = (p_anno::integer +2)
            and d_movgest_tipo.movgest_tipo_code='I'
          		--escludo solo gli impegni ANNULLATI.
            and d_movgest_stato.movgest_stato_code <> 'A'           	
          	and d_movgest_ts_tipo.movgest_ts_tipo_code='T'       
            	-- l'importo STANZIATO ha la tipologia = I - INIZIALE    	
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='I'
            and r_movgest_ts_stato.validita_fine is NULL
            and r_movgest_ts_stato.data_cancellazione is null
          	and t_movgest.data_cancellazione is null
          	and t_movgest_ts.data_cancellazione is null
          	and t_movgest_ts_det.data_cancellazione is null
          	and r_movgest_bil_elem.data_cancellazione is null
          	and d_movgest_tipo.data_cancellazione is null          	
          	and d_movgest_stato.data_cancellazione is null
          	and d_movgest_ts_tipo.data_cancellazione is null
          	and d_movgest_ts_det_tipo.data_cancellazione is null
          group by t_movgest_ts.movgest_ts_id), 
    prenotato_anno2 as(
          select t_movgest_ts.movgest_id,
              sum(coalesce(t_movgest_ts_det.movgest_ts_det_importo,0)) prenotato 
          from siac_t_movgest t_movgest,
              siac_t_movgest_ts t_movgest_ts,
              siac_t_movgest_ts_det t_movgest_ts_det,
              siac_r_movgest_bil_elem r_movgest_bil_elem,
              siac_d_movgest_tipo d_movgest_tipo,
              siac_r_movgest_ts_stato r_movgest_ts_stato,
              siac_d_movgest_stato d_movgest_stato,
              siac_d_movgest_ts_tipo d_movgest_ts_tipo,
              siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo
          where t_movgest_ts.movgest_id=t_movgest.movgest_id
              and t_movgest_ts_det.movgest_ts_id=t_movgest_ts.movgest_ts_id
              and d_movgest_ts_tipo.movgest_ts_tipo_id=t_movgest_ts.movgest_ts_tipo_id
              and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
              and d_movgest_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
              and d_movgest_ts_det_tipo.movgest_ts_det_tipo_id=t_movgest_ts_det.movgest_ts_det_tipo_id
              and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
              and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
              and t_movgest.ente_proprietario_id = p_ente_prop_id
              and t_movgest.bil_id=bilancio_id
              and t_movgest.movgest_anno = (p_anno::integer + 2)
              and d_movgest_tipo.movgest_tipo_code='I'
              	--escludo solo gli impegni ANNULLATI.
              and d_movgest_stato.movgest_stato_code <> 'A'            	
              	-- per il PRENOTATO devo prendere l'importo dei SUB-IMPEGNI      	
          	  and d_movgest_ts_tipo.movgest_ts_tipo_code='S'     
                  -- l'importo IMPEGNATO ha la tipologia = A - ATTUALE         	
              and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
              and r_movgest_ts_stato.validita_fine is NULL
              and r_movgest_ts_stato.data_cancellazione is null
              and t_movgest.data_cancellazione is null
              and t_movgest_ts.data_cancellazione is null
              and t_movgest_ts_det.data_cancellazione is null
              and r_movgest_bil_elem.data_cancellazione is null
              and d_movgest_tipo.data_cancellazione is null          	
              and d_movgest_stato.data_cancellazione is null
              and d_movgest_ts_tipo.data_cancellazione is null
              and d_movgest_ts_det_tipo.data_cancellazione is null
            group by t_movgest_ts.movgest_id), 
	impegni_anni_succ as(
    	select t_movgest_ts.movgest_ts_id,
        	sum(coalesce(t_movgest_ts_det.movgest_ts_det_importo,0)) impegni 
        from siac_t_movgest t_movgest,
        	siac_t_movgest_ts t_movgest_ts,
            siac_t_movgest_ts_det t_movgest_ts_det,
			siac_r_movgest_bil_elem r_movgest_bil_elem,
            siac_d_movgest_tipo d_movgest_tipo,
            siac_r_movgest_ts_stato r_movgest_ts_stato,
            siac_d_movgest_stato d_movgest_stato,
			siac_d_movgest_ts_tipo d_movgest_ts_tipo,
            siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo
 		where t_movgest_ts.movgest_id=t_movgest.movgest_id
           	and t_movgest_ts_det.movgest_ts_id=t_movgest_ts.movgest_ts_id
           	and d_movgest_ts_tipo.movgest_ts_tipo_id=t_movgest_ts.movgest_ts_tipo_id
          	and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
          	and d_movgest_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_id=t_movgest_ts_det.movgest_ts_det_tipo_id
          	and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
          	and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
            and t_movgest.ente_proprietario_id = p_ente_prop_id
            and t_movgest.bil_id=bilancio_id
            and t_movgest.movgest_anno > (p_anno::integer + 2)
            and d_movgest_tipo.movgest_tipo_code='I'
          		--escludo solo gli impegni ANNULLATI.
            and d_movgest_stato.movgest_stato_code <> 'A'            	
          	and d_movgest_ts_tipo.movgest_ts_tipo_code='T'   
            	-- l'importo IMPEGNATO ha la tipologia = A - ATTUALE         	
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
            and r_movgest_ts_stato.validita_fine is NULL
            and r_movgest_ts_stato.data_cancellazione is null
          	and t_movgest.data_cancellazione is null
          	and t_movgest_ts.data_cancellazione is null
          	and t_movgest_ts_det.data_cancellazione is null
          	and r_movgest_bil_elem.data_cancellazione is null
          	and d_movgest_tipo.data_cancellazione is null          	
          	and d_movgest_stato.data_cancellazione is null
          	and d_movgest_ts_tipo.data_cancellazione is null
          	and d_movgest_ts_det_tipo.data_cancellazione is null
          group by t_movgest_ts.movgest_ts_id),              
        stanziato_anni_succ as(
    	select t_movgest_ts.movgest_ts_id,
        	sum(coalesce(t_movgest_ts_det.movgest_ts_det_importo,0)) stanziato 
        from siac_t_movgest t_movgest,
        	siac_t_movgest_ts t_movgest_ts,
            siac_t_movgest_ts_det t_movgest_ts_det,
			siac_r_movgest_bil_elem r_movgest_bil_elem,
            siac_d_movgest_tipo d_movgest_tipo,
            siac_r_movgest_ts_stato r_movgest_ts_stato,
            siac_d_movgest_stato d_movgest_stato,
			siac_d_movgest_ts_tipo d_movgest_ts_tipo,
            siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo
 		where t_movgest_ts.movgest_id=t_movgest.movgest_id
           	and t_movgest_ts_det.movgest_ts_id=t_movgest_ts.movgest_ts_id
           	and d_movgest_ts_tipo.movgest_ts_tipo_id=t_movgest_ts.movgest_ts_tipo_id
          	and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
          	and d_movgest_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_id=t_movgest_ts_det.movgest_ts_det_tipo_id
          	and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
          	and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
            and t_movgest.ente_proprietario_id = p_ente_prop_id
            and t_movgest.bil_id=bilancio_id
            and t_movgest.movgest_anno > (p_anno::integer +2)
            and d_movgest_tipo.movgest_tipo_code='I'
          		--escludo solo gli impegni ANNULLATI.
            and d_movgest_stato.movgest_stato_code <> 'A'            	
          	and d_movgest_ts_tipo.movgest_ts_tipo_code='T'       
            	-- l'importo STANZIATO ha la tipologia = I - INIZIALE    	
          	and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='I'
            and r_movgest_ts_stato.validita_fine is NULL
            and r_movgest_ts_stato.data_cancellazione is null
          	and t_movgest.data_cancellazione is null
          	and t_movgest_ts.data_cancellazione is null
          	and t_movgest_ts_det.data_cancellazione is null
          	and r_movgest_bil_elem.data_cancellazione is null
          	and d_movgest_tipo.data_cancellazione is null          	
          	and d_movgest_stato.data_cancellazione is null
          	and d_movgest_ts_tipo.data_cancellazione is null
          	and d_movgest_ts_det_tipo.data_cancellazione is null
          group by t_movgest_ts.movgest_ts_id),
        prenotato_anni_succ as(
          select t_movgest_ts.movgest_id,
              sum(coalesce(t_movgest_ts_det.movgest_ts_det_importo,0)) prenotato 
          from siac_t_movgest t_movgest,
              siac_t_movgest_ts t_movgest_ts,
              siac_t_movgest_ts_det t_movgest_ts_det,
              siac_r_movgest_bil_elem r_movgest_bil_elem,
              siac_d_movgest_tipo d_movgest_tipo,
              siac_r_movgest_ts_stato r_movgest_ts_stato,
              siac_d_movgest_stato d_movgest_stato,
              siac_d_movgest_ts_tipo d_movgest_ts_tipo,
              siac_d_movgest_ts_det_tipo d_movgest_ts_det_tipo
          where t_movgest_ts.movgest_id=t_movgest.movgest_id
              and t_movgest_ts_det.movgest_ts_id=t_movgest_ts.movgest_ts_id
              and d_movgest_ts_tipo.movgest_ts_tipo_id=t_movgest_ts.movgest_ts_tipo_id
              and r_movgest_bil_elem.movgest_id=t_movgest.movgest_id
              and d_movgest_tipo.movgest_tipo_id=t_movgest.movgest_tipo_id
              and d_movgest_ts_det_tipo.movgest_ts_det_tipo_id=t_movgest_ts_det.movgest_ts_det_tipo_id
              and r_movgest_ts_stato.movgest_ts_id=t_movgest_ts.movgest_ts_id
              and r_movgest_ts_stato.movgest_stato_id=d_movgest_stato.movgest_stato_id
              and t_movgest.ente_proprietario_id = p_ente_prop_id
              and t_movgest.bil_id=bilancio_id
              and t_movgest.movgest_anno > (p_anno::integer + 2)
              and d_movgest_tipo.movgest_tipo_code='I'
              	--escludo solo gli impegni ANNULLATI.
              and d_movgest_stato.movgest_stato_code <> 'A'            	
              	-- per il PRENOTATO devo prendere l'importo dei SUB-IMPEGNI      	
          	  and d_movgest_ts_tipo.movgest_ts_tipo_code='S'     
                  -- l'importo IMPEGNATO ha la tipologia = A - ATTUALE         	
              and d_movgest_ts_det_tipo.movgest_ts_det_tipo_code='A'
              and r_movgest_ts_stato.validita_fine is NULL
              and r_movgest_ts_stato.data_cancellazione is null
              and t_movgest.data_cancellazione is null
              and t_movgest_ts.data_cancellazione is null
              and t_movgest_ts_det.data_cancellazione is null
              and r_movgest_bil_elem.data_cancellazione is null
              and d_movgest_tipo.data_cancellazione is null          	
              and d_movgest_stato.data_cancellazione is null
              and d_movgest_ts_tipo.data_cancellazione is null
              and d_movgest_ts_det_tipo.data_cancellazione is null
            group by t_movgest_ts.movgest_id) 
    	select quadro_economico.parte_code::varchar  parte_code,
            quadro_economico.parte_desc::varchar parte_desc,
            quadro_economico.quadro_economico_id::integer quadro_economico_id,
            quadro_economico.quadro_economico_code::varchar quadro_economico_code,
            quadro_economico.quadro_economico_desc::varchar quadro_economico_desc,
            quadro_economico.quadro_economico_id_padre::integer quadro_economico_id_padre,
            quadro_economico.livello::integer livello,
            quadro_economico.quadro_economico_stato_code::varchar quadro_economico_stato_code,
            quadro_economico.quadro_economico_stato_desc::varchar quadro_economico_stato_desc,
            quadro_economico.voce_quadro_economico::varchar voce_quadro_economico,
            quadro_economico.importo_quadro_economico::numeric importo_quadro_economico,
            quadro_economico.cronop_data_approvazione_fattibilita::timestamp cronop_data_approvazione_fattibilita,
            quadro_economico.cronop_data_approvazione_programma_def::timestamp cronop_data_approvazione_programma_def,
            quadro_economico.cronop_data_approvazione_programma_esec::timestamp cronop_data_approvazione_programma_esec,
            quadro_economico.cronop_data_avvio_procedura::timestamp cronop_data_avvio_procedura,
            quadro_economico.cronop_data_aggiudicazione_lavori::timestamp cronop_data_aggiudicazione_lavori,
            quadro_economico.cronop_data_inizio_lavori::timestamp cronop_data_inizio_lavori,
            quadro_economico.cronop_data_fine_lavori::timestamp cronop_data_fine_lavori,
            quadro_economico.cronop_giorni_durata::integer cronop_giorni_durata,
            quadro_economico.cronop_data_collaudo::timestamp cronop_data_collaudo,
            COALESCE(liquidazioni_anno_prec.liquidazioni,0)::numeric liquidato_anni_prec,
  			COALESCE(stanziato_anno.stanziato,0)::numeric stanziato_anno,
            COALESCE(impegni_anno.impegni,0)::numeric impegnato_anno,
            COALESCE(prenotato_anno.prenotato,0)::numeric prenotato_anno,
            COALESCE(liquidazioni_anno.liquidazioni,0)::numeric liquidato_anno,
            COALESCE(stanziato_anno1.stanziato,0)::numeric stanziato_anno1,
            COALESCE(impegni_anno1.impegni,0)::numeric impegnato_anno1,
            COALESCE(prenotato_anno1.prenotato,0)::numeric prenotato_anno1,
            COALESCE(stanziato_anno2.stanziato,0)::numeric stanziato_anno2,
            COALESCE(impegni_anno2.impegni,0)::numeric impegnato_anno2,
            COALESCE(prenotato_anno2.prenotato,0)::numeric prenotato_anno2,
            COALESCE(stanziato_anni_succ.stanziato,0)::numeric stanziato_anni_succ,
            COALESCE(impegni_anni_succ.impegni,0)::numeric impegnato_anni_succ,
            COALESCE(prenotato_anni_succ.prenotato,0)::numeric prenotato_anni_succ
        from quadro_economico
        	left join impegni_anno
            	ON impegni_anno.movgest_ts_id = quadro_economico.movgest_ts_id 
            left join liquidazioni_anno
            	ON liquidazioni_anno.movgest_ts_id = quadro_economico.movgest_ts_id
            left join liquidazioni_anno_prec
            	ON liquidazioni_anno_prec.movgest_ts_id = quadro_economico.movgest_ts_id
            left join stanziato_anno
            	ON stanziato_anno.movgest_ts_id = quadro_economico.movgest_ts_id
            left join stanziato_anno1
            	ON stanziato_anno1.movgest_ts_id = quadro_economico.movgest_ts_id
            left join stanziato_anno2
            	ON stanziato_anno2.movgest_ts_id = quadro_economico.movgest_ts_id
            left join stanziato_anni_succ
            	ON stanziato_anni_succ.movgest_ts_id = quadro_economico.movgest_ts_id
            left join impegni_anno1
            	ON impegni_anno1.movgest_ts_id = quadro_economico.movgest_ts_id 
            left join impegni_anno2
            	ON impegni_anno2.movgest_ts_id = quadro_economico.movgest_ts_id 
            left join impegni_anni_succ
            	ON impegni_anni_succ.movgest_ts_id = quadro_economico.movgest_ts_id
            left join prenotato_anno
            	ON prenotato_anno.movgest_id = quadro_economico.movgest_id  
            left join prenotato_anno1
            	ON prenotato_anno1.movgest_id = quadro_economico.movgest_id
            left join prenotato_anno2
            	ON prenotato_anno2.movgest_id = quadro_economico.movgest_id
            left join prenotato_anni_succ
            	ON prenotato_anni_succ.movgest_id = quadro_economico.movgest_id
                                                                    
       UNION -- estraggo anche le PARTI A, B, C vuote per fare in modo che nel 
              -- report esistano sempre.
            select 
              d_qua_econ_parte.parte_code  parte_code,
              d_qua_econ_parte.parte_desc parte_desc,
              0::integer quadro_economico_id,
              ''::varchar quadro_economico_code,
              ''::varchar quadro_economico_desc,
              0::integer quadro_economico_id_padre,
              0::integer livello,
              ''::varchar quadro_economico_stato_code,
              ''::varchar quadro_economico_stato_desc,
              ''::varchar voce_quadro_economico,
              0::numeric importo_quadro_economico,
              NULL cronop_data_approvazione_fattibilita,
              NULL cronop_data_approvazione_programma_def,
              NULL cronop_data_approvazione_programma_esec,
              NULL cronop_data_avvio_procedura,
              NULL cronop_data_aggiudicazione_lavori,
              NULL cronop_data_inizio_lavori,
              NULL cronop_data_fine_lavori,
              NULL cronop_giorni_durata,
              NULL cronop_data_collaudo,
              0::numeric  liquidato_anni_prec,
              0::numeric  stanziato_anno,
              0::numeric  impegnato_anno,
              0::numeric  prenotato_anno,
              0::numeric  liquidato_anno,
              0::numeric  stanziato_anno1,
              0::numeric  impegnato_anno1,
              0::numeric  prenotato_anno1,
              0::numeric  stanziato_anno2,
              0::numeric  impegnato_anno2,
              0::numeric  prenotato_anno2,
              0::numeric  stanziato_anni_succ,
              0::numeric  impegnato_anni_succ,
              0::numeric  prenotato_anni_succ 
            from siac_d_quadro_economico_parte d_qua_econ_parte
            where d_qua_econ_parte.ente_proprietario_id=p_ente_prop_id
                and d_qua_econ_parte.data_cancellazione IS NULL;
        
        
exception
	when no_data_found THEN
		raise notice 'Nessun dato trovato per il quadro economico';
		return;
	when others  THEN
		RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
		return;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;


--SIAC-6611 e SIAC-6870 e SIAC-6856 - Maurizio - FINE

--SIAC-6855 - Maurizio - INIZIO

DROP FUNCTION if exists siac."BILR045_report_progetto_dati_cronop"(p_ente_prop_id integer, p_codice_progetto varchar, p_anno_bilancio varchar);

CREATE OR REPLACE FUNCTION siac."BILR045_report_progetto_dati_cronop" (
  p_ente_prop_id integer,
  p_codice_progetto varchar,
  p_anno_bilancio varchar
)
RETURNS TABLE (
  tipo_liv1 varchar,
  codice_liv1 varchar,
  descr_liv1 varchar,
  tipo_liv2 varchar,
  codice_liv2 varchar,
  descr_liv2 varchar,
  tipo_liv3 varchar,
  codice_liv3 varchar,
  descr_liv3 varchar,
  tipo_liv4 varchar,
  codice_liv4 varchar,
  descr_liv4 varchar,
  id_progetto integer,
  capitolo varchar,
  articolo varchar,
  ueb varchar,
  anno_competenza_stanziamento varchar,
  anno_entrata_rif_spesa varchar,
  stanziato numeric,
  descrizione1_attivita varchar,
  descrizione2_attivita varchar,
  anno_bilancio varchar,
  cronoprogramma_id integer,
  cronoprogramma_codice varchar,
  cronoprogramma_descrizione varchar,
  stato varchar,
  note_cronoprogramma varchar,
  cronop_id_elem integer,
  tipologia_capitolo varchar,
  codice_classificatore varchar,
  descrizione_classificatore varchar,
  descrizione_tipo_classificatore varchar
) AS
$body$
DECLARE
datistrutturaRec record;
progettoRec record;
datiCronoprogrammaRec record;


tipo_capitolo_P varchar;
tipo_capitolo_G varchar;
descrizione_classificatore varchar;
codice_classificatore	varchar;
descrizione_tipo_classificatore	varchar;
-----tipologia_capitolo	varchar;
DEF_NULL	constant varchar:='';
def_spazio	constant varchar:=' ';  
RTN_MESSAGGIO varchar(1000):=DEF_NULL;
user_table	varchar;
id_capitolo integer;


BEGIN

	tipo_capitolo_G='';
	tipo_capitolo_P='';
	tipo_liv1='';
    codice_liv1='';
  	descr_liv1='';
  	tipo_liv2='';
    codice_liv2='';
  	descr_liv2='';
  	tipo_liv3='';
    codice_liv3='';
  	descr_liv3='';
  	tipo_liv4='';
    codice_liv4='';
  	descr_liv4='';
  	id_progetto=0;
    capitolo='';
  	articolo='';
  	ueb='';
  	anno_competenza_stanziamento='';
  	anno_entrata_rif_spesa='';
  	stanziato=0;
    descrizione1_attivita='';
    descrizione2_attivita='';



select fnc_siac_random_user()
into	user_table;


--------------------------------------------------------------------------------------------------------------------------------------------------
if	(coalesce(p_anno_bilancio,DEF_NULL)=DEF_NULL or coalesce(p_anno_bilancio,def_spazio)=def_spazio)
    THEN 
    insert into siac_rep_prog_cronop
          select 	a.programma_id,
          			b.cronop_id,
                    periodo.anno,
                    user_table
    from      	siac_t_programma a,
    			siac_t_cronop b,
                siac_t_bil	bil,
                siac_t_periodo periodo  			
    where 	a.programma_code		=	p_codice_progetto
    and		b.programma_id			=	a.programma_id
    and		b.bil_id					=	bil.bil_id
    and		bil.periodo_id				=	periodo.periodo_id	
    and 	a.ente_proprietario_id 	= 	p_ente_prop_id
    group by a.programma_id,b.cronop_id, periodo.anno;
        
else
    insert into  siac_rep_prog_cronop
            select 	a.programma_id	id_progetto,
          			b.cronop_id,
                    periodo.anno,
                    user_table
                  from 		siac_t_programma a, 
                          	siac_t_cronop b, 
                          	siac_t_bil	bil,
                          	siac_t_periodo periodo
                  where 	a.programma_code			=	p_codice_progetto
                  and		b.programma_id				=	a.programma_id
                  and		b.bil_id					=	bil.bil_id
                  and		bil.periodo_id				=	periodo.periodo_id
                  and		periodo.anno				=	p_anno_bilancio
                  and 		a.ente_proprietario_id 		= 	p_ente_prop_id
                  and 		b.ente_proprietario_id 		= 	a.ente_proprietario_id
                  and 		bil.ente_proprietario_id	=	a.ente_proprietario_id
                  and 		periodo.ente_proprietario_id	=	a.ente_proprietario_id
                  and		a.data_cancellazione	is NULL
                  and		b.data_cancellazione	is null
                  and		bil.data_cancellazione	is null
                  and		periodo.data_cancellazione	is null
                   group by a.programma_id,b.cronop_id, periodo.anno;                   
end if;  





---------------------------------------------------------------------------------------------------------------------------------------------------
for progettoRec in
    select 	id_programma		id_progetto,
    		id_cronoprogramma	cronoprogramma_id,
            anno_del_bilancio	anno_bilancio
    from 	siac_rep_prog_cronop a 
    where 	a.utente	=	user_table
loop
	id_progetto:=progettoRec.id_progetto; 
    cronoprogramma_id:=progettoRec.cronoprogramma_id; 
    anno_bilancio:=progettoRec.anno_bilancio;
    BEGIN
    for datiCronoprogrammaRec in
        select 		a.programma_id, 
                  	a.cronop_id					cronoprogramma_id, 
                  	a.cronop_code				cronoprogramma_codice, 
                  	a.cronop_desc				cronoprogramma_descrizione, 
                    COALESCE (c.anno_entrata,' ')	anno_entrata_rif_spesa, 
                  	c.periodo_id, 
                    COALESCE (d.anno,' ')		anno_competenza_stanziamento, 
                  	----c.cronop_elem_det_id		cronop_id_elem,
                    b.cronop_elem_id			cronop_id_elem,
                    k.elem_tipo_code			tipologia_capitolo,
                    b.elem_tipo_id,
                  	c.cronop_elem_det_importo	stanziato, 
                  	b.cronop_elem_desc			descrizione1_attivita, 
                  	b.cronop_elem_desc2			descrizione2_attivita,
                    COALESCE (b.cronop_elem_code,' ')	capitolo, 	
                    COALESCE (b.cronop_elem_code2,' ')	articolo, 	
                    COALESCE (b.cronop_elem_code3,' ')	ueb, 	
                  	f.cronop_stato_code, 
                  	f.cronop_stato_desc			stato,
                     (select 	r.testo
                  from  	siac_t_cronop a1,
                            siac_r_cronop_attr r,
                            siac_t_attr ta, 
                            siac_d_attr_tipo i    
                  where		a1.cronop_id	=	a.cronop_id
                  and		a1.cronop_id	=	r.cronop_id
                  and		ta.attr_id			=	r.attr_id
                  and		ta.attr_tipo_id		=	i.attr_tipo_id
                  and 		i.attr_tipo_code	=	'X'
                  --SIAC-6821 16/05/2019.
                  --Mancava il filtro sul nome dell'attributo da estrarre.
                  and 		upper(ta.attr_code)='NOTE'
                  and		r.data_cancellazione	is null
                  and		ta.data_cancellazione	is null
                  and		a.ente_proprietario_id	= p_ente_prop_id)  note_cronoprogramma
          from  	siac_r_cronop_stato e,
                  	siac_d_cronop_stato f,
                  	siac_t_cronop a,
                  	siac_t_cronop_elem b,
                    siac_d_bil_elem_tipo	k, 
                  	siac_t_cronop_elem_det c
                  FULL join  siac_t_periodo d
                  on (c.periodo_id		=	d.periodo_id)       
          where		a.programma_id			=	progettoRec.id_progetto
          and		a.cronop_id				=	progettoRec.cronoprogramma_id 	
          and		c.cronop_elem_id		=	b.cronop_elem_id
          and		b.cronop_id				=	a.cronop_id	
          and		a.ente_proprietario_id 	= 	p_ente_prop_id
          and 		b.ente_proprietario_id	=	a.ente_proprietario_id
          and		c.ente_proprietario_id	=	a.ente_proprietario_id
          and		e.cronop_id				=	a.cronop_id
          and		e.cronop_stato_id		=	f.cronop_stato_id
          and 		b.elem_tipo_id 			= 	k.elem_tipo_id
          and		d.ente_proprietario_id	=	a.ente_proprietario_id
          and		e.ente_proprietario_id	=	a.ente_proprietario_id
          and		f.ente_proprietario_id	=	a.ente_proprietario_id
          and		a.data_cancellazione is null
          and		b.data_cancellazione is null 
          and		c.data_cancellazione is null 
          and		d.data_cancellazione is null 
          and		e.data_cancellazione is null 
          and		f.data_cancellazione is null 
          order by a.programma_id,a.cronop_id,c.anno_entrata,d.anno 
		loop
        	cronoprogramma_codice:=datiCronoprogrammaRec.cronoprogramma_codice;
            cronoprogramma_id:=datiCronoprogrammaRec.cronoprogramma_id;  
            cronoprogramma_descrizione:=datiCronoprogrammaRec.cronoprogramma_descrizione;
            note_cronoprogramma:=datiCronoprogrammaRec.note_cronoprogramma; 
            anno_entrata_rif_spesa:=datiCronoprogrammaRec.anno_entrata_rif_spesa; 
            anno_competenza_stanziamento:=datiCronoprogrammaRec.anno_competenza_stanziamento; 
            stanziato:=datiCronoprogrammaRec.stanziato; 
            descrizione1_attivita:=datiCronoprogrammaRec.descrizione1_attivita;
            descrizione2_attivita:=datiCronoprogrammaRec.descrizione2_attivita;
            capitolo:=datiCronoprogrammaRec.capitolo; 
            articolo:=datiCronoprogrammaRec.articolo;
            ueb:=datiCronoprogrammaRec.ueb; 
            stato:=datiCronoprogrammaRec.stato;
            cronop_id_elem:=datiCronoprogrammaRec.cronop_id_elem;
            tipologia_capitolo:=datiCronoprogrammaRec.tipologia_capitolo;
-- raise notice 'cronop_id_elem = % - cronoprogramma_codice % - capitolo % - tipologia_capitolo %',
 --	datiCronoprogrammaRec.cronop_id_elem,cronoprogramma_codice, capitolo, 
   -- datiCronoprogrammaRec.tipologia_capitolo;  
    
    --SIAC-6855 verifico se il cronop_id_elem esiste su siac_r_cronop_elem_bil_elem.
    -- Se NON esiste devo prendere la struttura di bilancio da siac_r_cronop_elem_class
    -- e non da capitolo.
    	id_capitolo:=NULL;
		select a.elem_id
        into id_capitolo
		from siac_r_cronop_elem_bil_elem a
        where a.ente_proprietario_id = p_ente_prop_id
        	and a.cronop_elem_id = datiCronoprogrammaRec.cronop_id_elem;
            
        if  datiCronoprogrammaRec.tipologia_capitolo = 'CAP-EP' or datiCronoprogrammaRec.tipologia_capitolo = 'CAP-EG' THEN
    			if	(coalesce(datiCronoprogrammaRec.articolo ,DEF_spazio)=DEF_spazio 
                and coalesce(datiCronoprogrammaRec.ueb,DEF_spazio)=DEF_spazio) OR
                	id_capitolo IS NULL	THEN 
    	 			--raise notice 'capitolo % entro',capitolo;
                    BEGIN
    				for datistrutturaRec in                 
                    select distinct titolo_tipo.classif_tipo_desc  		tipo_liv1,
                               titolo.classif_code            				codice_liv1,
                               titolo.classif_desc            				descr_liv1,
                               tipologia_tipo.classif_tipo_desc				tipo_liv2,
                               tipologia.classif_code           			codice_liv2,
                               tipologia.classif_desc           			descr_liv2
                        from siac_t_class_fam_tree 			titolo_tree,
                             siac_d_class_fam 				titolo_fam,
                             siac_r_class_fam_tree 			titolo_r_cft,
                             siac_t_class 					titolo,
                             siac_d_class_tipo 				titolo_tipo,
                             siac_d_class_tipo 				tipologia_tipo,
                             siac_t_class 					tipologia,
                             siac_r_cronop_elem_class		r_cronp_class,
                             siac_t_cronop_elem_det			cronop_elem
                        where 		titolo_fam.classif_fam_desc					=	'Entrata - TitoliTipologieCategorie'
                              and 	titolo_tree.classif_fam_id					=	titolo_fam.classif_fam_id
                              and 	titolo_r_cft.classif_fam_tree_id			=	titolo_tree.classif_fam_tree_id
                              and 	titolo.classif_id							=	titolo_r_cft.classif_id_padre
                              and 	titolo_tipo.classif_tipo_code				=	'TITOLO_ENTRATA'
                              and 	titolo.classif_tipo_id						=	titolo_tipo.classif_tipo_id
                              and 	tipologia_tipo.classif_tipo_code			=	'TIPOLOGIA'
                              and 	tipologia.classif_tipo_id					=	tipologia_tipo.classif_tipo_id
                              and 	titolo_r_cft.classif_id						=	tipologia.classif_id
                               and 	r_cronp_class.classif_id					=	tipologia.classif_id
                              and	r_cronp_class.cronop_elem_id				=	datiCronoprogrammaRec.cronop_id_elem
                              and 	titolo.ente_proprietario_id					=	p_ente_prop_id
                              and 	tipologia.ente_proprietario_id				=	titolo.ente_proprietario_id
                              and 	titolo_tree.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	titolo_fam.ente_proprietario_id				=	titolo.ente_proprietario_id
                              and 	titolo_r_cft.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	titolo_tipo.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	tipologia_tipo.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	cronop_elem.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	r_cronp_class.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	titolo.data_cancellazione					is null
                              and 	tipologia.data_cancellazione				is null
                              and	r_cronp_class.data_cancellazione			is null
                              and 	titolo_tree.data_cancellazione				is null
                              and 	titolo_fam.data_cancellazione				is null
                              and 	titolo_r_cft.data_cancellazione				is null
                              and 	titolo_tipo.data_cancellazione				is null
                              and 	tipologia_tipo.data_cancellazione			is null
                              and 	cronop_elem.data_cancellazione				is null
    
                     
                      	loop
                     --   raise notice 'Capitolo %',capitolo;   
                        	tipo_liv1:=datistrutturaRec.tipo_liv1;
                                descr_liv1:=datistrutturaRec.descr_liv1;
                                codice_liv1:=datistrutturaRec.codice_liv1;
                                tipo_liv2:=datistrutturaRec.tipo_liv2;
                                descr_liv2:=datistrutturaRec.descr_liv2;
                                codice_liv2:=datistrutturaRec.codice_liv2;
                        end loop;
                        exception
                          when no_data_found THEN
                          	raise notice 'nessuna struttura collegata' ;
                          return;
                          when others  THEN
                          RTN_MESSAGGIO:='ricerca struttura nuovo capitolo entrata oppure senza capitolo entrata';
                          RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
                          return;
                    end;
    			else
                --raise notice 'capitolo % entro2',capitolo;
    ------------------------------------------------------------------------------------------------------------------------
                    BEGIN
                    for datistrutturaRec in
                        select distinct titolo_tipo.classif_tipo_desc  		tipo_liv1,
                               titolo.classif_code            				codice_liv1,
                               titolo.classif_desc            				descr_liv1,
                               tipologia_tipo.classif_tipo_desc				tipo_liv2,
                               tipologia.classif_code           			codice_liv2,
                               tipologia.classif_desc           			descr_liv2,
                               categoria_tipo.classif_tipo_desc  			tipo_liv3,
                               categoria.classif_code              			codice_liv3,
                               categoria.classif_desc               		descr_liv3
                        from siac_t_class_fam_tree 			titolo_tree,
                             siac_d_class_fam 				titolo_fam,
                             siac_r_class_fam_tree 			titolo_r_cft,
                             siac_r_class_fam_tree 			tipologia_r_cft,
                             siac_t_class 					titolo,
                             siac_d_class_tipo 				titolo_tipo,
                             siac_d_class_tipo 				tipologia_tipo,
                             siac_t_class 					tipologia,
                             siac_d_class_tipo 				categoria_tipo,
                             siac_t_class 					categoria,
                             siac_r_bil_elem_class 			r_capitolo_categoria,
                             siac_r_cronop_elem_bil_elem	r_cronop_elem,
                             siac_t_cronop_elem_det			cronop_elem
                        where 		titolo_fam.classif_fam_desc					=	'Entrata - TitoliTipologieCategorie'
                              and 	titolo_tree.classif_fam_id					=	titolo_fam.classif_fam_id
                              and 	titolo_r_cft.classif_fam_tree_id			=	titolo_tree.classif_fam_tree_id
                              and 	titolo.classif_id							=	titolo_r_cft.classif_id_padre
                              and 	titolo_tipo.classif_tipo_code				=	'TITOLO_ENTRATA'
                              and 	titolo.classif_tipo_id						=	titolo_tipo.classif_tipo_id
                              and 	tipologia_tipo.classif_tipo_code			=	'TIPOLOGIA'
                              and 	tipologia.classif_tipo_id					=	tipologia_tipo.classif_tipo_id
                              and 	titolo_r_cft.classif_id						=	tipologia.classif_id
                              and 	tipologia.classif_id						=	tipologia_r_cft.classif_id_padre
                              and 	categoria_tipo.classif_tipo_code			=	'CATEGORIA'
                              and 	categoria.classif_tipo_id					=	categoria_tipo.classif_tipo_id
                              and 	tipologia_r_cft.classif_id					=	categoria.classif_id
                              and	tipologia_r_cft.classif_id					=	r_capitolo_categoria.classif_id
                              and	r_capitolo_categoria.elem_id				=	r_cronop_elem.elem_id
                              and	r_cronop_elem.cronop_elem_id				=	datiCronoprogrammaRec.cronop_id_elem
                              and 	titolo.ente_proprietario_id					=	p_ente_prop_id
                              and 	tipologia.ente_proprietario_id				=	titolo.ente_proprietario_id
                              and 	categoria.ente_proprietario_id				=	titolo.ente_proprietario_id
                              and 	titolo_tree.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	titolo_fam.ente_proprietario_id				=	titolo.ente_proprietario_id
                              and 	titolo_r_cft.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	tipologia_r_cft.ente_proprietario_id		=	titolo.ente_proprietario_id
                              and 	titolo_tipo.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	tipologia_tipo.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	categoria_tipo.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	r_capitolo_categoria.ente_proprietario_id	=	titolo.ente_proprietario_id
                              and 	r_cronop_elem.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	cronop_elem.ente_proprietario_id			=	titolo.ente_proprietario_id
                              and 	titolo.data_cancellazione					is null
                              and 	tipologia.data_cancellazione				is null
                              and 	categoria.data_cancellazione				is null
                              and 	titolo_tree.data_cancellazione				is null
                              and 	titolo_fam.data_cancellazione				is null
                              and 	titolo_r_cft.data_cancellazione				is null
                              and 	tipologia_r_cft.data_cancellazione			is null
                              and 	titolo_tipo.data_cancellazione				is null
                              and 	tipologia_tipo.data_cancellazione			is null
                              and 	categoria_tipo.data_cancellazione			is null
                              and 	r_capitolo_categoria.data_cancellazione		is null
                              and 	r_cronop_elem.data_cancellazione			is null
                              and 	cronop_elem.data_cancellazione				is null
                            loop
                                tipo_liv1:=datistrutturaRec.tipo_liv1;
                                descr_liv1:=datistrutturaRec.descr_liv1;
                                codice_liv1:=datistrutturaRec.codice_liv1;
                                tipo_liv2:=datistrutturaRec.tipo_liv2;
                                descr_liv2:=datistrutturaRec.descr_liv2;
                                codice_liv2:=datistrutturaRec.codice_liv2;
                                tipo_liv3:=datistrutturaRec.tipo_liv3;
                                descr_liv3:=datistrutturaRec.descr_liv3;
                                codice_liv3:=datistrutturaRec.codice_liv3;
                            end loop;
                                exception
                                  when no_data_found THEN
                                  raise notice 'nessuna struttura collegata' ;
                                  return;
                                  when others  THEN
                                  RTN_MESSAGGIO:='ricerca struttura capitolo entrata esistente';
                                  RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
                                  return;
                    end;      
    			end if; 
		else -- CAPITOLI DI SPESA
    --SIAC-6855 verifico se il cronop_id_elem esiste su siac_r_cronop_elem_bil_elem.
    -- Se NON esiste devo prendere la struttura di bilancio da siac_r_cronop_elem_class
    -- e non da capitolo.
        	id_capitolo:=NULL;
            select a.elem_id
            into id_capitolo
            from siac_r_cronop_elem_bil_elem a
            where a.ente_proprietario_id = p_ente_prop_id
                and a.cronop_elem_id = datiCronoprogrammaRec.cronop_id_elem;
                
    		if	(coalesce(datiCronoprogrammaRec.articolo ,DEF_spazio)=DEF_spazio and 
            	coalesce(datiCronoprogrammaRec.ueb,DEF_spazio)=DEF_spazio) OR
                	id_capitolo IS NULL	THEN 
                BEGIN
               --  raise notice 'Capitolo2 %',capitolo;  
    				for datistrutturaRec in
                     select  distinct 	missione_tipo.classif_tipo_desc 		tipo_liv1,
                                    missione.classif_code 					codice_liv1,
                                    missione.classif_desc 					descr_liv1,
                                    programma_tipo.classif_tipo_desc 		tipo_liv2,
                                    programma.classif_code 					codice_liv2,
                                    programma.classif_desc 					descr_liv2,
                                    titusc_tipo.classif_tipo_desc 			tipo_liv3,
                                    titusc.classif_code 					codice_liv3,
                                    titusc.classif_desc 					descr_liv3
                from siac_t_class_fam_tree 			missione_tree,
                     siac_d_class_fam 				missione_fam,
                     siac_r_class_fam_tree 			missione_r_cft,
                     siac_t_class 					missione,
                     siac_d_class_tipo 				missione_tipo ,
                     siac_d_class_tipo 				programma_tipo,
                     siac_t_class 					programma,
                     siac_t_class_fam_tree 			titusc_tree,
                     siac_d_class_fam 				titusc_fam,
                     siac_r_class_fam_tree 			titusc_r_cft,
                     siac_t_class 					titusc,
                     siac_d_class_tipo 				titusc_tipo,
                     siac_r_cronop_elem_class		r_cronp_class_programma,
                     siac_r_cronop_elem_class		r_cronp_class_titolo,
                     siac_t_cronop_elem_det			cronop_elem
                where missione_fam.classif_fam_desc						=	'Spesa - MissioniProgrammi'      
                      and	missione_tree.classif_fam_id				=	missione_fam.classif_fam_id 
                        and	missione_r_cft.classif_fam_tree_id			=	missione_tree.classif_fam_tree_id 
                      and	missione.classif_id							=	missione_r_cft.classif_id_padre 
                      and	missione_tipo.classif_tipo_code				=	'MISSIONE' 
                      and	missione.classif_tipo_id					=	missione_tipo.classif_tipo_id 
                      and	programma_tipo.classif_tipo_code			=	'PROGRAMMA'  
                      and	programma.classif_tipo_id					=	programma_tipo.classif_tipo_id  
                      and	missione_r_cft.classif_id					=	programma.classif_id  
                      and	programma.classif_id						=	r_cronp_class_programma.classif_id
                      and	r_cronp_class_programma.cronop_elem_id		=	datiCronoprogrammaRec.cronop_id_elem		
                      and	titusc_fam.classif_fam_desc					=	'Spesa - TitoliMacroaggregati'      
                      and	titusc_tree.classif_fam_id					=	titusc_fam.classif_fam_id 
                      and	titusc_r_cft.classif_fam_tree_id			=	titusc_tree.classif_fam_tree_id 
                      and	titusc.classif_id							=	titusc_r_cft.classif_id_padre 
                      and	titusc_tipo.classif_tipo_code				=	'TITOLO_SPESA' 
                      and	titusc.classif_tipo_id						=	titusc_tipo.classif_tipo_id
                      and	titusc.classif_id							=	r_cronp_class_titolo.classif_id
                      and	r_cronp_class_titolo.cronop_elem_id			=	datiCronoprogrammaRec.cronop_id_elem		 
                      and 	missione_tree.ente_proprietario_id			=	p_ente_prop_id
                      and 	missione_fam.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	missione_r_cft.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and 	missione.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      AND 	missione_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	programma_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	programma.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      and 	titusc_tree.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	titusc_fam.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      and 	titusc_r_cft.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and 	titusc.ente_proprietario_id					=	missione_tree.ente_proprietario_id
                      AND 	titusc_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and	r_cronp_class_titolo.ente_proprietario_id	=	missione_tree.ente_proprietario_id
                      and	cronop_elem.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and 	missione_tree.data_cancellazione			is null
                      and 	missione_fam.data_cancellazione				is null
                      AND 	missione_r_cft.data_cancellazione			is null
                      and 	missione.data_cancellazione					is null
                      AND 	missione_tipo.data_cancellazione			is null
                      AND 	programma_tipo.data_cancellazione			is null
                      AND 	programma.data_cancellazione				is null
                      and 	titusc_tree.data_cancellazione				is null
                      AND 	titusc_fam.data_cancellazione				is null
                      and 	titusc_r_cft.data_cancellazione				is null
                      and 	titusc.data_cancellazione					is null
                      AND 	titusc_tipo.data_cancellazione				is null
                      and	r_cronp_class_titolo.data_cancellazione		is null
                      and	cronop_elem.data_cancellazione				is null
                      	loop
                        	 tipo_liv1:=datistrutturaRec.tipo_liv1;
                                descr_liv1:=datistrutturaRec.descr_liv1;
                                codice_liv1:=datistrutturaRec.codice_liv1;
                                tipo_liv2:=datistrutturaRec.tipo_liv2;
                                descr_liv2:=datistrutturaRec.descr_liv2;
                                codice_liv2:=datistrutturaRec.codice_liv2;
                                tipo_liv3:=datistrutturaRec.tipo_liv3;
                                descr_liv3:=datistrutturaRec.descr_liv3;
                                codice_liv3:=datistrutturaRec.codice_liv3;    
                        end loop;
                        exception
                          when no_data_found THEN
                          raise notice 'nessuna struttura collegata' ;
                          return;
                          when others  THEN
                          RTN_MESSAGGIO:='ricerca struttura nuovo capitolo spesa o senza capitolo di spesa';
                          RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
                          return;
                    end;
            else
            BEGIN
    				for datistrutturaRec in
            
            	select  distinct 	missione_tipo.classif_tipo_desc 		tipo_liv1,
                                    missione.classif_code 					codice_liv1,
                                    missione.classif_desc 					descr_liv1,
                                    programma_tipo.classif_tipo_desc 		tipo_liv2,
                                    programma.classif_code 					codice_liv2,
                                    programma.classif_desc 					descr_liv2,
                                    titusc_tipo.classif_tipo_desc 			tipo_liv3,
                                    titusc.classif_code 					codice_liv3,
                                    titusc.classif_desc 					descr_liv3,
                                    macroaggr_tipo.classif_tipo_desc 		tipo_liv4,
                                    macroaggr.classif_code 					codice_liv4,
                                    macroaggr.classif_desc 					descr_liv4
                from siac_t_class_fam_tree 			missione_tree,
                     siac_d_class_fam 				missione_fam,
                     siac_r_class_fam_tree 			missione_r_cft,
                     siac_t_class 					missione,
                     siac_d_class_tipo 				missione_tipo ,
                     siac_d_class_tipo 				programma_tipo,
                     siac_t_class 					programma,
                     siac_t_class_fam_tree 			titusc_tree,
                     siac_d_class_fam 				titusc_fam,
                     siac_r_class_fam_tree 			titusc_r_cft,
                     siac_t_class 					titusc,
                     siac_d_class_tipo 				titusc_tipo ,
                     siac_d_class_tipo 				macroaggr_tipo,
                     siac_t_class 					macroaggr,
                     siac_r_bil_elem_class 			r_capitolo_programma,
                     siac_r_cronop_elem_bil_elem	r_cronop_elem,
                     siac_r_bil_elem_class 			r_capitolo_macroaggr
                where missione_fam.classif_fam_desc						=	'Spesa - MissioniProgrammi'      
                      and	missione_tree.classif_fam_id				=	missione_fam.classif_fam_id 
                        and	missione_r_cft.classif_fam_tree_id			=	missione_tree.classif_fam_tree_id 
                      and	missione.classif_id							=	missione_r_cft.classif_id_padre 
                      and	missione_tipo.classif_tipo_code				=	'MISSIONE' 
                      and	missione.classif_tipo_id					=	missione_tipo.classif_tipo_id 
                      and	programma_tipo.classif_tipo_code			=	'PROGRAMMA'  
                      and	programma.classif_tipo_id					=	programma_tipo.classif_tipo_id  
                      and	missione_r_cft.classif_id					=	programma.classif_id  
                      and	missione_r_cft.classif_id					=	r_capitolo_programma.classif_id		
                      and	r_capitolo_programma.elem_id				=	r_cronop_elem.elem_id		
                      and	r_cronop_elem.cronop_elem_id				=	datiCronoprogrammaRec.cronop_id_elem	
                      and	titusc_fam.classif_fam_desc					=	'Spesa - TitoliMacroaggregati'      
                      and	titusc_tree.classif_fam_id					=	titusc_fam.classif_fam_id 
                      and	titusc_r_cft.classif_fam_tree_id			=	titusc_tree.classif_fam_tree_id 
                      and	titusc.classif_id							=	titusc_r_cft.classif_id_padre 
                      and	titusc_tipo.classif_tipo_code				=	'TITOLO_SPESA' 
                      and	titusc.classif_tipo_id						=	titusc_tipo.classif_tipo_id 
                      and	macroaggr_tipo.classif_tipo_code			=	'MACROAGGREGATO' 
                      and	macroaggr.classif_tipo_id					=	macroaggr_tipo.classif_tipo_id 
                      and	titusc_r_cft.classif_id						=	macroaggr.classif_id 
                      and	titusc_r_cft.classif_id						=	r_capitolo_macroaggr.classif_id 
                      and	r_capitolo_macroaggr.elem_id				=	r_cronop_elem.elem_id		 
                      and	r_cronop_elem.cronop_elem_id				=	datiCronoprogrammaRec.cronop_id_elem
                      and 	missione_tree.ente_proprietario_id			=	p_ente_prop_id
                      and 	missione_fam.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	missione_r_cft.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and 	missione.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      AND 	missione_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	programma_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	programma.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      and 	titusc_tree.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	titusc_fam.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      and 	titusc_r_cft.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and 	titusc.ente_proprietario_id					=	missione_tree.ente_proprietario_id
                      AND 	titusc_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	macroaggr_tipo.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      AND 	macroaggr.ente_proprietario_id				=	missione_tree.ente_proprietario_id
                      and 	r_capitolo_programma.ente_proprietario_id	=	missione_tree.ente_proprietario_id
                      AND	r_cronop_elem.ente_proprietario_id			=	missione_tree.ente_proprietario_id
                      and 	r_capitolo_macroaggr.ente_proprietario_id	=	missione_tree.ente_proprietario_id     
                      and 	missione_tree.data_cancellazione			is null
                      and 	missione_fam.data_cancellazione				is null
                      AND 	missione_r_cft.data_cancellazione			is null
                      and 	missione.data_cancellazione					is null
                      AND 	missione_tipo.data_cancellazione			is null
                      AND 	programma_tipo.data_cancellazione			is null
                      AND 	programma.data_cancellazione				is null
                      and 	titusc_tree.data_cancellazione				is null
                      AND 	titusc_fam.data_cancellazione				is null
                      and 	titusc_r_cft.data_cancellazione				is null
                      and 	titusc.data_cancellazione					is null
                      AND 	titusc_tipo.data_cancellazione				is null
                      AND 	macroaggr_tipo.data_cancellazione			is null
                      AND 	macroaggr.data_cancellazione				is null
                      and 	r_capitolo_programma.data_cancellazione		is null
                      AND	r_cronop_elem.data_cancellazione			is null
                      and 	r_capitolo_macroaggr.data_cancellazione		is null
                      
            		loop
                    -- raise notice 'Capitolo3 %',capitolo;  
                                tipo_liv1:=datistrutturaRec.tipo_liv1;
                                descr_liv1:=datistrutturaRec.descr_liv1;
                                codice_liv1:=datistrutturaRec.codice_liv1;
                                tipo_liv2:=datistrutturaRec.tipo_liv2;
                                descr_liv2:=datistrutturaRec.descr_liv2;
                                codice_liv2:=datistrutturaRec.codice_liv2;
                                tipo_liv3:=datistrutturaRec.tipo_liv3;
                                descr_liv3:=datistrutturaRec.descr_liv3;
                                codice_liv3:=datistrutturaRec.codice_liv3;
                                tipo_liv4:=datistrutturaRec.tipo_liv4;
                                descr_liv4:=datistrutturaRec.descr_liv4;
                                codice_liv4:=datistrutturaRec.codice_liv4;
            		 end loop;
                                exception
                                  when no_data_found THEN
                                  raise notice 'nessuna struttura collegata' ;
                                  return;
                                  when others  THEN
                                  RTN_MESSAGGIO:='ricerca struttura capitolo spesa esistente';
                                  RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
                                  return;
                end;      
            end if; 
        end if;
            return next;
            tipo_liv1='';
            descr_liv1='';
            codice_liv1='';
            tipo_liv2='';
            descr_liv2='';
            codice_liv2='';
            tipo_liv3='';
            descr_liv3='';
            codice_liv3='';
            tipo_liv4='';
            descr_liv4='';
            codice_liv4='';
            capitolo='';
            articolo='';
            ueb='';
            anno_competenza_stanziamento='';
            anno_entrata_rif_spesa='';
            stanziato=0;
            cronoprogramma_id=0;
            descrizione1_attivita='';
            descrizione2_attivita='';
            cronoprogramma_codice='';
            cronoprogramma_descrizione='';
            note_cronoprogramma='';
            cronop_id_elem=0;
        end loop;
        exception
          when no_data_found THEN
          raise notice 'nessun cronoprogramma trovato' ;
          return;
          when others  THEN
          RTN_MESSAGGIO:='ricerca cronoprogrammi';
          RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
          return;
    end;
    id_progetto=0;
end loop;

delete from siac_rep_prog_cronop where utente=user_table;

exception
	when no_data_found THEN
		raise notice 'nessun programma/progetto trovato' ;
		return;
	when others  THEN
        RTN_MESSAGGIO:='ricerca programmi/progetti';
 		RAISE EXCEPTION '% Errore : %-%.',RTN_MESSAGGIO,SQLSTATE,substring(SQLERRM from 1 for 500);
        return;
raise notice 'fine OK';
return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;
--SIAC-6855 - Maurizio - FINE

-- SIAC-6820
CREATE OR REPLACE FUNCTION siac.fnc_siac_capitoli_from_variazioni (
  p_uid_variazione integer
)
RETURNS TABLE (
  stato_variazione varchar,
  anno_capitolo varchar,
  numero_capitolo varchar,
  numero_articolo varchar,
  numero_ueb varchar,
  tipo_capitolo varchar,
  descrizione_capitolo varchar,
  descrizione_articolo varchar,
  missione varchar,
  programma varchar,
  titolo_uscita varchar,
  macroaggregato varchar,
  titolo_entrata varchar,
  tipologia varchar,
  categoria varchar,
  var_competenza numeric,
  var_residuo numeric,
  var_cassa numeric,
  var_competenza1 numeric,
  var_residuo1 numeric,
  var_cassa1 numeric,
  var_competenza2 numeric,
  var_residuo2 numeric,
  var_cassa2 numeric,
  cap_competenza numeric,
  cap_residuo numeric,
  cap_cassa numeric,
  cap_competenza1 numeric,
  cap_residuo1 numeric,
  cap_cassa1 numeric,
  cap_competenza2 numeric,
  cap_residuo2 numeric,
  cap_cassa2 numeric,
  tipologiafinanziamento varchar,
  sac varchar,
  variazione_num integer,
  variazione_anno varchar
) AS
$body$
DECLARE
	v_ente_proprietario_id INTEGER;
    v_sleep record;
BEGIN


	--select pg_sleep(90), 90  into v_sleep;
    --raise notice 'v_sleep %',v_sleep;
    
	-- Utilizzo l'ente per migliorare la performance delle CTE nella query successiva
	SELECT ente_proprietario_id
	INTO v_ente_proprietario_id
	FROM siac_t_variazione
	WHERE siac_t_variazione.variazione_id = p_uid_variazione;
	
    
    
    
    
	RETURN QUERY
		-- CTE per uscita
		WITH missione AS (
			SELECT DISTINCT
				siac_d_class_tipo.classif_tipo_desc missione_tipo_desc,
				siac_t_class.classif_id missione_id,
				siac_t_class.classif_code missione_code,
				siac_t_class.classif_desc missione_desc,
				siac_t_class.validita_inizio missione_validita_inizio,
				siac_t_class.validita_fine missione_validita_fine,
				siac_t_class.ente_proprietario_id,
				(siac_t_class.classif_code || '-' || siac_t_class.classif_desc)::VARCHAR missione_code_desc
			FROM siac_t_class
			JOIN siac_r_class_fam_tree ON (siac_t_class.classif_id = siac_r_class_fam_tree.classif_id_padre                      AND siac_r_class_fam_tree.data_cancellazione IS NULL)
			JOIN siac_t_class_fam_tree ON (siac_r_class_fam_tree.classif_fam_tree_id = siac_t_class_fam_tree.classif_fam_tree_id AND siac_t_class_fam_tree.data_cancellazione IS NULL)
			JOIN siac_d_class_fam      ON (siac_t_class_fam_tree.classif_fam_id = siac_d_class_fam.classif_fam_id                AND siac_d_class_fam.data_cancellazione IS NULL)
			JOIN siac_d_class_tipo     ON (siac_d_class_tipo.classif_tipo_id = siac_t_class.classif_tipo_id                      AND siac_d_class_tipo.data_cancellazione IS NULL)
			WHERE siac_d_class_fam.classif_fam_code = '00001'
			--AND to_timestamp('31/12/' || p_anno, 'dd/mm/yyyy') BETWEEN siac_r_class_fam_tree.validita_inizio AND COALESCE(siac_r_class_fam_tree.validita_fine, to_timestamp('31/12/' || p_anno, 'dd/mm/yyyy'))
			AND siac_t_class.data_cancellazione IS NULL
			AND siac_t_class.ente_proprietario_id = v_ente_proprietario_id
		),
		programma AS (
			SELECT DISTINCT
				siac_d_class_tipo.classif_tipo_desc programma_tipo_desc,
				siac_r_class_fam_tree.classif_id_padre missione_id,
				siac_t_class.classif_id programma_id,
				siac_t_class.classif_code programma_code,
				siac_t_class.classif_desc programma_desc,
				siac_t_class.validita_inizio programma_validita_inizio,
				siac_t_class.validita_fine programma_validita_fine,
				siac_t_class.ente_proprietario_id,
				(siac_t_class.classif_code || '-' || siac_t_class.classif_desc)::VARCHAR programma_code_desc,
				siac_r_bil_elem_class.elem_id programma_elem_id
			FROM siac_t_class
			JOIN siac_r_class_fam_tree ON (siac_t_class.classif_id = siac_r_class_fam_tree.classif_id                            AND siac_r_class_fam_tree.data_cancellazione IS NULL)
			JOIN siac_t_class_fam_tree ON (siac_r_class_fam_tree.classif_fam_tree_id = siac_t_class_fam_tree.classif_fam_tree_id AND siac_t_class_fam_tree.data_cancellazione IS NULL)
			JOIN siac_d_class_fam      ON (siac_t_class_fam_tree.classif_fam_id = siac_d_class_fam.classif_fam_id                AND siac_d_class_fam.data_cancellazione IS NULL)
			JOIN siac_d_class_tipo     ON (siac_d_class_tipo.classif_tipo_id = siac_t_class.classif_tipo_id                      AND siac_d_class_tipo.data_cancellazione IS NULL)
			JOIN siac_r_bil_elem_class ON (siac_r_bil_elem_class.classif_id = siac_t_class.classif_id                            AND siac_r_bil_elem_class.data_cancellazione is null)
			WHERE siac_d_class_fam.classif_fam_code = '00001'
			--AND to_timestamp('31/12/' || p_anno, 'dd/mm/yyyy') BETWEEN siac_r_class_fam_tree.validita_inizio AND COALESCE(siac_r_class_fam_tree.validita_fine, to_timestamp('31/12/' || p_anno, 'dd/mm/yyyy'))
			AND siac_r_class_fam_tree.classif_id_padre is not null
			AND siac_t_class.data_cancellazione is null
			AND siac_t_class.ente_proprietario_id = v_ente_proprietario_id
		),
		titusc AS (
			SELECT DISTINCT
				siac_d_class_tipo.classif_tipo_desc titusc_tipo_desc,
				siac_t_class.classif_id titusc_id,
				siac_t_class.classif_code titusc_code,
				siac_t_class.classif_desc titusc_desc,
				siac_t_class.validita_inizio titusc_validita_inizio,
				siac_t_class.validita_fine titusc_validita_fine,
				siac_t_class.ente_proprietario_id,
				(siac_t_class.classif_code || '-' || siac_t_class.classif_desc)::VARCHAR titusc_code_desc
			FROM siac_t_class
			JOIN siac_r_class_fam_tree ON (siac_t_class.classif_id = siac_r_class_fam_tree.classif_id                            AND siac_r_class_fam_tree.data_cancellazione IS NULL)
			JOIN siac_t_class_fam_tree ON (siac_r_class_fam_tree.classif_fam_tree_id = siac_t_class_fam_tree.classif_fam_tree_id AND siac_t_class_fam_tree.data_cancellazione IS NULL)
			JOIN siac_d_class_fam      ON (siac_t_class_fam_tree.classif_fam_id = siac_d_class_fam.classif_fam_id                AND siac_d_class_fam.data_cancellazione IS NULL)
			JOIN siac_d_class_tipo     ON (siac_d_class_tipo.classif_tipo_id = siac_t_class.classif_tipo_id                      AND siac_d_class_tipo.data_cancellazione IS NULL)
			WHERE siac_d_class_fam.classif_fam_code = '00002'
			--AND to_timestamp('31/12/' || p_anno, 'dd/mm/yyyy') BETWEEN siac_r_class_fam_tree.validita_inizio AND COALESCE(siac_r_class_fam_tree.validita_fine,to_timestamp('31/12/' || p_anno, 'dd/mm/yyyy'))
			AND siac_r_class_fam_tree.classif_id_padre IS NULL
			AND siac_t_class.data_cancellazione IS NULL
			AND siac_t_class.ente_proprietario_id = v_ente_proprietario_id
		),
		macroag AS (
			SELECT DISTINCT
				siac_d_class_tipo.classif_tipo_desc macroag_tipo_desc,
				siac_r_class_fam_tree.classif_id_padre titusc_id,
				siac_t_class.classif_id macroag_id,
				siac_t_class.classif_code macroag_code,
				siac_t_class.classif_desc macroag_desc,
				siac_t_class.validita_inizio macroag_validita_inizio,
				siac_t_class.validita_fine macroag_validita_fine,
				siac_t_class.ente_proprietario_id,
				(siac_t_class.classif_code || '-' || siac_t_class.classif_desc)::VARCHAR macroag_code_desc,
				siac_r_bil_elem_class.elem_id macroag_elem_id
			FROM siac_t_class
			JOIN siac_r_class_fam_tree ON (siac_t_class.classif_id = siac_r_class_fam_tree.classif_id                            AND siac_r_class_fam_tree.data_cancellazione IS NULL)
			JOIN siac_t_class_fam_tree ON (siac_r_class_fam_tree.classif_fam_tree_id = siac_t_class_fam_tree.classif_fam_tree_id AND siac_t_class_fam_tree.data_cancellazione IS NULL)
			JOIN siac_d_class_fam      ON (siac_t_class_fam_tree.classif_fam_id = siac_d_class_fam.classif_fam_id                AND siac_d_class_fam.data_cancellazione IS NULL)
			JOIN siac_d_class_tipo     ON (siac_d_class_tipo.classif_tipo_id = siac_t_class.classif_tipo_id                      AND siac_d_class_tipo.data_cancellazione IS NULL)
			JOIN siac_r_bil_elem_class ON (siac_r_bil_elem_class.classif_id = siac_t_class.classif_id                            AND siac_r_bil_elem_class.data_cancellazione IS NULL)
			WHERE siac_d_class_fam.classif_fam_code = '00002'
			--AND to_timestamp('31/12/' || p_anno, 'dd/mm/yyyy') BETWEEN siac_r_class_fam_tree.validita_inizio AND COALESCE(siac_r_class_fam_tree.validita_fine, to_timestamp('31/12/' || p_anno, 'dd/mm/yyyy'))
			AND siac_r_class_fam_tree.classif_id_padre IS NOT NULL
			AND siac_t_class.data_cancellazione IS NULL
			AND siac_t_class.ente_proprietario_id = v_ente_proprietario_id
		),
		-- CTE per entrata
		titent AS (
			SELECT DISTINCT
				siac_d_class_tipo.classif_tipo_desc titent_tipo_desc,
				siac_t_class.classif_id titent_id,
				siac_t_class.classif_code titent_code,
				siac_t_class.classif_desc titent_desc,
				siac_t_class.validita_inizio titent_validita_inizio,
				siac_t_class.validita_fine titent_validita_fine,
				siac_t_class.ente_proprietario_id,
				(siac_t_class.classif_code || '-' || siac_t_class.classif_desc)::VARCHAR titent_code_desc
			FROM siac_t_class
			JOIN siac_r_class_fam_tree ON (siac_t_class.classif_id = siac_r_class_fam_tree.classif_id                            AND siac_r_class_fam_tree.data_cancellazione IS NULL)
			JOIN siac_t_class_fam_tree ON (siac_r_class_fam_tree.classif_fam_tree_id = siac_t_class_fam_tree.classif_fam_tree_id AND siac_t_class_fam_tree.data_cancellazione IS NULL)
			JOIN siac_d_class_fam      ON (siac_t_class_fam_tree.classif_fam_id = siac_d_class_fam.classif_fam_id                AND siac_d_class_fam.data_cancellazione IS NULL)
			JOIN siac_d_class_tipo     ON (siac_d_class_tipo.classif_tipo_id = siac_t_class.classif_tipo_id                      AND siac_d_class_tipo.data_cancellazione IS NULL)
			WHERE siac_d_class_fam.classif_fam_code = '00003'
			--AND to_timestamp('31/12/' || p_anno, 'dd/mm/yyyy') BETWEEN siac_r_class_fam_tree.validita_inizio AND COALESCE(siac_r_class_fam_tree.validita_fine, to_timestamp('31/12/' || p_anno,'dd/mm/yyyy'))
			AND siac_r_class_fam_tree.classif_id_padre IS NULL
			AND siac_t_class.data_cancellazione IS NULL
			AND siac_t_class.ente_proprietario_id = v_ente_proprietario_id
		),
		tipologia AS (
			SELECT DISTINCT
				siac_d_class_tipo.classif_tipo_desc tipologia_tipo_desc,
				siac_r_class_fam_tree.classif_id_padre titent_id,
				siac_t_class.classif_id tipologia_id,
				siac_t_class.classif_code tipologia_code,
				siac_t_class.classif_desc tipologia_desc,
				siac_t_class.validita_inizio tipologia_validita_inizio,
				siac_t_class.validita_fine tipologia_validita_fine,
				siac_t_class.ente_proprietario_id,
				(siac_t_class.classif_code || '-' || siac_t_class.classif_desc)::VARCHAR tipologia_code_desc
			FROM siac_t_class
			JOIN siac_r_class_fam_tree ON (siac_t_class.classif_id = siac_r_class_fam_tree.classif_id                            AND siac_r_class_fam_tree.data_cancellazione IS NULL)
			JOIN siac_t_class_fam_tree ON (siac_r_class_fam_tree.classif_fam_tree_id = siac_t_class_fam_tree.classif_fam_tree_id AND siac_t_class_fam_tree.data_cancellazione IS NULL)
			JOIN siac_d_class_fam      ON (siac_t_class_fam_tree.classif_fam_id = siac_d_class_fam.classif_fam_id                AND siac_d_class_fam.data_cancellazione IS NULL)
			JOIN siac_d_class_tipo     ON (siac_d_class_tipo.classif_tipo_id = siac_t_class.classif_tipo_id                      AND siac_d_class_tipo.data_cancellazione IS NULL)
			WHERE siac_d_class_fam.classif_fam_code = '00003'
			--AND to_timestamp('31/12/' || p_anno, 'dd/mm/yyyy') BETWEEN siac_r_class_fam_tree.validita_inizio AND COALESCE(siac_r_class_fam_tree.validita_fine, to_timestamp('31/12/' || p_anno, 'dd/mm/yyyy'))
			AND siac_r_class_fam_tree.classif_id_padre IS NOT NULL
			AND siac_r_class_fam_tree.livello = 2
			AND siac_t_class.data_cancellazione IS NULL
			AND siac_t_class.ente_proprietario_id = v_ente_proprietario_id
		),
		categoria AS (
			SELECT DISTINCT
				siac_d_class_tipo.classif_tipo_desc categoria_tipo_desc,
				siac_r_class_fam_tree.classif_id_padre tipologia_id,
				siac_t_class.classif_id categoria_id,
				siac_t_class.classif_code categoria_code,
				siac_t_class.classif_desc categoria_desc,
				siac_t_class.validita_inizio categoria_validita_inizio,
				siac_t_class.validita_fine categoria_validita_fine,
				siac_t_class.ente_proprietario_id,
				(siac_t_class.classif_code || '-' || siac_t_class.classif_desc)::VARCHAR categoria_code_desc,
				siac_r_bil_elem_class.elem_id categoria_elem_id
			FROM siac_t_class
			JOIN siac_r_class_fam_tree ON (siac_t_class.classif_id = siac_r_class_fam_tree.classif_id                            AND siac_r_class_fam_tree.data_cancellazione IS NULL)
			JOIN siac_t_class_fam_tree ON (siac_r_class_fam_tree.classif_fam_tree_id = siac_t_class_fam_tree.classif_fam_tree_id AND siac_t_class_fam_tree.data_cancellazione IS NULL)
			JOIN siac_d_class_fam      ON (siac_t_class_fam_tree.classif_fam_id = siac_d_class_fam.classif_fam_id                AND siac_d_class_fam.data_cancellazione IS NULL)
			JOIN siac_d_class_tipo     ON (siac_d_class_tipo.classif_tipo_id = siac_t_class.classif_tipo_id                      AND siac_d_class_tipo.data_cancellazione IS NULL)
			JOIN siac_r_bil_elem_class ON (siac_r_bil_elem_class.classif_id = siac_t_class.classif_id                            AND siac_r_bil_elem_class.data_cancellazione IS NULL)
			WHERE siac_d_class_fam.classif_fam_code = '00003'
			--AND to_timestamp('31/12/' || p_anno, 'dd/mm/yyyy') BETWEEN siac_r_class_fam_tree.validita_inizio AND COALESCE(siac_r_class_fam_tree.validita_fine, to_timestamp('31/12/' || p_anno, 'dd/mm/yyyy'))
			AND siac_r_class_fam_tree.classif_id_padre IS NOT NULL
			AND siac_r_class_fam_tree.livello = 3
			AND siac_t_class.data_cancellazione IS NULL
			AND siac_t_class.ente_proprietario_id = v_ente_proprietario_id
		),
        tipofinanziamento AS (
        	SELECT DISTINCT
				siac_d_class_tipo.classif_tipo_desc tipofinanziamento_tipo_desc,
				siac_t_class.classif_id tipofinanziamento_id,
				siac_t_class.classif_code tipofinanziamento_code,
				siac_t_class.classif_desc tipofinanziamento_desc,
				siac_t_class.validita_inizio tipofinanziamento_validita_inizio,
				siac_t_class.validita_fine tipofinanziamento_validita_fine,
				siac_t_class.ente_proprietario_id,
				(siac_t_class.classif_code || '-' || siac_t_class.classif_desc)::VARCHAR tipofinanziamento_code_desc,
				siac_r_bil_elem_class.elem_id tipofinanziamento_elem_id
			FROM 
                     siac_t_class
                JOIN siac_d_class_tipo     ON (siac_d_class_tipo.classif_tipo_id = siac_t_class.classif_tipo_id  AND siac_d_class_tipo.data_cancellazione IS NULL)
                JOIN siac_r_bil_elem_class ON (siac_r_bil_elem_class.classif_id = siac_t_class.classif_id AND siac_r_bil_elem_class.data_cancellazione IS NULL)
			where 
                   siac_d_class_tipo.classif_tipo_code = 'TIPO_FINANZIAMENTO'
              AND siac_t_class.ente_proprietario_id = v_ente_proprietario_id
        ),
        sac AS (
        	SELECT DISTINCT
				siac_d_class_tipo.classif_tipo_desc sar_tipo_desc,
				siac_t_class.classif_id sac_id,
				siac_t_class.classif_code sac_code,
				siac_t_class.classif_desc sac_desc,
				siac_t_class.validita_inizio sac_validita_inizio,
				siac_t_class.validita_fine sac_validita_fine,
				siac_t_class.ente_proprietario_id,
				(siac_t_class.classif_code || '-' || siac_t_class.classif_desc)::VARCHAR sac_code_desc,
				siac_r_bil_elem_class.elem_id sac_elem_id
			FROM 
                     siac_t_class
                JOIN siac_d_class_tipo     ON (siac_d_class_tipo.classif_tipo_id = siac_t_class.classif_tipo_id  AND siac_d_class_tipo.data_cancellazione IS NULL)
                JOIN siac_r_bil_elem_class ON (siac_r_bil_elem_class.classif_id = siac_t_class.classif_id AND siac_r_bil_elem_class.data_cancellazione IS NULL)
			where 
                   siac_d_class_tipo.classif_tipo_code in ('CDC','CDR')
              AND siac_t_class.ente_proprietario_id = v_ente_proprietario_id
        ),
        
		-- CTE importi variazione
		comp_variaz AS (
        SELECT
				siac_t_bil_elem_det_var.elem_id,
				siac_t_bil_elem_det_var.elem_det_var_id,
				siac_r_variazione_stato.variazione_stato_id,
				siac_t_bil_elem_det_var.elem_det_importo impSta,
				siac_t_periodo.anno::INTEGER,
                periodo_bil.anno::INTEGER anno_bil
			FROM siac_t_bil
			JOIN siac_t_variazione        			ON (siac_t_bil.bil_id = siac_t_variazione.bil_id                                              AND siac_t_variazione.data_cancellazione IS NULL)
			JOIN siac_r_variazione_stato  			ON (siac_t_variazione.variazione_id = siac_r_variazione_stato.variazione_id                   AND siac_r_variazione_stato.data_cancellazione IS NULL)
			JOIN siac_t_bil_elem_det_var  			ON (siac_r_variazione_stato.variazione_stato_id = siac_t_bil_elem_det_var.variazione_stato_id AND siac_t_bil_elem_det_var.data_cancellazione IS NULL)
			JOIN siac_d_bil_elem_det_tipo 			ON (siac_t_bil_elem_det_var.elem_det_tipo_id = siac_d_bil_elem_det_tipo.elem_det_tipo_id      AND siac_d_bil_elem_det_tipo.data_cancellazione IS NULL)
			JOIN siac_t_periodo           			ON (siac_t_variazione.periodo_id = siac_t_periodo.periodo_id                                  AND siac_t_periodo.data_cancellazione IS NULL)
			JOIN siac_t_periodo as periodo_bil      ON (siac_t_bil.periodo_id = periodo_bil.periodo_id                                            AND periodo_bil.data_cancellazione IS NULL)

			WHERE siac_d_bil_elem_det_tipo.elem_det_tipo_code = 'STA'
			AND siac_t_bil.data_cancellazione IS NULL
			AND siac_t_variazione.variazione_id = p_uid_variazione


		),
		residuo_variaz AS (
			SELECT
				siac_t_bil_elem_det_var.elem_id,
				siac_t_bil_elem_det_var.elem_det_var_id,
				siac_r_variazione_stato.variazione_stato_id,
				siac_t_bil_elem_det_var.elem_det_importo impRes,
				siac_t_periodo.anno::integer,
                periodo_bil.anno::INTEGER anno_bil
			FROM siac_t_bil
                JOIN siac_t_variazione        			ON (siac_t_bil.bil_id = siac_t_variazione.bil_id                                              AND siac_t_variazione.data_cancellazione IS NULL)
                JOIN siac_r_variazione_stato  			ON (siac_t_variazione.variazione_id = siac_r_variazione_stato.variazione_id                   AND siac_r_variazione_stato.data_cancellazione IS NULL)
                JOIN siac_t_bil_elem_det_var  			ON (siac_r_variazione_stato.variazione_stato_id = siac_t_bil_elem_det_var.variazione_stato_id AND siac_t_bil_elem_det_var.data_cancellazione  IS NULL)
                JOIN siac_d_bil_elem_det_tipo 			ON (siac_t_bil_elem_det_var.elem_det_tipo_id = siac_d_bil_elem_det_tipo.elem_det_tipo_id      AND siac_d_bil_elem_det_tipo.data_cancellazione IS NULL)
                JOIN siac_t_periodo           			ON (siac_t_variazione.periodo_id = siac_t_periodo.periodo_id                                  AND siac_t_periodo.data_cancellazione IS NULL)
                JOIN siac_t_periodo as periodo_bil      ON (siac_t_bil.periodo_id = periodo_bil.periodo_id                                            AND periodo_bil.data_cancellazione IS NULL)
			WHERE siac_d_bil_elem_det_tipo.elem_det_tipo_code = 'STR'
              AND siac_t_bil.data_cancellazione IS NULL
              AND siac_t_variazione.variazione_id = p_uid_variazione
		),
		cassa_variaz AS (
			SELECT
				siac_t_bil_elem_det_var.elem_id,
				siac_t_bil_elem_det_var.elem_det_var_id,
				siac_r_variazione_stato.variazione_stato_id,
				siac_t_bil_elem_det_var.elem_det_importo impSca,
				siac_t_periodo.anno::INTEGER,
                periodo_bil.anno::INTEGER anno_bil
			FROM siac_t_bil
				JOIN siac_t_variazione        ON (siac_t_bil.bil_id = siac_t_variazione.bil_id                                              AND siac_t_variazione.data_cancellazione IS NULL)
				JOIN siac_r_variazione_stato  ON (siac_t_variazione.variazione_id = siac_r_variazione_stato.variazione_id                   AND siac_r_variazione_stato.data_cancellazione IS NULL)
				JOIN siac_t_bil_elem_det_var  ON (siac_r_variazione_stato.variazione_stato_id = siac_t_bil_elem_det_var.variazione_stato_id AND siac_t_bil_elem_det_var.data_cancellazione IS NULL)
				JOIN siac_d_bil_elem_det_tipo ON (siac_t_bil_elem_det_var.elem_det_tipo_id = siac_d_bil_elem_det_tipo.elem_det_tipo_id      AND siac_d_bil_elem_det_tipo.data_cancellazione IS NULL)
				JOIN siac_t_periodo           ON (siac_t_variazione.periodo_id = siac_t_periodo.periodo_id                                  AND siac_t_periodo.data_cancellazione IS NULL)
				JOIN siac_t_periodo as periodo_bil      ON (siac_t_bil.periodo_id = periodo_bil.periodo_id                                  AND periodo_bil.data_cancellazione IS NULL)
            WHERE siac_d_bil_elem_det_tipo.elem_det_tipo_code = 'SCA'
			AND siac_t_bil.data_cancellazione IS NULL
			AND siac_t_variazione.variazione_id = p_uid_variazione
		),
		-- CTE importi capitolo
		comp_capitolo AS (
			SELECT
				siac_t_bil_elem.elem_id,
				siac_t_bil_elem_det.elem_det_importo impSta,
				siac_t_periodo.anno::INTEGER
			FROM siac_t_bil_elem
			JOIN siac_t_bil_elem_det      ON (siac_t_bil_elem.elem_id = siac_t_bil_elem_det.elem_id                            AND siac_t_bil_elem_det.data_cancellazione IS NULL)
			JOIN siac_d_bil_elem_det_tipo ON (siac_t_bil_elem_det.elem_det_tipo_id = siac_d_bil_elem_det_tipo.elem_det_tipo_id AND siac_d_bil_elem_det_tipo.data_cancellazione IS NULL)
			JOIN siac_t_periodo           ON (siac_t_bil_elem_det.periodo_id = siac_t_periodo.periodo_id                       AND siac_t_periodo.data_cancellazione IS NULL)
			WHERE siac_d_bil_elem_det_tipo.elem_det_tipo_code = 'STA'
			AND siac_t_bil_elem.data_cancellazione IS NULL
			AND siac_t_bil_elem.ente_proprietario_id = v_ente_proprietario_id
		),
		residuo_capitolo AS (
			SELECT
				siac_t_bil_elem.elem_id,
				siac_t_bil_elem_det.elem_det_importo impRes,
				siac_t_periodo.anno::INTEGER
			FROM siac_t_bil_elem
			JOIN siac_t_bil_elem_det      ON (siac_t_bil_elem.elem_id = siac_t_bil_elem_det.elem_id                            AND siac_t_bil_elem_det.data_cancellazione IS NULL)
			JOIN siac_d_bil_elem_det_tipo ON (siac_t_bil_elem_det.elem_det_tipo_id = siac_d_bil_elem_det_tipo.elem_det_tipo_id AND siac_d_bil_elem_det_tipo.data_cancellazione IS NULL)
			JOIN siac_t_periodo           ON (siac_t_bil_elem_det.periodo_id = siac_t_periodo.periodo_id                       AND siac_t_periodo.data_cancellazione IS NULL)
			WHERE siac_d_bil_elem_det_tipo.elem_det_tipo_code = 'STR'
			AND siac_t_bil_elem.data_cancellazione IS NULL
			AND siac_t_bil_elem.ente_proprietario_id = v_ente_proprietario_id
		),
		cassa_capitolo AS (
			SELECT
				siac_t_bil_elem.elem_id,
				siac_t_bil_elem_det.elem_det_importo impSca,
				siac_t_periodo.anno::INTEGER
			FROM siac_t_bil_elem
			JOIN siac_t_bil_elem_det      ON (siac_t_bil_elem.elem_id = siac_t_bil_elem_det.elem_id                            AND siac_t_bil_elem_det.data_cancellazione IS NULL)
			JOIN siac_d_bil_elem_det_tipo ON (siac_t_bil_elem_det.elem_det_tipo_id = siac_d_bil_elem_det_tipo.elem_det_tipo_id AND siac_d_bil_elem_det_tipo.data_cancellazione IS NULL)
			JOIN siac_t_periodo           ON (siac_t_bil_elem_det.periodo_id = siac_t_periodo.periodo_id                       AND siac_t_periodo.data_cancellazione IS NULL)
			WHERE siac_d_bil_elem_det_tipo.elem_det_tipo_code = 'SCA'
			AND siac_t_bil_elem.data_cancellazione IS NULL
			AND siac_t_bil_elem.ente_proprietario_id = v_ente_proprietario_id
		)
		SELECT
			 siac_d_variazione_stato.variazione_stato_tipo_desc stato_variazione
			,siac_t_periodo.anno                               anno_capitolo
			,siac_t_bil_elem.elem_code                         numero_capitolo
			,siac_t_bil_elem.elem_code2                        numero_articolo
			,siac_t_bil_elem.elem_code3                        numero_ueb
			,siac_d_bil_elem_tipo.elem_tipo_code               tipo_capitolo
			,siac_t_bil_elem.elem_desc                         descrizione_capitolo
			,siac_t_bil_elem.elem_desc2                        descrizione_articolo
			-- Dati uscita
			,missione.missione_code_desc   missione
			,programma.programma_code_desc programma
			
            ,titusc.titusc_code_desc       titolo_uscita
			,macroag.macroag_code_desc     macroaggregato
			-- Dati entrata
			,titent.titent_code_desc       titolo_entrata
			,tipologia.tipologia_code_desc tipologia
			,categoria.categoria_code_desc categoria
			-- Importi variazione
			,comp_variaz.impSta     var_competenza
			,residuo_variaz.impRes  var_residuo
			,cassa_variaz.impSca    var_cassa
            
			,comp_variaz1.impSta    var_competenza1
			,residuo_variaz1.impRes var_residuo1
			,cassa_variaz1.impSca   var_cassa1
			
            ,comp_variaz2.impSta    var_competenza2
			,residuo_variaz2.impRes var_residuo2
			,cassa_variaz2.impSca   var_cassa2
            
            
			-- Importi capitolo
			,comp_capitolo.impSta     cap_competenza
			,residuo_capitolo.impRes  cap_residuo
			,cassa_capitolo.impSca    cap_cassa
			,comp_capitolo1.impSta    cap_competenza1
            
			,residuo_capitolo1.impRes cap_residuo1
			,cassa_capitolo1.impSca   cap_cassa1
			,comp_capitolo2.impSta    cap_competenza2
			,residuo_capitolo2.impRes cap_residuo2 
			,cassa_capitolo2.impSca   cap_cassa2           
            ,tipofinanziamento.tipofinanziamento_code_desc tipologiaFinanziamento
            ,sac.sac_code_desc sac
            ,siac_t_variazione.variazione_num
            ,periodo_variazione.anno variazione_anno
            
		FROM siac_t_variazione
		JOIN siac_r_variazione_stato           ON (siac_t_variazione.variazione_id = siac_r_variazione_stato.variazione_id                             AND siac_r_variazione_stato.data_cancellazione IS NULL)
		JOIN siac_d_variazione_stato           ON (siac_r_variazione_stato.variazione_stato_tipo_id = siac_d_variazione_stato.variazione_stato_tipo_id AND siac_d_variazione_stato.data_cancellazione IS NULL)
		JOIN siac_t_bil_elem_det_var           ON (siac_r_variazione_stato.variazione_stato_id = siac_t_bil_elem_det_var.variazione_stato_id           AND siac_t_bil_elem_det_var.data_cancellazione IS NULL)
		JOIN siac_t_bil_elem                   ON (siac_t_bil_elem_det_var.elem_id = siac_t_bil_elem.elem_id                                           AND siac_t_bil_elem.data_cancellazione IS NULL)
		JOIN siac_t_bil                        ON (siac_t_bil_elem.bil_id = siac_t_bil.bil_id                                                          AND siac_t_bil.data_cancellazione IS NULL)
		JOIN siac_t_periodo                    ON (siac_t_bil.periodo_id = siac_t_periodo.periodo_id                                                   AND siac_t_periodo.data_cancellazione IS NULL)
		JOIN siac_d_bil_elem_tipo              ON (siac_t_bil_elem.elem_tipo_id = siac_d_bil_elem_tipo.elem_tipo_id                                    AND siac_d_bil_elem_tipo.data_cancellazione IS NULL)
		JOIN siac_d_bil_elem_det_tipo          ON (siac_d_bil_elem_det_tipo.elem_det_tipo_id = siac_t_bil_elem_det_var.elem_det_tipo_id                AND siac_d_bil_elem_det_tipo.data_cancellazione IS NULL)
		
        --JOIN siac_t_bil     bil_variazione     ON (bil_variazione.bil_id = siac_t_variazione.bil_id                                                    AND bil_variazione.data_cancellazione IS NULL)
		--JOIN siac_t_periodo periodo_variazione ON (bil_variazione.periodo_id = periodo_variazione.periodo_id                                           AND periodo_variazione.data_cancellazione IS NULL)
		JOIN siac_t_periodo periodo_variazione ON (siac_t_variazione.periodo_id = periodo_variazione.periodo_id                                          AND periodo_variazione.data_cancellazione IS NULL)
		
        -- Importi variazione, anno 0
		LEFT OUTER JOIN comp_variaz    ON (siac_r_variazione_stato.variazione_stato_id = comp_variaz.variazione_stato_id     AND siac_t_bil_elem_det_var.elem_id = comp_variaz.elem_id   AND periodo_variazione.anno::INTEGER = comp_variaz.anno_bil   )
		LEFT OUTER JOIN residuo_variaz ON (siac_r_variazione_stato.variazione_stato_id = residuo_variaz.variazione_stato_id AND siac_t_bil_elem_det_var.elem_id = residuo_variaz.elem_id AND periodo_variazione.anno::INTEGER = residuo_variaz.anno_bil)		
        LEFT OUTER JOIN cassa_variaz   ON (siac_r_variazione_stato.variazione_stato_id = cassa_variaz.variazione_stato_id   AND siac_t_bil_elem_det_var.elem_id = cassa_variaz.elem_id   AND periodo_variazione.anno::INTEGER = cassa_variaz.anno_bil )
		-- Importi variazione, anno +1
		LEFT OUTER JOIN comp_variaz    comp_variaz1    ON (siac_r_variazione_stato.variazione_stato_id = comp_variaz1.variazione_stato_id    AND siac_t_bil_elem_det_var.elem_id = comp_variaz1.elem_id    AND periodo_variazione.anno::INTEGER = comp_variaz1.anno_bil     + 1)
		LEFT OUTER JOIN residuo_variaz residuo_variaz1 ON (siac_r_variazione_stato.variazione_stato_id = residuo_variaz1.variazione_stato_id AND siac_t_bil_elem_det_var.elem_id = residuo_variaz1.elem_id AND periodo_variazione.anno::INTEGER = residuo_variaz1.anno_bil  + 1 )
		LEFT OUTER JOIN cassa_variaz   cassa_variaz1   ON (siac_r_variazione_stato.variazione_stato_id = cassa_variaz1.variazione_stato_id   AND siac_t_bil_elem_det_var.elem_id = cassa_variaz1.elem_id   AND periodo_variazione.anno::INTEGER = cassa_variaz1.anno_bil    + 1 )
		-- Importi variazione, anno +2
		LEFT OUTER JOIN comp_variaz    comp_variaz2    ON (siac_r_variazione_stato.variazione_stato_id = comp_variaz2.variazione_stato_id    AND siac_t_bil_elem_det_var.elem_id = comp_variaz2.elem_id    AND periodo_variazione.anno::INTEGER = comp_variaz2.anno_bil     + 2)
		LEFT OUTER JOIN residuo_variaz residuo_variaz2 ON (siac_r_variazione_stato.variazione_stato_id = residuo_variaz2.variazione_stato_id AND siac_t_bil_elem_det_var.elem_id = residuo_variaz2.elem_id AND periodo_variazione.anno::INTEGER = residuo_variaz2.anno_bil  + 2)
		LEFT OUTER JOIN cassa_variaz   cassa_variaz2   ON (siac_r_variazione_stato.variazione_stato_id = cassa_variaz2.variazione_stato_id   AND siac_t_bil_elem_det_var.elem_id = cassa_variaz2.elem_id   AND periodo_variazione.anno::INTEGER = cassa_variaz2.anno_bil    + 2)


		-- Importi capitolo, anno 0
		LEFT OUTER JOIN comp_capitolo    ON (siac_t_bil_elem.elem_id = comp_capitolo.elem_id    AND comp_capitolo.anno = periodo_variazione.anno::INTEGER)
		LEFT OUTER JOIN residuo_capitolo ON (siac_t_bil_elem.elem_id = residuo_capitolo.elem_id AND residuo_capitolo.anno = periodo_variazione.anno::INTEGER)
		LEFT OUTER JOIN cassa_capitolo   ON (siac_t_bil_elem.elem_id = cassa_capitolo.elem_id   AND cassa_capitolo.anno = periodo_variazione.anno::INTEGER)
		-- Importi capitolo, anno +1
		LEFT OUTER JOIN comp_capitolo    comp_capitolo1    ON (siac_t_bil_elem.elem_id = comp_capitolo1.elem_id    AND comp_capitolo1.anno = periodo_variazione.anno::INTEGER + 1)
		LEFT OUTER JOIN residuo_capitolo residuo_capitolo1 ON (siac_t_bil_elem.elem_id = residuo_capitolo1.elem_id AND residuo_capitolo1.anno = periodo_variazione.anno::INTEGER + 1)
		LEFT OUTER JOIN cassa_capitolo   cassa_capitolo1   ON (siac_t_bil_elem.elem_id = cassa_capitolo1.elem_id   AND cassa_capitolo1.anno = periodo_variazione.anno::INTEGER + 1)
		-- Importi capitolo, anno +2
		LEFT OUTER JOIN comp_capitolo    comp_capitolo2    ON (siac_t_bil_elem.elem_id = comp_capitolo2.elem_id    AND comp_capitolo2.anno = periodo_variazione.anno::INTEGER + 2)
		LEFT OUTER JOIN residuo_capitolo residuo_capitolo2 ON (siac_t_bil_elem.elem_id = residuo_capitolo2.elem_id AND residuo_capitolo2.anno = periodo_variazione.anno::INTEGER + 2)
		LEFT OUTER JOIN cassa_capitolo   cassa_capitolo2   ON (siac_t_bil_elem.elem_id = cassa_capitolo2.elem_id   AND cassa_capitolo2.anno = periodo_variazione.anno::INTEGER + 2)
		-- Classificatori
		LEFT OUTER JOIN macroag   ON (macroag.macroag_elem_id = siac_t_bil_elem.elem_id)
		LEFT OUTER JOIN programma ON (programma.programma_elem_id = siac_t_bil_elem.elem_id)
		LEFT OUTER JOIN missione  ON (missione.missione_id = programma.missione_id)
		LEFT OUTER JOIN titusc    ON (titusc.titusc_id = macroag.titusc_id)
		LEFT OUTER JOIN categoria ON (categoria.categoria_elem_id = siac_t_bil_elem.elem_id)
		LEFT OUTER JOIN tipologia ON (tipologia.tipologia_id = categoria.tipologia_id)
		LEFT OUTER JOIN titent    ON (tipologia.titent_id = titent.titent_id)
        -- SIAC-6468
        LEFT OUTER JOIN tipofinanziamento ON (tipofinanziamento.tipofinanziamento_elem_id = siac_t_bil_elem.elem_id)
        LEFT OUTER JOIN sac ON (sac.sac_elem_id = siac_t_bil_elem.elem_id)
        
		-- WHERE clause
		WHERE siac_t_variazione.variazione_id = p_uid_variazione
		AND siac_d_bil_elem_det_tipo.elem_det_tipo_code = 'STA'
		ORDER BY tipo_capitolo DESC, anno_capitolo, siac_t_bil_elem.elem_code::integer, siac_t_bil_elem.elem_code2::integer, siac_t_bil_elem.elem_code3::integer;
		
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;


-- SIAC-6820 Fine
