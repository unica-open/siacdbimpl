/*
*SPDX-FileCopyrightText: Copyright 2020 | CSI Piemonte
*SPDX-License-Identifier: EUPL-1.2
*/
--SIAC-6193 INIZIO

-- DROP FUNZIONE CON TRE (vecchia versione) E QUATTRO (nuova versione) PARAMETRI
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_liquidazione_from_provvedimento (integer,integer,integer);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_liquidazione_from_provvedimento (integer,varchar,integer,integer);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_liquidazione_from_provvedimento (
  _uid_provvedimento integer,
  _anno varchar,
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  liq_anno integer,
  liq_numero numeric,
  liq_desc varchar,
  liq_stato varchar,
  uid_capitolo integer,
  capitolo_anno varchar,
  capitolo_numero varchar,
  capitolo_articolo varchar,
  ueb_numero varchar,
  movgest_anno integer,
  movgest_numero numeric,
  movgest_ts_code varchar,
  liq_importo numeric,
  soggetto_code varchar,
  soggetto_desc varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_oggetto varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  ord_anno integer,
  ord_numero numeric,
  ord_stato_code varchar,
  ord_stato_desc varchar,
  -- 02.07.2018 Sofia siac-6193
  -- Il codice fiscale e la partita Iva del soggetto
  sog_codice_fiscale varchar,
  sog_partita_iva varchar,
  -- Soggetto avente carte contabili
  carte_contabili varchar,
  -- Data creazione dell atto contabile
  attoal_data_creazione timestamp,
  -- Data di scadenza dell atto contabile
  attoal_data_scadenza timestamp,
  -- Stato dell atto contabile
  attoal_stato_desc varchar,
  -- MDP - no cessione
  accredito_tipo_code varchar,
  accredito_tipo_desc varchar,
  iban VARCHAR,
  bic varchar,
  contocorrente varchar,
  contocorrente_intestazione varchar,
  banca_denominazione varchar,
  quietanzante varchar,
  quietanzante_codice_fiscale varchar,
  -- Estremi soggetto cessione
  soggetto_cessione_code varchar,
  soggetto_cessione_desc varchar,
  -- Relazione soggetti CSI, CSC
  relaz_tipo_code   varchar,
  relaz_tipo_desc   varchar,
  -- MDP - cessione
  accredito_tipo_code_cess varchar,
  accredito_tipo_desc_cess varchar,
  iban_cess VARCHAR,
  bic_cess varchar,
  contocorrente_cess varchar,
  contocorrente_intestazione_cess varchar,
  banca_denominazione_cess varchar,
  quietanzante_cess varchar,
  quietanzante_codice_fiscale_cess varchar,
  -- Indicazione se la liquidazione presenta split/ritenute - collegamento a documenti con oneri !=ES
  liq_esiste_split varchar,
  -- Ordinativo
  -- La data di emissione ordinativo
  ord_emissione_data timestamp,
  -- La data di quietanza ordinativo
  ord_quietanza_data timestamp,
  -- 12.07.2018 Sofia jira siac-6193
  -- estremi soggetto ordinativo
  ord_soggetto_code varchar,
  ord_soggetto_desc varchar,
  -- MDP - no cessione
  ord_accredito_tipo_code varchar,
  ord_accredito_tipo_desc varchar,
  ord_iban VARCHAR,
  ord_bic varchar,
  ord_contocorrente varchar,
  ord_contocorrente_intestazione varchar,
  ord_banca_denominazione varchar,
  ord_quietanzante varchar,
  ord_quietanzante_codice_fiscale varchar,
  -- MDP CESSIONE
  -- Estremi soggetto cessione
  ord_soggetto_cessione_code varchar,
  ord_soggetto_cessione_desc varchar,
  -- Relazione soggetti CSI, CSC
  ord_relaz_tipo_code   varchar,
  ord_relaz_tipo_desc   varchar,
  -- MDP - in caso di cessione dati MDP di cessione
  ord_accredito_tipo_code_cess varchar,
  ord_accredito_tipo_desc_cess varchar,
  ord_iban_cess VARCHAR,
  ord_bic_cess varchar,
  ord_contocorrente_cess varchar,
  ord_contocorrente_intestazione_cess varchar,
  ord_banca_denominazione_cess varchar,
  ord_quietanzante_cess varchar,
  ord_quietanzante_codice_fiscale_cess varchar
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
    v_ente_proprietario_id INTEGER;
BEGIN

    select ente_proprietario_id into v_ente_proprietario_id from siac_t_atto_amm where siac_t_atto_amm.attoamm_id = _uid_provvedimento;


	RETURN QUERY
	with liq as
    (
		select
			a.liq_id,
			a.liq_anno,
			a.liq_numero,
			a.liq_desc,
			s.liq_stato_desc liq_stato,
			f.elem_id,
			h.anno,
			f.elem_code,
			f.elem_code2,
			f.elem_code3,
			d.movgest_anno,
			d.movgest_numero,
			c.movgest_ts_code,
			a.liq_importo,
			l.soggetto_code,
			l.soggetto_desc,
			n.attoamm_numero,
			n.attoamm_anno,
            n.attoamm_oggetto,
			o.attoamm_tipo_code,
			o.attoamm_tipo_desc,
			q.attoamm_stato_desc,
			n.attoamm_id,
            -- 02.07.2018 Sofia jira siac-6193
            l.soggetto_id,
            l.codice_fiscale::varchar sog_codice_fiscale,
            l.partita_iva sog_partita_iva
		from
			siac_t_liquidazione a,
			siac_r_liquidazione_movgest b,
			siac_t_movgest_ts c,
			siac_t_movgest d,
			siac_r_movgest_bil_elem e,
			siac_t_bil_elem f,
			siac_t_bil g,
			siac_t_periodo h,
			siac_r_liquidazione_soggetto i,
			siac_t_soggetto l,
			siac_r_liquidazione_atto_amm m,
			siac_t_atto_amm n,
			siac_d_atto_amm_tipo o,
			siac_r_atto_amm_stato p,
			siac_d_atto_amm_stato q,
			siac_r_liquidazione_stato r,
			siac_d_liquidazione_stato s
		where a.liq_id=b.liq_id
		and c.movgest_ts_id=b.movgest_ts_id
		and d.movgest_id=c.movgest_id
		and e.movgest_id=d.movgest_id
		and f.elem_id=e.elem_id
		and g.bil_id=f.bil_id
		and h.periodo_id=g.periodo_id
		and i.liq_id=a.liq_id
		and l.soggetto_id=i.soggetto_id
		and m.liq_id=a.liq_id
		and n.attoamm_id=m.attoamm_id
		and o.attoamm_tipo_id=n.attoamm_tipo_id
		and p.attoamm_id=n.attoamm_id
		and p.attoamm_stato_id=q.attoamm_stato_id
		and r.liq_id=a.liq_id
		and r.liq_stato_id=s.liq_stato_id
        and a.ente_proprietario_id = v_ente_proprietario_id
		and now() BETWEEN b.validita_inizio and coalesce (b.validita_fine,now())
		and now() BETWEEN e.validita_inizio and coalesce (e.validita_fine,now())
		and now() BETWEEN i.validita_inizio and coalesce (i.validita_fine,now())
		and now() BETWEEN m.validita_inizio and coalesce (m.validita_fine,now())
		and now() BETWEEN p.validita_inizio and coalesce (p.validita_fine,now())
		and now() BETWEEN r.validita_inizio and coalesce (r.validita_fine,now())
		and a.data_cancellazione is null
		and b.data_cancellazione is null
		and c.data_cancellazione is null
		and d.data_cancellazione is null
		and e.data_cancellazione is null
		and f.data_cancellazione is null
		and g.data_cancellazione is null
		and h.data_cancellazione is null
		and i.data_cancellazione is null
		and l.data_cancellazione is null
		and m.data_cancellazione is null
		and n.data_cancellazione is null
		and o.data_cancellazione is null
		and p.data_cancellazione is null
		and q.data_cancellazione is null
		and r.data_cancellazione is null
		and s.data_cancellazione is null
		and q.attoamm_stato_code<>'ANNULLATO'
		AND n.attoamm_id=_uid_provvedimento
		AND h.anno = _anno
	),
	sac as
    (
		select
			y.classif_code,
			y.classif_desc,
			z.attoamm_id
		from
			siac_r_atto_amm_class z,
			siac_t_class y,
			siac_d_class_tipo x
		where z.classif_id=y.classif_id
		and x.classif_tipo_id=y.classif_tipo_id
		and x.classif_tipo_code  IN ('CDC', 'CDR')
		and now() BETWEEN z.validita_inizio and coalesce (z.validita_fine,now())
		and y.ente_proprietario_id = v_ente_proprietario_id
		and z.data_cancellazione is NULL
		and x.data_cancellazione is NULL
		and y.data_cancellazione is NULL
	),
    -- 02.07.2018 Sofia siac-6193
    cartecont as
    (
        select rcs.soggetto_id, count(*) esiste_carta
        from  siac_r_cartacont_det_soggetto rcs
        where rcs.data_cancellazione is null
        and   rcs.validita_fine is null
		and   rcs.ente_proprietario_id = v_ente_proprietario_id
        group by rcs.soggetto_id
    ),
    -- 02.07.2018 Sofia jira siac-6193
    split_liq as
    (
      select  rliq.liq_id, count(*) esiste_split
      from siac_r_subdoc_liquidazione rliq,siac_t_subdoc sub,siac_r_doc_onere ronere,
           siac_d_onere onere, siac_d_onere_tipo tipo
      where  tipo.onere_tipo_code!='ES'
      and    onere.onere_tipo_id=tipo.onere_tipo_id
      and    ronere.onere_id=onere.onere_id
      and    sub.doc_id=ronere.doc_id
      and    rliq.subdoc_id=sub.subdoc_id
      and    sub.ente_proprietario_id = v_ente_proprietario_id
      and 	rliq.data_cancellazione is null
      and 	sub.data_cancellazione is null
      and 	ronere.data_cancellazione is null
      and 	onere.data_cancellazione is null        
      and 	tipo.data_cancellazione is null

      and    now() between ronere.validita_inizio and coalesce(ronere.validita_fine,now())
      and    now() between sub.validita_inizio and coalesce(sub.validita_fine,now())
      and    now() between rliq.validita_inizio and coalesce(rliq.validita_fine,now())
      group by rliq.liq_id
    ),
    -- 02.07.2018 Sofia jira siac-6193
    attoallegato as
    (
    	select alg.attoal_id,
               alg.attoamm_id,
               alg.data_creazione attoal_data_creazione,
               alg.attoal_data_scadenza,
               stato.attoal_stato_desc
        from   siac_t_atto_allegato alg, siac_r_atto_allegato_stato rs,siac_d_atto_allegato_stato stato
        where alg.attoal_id  = rs.attoal_id
        and   stato.attoal_stato_id  =  rs.attoal_stato_id
        and   alg.ente_proprietario_id = v_ente_proprietario_id
        and   alg.data_cancellazione is null
        and   stato.data_cancellazione is null
        and   rs.data_cancellazione is null
    ),
    -- 02.07.2018 Sofia jira siac-6193
    modpag_cessione as
    (
        select
          liqCessione.liq_id,
          rrelaz.soggetto_relaz_id,
          sog_cessione.soggetto_code soggetto_cessione_code,
          sog_cessione.soggetto_desc soggetto_cessione_desc,
          dat.accredito_tipo_code,
          dat.accredito_tipo_desc,
          tmod.iban,
          tmod.bic,
          tmod.contocorrente,
          tmod.contocorrente_intestazione,
          tmod.banca_denominazione,
          tmod.quietanziante ,
          tmod.quietanziante_codice_fiscale::varchar,
          drt.relaz_tipo_code,
          drt.relaz_tipo_desc
        from  siac_t_liquidazione liqCessione,
              siac_r_soggetto_relaz rrelaz,
              siac_d_relaz_tipo drt,
              siac_d_oil_relaz_tipo oil, -- 13.07.2018 Sofia jira siac-6193
              siac_r_oil_relaz_tipo roil,
              siac_t_soggetto sog_cessione,
              siac_r_soggrel_modpag rsm,
              siac_t_modpag tmod,
              siac_d_accredito_tipo dat
	    where oil.oil_relaz_tipo_code ='CSI' -- 13.07.2018 Sofia jira siac-6193
        and   roil.oil_relaz_tipo_id=oil.oil_relaz_tipo_id
        and   drt.relaz_tipo_id=roil.relaz_tipo_id
        and   drt.relaz_tipo_id=rrelaz.relaz_tipo_id
        and   sog_cessione.soggetto_id=rrelaz.soggetto_id_a
        and   rsm.soggetto_relaz_id=rrelaz.soggetto_relaz_id
        and   tmod.modpag_id=rsm.modpag_id
        and   dat.accredito_tipo_id = tmod.accredito_tipo_id
        and   liqCessione.soggetto_relaz_id=rrelaz.soggetto_relaz_id
		and   liqCessione.ente_proprietario_id = v_ente_proprietario_id        
        and liqCessione.data_cancellazione is null
        and rrelaz.data_cancellazione is null
        and drt.data_cancellazione is null
        and oil.data_cancellazione is null
        and roil.data_cancellazione is null
        and sog_cessione.data_cancellazione is null
        and rsm.data_cancellazione is null
        and tmod.data_cancellazione is null
        and dat.data_cancellazione is null
        and   liqCessione.validita_fine is null
        and   roil.validita_fine is null
        and   now()  BETWEEN rrelaz.validita_inizio and coalesce(rrelaz.validita_fine,now())
        and   now()  BETWEEN rsm.validita_inizio and coalesce(rsm.validita_fine,now())
        and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
    ),
    -- 02.07.2018 Sofia jira siac-6193
    modpag_no_cessione as
    (
		select
            liqModpag.liq_id,
            tmod.modpag_id,
            tipo.accredito_tipo_code,
            tipo.accredito_tipo_desc,
            tmod.iban,
            tmod.bic,
            tmod.contocorrente,
            tmod.contocorrente_intestazione,
            tmod.banca_denominazione,
            tmod.quietanziante,
            tmod.quietanziante_codice_fiscale::varchar
        from  siac_t_liquidazione liqModpag, siac_t_modpag tmod,  siac_d_accredito_tipo tipo
		where tipo.accredito_tipo_id = tmod.accredito_tipo_id
        and   liqModpag.modpag_id=tmod.modpag_id
		and   liqModpag.ente_proprietario_id = v_ente_proprietario_id        
        and   tipo.data_cancellazione is null
        and   liqModpag.data_cancellazione is null
        and   liqModpag.validita_fine is null
        and   tmod.data_cancellazione is null
		and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
    ),
    ordinativo as
    (
    with
     ordi as
     (
		-- SIAC-5164
		SELECT
			rlo.liq_id,
			tor.ord_anno,
			tor.ord_numero,
			dos.ord_stato_code,
			dos.ord_stato_desc,
            -- 02.07.2018 Sofia jira siac-6193
            -- La data di emissione ordinativo
			tor.ord_emissione_data,
            tor.ord_id,
            tor.ord_tipo_id
		FROM
			siac_r_liquidazione_ord rlo,
			siac_t_ordinativo_ts tot,
			siac_t_ordinativo tor,
			siac_r_ordinativo_stato ros,
			siac_d_ordinativo_stato dos
		WHERE rlo.sord_id = tot.ord_ts_id
		AND tot.ord_id = tor.ord_id
		AND ros.ord_id = tor.ord_id
		AND dos.ord_stato_id = ros.ord_stato_id
        and   tot.ente_proprietario_id = v_ente_proprietario_id 
		AND now() BETWEEN rlo.validita_inizio AND COALESCE (rlo.validita_fine, now())
		AND now() BETWEEN ros.validita_inizio AND COALESCE (ros.validita_fine, now())
		AND rlo.data_cancellazione IS NULL
		AND tot.data_cancellazione IS NULL
		AND tor.data_cancellazione IS NULL
		AND ros.data_cancellazione IS NULL
		AND dos.data_cancellazione IS NULL
		AND dos.ord_stato_code <> 'A'
	 ),
     -- 02.07.2018 Sofia jira siac-6193
     ord_quietanza AS
     (
      SELECT r.ord_id, max(r.ord_quietanza_data) ord_quietanza_data
	  FROM siac_r_ordinativo_quietanza r
	  WHERE r.data_cancellazione  is null
      and   r.ente_proprietario_id = v_ente_proprietario_id 
      and   now() between r.validita_inizio and coalesce(r.validita_fine, now())
      group by r.ord_id
     ),
     -- 02.07.2018 Sofia jira siac-6193
     ord_modpag_cessione as
     (
        select
          rmdp.ord_id,
          rrelaz.soggetto_relaz_id,
          sog_cessione.soggetto_code soggetto_cessione_code,
          sog_cessione.soggetto_desc soggetto_cessione_desc,
          dat.accredito_tipo_code,
          dat.accredito_tipo_desc,
          tmod.iban,
          tmod.bic,
          tmod.contocorrente,
          tmod.contocorrente_intestazione,
          tmod.banca_denominazione,
          tmod.quietanziante ,
          tmod.quietanziante_codice_fiscale::varchar,
          drt.relaz_tipo_code,
          drt.relaz_tipo_desc
        from  siac_r_soggetto_relaz rrelaz,
              siac_d_relaz_tipo drt,
              siac_d_oil_relaz_tipo oil, -- 13.07.2018 Sofia jira siac-6193
              siac_r_oil_relaz_tipo roil,
              siac_t_soggetto sog_cessione,
              siac_r_soggrel_modpag rsm,
              siac_t_modpag tmod,
              siac_d_accredito_tipo dat,
              siac_r_ordinativo_modpag rmdp
	    where oil.oil_relaz_tipo_code ='CSI' -- 13.07.2018 Sofia jira siac-6193
        and   roil.oil_relaz_tipo_id=oil.oil_relaz_tipo_id
        and   drt.relaz_tipo_id=roil.relaz_tipo_id
        and   drt.relaz_tipo_id=rrelaz.relaz_tipo_id
        and   sog_cessione.soggetto_id=rrelaz.soggetto_id_a
        and   rsm.soggetto_relaz_id=rrelaz.soggetto_relaz_id
        and   tmod.modpag_id=rsm.modpag_id
        and   dat.accredito_tipo_id = tmod.accredito_tipo_id
        and   rmdp.soggetto_relaz_id=rrelaz.soggetto_relaz_id
        and   sog_cessione.ente_proprietario_id = v_ente_proprietario_id 

        and rrelaz.data_cancellazione is null
        and drt.data_cancellazione is null
        and oil.data_cancellazione is null
        and roil.data_cancellazione is null
        and sog_cessione.data_cancellazione is null
        and  rsm.data_cancellazione is null
        and tmod.data_cancellazione is null
        and dat.data_cancellazione is null
        and rmdp.data_cancellazione is null
        
        and   rmdp.validita_fine is null
        and   roil.validita_fine is null
        and   now()  BETWEEN rrelaz.validita_inizio and coalesce(rrelaz.validita_fine,now())
        and   now()  BETWEEN rsm.validita_inizio and coalesce(rsm.validita_fine,now())
        and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
     ),
     -- 02.07.2018 Sofia jira siac-6193
     ord_modpag_no_cessione as
     (
		select
            rModpag.ord_id,
            tmod.modpag_id,
            tipo.accredito_tipo_code,
            tipo.accredito_tipo_desc,
            tmod.iban,
            tmod.bic,
            tmod.contocorrente,
            tmod.contocorrente_intestazione,
            tmod.banca_denominazione,
            tmod.quietanziante,
            tmod.quietanziante_codice_fiscale::varchar
        from  siac_r_ordinativo_modpag rModpag, siac_t_modpag tmod,  siac_d_accredito_tipo tipo
		where tipo.accredito_tipo_id = tmod.accredito_tipo_id
        and   rModpag.modpag_id=tmod.modpag_id
 		and   tmod.ente_proprietario_id = v_ente_proprietario_id 
        and   rModpag.data_cancellazione is null
        and   rModpag.validita_fine is null
        and   tmod.data_cancellazione is null
        and   tipo.data_cancellazione is null
		and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
     ),
     -- 12.07.2018 Sofia jira siac-6193
     ord_soggetto_ord as
     (
     select rsog.ord_id,
            sog.soggetto_code ord_soggetto_code,
            sog.soggetto_desc ord_soggetto_desc
     from siac_r_ordinativo_soggetto rsog,
          siac_t_soggetto sog
     where sog.soggetto_id=rsog.soggetto_id
	 and   sog.ente_proprietario_id = v_ente_proprietario_id 
     and   sog.data_cancellazione is null
     and   rsog.data_cancellazione is null
     and   now()  BETWEEN rsog.validita_inizio and coalesce(rsog.validita_fine,now())
     )
     select ordi.*,
            ord_quietanza.ord_quietanza_data,
            -- 12.07.2018 Sofia jira siac-6193
            ord_soggetto_ord.ord_soggetto_code,
            ord_soggetto_ord.ord_soggetto_desc,
            -- MDP - no  cessione
	        -- Accredito tipo - no cessione
    	    ord_modpag_no_cessione.accredito_tipo_code ord_accredito_tipo_code,
            ord_modpag_no_cessione.accredito_tipo_desc ord_accredito_tipo_desc,
	        -- Modalita di pagamento
    	    -- IBAN
        	ord_modpag_no_cessione.iban ord_iban,
	        -- BIC
    	    ord_modpag_no_cessione.bic ord_bic,
	        -- contocorrente
    	    ord_modpag_no_cessione.contocorrente ord_contocorrente,
        	-- contocorrente_intestazione
	        ord_modpag_no_cessione.contocorrente_intestazione ord_contocorrente_intestazione,
    	    -- banca_denominazione
        	ord_modpag_no_cessione.banca_denominazione ord_banca_denominazione,
	        -- quietanzante
    	    ord_modpag_no_cessione.quietanziante ord_quietanzante,
        	-- quietanzante_codice_fiscale
	        ord_modpag_no_cessione.quietanziante_codice_fiscale ord_quietanzante_codice_fiscale,
            -- Estremi soggetto cessione
       		ord_modpag_cessione.soggetto_cessione_code ord_soggetto_cessione_code,
	        ord_modpag_cessione.soggetto_cessione_desc ord_soggetto_cessione_desc,
    	    -- Relazione Soggetto
	        ord_modpag_cessione.relaz_tipo_code ord_relaz_tipo_code,
        	ord_modpag_cessione.relaz_tipo_desc ord_relaz_tipo_desc,
	        -- Accredito tipo - se CESSIONE - valorizzato con Relazione
    	    ord_modpag_cessione.accredito_tipo_code ord_accredito_tipo_code_cess,
            ord_modpag_cessione.accredito_tipo_desc ord_accredito_tipo_desc_cess,
	        -- Modalita di pagamento
    	    -- IBAN
            ord_modpag_cessione.iban ord_iban_cess,
	        -- BIC
        	ord_modpag_cessione.bic ord_bic_cess,
	        -- contocorrente
            ord_modpag_cessione.contocorrente ord_contocorrente_cess,
        	-- contocorrente_intestazione
            ord_modpag_cessione.contocorrente_intestazione ord_contocorrente_intestazione_cess,
    	    -- banca_denominazione
            ord_modpag_cessione.banca_denominazione ord_banca_denominazione_cess,
	        -- quietanzante
            ord_modpag_cessione.quietanziante ord_quietanzante_cess,
        	-- quietanzante_codice_fiscale
            ord_modpag_cessione.quietanziante_codice_fiscale ord_quietanzante_codice_fiscale_cess
     from siac_d_ordinativo_tipo tipo,
          ordi
          left join ord_quietanza on (ordi.ord_id=ord_quietanza.ord_id)
          left join ord_modpag_no_cessione on (ordi.ord_id=ord_modpag_no_cessione.ord_id)
          left join ord_modpag_cessione on (ordi.ord_id=ord_modpag_cessione.ord_id)
          -- 12.07.2018 Sofia jira siac-6193
          join ord_soggetto_ord on (ord_soggetto_ord.ord_id=ordi.ord_id)
     where tipo.ord_tipo_code='P'
     and   tipo.ente_proprietario_id = v_ente_proprietario_id 
     and   tipo.data_cancellazione is  null 
     and   ordi.ord_tipo_id=tipo.ord_tipo_id
    )
	select
		liq.liq_id,
		liq.liq_anno,
		liq.liq_numero,
		liq.liq_desc,
		liq.liq_stato,
		liq.elem_id as uid_capitolo,
		liq.anno as capitolo_anno,
		liq.elem_code as capitolo_numero,
		liq.elem_code2 as capitolo_articolo,
		liq.elem_code3 as ueb_numero,
		liq.movgest_anno,
		liq.movgest_numero,
		liq.movgest_ts_code,
		liq.liq_importo,
		liq.soggetto_code,
		liq.soggetto_desc,
		liq.attoamm_numero,
		liq.attoamm_anno,
		liq.attoamm_oggetto,
		liq.attoamm_tipo_code,
		liq.attoamm_tipo_desc,
		liq.attoamm_stato_desc,
		sac.classif_code,
		sac.classif_desc,
        -- 02.07.2018 Sofia jira siac-6193
		ordinativo.ord_anno,
		ordinativo.ord_numero,
		ordinativo.ord_stato_code,
		ordinativo.ord_stato_desc,
        -- 02.07.2018 Sofia jira siac-6193
        liq.sog_codice_fiscale,
        liq.sog_partita_iva ,
        (CASE WHEN  coalesce(cartecont.esiste_carta,0)=0 THEN 'N'::varchar ELSE 'S'::varchar END )  carte_contabili ,
		-- Data di inserimento dell atto contabile (la medesima data che viene riportata in stampa dell'ALG)
        attoallegato.attoal_data_creazione,
        -- Data di scadenza dell atto contabile
        attoallegato.attoal_data_scadenza ,
        -- Stato dell atto contabile
		attoallegato.attoal_stato_desc,
        -- MDP - no cessione
        -- Accredito tipo - no CESSIONE
        modpag_no_cessione.accredito_tipo_code,
        modpag_no_cessione.accredito_tipo_desc,
        -- Modalita di pagamento
        -- IBAN
        modpag_no_cessione.iban,
        -- BIC
        modpag_no_cessione.bic,
        -- contocorrente
        modpag_no_cessione.contocorrente,
        -- contocorrente_intestazione
        modpag_no_cessione.contocorrente_intestazione,
        -- banca_denominazione
        modpag_no_cessione.banca_denominazione,
        -- quietanzante
        modpag_no_cessione.quietanziante quietanzante,
        -- quietanzante_codice_fiscale
        modpag_no_cessione.quietanziante_codice_fiscale quietanzante_codice_fiscale,
        -- MDP - CESSIONE
        -- Estremi soggetto cessione
        modpag_cessione.soggetto_cessione_code,
        modpag_cessione.soggetto_cessione_desc,
        -- Relazione Soggetto
        modpag_cessione.relaz_tipo_code,
        modpag_cessione.relaz_tipo_desc,
        -- Accredito tipo - CESSIONE
        modpag_cessione.accredito_tipo_code accredito_tipo_code_cess,
        modpag_cessione.accredito_tipo_desc accredito_tipo_desc_cess,
        -- Modalita di pagamento
        -- IBAN
        modpag_cessione.iban iban_cess,
        -- BIC
        modpag_cessione.bic bic_cess,
        -- contocorrente
        modpag_cessione.contocorrente contocorrente_cess,
        -- contocorrente_intestazione
        modpag_cessione.contocorrente_intestazione contocorrente_intestazione_cess,
        -- banca_denominazione
        modpag_cessione.banca_denominazione banca_denominazione_cess,
        -- quietanzante
        modpag_cessione.quietanziante quietanzante_cess,
        -- quietanzante_codice_fiscale
        modpag_cessione.quietanziante_codice_fiscale quietanzante_codice_fiscale_cess,
        (CASE WHEN  coalesce(split_liq.esiste_split,0)=0 THEN 'N'::varchar ELSE 'S'::varchar END )  liq_esiste_split ,
        -- Ordinativo
        -- La data di emissione ordinativo
        ordinativo.ord_emissione_data,
        -- La data di quietanza ordinativo
        ordinativo.ord_quietanza_data,
        -- 12.07.2018 Sofia jira siac-6193
        ordinativo.ord_soggetto_code,
        ordinativo.ord_soggetto_desc,
        -- MDP ordinativo
        ordinativo.ord_accredito_tipo_code,
        ordinativo.ord_accredito_tipo_desc,
        ordinativo.ord_iban,
        ordinativo.ord_bic,
        ordinativo.ord_contocorrente,
        ordinativo.ord_contocorrente_intestazione,
        ordinativo.ord_banca_denominazione,
        ordinativo.ord_quietanzante,
        ordinativo.ord_quietanzante_codice_fiscale,
        -- MDP - CESSIONE
        -- Estremi soggetto cessione
        ordinativo.ord_soggetto_cessione_code,
        ordinativo.ord_soggetto_cessione_desc,
        -- Relazione soggetto cessione
        ordinativo.ord_relaz_tipo_code,
        ordinativo.ord_relaz_tipo_desc,
        -- MDP ordinativo
        ordinativo.ord_accredito_tipo_code_cess,
        ordinativo.ord_accredito_tipo_desc_cess,
        ordinativo.ord_iban_cess,
        ordinativo.ord_bic_cess,
        ordinativo.ord_contocorrente_cess,
        ordinativo.ord_contocorrente_intestazione_cess,
        ordinativo.ord_banca_denominazione_cess,
        ordinativo.ord_quietanzante_cess,
        ordinativo.ord_quietanzante_codice_fiscale_cess
	from liq
		 left outer join sac on liq.attoamm_id=sac.attoamm_id
	  	 left outer join ordinativo on ordinativo.liq_id = liq.liq_id
         -- 02.07.2018 Sofia jira siac-6193
         left outer join cartecont on liq.soggetto_id=cartecont.soggetto_id
         left outer join  split_liq on (liq.liq_id = split_liq.liq_id)
         left outer join  attoallegato on  (liq.attoamm_id = attoallegato.attoamm_id)
  	     left outer join  modpag_no_cessione on  (liq.liq_id =  modpag_no_cessione.liq_id)
         left outer join  modpag_cessione on ( liq.liq_id = modpag_cessione.liq_id)
	ORDER BY 2,3,5,7,8,9,10
	LIMIT _limit
	OFFSET _offset;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;


DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_accertamento_from_capitoloentrata_importo (integer);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_accertamento_from_capitoloentrata_importo (integer,varchar);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_accertamento_from_capitoloentrata_importo (integer,varchar,varchar);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_accertamento_from_capitoloentrata_importo (
  _uid_capitoloentrata integer,
  _anno varchar,
 _filtro_crp varchar -- 11.07.2018 Sofia jira SIAC-6193 C,R,P, altro per tutto

)
RETURNS numeric AS
$body$
DECLARE
	total numeric;
BEGIN

	SELECT coalesce(sum(f.movgest_ts_det_importo),0) into total
	from
		siac_t_bil_elem a,
		siac_t_bil b2,
		siac_t_periodo c2,
		siac_r_movgest_bil_elem b,
		siac_t_movgest c,
		siac_d_movgest_tipo d,
		siac_t_movgest_ts e,
		siac_t_movgest_ts_det f,
		siac_d_movgest_ts_tipo g,
		siac_d_movgest_ts_det_tipo h,
		siac_r_movgest_ts_stato i,
		siac_d_movgest_stato l,
		siac_r_movgest_class m,
		siac_t_class n,
		siac_d_class_tipo o,
		siac_t_bil p,
		siac_t_periodo q
	where a.bil_id=b2.bil_id
	and c2.periodo_id=b2.periodo_id
	and c.movgest_id=b.movgest_id
	and b.elem_id=a.elem_id
	and d.movgest_tipo_id=c.movgest_tipo_id
	and e.movgest_id=c.movgest_id
	and f.movgest_ts_id=e.movgest_ts_id
	and g.movgest_ts_tipo_id=e.movgest_ts_tipo_id
	and h.movgest_ts_det_tipo_id=f.movgest_ts_det_tipo_id
	and i.movgest_ts_id=e.movgest_ts_id
	and m.movgest_ts_id = e.movgest_ts_id
	and n.classif_id = m.classif_id
	and o.classif_tipo_id = n.classif_tipo_id
	and l.movgest_stato_id=i.movgest_stato_id
	and p.bil_id = c.bil_id
	and q.periodo_id = p.periodo_id
	and now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now())
	and now() BETWEEN i.validita_inizio and COALESCE(i.validita_fine,now())
	and now() BETWEEN m.validita_inizio and COALESCE(m.validita_fine,now())
	and b.data_cancellazione is null
	and c.data_cancellazione is null
	and d.data_cancellazione is null
	and e.data_cancellazione is null
	and f.data_cancellazione is null
	and g.data_cancellazione is null
	and h.data_cancellazione is null
	and i.data_cancellazione is null
	and l.data_cancellazione is null
	and m.data_cancellazione is null
	and n.data_cancellazione is null
	and o.data_cancellazione is null
	and p.data_cancellazione is null
	and q.data_cancellazione is null
	and d.movgest_tipo_code='A'
	and g.movgest_ts_tipo_code='T'
	and h.movgest_ts_det_tipo_code='A'
	and o.classif_tipo_code IN ('PDC_I','PCD_II', 'PDC_III', 'PDC_IV', 'PDC_V')
	and a.elem_id=_uid_capitoloentrata
	and q.anno = _anno
    -- 11.07.2018 Sofia jira siac-6193
    and (case when coalesce(_filtro_crp,'X')='R' then c.movgest_anno<_anno::integer
              when coalesce(_filtro_crp,'X')='C' then c.movgest_anno=_anno::integer
              when coalesce(_filtro_crp,'X')='P' then c.movgest_anno>_anno::integer
              else true end );

	return total;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

--2
-- SIAC-5152: DROP FUNZIONE CON UNO (vecchia versione) E DUE (nuova versione) PARAMETRI
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_accertamento_from_capitoloentrata_total (integer);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_accertamento_from_capitoloentrata_total (integer,varchar);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_accertamento_from_capitoloentrata_total (integer,varchar,varchar);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_accertamento_from_capitoloentrata_total (
  _uid_capitoloentrata integer,
  _anno varchar,
  _filtro_crp varchar -- 11.07.2018 Sofia jira SIAC-6193 C,R,P, altro per tutto
)
RETURNS bigint AS
$body$
DECLARE
	total bigint;
BEGIN

	SELECT coalesce(count(*),0) into total
	from
		siac_t_bil_elem a,
		siac_t_bil b2,
		siac_t_periodo c2,
		siac_r_movgest_bil_elem b,
		siac_t_movgest c,
		siac_d_movgest_tipo d,
		siac_t_movgest_ts e,
		siac_t_movgest_ts_det f,
		siac_d_movgest_ts_tipo g,
		siac_d_movgest_ts_det_tipo h,
		siac_r_movgest_ts_stato i,
		siac_d_movgest_stato l,
		siac_r_movgest_class m,
		siac_t_class n,
		siac_d_class_tipo o,
		siac_t_bil p,
		siac_t_periodo q
	where a.bil_id=b2.bil_id
	and c2.periodo_id=b2.periodo_id
	and c.movgest_id=b.movgest_id
	and b.elem_id=a.elem_id
	and d.movgest_tipo_id=c.movgest_tipo_id
	and e.movgest_id=c.movgest_id
	and f.movgest_ts_id=e.movgest_ts_id
	and g.movgest_ts_tipo_id=e.movgest_ts_tipo_id
	and h.movgest_ts_det_tipo_id=f.movgest_ts_det_tipo_id
	and i.movgest_ts_id=e.movgest_ts_id
	and m.movgest_ts_id = e.movgest_ts_id
	and n.classif_id = m.classif_id
	and o.classif_tipo_id = n.classif_tipo_id
	and l.movgest_stato_id=i.movgest_stato_id
	and p.bil_id = c.bil_id
	and q.periodo_id = p.periodo_id
	and now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now())
	and now() BETWEEN i.validita_inizio and COALESCE(i.validita_fine,now())
	and now() BETWEEN m.validita_inizio and COALESCE(m.validita_fine,now())
	and b.data_cancellazione is null
	and c.data_cancellazione is null
	and d.data_cancellazione is null
	and e.data_cancellazione is null
	and f.data_cancellazione is null
	and g.data_cancellazione is null
	and h.data_cancellazione is null
	and i.data_cancellazione is null
	and l.data_cancellazione is null
	and m.data_cancellazione is null
	and n.data_cancellazione is null
	and o.data_cancellazione is null
	and p.data_cancellazione is null
	and q.data_cancellazione is null
	and d.movgest_tipo_code='A'
	and g.movgest_ts_tipo_code='T'
	and h.movgest_ts_det_tipo_code='A'
	and o.classif_tipo_code IN ('PDC_I','PCD_II', 'PDC_III', 'PDC_IV', 'PDC_V')
	and a.elem_id=_uid_capitoloentrata
	and q.anno = _anno
    -- 11.07.2018 Sofia jira siac-6193
    and (case when coalesce(_filtro_crp,'X')='R' then c.movgest_anno<_anno::integer
              when coalesce(_filtro_crp,'X')='C' then c.movgest_anno=_anno::integer
              when coalesce(_filtro_crp,'X')='P' then c.movgest_anno>_anno::integer
              else true end );

	return total;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

--3

-- SIAC-5152: DROP FUNZIONE CON TRE (vecchia versione) E QUATTRO (nuova versione) PARAMETRI
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_accertamento_from_capitoloentrata (integer, integer, integer);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_accertamento_from_capitoloentrata (integer, varchar, integer, integer);

DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_accertamento_from_capitoloentrata (integer, varchar, varchar, integer, integer);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_accertamento_from_capitoloentrata (
  _uid_capitoloentrata integer,
  _anno varchar,
  _filtro_crp varchar, -- 12.07.2018 Sofia jira SIAC-6193 C,R,P, altro per tutto
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  accertamento_anno integer,
  accertamento_numero numeric,
  accertamento_desc varchar,
  soggetto_code varchar,
  soggetto_desc varchar,
  accertamento_stato_desc varchar,
  importo numeric,
  capitolo_anno varchar,
  capitolo_numero varchar,
  capitolo_articolo varchar,
  ueb_numero varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  pdc_code varchar,
  pdc_desc varchar,
  -- 12.07.2018 Sofia jira siac-6193
  attoamm_oggetto varchar
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
	rec record;
	v_movgest_ts_id integer;
	v_attoamm_id integer;
BEGIN

	for rec in
		select
			a.elem_id,
			c2.anno,
			a.elem_code,
			a.elem_code2,
			a.elem_code3,
			e.movgest_ts_id,
			c.movgest_anno,
			c.movgest_numero,
			c.movgest_desc,
			f.movgest_ts_det_importo,
			l.movgest_stato_desc,
			c.movgest_id,
			n.classif_code pdc_code,
			n.classif_desc pdc_desc
		from
			siac_t_bil_elem a,
			siac_t_bil b2,
			siac_t_periodo c2,
			siac_r_movgest_bil_elem b,
			siac_t_movgest c,
			siac_d_movgest_tipo d,
			siac_t_movgest_ts e,
			siac_t_movgest_ts_det f,
			siac_d_movgest_ts_tipo g,
			siac_d_movgest_ts_det_tipo h,
			siac_r_movgest_ts_stato i,
			siac_d_movgest_stato l,
			siac_r_movgest_class m,
			siac_t_class n,
			siac_d_class_tipo o,
			siac_t_bil p,
			siac_t_periodo q
		where a.bil_id=b2.bil_id
		and c2.periodo_id=b2.periodo_id
		and c.movgest_id=b.movgest_id
		and b.elem_id=a.elem_id
		and d.movgest_tipo_id=c.movgest_tipo_id
		and e.movgest_id=c.movgest_id
		and f.movgest_ts_id=e.movgest_ts_id
		and g.movgest_ts_tipo_id=e.movgest_ts_tipo_id
		and h.movgest_ts_det_tipo_id=f.movgest_ts_det_tipo_id
		and l.movgest_stato_id=i.movgest_stato_id
		and i.movgest_ts_id=e.movgest_ts_id
		and m.movgest_ts_id = e.movgest_ts_id
		and n.classif_id = m.classif_id
		and o.classif_tipo_id = n.classif_tipo_id
		and p.bil_id = c.bil_id
		and q.periodo_id = p.periodo_id
		and now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now())
		and now() BETWEEN i.validita_inizio and COALESCE(i.validita_fine,now())
		and now() BETWEEN m.validita_inizio and COALESCE(m.validita_fine,now())
		and b.data_cancellazione is null
		and c.data_cancellazione is null
		and d.data_cancellazione is null
		and e.data_cancellazione is null
		and f.data_cancellazione is null
		and g.data_cancellazione is null
		and h.data_cancellazione is null
		and i.data_cancellazione is null
		and l.data_cancellazione is null
		and m.data_cancellazione is null
		and n.data_cancellazione is null
		and o.data_cancellazione is null
		and d.movgest_tipo_code='A'
		and g.movgest_ts_tipo_code='T'
		and h.movgest_ts_det_tipo_code='A'
		and o.classif_tipo_code IN ('PDC_I','PCD_II', 'PDC_III', 'PDC_IV', 'PDC_V')
		and a.elem_id=_uid_capitoloentrata
		and q.anno = _anno
        -- 12.07.2018 Sofia jira siac-6193
        and (case when coalesce(_filtro_crp,'X')='R' then c.movgest_anno<_anno::integer
                  when coalesce(_filtro_crp,'X')='C' then c.movgest_anno=_anno::integer
                  when coalesce(_filtro_crp,'X')='P' then c.movgest_anno>_anno::integer
                  else true end )
		order by
			c.movgest_anno,
			c.movgest_numero
		LIMIT _limit
		OFFSET _offset

		loop

			uid:=rec.movgest_id;
			capitolo_anno:=rec.anno;
			capitolo_numero:=rec.elem_code;
			capitolo_articolo:=rec.elem_code2;
			ueb_numero:=rec.elem_code3;
			v_movgest_ts_id:=rec.movgest_ts_id;
			accertamento_anno:=rec.movgest_anno;
			accertamento_numero:=rec.movgest_numero;
			accertamento_desc:=rec.movgest_desc;
			importo:=rec.movgest_ts_det_importo;
			accertamento_stato_desc:=rec.movgest_stato_desc;
			pdc_code:=rec.pdc_code;
			pdc_desc:=rec.pdc_desc;

			select
				y.soggetto_code,
				y.soggetto_desc
			into
				soggetto_code,
				soggetto_desc
			from
				siac_r_movgest_ts_sog z,
				siac_t_soggetto y
			where z.soggetto_id=y.soggetto_id
			and now() BETWEEN z.validita_inizio
			and COALESCE(z.validita_fine,now())
			and now() BETWEEN z.validita_inizio and COALESCE(z.validita_fine,now())
			and z.data_cancellazione is null
			and y.data_cancellazione is null
			and z.movgest_ts_id=v_movgest_ts_id;

			--classe di soggetti
			if soggetto_code is null then

				select
					l.soggetto_classe_code,
					l.soggetto_classe_desc
				into
					soggetto_code,
					soggetto_desc
				from
					siac_t_soggetto g,
					siac_r_movgest_ts_sogclasse h,
					siac_r_soggetto_classe i,
					siac_d_soggetto_classe l
				where g.soggetto_id=i.soggetto_id
				and h.soggetto_classe_id=l.soggetto_classe_id
				and i.soggetto_classe_id=l.soggetto_classe_id
				and now() between h.validita_inizio and coalesce(h.validita_fine, now())
				and g.data_cancellazione is null
				and h.data_cancellazione is null
				and now() between i.validita_inizio and coalesce(i.validita_fine, now())
				and h.movgest_ts_id=v_movgest_ts_id;
			end if;

			select
				q.attoamm_id,
				q.attoamm_numero,
				q.attoamm_anno,
				t.attoamm_stato_desc,
				r.attoamm_tipo_code,
				r.attoamm_tipo_desc,
                -- 12.07.2018 Sofia jira siac-6193
                q.attoamm_oggetto
			into
				v_attoamm_id,
				attoamm_numero,
				attoamm_anno,
				attoamm_stato_desc,
				attoamm_tipo_code,
				attoamm_tipo_desc
			from
				siac_r_movgest_ts_atto_amm p,
				siac_t_atto_amm q,
				siac_d_atto_amm_tipo r,
				siac_r_atto_amm_stato s,
				siac_d_atto_amm_stato t
			where p.attoamm_id=q.attoamm_id
			and now() BETWEEN p.validita_inizio and COALESCE(p.validita_fine,now())
			and r.attoamm_tipo_id=q.attoamm_tipo_id
			and s.attoamm_id=q.attoamm_id
			and t.attoamm_stato_id=s.attoamm_stato_id
			and now() BETWEEN s.validita_inizio and COALESCE(s.validita_fine,now())
			and p.movgest_ts_id=rec.movgest_ts_id
			and p.data_cancellazione is null
			and q.data_cancellazione is null
			and r.data_cancellazione is null
			and s.data_cancellazione is null
			and t.data_cancellazione is null;

			--sac
			select
				y.classif_code,
				y.classif_desc
			into
				attoamm_sac_code,
				attoamm_sac_desc
			from
				siac_r_atto_amm_class z,
				siac_t_class y,
				siac_d_class_tipo x
			where z.classif_id=y.classif_id
			and x.classif_tipo_id=y.classif_tipo_id
			and x.classif_tipo_code  IN ('CDC', 'CDR')
			and now() BETWEEN z.validita_inizio and COALESCE(z.validita_fine,now())
			and z.data_cancellazione is NULL
			and x.data_cancellazione is NULL
			and y.data_cancellazione is NULL
			and z.attoamm_id=v_attoamm_id;

			return next;

		end loop;

	return;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--4

-- SIAC-5152: DROP FUNZIONE CON TRE (vecchia versione) E QUATTRO (nuova versione) PARAMETRI
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_accertamento_from_provvedimento (integer, integer, integer);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_accertamento_from_provvedimento (integer, varchar, integer, integer);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_accertamento_from_provvedimento (
  _uid_provvedimento integer,
  _anno varchar,
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  accertamento_anno integer,
  accertamento_numero numeric,
  accertamento_desc varchar,
  accertamento_stato_desc varchar,
  importo numeric,
  soggetto_code varchar,
  soggetto_desc varchar,
  capitolo_anno varchar,
  capitolo_numero varchar,
  capitolo_articolo varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  pdc_code varchar,
  pdc_desc varchar,
  -- 12.07.2018 Sofia jira siac-6193
  attoamm_oggetto varchar

) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
	stringaTest character varying := 'stringa di test';
BEGIN

	RETURN QUERY
		with attoammsac as (
			with attoamm as (
				select g.movgest_id uid,
					g.movgest_anno accertamento_anno,
					g.movgest_numero accertamento_numero,
					g.movgest_desc accertamento_desc,
					m.movgest_stato_desc accertamento_stato_desc,
					n.movgest_ts_det_importo accertamento_importo,
					a.attoamm_numero,
					a.attoamm_anno,
					b.attoamm_tipo_code,
					b.attoamm_tipo_desc,
					d.attoamm_stato_desc,
					f.movgest_ts_id,
					a.attoamm_id,
					q.classif_code pdc_code,
					q.classif_desc pdc_desc,
                    -- 12.07.2018 Sofia jira siac-6193
                    a.attoamm_oggetto

				from siac_t_atto_amm a
				join siac_d_atto_amm_tipo b ON (b.attoamm_tipo_id=a.attoamm_tipo_id and b.data_cancellazione is null and a.data_cancellazione is null)
				join siac_r_atto_amm_stato c ON (c.attoamm_id=a.attoamm_id and c.data_cancellazione IS NULL and now() BETWEEN c.validita_inizio and COALESCE(c.validita_fine,now()))
				join siac_d_atto_amm_stato d on (d.attoamm_stato_id=c.attoamm_stato_id and d.data_cancellazione is null)
				join siac_r_movgest_ts_atto_amm e on (e.attoamm_id=a.attoamm_id and e.data_cancellazione is null and now() BETWEEN e.validita_inizio and COALESCE(e.validita_fine,now()))
				join siac_t_movgest_ts f ON (f.movgest_ts_id=e.movgest_ts_id and f.data_cancellazione is null)
				join siac_t_movgest g on (g.movgest_id=f.movgest_id and g.data_cancellazione is null)
				join siac_d_movgest_tipo h on (h.movgest_tipo_id=g.movgest_tipo_id and h.data_cancellazione is null)
				join siac_d_movgest_ts_tipo i on (i.movgest_ts_tipo_id=f.movgest_ts_tipo_id and i.data_cancellazione is null)
				join siac_r_movgest_ts_stato l on (l.movgest_ts_id=f.movgest_ts_id and l.data_cancellazione is null and now() BETWEEN l.validita_inizio and COALESCE(l.validita_fine,now()))
				join siac_d_movgest_stato m on (l.movgest_stato_id=m.movgest_stato_id and m.data_cancellazione is null)
				join siac_t_movgest_ts_det n on (n.movgest_ts_id=f.movgest_ts_id and n.data_cancellazione is null)
				join siac_d_movgest_ts_det_tipo o on (o.movgest_ts_det_tipo_id=n.movgest_ts_det_tipo_id and o.data_cancellazione is null)
				join siac_r_movgest_class p on (p.movgest_ts_id = f.movgest_ts_id and p.data_cancellazione is null and now() BETWEEN p.validita_inizio and COALESCE(p.validita_fine, now()))
				join siac_t_class q on (q.classif_id = p.classif_id and q.data_cancellazione is null)
				join siac_d_class_tipo r on (r.classif_tipo_id = q.classif_tipo_id and r.data_cancellazione is null)
				join siac_t_bil s on (s.bil_id = g.bil_id and s.data_cancellazione is null)
				join siac_t_periodo t on (t.periodo_id = s.periodo_id and t.data_cancellazione is null)
				where a.attoamm_id=_uid_provvedimento
				and h.movgest_tipo_code='A'
				and i.movgest_ts_tipo_code='T'
				and o.movgest_ts_det_tipo_code='A'
				and r.classif_tipo_code in ('PDC_I','PCD_II', 'PDC_III', 'PDC_IV', 'PDC_V')
				and t.anno = _anno
			),
			sac as (
				select f.attoamm_id,
					g.classif_code,
					g.classif_desc
				from siac_r_atto_amm_class f
				join siac_t_class g on (f.classif_id=g.classif_id and g.data_cancellazione is null and f.data_cancellazione is null and now() BETWEEN f.validita_inizio and COALESCE(f.validita_fine,now()))
				join siac_d_class_tipo h on (h.classif_tipo_id=g.classif_tipo_id and h.data_cancellazione is null)
				where h.classif_tipo_code in ('CDR','CDC')
				and f.attoamm_id = _uid_provvedimento
			)
			select attoamm.uid,
				attoamm.accertamento_anno,
				attoamm.accertamento_numero,
				attoamm.accertamento_desc,
				attoamm.accertamento_stato_desc,
				attoamm.accertamento_importo,
				attoamm.attoamm_numero,
				attoamm.attoamm_anno,
				attoamm.attoamm_tipo_code,
				attoamm.attoamm_tipo_desc,
				attoamm.attoamm_stato_desc,
				attoamm.movgest_ts_id,
				sac.classif_code attoamm_sac_code,
				sac.classif_desc attoamm_sac_desc,
				attoamm.pdc_code,
				attoamm.pdc_desc,
                -- 12.07.2018 Sofia jira siac-6193
                attoamm.attoamm_oggetto
			from attoamm
			left outer join sac on attoamm.attoamm_id=sac.attoamm_id
		),
		sogg as (
			select z.movgest_ts_id,
				y.soggetto_code,
				y.soggetto_desc
			from siac_r_movgest_ts_sog z
			join siac_t_soggetto y on (z.soggetto_id=y.soggetto_id and y.data_cancellazione is null and z.data_cancellazione is null and now() BETWEEN z.validita_inizio and coalesce (z.validita_fine,now()))
		),
		cap as (
			select
				a1.movgest_id,
				b1.elem_code as capitolo_numero,
				b1.elem_code2 as capitolo_articolo,
				d1.anno as capitolo_anno
			from siac_r_movgest_bil_elem a1
			join siac_t_bil_elem b1 on (a1.elem_id = b1.elem_id and a1.data_cancellazione IS NULL AND b1.data_cancellazione IS NULL)
			join siac_t_bil c1 on (c1.bil_id = b1.bil_id and c1.data_cancellazione is null)
			join siac_t_periodo d1 on (d1.periodo_id = c1.periodo_id and d1.data_cancellazione is null)
			WHERE now() BETWEEN a1.validita_inizio AND COALESCE(a1.validita_fine, now())
		)
		select attoammsac.uid,
			attoammsac.accertamento_anno,
			attoammsac.accertamento_numero,
			attoammsac.accertamento_desc,
			attoammsac.accertamento_stato_desc,
			attoammsac.accertamento_importo,
			sogg.soggetto_code,
			sogg.soggetto_desc,
			cap.capitolo_anno,
			cap.capitolo_numero,
			cap.capitolo_articolo,
			attoammsac.attoamm_numero,
			attoammsac.attoamm_anno,
			attoammsac.attoamm_tipo_code,
			attoammsac.attoamm_tipo_desc,
			attoammsac.attoamm_stato_desc,
			attoammsac.attoamm_sac_code,
			attoammsac.attoamm_sac_desc,
			attoammsac.pdc_code,
			attoammsac.pdc_desc,
            -- 12.07.2018 Sofia jira siac-6193
            attoammsac.attoamm_oggetto
		from attoammsac
		left outer join sogg on attoammsac.movgest_ts_id=sogg.movgest_ts_id
		left outer join cap on attoammsac.uid = cap.movgest_id
		order by attoammsac.accertamento_anno,
			attoammsac.accertamento_numero
		LIMIT _limit
		OFFSET _offset;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--5 

-- SIAC-5152: DROP FUNZIONE CON TRE (vecchia versione) E QUATTRO (nuova versione) PARAMETRI
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_accertamento_from_soggetto (integer, integer, integer);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_accertamento_from_soggetto (integer, varchar, integer, integer);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_accertamento_from_soggetto (
  _uid_soggetto integer,
  _anno varchar,
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  accertamento_anno integer,
  accertamento_numero numeric,
  accertamento_desc varchar,
  soggetto_code varchar,
  soggetto_desc varchar,
  accertamento_stato_desc varchar,
  importo numeric,
  capitolo_anno varchar,
  capitolo_numero varchar,
  capitolo_articolo varchar,
  ueb_numero varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  pdc_code varchar,
  pdc_desc varchar,
  -- 12.07.2018 Sofia jira siac-6193
  attoamm_oggetto varchar

) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
	rec record;
	v_movgest_ts_id integer;
	v_attoamm_id integer;
BEGIN

	for rec in
		select
			a.elem_id,
			c2.anno,
			a.elem_code,
			a.elem_code2,
			a.elem_code3,
			e.movgest_ts_id,
			c.movgest_anno,
			c.movgest_numero  ,
			c.movgest_desc ,
			f.movgest_ts_det_importo ,
			l.movgest_stato_desc,
			c.movgest_id,
			n.soggetto_code,
			n.soggetto_desc,
			p.classif_code pdc_code,
			p.classif_desc pdc_desc
		from
			siac_t_bil_elem a,
			siac_t_bil b2,
			siac_t_periodo c2,
			siac_r_movgest_bil_elem b,
			siac_t_movgest c,
			siac_d_movgest_tipo d,
			siac_t_movgest_ts e,
			siac_t_movgest_ts_det f,
			siac_d_movgest_ts_tipo g,
			siac_d_movgest_ts_det_tipo h,
			siac_r_movgest_ts_stato i,
			siac_d_movgest_stato l,
			siac_r_movgest_ts_sog m,
			siac_t_soggetto n,
			siac_r_movgest_class o,
			siac_t_class p,
			siac_d_class_tipo q,
			siac_t_bil r,
			siac_t_periodo s
		where a.bil_id=b2.bil_id
		and c2.periodo_id=b2.periodo_id
		and c.movgest_id=b.movgest_id
		and b.elem_id=a.elem_id
		and d.movgest_tipo_id=c.movgest_tipo_id
		and e.movgest_id=c.movgest_id
		and f.movgest_ts_id=e.movgest_ts_id
		and g.movgest_ts_tipo_id=e.movgest_ts_tipo_id
		and h.movgest_ts_det_tipo_id=f.movgest_ts_det_tipo_id
		and i.movgest_ts_id=e.movgest_ts_id
		and l.movgest_stato_id=i.movgest_stato_id
		and m.movgest_ts_id=e.movgest_ts_id
		and n.soggetto_id=m.soggetto_id
		and o.movgest_ts_id=e.movgest_ts_id
		and p.classif_id=o.classif_id
		and q.classif_tipo_id=p.classif_tipo_id
		and r.bil_id = c.bil_id
		and s.periodo_id = r.periodo_id
		and now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now())
		and now() BETWEEN i.validita_inizio and COALESCE(i.validita_fine,now())
		and now() BETWEEN m.validita_inizio and COALESCE(m.validita_fine,now())
		and now() BETWEEN o.validita_inizio and COALESCE(o.validita_fine,now())
		and m.data_cancellazione is null
		and b.data_cancellazione is null
		and c.data_cancellazione is null
		and d.data_cancellazione is null
		and e.data_cancellazione is null
		and f.data_cancellazione is null
		and g.data_cancellazione is null
		and h.data_cancellazione is null
		and i.data_cancellazione is null
		and l.data_cancellazione is null
		and m.data_cancellazione is null
		and n.data_cancellazione is null
		and o.data_cancellazione is null
		and p.data_cancellazione is null
		and q.data_cancellazione is null
		and r.data_cancellazione is null
		and s.data_cancellazione is null
		and d.movgest_tipo_code='A'
		and g.movgest_ts_tipo_code='T'
		and h.movgest_ts_det_tipo_code='A'
		and q.classif_tipo_code in ('PDC_I','PCD_II', 'PDC_III', 'PDC_IV', 'PDC_V')
		and n.soggetto_id=_uid_soggetto
		and s.anno = _anno
		order by
			c.movgest_anno,
			c.movgest_numero
		LIMIT _limit
		OFFSET _offset

		loop

			uid:=rec.movgest_id;
			capitolo_anno:=rec.anno;
			capitolo_numero:=rec.elem_code;
			capitolo_articolo:=rec.elem_code2;
			ueb_numero:=rec.elem_code3;
			v_movgest_ts_id:=rec.movgest_ts_id;
			accertamento_anno:=rec.movgest_anno;
			accertamento_numero:=rec.movgest_numero;
			accertamento_desc:=rec.movgest_desc;
			importo:=rec.movgest_ts_det_importo;
			accertamento_stato_desc:=rec.movgest_stato_desc;
			soggetto_code:=rec.soggetto_code;
			soggetto_desc:=rec.soggetto_desc;
			pdc_code:=rec.pdc_code;
			pdc_desc:=rec.pdc_desc;

			select
				y.soggetto_code,
				y.soggetto_desc
			into
				soggetto_code,
				soggetto_desc
			from
				siac_r_movgest_ts_sog z,
				siac_t_soggetto y
			where z.soggetto_id=y.soggetto_id
			and now() BETWEEN z.validita_inizio
			and COALESCE(z.validita_fine,now())
			and now() BETWEEN z.validita_inizio and COALESCE(z.validita_fine,now())
			and z.data_cancellazione is null
			and y.data_cancellazione is null
			and z.movgest_ts_id=v_movgest_ts_id;

			--classe di soggetti
			if soggetto_code is null then

				select
					l.soggetto_classe_code,
					l.soggetto_classe_desc
				into
					soggetto_code,
					soggetto_desc
				from
					siac_t_soggetto g,
					siac_r_movgest_ts_sogclasse h,
					siac_r_soggetto_classe i,
					siac_d_soggetto_classe l
				where g.soggetto_id=i.soggetto_id
				and h.soggetto_classe_id=l.soggetto_classe_id
				and i.soggetto_classe_id=l.soggetto_classe_id
				and now() between h.validita_inizio and coalesce(h.validita_fine, now())
				and g.data_cancellazione is null
				and h.data_cancellazione is null
				and now() between i.validita_inizio and coalesce(i.validita_fine, now())
				and h.movgest_ts_id=v_movgest_ts_id;
			end if;

			select
				q.attoamm_id,
				q.attoamm_numero,
				q.attoamm_anno,
				t.attoamm_stato_desc,
				r.attoamm_tipo_code,
				r.attoamm_tipo_desc,
                -- 12.07.2018 Sofia jira siac-6193
                q.attoamm_oggetto

			into
				v_attoamm_id,
				attoamm_numero,
				attoamm_anno,
				attoamm_stato_desc,
				attoamm_tipo_code,
				attoamm_tipo_desc,
                -- 12.07.2018 Sofia jira siac-6193
                attoamm_oggetto
			from
				siac_r_movgest_ts_atto_amm p,
				siac_t_atto_amm q,
				siac_d_atto_amm_tipo r,
				siac_r_atto_amm_stato s,
				siac_d_atto_amm_stato t
			where p.attoamm_id=q.attoamm_id
			and now() BETWEEN p.validita_inizio and COALESCE(p.validita_fine,now())
			and r.attoamm_tipo_id=q.attoamm_tipo_id
			and s.attoamm_id=q.attoamm_id
			and t.attoamm_stato_id=s.attoamm_stato_id
			and now() BETWEEN s.validita_inizio and COALESCE(s.validita_fine,now())
			and p.movgest_ts_id=rec.movgest_ts_id
			and p.data_cancellazione is null
			and q.data_cancellazione is null
			and r.data_cancellazione is null
			and s.data_cancellazione is null
			and t.data_cancellazione is null;

			--sac
			select
				y.classif_code,
				y.classif_desc
			into
				attoamm_sac_code,
				attoamm_sac_desc
			from
				siac_r_atto_amm_class z,
				siac_t_class y,
				siac_d_class_tipo x
			where z.classif_id=y.classif_id
			and x.classif_tipo_id=y.classif_tipo_id
			and x.classif_tipo_code  IN ('CDC', 'CDR')
			and now() BETWEEN z.validita_inizio and COALESCE(z.validita_fine,now())
			and z.data_cancellazione is NULL
			and x.data_cancellazione is NULL
			and y.data_cancellazione is NULL
			and z.attoamm_id=v_attoamm_id;

			return next;
		end loop;

	return;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--6
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_impegno_from_capitolospesa_importo (integer,varchar,varchar);

-- _filtro_crp da rinominare: e' il filtro che discrimina COMPETENZA, RESIDUO, PLURIENNALE
CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_impegno_from_capitolospesa_importo (
  _uid_capitolospesa integer,
  _anno varchar,
  _filtro_crp varchar
)
RETURNS numeric AS
$body$
DECLARE
	total numeric;
BEGIN

	SELECT coalesce(sum(f.movgest_ts_det_importo),0) into total
	from
		siac_t_bil_elem a,
		siac_t_bil b2,
		siac_t_periodo c2,
		siac_r_movgest_bil_elem b,
		siac_t_movgest c,
		siac_d_movgest_tipo d,
		siac_t_movgest_ts e,
		siac_t_movgest_ts_det f,
		siac_d_movgest_ts_tipo g,
		siac_d_movgest_ts_det_tipo h,
		siac_r_movgest_ts_stato i,
		siac_d_movgest_stato l,
		siac_r_movgest_class m,
		siac_t_class n,
		siac_d_class_tipo o,
		siac_t_bil p,
		siac_t_periodo q
	where a.bil_id=b2.bil_id
	and c2.periodo_id=b2.periodo_id
	and c.movgest_id=b.movgest_id
	and b.elem_id=a.elem_id
	and d.movgest_tipo_id=c.movgest_tipo_id
	and e.movgest_id=c.movgest_id
	and f.movgest_ts_id=e.movgest_ts_id
	and g.movgest_ts_tipo_id=e.movgest_ts_tipo_id
	and h.movgest_ts_det_tipo_id=f.movgest_ts_det_tipo_id
	and i.movgest_ts_id=e.movgest_ts_id
	and l.movgest_stato_id=i.movgest_stato_id
	and m.movgest_ts_id = e.movgest_ts_id
	and n.classif_id = m.classif_id
	and o.classif_tipo_id = n.classif_tipo_id
	and p.bil_id = c.bil_id
	and q.periodo_id = p.periodo_id
	and now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now())
	and now() BETWEEN i.validita_inizio and COALESCE(i.validita_fine,now())
	and now() BETWEEN m.validita_inizio and COALESCE(m.validita_fine,now())
	and b.data_cancellazione is null
	and c.data_cancellazione is null
	and d.data_cancellazione is null
	and e.data_cancellazione is null
	and f.data_cancellazione is null
	and g.data_cancellazione is null
	and h.data_cancellazione is null
	and i.data_cancellazione is null
	and l.data_cancellazione is null
	and m.data_cancellazione is null
	and n.data_cancellazione is null
	and o.data_cancellazione is null
	and p.data_cancellazione is null
	and q.data_cancellazione is null
	and d.movgest_tipo_code='I'
	and g.movgest_ts_tipo_code='T'
	and h.movgest_ts_det_tipo_code='A'
	and o.classif_tipo_code IN ('PDC_I','PCD_II', 'PDC_III', 'PDC_IV', 'PDC_V')
	and a.elem_id=_uid_capitolospesa
	and q.anno = _anno
    and (case when coalesce(_filtro_crp,'X')='R' then c.movgest_anno<_anno::integer
                     	when coalesce(_filtro_crp,'X')='C' then c.movgest_anno=_anno::integer
                        when coalesce(_filtro_crp,'X')='P' then c.movgest_anno>_anno::integer
		                else true end); -- 02.07.2018 Sofia jira siac-6193

	return total;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

--7

-- SIAC-5152: DROP FUNZIONE CON UNO (vecchia versione) E DUE (nuova versione) PARAMETRI
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_impegno_from_capitolospesa_total (integer);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_impegno_from_capitolospesa_total (integer,varchar);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_impegno_from_capitolospesa_total (integer,varchar,varchar);

-- _filtro_crp da rinominare: e' il filtro che discrimina COMPETENZA, RESIDUO, PLURIENNALE
CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_impegno_from_capitolospesa_total (
  _uid_capitolospesa integer,
  _anno varchar,
  _filtro_crp varchar
)
RETURNS bigint AS
$body$
DECLARE
	total bigint;
BEGIN

	SELECT coalesce(count(*),0) into total
	from
		siac_t_bil_elem a,
		siac_t_bil b2,
		siac_t_periodo c2,
		siac_r_movgest_bil_elem b,
		siac_t_movgest c,
		siac_d_movgest_tipo d,
		siac_t_movgest_ts e,
		siac_t_movgest_ts_det f,
		siac_d_movgest_ts_tipo g,
		siac_d_movgest_ts_det_tipo h,
		siac_r_movgest_ts_stato i,
		siac_d_movgest_stato l,
		siac_r_movgest_class m,
		siac_t_class n,
		siac_d_class_tipo o,
		siac_t_bil p,
		siac_t_periodo q
	where a.bil_id=b2.bil_id
	and c2.periodo_id=b2.periodo_id
	and c.movgest_id=b.movgest_id
	and b.elem_id=a.elem_id
	and d.movgest_tipo_id=c.movgest_tipo_id
	and e.movgest_id=c.movgest_id
	and f.movgest_ts_id=e.movgest_ts_id
	and g.movgest_ts_tipo_id=e.movgest_ts_tipo_id
	and h.movgest_ts_det_tipo_id=f.movgest_ts_det_tipo_id
	and i.movgest_ts_id=e.movgest_ts_id
	and l.movgest_stato_id=i.movgest_stato_id
	and m.movgest_ts_id = e.movgest_ts_id
	and n.classif_id = m.classif_id
	and o.classif_tipo_id = n.classif_tipo_id
	and p.bil_id = c.bil_id
	and q.periodo_id = p.periodo_id
	and now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now())
	and now() BETWEEN i.validita_inizio and COALESCE(i.validita_fine,now())
	and now() BETWEEN m.validita_inizio and COALESCE(m.validita_fine,now())
	and b.data_cancellazione is null
	and c.data_cancellazione is null
	and d.data_cancellazione is null
	and e.data_cancellazione is null
	and f.data_cancellazione is null
	and g.data_cancellazione is null
	and h.data_cancellazione is null
	and i.data_cancellazione is null
	and l.data_cancellazione is null
	and m.data_cancellazione is null
	and n.data_cancellazione is null
	and o.data_cancellazione is null
	and p.data_cancellazione is null
	and q.data_cancellazione is null
	and d.movgest_tipo_code='I'
	and g.movgest_ts_tipo_code='T'
	and h.movgest_ts_det_tipo_code='A'
	and o.classif_tipo_code IN ('PDC_I','PCD_II', 'PDC_III', 'PDC_IV', 'PDC_V')
	and a.elem_id=_uid_capitolospesa
	and q.anno = _anno
    and (case when coalesce(_filtro_crp,'X')='R' then c.movgest_anno<_anno::integer
                     	when coalesce(_filtro_crp,'X')='C' then c.movgest_anno=_anno::integer
                        when coalesce(_filtro_crp,'X')='P' then c.movgest_anno>_anno::integer
		                else true end); -- 02.07.2018 Sofia jira siac-6193

	return total;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

--8

DROP FUNCTION if EXISTS fnc_siac_cons_entita_impegno_from_capitolospesa (integer, integer,integer);

DROP FUNCTION if EXISTS fnc_siac_cons_entita_impegno_from_capitolospesa (integer, varchar, integer,integer);

DROP FUNCTION if EXISTS fnc_siac_cons_entita_impegno_from_capitolospesa (integer, varchar, varchar, integer,integer);

-- _filtro_crp da rinominare: e' il filtro che discrimina COMPETENZA, RESIDUO, PLURIENNALE
CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_impegno_from_capitolospesa (
  _uid_capitolospesa integer,
  _anno varchar,
  _filtro_crp varchar, -- 11.07.2018 Sofia jira SIAC-6193 C,R,P, altro per tutto
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  impegno_anno integer,
  impegno_numero numeric,
  impegno_desc varchar,
  impegno_stato varchar,
  impegno_importo numeric,
  soggetto_code varchar,
  soggetto_desc varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_oggetto varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  pdc_code varchar,
  pdc_desc varchar,
  -- 29.06.2018 Sofia siac-6193
  impegno_anno_capitolo integer,
  impegno_nro_capitolo  integer,
  impegno_nro_articolo  integer,
  impegno_flag_prenotazione varchar,
  impegno_cup varchar,
  impegno_cig varchar,
  impegno_tipo_debito varchar,
  impegno_motivo_assenza_cig varchar
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
BEGIN

	RETURN QUERY
		with imp_sogg_attoamm as (
			with imp_sogg as (
				select distinct
					soggall.uid,
					soggall.movgest_anno,
					soggall.movgest_numero,
					soggall.movgest_desc,
					soggall.movgest_stato_desc,
					soggall.movgest_ts_id,
					soggall.movgest_ts_det_importo,
					case when soggall.zzz_soggetto_code is null then soggall.zzzz_soggetto_code else soggall.zzz_soggetto_code end soggetto_code,
					case when soggall.zzz_soggetto_desc is null then soggall.zzzz_soggetto_desc else soggall.zzz_soggetto_desc end soggetto_desc,
					soggall.pdc_code,
					soggall.pdc_desc,
                    -- 29.06.2018 Sofia jira siac-6193
					soggall.impegno_nro_capitolo,
					soggall.impegno_nro_articolo,
					soggall.impegno_anno_capitolo,
                    soggall.impegno_flag_prenotazione,
                    soggall.impegno_cig,
  					soggall.impegno_cup,
                    soggall.impegno_motivo_assenza_cig,
            		soggall.impegno_tipo_debito
				from (
					with za as (
						select
							zzz.uid,
							zzz.movgest_anno,
							zzz.movgest_numero,
							zzz.movgest_desc,
							zzz.movgest_stato_desc,
							zzz.movgest_ts_id,
							zzz.movgest_ts_det_importo,
							zzz.zzz_soggetto_code,
							zzz.zzz_soggetto_desc,
							zzz.pdc_code,
							zzz.pdc_desc,
                            -- 29.06.2018 Sofia jira siac-6193
                            zzz.impegno_nro_capitolo,
                            zzz.impegno_nro_articolo,
                            zzz.impegno_anno_capitolo,
                            zzz.impegno_flag_prenotazione,
                            zzz.impegno_cig,
  							zzz.impegno_cup,
                            zzz.impegno_motivo_assenza_cig,
            				zzz.impegno_tipo_debito
						from (
							with impegno as (


								select
									a.movgest_id as uid,
									a.movgest_anno,
									a.movgest_numero,
									a.movgest_desc,
									e.movgest_stato_desc,
									c.movgest_ts_id,
									f.movgest_ts_det_importo,
									q.classif_code pdc_code,
									q.classif_desc pdc_desc,
                                    -- 29.06.2018 Sofia jira siac-6193
                                    bilelem.elem_code::integer impegno_nro_capitolo,
                                    bilelem.elem_code2::integer impegno_nro_articolo,
                                    t.anno::integer impegno_anno_capitolo,
                                    c.siope_assenza_motivazione_id,
                                    c.siope_tipo_debito_id
								from
									siac_t_bil_elem bilelem,
									siac_t_movgest a,
									siac_r_movgest_bil_elem b,
									siac_r_movgest_ts_stato d,
									siac_d_movgest_stato e,
									siac_t_movgest_ts_det f,
									siac_d_movgest_ts_tipo j,
									siac_d_movgest_ts_det_tipo k,
									siac_r_movgest_class p,
									siac_t_class q,
									siac_d_class_tipo r,
									siac_t_bil s,
									siac_t_periodo t,
									siac_t_movgest_ts c
								where a.movgest_id=b.movgest_id
								and c.movgest_id=a.movgest_id
								and d.movgest_ts_id=c.movgest_ts_id
								and e.movgest_stato_id=d.movgest_stato_id
								and p.movgest_ts_id = c.movgest_ts_id
								and q.classif_id = p.classif_id
								and r.classif_tipo_id = q.classif_tipo_id
								and j.movgest_ts_tipo_id=c.movgest_ts_tipo_id
								and k.movgest_ts_det_tipo_id=f.movgest_ts_det_tipo_id
								and s.bil_id = a.bil_id
								and t.periodo_id = s.periodo_id
								and now() between d.validita_inizio and coalesce(d.validita_fine, now())
								and now() between b.validita_inizio and coalesce(b.validita_fine, now())
								and now() BETWEEN p.validita_inizio and COALESCE(p.validita_fine,now())
								and f.movgest_ts_id=c.movgest_ts_id
								and a.data_cancellazione is null
								and b.data_cancellazione is null
								and c.data_cancellazione is null
								and d.data_cancellazione is null
								and e.data_cancellazione is null
								and f.data_cancellazione is null
								and p.data_cancellazione is null
								and q.data_cancellazione is null
								and r.data_cancellazione is null
								and s.data_cancellazione is null
								and t.data_cancellazione is null
								and bilelem.data_cancellazione is null
								and e.movgest_stato_code<>'A'
								and j.movgest_ts_tipo_code='T'
								and k.movgest_ts_det_tipo_code='A'
								and r.classif_tipo_code in ('PDC_I','PCD_II', 'PDC_III', 'PDC_IV', 'PDC_V')
								and b.elem_id=bilelem.elem_id
								and bilelem.elem_id=_uid_capitolospesa
                                and t.anno = _anno
							),
							siope_assenza_motivazione as
                            (
								select
									d.siope_assenza_motivazione_id,
									d.siope_assenza_motivazione_code,
									d.siope_assenza_motivazione_desc
								from siac_d_siope_assenza_motivazione d
								where d.data_cancellazione is null
							),
							siope_tipo_debito as
                            (
								select
									d.siope_tipo_debito_id,
									d.siope_tipo_debito_code,
									d.siope_tipo_debito_desc
								from siac_d_siope_tipo_debito d
								where d.data_cancellazione is null
							),
							soggetto as
                            (
								select
									g.soggetto_code,
									g.soggetto_desc,
									h.movgest_ts_id
								from
									siac_t_soggetto g,
									siac_r_movgest_ts_sog h
								where h.soggetto_id=g.soggetto_id
								and now() between h.validita_inizio and coalesce(h.validita_fine, now())
								and g.data_cancellazione is null
								and h.data_cancellazione is null
							),
							impegno_flag_prenotazione as
                            (
								select
									r.movgest_ts_id,
									r.boolean
								from
									siac_r_movgest_ts_attr r,
									siac_t_attr t
								where r.attr_id = t.attr_id
								and now() between r.validita_inizio and coalesce(r.validita_fine, now())
								and r.data_cancellazione is null
								and t.data_cancellazione is null
								and t.attr_code = 'flagPrenotazione'
							),
							impegno_cig as
                            (
								select
									r.movgest_ts_id,
									r.testo
								from
									siac_r_movgest_ts_attr r,
									siac_t_attr t
								where r.attr_id = t.attr_id
								and now() between r.validita_inizio and coalesce(r.validita_fine, now())
								and r.data_cancellazione is null
								and t.data_cancellazione is null
								and t.attr_code = 'cig'
							),
							impegno_cup as
                            (
								select
									r.movgest_ts_id,
									r.testo
								from
									siac_r_movgest_ts_attr r,
									siac_t_attr t
								where r.attr_id = t.attr_id
								and now() between r.validita_inizio and coalesce(r.validita_fine, now())
								and r.data_cancellazione is null
								and t.data_cancellazione is null
								and t.attr_code = 'cup'
							)
							select
								impegno.uid,
								impegno.movgest_anno,
								impegno.movgest_numero,
								impegno.movgest_desc,
								impegno.movgest_stato_desc,
								impegno.movgest_ts_id,
								impegno.movgest_ts_det_importo,
								soggetto.soggetto_code zzz_soggetto_code,
								soggetto.soggetto_desc zzz_soggetto_desc,
								impegno.pdc_code,
								impegno.pdc_desc,
                                -- 29.06.2018 Sofia jira siac-6193
                                impegno.impegno_nro_capitolo,
                                impegno.impegno_nro_articolo,
                                impegno.impegno_anno_capitolo,
                                siope_assenza_motivazione.siope_assenza_motivazione_desc impegno_motivo_assenza_cig,
                                siope_tipo_debito.siope_tipo_debito_desc impegno_tipo_debito,
                                coalesce(impegno_flag_prenotazione.boolean,'N') impegno_flag_prenotazione,
                                impegno_cig.testo  impegno_cig,
                                impegno_cup.testo  impegno_cup
							from impegno
                              left outer join soggetto on impegno.movgest_ts_id=soggetto.movgest_ts_id
                              left outer join impegno_flag_prenotazione on impegno.movgest_ts_id=impegno_flag_prenotazione.movgest_ts_id
                              left outer join impegno_cig on impegno.movgest_ts_id=impegno_cig.movgest_ts_id
                              left outer join impegno_cup on impegno.movgest_ts_id=impegno_cup.movgest_ts_id
                              left outer join siope_assenza_motivazione on impegno.siope_assenza_motivazione_id=siope_assenza_motivazione.siope_assenza_motivazione_id
                              left outer join siope_tipo_debito on impegno.siope_tipo_debito_id=siope_tipo_debito.siope_tipo_debito_id
						) as zzz
					),
					zb as (
						select
							zzzz.uid,
							zzzz.movgest_anno,
							zzzz.movgest_numero,
							zzzz.movgest_desc,
							zzzz.movgest_stato_desc,
							zzzz.movgest_ts_id,
							zzzz.movgest_ts_det_importo,
							zzzz.soggetto_code zzzz_soggetto_code,
							zzzz.soggetto_desc zzzz_soggetto_desc
						from (
							with impegno as (
								select
									a.movgest_id as uid,
									a.movgest_anno,
									a.movgest_numero,
									a.movgest_desc,
									e.movgest_stato_desc,
									c.movgest_ts_id,
									f.movgest_ts_det_importo
								from
									siac_t_movgest a,
									siac_r_movgest_bil_elem b,
									siac_t_movgest_ts c,
									siac_r_movgest_ts_stato d,
									siac_d_movgest_stato e,
									siac_t_movgest_ts_det f,
									siac_d_movgest_ts_tipo j,
									siac_d_movgest_ts_det_tipo k,
									siac_t_bil l,
									siac_t_periodo m
								where a.movgest_id=b.movgest_id
								and c.movgest_id=a.movgest_id
								and d.movgest_ts_id=c.movgest_ts_id
								and e.movgest_stato_id=d.movgest_stato_id
								and j.movgest_ts_tipo_id=c.movgest_ts_tipo_id
								and k.movgest_ts_det_tipo_id=f.movgest_ts_det_tipo_id
								and l.bil_id = a.bil_id
								and m.periodo_id = l.periodo_id
								and now() between d.validita_inizio and coalesce(d.validita_fine, now())
								and now() between b.validita_inizio and coalesce(b.validita_fine, now())
								and f.movgest_ts_id=c.movgest_ts_id
								and a.data_cancellazione is null
								and b.data_cancellazione is null
								and c.data_cancellazione is null
								and d.data_cancellazione is null
								and e.data_cancellazione is null
								and f.data_cancellazione is null
								and e.movgest_stato_code<>'A'
								and j.movgest_ts_tipo_code='T'
								and k.movgest_ts_det_tipo_code='A'
								and b.elem_id=_uid_capitolospesa
								and m.anno = _anno
							),
							soggetto as (
                                select
									l.soggetto_classe_code soggetto_code,
									l.soggetto_classe_desc soggetto_desc,
									h.movgest_ts_id
								from
									siac_r_movgest_ts_sogclasse h,
									siac_d_soggetto_classe l
								where
								    h.soggetto_classe_id=l.soggetto_classe_id
                                and now() between h.validita_inizio and coalesce(h.validita_fine, now())
								and h.data_cancellazione is null
							)
							select
								impegno.uid,
								impegno.movgest_anno,
								impegno.movgest_numero,
								impegno.movgest_desc,
								impegno.movgest_stato_desc,
								impegno.movgest_ts_id,
								impegno.movgest_ts_det_importo,
								soggetto.soggetto_code,
								soggetto.soggetto_desc
							from impegno
							left outer join soggetto on impegno.movgest_ts_id=soggetto.movgest_ts_id
						) as zzzz
					)
					select
						za.*,
						zb.zzzz_soggetto_code,
						zb.zzzz_soggetto_desc
					from za
					left join zb on za.movgest_ts_id=zb.movgest_ts_id
				) soggall
			),
			attoamm as (
				select
					movgest_ts_id,
					n.attoamm_id,
					n.attoamm_numero,
					n.attoamm_anno,
                    --29.06.2018 Sofia jira siac-6193
                    n.attoamm_oggetto,
					q.attoamm_stato_desc,
					o.attoamm_tipo_code,
					o.attoamm_tipo_desc
				from
					siac_r_movgest_ts_atto_amm m,
					siac_t_atto_amm n,
					siac_d_atto_amm_tipo o,
					siac_r_atto_amm_stato p,
					siac_d_atto_amm_stato q
				where n.attoamm_id=m.attoamm_id
				and o.attoamm_tipo_id=n.attoamm_tipo_id
				and p.attoamm_id=n.attoamm_id
				and p.attoamm_stato_id=q.attoamm_stato_id
				and now() BETWEEN m.validita_inizio and coalesce (m.validita_fine,now())
				and now() BETWEEN p.validita_inizio and coalesce (p.validita_fine,now())
				and q.attoamm_stato_code<>'ANNULLATO'
				and m.data_cancellazione is null
				and n.data_cancellazione is null
				and o.data_cancellazione is null
				and p.data_cancellazione is null
				and q.data_cancellazione is null
			)
			select
				imp_sogg.uid,
				imp_sogg.movgest_anno,
				imp_sogg.movgest_numero,
				imp_sogg.movgest_desc,
				imp_sogg.movgest_stato_desc,
				imp_sogg.movgest_ts_det_importo,
				imp_sogg.soggetto_code,
				imp_sogg.soggetto_desc,
				attoamm.attoamm_id,
				attoamm.attoamm_numero,
				attoamm.attoamm_anno,
                -- 29.06.2018 Sofia jira siac-6193
                attoamm.attoamm_oggetto,
				attoamm.attoamm_tipo_code,
				attoamm.attoamm_tipo_desc,
				attoamm.attoamm_stato_desc,
				imp_sogg.pdc_code,
				imp_sogg.pdc_desc,
                -- 29.06.2018 Sofia jira siac-6193
                imp_sogg.impegno_nro_capitolo,
           		imp_sogg.impegno_nro_articolo,
           		imp_sogg.impegno_anno_capitolo,
                imp_sogg.impegno_flag_prenotazione,
                imp_sogg.impegno_cig,
                imp_sogg.impegno_cup,
                imp_sogg.impegno_motivo_assenza_cig,
                imp_sogg.impegno_tipo_debito
			from imp_sogg
			 left outer join attoamm ON imp_sogg.movgest_ts_id=attoamm.movgest_ts_id
            where (case when coalesce(_filtro_crp,'X')='R' then imp_sogg.movgest_anno<_anno::integer
                     	when coalesce(_filtro_crp,'X')='C' then imp_sogg.movgest_anno=_anno::integer
                        when coalesce(_filtro_crp,'X')='P' then imp_sogg.movgest_anno>_anno::integer
		                else true end ) -- 29.06.2018 Sofia jira siac-6193
		),
		sac_attoamm as (
			select
				y.classif_code,
				y.classif_desc,
				z.attoamm_id
			from
				siac_r_atto_amm_class z,
				siac_t_class y,
				siac_d_class_tipo x
			where z.classif_id=y.classif_id
			and x.classif_tipo_id=y.classif_tipo_id
			and now() BETWEEN z.validita_inizio and coalesce (z.validita_fine,now())
			and x.classif_tipo_code  IN ('CDC', 'CDR')
			and z.data_cancellazione is NULL
			and x.data_cancellazione is NULL
			and y.data_cancellazione is NULL
		)
		select
			imp_sogg_attoamm.uid,
			imp_sogg_attoamm.movgest_anno as impegno_anno,
			imp_sogg_attoamm.movgest_numero as impegno_numero,
			imp_sogg_attoamm.movgest_desc as impegno_desc,
			imp_sogg_attoamm.movgest_stato_desc as impegno_stato,
			imp_sogg_attoamm.movgest_ts_det_importo as impegno_importo,
			imp_sogg_attoamm.soggetto_code,
			imp_sogg_attoamm.soggetto_desc,
			imp_sogg_attoamm.attoamm_numero,
			imp_sogg_attoamm.attoamm_anno,
            -- 29.06.2018 Sofia jira siac-6193
            imp_sogg_attoamm.attoamm_oggetto,
			imp_sogg_attoamm.attoamm_tipo_code,
			imp_sogg_attoamm.attoamm_tipo_desc,
			imp_sogg_attoamm.attoamm_stato_desc,
			sac_attoamm.classif_code as attoamm_sac_code,
			sac_attoamm.classif_desc as attoamm_sac_desc,
			imp_sogg_attoamm.pdc_code,
			imp_sogg_attoamm.pdc_desc,
            -- 29.06.2018 Sofia jira siac-6193
            imp_sogg_attoamm.impegno_anno_capitolo,
            imp_sogg_attoamm.impegno_nro_capitolo,
            imp_sogg_attoamm.impegno_nro_articolo,
            imp_sogg_attoamm.impegno_flag_prenotazione::varchar,
			imp_sogg_attoamm.impegno_cup,
            imp_sogg_attoamm.impegno_cig,
            imp_sogg_attoamm.impegno_tipo_debito,
            imp_sogg_attoamm.impegno_motivo_assenza_cig
		from imp_sogg_attoamm
		left outer join sac_attoamm on imp_sogg_attoamm.attoamm_id=sac_attoamm.attoamm_id
		order by
			imp_sogg_attoamm.movgest_anno,
			imp_sogg_attoamm.movgest_numero
		LIMIT _limit
		OFFSET _offset;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--9

DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_impegno_from_provvedimento (integer, integer, integer);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_impegno_from_provvedimento (integer, varchar, integer, integer);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_impegno_from_provvedimento (
  _uid_provvedimento integer,
  _anno varchar,
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  impegno_anno integer,
  impegno_numero numeric,
  impegno_desc varchar,
  impegno_stato varchar,
  impegno_importo numeric,
  soggetto_code varchar,
  soggetto_desc varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_oggetto varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  pdc_code varchar,
  pdc_desc varchar,
  -- 26.06.2018 Sofia siac-6193
  impegno_anno_capitolo integer,
  impegno_nro_capitolo  integer,
  impegno_nro_articolo  integer,
  impegno_flag_prenotazione varchar,
  impegno_cup varchar,
  impegno_cig varchar,
  impegno_tipo_debito varchar,
  impegno_motivo_assenza_cig varchar
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
BEGIN

	RETURN QUERY
		with attoammsac as (
			with attoamm as (
				select
					g.movgest_id uid,
					g.movgest_anno  impegno_anno,
					g.movgest_numero impegno_numero,
					g.movgest_desc impegno_desc,
					m.movgest_stato_desc impegno_stato,
					n.movgest_ts_det_importo impegno_importo,
					a.attoamm_numero,
					a.attoamm_anno,
                    a.attoamm_oggetto,
					b.attoamm_tipo_code,
					b.attoamm_tipo_desc,
					d.attoamm_stato_desc,
					f.movgest_ts_id,
					a.attoamm_id,
					q.classif_code pdc_code,
					q.classif_desc pdc_desc,
                    f.siope_tipo_debito_id, -- 26.06.2018 Sofia siac-6193
                    f.siope_assenza_motivazione_id -- 26.06.2018 Sofia siac-6193
				from

					siac_t_atto_amm a,
					siac_d_atto_amm_tipo b,
					siac_r_atto_amm_stato c,
					siac_d_atto_amm_stato d,
					siac_r_movgest_ts_atto_amm e,
                    siac_t_bil_elem bilelem,
                    siac_r_movgest_bil_elem rmovgestbilelem,
					siac_t_movgest g,
					siac_d_movgest_tipo h,
					siac_d_movgest_ts_tipo i,
					siac_r_movgest_ts_stato l,
					siac_d_movgest_stato m,
					siac_t_movgest_ts_det n,
					siac_d_movgest_ts_det_tipo o,
					siac_r_movgest_class p,
					siac_t_class q,
					siac_d_class_tipo r,
					siac_t_bil s,
					siac_t_periodo t,
                    siac_t_movgest_ts f
				where b.attoamm_tipo_id=a.attoamm_tipo_id
				and c.attoamm_id=a.attoamm_id
				and d.attoamm_stato_id=c.attoamm_stato_id
				and e.attoamm_id=a.attoamm_id
				and f.movgest_ts_id=e.movgest_ts_id
				and g.movgest_id=f.movgest_id

                and bilelem.elem_id = rmovgestbilelem.elem_id
                and rmovgestbilelem.movgest_id = g.movgest_id
				and rmovgestbilelem.data_cancellazione is null
                and bilelem.data_cancellazione is null

				and h.movgest_tipo_id=g.movgest_tipo_id
				and i.movgest_ts_tipo_id=f.movgest_ts_tipo_id
				and l.movgest_ts_id=f.movgest_ts_id
				and l.movgest_stato_id=m.movgest_stato_id
				and n.movgest_ts_id=f.movgest_ts_id
				and o.movgest_ts_det_tipo_id=n.movgest_ts_det_tipo_id
				and p.movgest_ts_id = f.movgest_ts_id
				and q.classif_id = p.classif_id
				and r.classif_tipo_id = q.classif_tipo_id
				and s.bil_id = g.bil_id
				and t.periodo_id = s.periodo_id

				and now() BETWEEN c.validita_inizio and COALESCE(c.validita_fine,now())
				and now() BETWEEN e.validita_inizio and COALESCE(e.validita_fine,now())
				and now() BETWEEN l.validita_inizio and COALESCE(l.validita_fine,now())
				and now() BETWEEN p.validita_inizio and COALESCE(p.validita_fine,now())
				and a.data_cancellazione is null
				and b.data_cancellazione is null
				and c.data_cancellazione is null
				and d.data_cancellazione is null
				and e.data_cancellazione is null
				and f.data_cancellazione is null
				and g.data_cancellazione is null
				and h.data_cancellazione is null
				and i.data_cancellazione is null
				and l.data_cancellazione is null
				and m.data_cancellazione is null
				and n.data_cancellazione is null
				and o.data_cancellazione is null
				and p.data_cancellazione is null
				and q.data_cancellazione is null
				and r.data_cancellazione is null
				and s.data_cancellazione is null
				and t.data_cancellazione is null
				and a.attoamm_id=_uid_provvedimento
				and h.movgest_tipo_code='I'
				and i.movgest_ts_tipo_code='T'
				and o.movgest_ts_det_tipo_code='A'
				and r.classif_tipo_code in ('PDC_I','PCD_II', 'PDC_III', 'PDC_IV', 'PDC_V')
				and t.anno = _anno
			),
			sac as (
				select
					f.attoamm_id,
					g.classif_code,
					g.classif_desc
				from
					siac_r_atto_amm_class f,
					siac_t_class g,
					siac_d_class_tipo h
				where f.classif_id=g.classif_id
				and h.classif_tipo_id=g.classif_tipo_id
				and h.classif_tipo_code in ('CDR','CDC')
				and now() BETWEEN f.validita_inizio and COALESCE(f.validita_fine,now())
				and f.data_cancellazione is null
				and g.data_cancellazione is null
				and h.data_cancellazione is null
			)
			select
				attoamm.uid,
				attoamm.impegno_anno,
				attoamm.impegno_numero,
				attoamm.impegno_desc,
				attoamm.impegno_stato,
				attoamm.impegno_importo,
				attoamm.attoamm_numero,
				attoamm.attoamm_anno,
				attoamm.attoamm_oggetto,
				attoamm.attoamm_tipo_code,
				attoamm.attoamm_tipo_desc,
				attoamm.attoamm_stato_desc,
				attoamm.movgest_ts_id,
				sac.classif_code attoamm_sac_code,
				sac.classif_desc attoamm_sac_desc,
				attoamm.pdc_code pdc_code,
				attoamm.pdc_desc pdc_desc,
                attoamm.siope_tipo_debito_id, -- 26.06.2018 Sofia siac-6193
                attoamm.siope_assenza_motivazione_id -- 26.06.2018 Sofia siac-6193
			from attoamm
			left outer join sac on attoamm.attoamm_id=sac.attoamm_id
		),
		sogg as (
			select
				z.movgest_ts_id,
				y.soggetto_code,
				y.soggetto_desc
			from
				siac_r_movgest_ts_sog z,
				siac_t_soggetto y
			where z.soggetto_id=y.soggetto_id
			and now() BETWEEN z.validita_inizio and coalesce (z.validita_fine,now())
			and z.data_cancellazione is null
			and y.data_cancellazione is null
		),
    -- 26.06.2018 Sofia siac-6193
    capitolo as
    (
    select r.movgest_id,
           e.elem_code::integer nro_capitolo,
           e.elem_code2::integer nro_articolo,
           per.anno::integer anno_capitolo
    from siac_t_bil_elem e, siac_d_bil_elem_tipo tipo,siac_r_movgest_bil_elem r,
         siac_t_bil bil, siac_t_periodo per
    where tipo.elem_tipo_code='CAP-UG'
    and   e.elem_tipo_id=tipo.elem_tipo_id
    and   r.elem_id=e.elem_id
    and   bil.bil_id=e.bil_id
    and   per.periodo_id=bil.periodo_id
    and   e.data_cancellazione is null
    and   now() BETWEEN e.validita_inizio and COALESCE(e.validita_fine,now())
    and   r.data_cancellazione is null
    and   now() BETWEEN r.validita_inizio and COALESCE(r.validita_fine,now())
    ),
    -- 26.06.2018 Sofia siac-6193
    flagPrenotazione as
    (
    select rattr.movgest_ts_id,
           rattr.boolean
    from siac_r_movgest_ts_attr rattr, siac_t_attr attr
    where attr.attr_code='flagPrenotazione'
    and   rattr.attr_id=attr.attr_id
    and   rattr.data_cancellazione is null
    and   now() BETWEEN rattr.validita_inizio and COALESCE(rattr.validita_fine,now())
    ),
    cup as
    (
    select rattr.movgest_ts_id,
           rattr.testo
    from siac_r_movgest_ts_attr rattr, siac_t_attr attr
    where attr.attr_code='cup'
    and   rattr.attr_id=attr.attr_id
    and   rattr.data_cancellazione is null
    and   now() BETWEEN rattr.validita_inizio and COALESCE(rattr.validita_fine,now())
    ),
    cig as
    (
    select rattr.movgest_ts_id,
           rattr.testo
    from siac_r_movgest_ts_attr rattr, siac_t_attr attr
    where attr.attr_code='cig'
    and   rattr.attr_id=attr.attr_id
    and   rattr.data_cancellazione is null
    and   now() BETWEEN rattr.validita_inizio and COALESCE(rattr.validita_fine,now())
    )
	select
			attoammsac.uid,
			attoammsac.impegno_anno,
			attoammsac.impegno_numero,
			attoammsac.impegno_desc,
			attoammsac.impegno_stato,
			attoammsac.impegno_importo,
			sogg.soggetto_code,
			sogg.soggetto_desc,
			attoammsac.attoamm_numero,
			attoammsac.attoamm_anno,
			attoammsac.attoamm_oggetto,
			attoammsac.attoamm_tipo_code,
			attoammsac.attoamm_tipo_desc,
			attoammsac.attoamm_stato_desc,
			attoammsac.attoamm_sac_code,
			attoammsac.attoamm_sac_desc,
			attoammsac.pdc_code pdc_code,
			attoammsac.pdc_desc pdc_desc,
            -- 26.06.2018 Sofia siac-6193
		    capitolo.anno_capitolo impegno_anno_capitolo,
            capitolo.nro_capitolo  impegno_nro_capitolo,
            capitolo.nro_articolo  impegno_nro_articolo,
            coalesce(flagPrenotazione.boolean,'N')::varchar impegno_flag_prenotazione,
            coalesce(cup.testo,' ') impegno_cup,
            coalesce(cig.testo,' ') impegno_cig,
            coalesce(deb.siope_tipo_debito_desc,' ') impegno_tipo_debito,
            coalesce(ass.siope_assenza_motivazione_desc,' ') impegno_motivo_assenza_cig

		from attoammsac
		left outer join sogg on attoammsac.movgest_ts_id=sogg.movgest_ts_id
        -- 26.06.2018 Sofia siac-6193
        left outer join capitolo on attoammsac.uid=capitolo.movgest_id
        left outer join flagPrenotazione on attoammsac.movgest_ts_id = flagPrenotazione.movgest_ts_id
        left outer join cup  on attoammsac.movgest_ts_id = cup.movgest_ts_id
        left outer join cig  on attoammsac.movgest_ts_id = cig.movgest_ts_id
        left outer join siac_d_siope_assenza_motivazione ass on attoammsac.siope_assenza_motivazione_id=ass.siope_assenza_motivazione_id
        left outer join siac_d_siope_tipo_debito deb on attoammsac.siope_tipo_debito_id=deb.siope_tipo_debito_id

		order by
			attoammsac.impegno_anno,
			attoammsac.impegno_numero
		LIMIT _limit
		OFFSET _offset;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;


--10

-- SIAC-5152: DROP FUNZIONE CON TRE (vecchia versione) E QUATTRO (nuova versione) PARAMETRI
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_impegno_from_soggetto (integer, integer, integer);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_impegno_from_soggetto (integer, varchar, integer, integer);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_impegno_from_soggetto (
  _uid_soggetto integer,
  _anno varchar,
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  impegno_anno integer,
  impegno_numero numeric,
  impegno_desc varchar,
  impegno_stato varchar,
  impegno_importo numeric,
  soggetto_code varchar,
  soggetto_desc varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  pdc_code varchar,
  pdc_desc varchar,
  -- 26.06.2018 Sofia siac-6193
  impegno_anno_capitolo integer,
  impegno_nro_capitolo  integer,
  impegno_nro_articolo  integer,
  impegno_flag_prenotazione varchar,
  impegno_cup varchar,
  impegno_cig varchar,
  impegno_tipo_debito varchar,
  impegno_motivo_assenza_cig varchar,
  attoamm_desc varchar
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
BEGIN

	RETURN QUERY
	with attoammsac as (
		with attoamm as (
			select
				a.attoamm_numero,
				a.attoamm_anno,
                a.attoamm_oggetto attoamm_desc, -- 26.06.2018 Sofia siac-6193
				b.attoamm_tipo_code,
				b.attoamm_tipo_desc,
				d.attoamm_stato_desc,
				e.movgest_ts_id,
				a.attoamm_id
			from
				siac_t_atto_amm a,
				siac_d_atto_amm_tipo b,
				siac_r_atto_amm_stato c,
				siac_d_atto_amm_stato d,
				siac_r_movgest_ts_atto_amm e
			where b.attoamm_tipo_id=a.attoamm_tipo_id
			and c.attoamm_id=a.attoamm_id
			and d.attoamm_stato_id=c.attoamm_stato_id
			and now() BETWEEN c.validita_inizio and COALESCE(c.validita_fine,now())
			and e.attoamm_id=a.attoamm_id
			and now() BETWEEN e.validita_inizio and COALESCE(e.validita_fine,now())
			and a.data_cancellazione is null
			and b.data_cancellazione is null
			and c.data_cancellazione is null
			and d.data_cancellazione is null
			and e.data_cancellazione is null
		),
		sac as (
			select
				f.attoamm_id,
				g.classif_code,
				g.classif_desc
			from
				siac_r_atto_amm_class f,
				siac_t_class g,
				siac_d_class_tipo h
			where f.classif_id=g.classif_id
			and h.classif_tipo_id=g.classif_tipo_id
			and h.classif_tipo_code in ('CDR','CDC')
			and now() BETWEEN f.validita_inizio and COALESCE(f.validita_fine,now())
			and f.data_cancellazione is null
			and g.data_cancellazione is null
			and h.data_cancellazione is null
		)
		select
			attoamm.attoamm_numero,
			attoamm.attoamm_anno,
            attoamm.attoamm_desc, -- 26.06.2018 Sofia siac-6193
			attoamm.attoamm_tipo_code,
			attoamm.attoamm_tipo_desc,
			attoamm.attoamm_stato_desc,
			attoamm.movgest_ts_id,
			sac.classif_code attoamm_sac_code,
			sac.classif_desc attoamm_sac_desc
		from attoamm
		left outer join sac on attoamm.attoamm_id=sac.attoamm_id
	),
	sogg as (
		select
			g.movgest_id uid,
			g.movgest_anno  impegno_anno,
			g.movgest_numero impegno_numero,
			g.movgest_desc impegno_desc,
			m.movgest_stato_desc impegno_stato,
			n.movgest_ts_det_importo impegno_importo,
			z.movgest_ts_id,
			y.soggetto_code,
			y.soggetto_desc,
			b.classif_code pdc_code,
			b.classif_desc pdc_desc,
            f.siope_tipo_debito_id,
            f.siope_assenza_motivazione_id
		from
			siac_r_movgest_ts_sog z,
			siac_t_soggetto y,
			siac_t_movgest_ts f,
			siac_t_movgest g,
			siac_d_movgest_tipo h,
			siac_d_movgest_ts_tipo i,
			siac_r_movgest_ts_stato l,
			siac_d_movgest_stato m,
			siac_t_movgest_ts_det n,
			siac_d_movgest_ts_det_tipo o,
			siac_r_movgest_class a,
			siac_t_class b,
			siac_d_class_tipo c,
			siac_t_bil d,
			siac_t_periodo e
		where z.soggetto_id=y.soggetto_id
		and z.movgest_ts_id=f.movgest_ts_id
		and g.movgest_id=f.movgest_id
		and h.movgest_tipo_id=g.movgest_tipo_id
		and i.movgest_ts_tipo_id=f.movgest_ts_tipo_id
		and l.movgest_ts_id=f.movgest_ts_id
		and l.movgest_stato_id=m.movgest_stato_id
		and a.movgest_ts_id = f.movgest_ts_id
		and b.classif_id = a.classif_id
		and c.classif_tipo_id = b.classif_tipo_id
		and n.movgest_ts_id=f.movgest_ts_id
		and o.movgest_ts_det_tipo_id=n.movgest_ts_det_tipo_id
		and d.bil_id = g.bil_id
		and e.periodo_id = d.periodo_id
		and now() BETWEEN l.validita_inizio and COALESCE(l.validita_fine,now())
		and now() BETWEEN z.validita_inizio and COALESCE(z.validita_fine,now())
		and now() BETWEEN a.validita_inizio and COALESCE(a.validita_fine,now())
		and f.data_cancellazione is null
		and g.data_cancellazione is null
		and h.data_cancellazione is null
		and i.data_cancellazione is null
		and l.data_cancellazione is null
		and m.data_cancellazione is null
		and n.data_cancellazione is null
		and o.data_cancellazione is null
		and z.data_cancellazione is null
		and y.data_cancellazione is null
		and a.data_cancellazione is null
		and b.data_cancellazione is null
		and c.data_cancellazione is null
		and o.movgest_ts_det_tipo_code='A'
		and h.movgest_tipo_code='I'
		and i.movgest_ts_tipo_code='T'
		and c.classif_tipo_code in ('PDC_I','PCD_II', 'PDC_III', 'PDC_IV', 'PDC_V')
		and y.soggetto_id=_uid_soggetto
		and e.anno = _anno
	),
    -- 26.06.2018 Sofia siac-6193
    capitolo as
    (
    select r.movgest_id,
           e.elem_code::integer nro_capitolo,
           e.elem_code2::integer nro_articolo,
           per.anno::integer anno_capitolo
    from siac_t_bil_elem e, siac_d_bil_elem_tipo tipo,siac_r_movgest_bil_elem r,
         siac_t_bil bil, siac_t_periodo per
    where tipo.elem_tipo_code='CAP-UG'
    and   e.elem_tipo_id=tipo.elem_tipo_id
    and   r.elem_id=e.elem_id
    and   bil.bil_id=e.bil_id
    and   per.periodo_id=bil.periodo_id
    and   e.data_cancellazione is null
    and   now() BETWEEN e.validita_inizio and COALESCE(e.validita_fine,now())
    and   r.data_cancellazione is null
    and   now() BETWEEN r.validita_inizio and COALESCE(r.validita_fine,now())
    ),
    -- 26.06.2018 Sofia siac-6193
    flagPrenotazione as
    (
    select rattr.movgest_ts_id,
           rattr.boolean
    from siac_r_movgest_ts_attr rattr, siac_t_attr attr
    where attr.attr_code='flagPrenotazione'
    and   rattr.attr_id=attr.attr_id
    and   rattr.data_cancellazione is null
    and   now() BETWEEN rattr.validita_inizio and COALESCE(rattr.validita_fine,now())
    ),
    cup as
    (
    select rattr.movgest_ts_id,
           rattr.testo
    from siac_r_movgest_ts_attr rattr, siac_t_attr attr
    where attr.attr_code='cup'
    and   rattr.attr_id=attr.attr_id
    and   rattr.data_cancellazione is null
    and   now() BETWEEN rattr.validita_inizio and COALESCE(rattr.validita_fine,now())
    ),
    cig as
    (
    select rattr.movgest_ts_id,
           rattr.testo
    from siac_r_movgest_ts_attr rattr, siac_t_attr attr
    where attr.attr_code='cig'
    and   rattr.attr_id=attr.attr_id
    and   rattr.data_cancellazione is null
    and   now() BETWEEN rattr.validita_inizio and COALESCE(rattr.validita_fine,now())
    )
	select
		sogg.uid,
		sogg.impegno_anno,
		sogg.impegno_numero,
		sogg.impegno_desc,
		sogg.impegno_stato,
		sogg.impegno_importo,
		sogg.soggetto_code,
		sogg.soggetto_desc,
		attoammsac.attoamm_numero,
		attoammsac.attoamm_anno,
		attoammsac.attoamm_tipo_code,
		attoammsac.attoamm_tipo_desc,
		attoammsac.attoamm_stato_desc,
		attoammsac.attoamm_sac_code,
		attoammsac.attoamm_sac_desc,
		sogg.pdc_code,
		sogg.pdc_desc,
        -- 26.06.2018 Sofia siac-6193
        capitolo.anno_capitolo impegno_anno_capitolo,
        capitolo.nro_capitolo  impegno_nro_capitolo,
        capitolo.nro_articolo  impegno_nro_articolo,
        coalesce(flagPrenotazione.boolean,'N')::varchar impegno_flag_prenotazione,
        coalesce(cup.testo,' ') impegno_cup,
        coalesce(cig.testo,' ') impegno_cig,
        coalesce(deb.siope_tipo_debito_desc,' ') impegno_tipo_debito,
        coalesce(ass.siope_assenza_motivazione_desc,' ') impegno_motivo_assenza_cig,
        attoammsac.attoamm_desc
   from
         sogg
	     left outer join attoammsac on attoammsac.movgest_ts_id=sogg.movgest_ts_id
          -- 26.06.2018 Sofia siac-6193
         left outer join capitolo on  sogg.uid=capitolo.movgest_id
         left outer join flagPrenotazione on sogg.movgest_ts_id=flagPrenotazione.movgest_ts_id
         left outer join cup on sogg.movgest_ts_id=cup.movgest_ts_id
         left outer join cig on sogg.movgest_ts_id=cig.movgest_ts_id
         left outer join siac_d_siope_assenza_motivazione ass on sogg.siope_assenza_motivazione_id=ass.siope_assenza_motivazione_id
         left outer join siac_d_siope_tipo_debito deb on sogg.siope_tipo_debito_id=deb.siope_tipo_debito_id
	order by
		sogg.impegno_anno,
		sogg.impegno_numero
	LIMIT _limit
	OFFSET _offset;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--11

-- SIAC-5152: DROP FUNZIONE CON UNO (vecchia versione) E DUE (nuova versione) PARAMETRI
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_liquidazione_from_capitolospesa_importo (integer);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_liquidazione_from_capitolospesa_importo (integer,varchar);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_liquidazione_from_capitolospesa_importo (integer,varchar,varchar);
CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_liquidazione_from_capitolospesa_importo (
  _capitolo_spesa_id integer,
  _anno varchar,
  _filtro_crp varchar  -- 29.06.2018 Sofia jira siac-6193 C,R,altro per tutto

)
RETURNS numeric AS
$body$
DECLARE
	total numeric;
BEGIN

	SELECT
	coalesce(sum(liq_imp.liq_importo),0) into total
	from (
		select
			a.liq_importo
		from
			siac_t_liquidazione a,
			siac_r_liquidazione_movgest b,
			siac_t_movgest_ts c,
			siac_t_movgest d,
			siac_r_movgest_bil_elem e,
			siac_t_bil_elem f,
			siac_t_bil g,
			siac_t_periodo h,
			siac_r_liquidazione_soggetto i,
			siac_t_soggetto l,
			siac_r_liquidazione_atto_amm m,
			siac_t_atto_amm n,
			siac_d_atto_amm_tipo o,
			siac_r_atto_amm_stato p,
			siac_d_atto_amm_stato q,
			siac_r_liquidazione_stato r,
			siac_d_liquidazione_stato s
		where a.liq_id=b.liq_id
		and c.movgest_ts_id=b.movgest_ts_id
		and d.movgest_id=c.movgest_id
        and (case when coalesce(_filtro_crp,'X')='R' then d.movgest_anno<_anno::integer
                  when coalesce(_filtro_crp,'X')='C' then d.movgest_anno=_anno::integer
                  else true end ) -- 29.06.2018 Sofia jira siac-6193
		and e.movgest_id=d.movgest_id
		and f.elem_id=e.elem_id
		and g.bil_id=f.bil_id
		and h.periodo_id=g.periodo_id
		and i.liq_id=a.liq_id
		and l.soggetto_id=i.soggetto_id
		and m.liq_id=a.liq_id
		and n.attoamm_id=m.attoamm_id
		and o.attoamm_tipo_id=n.attoamm_tipo_id
		and p.attoamm_id=n.attoamm_id
		and p.attoamm_stato_id=q.attoamm_stato_id
		and r.liq_id=a.liq_id
		and r.liq_stato_id=s.liq_stato_id
		and now() BETWEEN b.validita_inizio and coalesce (b.validita_fine,now())
		and now() BETWEEN e.validita_inizio and coalesce (e.validita_fine,now())
		and now() BETWEEN i.validita_inizio and coalesce (i.validita_fine,now())
		and now() BETWEEN m.validita_inizio and coalesce (m.validita_fine,now())
		and now() BETWEEN p.validita_inizio and coalesce (p.validita_fine,now())
		and now() BETWEEN r.validita_inizio and coalesce (r.validita_fine,now())
		and a.data_cancellazione is null
		and b.data_cancellazione is null
		and c.data_cancellazione is null
		and d.data_cancellazione is null
		and e.data_cancellazione is null
		and f.data_cancellazione is null
		and g.data_cancellazione is null
		and h.data_cancellazione is null
		and i.data_cancellazione is null
		and l.data_cancellazione is null
		and m.data_cancellazione is null
		and n.data_cancellazione is null
		and o.data_cancellazione is null
		and p.data_cancellazione is null
		and q.data_cancellazione is null
		and r.data_cancellazione is null
		and s.data_cancellazione is null
		and q.attoamm_stato_code<>'ANNULLATO'
		AND f.elem_id = _capitolo_spesa_id
		AND h.anno = _anno
	) as liq_imp;

	return total;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

--12

-- SIAC-5152: DROP FUNZIONE CON UNO (vecchia versione) E DUE (nuova versione) PARAMETRI
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_liquidazione_from_capitolospesa_total (integer);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_liquidazione_from_capitolospesa_total (integer,varchar);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_liquidazione_from_capitolospesa_total (integer,varchar,varchar);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_liquidazione_from_capitolospesa_total (
  _capitolo_spesa_id integer,
  _anno varchar,
  _filtro_crp varchar  -- 29.06.2018 Sofia jira siac-6193 C,R,altro per tutto

)
RETURNS bigint AS
$body$
DECLARE
	total bigint;
BEGIN

	SELECT
	coalesce(count(*),0) into total
	from (
		select
			a.liq_id
		from
			siac_t_liquidazione a,
			siac_r_liquidazione_movgest b,
			siac_t_movgest_ts c,
			siac_t_movgest d,
			siac_r_movgest_bil_elem e,
			siac_t_bil_elem f,
			siac_t_bil g,
			siac_t_periodo h,
			siac_r_liquidazione_soggetto i,
			siac_t_soggetto l,
			siac_r_liquidazione_atto_amm m,
			siac_t_atto_amm n,
			siac_d_atto_amm_tipo o,
			siac_r_atto_amm_stato p,
			siac_d_atto_amm_stato q,
			siac_r_liquidazione_stato r,
			siac_d_liquidazione_stato s
		where a.liq_id=b.liq_id
		and c.movgest_ts_id=b.movgest_ts_id
		and d.movgest_id=c.movgest_id
        and (case when coalesce(_filtro_crp,'X')='R' then d.movgest_anno<_anno::integer
                  when coalesce(_filtro_crp,'X')='C' then d.movgest_anno=_anno::integer
                  else true end ) -- 29.06.2018 Sofia jira siac-6193
		and e.movgest_id=d.movgest_id
		and f.elem_id=e.elem_id
		and g.bil_id=f.bil_id
		and h.periodo_id=g.periodo_id
		and i.liq_id=a.liq_id
		and l.soggetto_id=i.soggetto_id
		and m.liq_id=a.liq_id
		and n.attoamm_id=m.attoamm_id
		and o.attoamm_tipo_id=n.attoamm_tipo_id
		and p.attoamm_id=n.attoamm_id
		and p.attoamm_stato_id=q.attoamm_stato_id
		and r.liq_id=a.liq_id
		and r.liq_stato_id=s.liq_stato_id
		and now() BETWEEN b.validita_inizio and coalesce (b.validita_fine,now())
		and now() BETWEEN e.validita_inizio and coalesce (e.validita_fine,now())
		and now() BETWEEN i.validita_inizio and coalesce (i.validita_fine,now())
		and now() BETWEEN m.validita_inizio and coalesce (m.validita_fine,now())
		and now() BETWEEN p.validita_inizio and coalesce (p.validita_fine,now())
		and now() BETWEEN r.validita_inizio and coalesce (r.validita_fine,now())
		and a.data_cancellazione is null
		and b.data_cancellazione is null
		and c.data_cancellazione is null
		and d.data_cancellazione is null
		and e.data_cancellazione is null
		and f.data_cancellazione is null
		and g.data_cancellazione is null
		and h.data_cancellazione is null
		and i.data_cancellazione is null
		and l.data_cancellazione is null
		and m.data_cancellazione is null
		and n.data_cancellazione is null
		and o.data_cancellazione is null
		and p.data_cancellazione is null
		and q.data_cancellazione is null
		and r.data_cancellazione is null
		and s.data_cancellazione is null
		and q.attoamm_stato_code<>'ANNULLATO'
		AND f.elem_id = _capitolo_spesa_id
		AND h.anno = _anno
	) as liq_id;

	return total;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

--13

DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_liquidazione_from_capitolospesa (integer, integer, integer);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_liquidazione_from_capitolospesa (integer, varchar, integer, integer);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_liquidazione_from_capitolospesa (integer, varchar,varchar, integer, integer);


CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_liquidazione_from_capitolospesa (
  _capitolo_spesa_id integer,
  _anno varchar,
  _filtro_crp varchar, -- 29.06.2018 Sofia jira siac-6193 C,R,altro per tutto
  _limit integer,
  _page integer
)
RETURNS TABLE (
    uid integer,
    liq_anno integer,
    liq_numero numeric,
    liq_desc varchar,
    liq_stato varchar,
    uid_capitolo integer,
    capitolo_anno varchar,
    capitolo_numero varchar,
    capitolo_articolo varchar,
    ueb_num varchar,
    movgest_anno integer,
    movgest_numero numeric,
    movgest_ts_code varchar,
    liq_importo numeric,
    soggetto_code varchar,
    soggetto_desc varchar,
    attoamm_numero integer,
    attoamm_anno varchar,
    attoamm_oggetto varchar,
    attoamm_tipo_code varchar,
    attoamm_tipo_desc varchar,
    attoamm_stato_desc varchar,
    attoamm_sac_code varchar,
    attoamm_sac_desc varchar,
    ord_anno integer,
    ord_numero numeric,
    ord_stato_code varchar,
    ord_stato_desc varchar,
    -- 28.06.2018 Sofia siac-6193
    -- Il codice fiscale e la partita Iva del soggetto
    sog_codice_fiscale varchar,
    sog_partita_iva varchar,
    -- Soggetto avente carte contabili
    carte_contabili varchar,
    -- Data creazione dell atto contabile
    attoal_data_creazione timestamp,
    -- Data di scadenza dell atto contabile
    attoal_data_scadenza timestamp,
    -- Stato dell atto contabile
    attoal_stato_desc varchar,
    -- MDP - non cessione
    accredito_tipo_code varchar,
    accredito_tipo_desc varchar,
    iban VARCHAR,
    bic varchar,
    contocorrente varchar,
    contocorrente_intestazione varchar,
    banca_denominazione varchar,
    quietanzante varchar,
    quietanzante_codice_fiscale varchar,
    -- Estremi soggetto cessione
    soggetto_cessione_code varchar,
    soggetto_cessione_desc varchar,
    -- Relazione soggetti CSI, CSC
    relaz_tipo_code   varchar,
    relaz_tipo_desc   varchar,
    -- MDP - in caso di cessione dati MDP di cessione
	accredito_tipo_code_cess varchar,
    accredito_tipo_desc_cess varchar,
    iban_cess VARCHAR,
    bic_cess varchar,
    contocorrente_cess varchar,
    contocorrente_intestazione_cess varchar,
    banca_denominazione_cess varchar,
    quietanzante_cess varchar,
    quietanzante_codice_fiscale_cess varchar,
  	-- Indicazione se la liquidazione presenta split/ritenute - collegamento a documenti con oneri !=ES
  	liq_esiste_split varchar,
    -- Ordinativo
	-- La data di emissione ordinativo
  	ord_emissione_data timestamp,
	-- La data di quietanza ordinativo
  	ord_quietanza_data timestamp,
    -- 12.07.2018 Sofia jira siac-6193
    -- estremi soggetto ordinativo
    ord_soggetto_code varchar,
    ord_soggetto_desc varchar,
    -- MDP ordinativo - no cessione
    ord_accredito_tipo_code varchar,
    ord_accredito_tipo_desc varchar,
    ord_iban VARCHAR,
    ord_bic varchar,
    ord_contocorrente varchar,
    ord_contocorrente_intestazione varchar,
    ord_banca_denominazione varchar,
    ord_quietanzante varchar,
    ord_quietanzante_codice_fiscale varchar,
    -- MDP ordinativo - cessione
    -- Estremi soggetto cessione
    ord_soggetto_cessione_code varchar,
    ord_soggetto_cessione_desc varchar,
    -- Relazione soggetti CSI, CSC
    ord_relaz_tipo_code   varchar,
    ord_relaz_tipo_desc   varchar,
    -- MDP - in caso di cessione dati MDP di cessione
    ord_accredito_tipo_code_cess varchar,
    ord_accredito_tipo_desc_cess varchar,
    ord_iban_cess VARCHAR,
    ord_bic_cess varchar,
    ord_contocorrente_cess varchar,
    ord_contocorrente_intestazione_cess varchar,
    ord_banca_denominazione_cess varchar,
    ord_quietanzante_cess varchar,
    ord_quietanzante_codice_fiscale_cess varchar
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
BEGIN

	RETURN QUERY
    with
    liq as
    (
		select
			a.liq_id,
			a.liq_anno,
			a.liq_numero,
			a.liq_desc,
			s.liq_stato_desc liq_stato,
			f.elem_id,
			h.anno,
			f.elem_code,
			f.elem_code2,
			f.elem_code3,
			d.movgest_anno,
			d.movgest_numero,
			c.movgest_ts_code,
			a.liq_importo,
			l.soggetto_id,
			l.soggetto_code,
			l.soggetto_desc,
			n.attoamm_numero,
			n.attoamm_anno,
			n.attoamm_oggetto,
			o.attoamm_tipo_code,
			o.attoamm_tipo_desc,
			q.attoamm_stato_desc,
			n.attoamm_id,
            -- 28.06.2018 Sofia siac-6193
            -- Il codice fiscale e la partita Iva del soggetto
            l.codice_fiscale::varchar sog_codice_fiscale,
            l.partita_iva    sog_partita_iva
		from
			siac_t_liquidazione a,
			siac_r_liquidazione_movgest b,
			siac_t_movgest_ts c,
			siac_t_movgest d,
			siac_r_movgest_bil_elem e,
			siac_t_bil_elem f,
			siac_t_bil g,
			siac_t_periodo h,
			siac_r_liquidazione_soggetto i,
			siac_t_soggetto l,
			siac_r_liquidazione_atto_amm m,
			siac_t_atto_amm n,
			siac_d_atto_amm_tipo o,
			siac_r_atto_amm_stato p,
			siac_d_atto_amm_stato q,
			siac_r_liquidazione_stato r,
			siac_d_liquidazione_stato s

		where a.liq_id=b.liq_id
		and c.movgest_ts_id=b.movgest_ts_id
		and d.movgest_id=c.movgest_id
        and (case when coalesce(_filtro_crp,'X')='R' then d.movgest_anno<_anno::integer
                  when coalesce(_filtro_crp,'X')='C' then d.movgest_anno=_anno::integer
                  else true end ) -- 29.06.2018 Sofia jira siac-6193
		and e.movgest_id=d.movgest_id
		and f.elem_id=e.elem_id
		and g.bil_id=f.bil_id
		and h.periodo_id=g.periodo_id
		and i.liq_id=a.liq_id
		and l.soggetto_id=i.soggetto_id
		and m.liq_id=a.liq_id
		and n.attoamm_id=m.attoamm_id
		and o.attoamm_tipo_id=n.attoamm_tipo_id
		and p.attoamm_id=n.attoamm_id
		and p.attoamm_stato_id=q.attoamm_stato_id
		and r.liq_id=a.liq_id
		and r.liq_stato_id=s.liq_stato_id
		and now() BETWEEN b.validita_inizio and coalesce (b.validita_fine,now())
		and now() BETWEEN e.validita_inizio and coalesce (e.validita_fine,now())
		and now() BETWEEN i.validita_inizio and coalesce (i.validita_fine,now())
		and now() BETWEEN m.validita_inizio and coalesce (m.validita_fine,now())
		and now() BETWEEN p.validita_inizio and coalesce (p.validita_fine,now())
		and now() BETWEEN r.validita_inizio and coalesce (r.validita_fine,now())
		and a.data_cancellazione is null
		and b.data_cancellazione is null
		and c.data_cancellazione is null
		and d.data_cancellazione is null
		and e.data_cancellazione is null
		and f.data_cancellazione is null
		and g.data_cancellazione is null
		and h.data_cancellazione is null
		and i.data_cancellazione is null
		and l.data_cancellazione is null
		and m.data_cancellazione is null
		and n.data_cancellazione is null
		and o.data_cancellazione is null
		and p.data_cancellazione is null
		and q.data_cancellazione is null
		and r.data_cancellazione is null
		and s.data_cancellazione is null
		and q.attoamm_stato_code<>'ANNULLATO'
		AND f.elem_id = _capitolo_spesa_id
		AND h.anno = _anno
	),
	sac as
    (
		select
			y.classif_code,
			y.classif_desc,
			z.attoamm_id
		from
			siac_r_atto_amm_class z,
			siac_t_class y,
			siac_d_class_tipo x
		where x.classif_tipo_code  IN ('CDC', 'CDR')
        and   z.classif_id=y.classif_id
		and   x.classif_tipo_id=y.classif_tipo_id
		and now() BETWEEN z.validita_inizio and coalesce (z.validita_fine,now())
		and z.data_cancellazione is NULL
		and x.data_cancellazione is NULL
		and y.data_cancellazione is NULL
	),
    -- 28.06.2018 Sofia siac-6193
    cartecont as
    (
        select rcs.soggetto_id, count(*) esiste_carta
        from  siac_r_cartacont_det_soggetto rcs
        where rcs.data_cancellazione is null
        and   rcs.validita_fine is null
        group by rcs.soggetto_id
    ),
    -- 28.06.2018 Sofia jira siac-6193
    split_liq as
    (
      select  rliq.liq_id, count(*) esiste_split
      from siac_r_subdoc_liquidazione rliq,siac_t_subdoc sub,siac_r_doc_onere ronere,
           siac_d_onere onere, siac_d_onere_tipo tipo
      where  tipo.onere_tipo_code!='ES'
      and    onere.onere_tipo_id=tipo.onere_tipo_id
      and    ronere.onere_id=onere.onere_id
      and    sub.doc_id=ronere.doc_id
      and    rliq.subdoc_id=sub.subdoc_id
      and    ronere.data_cancellazione is null
      and    now() between ronere.validita_inizio and coalesce(ronere.validita_fine,now())
      and    sub.data_cancellazione is null
      and    now() between sub.validita_inizio and coalesce(sub.validita_fine,now())
      and    rliq.data_cancellazione is null
      and    now() between rliq.validita_inizio and coalesce(rliq.validita_fine,now())
      group by rliq.liq_id
    ),
     -- 28.06.2018 Sofia jira siac-6193
    attoallegato as
    (
    	select alg.attoal_id,
               alg.attoamm_id,
               alg.data_creazione attoal_data_creazione,
               alg.attoal_data_scadenza,
               stato.attoal_stato_desc
        from   siac_t_atto_allegato alg, siac_r_atto_allegato_stato rs,siac_d_atto_allegato_stato stato
        where alg.attoal_id  = rs.attoal_id
        and   stato.attoal_stato_id  =  rs.attoal_stato_id
        and   alg.data_cancellazione is null
        and   rs.data_cancellazione is null
    ),
    -- 28.06.2018 Sofia jira siac-6193
    modpag_cessione as
    (
        select
          liqCessione.liq_id,
          rrelaz.soggetto_relaz_id,
          sog_cessione.soggetto_code soggetto_cessione_code,
          sog_cessione.soggetto_desc soggetto_cessione_desc,
          dat.accredito_tipo_code,
          dat.accredito_tipo_desc,
          tmod.iban,
          tmod.bic,
          tmod.contocorrente,
          tmod.contocorrente_intestazione,
          tmod.banca_denominazione,
          tmod.quietanziante ,
          tmod.quietanziante_codice_fiscale::varchar,
          drt.relaz_tipo_code,
          drt.relaz_tipo_desc
        from  siac_t_liquidazione liqCessione,
              siac_r_soggetto_relaz rrelaz,
              -- 13.07.2018 Sofia jira siac-6193
              siac_d_oil_relaz_tipo oil,
              siac_d_relaz_tipo drt,siac_r_oil_relaz_tipo roil,
              siac_t_soggetto sog_cessione,
              siac_r_soggrel_modpag rsm,
              siac_t_modpag tmod,
              siac_d_accredito_tipo dat
	    where oil.oil_relaz_tipo_code ='CSI' -- 13.07.2018 Sofia jira siac-6193
        and   roil.oil_relaz_tipo_id=oil.oil_relaz_tipo_id
        and   drt.relaz_tipo_id=roil.relaz_tipo_id
        and   drt.relaz_tipo_id=rrelaz.relaz_tipo_id
        and   sog_cessione.soggetto_id=rrelaz.soggetto_id_a
        and   rsm.soggetto_relaz_id=rrelaz.soggetto_relaz_id
        and   tmod.modpag_id=rsm.modpag_id
        and   dat.accredito_tipo_id = tmod.accredito_tipo_id
        and   liqCessione.soggetto_relaz_id=rrelaz.soggetto_relaz_id
        and   liqCessione.data_cancellazione is null
        and   liqCessione.validita_fine is null
        and   rrelaz.data_cancellazione is null
        -- 13.07.2018 Sofia jira siac-6193
        and   roil.data_cancellazione is null
        and   roil.validita_fine is null
        and   now()  BETWEEN rrelaz.validita_inizio and coalesce(rrelaz.validita_fine,now())
        and   rsm.data_cancellazione is null
        and   now()  BETWEEN rsm.validita_inizio and coalesce(rsm.validita_fine,now())
        and   tmod.data_cancellazione is null
        and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
    ),
    -- 28.06.2018 Sofia jira siac-6193
    modpag_no_cessione as
    (
		select
            liqModpag.liq_id,
            tmod.modpag_id,
            tipo.accredito_tipo_code,
            tipo.accredito_tipo_desc,
            tmod.iban,
            tmod.bic,
            tmod.contocorrente,
            tmod.contocorrente_intestazione,
            tmod.banca_denominazione,
            tmod.quietanziante,
            tmod.quietanziante_codice_fiscale::varchar
        from  siac_t_liquidazione liqModpag, siac_t_modpag tmod,  siac_d_accredito_tipo tipo
		where tipo.accredito_tipo_id = tmod.accredito_tipo_id
        and   liqModpag.modpag_id=tmod.modpag_id
        and   liqModpag.data_cancellazione is null
        and   liqModpag.validita_fine is null
        and   tmod.data_cancellazione is null
		and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
    ),
    ordinativo as
    (
     WITH
     ordi as
     (
		-- SIAC-5164
		SELECT
			rlo.liq_id,
			tor.ord_anno,
			tor.ord_numero,
			dos.ord_stato_code,
			dos.ord_stato_desc,
            -- 28.06.2018 Sofia jira siac-6193
            -- La data di emissione ordinativo
			tor.ord_emissione_data,
            tor.ord_id,
            tor.ord_tipo_id
		FROM
			siac_r_liquidazione_ord rlo,
			siac_t_ordinativo_ts tot,
			siac_t_ordinativo tor,
			siac_r_ordinativo_stato ros,
			siac_d_ordinativo_stato dos,
            siac_r_ordinativo_bil_elem re
		WHERE  re.elem_id=_capitolo_spesa_id
        and tor.ord_id=re.ord_id
   		AND tot.ord_id = tor.ord_id
        and rlo.sord_id = tot.ord_ts_id
		AND ros.ord_id = tor.ord_id
		AND dos.ord_stato_id = ros.ord_stato_id
        AND dos.ord_stato_code <> 'A'
        AND now() BETWEEN re.validita_inizio AND COALESCE (re.validita_fine, now())
		AND now() BETWEEN rlo.validita_inizio AND COALESCE (rlo.validita_fine, now())
		AND now() BETWEEN ros.validita_inizio AND COALESCE (ros.validita_fine, now())
   		AND re.data_cancellazione IS NULL
		AND rlo.data_cancellazione IS NULL
		AND tot.data_cancellazione IS NULL
		AND tor.data_cancellazione IS NULL
		AND ros.data_cancellazione IS NULL
		AND dos.data_cancellazione IS NULL
	 ),
     -- 28.06.2018 Sofia jira siac-6193
     ord_quietanza AS
     (
      SELECT r.ord_id, max(r.ord_quietanza_data) ord_quietanza_data
	  FROM siac_r_ordinativo_quietanza r
	  WHERE r.data_cancellazione  is null
      and   now() between r.validita_inizio and coalesce(r.validita_fine, now())
      group by r.ord_id
     ),
     -- 29.06.2018 Sofia jira siac-6193
     ord_modpag_cessione as
     (
        select
          rmdp.ord_id,
          rrelaz.soggetto_relaz_id,
          sog_cessione.soggetto_code soggetto_cessione_code,
          sog_cessione.soggetto_desc soggetto_cessione_desc,
          dat.accredito_tipo_code,
          dat.accredito_tipo_desc,
          tmod.iban,
          tmod.bic,
          tmod.contocorrente,
          tmod.contocorrente_intestazione,
          tmod.banca_denominazione,
          tmod.quietanziante ,
          tmod.quietanziante_codice_fiscale::varchar,
          drt.relaz_tipo_code,
          drt.relaz_tipo_desc
        from  siac_r_soggetto_relaz rrelaz,
              siac_d_relaz_tipo drt,
              -- 13.07.2018 Sofia jira siac-6193,
              siac_d_oil_relaz_tipo oil, siac_r_oil_relaz_tipo roil,
              siac_t_soggetto sog_cessione,
              siac_r_soggrel_modpag rsm,
              siac_t_modpag tmod,
              siac_d_accredito_tipo dat,
              siac_r_ordinativo_modpag rmdp
	    where oil.oil_relaz_tipo_code ='CSI'  -- 13.07.2018 Sofia jira siac-6193
        and   roil.oil_relaz_tipo_id=oil.oil_relaz_tipo_id
        and   drt.relaz_tipo_id=roil.relaz_tipo_id
        and   drt.relaz_tipo_id=rrelaz.relaz_tipo_id
        and   sog_cessione.soggetto_id=rrelaz.soggetto_id_a
        and   rsm.soggetto_relaz_id=rrelaz.soggetto_relaz_id
        and   tmod.modpag_id=rsm.modpag_id
        and   dat.accredito_tipo_id = tmod.accredito_tipo_id
        and   rmdp.soggetto_relaz_id=rrelaz.soggetto_relaz_id
        and   rmdp.data_cancellazione is null
        and   rmdp.validita_fine is null
        and   roil.data_cancellazione is null
        and   roil.validita_fine is null
        and   rrelaz.data_cancellazione is null
        and   now()  BETWEEN rrelaz.validita_inizio and coalesce(rrelaz.validita_fine,now())
        and   rsm.data_cancellazione is null
        and   now()  BETWEEN rsm.validita_inizio and coalesce(rsm.validita_fine,now())
        and   tmod.data_cancellazione is null
        and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
     ),
     -- 28.06.2018 Sofia jira siac-6193
     ord_modpag_no_cessione as
     (
		select
            rModpag.ord_id,
            tmod.modpag_id,
            tipo.accredito_tipo_code,
            tipo.accredito_tipo_desc,
            tmod.iban,
            tmod.bic,
            tmod.contocorrente,
            tmod.contocorrente_intestazione,
            tmod.banca_denominazione,
            tmod.quietanziante,
            tmod.quietanziante_codice_fiscale::varchar
        from  siac_r_ordinativo_modpag rModpag, siac_t_modpag tmod,  siac_d_accredito_tipo tipo
		where tipo.accredito_tipo_id = tmod.accredito_tipo_id
        and   rModpag.modpag_id=tmod.modpag_id
        and   rModpag.data_cancellazione is null
        and   rModpag.validita_fine is null
        and   tmod.data_cancellazione is null
		and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
     ),
     -- 12.07.2018 Sofia jira siac-6193
     ord_soggetto_ord as
     (
     select rsog.ord_id,
            sog.soggetto_code ord_soggetto_code,
            sog.soggetto_desc ord_soggetto_desc
     from siac_r_ordinativo_soggetto rsog,
          siac_t_soggetto sog
     where sog.soggetto_id=rsog.soggetto_id
     and   rsog.data_cancellazione is null
     and   now()  BETWEEN rsog.validita_inizio and coalesce(rsog.validita_fine,now())
     )
     select ordi.*,
            ord_quietanza.ord_quietanza_data,
            -- 12.07.2018 Sofia jira siac-6193
            ord_soggetto_ord.ord_soggetto_code,
            ord_soggetto_ord.ord_soggetto_desc,
            -- MDP no cessione
            ord_modpag_no_cessione.accredito_tipo_code ord_accredito_tipo_code,
		    ord_modpag_no_cessione.accredito_tipo_desc ord_accredito_tipo_desc,
		    ord_modpag_no_cessione.iban ord_iban,
		    ord_modpag_no_cessione.bic ord_bic,
		    ord_modpag_no_cessione.contocorrente ord_contocorrente,
		    ord_modpag_no_cessione.contocorrente_intestazione ord_contocorrente_intestazione,
		    ord_modpag_no_cessione.banca_denominazione ord_banca_denominazione,
		    ord_modpag_no_cessione.quietanziante ord_quietanzante,
		    ord_modpag_no_cessione.quietanziante_codice_fiscale ord_quietanzante_codice_fiscale,
            -- MDP - cessione
            -- Estremi soggetto cessione
       		ord_modpag_cessione.soggetto_cessione_code ord_soggetto_cessione_code,
	        ord_modpag_cessione.soggetto_cessione_desc ord_soggetto_cessione_desc,
    	    -- Relazione Soggetto
	        ord_modpag_cessione.relaz_tipo_code ord_relaz_tipo_code,
        	ord_modpag_cessione.relaz_tipo_desc ord_relaz_tipo_desc,
	        -- Accredito tipo - se CESSIONE - valorizzato con Relazione
    	    ord_modpag_cessione.accredito_tipo_code ord_accredito_tipo_code_cess,
            ord_modpag_cessione.accredito_tipo_desc ord_accredito_tipo_desc_cess,
	        -- Modalita di pagamento - cessione
    	    -- IBAN
            ord_modpag_cessione.iban ord_iban_cess,
	        -- BIC
        	ord_modpag_cessione.bic ord_bic_cess,
	        -- contocorrente
		    ord_modpag_cessione.contocorrente ord_contocorrente_cess,
        	-- contocorrente_intestazione
            ord_modpag_cessione.contocorrente_intestazione ord_contocorrente_intestazione_cess,
    	    -- banca_denominazione
            ord_modpag_cessione.banca_denominazione ord_banca_denominazione_cess,
	        -- quietanzante
            ord_modpag_cessione.quietanziante  ord_quietanzante_cess,
        	-- quietanzante_codice_fiscale
            ord_modpag_cessione.quietanziante_codice_fiscale ord_quietanzante_codice_fiscale_cess
     from siac_d_ordinativo_tipo tipo,
          ordi
          left join ord_quietanza on (ordi.ord_id=ord_quietanza.ord_id)
          left join ord_modpag_no_cessione on (ordi.ord_id=ord_modpag_no_cessione.ord_id)
          left join ord_modpag_cessione on (ordi.ord_id=ord_modpag_cessione.ord_id)
          -- 12.07.2018 Sofia jira siac-6193
          join ord_soggetto_ord on (ord_soggetto_ord.ord_id=ordi.ord_id)
     where tipo.ord_tipo_code='P'
     and   ordi.ord_tipo_id=tipo.ord_tipo_id
    )
	select
		liq.liq_id,
		liq.liq_anno,
		liq.liq_numero,
		liq.liq_desc,
		liq.liq_stato,
		liq.elem_id as uid_capitolo,
		liq.anno as capitolo_anno,
		liq.elem_code as capitolo_numero,
		liq.elem_code2 as capitolo_articolo,
		liq.elem_code3 as ueb_num,
		liq.movgest_anno,
		liq.movgest_numero,
		liq.movgest_ts_code,
		liq.liq_importo,
		liq.soggetto_code,
		liq.soggetto_desc,
		liq.attoamm_numero,
		liq.attoamm_anno,
		liq.attoamm_oggetto,
		liq.attoamm_tipo_code,
		liq.attoamm_tipo_desc,
		liq.attoamm_stato_desc,
		sac.classif_code,
		sac.classif_desc,
		ordinativo.ord_anno,
		ordinativo.ord_numero,
		ordinativo.ord_stato_code,
		ordinativo.ord_stato_desc,
        -- 28.06.2018 Sofia siac-6193
        -- Il codice fiscale e la partita Iva del soggetto
        liq.sog_codice_fiscale,
        liq.sog_partita_iva,
        (CASE WHEN  coalesce(cartecont.esiste_carta,0)=0 THEN 'N'::varchar ELSE 'S'::varchar END )  carte_contabili ,
		-- Data di inserimento dell atto contabile (la medesima data che viene riportata in stampa dell'ALG)
        attoallegato.attoal_data_creazione,
        -- Data di scadenza dell atto contabile
        attoallegato.attoal_data_scadenza ,
        -- Stato dell atto contabile
		attoallegato.attoal_stato_desc,
        -- Modalita di pagamento - non cessione
        -- Accredito tipo
        modpag_no_cessione.accredito_tipo_code,
		modpag_no_cessione.accredito_tipo_desc,
		-- IBAN
		modpag_no_cessione.iban,
        -- BIC
        modpag_no_cessione.bic,
        -- contocorrente
        modpag_no_cessione.contocorrente,
        -- contocorrente_intestazione
        modpag_no_cessione.contocorrente_intestazione,
        -- banca_denominazione
        modpag_no_cessione.banca_denominazione,
        -- quietanzante
        modpag_no_cessione.quietanziante quietanzante,
        -- quietanzante_codice_fiscale
        modpag_no_cessione.quietanziante_codice_fiscale quietanzante_codice_fiscale,
        -- Estremi soggetto cessione
        modpag_cessione.soggetto_cessione_code,
        modpag_cessione.soggetto_cessione_desc,
        -- Relazione Soggetto
        modpag_cessione.relaz_tipo_code,
        modpag_cessione.relaz_tipo_desc,
        -- Accredito tipo - se CESSIONE - valorizzato con Relazione
        modpag_cessione.accredito_tipo_code accredito_tipo_code_cess,
        modpag_cessione.accredito_tipo_desc accredito_tipo_desc_cess,
        -- Modalita di pagamento
        -- IBAN
        modpag_cessione.iban iban_cess,
        -- BIC
        modpag_cessione.bic bic_cess,
        -- contocorrente
        modpag_cessione.contocorrente contocorrente_cess,
        -- contocorrente_intestazione
        modpag_cessione.contocorrente_intestazione contocorrente_intestazione_cess,
        -- banca_denominazione
        modpag_cessione.banca_denominazione banca_denominazione_cess,
        -- quietanzante
        modpag_cessione.quietanziante quietanzante_cess,
        -- quietanzante_codice_fiscale
        modpag_cessione.quietanziante_codice_fiscale quietanzante_codice_fiscale_cess,
        (CASE WHEN  coalesce(split_liq.esiste_split,0)=0 THEN 'N'::varchar ELSE 'S'::varchar END )  liq_esiste_split ,
        -- Ordinativo
        -- La data di emissione ordinativo
        ordinativo.ord_emissione_data,
        -- La data di quietanza ordinativo
        ordinativo.ord_quietanza_data,
        -- 12.07.2018 Sofia siac-6193
        -- estremi soggetto ordinativo
        ordinativo.ord_soggetto_code,
        ordinativo.ord_soggetto_desc,
        -- MDP - non cessione
        ordinativo.ord_accredito_tipo_code,
        ordinativo.ord_accredito_tipo_desc,
        ordinativo.ord_iban,
        ordinativo.ord_bic,
        ordinativo.ord_contocorrente,
        ordinativo.ord_contocorrente_intestazione,
        ordinativo.ord_banca_denominazione,
        ordinativo.ord_quietanzante,
        ordinativo.ord_quietanzante_codice_fiscale,
		-- MDP - cessione
        -- Estremi soggetto cessione
        ordinativo.ord_soggetto_cessione_code,
        ordinativo.ord_soggetto_cessione_desc,
        -- Relazione soggetto cessione
        ordinativo.ord_relaz_tipo_code,
        ordinativo.ord_relaz_tipo_desc,
        -- MDP ordinativo
        ordinativo.ord_accredito_tipo_code_cess,
        ordinativo.ord_accredito_tipo_desc_cess,
        ordinativo.ord_iban_cess,
        ordinativo.ord_bic_cess,
        ordinativo.ord_contocorrente_cess,
        ordinativo.ord_contocorrente_intestazione_cess,
        ordinativo.ord_banca_denominazione_cess,
        ordinativo.ord_quietanzante_cess,
        ordinativo.ord_quietanzante_codice_fiscale_cess
	from liq
      left outer join sac on liq.attoamm_id=sac.attoamm_id
      -- 29.06.2018 Sofia siac-6193
      left outer join ordinativo on ordinativo.liq_id = liq.liq_id
      -- 28.06.2018 Sofia siac-6193
      left join  cartecont on (liq.soggetto_id=cartecont.soggetto_id)
      left join  split_liq on (liq.liq_id = split_liq.liq_id)
 	  left join  attoallegato on  (liq.attoamm_id = attoallegato.attoamm_id)
	  left join  modpag_no_cessione on  (liq.liq_id =  modpag_no_cessione.liq_id)
      left join  modpag_cessione on ( liq.liq_id = modpag_cessione.liq_id)
      ORDER BY 2,3,5,7,8,9,10
	LIMIT _limit
	OFFSET _offset;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--14

DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_liquidazione_from_impegno ( _uid_impegno integer,  _anno varchar,  _limit integer,  _page integer);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_liquidazione_from_impegno (
  _uid_impegno integer,
  _anno varchar,
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  liq_anno integer,
  liq_numero numeric,
  liq_desc varchar,
  liq_stato varchar,
  uid_capitolo integer,
  capitolo_anno varchar,
  capitolo_numero varchar,
  capitolo_articolo varchar,
  ueb_numero varchar,
  movgest_anno integer,
  movgest_numero numeric,
  movgest_ts_code varchar,
  liq_importo numeric,
  soggetto_code varchar,
  soggetto_desc varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_oggetto varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  ord_anno integer,
  ord_numero numeric,
  ord_stato_code varchar,
  ord_stato_desc varchar,
  -- 02.07.2018 Sofia siac-6193
  -- Il codice fiscale e la partita Iva del soggetto
  sog_codice_fiscale varchar,
  sog_partita_iva varchar,
  -- Soggetto avente carte contabili
  carte_contabili varchar,
  -- Data creazione dell atto contabile
  attoal_data_creazione timestamp,
  -- Data di scadenza dell atto contabile
  attoal_data_scadenza timestamp,
  -- Stato dell atto contabile
  attoal_stato_desc varchar,
  -- MDP - no cessione
  accredito_tipo_code varchar,
  accredito_tipo_desc varchar,
  iban VARCHAR,
  bic varchar,
  contocorrente varchar,
  contocorrente_intestazione varchar,
  banca_denominazione varchar,
  quietanzante varchar,
  quietanzante_codice_fiscale varchar,
  -- MDP - cessione
  -- Estremi soggetto cessione
  soggetto_cessione_code varchar,
  soggetto_cessione_desc varchar,
  -- Relazione soggetti CSI, CSC
  relaz_tipo_code   varchar,
  relaz_tipo_desc   varchar,
  -- MDP - in caso di cessione dati MDP di cessione
  accredito_tipo_code_cess varchar,
  accredito_tipo_desc_cess varchar,
  iban_cess VARCHAR,
  bic_cess varchar,
  contocorrente_cess varchar,
  contocorrente_intestazione_cess varchar,
  banca_denominazione_cess varchar,
  quietanzante_cess varchar,
  quietanzante_codice_fiscale_cess varchar,
  -- Indicazione se la liquidazione presenta split/ritenute - collegamento a documenti con oneri !=ES
  liq_esiste_split varchar,
  -- Ordinativo
  -- La data di emissione ordinativo
  ord_emissione_data timestamp,
  -- La data di quietanza ordinativo
  ord_quietanza_data timestamp,
  -- 12.07.2018 Sofia jira siac-6193
  -- estremi soggetto ordinativo
  ord_soggetto_code varchar,
  ord_soggetto_desc varchar,
  -- MDP - no cessione
  ord_accredito_tipo_code varchar,
  ord_accredito_tipo_desc varchar,
  ord_iban VARCHAR,
  ord_bic varchar,
  ord_contocorrente varchar,
  ord_contocorrente_intestazione varchar,
  ord_banca_denominazione varchar,
  ord_quietanzante varchar,
  ord_quietanzante_codice_fiscale varchar,
  -- MDP - cessione
  -- Estremi soggetto cessione
  ord_soggetto_cessione_code varchar,
  ord_soggetto_cessione_desc varchar,
  -- Relazione soggetti CSI, CSC
  ord_relaz_tipo_code   varchar,
  ord_relaz_tipo_desc   varchar,
  -- MDP - in caso di cessione dati MDP di cessione
  ord_accredito_tipo_code_cess varchar,
  ord_accredito_tipo_desc_cess varchar,
  ord_iban_cess VARCHAR,
  ord_bic_cess varchar,
  ord_contocorrente_cess varchar,
  ord_contocorrente_intestazione_cess varchar,
  ord_banca_denominazione_cess varchar,
  ord_quietanzante_cess varchar,
  ord_quietanzante_codice_fiscale_cess varchar
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
    v_ente_proprietario_id INTEGER;
BEGIN

	select ente_proprietario_id into v_ente_proprietario_id from siac_t_movgest where siac_t_movgest.movgest_id = _uid_impegno	;

	RETURN QUERY
    with liq as (
		select
			a.liq_id,
			a.liq_anno,
			a.liq_numero,
			a.liq_desc,
			s.liq_stato_desc liq_stato,
			f.elem_id,
			h.anno,
			f.elem_code,
			f.elem_code2,
			f.elem_code3,
			d.movgest_anno,
			d.movgest_numero,
			c.movgest_ts_code,
			a.liq_importo,
			l.soggetto_code,
			l.soggetto_desc,
			n.attoamm_numero,
			n.attoamm_anno,
            n.attoamm_oggetto,
			o.attoamm_tipo_code,
			o.attoamm_tipo_desc,
			q.attoamm_stato_desc,
			n.attoamm_id,
            -- 02.07.2018 Sofia jira siac-6193
            l.soggetto_id,
            l.codice_fiscale::varchar sog_codice_fiscale,
            l.partita_iva sog_partita_iva
		from
			siac_t_liquidazione a,
			siac_r_liquidazione_movgest b,
			siac_t_movgest_ts c,
			siac_t_movgest d,
			siac_r_movgest_bil_elem e,
			siac_t_bil_elem f,
			siac_t_bil g,
			siac_t_periodo h,
			siac_r_liquidazione_soggetto i,
			siac_t_soggetto l,
			siac_r_liquidazione_atto_amm m,
			siac_t_atto_amm n,
			siac_d_atto_amm_tipo o,
			siac_r_atto_amm_stato p,
			siac_d_atto_amm_stato q,
			siac_r_liquidazione_stato r,
			siac_d_liquidazione_stato s
		where a.liq_id=b.liq_id
		and c.movgest_ts_id=b.movgest_ts_id
		and d.movgest_id=c.movgest_id
		and e.movgest_id=d.movgest_id
		and f.elem_id=e.elem_id
		and g.bil_id=f.bil_id
		and h.periodo_id=g.periodo_id
		and i.liq_id=a.liq_id
		and l.soggetto_id=i.soggetto_id
		and m.liq_id=a.liq_id
		and n.attoamm_id=m.attoamm_id
		and o.attoamm_tipo_id=n.attoamm_tipo_id
		and p.attoamm_id=n.attoamm_id
		and p.attoamm_stato_id=q.attoamm_stato_id
		and r.liq_id=a.liq_id
		and r.liq_stato_id=s.liq_stato_id
        and a.ente_proprietario_id = v_ente_proprietario_id
		and now() BETWEEN b.validita_inizio and coalesce (b.validita_fine,now())
		and now() BETWEEN e.validita_inizio and coalesce (e.validita_fine,now())
		and now() BETWEEN i.validita_inizio and coalesce (i.validita_fine,now())
		and now() BETWEEN m.validita_inizio and coalesce (m.validita_fine,now())
		and now() BETWEEN p.validita_inizio and coalesce (p.validita_fine,now())
		and now() BETWEEN r.validita_inizio and coalesce (r.validita_fine,now())
        and q.attoamm_stato_code<>'ANNULLATO'
		AND d.movgest_id=_uid_impegno
		and h.anno = _anno
		and a.data_cancellazione is null
		and b.data_cancellazione is null
		and c.data_cancellazione is null
		and d.data_cancellazione is null
		and e.data_cancellazione is null
		and f.data_cancellazione is null
		and g.data_cancellazione is null
		and h.data_cancellazione is null
		and i.data_cancellazione is null
		and l.data_cancellazione is null
		and m.data_cancellazione is null
		and n.data_cancellazione is null
		and o.data_cancellazione is null
		and p.data_cancellazione is null
		and q.data_cancellazione is null
		and r.data_cancellazione is null
		and s.data_cancellazione is null
	),
	sac as
    (
		select
			y.classif_code,
			y.classif_desc,
			z.attoamm_id
		from
			siac_r_atto_amm_class z,
			siac_t_class y,
			siac_d_class_tipo x
		where z.classif_id=y.classif_id
		and x.classif_tipo_id=y.classif_tipo_id
		and x.classif_tipo_code  IN ('CDC', 'CDR')
        and x.ente_proprietario_id = v_ente_proprietario_id
		and now() BETWEEN z.validita_inizio and coalesce (z.validita_fine,now())
		and z.data_cancellazione is NULL
		and x.data_cancellazione is NULL
		and y.data_cancellazione is NULL
	),
    -- 02.07.2018 Sofia siac-6193
    cartecont as
    (
        select rcs.soggetto_id, count(*) esiste_carta
        from  siac_r_cartacont_det_soggetto rcs
        where rcs.data_cancellazione is null
        and   rcs.ente_proprietario_id = v_ente_proprietario_id
        and   rcs.validita_fine is null
        group by rcs.soggetto_id
    ),
    -- 02.07.2018 Sofia jira siac-6193
    split_liq as
    (
      select  rliq.liq_id, count(*) esiste_split
      from siac_r_subdoc_liquidazione rliq,siac_t_subdoc sub,siac_r_doc_onere ronere,
           siac_d_onere onere, siac_d_onere_tipo tipo
      where  tipo.onere_tipo_code!='ES'
      and     sub.ente_proprietario_id = v_ente_proprietario_id
      and    onere.onere_tipo_id=tipo.onere_tipo_id
      and    ronere.onere_id=onere.onere_id
      and    sub.doc_id=ronere.doc_id
      and    rliq.subdoc_id=sub.subdoc_id
      and    sub.data_cancellazione is null
      and    onere.data_cancellazione is null
      and    tipo.data_cancellazione is null
      and    ronere.data_cancellazione is null
      and    sub.data_cancellazione is null
      and    rliq.data_cancellazione is null
      and    now() between ronere.validita_inizio and coalesce(ronere.validita_fine,now())
      and    now() between sub.validita_inizio and coalesce(sub.validita_fine,now())
      and    now() between rliq.validita_inizio and coalesce(rliq.validita_fine,now())
      group by rliq.liq_id
    ),
    -- 02.07.2018 Sofia jira siac-6193
    attoallegato as
    (
    	select alg.attoal_id,
               alg.attoamm_id,
               alg.data_creazione attoal_data_creazione,
               alg.attoal_data_scadenza,
               stato.attoal_stato_desc
        from   siac_t_atto_allegato alg, siac_r_atto_allegato_stato rs,siac_d_atto_allegato_stato stato
        where alg.attoal_id  = rs.attoal_id
        and   stato.attoal_stato_id  =  rs.attoal_stato_id
		and   alg.ente_proprietario_id = v_ente_proprietario_id
        and   stato.data_cancellazione is null
        and   alg.data_cancellazione is null
        and   rs.data_cancellazione is null
    ),
    -- 02.07.2018 Sofia jira siac-6193
    modpag_cessione as
    (
        select
          liqCessione.liq_id,
          rrelaz.soggetto_relaz_id,
          sog_cessione.soggetto_code soggetto_cessione_code,
          sog_cessione.soggetto_desc soggetto_cessione_desc,
          dat.accredito_tipo_code,
          dat.accredito_tipo_desc,
          tmod.iban,
          tmod.bic,
          tmod.contocorrente,
          tmod.contocorrente_intestazione,
          tmod.banca_denominazione,
          tmod.quietanziante ,
          tmod.quietanziante_codice_fiscale::varchar,
          drt.relaz_tipo_code,
          drt.relaz_tipo_desc
        from  siac_t_liquidazione liqCessione,
              siac_r_soggetto_relaz rrelaz,
              siac_d_relaz_tipo drt,
              -- 13.07.2018 Sofia jira siac-6193
              siac_d_oil_relaz_tipo oil,
              siac_r_oil_relaz_tipo roil,
              siac_t_soggetto sog_cessione,
              siac_r_soggrel_modpag rsm,
              siac_t_modpag tmod,
              siac_d_accredito_tipo dat
	    where oil.oil_relaz_tipo_code ='CSI'  -- 13.07.2018 Sofia jira siac-6193
        and   liqCessione.ente_proprietario_id = v_ente_proprietario_id
        and   roil.oil_relaz_tipo_id=oil.oil_relaz_tipo_id
        and   drt.relaz_tipo_id=roil.relaz_tipo_id
        and   drt.relaz_tipo_id=rrelaz.relaz_tipo_id
        and   sog_cessione.soggetto_id=rrelaz.soggetto_id_a
        and   rsm.soggetto_relaz_id=rrelaz.soggetto_relaz_id
        and   tmod.modpag_id=rsm.modpag_id
        and   dat.accredito_tipo_id = tmod.accredito_tipo_id
        and   liqCessione.soggetto_relaz_id=rrelaz.soggetto_relaz_id

 		and liqCessione.data_cancellazione is null
        and rrelaz.data_cancellazione is null
        and drt.data_cancellazione is null
        and oil.data_cancellazione is null
        and roil.data_cancellazione is null
        and sog_cessione.data_cancellazione is null
        and rsm.data_cancellazione is null
        and tmod.data_cancellazione is null
        and dat.data_cancellazione is null
              
        and   liqCessione.validita_fine is null
        and   roil.validita_fine is null
        and   now()  BETWEEN rrelaz.validita_inizio and coalesce(rrelaz.validita_fine,now())
        and   now()  BETWEEN rsm.validita_inizio and coalesce(rsm.validita_fine,now())
        and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
    ),
    -- 02.07.2018 Sofia jira siac-6193
    modpag_no_cessione as
    (
		select
            liqModpag.liq_id,
            tmod.modpag_id,
            tipo.accredito_tipo_code,
            tipo.accredito_tipo_desc,
            tmod.iban,
            tmod.bic,
            tmod.contocorrente,
            tmod.contocorrente_intestazione,
            tmod.banca_denominazione,
            tmod.quietanziante,
            tmod.quietanziante_codice_fiscale::varchar
        from  siac_t_liquidazione liqModpag, siac_t_modpag tmod,  siac_d_accredito_tipo tipo
		where tipo.accredito_tipo_id = tmod.accredito_tipo_id
        and   liqModpag.modpag_id=tmod.modpag_id
        and   liqModpag.data_cancellazione is null
        and   liqModpag.validita_fine is null
        and   tmod.data_cancellazione is null
        and   tipo.data_cancellazione is null        
        and   tipo.ente_proprietario_id = v_ente_proprietario_id
		and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
    ),
    ordinativo as
    (
    with
    ordi as
    (
		-- SIAC-5164
		SELECT
			rlo.liq_id,
			tor.ord_anno,
			tor.ord_numero,
			dos.ord_stato_code,
			dos.ord_stato_desc,
            -- 02.07.2018 Sofia jira siac-6193
            -- La data di emissione ordinativo
			tor.ord_emissione_data,
            tor.ord_id,
            tor.ord_tipo_id
		FROM
			siac_r_liquidazione_ord rlo,
			siac_t_ordinativo_ts tot,
			siac_t_ordinativo tor,
			siac_r_ordinativo_stato ros,
			siac_d_ordinativo_stato dos
		WHERE rlo.sord_id = tot.ord_ts_id
		AND tot.ord_id = tor.ord_id
		AND ros.ord_id = tor.ord_id
		AND dos.ord_stato_id = ros.ord_stato_id
        and tot.ente_proprietario_id = v_ente_proprietario_id      
		AND now() BETWEEN rlo.validita_inizio AND COALESCE (rlo.validita_fine, now())
		AND now() BETWEEN ros.validita_inizio AND COALESCE (ros.validita_fine, now())
		AND rlo.data_cancellazione IS NULL
		AND tot.data_cancellazione IS NULL
		AND tor.data_cancellazione IS NULL
		AND ros.data_cancellazione IS NULL
		AND dos.data_cancellazione IS NULL
		AND dos.ord_stato_code <> 'A'
	),
    -- 02.07.2018 Sofia jira siac-6193
     ord_quietanza AS
     (
      SELECT r.ord_id, max(r.ord_quietanza_data) ord_quietanza_data
	  FROM siac_r_ordinativo_quietanza r
	  WHERE r.data_cancellazione  is null
      and   r.ente_proprietario_id = v_ente_proprietario_id
      and   now() between r.validita_inizio and coalesce(r.validita_fine, now())
      group by r.ord_id
     ),
     -- 02.07.2018 Sofia jira siac-6193
     ord_modpag_cessione as
     (
        select
          rmdp.ord_id,
          rrelaz.soggetto_relaz_id,
          sog_cessione.soggetto_code soggetto_cessione_code,
          sog_cessione.soggetto_desc soggetto_cessione_desc,
          dat.accredito_tipo_code,
          dat.accredito_tipo_desc,
          tmod.iban,
          tmod.bic,
          tmod.contocorrente,
          tmod.contocorrente_intestazione,
          tmod.banca_denominazione,
          tmod.quietanziante ,
          tmod.quietanziante_codice_fiscale::varchar,
          drt.relaz_tipo_code,
          drt.relaz_tipo_desc
        from  siac_r_soggetto_relaz rrelaz,
              siac_d_relaz_tipo drt,
              siac_d_oil_relaz_tipo oil, 
              siac_r_oil_relaz_tipo roil,  -- 13.07.2018 Sofia jira siac-6193
              siac_t_soggetto sog_cessione,
              siac_r_soggrel_modpag rsm,
              siac_t_modpag tmod,
              siac_d_accredito_tipo dat,
              siac_r_ordinativo_modpag rmdp
	    where oil.oil_relaz_tipo_code ='CSI'  -- 13.07.2018 Sofia jira siac-6193
        and   roil.oil_relaz_tipo_id=oil.oil_relaz_tipo_id
        and   drt.relaz_tipo_id=roil.relaz_tipo_id
        and   drt.relaz_tipo_id=rrelaz.relaz_tipo_id
        and   sog_cessione.soggetto_id=rrelaz.soggetto_id_a
        and   rsm.soggetto_relaz_id=rrelaz.soggetto_relaz_id
        and   tmod.modpag_id=rsm.modpag_id
        and   dat.accredito_tipo_id = tmod.accredito_tipo_id
        and   rmdp.soggetto_relaz_id=rrelaz.soggetto_relaz_id        
        and   tmod.ente_proprietario_id = v_ente_proprietario_id        
        and   drt.data_cancellazione is null 
        and   rmdp.data_cancellazione is null
        and   rmdp.validita_fine is null
        and   oil.validita_fine is null
        and   sog_cessione.data_cancellazione is null
        and   tmod.data_cancellazione is null
        and   dat.data_cancellazione is null       
        and   roil.data_cancellazione is null
        and   roil.validita_fine is null        
        and   rrelaz.data_cancellazione is null
        and   now()  BETWEEN rrelaz.validita_inizio and coalesce(rrelaz.validita_fine,now())
        and   rsm.data_cancellazione is null
        and   now()  BETWEEN rsm.validita_inizio and coalesce(rsm.validita_fine,now())
        and   tmod.data_cancellazione is null
        and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
     ),
     -- 02.07.2018 Sofia jira siac-6193
     ord_modpag_no_cessione as
     (
		select
            rModpag.ord_id,
            tmod.modpag_id,
            tipo.accredito_tipo_code,
            tipo.accredito_tipo_desc,
            tmod.iban,
            tmod.bic,
            tmod.contocorrente,
            tmod.contocorrente_intestazione,
            tmod.banca_denominazione,
            tmod.quietanziante,
            tmod.quietanziante_codice_fiscale::varchar
        from  siac_r_ordinativo_modpag rModpag, siac_t_modpag tmod,  siac_d_accredito_tipo tipo
		where tipo.accredito_tipo_id = tmod.accredito_tipo_id
        and   rModpag.modpag_id=tmod.modpag_id        
        and   tmod.ente_proprietario_id = v_ente_proprietario_id        
        and   rModpag.data_cancellazione is null
        and   tmod.data_cancellazione is null
        and   tipo.data_cancellazione is null      
        and   rModpag.validita_fine is null
 		and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
     ),
     -- 12.07.2018 Sofia jira siac-6193
     ord_soggetto_ord as
     (
     select rsog.ord_id,
            sog.soggetto_code ord_soggetto_code,
            sog.soggetto_desc ord_soggetto_desc
     from siac_r_ordinativo_soggetto rsog,
          siac_t_soggetto sog
     where sog.soggetto_id=rsog.soggetto_id
     and   sog.ente_proprietario_id = v_ente_proprietario_id
     and   sog.data_cancellazione is null
     and   rsog.data_cancellazione is null
     and   now()  BETWEEN rsog.validita_inizio and coalesce(rsog.validita_fine,now())
     )
     select ordi.*,
            ord_quietanza.ord_quietanza_data,
            -- 12.07.2018 Sofia jira siac-6193
            ord_soggetto_ord.ord_soggetto_code,
            ord_soggetto_ord.ord_soggetto_desc,
	        -- Accredito tipo - no cessione
    	    ord_modpag_no_cessione.accredito_tipo_code ord_accredito_tipo_code,
        	ord_modpag_no_cessione.accredito_tipo_desc ord_accredito_tipo_desc,
	        -- Modalita di pagamento
    	    -- IBAN
        	ord_modpag_no_cessione.iban ord_iban,
	        -- BIC
            ord_modpag_no_cessione.bic ord_bic,
	        -- contocorrente
            ord_modpag_no_cessione.contocorrente ord_contocorrente,
        	-- contocorrente_intestazione
            ord_modpag_no_cessione.contocorrente_intestazione ord_contocorrente_intestazione,
    	    -- banca_denominazione
        	ord_modpag_no_cessione.banca_denominazione ord_banca_denominazione,
	        -- quietanzante
    	    ord_modpag_no_cessione.quietanziante ord_quietanzante,
        	-- quietanzante_codice_fiscale
	        ord_modpag_no_cessione.quietanziante_codice_fiscale ord_quietanzante_codice_fiscale,
            -- MDP - cessione
            -- Estremi soggetto cessione
       		ord_modpag_cessione.soggetto_cessione_code ord_soggetto_cessione_code,
	        ord_modpag_cessione.soggetto_cessione_desc ord_soggetto_cessione_desc,
    	    -- Relazione Soggetto
	        ord_modpag_cessione.relaz_tipo_code ord_relaz_tipo_code,
        	ord_modpag_cessione.relaz_tipo_desc ord_relaz_tipo_desc,
            -- Accredito tipo -  CESSIONE
    	    ord_modpag_cessione.accredito_tipo_code ord_accredito_tipo_code_cess,
        	ord_modpag_cessione.accredito_tipo_desc ord_accredito_tipo_desc_cess,
	        -- Modalita di pagamento
    	    -- IBAN
        	ord_modpag_cessione.iban ord_iban_cess,
	        -- BIC
    	    ord_modpag_cessione.bic ord_bic_cess,
	        -- contocorrente
            ord_modpag_cessione.contocorrente ord_contocorrente_cess,
        	-- contocorrente_intestazione
            ord_modpag_cessione.contocorrente_intestazione ord_contocorrente_intestazione_cess,
    	    -- banca_denominazione
            ord_modpag_cessione.banca_denominazione ord_banca_denominazione_cess,
	        -- quietanzante
            ord_modpag_cessione.quietanziante ord_quietanzante_cess,
        	-- quietanzante_codice_fiscale
            ord_modpag_cessione.quietanziante_codice_fiscale ord_quietanzante_codice_fiscale_cess
     from siac_d_ordinativo_tipo tipo,
          ordi
          left join ord_quietanza on (ordi.ord_id=ord_quietanza.ord_id)
          left join ord_modpag_no_cessione on (ordi.ord_id=ord_modpag_no_cessione.ord_id)
          left join ord_modpag_cessione on (ordi.ord_id=ord_modpag_cessione.ord_id)
          -- 12.07.2018 Sofia jira siac-6193
          join ord_soggetto_ord on (ord_soggetto_ord.ord_id=ordi.ord_id)
     where tipo.ord_tipo_code='P'
     and   tipo.data_cancellazione is null
     and   ordi.ord_tipo_id=tipo.ord_tipo_id
     and   tipo.ente_proprietario_id = v_ente_proprietario_id
    )
	select
		liq.liq_id,
		liq.liq_anno,
		liq.liq_numero,
		liq.liq_desc,
		liq.liq_stato,
		liq.elem_id as uid_capitolo,
		liq.anno as capitolo_anno,
		liq.elem_code as capitolo_numero,
		liq.elem_code2 as capitolo_articolo,
		liq.elem_code3 as ueb_numero,
		liq.movgest_anno,
		liq.movgest_numero,
		liq.movgest_ts_code,
		liq.liq_importo,
		liq.soggetto_code,
		liq.soggetto_desc,
		liq.attoamm_numero,
		liq.attoamm_anno,
		liq.attoamm_oggetto,
		liq.attoamm_tipo_code,
		liq.attoamm_tipo_desc,
		liq.attoamm_stato_desc,
		sac.classif_code,
		sac.classif_desc,
        -- 02.07.2018 Sofia jira siac-6193
		ordinativo.ord_anno,
		ordinativo.ord_numero,
		ordinativo.ord_stato_code,
		ordinativo.ord_stato_desc,
        -- 02.07.2018 Sofia jira siac-6193
        liq.sog_codice_fiscale,
        liq.sog_partita_iva ,
        (CASE WHEN  coalesce(cartecont.esiste_carta,0)=0 THEN 'N'::varchar ELSE 'S'::varchar END )  carte_contabili ,
		-- Data di inserimento dell atto contabile (la medesima data che viene riportata in stampa dell'ALG)
        attoallegato.attoal_data_creazione,
        -- Data di scadenza dell atto contabile
        attoallegato.attoal_data_scadenza ,
        -- Stato dell atto contabile
		attoallegato.attoal_stato_desc,
        -- MDP non cessione
        -- Accredito tipo
		modpag_no_cessione.accredito_tipo_code,
        modpag_no_cessione.accredito_tipo_desc,
        -- Modalita di pagamento
        -- IBAN
        modpag_no_cessione.iban,
        -- BIC
        modpag_no_cessione.bic,
        -- contocorrente
        modpag_no_cessione.contocorrente,
        -- contocorrente_intestazione
        modpag_no_cessione.contocorrente_intestazione,
        -- banca_denominazione
        modpag_no_cessione.banca_denominazione,
        -- quietanzante
        modpag_no_cessione.quietanziante quietanzante,
        -- quietanzante_codice_fiscale
        modpag_no_cessione.quietanziante_codice_fiscale quietanzante_codice_fiscale,
        -- MDP cessione
        -- Estremi soggetto cessione
        modpag_cessione.soggetto_cessione_code,
        modpag_cessione.soggetto_cessione_desc,
        -- Relazione Soggetto
        modpag_cessione.relaz_tipo_code,
        modpag_cessione.relaz_tipo_desc,
        -- Accredito tipo -  CESSIONE
        modpag_cessione.accredito_tipo_code accredito_tipo_code_cess,
        modpag_cessione.accredito_tipo_desc accredito_tipo_desc_cess,
        -- Modalita di pagamento
        -- IBAN
        modpag_cessione.iban iban_cess,
        -- BIC
        modpag_cessione.bic bic_cess,
        -- contocorrente
        modpag_cessione.contocorrente contocorrente_cess,
        -- contocorrente_intestazione
        modpag_cessione.contocorrente_intestazione contocorrente_intestazione_cess,
        -- banca_denominazione
        modpag_cessione.banca_denominazione banca_denominazione_cess,
        -- quietanzante
        modpag_cessione.quietanziante quietanzante_cess,
        -- quietanzante_codice_fiscale
        modpag_cessione.quietanziante_codice_fiscale quietanzante_codice_fiscale_cess,
        (CASE WHEN  coalesce(split_liq.esiste_split,0)=0 THEN 'N'::varchar ELSE 'S'::varchar END )  liq_esiste_split ,
        -- Ordinativo
        -- La data di emissione ordinativo
        ordinativo.ord_emissione_data,
        -- La data di quietanza ordinativo
        ordinativo.ord_quietanza_data,
        -- 12.07.2018 Sofia jira siac-6193
        ordinativo.ord_soggetto_code,
        ordinativo.ord_soggetto_desc,
        -- MDP ordinativo - no cessione
        ordinativo.ord_accredito_tipo_code,
        ordinativo.ord_accredito_tipo_desc,
        ordinativo.ord_iban,
        ordinativo.ord_bic,
        ordinativo.ord_contocorrente,
        ordinativo.ord_contocorrente_intestazione,
        ordinativo.ord_banca_denominazione,
        ordinativo.ord_quietanzante,
        ordinativo.ord_quietanzante_codice_fiscale,
        -- MDP ordinativo - cessione
        -- Estremi soggetto cessione
        ordinativo.ord_soggetto_cessione_code,
        ordinativo.ord_soggetto_cessione_desc,
        -- Relazione soggetto cessione
        ordinativo.ord_relaz_tipo_code,
        ordinativo.ord_relaz_tipo_desc,
        -- MDP ordinativo
        ordinativo.ord_accredito_tipo_code_cess,
        ordinativo.ord_accredito_tipo_desc_cess,
        ordinativo.ord_iban_cess,
        ordinativo.ord_bic_cess,
        ordinativo.ord_contocorrente_cess,
        ordinativo.ord_contocorrente_intestazione_cess,
        ordinativo.ord_banca_denominazione_cess,
        ordinativo.ord_quietanzante_cess,
        ordinativo.ord_quietanzante_codice_fiscale_cess
	from liq
		 left outer join sac on liq.attoamm_id=sac.attoamm_id
	 	 left outer join ordinativo on ordinativo.liq_id = liq.liq_id
         -- 02.07.2018 Sofia jira siac-6193
         left outer join cartecont on liq.soggetto_id=cartecont.soggetto_id
         left outer join  split_liq on (liq.liq_id = split_liq.liq_id)
         left outer join  attoallegato on  (liq.attoamm_id = attoallegato.attoamm_id)
  	     left outer join  modpag_no_cessione on  (liq.liq_id =  modpag_no_cessione.liq_id)
         left outer join  modpag_cessione on ( liq.liq_id = modpag_cessione.liq_id)
	ORDER BY 2,3,5,7,8,9,10
	LIMIT _limit
	OFFSET _offset;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;


--15 
-- DROP FUNZIONE CON TRE (vecchia versione) E QUATTRO (nuova versione) PARAMETRI
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_liquidazione_from_provvedimento (integer,integer,integer);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_liquidazione_from_provvedimento (integer,varchar,integer,integer);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_liquidazione_from_provvedimento (
  _uid_provvedimento integer,
  _anno varchar,
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  liq_anno integer,
  liq_numero numeric,
  liq_desc varchar,
  liq_stato varchar,
  uid_capitolo integer,
  capitolo_anno varchar,
  capitolo_numero varchar,
  capitolo_articolo varchar,
  ueb_numero varchar,
  movgest_anno integer,
  movgest_numero numeric,
  movgest_ts_code varchar,
  liq_importo numeric,
  soggetto_code varchar,
  soggetto_desc varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_oggetto varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  ord_anno integer,
  ord_numero numeric,
  ord_stato_code varchar,
  ord_stato_desc varchar,
  -- 02.07.2018 Sofia siac-6193
  -- Il codice fiscale e la partita Iva del soggetto
  sog_codice_fiscale varchar,
  sog_partita_iva varchar,
  -- Soggetto avente carte contabili
  carte_contabili varchar,
  -- Data creazione dell atto contabile
  attoal_data_creazione timestamp,
  -- Data di scadenza dell atto contabile
  attoal_data_scadenza timestamp,
  -- Stato dell atto contabile
  attoal_stato_desc varchar,
  -- MDP - no cessione
  accredito_tipo_code varchar,
  accredito_tipo_desc varchar,
  iban VARCHAR,
  bic varchar,
  contocorrente varchar,
  contocorrente_intestazione varchar,
  banca_denominazione varchar,
  quietanzante varchar,
  quietanzante_codice_fiscale varchar,
  -- Estremi soggetto cessione
  soggetto_cessione_code varchar,
  soggetto_cessione_desc varchar,
  -- Relazione soggetti CSI, CSC
  relaz_tipo_code   varchar,
  relaz_tipo_desc   varchar,
  -- MDP - cessione
  accredito_tipo_code_cess varchar,
  accredito_tipo_desc_cess varchar,
  iban_cess VARCHAR,
  bic_cess varchar,
  contocorrente_cess varchar,
  contocorrente_intestazione_cess varchar,
  banca_denominazione_cess varchar,
  quietanzante_cess varchar,
  quietanzante_codice_fiscale_cess varchar,
  -- Indicazione se la liquidazione presenta split/ritenute - collegamento a documenti con oneri !=ES
  liq_esiste_split varchar,
  -- Ordinativo
  -- La data di emissione ordinativo
  ord_emissione_data timestamp,
  -- La data di quietanza ordinativo
  ord_quietanza_data timestamp,
  -- 12.07.2018 Sofia jira siac-6193
  -- estremi soggetto ordinativo
  ord_soggetto_code varchar,
  ord_soggetto_desc varchar,
  -- MDP - no cessione
  ord_accredito_tipo_code varchar,
  ord_accredito_tipo_desc varchar,
  ord_iban VARCHAR,
  ord_bic varchar,
  ord_contocorrente varchar,
  ord_contocorrente_intestazione varchar,
  ord_banca_denominazione varchar,
  ord_quietanzante varchar,
  ord_quietanzante_codice_fiscale varchar,
  -- MDP CESSIONE
  -- Estremi soggetto cessione
  ord_soggetto_cessione_code varchar,
  ord_soggetto_cessione_desc varchar,
  -- Relazione soggetti CSI, CSC
  ord_relaz_tipo_code   varchar,
  ord_relaz_tipo_desc   varchar,
  -- MDP - in caso di cessione dati MDP di cessione
  ord_accredito_tipo_code_cess varchar,
  ord_accredito_tipo_desc_cess varchar,
  ord_iban_cess VARCHAR,
  ord_bic_cess varchar,
  ord_contocorrente_cess varchar,
  ord_contocorrente_intestazione_cess varchar,
  ord_banca_denominazione_cess varchar,
  ord_quietanzante_cess varchar,
  ord_quietanzante_codice_fiscale_cess varchar
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
BEGIN

	RETURN QUERY
	with liq as
    (
		select
			a.liq_id,
			a.liq_anno,
			a.liq_numero,
			a.liq_desc,
			s.liq_stato_desc liq_stato,
			f.elem_id,
			h.anno,
			f.elem_code,
			f.elem_code2,
			f.elem_code3,
			d.movgest_anno,
			d.movgest_numero,
			c.movgest_ts_code,
			a.liq_importo,
			l.soggetto_code,
			l.soggetto_desc,
			n.attoamm_numero,
			n.attoamm_anno,
            n.attoamm_oggetto,
			o.attoamm_tipo_code,
			o.attoamm_tipo_desc,
			q.attoamm_stato_desc,
			n.attoamm_id,
            -- 02.07.2018 Sofia jira siac-6193
            l.soggetto_id,
            l.codice_fiscale::varchar sog_codice_fiscale,
            l.partita_iva sog_partita_iva
		from
			siac_t_liquidazione a,
			siac_r_liquidazione_movgest b,
			siac_t_movgest_ts c,
			siac_t_movgest d,
			siac_r_movgest_bil_elem e,
			siac_t_bil_elem f,
			siac_t_bil g,
			siac_t_periodo h,
			siac_r_liquidazione_soggetto i,
			siac_t_soggetto l,
			siac_r_liquidazione_atto_amm m,
			siac_t_atto_amm n,
			siac_d_atto_amm_tipo o,
			siac_r_atto_amm_stato p,
			siac_d_atto_amm_stato q,
			siac_r_liquidazione_stato r,
			siac_d_liquidazione_stato s
		where a.liq_id=b.liq_id
		and c.movgest_ts_id=b.movgest_ts_id
		and d.movgest_id=c.movgest_id
		and e.movgest_id=d.movgest_id
		and f.elem_id=e.elem_id
		and g.bil_id=f.bil_id
		and h.periodo_id=g.periodo_id
		and i.liq_id=a.liq_id
		and l.soggetto_id=i.soggetto_id
		and m.liq_id=a.liq_id
		and n.attoamm_id=m.attoamm_id
		and o.attoamm_tipo_id=n.attoamm_tipo_id
		and p.attoamm_id=n.attoamm_id
		and p.attoamm_stato_id=q.attoamm_stato_id
		and r.liq_id=a.liq_id
		and r.liq_stato_id=s.liq_stato_id
		and now() BETWEEN b.validita_inizio and coalesce (b.validita_fine,now())
		and now() BETWEEN e.validita_inizio and coalesce (e.validita_fine,now())
		and now() BETWEEN i.validita_inizio and coalesce (i.validita_fine,now())
		and now() BETWEEN m.validita_inizio and coalesce (m.validita_fine,now())
		and now() BETWEEN p.validita_inizio and coalesce (p.validita_fine,now())
		and now() BETWEEN r.validita_inizio and coalesce (r.validita_fine,now())
		and a.data_cancellazione is null
		and b.data_cancellazione is null
		and c.data_cancellazione is null
		and d.data_cancellazione is null
		and e.data_cancellazione is null
		and f.data_cancellazione is null
		and g.data_cancellazione is null
		and h.data_cancellazione is null
		and i.data_cancellazione is null
		and l.data_cancellazione is null
		and m.data_cancellazione is null
		and n.data_cancellazione is null
		and o.data_cancellazione is null
		and p.data_cancellazione is null
		and q.data_cancellazione is null
		and r.data_cancellazione is null
		and s.data_cancellazione is null
		and q.attoamm_stato_code<>'ANNULLATO'
		AND n.attoamm_id=_uid_provvedimento
		AND h.anno = _anno
	),
	sac as
    (
		select
			y.classif_code,
			y.classif_desc,
			z.attoamm_id
		from
			siac_r_atto_amm_class z,
			siac_t_class y,
			siac_d_class_tipo x
		where z.classif_id=y.classif_id
		and x.classif_tipo_id=y.classif_tipo_id
		and x.classif_tipo_code  IN ('CDC', 'CDR')
		and now() BETWEEN z.validita_inizio and coalesce (z.validita_fine,now())
		and z.data_cancellazione is NULL
		and x.data_cancellazione is NULL
		and y.data_cancellazione is NULL
	),
    -- 02.07.2018 Sofia siac-6193
    cartecont as
    (
        select rcs.soggetto_id, count(*) esiste_carta
        from  siac_r_cartacont_det_soggetto rcs
        where rcs.data_cancellazione is null
        and   rcs.validita_fine is null
        group by rcs.soggetto_id
    ),
    -- 02.07.2018 Sofia jira siac-6193
    split_liq as
    (
      select  rliq.liq_id, count(*) esiste_split
      from siac_r_subdoc_liquidazione rliq,siac_t_subdoc sub,siac_r_doc_onere ronere,
           siac_d_onere onere, siac_d_onere_tipo tipo
      where  tipo.onere_tipo_code!='ES'
      and    onere.onere_tipo_id=tipo.onere_tipo_id
      and    ronere.onere_id=onere.onere_id
      and    sub.doc_id=ronere.doc_id
      and    rliq.subdoc_id=sub.subdoc_id
      and    ronere.data_cancellazione is null
      and    now() between ronere.validita_inizio and coalesce(ronere.validita_fine,now())
      and    sub.data_cancellazione is null
      and    now() between sub.validita_inizio and coalesce(sub.validita_fine,now())
      and    rliq.data_cancellazione is null
      and    now() between rliq.validita_inizio and coalesce(rliq.validita_fine,now())
      group by rliq.liq_id
    ),
    -- 02.07.2018 Sofia jira siac-6193
    attoallegato as
    (
    	select alg.attoal_id,
               alg.attoamm_id,
               alg.data_creazione attoal_data_creazione,
               alg.attoal_data_scadenza,
               stato.attoal_stato_desc
        from   siac_t_atto_allegato alg, siac_r_atto_allegato_stato rs,siac_d_atto_allegato_stato stato
        where alg.attoal_id  = rs.attoal_id
        and   stato.attoal_stato_id  =  rs.attoal_stato_id
        and   alg.data_cancellazione is null
        and   rs.data_cancellazione is null
    ),
    -- 02.07.2018 Sofia jira siac-6193
    modpag_cessione as
    (
        select
          liqCessione.liq_id,
          rrelaz.soggetto_relaz_id,
          sog_cessione.soggetto_code soggetto_cessione_code,
          sog_cessione.soggetto_desc soggetto_cessione_desc,
          dat.accredito_tipo_code,
          dat.accredito_tipo_desc,
          tmod.iban,
          tmod.bic,
          tmod.contocorrente,
          tmod.contocorrente_intestazione,
          tmod.banca_denominazione,
          tmod.quietanziante ,
          tmod.quietanziante_codice_fiscale::varchar,
          drt.relaz_tipo_code,
          drt.relaz_tipo_desc
        from  siac_t_liquidazione liqCessione,
              siac_r_soggetto_relaz rrelaz,
              siac_d_relaz_tipo drt,
              siac_d_oil_relaz_tipo oil, -- 13.07.2018 Sofia jira siac-6193
              siac_r_oil_relaz_tipo roil,
              siac_t_soggetto sog_cessione,
              siac_r_soggrel_modpag rsm,
              siac_t_modpag tmod,
              siac_d_accredito_tipo dat
	    where oil.oil_relaz_tipo_code ='CSI' -- 13.07.2018 Sofia jira siac-6193
        and   roil.oil_relaz_tipo_id=oil.oil_relaz_tipo_id
        and   drt.relaz_tipo_id=roil.relaz_tipo_id
        and   drt.relaz_tipo_id=rrelaz.relaz_tipo_id
        and   sog_cessione.soggetto_id=rrelaz.soggetto_id_a
        and   rsm.soggetto_relaz_id=rrelaz.soggetto_relaz_id
        and   tmod.modpag_id=rsm.modpag_id
        and   dat.accredito_tipo_id = tmod.accredito_tipo_id
        and   liqCessione.soggetto_relaz_id=rrelaz.soggetto_relaz_id
        and   liqCessione.data_cancellazione is null
        and   liqCessione.validita_fine is null
        and   roil.data_cancellazione is null
        and   roil.validita_fine is null
        and   rrelaz.data_cancellazione is null
        and   now()  BETWEEN rrelaz.validita_inizio and coalesce(rrelaz.validita_fine,now())
        and   rsm.data_cancellazione is null
        and   now()  BETWEEN rsm.validita_inizio and coalesce(rsm.validita_fine,now())
        and   tmod.data_cancellazione is null
        and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
    ),
    -- 02.07.2018 Sofia jira siac-6193
    modpag_no_cessione as
    (
		select
            liqModpag.liq_id,
            tmod.modpag_id,
            tipo.accredito_tipo_code,
            tipo.accredito_tipo_desc,
            tmod.iban,
            tmod.bic,
            tmod.contocorrente,
            tmod.contocorrente_intestazione,
            tmod.banca_denominazione,
            tmod.quietanziante,
            tmod.quietanziante_codice_fiscale::varchar
        from  siac_t_liquidazione liqModpag, siac_t_modpag tmod,  siac_d_accredito_tipo tipo
		where tipo.accredito_tipo_id = tmod.accredito_tipo_id
        and   liqModpag.modpag_id=tmod.modpag_id
        and   liqModpag.data_cancellazione is null
        and   liqModpag.validita_fine is null
        and   tmod.data_cancellazione is null
		and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
    ),
    ordinativo as
    (
    with
     ordi as
     (
		-- SIAC-5164
		SELECT
			rlo.liq_id,
			tor.ord_anno,
			tor.ord_numero,
			dos.ord_stato_code,
			dos.ord_stato_desc,
            -- 02.07.2018 Sofia jira siac-6193
            -- La data di emissione ordinativo
			tor.ord_emissione_data,
            tor.ord_id,
            tor.ord_tipo_id
		FROM
			siac_r_liquidazione_ord rlo,
			siac_t_ordinativo_ts tot,
			siac_t_ordinativo tor,
			siac_r_ordinativo_stato ros,
			siac_d_ordinativo_stato dos
		WHERE rlo.sord_id = tot.ord_ts_id
		AND tot.ord_id = tor.ord_id
		AND ros.ord_id = tor.ord_id
		AND dos.ord_stato_id = ros.ord_stato_id
		AND now() BETWEEN rlo.validita_inizio AND COALESCE (rlo.validita_fine, now())
		AND now() BETWEEN ros.validita_inizio AND COALESCE (ros.validita_fine, now())
		AND rlo.data_cancellazione IS NULL
		AND tot.data_cancellazione IS NULL
		AND tor.data_cancellazione IS NULL
		AND ros.data_cancellazione IS NULL
		AND dos.data_cancellazione IS NULL
		AND dos.ord_stato_code <> 'A'
	 ),
     -- 02.07.2018 Sofia jira siac-6193
     ord_quietanza AS
     (
      SELECT r.ord_id, max(r.ord_quietanza_data) ord_quietanza_data
	  FROM siac_r_ordinativo_quietanza r
	  WHERE r.data_cancellazione  is null
      and   now() between r.validita_inizio and coalesce(r.validita_fine, now())
      group by r.ord_id
     ),
     -- 02.07.2018 Sofia jira siac-6193
     ord_modpag_cessione as
     (
        select
          rmdp.ord_id,
          rrelaz.soggetto_relaz_id,
          sog_cessione.soggetto_code soggetto_cessione_code,
          sog_cessione.soggetto_desc soggetto_cessione_desc,
          dat.accredito_tipo_code,
          dat.accredito_tipo_desc,
          tmod.iban,
          tmod.bic,
          tmod.contocorrente,
          tmod.contocorrente_intestazione,
          tmod.banca_denominazione,
          tmod.quietanziante ,
          tmod.quietanziante_codice_fiscale::varchar,
          drt.relaz_tipo_code,
          drt.relaz_tipo_desc
        from  siac_r_soggetto_relaz rrelaz,
              siac_d_relaz_tipo drt,
              siac_d_oil_relaz_tipo oil, -- 13.07.2018 Sofia jira siac-6193
              siac_r_oil_relaz_tipo roil,
              siac_t_soggetto sog_cessione,
              siac_r_soggrel_modpag rsm,
              siac_t_modpag tmod,
              siac_d_accredito_tipo dat,
              siac_r_ordinativo_modpag rmdp
	    where oil.oil_relaz_tipo_code ='CSI' -- 13.07.2018 Sofia jira siac-6193
        and   roil.oil_relaz_tipo_id=oil.oil_relaz_tipo_id
        and   drt.relaz_tipo_id=roil.relaz_tipo_id
        and   drt.relaz_tipo_id=rrelaz.relaz_tipo_id
        and   sog_cessione.soggetto_id=rrelaz.soggetto_id_a
        and   rsm.soggetto_relaz_id=rrelaz.soggetto_relaz_id
        and   tmod.modpag_id=rsm.modpag_id
        and   dat.accredito_tipo_id = tmod.accredito_tipo_id
        and   rmdp.soggetto_relaz_id=rrelaz.soggetto_relaz_id
        and   rmdp.data_cancellazione is null
        and   rmdp.validita_fine is null
        and   roil.data_cancellazione is null
        and   roil.validita_fine is null
        and   rrelaz.data_cancellazione is null
        and   now()  BETWEEN rrelaz.validita_inizio and coalesce(rrelaz.validita_fine,now())
        and   rsm.data_cancellazione is null
        and   now()  BETWEEN rsm.validita_inizio and coalesce(rsm.validita_fine,now())
        and   tmod.data_cancellazione is null
        and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
     ),
     -- 02.07.2018 Sofia jira siac-6193
     ord_modpag_no_cessione as
     (
		select
            rModpag.ord_id,
            tmod.modpag_id,
            tipo.accredito_tipo_code,
            tipo.accredito_tipo_desc,
            tmod.iban,
            tmod.bic,
            tmod.contocorrente,
            tmod.contocorrente_intestazione,
            tmod.banca_denominazione,
            tmod.quietanziante,
            tmod.quietanziante_codice_fiscale::varchar
        from  siac_r_ordinativo_modpag rModpag, siac_t_modpag tmod,  siac_d_accredito_tipo tipo
		where tipo.accredito_tipo_id = tmod.accredito_tipo_id
        and   rModpag.modpag_id=tmod.modpag_id
        and   rModpag.data_cancellazione is null
        and   rModpag.validita_fine is null
        and   tmod.data_cancellazione is null
		and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
     ),
     -- 12.07.2018 Sofia jira siac-6193
     ord_soggetto_ord as
     (
     select rsog.ord_id,
            sog.soggetto_code ord_soggetto_code,
            sog.soggetto_desc ord_soggetto_desc
     from siac_r_ordinativo_soggetto rsog,
          siac_t_soggetto sog
     where sog.soggetto_id=rsog.soggetto_id
     and   rsog.data_cancellazione is null
     and   now()  BETWEEN rsog.validita_inizio and coalesce(rsog.validita_fine,now())
     )
     select ordi.*,
            ord_quietanza.ord_quietanza_data,
            -- 12.07.2018 Sofia jira siac-6193
            ord_soggetto_ord.ord_soggetto_code,
            ord_soggetto_ord.ord_soggetto_desc,
            -- MDP - no  cessione
	        -- Accredito tipo - no cessione
    	    ord_modpag_no_cessione.accredito_tipo_code ord_accredito_tipo_code,
            ord_modpag_no_cessione.accredito_tipo_desc ord_accredito_tipo_desc,
	        -- Modalita di pagamento
    	    -- IBAN
        	ord_modpag_no_cessione.iban ord_iban,
	        -- BIC
    	    ord_modpag_no_cessione.bic ord_bic,
	        -- contocorrente
    	    ord_modpag_no_cessione.contocorrente ord_contocorrente,
        	-- contocorrente_intestazione
	        ord_modpag_no_cessione.contocorrente_intestazione ord_contocorrente_intestazione,
    	    -- banca_denominazione
        	ord_modpag_no_cessione.banca_denominazione ord_banca_denominazione,
	        -- quietanzante
    	    ord_modpag_no_cessione.quietanziante ord_quietanzante,
        	-- quietanzante_codice_fiscale
	        ord_modpag_no_cessione.quietanziante_codice_fiscale ord_quietanzante_codice_fiscale,
            -- Estremi soggetto cessione
       		ord_modpag_cessione.soggetto_cessione_code ord_soggetto_cessione_code,
	        ord_modpag_cessione.soggetto_cessione_desc ord_soggetto_cessione_desc,
    	    -- Relazione Soggetto
	        ord_modpag_cessione.relaz_tipo_code ord_relaz_tipo_code,
        	ord_modpag_cessione.relaz_tipo_desc ord_relaz_tipo_desc,
	        -- Accredito tipo - se CESSIONE - valorizzato con Relazione
    	    ord_modpag_cessione.accredito_tipo_code ord_accredito_tipo_code_cess,
            ord_modpag_cessione.accredito_tipo_desc ord_accredito_tipo_desc_cess,
	        -- Modalita di pagamento
    	    -- IBAN
            ord_modpag_cessione.iban ord_iban_cess,
	        -- BIC
        	ord_modpag_cessione.bic ord_bic_cess,
	        -- contocorrente
            ord_modpag_cessione.contocorrente ord_contocorrente_cess,
        	-- contocorrente_intestazione
            ord_modpag_cessione.contocorrente_intestazione ord_contocorrente_intestazione_cess,
    	    -- banca_denominazione
            ord_modpag_cessione.banca_denominazione ord_banca_denominazione_cess,
	        -- quietanzante
            ord_modpag_cessione.quietanziante ord_quietanzante_cess,
        	-- quietanzante_codice_fiscale
            ord_modpag_cessione.quietanziante_codice_fiscale ord_quietanzante_codice_fiscale_cess
     from siac_d_ordinativo_tipo tipo,
          ordi
          left join ord_quietanza on (ordi.ord_id=ord_quietanza.ord_id)
          left join ord_modpag_no_cessione on (ordi.ord_id=ord_modpag_no_cessione.ord_id)
          left join ord_modpag_cessione on (ordi.ord_id=ord_modpag_cessione.ord_id)
          -- 12.07.2018 Sofia jira siac-6193
          join ord_soggetto_ord on (ord_soggetto_ord.ord_id=ordi.ord_id)
     where tipo.ord_tipo_code='P'
     and   ordi.ord_tipo_id=tipo.ord_tipo_id
    )
	select
		liq.liq_id,
		liq.liq_anno,
		liq.liq_numero,
		liq.liq_desc,
		liq.liq_stato,
		liq.elem_id as uid_capitolo,
		liq.anno as capitolo_anno,
		liq.elem_code as capitolo_numero,
		liq.elem_code2 as capitolo_articolo,
		liq.elem_code3 as ueb_numero,
		liq.movgest_anno,
		liq.movgest_numero,
		liq.movgest_ts_code,
		liq.liq_importo,
		liq.soggetto_code,
		liq.soggetto_desc,
		liq.attoamm_numero,
		liq.attoamm_anno,
		liq.attoamm_oggetto,
		liq.attoamm_tipo_code,
		liq.attoamm_tipo_desc,
		liq.attoamm_stato_desc,
		sac.classif_code,
		sac.classif_desc,
        -- 02.07.2018 Sofia jira siac-6193
		ordinativo.ord_anno,
		ordinativo.ord_numero,
		ordinativo.ord_stato_code,
		ordinativo.ord_stato_desc,
        -- 02.07.2018 Sofia jira siac-6193
        liq.sog_codice_fiscale,
        liq.sog_partita_iva ,
        (CASE WHEN  coalesce(cartecont.esiste_carta,0)=0 THEN 'N'::varchar ELSE 'S'::varchar END )  carte_contabili ,
		-- Data di inserimento dell atto contabile (la medesima data che viene riportata in stampa dell'ALG)
        attoallegato.attoal_data_creazione,
        -- Data di scadenza dell atto contabile
        attoallegato.attoal_data_scadenza ,
        -- Stato dell atto contabile
		attoallegato.attoal_stato_desc,
        -- MDP - no cessione
        -- Accredito tipo - no CESSIONE
        modpag_no_cessione.accredito_tipo_code,
        modpag_no_cessione.accredito_tipo_desc,
        -- Modalita di pagamento
        -- IBAN
        modpag_no_cessione.iban,
        -- BIC
        modpag_no_cessione.bic,
        -- contocorrente
        modpag_no_cessione.contocorrente,
        -- contocorrente_intestazione
        modpag_no_cessione.contocorrente_intestazione,
        -- banca_denominazione
        modpag_no_cessione.banca_denominazione,
        -- quietanzante
        modpag_no_cessione.quietanziante quietanzante,
        -- quietanzante_codice_fiscale
        modpag_no_cessione.quietanziante_codice_fiscale quietanzante_codice_fiscale,
        -- MDP - CESSIONE
        -- Estremi soggetto cessione
        modpag_cessione.soggetto_cessione_code,
        modpag_cessione.soggetto_cessione_desc,
        -- Relazione Soggetto
        modpag_cessione.relaz_tipo_code,
        modpag_cessione.relaz_tipo_desc,
        -- Accredito tipo - CESSIONE
        modpag_cessione.accredito_tipo_code accredito_tipo_code_cess,
        modpag_cessione.accredito_tipo_desc accredito_tipo_desc_cess,
        -- Modalita di pagamento
        -- IBAN
        modpag_cessione.iban iban_cess,
        -- BIC
        modpag_cessione.bic bic_cess,
        -- contocorrente
        modpag_cessione.contocorrente contocorrente_cess,
        -- contocorrente_intestazione
        modpag_cessione.contocorrente_intestazione contocorrente_intestazione_cess,
        -- banca_denominazione
        modpag_cessione.banca_denominazione banca_denominazione_cess,
        -- quietanzante
        modpag_cessione.quietanziante quietanzante_cess,
        -- quietanzante_codice_fiscale
        modpag_cessione.quietanziante_codice_fiscale quietanzante_codice_fiscale_cess,
        (CASE WHEN  coalesce(split_liq.esiste_split,0)=0 THEN 'N'::varchar ELSE 'S'::varchar END )  liq_esiste_split ,
        -- Ordinativo
        -- La data di emissione ordinativo
        ordinativo.ord_emissione_data,
        -- La data di quietanza ordinativo
        ordinativo.ord_quietanza_data,
        -- 12.07.2018 Sofia jira siac-6193
        ordinativo.ord_soggetto_code,
        ordinativo.ord_soggetto_desc,
        -- MDP ordinativo
        ordinativo.ord_accredito_tipo_code,
        ordinativo.ord_accredito_tipo_desc,
        ordinativo.ord_iban,
        ordinativo.ord_bic,
        ordinativo.ord_contocorrente,
        ordinativo.ord_contocorrente_intestazione,
        ordinativo.ord_banca_denominazione,
        ordinativo.ord_quietanzante,
        ordinativo.ord_quietanzante_codice_fiscale,
        -- MDP - CESSIONE
        -- Estremi soggetto cessione
        ordinativo.ord_soggetto_cessione_code,
        ordinativo.ord_soggetto_cessione_desc,
        -- Relazione soggetto cessione
        ordinativo.ord_relaz_tipo_code,
        ordinativo.ord_relaz_tipo_desc,
        -- MDP ordinativo
        ordinativo.ord_accredito_tipo_code_cess,
        ordinativo.ord_accredito_tipo_desc_cess,
        ordinativo.ord_iban_cess,
        ordinativo.ord_bic_cess,
        ordinativo.ord_contocorrente_cess,
        ordinativo.ord_contocorrente_intestazione_cess,
        ordinativo.ord_banca_denominazione_cess,
        ordinativo.ord_quietanzante_cess,
        ordinativo.ord_quietanzante_codice_fiscale_cess
	from liq
		 left outer join sac on liq.attoamm_id=sac.attoamm_id
	  	 left outer join ordinativo on ordinativo.liq_id = liq.liq_id
         -- 02.07.2018 Sofia jira siac-6193
         left outer join cartecont on liq.soggetto_id=cartecont.soggetto_id
         left outer join  split_liq on (liq.liq_id = split_liq.liq_id)
         left outer join  attoallegato on  (liq.attoamm_id = attoallegato.attoamm_id)
  	     left outer join  modpag_no_cessione on  (liq.liq_id =  modpag_no_cessione.liq_id)
         left outer join  modpag_cessione on ( liq.liq_id = modpag_cessione.liq_id)
	ORDER BY 2,3,5,7,8,9,10
	LIMIT _limit
	OFFSET _offset;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--16

DROP FUNCTION IF EXISTS fnc_siac_cons_entita_liquidazione_from_soggetto ( _uid_soggetto integer, _anno varchar, _limit integer, _page integer);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_liquidazione_from_soggetto (
  _uid_soggetto integer,
  _anno varchar,
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  liq_anno integer,
  liq_numero numeric,
  liq_desc varchar,
  liq_stato varchar,
  uid_capitolo integer,
  capitolo_anno varchar,
  capitolo_numero varchar,
  capitolo_articolo varchar,
  num_ueb varchar,
  movgest_anno integer,
  movgest_numero numeric,
  movgest_ts_code varchar,
  liq_importo numeric,
  soggetto_code varchar,
  soggetto_desc varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_oggetto varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  ord_anno integer,
  ord_numero numeric,
  ord_stato_code varchar,
  ord_stato_desc varchar,
  -- 02.07.2018 Sofia siac-6193
  -- Il codice fiscale e la partita Iva del soggetto
  sog_codice_fiscale varchar,
  sog_partita_iva varchar,
  -- Soggetto avente carte contabili
  carte_contabili varchar,
  -- Data creazione dell atto contabile
  attoal_data_creazione timestamp,
  -- Data di scadenza dell atto contabile
  attoal_data_scadenza timestamp,
  -- Stato dell atto contabile
  attoal_stato_desc varchar,
  -- MDP - no cessione
  accredito_tipo_code varchar,
  accredito_tipo_desc varchar,
  iban VARCHAR,
  bic varchar,
  contocorrente varchar,
  contocorrente_intestazione varchar,
  banca_denominazione varchar,
  quietanzante varchar,
  quietanzante_codice_fiscale varchar,
  -- MDP - cessione
  -- Estremi soggetto cessione
  soggetto_cessione_code varchar,
  soggetto_cessione_desc varchar,
  -- Relazione soggetti CSI, CSC
  relaz_tipo_code   varchar,
  relaz_tipo_desc   varchar,
  -- MDP - in caso di cessione dati MDP di cessione
  accredito_tipo_code_cess varchar,
  accredito_tipo_desc_cess varchar,
  iban_cess VARCHAR,
  bic_cess varchar,
  contocorrente_cess varchar,
  contocorrente_intestazione_cess varchar,
  banca_denominazione_cess varchar,
  quietanzante_cess varchar,
  quietanzante_codice_fiscale_cess varchar,
  -- Indicazione se la liquidazione presenta split/ritenute - collegamento a documenti con oneri !=ES
  liq_esiste_split varchar,
  -- Ordinativo
  -- La data di emissione ordinativo
  ord_emissione_data timestamp,
  -- La data di quietanza ordinativo
  ord_quietanza_data timestamp,
  -- 12.07.2018 Sofia jira siac-6193
  -- estremi soggetto ordinativo
  ord_soggetto_code varchar,
  ord_soggetto_desc varchar,
  -- MDP - no cessione
  ord_accredito_tipo_code varchar,
  ord_accredito_tipo_desc varchar,
  ord_iban VARCHAR,
  ord_bic varchar,
  ord_contocorrente varchar,
  ord_contocorrente_intestazione varchar,
  ord_banca_denominazione varchar,
  ord_quietanzante varchar,
  ord_quietanzante_codice_fiscale varchar,
  -- Estremi soggetto cessione
  ord_soggetto_cessione_code varchar,
  ord_soggetto_cessione_desc varchar,
  -- Relazione soggetti CSI, CSC
  ord_relaz_tipo_code   varchar,
  ord_relaz_tipo_desc   varchar,
  -- MDP - in caso di cessione dati MDP di cessione
  ord_accredito_tipo_code_cess varchar,
  ord_accredito_tipo_desc_cess varchar,
  ord_iban_cess VARCHAR,
  ord_bic_cess varchar,
  ord_contocorrente_cess varchar,
  ord_contocorrente_intestazione_cess varchar,
  ord_banca_denominazione_cess varchar,
  ord_quietanzante_cess varchar,
  ord_quietanzante_codice_fiscale_cess varchar
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
    v_ente_proprietario_id integer;
BEGIN

	select ente_proprietario_id into v_ente_proprietario_id from  siac_t_soggetto where soggetto_id = _uid_soggetto;  

	RETURN QUERY
    with liq as
    (
		select
			a.liq_id,
			a.liq_anno,
			a.liq_numero,
			a.liq_desc,
			s.liq_stato_desc liq_stato,
			f.elem_id,
			h.anno,
			f.elem_code,
			f.elem_code2,
			f.elem_code3,
			d.movgest_anno,
			d.movgest_numero,
			c.movgest_ts_code,
			a.liq_importo,
			l.soggetto_code,
			l.soggetto_desc,
			n.attoamm_numero,
			n.attoamm_anno,
            n.attoamm_oggetto,
			o.attoamm_tipo_code,
			o.attoamm_tipo_desc,
			q.attoamm_stato_desc,
			n.attoamm_id,
            -- 02.07.2018 Sofia jira siac-6193
            l.soggetto_id,
            l.codice_fiscale::varchar sog_codice_fiscale,
            l.partita_iva sog_partita_iva
		from
			siac_t_liquidazione a,
			siac_r_liquidazione_movgest b,
			siac_t_movgest_ts c,
			siac_t_movgest d,
			siac_r_movgest_bil_elem e,
			siac_t_bil_elem f,
			siac_t_bil g,
			siac_t_periodo h,
			siac_r_liquidazione_soggetto i,
			siac_t_soggetto l,
			siac_r_liquidazione_atto_amm m,
			siac_t_atto_amm n,
			siac_d_atto_amm_tipo o,
			siac_r_atto_amm_stato p,
			siac_d_atto_amm_stato q,
			siac_r_liquidazione_stato r,
			siac_d_liquidazione_stato s
		where a.liq_id=b.liq_id
		and c.movgest_ts_id=b.movgest_ts_id
		and d.movgest_id=c.movgest_id
		and e.movgest_id=d.movgest_id
		and f.elem_id=e.elem_id
		and g.bil_id=f.bil_id
		and h.periodo_id=g.periodo_id
		and i.liq_id=a.liq_id
		and l.soggetto_id=i.soggetto_id
		and m.liq_id=a.liq_id
		and n.attoamm_id=m.attoamm_id
		and o.attoamm_tipo_id=n.attoamm_tipo_id
		and p.attoamm_id=n.attoamm_id
		and p.attoamm_stato_id=q.attoamm_stato_id
		and r.liq_id=a.liq_id
		and r.liq_stato_id=s.liq_stato_id
        and a.ente_proprietario_id = v_ente_proprietario_id
		and now() BETWEEN b.validita_inizio and coalesce (b.validita_fine,now())
		and now() BETWEEN e.validita_inizio and coalesce (e.validita_fine,now())
		and now() BETWEEN i.validita_inizio and coalesce (i.validita_fine,now())
		and now() BETWEEN m.validita_inizio and coalesce (m.validita_fine,now())
		and now() BETWEEN p.validita_inizio and coalesce (p.validita_fine,now())
		and now() BETWEEN r.validita_inizio and coalesce (r.validita_fine,now())
		and a.data_cancellazione is null
		and b.data_cancellazione is null
		and c.data_cancellazione is null
		and d.data_cancellazione is null
		and e.data_cancellazione is null
		and f.data_cancellazione is null
		and g.data_cancellazione is null
		and h.data_cancellazione is null
		and i.data_cancellazione is null
		and l.data_cancellazione is null
		and m.data_cancellazione is null
		and n.data_cancellazione is null
		and o.data_cancellazione is null
		and p.data_cancellazione is null
		and q.data_cancellazione is null
		and q.attoamm_stato_code<>'ANNULLATO'
		AND l.soggetto_id=_uid_soggetto
		and h.anno = _anno
	),
	sac as
    (
	select
			y.classif_code,
			y.classif_desc,
			z.attoamm_id
		from
			siac_t_class y,
			siac_d_class_tipo x,
			siac_r_atto_amm_class z
		where x.classif_tipo_id=y.classif_tipo_id
        and y.classif_id=z.classif_id
        and y.ente_proprietario_id = v_ente_proprietario_id
		and x.classif_tipo_code  IN ('CDC', 'CDR')
		and now() BETWEEN z.validita_inizio and coalesce (z.validita_fine,now())
		and z.data_cancellazione is NULL
		and y.data_cancellazione is NULL
		and x.data_cancellazione is NULL
	),
    -- 02.07.2018 Sofia siac-6193
    cartecont as
    (
        select rcs.soggetto_id, count(*) esiste_carta
        from  siac_r_cartacont_det_soggetto rcs
        where
        	rcs.ente_proprietario_id = v_ente_proprietario_id 
        and rcs.data_cancellazione is null
        and rcs.validita_fine is null
        group by rcs.soggetto_id
    ),
    -- 02.07.2018 Sofia jira siac-6193
    split_liq as
    (
      select  rliq.liq_id, count(*) esiste_split
      from siac_r_subdoc_liquidazione rliq,siac_t_subdoc sub,siac_r_doc_onere ronere,
           siac_d_onere onere, siac_d_onere_tipo tipo
      where  tipo.onere_tipo_code!='ES'
      and    onere.onere_tipo_id=tipo.onere_tipo_id
      and    ronere.onere_id=onere.onere_id
      and    sub.doc_id=ronere.doc_id
      and    rliq.subdoc_id=sub.subdoc_id
      and    onere.ente_proprietario_id = v_ente_proprietario_id
      and    ronere.data_cancellazione is null
      and    now() between ronere.validita_inizio and coalesce(ronere.validita_fine,now())
      and    sub.data_cancellazione is null
      and    now() between sub.validita_inizio and coalesce(sub.validita_fine,now())
      and    rliq.data_cancellazione is null
      and    now() between rliq.validita_inizio and coalesce(rliq.validita_fine,now())
      group by rliq.liq_id
    ),
    -- 02.07.2018 Sofia jira siac-6193
    attoallegato as
    (
        select alg.attoal_id,
               alg.attoamm_id,
               alg.data_creazione attoal_data_creazione,
               alg.attoal_data_scadenza,
               stato.attoal_stato_desc
        from   siac_t_atto_allegato alg, siac_r_atto_allegato_stato rs,siac_d_atto_allegato_stato stato
        where alg.attoal_id  = rs.attoal_id
        and   stato.attoal_stato_id  =  rs.attoal_stato_id
        and   alg.ente_proprietario_id = v_ente_proprietario_id
        and   alg.data_cancellazione is null
        and   rs.data_cancellazione is null
        and   stato.data_cancellazione is null
        
    ),
    -- 02.07.2018 Sofia jira siac-6193
    modpag_cessione as
    (
        select
          liqCessione.liq_id,
          rrelaz.soggetto_relaz_id,
          sog_cessione.soggetto_code soggetto_cessione_code,
          sog_cessione.soggetto_desc soggetto_cessione_desc,
          dat.accredito_tipo_code,
          dat.accredito_tipo_desc,
          tmod.iban,
          tmod.bic,
          tmod.contocorrente,
          tmod.contocorrente_intestazione,
          tmod.banca_denominazione,
          tmod.quietanziante ,
          tmod.quietanziante_codice_fiscale::varchar,
          drt.relaz_tipo_code,
          drt.relaz_tipo_desc
        from  siac_t_liquidazione liqCessione,
              siac_r_soggetto_relaz rrelaz,
              siac_d_relaz_tipo drt,
              siac_d_oil_relaz_tipo oil, siac_r_oil_relaz_tipo roil, -- 13.07.2018 Sofia jira siac-6193
              siac_t_soggetto sog_cessione,
              siac_r_soggrel_modpag rsm,
              siac_t_modpag tmod,
              siac_d_accredito_tipo dat
	    where oil.oil_relaz_tipo_code ='CSI' -- 13.07.2018 Sofia jira siac-6193
        and   roil.oil_relaz_tipo_id=oil.oil_relaz_tipo_id
        and   drt.relaz_tipo_id=roil.relaz_tipo_id
        and   drt.relaz_tipo_id=rrelaz.relaz_tipo_id
        and   sog_cessione.soggetto_id=rrelaz.soggetto_id_a
        and   rrelaz.soggetto_id_da=_uid_soggetto
        and   rsm.soggetto_relaz_id=rrelaz.soggetto_relaz_id
        and   tmod.modpag_id=rsm.modpag_id
        and   dat.accredito_tipo_id = tmod.accredito_tipo_id
        and   liqCessione.soggetto_relaz_id=rrelaz.soggetto_relaz_id
        and   liqCessione.ente_proprietario_id = v_ente_proprietario_id
        and   liqCessione.data_cancellazione is null
        and   liqCessione.validita_fine is null
        and   roil.data_cancellazione is null
        and   roil.validita_fine is null
        and   rrelaz.data_cancellazione is null
        and   now()  BETWEEN rrelaz.validita_inizio and coalesce(rrelaz.validita_fine,now())
        and   rsm.data_cancellazione is null
        and   now()  BETWEEN rsm.validita_inizio and coalesce(rsm.validita_fine,now())
        and   tmod.data_cancellazione is null
        and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
    ),
    -- 02.07.2018 Sofia jira siac-6193
    modpag_no_cessione as
    (
        select
            liqModpag.liq_id,
            tmod.modpag_id,
            tipo.accredito_tipo_code,
            tipo.accredito_tipo_desc,
            tmod.iban,
            tmod.bic,
            tmod.contocorrente,
            tmod.contocorrente_intestazione,
            tmod.banca_denominazione,
            tmod.quietanziante,
            tmod.quietanziante_codice_fiscale::varchar
        from  siac_t_liquidazione liqModpag, siac_t_modpag tmod,  siac_d_accredito_tipo tipo
		where tipo.accredito_tipo_id = tmod.accredito_tipo_id
        and   liqModpag.modpag_id=tmod.modpag_id
        and   tmod.soggetto_id = _uid_soggetto
        and   liqModpag.data_cancellazione is null
        and   tmod.data_cancellazione is null
        and   tipo.data_cancellazione is null
        and   liqModpag.validita_fine is null
        and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
    ),
    ordinativo as
    (
    with
    ordi as
    (
		-- SIAC-5164
		SELECT
			rlo.liq_id,
			tor.ord_anno,
			tor.ord_numero,
			dos.ord_stato_code,
			dos.ord_stato_desc,
            -- 02.07.2018 Sofia jira siac-6193
            -- La data di emissione ordinativo
			tor.ord_emissione_data,
            tor.ord_id,
            tor.ord_tipo_id
		FROM
			siac_r_liquidazione_ord rlo,
			siac_t_ordinativo_ts tot,
			siac_t_ordinativo tor,
			siac_r_ordinativo_stato ros,
			siac_d_ordinativo_stato dos
		WHERE rlo.sord_id = tot.ord_ts_id
		AND tot.ord_id = tor.ord_id
		AND ros.ord_id = tor.ord_id
		AND dos.ord_stato_id = ros.ord_stato_id
        and tor.ente_proprietario_id = v_ente_proprietario_id
		AND now() BETWEEN rlo.validita_inizio AND COALESCE (rlo.validita_fine, now())
		AND now() BETWEEN ros.validita_inizio AND COALESCE (ros.validita_fine, now())
		AND rlo.data_cancellazione IS NULL
		AND tot.data_cancellazione IS NULL
		AND tor.data_cancellazione IS NULL
		AND ros.data_cancellazione IS NULL
		AND dos.data_cancellazione IS NULL
		AND dos.ord_stato_code <> 'A'
    ),
    -- 02.07.2018 Sofia jira siac-6193
    ord_quietanza AS
    (
      SELECT r.ord_id, max(r.ord_quietanza_data) ord_quietanza_data
	  FROM siac_r_ordinativo_quietanza r
	  WHERE r.data_cancellazione  is null
      and r.ente_proprietario_id = v_ente_proprietario_id
      and   now() between r.validita_inizio and coalesce(r.validita_fine, now())
      group by r.ord_id
    ),
    -- 02.07.2018 Sofia jira siac-6193
    ord_modpag_cessione as
    (
        select
          rmdp.ord_id,
          rrelaz.soggetto_relaz_id,
          sog_cessione.soggetto_code soggetto_cessione_code,
          sog_cessione.soggetto_desc soggetto_cessione_desc,
          dat.accredito_tipo_code,
          dat.accredito_tipo_desc,
          tmod.iban,
          tmod.bic,
          tmod.contocorrente,
          tmod.contocorrente_intestazione,
          tmod.banca_denominazione,
          tmod.quietanziante ,
          tmod.quietanziante_codice_fiscale::varchar,
          drt.relaz_tipo_code,
          drt.relaz_tipo_desc
        from  siac_r_soggetto_relaz rrelaz,
              siac_d_relaz_tipo drt,
              siac_d_oil_relaz_tipo oil, siac_r_oil_relaz_tipo roil, -- 13.07.2018 Sofia jira siac-6193
              siac_t_soggetto sog_cessione,
              siac_r_soggrel_modpag rsm,
              siac_t_modpag tmod,
              siac_d_accredito_tipo dat,
              siac_r_ordinativo_modpag rmdp
	    where oil.oil_relaz_tipo_code ='CSI' -- 13.07.2018 Sofia jira siac-6193
        and   roil.oil_relaz_tipo_id=oil.oil_relaz_tipo_id
        and   drt.relaz_tipo_id=roil.relaz_tipo_id
        and   drt.relaz_tipo_id=rrelaz.relaz_tipo_id
        and   sog_cessione.soggetto_id=rrelaz.soggetto_id_a
        and   rsm.soggetto_relaz_id=rrelaz.soggetto_relaz_id
        and   tmod.modpag_id=rsm.modpag_id
        and   dat.accredito_tipo_id = tmod.accredito_tipo_id
        and   rmdp.soggetto_relaz_id=rrelaz.soggetto_relaz_id
        and   sog_Cessione.ente_proprietario_id = v_ente_proprietario_id
        and   rmdp.data_cancellazione is null
        and   rmdp.validita_fine is null
        and   roil.data_cancellazione is null
        and   roil.validita_fine is null
        and   rrelaz.data_cancellazione is null
        and   now()  BETWEEN rrelaz.validita_inizio and coalesce(rrelaz.validita_fine,now())
        and   rsm.data_cancellazione is null
        and   now()  BETWEEN rsm.validita_inizio and coalesce(rsm.validita_fine,now())
        and   tmod.data_cancellazione is null
        and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
    ),
    -- 02.07.2018 Sofia jira siac-6193
    ord_modpag_no_cessione as
    (
		select
            rModpag.ord_id,
            tmod.modpag_id,
            tipo.accredito_tipo_code,
            tipo.accredito_tipo_desc,
            tmod.iban,
            tmod.bic,
            tmod.contocorrente,
            tmod.contocorrente_intestazione,
            tmod.banca_denominazione,
            tmod.quietanziante,
            tmod.quietanziante_codice_fiscale::varchar
        from  siac_r_ordinativo_modpag rModpag, siac_t_modpag tmod,  siac_d_accredito_tipo tipo
		where tipo.accredito_tipo_id = tmod.accredito_tipo_id
        and   rModpag.modpag_id=tmod.modpag_id
        and   tmod.ente_proprietario_id = v_ente_proprietario_id
        and   rModpag.data_cancellazione is null
        and   rModpag.validita_fine is null
        and   tmod.data_cancellazione is null
		and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
    ),
         -- 12.07.2018 Sofia jira siac-6193
     ord_soggetto_ord as
     (
     select rsog.ord_id,
            sog.soggetto_code ord_soggetto_code,
            sog.soggetto_desc ord_soggetto_desc
     from siac_r_ordinativo_soggetto rsog,
          siac_t_soggetto sog
     where sog.soggetto_id=rsog.soggetto_id
     and   sog.ente_proprietario_id = v_ente_proprietario_id
     and   rsog.data_cancellazione is null
     and   now()  BETWEEN rsog.validita_inizio and coalesce(rsog.validita_fine,now())
     )
    select ordi.*,
            ord_quietanza.ord_quietanza_data,
            -- 12.07.2018 Sofia jira siac-6193
            ord_soggetto_ord.ord_soggetto_code,
            ord_soggetto_ord.ord_soggetto_desc,
			-- Accredito tipo - no CESSIONE
            ord_modpag_no_cessione.accredito_tipo_code ord_accredito_tipo_code,
        	ord_modpag_no_cessione.accredito_tipo_desc ord_accredito_tipo_desc,
	        -- Modalita di pagamento
    	    -- IBAN
        	ord_modpag_no_cessione.iban ord_iban,
	        -- BIC
    	    ord_modpag_no_cessione.bic ord_bic,
	        -- contocorrente
    	    ord_modpag_no_cessione.contocorrente ord_contocorrente,
        	-- contocorrente_intestazione
	        ord_modpag_no_cessione.contocorrente_intestazione ord_contocorrente_intestazione,
    	    -- banca_denominazione
        	ord_modpag_no_cessione.banca_denominazione ord_banca_denominazione,
	        -- quietanzante
    	    ord_modpag_no_cessione.quietanziante ord_quietanzante,
        	-- quietanzante_codice_fiscale
	        ord_modpag_no_cessione.quietanziante_codice_fiscale ord_quietanzante_codice_fiscale,
            -- Estremi soggetto cessione
       		ord_modpag_cessione.soggetto_cessione_code ord_soggetto_cessione_code,
	        ord_modpag_cessione.soggetto_cessione_desc ord_soggetto_cessione_desc,
    	    -- Relazione Soggetto
	        ord_modpag_cessione.relaz_tipo_code ord_relaz_tipo_code,
        	ord_modpag_cessione.relaz_tipo_desc ord_relaz_tipo_desc,
	        -- Accredito tipo - CESSIONE
            ord_modpag_cessione.accredito_tipo_code ord_accredito_tipo_code_cess,
        	ord_modpag_cessione.accredito_tipo_desc ord_accredito_tipo_desc_cess,
	        -- Modalita di pagamento cessione
    	    -- IBAN
            ord_modpag_cessione.iban ord_iban_cess,
	        -- BIC
        	ord_modpag_cessione.bic ord_bic_cess,
	        -- contocorrente
            ord_modpag_cessione.contocorrente ord_contocorrente_cess,
        	-- contocorrente_intestazione
            ord_modpag_cessione.contocorrente_intestazione ord_contocorrente_intestazione_cess,
    	    -- banca_denominazione
            ord_modpag_cessione.banca_denominazione ord_banca_denominazione_cess,
	        -- quietanzante
            ord_modpag_cessione.quietanziante ord_quietanzante_cess,
        	-- quietanzante_codice_fiscale
            ord_modpag_cessione.quietanziante_codice_fiscale ord_quietanzante_codice_fiscale_cess
     from siac_d_ordinativo_tipo tipo,
          ordi
          left join ord_quietanza on (ordi.ord_id=ord_quietanza.ord_id)
          left join ord_modpag_no_cessione on (ordi.ord_id=ord_modpag_no_cessione.ord_id)
          left join ord_modpag_cessione on (ordi.ord_id=ord_modpag_cessione.ord_id)
          -- 12.07.2018 Sofia jira siac-6193
          join ord_soggetto_ord on (ord_soggetto_ord.ord_id=ordi.ord_id)
     where tipo.ord_tipo_code='P'
     and   tipo.ente_proprietario_id = v_ente_proprietario_id
     and   ordi.ord_tipo_id=tipo.ord_tipo_id
    )
	select
		liq.liq_id,
		liq.liq_anno,
		liq.liq_numero,
		liq.liq_desc,
		liq.liq_stato,
		liq.elem_id as uid_capitolo,
		liq.anno as capitolo_anno,
		liq.elem_code as capitolo_numero,
		liq.elem_code2 as capitolo_articolo,
		liq.elem_code3 as ueb_numero,
		liq.movgest_anno,
		liq.movgest_numero,
		liq.movgest_ts_code,
		liq.liq_importo,
		liq.soggetto_code,
		liq.soggetto_desc,
		liq.attoamm_numero,
		liq.attoamm_anno,
        liq.attoamm_oggetto,
		liq.attoamm_tipo_code,
		liq.attoamm_tipo_desc,
		liq.attoamm_stato_desc,
		sac.classif_code,
		sac.classif_desc,
        -- 02.07.2018 Sofia jira siac-6193
		ordinativo.ord_anno,
		ordinativo.ord_numero,
		ordinativo.ord_stato_code,
		ordinativo.ord_stato_desc,
		-- 02.07.2018 Sofia jira siac-6193
        liq.sog_codice_fiscale,
        liq.sog_partita_iva ,
        (CASE WHEN  coalesce(cartecont.esiste_carta,0)=0 THEN 'N'::varchar ELSE 'S'::varchar END )  carte_contabili ,
		-- Data di inserimento dell atto contabile (la medesima data che viene riportata in stampa dell'ALG)
        attoallegato.attoal_data_creazione,
        -- Data di scadenza dell atto contabile
        attoallegato.attoal_data_scadenza ,
        -- Stato dell atto contabile
		attoallegato.attoal_stato_desc,
        -- Modalita di pagamento - no cessione
        modpag_no_cessione.accredito_tipo_code,
        modpag_no_cessione.accredito_tipo_desc,
        -- IBAN
        modpag_no_cessione.iban,
        -- BIC
        modpag_no_cessione.bic,
        -- contocorrente
        modpag_no_cessione.contocorrente,
        -- contocorrente_intestazione
        modpag_no_cessione.contocorrente_intestazione,
        -- banca_denominazione
        modpag_no_cessione.banca_denominazione,
        -- quietanzante
        modpag_no_cessione.quietanziante quietanzante,
        -- quietanzante_codice_fiscale
        modpag_no_cessione.quietanziante_codice_fiscale quietanzante_codice_fiscale,
        -- Estremi soggetto cessione
        modpag_cessione.soggetto_cessione_code,
        modpag_cessione.soggetto_cessione_desc,
        -- Relazione Soggetto
        modpag_cessione.relaz_tipo_code,
        modpag_cessione.relaz_tipo_desc,
        -- Accredito tipo - cessione
        modpag_cessione.accredito_tipo_code accredito_tipo_code_cess,
        modpag_cessione.accredito_tipo_desc accredito_tipo_desc_cess,
        -- Modalita di pagamento
        -- IBAN
        modpag_cessione.iban iban_cess,
        -- BIC
        modpag_cessione.bic bic_cess,
        -- contocorrente
        modpag_cessione.contocorrente contocorrente_cess,
        -- contocorrente_intestazione
        modpag_cessione.contocorrente_intestazione contocorrente_intestazione_cess,
        -- banca_denominazione
        modpag_cessione.banca_denominazione banca_denominazione_cess,
        -- quietanzante
        modpag_cessione.quietanziante quietanzante_cess,
        -- quietanzante_codice_fiscale
        modpag_cessione.quietanziante_codice_fiscale quietanzante_codice_fiscale_cess,
        (CASE WHEN  coalesce(split_liq.esiste_split,0)=0 THEN 'N'::varchar ELSE 'S'::varchar END )  liq_esiste_split ,
        -- Ordinativo
        -- La data di emissione ordinativo
        ordinativo.ord_emissione_data,
        -- La data di quietanza ordinativo
        ordinativo.ord_quietanza_data,
        -- 12.07.2018 Sofia jira siac-6193
        ordinativo.ord_soggetto_code,
        ordinativo.ord_soggetto_desc,
        -- MDP ordinativo
        ordinativo.ord_accredito_tipo_code,
        ordinativo.ord_accredito_tipo_desc,
        ordinativo.ord_iban,
        ordinativo.ord_bic,
        ordinativo.ord_contocorrente,
        ordinativo.ord_contocorrente_intestazione,
        ordinativo.ord_banca_denominazione,
        ordinativo.ord_quietanzante,
        ordinativo.ord_quietanzante_codice_fiscale,
        -- Estremi soggetto cessione
        ordinativo.ord_soggetto_cessione_code,
        ordinativo.ord_soggetto_cessione_desc,
        -- Relazione soggetto cessione
        ordinativo.ord_relaz_tipo_code,
        ordinativo.ord_relaz_tipo_desc,
        -- MDP ordinativo - cessione
        ordinativo.ord_accredito_tipo_code_cess,
        ordinativo.ord_accredito_tipo_desc_cess,
        ordinativo.ord_iban_cess,
        ordinativo.ord_bic_cess,
        ordinativo.ord_contocorrente_cess,
        ordinativo.ord_contocorrente_intestazione_cess,
        ordinativo.ord_banca_denominazione_cess,
        ordinativo.ord_quietanzante_cess,
        ordinativo.ord_quietanzante_codice_fiscale_cess
	from liq
	 	 left outer join sac on liq.attoamm_id=sac.attoamm_id
	 	 left outer join ordinativo on ordinativo.liq_id = liq.liq_id
         -- 02.07.2018 Sofia jira siac-6193
         left outer join cartecont on liq.soggetto_id=cartecont.soggetto_id
         left outer join  split_liq on (liq.liq_id = split_liq.liq_id)
         left outer join  attoallegato on  (liq.attoamm_id = attoallegato.attoamm_id)
  	     left outer join  modpag_no_cessione on  (liq.liq_id =  modpag_no_cessione.liq_id)
         left outer join  modpag_cessione on ( liq.liq_id = modpag_cessione.liq_id)
	ORDER BY 2,3,5,7,8,9,10
	LIMIT _limit
	OFFSET _offset;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--17

drop function if exists fnc_siac_cons_entita_mandato_from_capitolospesa_importo (integer);
drop function if exists fnc_siac_cons_entita_mandato_from_capitolospesa_importo (integer,varchar);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_mandato_from_capitolospesa_importo (
  _uid_capitolospesa integer,
  _filtro_crp varchar  -- 03.07.2018 Sofia jira siac-6193 C,R,altro per tutto
)
RETURNS numeric AS
$body$
DECLARE
	total numeric;
BEGIN

	SELECT coalesce(sum(ord_imp.importo),0)
	into total
	from (
          SELECT siac_t_ordinativo_ts_det.ord_ts_det_importo as importo
          from
              siac_r_ordinativo_bil_elem --r,
              ,siac_t_bil_elem --s,
              ,siac_t_ordinativo --y,
              ,siac_d_ordinativo_tipo --i

              ,siac_r_ordinativo_stato --d,
              ,siac_d_ordinativo_stato --e,
              ,siac_t_ordinativo_ts --f,
              ,siac_t_ordinativo_ts_det --g,
              ,siac_d_ordinativo_ts_det_tipo --h
              -- 03.07.2018 Sofia jira siac-6193
              ,siac_r_liquidazione_ord rord
              ,siac_r_liquidazione_movgest rmov
              ,siac_t_movgest_ts tsmov
              ,siac_t_movgest mov

          where
              siac_t_bil_elem.elem_id=siac_r_ordinativo_bil_elem.elem_id
          and siac_t_ordinativo.ord_id=siac_r_ordinativo_bil_elem.ord_id
          and siac_t_bil_elem.elem_id= _uid_capitolospesa
          and siac_d_ordinativo_tipo.ord_tipo_id=siac_t_ordinativo.ord_tipo_id
          and siac_d_ordinativo_tipo.ord_tipo_code='P'
          and siac_r_ordinativo_bil_elem.data_cancellazione is null
          and siac_t_bil_elem.data_cancellazione is null
          and siac_d_ordinativo_tipo.data_cancellazione is null
          and now() BETWEEN siac_r_ordinativo_bil_elem.validita_inizio and coalesce (siac_r_ordinativo_bil_elem.validita_fine,now())
		  and siac_t_ordinativo.data_cancellazione is null
          and siac_r_ordinativo_stato.ord_id=siac_t_ordinativo.ord_id
          and siac_r_ordinativo_stato.ord_stato_id=siac_d_ordinativo_stato.ord_stato_id
          and now() BETWEEN siac_r_ordinativo_stato.validita_inizio and COALESCE(siac_r_ordinativo_stato.validita_fine,now())
          and siac_t_ordinativo_ts.ord_id=siac_t_ordinativo.ord_id
          and siac_t_ordinativo_ts_det.ord_ts_id=siac_t_ordinativo_ts.ord_ts_id
          and siac_d_ordinativo_ts_det_tipo.ord_ts_det_tipo_id=siac_t_ordinativo_ts_det.ord_ts_det_tipo_id
          and siac_d_ordinativo_ts_det_tipo.ord_ts_det_tipo_code = 'A'
          -- 03.07.2018 Sofia jira siac-6193
          and rord.sord_id=siac_t_ordinativo_ts.ord_ts_id
          and rmov.liq_id=rord.liq_id
          and tsmov.movgest_ts_id=rmov.movgest_ts_id
          and mov.movgest_id=tsmov.movgest_id
          and ( case when coalesce(_filtro_crp,'')='C' then mov.movgest_anno::integer=siac_t_ordinativo.ord_anno::integer
                     when coalesce(_filtro_crp,'')='R' then mov.movgest_anno::integer<siac_t_ordinativo.ord_anno::integer
                     else true end )
          and siac_t_ordinativo.data_cancellazione is null
          and siac_r_ordinativo_stato.data_cancellazione is null
          and siac_d_ordinativo_stato.data_cancellazione is null
          and siac_t_ordinativo_ts.data_cancellazione is null
          and siac_t_ordinativo_ts_det.data_cancellazione is null
           -- 03.07.2018 Sofia jira siac-6193
          and rord.data_cancellazione is null
          and rord.validita_fine is null
          and rmov.data_cancellazione is null
          and rmov.validita_fine is null
          and tsmov.data_cancellazione is null
          and tsmov.validita_fine is null
          and mov.data_cancellazione is null
          and mov.validita_fine is null
	)
  	as ord_imp ;

	return total;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;
--18

DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_mandato_from_capitolospesa_total (integer);
DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_mandato_from_capitolospesa_total (integer,varchar);
CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_mandato_from_capitolospesa_total
(
  _uid_capitolospesa integer,
  _filtro_crp varchar -- 03.07.2018 Sofia jira siac-6193 C,R,altro per tutto
)
RETURNS bigint AS
$body$
DECLARE
	total bigint;
BEGIN

	SELECT coalesce(count(*),0)
	into total
	from (
          SELECT 1
          from
              siac_r_ordinativo_bil_elem --r,
              ,siac_t_bil_elem --s,
              ,siac_t_ordinativo --y,
              ,siac_d_ordinativo_tipo --i
              ,siac_r_ordinativo_stato --d,
              ,siac_d_ordinativo_stato --e,
              ,siac_t_ordinativo_ts --f,
              ,siac_t_ordinativo_ts_det --g,
              ,siac_d_ordinativo_ts_det_tipo --h
              -- 03.07.2018 Sofia jira siac-6193
              ,siac_r_liquidazione_ord rord
              ,siac_r_liquidazione_movgest rmov
              ,siac_t_movgest_ts tsmov
              ,siac_t_movgest mov
          where
              siac_t_bil_elem.elem_id=siac_r_ordinativo_bil_elem.elem_id
          and siac_t_ordinativo.ord_id=siac_r_ordinativo_bil_elem.ord_id
          and siac_t_bil_elem.elem_id= _uid_capitolospesa
          and siac_d_ordinativo_tipo.ord_tipo_id=siac_t_ordinativo.ord_tipo_id
          and siac_d_ordinativo_tipo.ord_tipo_code='P'
          and siac_r_ordinativo_bil_elem.data_cancellazione is null
          and siac_t_bil_elem.data_cancellazione is null
          and siac_d_ordinativo_tipo.data_cancellazione is null
          and now() BETWEEN siac_r_ordinativo_bil_elem.validita_inizio and coalesce (siac_r_ordinativo_bil_elem.validita_fine,now())
		  and siac_t_ordinativo.data_cancellazione is null
          and siac_r_ordinativo_stato.ord_id=siac_t_ordinativo.ord_id
          and siac_r_ordinativo_stato.ord_stato_id=siac_d_ordinativo_stato.ord_stato_id
          and now() BETWEEN siac_r_ordinativo_stato.validita_inizio and COALESCE(siac_r_ordinativo_stato.validita_fine,now())
          and siac_t_ordinativo_ts.ord_id=siac_t_ordinativo.ord_id
          and siac_t_ordinativo_ts_det.ord_ts_id=siac_t_ordinativo_ts.ord_ts_id
          and siac_d_ordinativo_ts_det_tipo.ord_ts_det_tipo_id=siac_t_ordinativo_ts_det.ord_ts_det_tipo_id
          and siac_d_ordinativo_ts_det_tipo.ord_ts_det_tipo_code = 'A'
          -- 03.07.2018 Sofia jira siac-6193
          and rord.sord_id=siac_t_ordinativo_ts.ord_ts_id
          and rmov.liq_id=rord.liq_id
          and tsmov.movgest_ts_id=rmov.movgest_ts_id
          and mov.movgest_id=tsmov.movgest_id
          and ( case when coalesce(_filtro_crp,'')='C' then mov.movgest_anno::integer=siac_t_ordinativo.ord_anno::integer
                     when coalesce(_filtro_crp,'')='R' then mov.movgest_anno::integer<siac_t_ordinativo.ord_anno::integer
                     else true end )
          and siac_t_ordinativo.data_cancellazione is null
          and siac_r_ordinativo_stato.data_cancellazione is null
          and siac_d_ordinativo_stato.data_cancellazione is null
          and siac_t_ordinativo_ts.data_cancellazione is null
          and siac_t_ordinativo_ts_det.data_cancellazione is null
          -- 03.07.2018 Sofia jira siac-6193
          and rord.data_cancellazione is null
          and rord.validita_fine is null
          and rmov.data_cancellazione is null
          and rmov.validita_fine is null
          and tsmov.data_cancellazione is null
          and tsmov.validita_fine is null
          and mov.data_cancellazione is null
          and mov.validita_fine is null

	)
  	as ord_id ;

	return total;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

--19

DROP FUNCTION if exists fnc_siac_cons_entita_mandato_from_capitolospesa (integer,  integer, integer);
DROP FUNCTION if exists fnc_siac_cons_entita_mandato_from_capitolospesa (integer,  integer, integer,integer);
DROP FUNCTION if exists fnc_siac_cons_entita_mandato_from_capitolospesa (integer,  varchar,integer, integer);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_mandato_from_capitolospesa (
  _uid_capitolospesa integer,
  _filtro_crp varchar, -- 12.07.2018 Sofia jira siac-6193 C,R,altro per tutto
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  ord_numero numeric,
  ord_desc varchar,
  ord_emissione_data timestamp,
  -- 12.07.2018 Sofia siac-6193
  ord_soggetto_code varchar,
  ord_soggetto_desc varchar,
-- 11.07.2018 Sofia siac-6193
--  accredito_tipo_code varchar,
--  accredito_tipo_desc varchar,
  ord_stato_desc varchar,
  importo numeric,
  ord_ts_code varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  uid_capitolo integer,
  num_capitolo varchar,
  num_articolo varchar,
  num_ueb varchar,
  capitolo_desc varchar,
  provc_anno integer,
  provc_numero numeric,
  provc_data_convalida timestamp,
  ord_quietanza_data timestamp,
  -- 02.07.2018 Sofia jira siac-6193
  sog_codice_fiscale varchar,
  sog_partita_iva varchar,
  -- 11.07.2018 Sofia siac-6193
  -- MDP - no cessione
  ord_accredito_tipo_code varchar,
  ord_accredito_tipo_desc varchar,
  ord_iban varchar,
  ord_bic varchar,
  ord_contocorrente varchar,
  ord_contocorrente_intestazione varchar,
  ord_banca_denominazione varchar,
  ord_quietanzante varchar,
  ord_quietanzante_codice_fiscale varchar,
  -- 11.07.2018 Sofia jira siac-6193 estremi cessione
  ord_soggetto_cessione_code varchar,
  ord_soggetto_cessione_desc varchar,
  ord_relaz_tipo_code varchar,
  ord_relaz_tipo_desc varchar,
  -- MDP - cessione
  ord_accredito_tipo_code_cess varchar,
  ord_accredito_tipo_desc_cess varchar,
  ord_iban_cess varchar,
  ord_bic_cess varchar,
  ord_contocorrente_cess varchar,
  ord_contocorrente_intestazione_cess varchar,
  ord_banca_denominazione_cess varchar,
  ord_quietanzante_cess varchar,
  ord_quietanzante_codice_fiscale_cess varchar,
  liq_attoamm_desc varchar,
  liq_attoalg_data_inserimento timestamp,
  liq_attoalg_data_scad timestamp,
  liq_attoalg_stato_desc varchar,
  ord_split varchar,
  ord_split_importo numeric,
  ord_ritenute varchar,
  ord_ritenute_importo numeric,
  carte_contabili varchar,
  ord_copertura varchar,
  ord_conto_tesoreria varchar,
  ord_distinta_codice varchar,
  ord_distinta_desc varchar
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
 rec record;
 rec2 record;
 attoamm_uid integer;

 -- 03.07.2018 Sofia jira siac-6193
 soggettoId integer:=null;

BEGIN
	

	for rec in
     WITH
     movimenti as
     (
     	select re.elem_id, rord.sord_id ord_ts_id, mov.movgest_anno::integer
		from  siac_r_movgest_bil_elem re,
		      siac_t_movgest_ts ts,
              siac_t_movgest mov,
              siac_r_liquidazione_movgest rmov,
		      siac_r_liquidazione_ord rord
		where re.elem_id=_uid_capitolospesa
		and   mov.movgest_id=re.movgest_id
		and   ts.movgest_id=mov.movgest_id
		and   rmov.movgest_ts_id=ts.movgest_ts_id
		and   rord.liq_id=rmov.liq_id
		and   re.data_cancellazione is null
		and   re.validita_fine  is null
		and   ts.data_cancellazione is null
		and   ts.validita_fine is null
		and   mov.data_cancellazione is null
		and   mov.validita_fine is NULL
		and   rmov.data_cancellazione is null
		and   rmov.validita_fine is NULL
		and   rord.data_cancellazione is null
		and   rord.validita_fine is NULL
      ),
      ordinativi as
      (
		select
			siac_r_ordinativo_bil_elem.ord_id,
			siac_t_ordinativo.ord_numero,
			siac_t_ordinativo.ord_emissione_data,
            siac_t_ordinativo.ord_anno::INTEGER,
			siac_t_bil_elem.elem_id,
			siac_t_bil_elem.elem_code,
			siac_t_bil_elem.elem_code2,
			siac_t_bil_elem.elem_code3,
			siac_t_bil_elem.elem_desc,
            siac_t_ordinativo.ord_desc,
            siac_d_ordinativo_stato.ord_stato_desc,
            siac_t_ordinativo_ts_det.ord_ts_det_importo as importo,
            siac_t_ordinativo_ts.ord_ts_code,
			-- 03.07.2018 Sofia jira siac-6193
            siac_t_ordinativo_ts.ord_ts_id ,
            conto.contotes_code,
            dist.dist_code,
            dist.dist_desc
		from
			 siac_r_ordinativo_bil_elem --r
			,siac_t_bil_elem --s
			,siac_d_ordinativo_tipo --i
            ,siac_r_ordinativo_stato --d,
            ,siac_d_ordinativo_stato --e,
            ,siac_t_ordinativo_ts --f,
            ,siac_t_ordinativo_ts_det --g,
            ,siac_d_ordinativo_ts_det_tipo --h
			,siac_t_ordinativo --y
             left join siac_d_contotesoreria conto on (conto.contotes_id=siac_t_ordinativo.contotes_id and conto.data_cancellazione is null)
             left join siac_d_distinta dist on (dist.dist_id=siac_t_ordinativo.dist_id and dist.data_cancellazione is null)

		where siac_t_bil_elem.elem_id=siac_r_ordinativo_bil_elem.elem_id
		and siac_t_ordinativo.ord_id=siac_r_ordinativo_bil_elem.ord_id
		and siac_t_bil_elem.elem_id=_uid_capitolospesa
		and siac_d_ordinativo_tipo.ord_tipo_id=siac_t_ordinativo.ord_tipo_id
		and siac_d_ordinativo_tipo.ord_tipo_code='P'
		and siac_r_ordinativo_bil_elem.data_cancellazione is null
		and siac_t_bil_elem.data_cancellazione is null
		and siac_d_ordinativo_tipo.data_cancellazione is null
		and now() BETWEEN siac_r_ordinativo_bil_elem.validita_inizio and coalesce (siac_r_ordinativo_bil_elem.validita_fine,now())
		and siac_t_ordinativo.data_cancellazione is null
        and siac_r_ordinativo_stato.ord_id=siac_t_ordinativo.ord_id
        and siac_r_ordinativo_stato.ord_stato_id=siac_d_ordinativo_stato.ord_stato_id
        and now() BETWEEN siac_r_ordinativo_stato.validita_inizio and COALESCE(siac_r_ordinativo_stato.validita_fine,now())
        and siac_t_ordinativo_ts.ord_id=siac_t_ordinativo.ord_id
        and siac_t_ordinativo_ts_det.ord_ts_id=siac_t_ordinativo_ts.ord_ts_id
        and siac_d_ordinativo_ts_det_tipo.ord_ts_det_tipo_id=siac_t_ordinativo_ts_det.ord_ts_det_tipo_id
        and siac_d_ordinativo_ts_det_tipo.ord_ts_det_tipo_code = 'A'
        and siac_t_ordinativo.data_cancellazione is null
        and siac_r_ordinativo_stato.data_cancellazione is null
        and siac_d_ordinativo_stato.data_cancellazione is null
        and siac_t_ordinativo_ts.data_cancellazione is null
        and siac_t_ordinativo_ts_det.data_cancellazione is null
	  )
      -- 03.07.2018 Sofia jira siac-6193
      select ordinativi.*
      from ordinativi, movimenti
      where ordinativi.ord_ts_id=movimenti.ord_ts_id
      -- 03.07.2018 Sofia jira siac-6193
      and   ( case when coalesce(_filtro_crp,'')='C' then ordinativi.ord_anno=movimenti.movgest_anno
      			   when coalesce(_filtro_crp,'')='R' then movimenti.movgest_anno<ordinativi.ord_anno
                   else true end )
	  order by 2,3
	  LIMIT _limit
	  OFFSET _offset

	loop
		uid:=rec.ord_id;
		uid_capitolo:=rec.elem_id;
		num_capitolo:=rec.elem_code;
		num_articolo:=rec.elem_code2;
		num_ueb:=rec.elem_code3;
		capitolo_desc:=rec.elem_desc;

        uid := rec.ord_id;
        ord_numero := rec.ord_numero;

        ord_desc := rec.ord_desc;
        ord_emissione_data := rec.ord_emissione_data;
        ord_stato_desc := rec.ord_stato_desc;
        importo := rec.importo;
        ord_ts_code := rec.ord_ts_code;

        -- 03.07.2018 Sofia jira siac-6193
        ord_conto_tesoreria:=rec.contotes_code;
        ord_distinta_codice:=rec.dist_code;
        ord_distinta_desc:=rec.dist_desc;


        -- 03.07.2018 Sofia jira siac-6193
        soggettoId:=null;

              select
                  siac_t_soggetto.soggetto_code,
                  siac_t_soggetto.soggetto_desc,
                  -- 02.07.2018 Sofia jira siac-6193
                  siac_t_soggetto.codice_fiscale::varchar,
                  siac_t_soggetto.partita_iva,
                  siac_t_soggetto.soggetto_id -- 03.07.2018 Sofia jira siac-6193
              into
                  -- 12.07.2018 Sofia jira siac-6193
                  ord_soggetto_code,
                  ord_soggetto_desc,
                  -- 02.07.2018 Sofia jira siac-6193
                  sog_codice_fiscale,
                  sog_partita_iva,
                  soggettoId -- 03.07.2018 Sofia jira siac-6193
              from
                  siac_r_ordinativo_soggetto --b,
                  ,siac_t_soggetto --c
              where siac_r_ordinativo_soggetto.ord_id=uid
              and siac_r_ordinativo_soggetto.soggetto_id=siac_t_soggetto.soggetto_id
              and now() BETWEEN siac_r_ordinativo_soggetto.validita_inizio and COALESCE(siac_r_ordinativo_soggetto.validita_fine,now())
              and siac_r_ordinativo_soggetto.data_cancellazione is null
              and siac_t_soggetto.data_cancellazione is null;

              select
                  siac_t_atto_amm.attoamm_id,
                  siac_t_atto_amm.attoamm_numero,
                  siac_t_atto_amm.attoamm_anno,
                  siac_d_atto_amm_stato.attoamm_stato_desc,
                  siac_d_atto_amm_tipo.attoamm_tipo_code,
                  siac_d_atto_amm_tipo.attoamm_tipo_desc
              into
                  attoamm_uid,
                  attoamm_numero,
                  attoamm_anno,
                  attoamm_stato_desc,
                  attoamm_tipo_code,
                  attoamm_tipo_desc
              from
                  siac_r_ordinativo_atto_amm --m
                  ,siac_t_atto_amm --n
                  ,siac_d_atto_amm_tipo --o
                  ,siac_r_atto_amm_stato --p
                  ,siac_d_atto_amm_stato --q
              where siac_r_ordinativo_atto_amm.ord_id=uid
              and siac_t_atto_amm.attoamm_id=siac_r_ordinativo_atto_amm.attoamm_id
              and siac_d_atto_amm_tipo.attoamm_tipo_id=siac_t_atto_amm.attoamm_tipo_id
              and siac_r_atto_amm_stato.attoamm_id=siac_t_atto_amm.attoamm_id
              and siac_r_atto_amm_stato.attoamm_stato_id=siac_d_atto_amm_stato.attoamm_stato_id
              and now() BETWEEN siac_r_atto_amm_stato.validita_inizio and coalesce (siac_r_atto_amm_stato.validita_fine,now())
              and now() BETWEEN siac_r_ordinativo_atto_amm.validita_inizio and COALESCE(siac_r_ordinativo_atto_amm.validita_fine,now())
              and siac_d_atto_amm_stato.attoamm_stato_code<>'ANNULLATO'
              and siac_r_ordinativo_atto_amm.data_cancellazione is null
              and siac_t_atto_amm.data_cancellazione is null
              and siac_d_atto_amm_tipo.data_cancellazione is null
              and siac_r_atto_amm_stato.data_cancellazione is null
              and siac_d_atto_amm_stato.data_cancellazione is null;

        	  -- 11.07.2018 Sofia jira siac-6193
              ord_accredito_tipo_code := null;
              ord_accredito_tipo_desc := null;
 	          ord_iban:=null;
	          ord_bic:=null;
	          ord_contocorrente:=null;
	          ord_contocorrente_intestazione:=null;
	          ord_banca_denominazione:=null;
	          ord_quietanzante:=null;
	          ord_quietanzante_codice_fiscale:=null;


          	  ord_soggetto_cessione_code:=null;
 	          ord_soggetto_cessione_desc:=null;
   	          ord_relaz_tipo_code:=null;
	          ord_relaz_tipo_desc:=null;
 	          ord_iban_cess:=null;
	          ord_bic_cess:=null;
	          ord_contocorrente_cess:=null;
	          ord_contocorrente_intestazione_cess:=null;
	          ord_banca_denominazione_cess:=null;
	          ord_quietanzante_cess:=null;
	          ord_quietanzante_codice_fiscale_cess:=null;

              /* -- 02.07.2018 Sofia jira siac-6193
              select
                  siac_d_accredito_tipo.accredito_tipo_code,
                  siac_d_accredito_tipo.accredito_tipo_desc
              into
                  accredito_tipo_code,
                  accredito_tipo_desc
              FROM
                  siac_r_ordinativo_modpag --c2,
                  ,siac_t_modpag --d2,
                  ,siac_d_accredito_tipo --e2
              where siac_r_ordinativo_modpag.ord_id=uid
                and siac_r_ordinativo_modpag.modpag_id=siac_t_modpag.modpag_id
                and siac_d_accredito_tipo.accredito_tipo_id=siac_t_modpag.accredito_tipo_id
                and now() BETWEEN siac_r_ordinativo_modpag.validita_inizio and coalesce (siac_r_ordinativo_modpag.validita_fine,now())
                and siac_r_ordinativo_modpag.data_cancellazione is null
                and siac_t_modpag.data_cancellazione is null
                and siac_d_accredito_tipo.data_cancellazione is null;

              IF accredito_tipo_code IS NULL THEN
                  SELECT
                      drt.relaz_tipo_code,
                      drt.relaz_tipo_desc
                  into
                      accredito_tipo_code,
                      accredito_tipo_desc
                  FROM
                      siac_r_ordinativo_modpag rom,
                      siac_r_soggetto_relaz rsr,
                      siac_d_relaz_tipo drt
                  where rom.ord_id=uid
                    and rsr.soggetto_relaz_id = rom.soggetto_relaz_id
                    and drt.relaz_tipo_id = rsr.relaz_tipo_id
                    and now() BETWEEN rom.validita_inizio and coalesce (rom.validita_fine,now())
                    and now() BETWEEN rsr.validita_inizio and coalesce (rsr.validita_fine,now())
                    and rom.data_cancellazione is null
                    and rsr.data_cancellazione is null
                    and drt.data_cancellazione is null;
              END IF;
      		 */

             -- 11.07.2018 Sofia jira siac-6193
			  select
			         (case when query.relaz_tipo_code is  null then query.accredito_tipo_code else null end) ord_accredito_tipo_code,
			         (case when query.relaz_tipo_code is  null then query.accredito_tipo_desc else null end) ord_accredito_tipo_desc,
			         (case when query.relaz_tipo_code is  null then query.iban else null end) ord_iban,
			         (case when query.relaz_tipo_code is  null then query.bic else null end) ord_bic,
			         (case when query.relaz_tipo_code is  null then query.contocorrente else null end) ord_contocorrente,
			         (case when query.relaz_tipo_code is  null then query.contocorrente_intestazione else null end) ord_contocorrente_intestazione,
			         (case when query.relaz_tipo_code is  null then query.banca_denominazione else null end) ord_banca_denominazione,
			         (case when query.relaz_tipo_code is  null then query.quietanziante else null end) ord_quietanzante,
			         (case when query.relaz_tipo_code is  null then query.quietanziante_codice_fiscale else null end)::varchar ord_quietanzante_codice_fiscale,
			         query.soggetto_cessione_code,
                     query.soggetto_cessione_desc,
			         query.relaz_tipo_code,
			         query.relaz_tipo_desc,
			         (case when query.relaz_tipo_code is not null then query.accredito_tipo_code else null end) ord_accredito_tipo_code_cess,
			         (case when query.relaz_tipo_code is not null then query.accredito_tipo_desc else null end) ord_accredito_tipo_desc,
			         (case when query.relaz_tipo_code is not null then query.iban else null end) ord_iban_cess,
			         (case when query.relaz_tipo_code is not null then query.bic else null end) ord_bic_cess,
			         (case when query.relaz_tipo_code is not null then query.contocorrente else null end) ord_contocorrente_cess,
			         (case when query.relaz_tipo_code is not null then query.contocorrente_intestazione else null end) ord_contocorrente_intestazione_cess,
			         (case when query.relaz_tipo_code is not null then query.banca_denominazione else null end) ord_banca_denominazione_cess,
			         (case when query.relaz_tipo_code is not null then query.quietanziante else null end) ord_quietanzante_cess,
			         (case when query.relaz_tipo_code is not null then query.quietanziante_codice_fiscale else null end)::varchar ord_quietanzante_codice_fiscale_cess
              into
			         ord_accredito_tipo_code,
		             ord_accredito_tipo_desc,
			         ord_iban,
			         ord_bic,
			         ord_contocorrente,
			         ord_contocorrente_intestazione,
			         ord_banca_denominazione,
			         ord_quietanzante ,
			         ord_quietanzante_codice_fiscale,
			         ord_soggetto_cessione_code,
			         ord_soggetto_cessione_desc,
			         ord_relaz_tipo_code,
			         ord_relaz_tipo_desc,
   			         ord_accredito_tipo_code_cess,
		             ord_accredito_tipo_desc_cess,
			         ord_iban_cess,
			         ord_bic_cess,
			         ord_contocorrente_cess,
			         ord_contocorrente_intestazione_cess,
			         ord_banca_denominazione_cess,
			         ord_quietanzante_cess ,
			         ord_quietanzante_codice_fiscale_cess
              from
              (
        		select
			         sog_cessione.soggetto_code soggetto_cessione_code,
			         sog_cessione.soggetto_desc soggetto_cessione_desc,
			         dat.accredito_tipo_code,
		             dat.accredito_tipo_desc,
			         tmod.iban,
			         tmod.bic,
			         tmod.contocorrente,
			         tmod.contocorrente_intestazione,
			         tmod.banca_denominazione,
			         tmod.quietanziante ,
			         tmod.quietanziante_codice_fiscale::varchar,
			         drt.relaz_tipo_code,
			         drt.relaz_tipo_desc
		        from  siac_r_ordinativo_modpag rmdp,
                      siac_r_soggetto_relaz rrelaz,
                      siac_r_soggrel_modpag rsm,
        		      siac_d_relaz_tipo drt,
		              siac_t_soggetto sog_cessione,
		              siac_t_modpag tmod,
		              siac_d_accredito_tipo dat
			    where rmdp.ord_id=uid
                and   rrelaz.soggetto_relaz_id=rmdp.soggetto_relaz_id
                and   rsm.soggetto_relaz_id=rrelaz.soggetto_relaz_id
                and   drt.relaz_tipo_id=rrelaz.relaz_tipo_id
                and   drt.relaz_tipo_code ='CSI'
		        and   tmod.modpag_id=rsm.modpag_id
   		        and   dat.accredito_tipo_id = tmod.accredito_tipo_id
		        and   sog_cessione.soggetto_id=rrelaz.soggetto_id_a
		        and   rmdp.data_cancellazione is null
		        and   rmdp.validita_fine is null
		        and   rrelaz.data_cancellazione is null
		        and   now()  BETWEEN rrelaz.validita_inizio and coalesce(rrelaz.validita_fine,now())
		        and   rsm.data_cancellazione is null
		        and   now()  BETWEEN rsm.validita_inizio and coalesce(rsm.validita_fine,now())
		        and   tmod.data_cancellazione is null
		        and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
	 		 union
				select
                    null soggetto_cessione_code,
                    null soggetto_cessione_desc,
		            tipo.accredito_tipo_code,
		            tipo.accredito_tipo_desc,
        		    tmod.iban,
		            tmod.bic,
        		    tmod.contocorrente,
		            tmod.contocorrente_intestazione,
        		    tmod.banca_denominazione,
		            tmod.quietanziante,
		            tmod.quietanziante_codice_fiscale::varchar,
                    null relaz_tipo_code,
			        null relaz_tipo_desc
		        from  siac_r_ordinativo_modpag rModpag, siac_t_modpag tmod,  siac_d_accredito_tipo tipo
				where rModpag.ord_id=uid
                and   tmod.modpag_id=rModpag.modpag_id
                and   tipo.accredito_tipo_id = tmod.accredito_tipo_id
		        and   rModpag.data_cancellazione is null
		        and   rModpag.validita_fine is null
		        and   tmod.data_cancellazione is null
				and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
             ) query;

              attoamm_sac_code:=null;
              attoamm_sac_desc:=null;

              select
                  siac_t_class.classif_code,
                  siac_t_class.classif_desc
              into
                  attoamm_sac_code,
                  attoamm_sac_desc
              from
                  siac_r_atto_amm_class --z,
                  ,siac_t_class --y,
                  ,siac_d_class_tipo --x
              where siac_r_atto_amm_class.attoamm_id=attoamm_uid
              and siac_r_atto_amm_class.classif_id=siac_t_class.classif_id
              and siac_d_class_tipo.classif_tipo_id=siac_t_class.classif_tipo_id
              and now() BETWEEN siac_r_atto_amm_class.validita_inizio and coalesce (siac_r_atto_amm_class.validita_fine,now())
              and siac_d_class_tipo.classif_tipo_code IN ('CDC', 'CDR')
              and siac_r_atto_amm_class.data_cancellazione is NULL
              and siac_d_class_tipo.data_cancellazione is NULL
              and siac_t_class.data_cancellazione is NULL;

              select
                  siac_t_prov_cassa.provc_anno,
                  siac_t_prov_cassa.provc_numero,
                  siac_t_prov_cassa.provc_data_convalida
              into
                  provc_anno,
                  provc_numero,
                  provc_data_convalida
              from
                  siac_r_ordinativo_prov_cassa --a2,
                  ,siac_t_prov_cassa --b2
              where siac_r_ordinativo_prov_cassa.ord_id=uid
              and siac_t_prov_cassa.provc_id=siac_r_ordinativo_prov_cassa.provc_id
              and now() BETWEEN siac_r_ordinativo_prov_cassa.validita_inizio and coalesce (siac_r_ordinativo_prov_cassa.validita_fine,now())
              and siac_r_ordinativo_prov_cassa.data_cancellazione is NULL
              and siac_t_prov_cassa.data_cancellazione is NULL;

        	  -- 03.07.2018 Sofia jira siac-6193
        	  ord_copertura:='N';
              if provc_numero is not null then
              	ord_copertura:='S';
              end if;

        	  --SIAC-5899
              SELECT
                  siac_r_ordinativo_quietanza.ord_quietanza_data
              INTO
                  ord_quietanza_data
              FROM
                  siac_t_oil_ricevuta
                  ,siac_T_Ordinativo
                  ,siac_d_oil_ricevuta_tipo
                  ,siac_r_ordinativo_quietanza
              WHERE
                      siac_t_oil_ricevuta.oil_ricevuta_tipo_id =  siac_d_oil_ricevuta_tipo.oil_ricevuta_tipo_id
                  AND siac_t_oil_ricevuta.oil_ord_id  = siac_T_Ordinativo.ord_id
                  AND siac_T_Ordinativo.ord_id = siac_r_ordinativo_quietanza.ord_id
                  AND siac_d_oil_ricevuta_tipo.oil_ricevuta_tipo_code = 'Q'
                  AND siac_T_Ordinativo.ord_Id = uid
                  AND siac_t_oil_ricevuta.data_cancellazione is null
                  AND siac_T_Ordinativo.data_cancellazione is null
                  AND siac_d_oil_ricevuta_tipo.data_cancellazione is null
                  AND siac_r_ordinativo_quietanza.data_cancellazione is null;


              -- 03.07.2018 Sofia jira siac-6193
              liq_attoamm_desc:=null;
              liq_attoalg_data_inserimento:=null;
              liq_attoalg_data_scad:=null;
              liq_attoalg_stato_desc:=null;
              select coalesce(alg.attoal_causale , atto.attoamm_oggetto),
                     alg.data_creazione, alg.attoal_data_scadenza,algstato.attoal_stato_desc
                     into liq_attoamm_desc,liq_attoalg_data_inserimento, liq_attoalg_data_scad,liq_attoalg_stato_desc
              from siac_r_liquidazione_ord rord,
                   siac_r_liquidazione_atto_amm rliq,
                   siac_r_liquidazione_stato rs, siac_d_liquidazione_stato stato,
                   siac_t_atto_amm atto
                   left join siac_t_atto_allegato alg
                         join siac_r_atto_allegato_stato rsalg
                          join siac_d_atto_allegato_stato algstato
                          on (algstato.attoal_stato_id=rsalg.attoal_stato_id and algstato.attoal_stato_code!='A')
                         on (rsalg.attoal_id=alg.attoal_id and
                             rsalg.data_cancellazione is null and
                             now() between rsalg.validita_inizio and coalesce(rsalg.validita_fine, now()))
                        on ( alg.attoamm_id=atto.attoamm_id )
              where rord.sord_id=rec.ord_ts_id
              and   rliq.liq_id=rord.liq_id
              and   rs.liq_id=rliq.liq_id
              and   stato.liq_stato_id=rs.liq_stato_id
              and   stato.liq_stato_code!='A'
              and   atto.attoamm_id=rliq.attoamm_id
              and   rord.data_cancellazione is null
              and   rord.validita_fine is null
              and   rs.data_cancellazione is null
              and   now() between rs.validita_inizio and coalesce(rs.validita_fine, now())
              and   rliq.data_cancellazione is null
              and   rliq.validita_fine is null
              and   atto.data_cancellazione is null
              and   now() between atto.validita_inizio and coalesce(atto.validita_fine, now());

			  -- 03.07.2018 Sofia jira siac-6193
              -- split si/no
              ord_split:=null;
              ord_split_importo:=null;
              select tipo.sriva_tipo_code into ord_split
              from 	siac_r_subdoc_ordinativo_ts rsub, siac_t_ordinativo_ts ts,
                    siac_t_subdoc sub,siac_r_subdoc_splitreverse_iva_tipo rsplit,
                    siac_d_splitreverse_iva_tipo tipo
              where ts.ord_id=uid
              and   rsub.ord_ts_id=ts.ord_ts_id
              and   sub.subdoc_id=rsub.subdoc_id
              and   rsplit.subdoc_id=sub.subdoc_id
              and   tipo.sriva_tipo_id=rsplit.sriva_tipo_id
              and   tipo.sriva_tipo_code!='ES'
              and   ts.data_cancellazione is null
              and   ts.validita_fine is null
              and   rsub.data_cancellazione is null
              and   rsub.validita_fine is null
              and   sub.data_cancellazione is null
              and   sub.validita_fine is null
              and   rsplit.data_cancellazione is null
              and   rsplit.validita_fine is null
              limit 1;

              if ord_split is not null then
                ord_split:='S';

              	select coalesce(sum(coalesce(det.ord_ts_det_importo,0)),0) into ord_split_importo
  				from siac_r_ordinativo rOrd, siac_d_relaz_tipo tipo,
                     siac_r_ordinativo_stato rstato,siac_d_ordinativo_stato stato,
                     siac_t_ordinativo_ts ts, siac_t_ordinativo_ts_det det, siac_d_ordinativo_ts_det_tipo tipod
				where rord.ord_id_da=uid
				and   tipo.relaz_tipo_id=rord.relaz_tipo_id
				and   tipo.relaz_tipo_code='SPR'
			    and   rstato.ord_id=rOrd.ord_id_a
                and   stato.ord_stato_id=rstato.ord_stato_id
				and   stato.ord_stato_code!='A'
                and   ts.ord_id=rstato.ord_id
                and   det.ord_ts_id=ts.ord_ts_id
       	        and   tipod.ord_ts_det_tipo_id=det.ord_ts_det_tipo_id
                and   tipod.ord_ts_det_tipo_code='A'
                and   rord.data_cancellazione is null
			    and   now() between rord.validita_inizio and coalesce(rord.validita_fine, now())
   				and   rstato.data_cancellazione is null
				and   now() between rstato.validita_inizio and coalesce(rstato.validita_fine, now())
   				and   ts.data_cancellazione is null
                and   ts.validita_fine is null
   				and   det.data_cancellazione is null
                and   det.validita_fine is null;
              else
                ord_split:='N';
              end if;

              -- 03.07.2018 Sofia jira siac-6193
              -- ritenute si/no
			  ord_ritenute:=null;
              ord_ritenute_importo:=null;
			  select tipo.onere_tipo_code into ord_ritenute
			  from siac_t_ordinativo_ts ordts, siac_r_doc_onere  rdoc, siac_t_subdoc doc, siac_r_subdoc_ordinativo_ts ts,
                   siac_d_onere_tipo tipo,siac_d_onere onere
	  		  where ordts.ord_id=uid
              and   ts.ord_ts_id=ordts.ord_ts_id
              and   doc.subdoc_id=ts.subdoc_id
              and   rdoc.doc_id=doc.doc_id
              and   onere.onere_id=rdoc.onere_id
              and   tipo.onere_tipo_id=onere.onere_tipo_id
              and   tipo.onere_tipo_code not in ('SP','ES')
        	  and   ordts.data_cancellazione is null
	     	  and   ordts.validita_fine is null
			  and   rdoc.data_cancellazione is null
              and   now() between rdoc.validita_inizio and coalesce(rdoc.validita_fine, now())
              and   doc.data_cancellazione is null
	     	  and   doc.validita_fine is null
              and   ts.data_cancellazione is null
              and   now() between ts.validita_inizio and coalesce(ts.validita_fine, now())
              limit 1;

              if ord_ritenute is not null then
              	  ord_ritenute:='S';

	              select coalesce(sum(coalesce(det.ord_ts_det_importo,0)),0) into ord_ritenute_importo
  				  from siac_r_ordinativo rOrd, siac_d_relaz_tipo tipo,
                       siac_r_ordinativo_stato rstato,siac_d_ordinativo_stato stato,
    	               siac_t_ordinativo_ts ts, siac_t_ordinativo_ts_det det, siac_d_ordinativo_ts_det_tipo tipod
				  where rord.ord_id_da=uid
				  and   tipo.relaz_tipo_id=rord.relaz_tipo_id
				  and   tipo.relaz_tipo_code='RIT_ORD'
				  and   rstato.ord_id=rOrd.ord_id_a
	              and   stato.ord_stato_id=rstato.ord_stato_id
	    		  and   stato.ord_stato_code!='A'
	              and   ts.ord_id=rstato.ord_id
    	          and   det.ord_ts_id=ts.ord_ts_id
        	      and   tipod.ord_ts_det_tipo_id=det.ord_ts_det_tipo_id
            	  and   tipod.ord_ts_det_tipo_code='A'
	              and   rord.data_cancellazione is null
 		  	      and   now() between rord.validita_inizio and coalesce(rord.validita_fine, now())
   				  and   rstato.data_cancellazione is null
				  and   now() between rstato.validita_inizio and coalesce(rstato.validita_fine, now())
	   			  and   ts.data_cancellazione is null
    	          and   ts.validita_fine is null
   				  and   det.data_cancellazione is null
            	  and   det.validita_fine is null;
               else
                  ord_ritenute:='N';
               end if;


               -- 28.06.2018 Sofia siac-6193
               carte_contabili:=null;
		       select stato.cartac_stato_code into carte_contabili
        	   from  siac_r_cartacont_det_soggetto rcs,
                     siac_t_cartacont_det det, siac_t_cartacont carta,
                     siac_r_cartacont_stato rs,siac_d_cartacont_stato stato
		       where rcs.soggetto_id=soggettoId
               and   det.cartac_det_id=rcs.cartac_det_id
               and   carta.cartac_id=det.cartac_id
               and   rs.cartac_id=carta.cartac_id
               and   stato.cartac_stato_id=rs.cartac_stato_id
               and   stato.cartac_stato_code!='A'
               and   rcs.data_cancellazione is null
               and   now() between rcs.validita_inizio and coalesce(rcs.validita_fine, now())
               and   rs.data_cancellazione is null
               and   now() between rs.validita_inizio and coalesce(rs.validita_fine, now())
               and   carta.data_cancellazione is null
               and   carta.validita_fine is null
               and   det.data_cancellazione is null
               and   det.validita_fine is null
               limit 1;
			   if carte_contabili is not null then
               		carte_contabili:='S';
               else  carte_contabili:='N';
               end if;

              return next;

		--end loop;
	end loop;

	return;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--20
DROP FUNCTION if exists fnc_siac_cons_entita_mandato_from_impegno (integer,  integer, integer);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_mandato_from_impegno (
  _uid_impegno integer,
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  ord_numero numeric,
  ord_desc varchar,
  ord_emissione_data timestamp,
  -- 12.07.2018 Sofia jira siac-6193
  ord_soggetto_code varchar,
  ord_soggetto_desc varchar,
  ord_stato_desc varchar,
  importo numeric,
  ord_ts_code varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  uid_capitolo integer,
  num_capitolo varchar,
  num_articolo varchar,
  num_ueb varchar,
  capitolo_desc varchar,
  provc_anno integer,
  provc_numero numeric,
  provc_data_convalida timestamp,
  ord_quietanza_data timestamp,
  -- 05.07.2018 Sofia jira siac-6193
  sog_codice_fiscale varchar,
  sog_partita_iva varchar,
  -- 10.07.2018 Sofia jira siac-6193
  -- MDP - no cessione
  ord_accredito_tipo_code varchar,
  ord_accredito_tipo_desc varchar,
  ord_iban varchar,
  ord_bic varchar,
  ord_contocorrente varchar,
  ord_contocorrente_intestazione varchar,
  ord_banca_denominazione varchar,
  ord_quietanzante varchar,
  ord_quietanzante_codice_fiscale varchar,
  -- CESSIONE
  ord_soggetto_cessione_code varchar,
  ord_soggetto_cessione_desc varchar,
  ord_relaz_tipo_code varchar,
  ord_relaz_tipo_desc varchar,
  -- MDP - no cessione
  ord_accredito_tipo_code_cess varchar,
  ord_accredito_tipo_desc_cess varchar,
  ord_iban_cess varchar,
  ord_bic_cess varchar,
  ord_contocorrente_cess varchar,
  ord_contocorrente_intestazione_cess varchar,
  ord_banca_denominazione_cess varchar,
  ord_quietanzante_cess varchar,
  ord_quietanzante_codice_fiscale_cess varchar,
  liq_attoamm_desc varchar,
  liq_attoalg_data_inserimento timestamp,
  liq_attoalg_data_scad timestamp,
  liq_attoalg_stato_desc varchar,
  ord_split varchar,
  ord_split_importo numeric,
  ord_ritenute varchar,
  ord_ritenute_importo numeric,
  carte_contabili varchar,
  ord_copertura varchar,
  ord_conto_tesoreria varchar,
  ord_distinta_codice varchar,
  ord_distinta_desc varchar
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
    bilId integer:=null;
    enteProprietarioId integer:=null;
    movgestTsId integer:=null;

BEGIN

    -- 09.07.2018 Sofia jira siac-6193
    select mov.bil_id, mov.ente_proprietario_id, ts.movgest_Ts_id
           into bilId, enteProprietarioId,movgestTsId
    from siac_t_movgest mov, siac_t_movgest_ts ts
    where mov.movgest_id=_uid_impegno
    and   ts.movgest_id=mov.movgest_id;

	RETURN QUERY
	with ord_join_outer as (
		with ord_join as (
			with ordinativo as (
				select
					a.ord_id as uid,
					a.ord_numero,
					a.ord_desc,
					a.ord_emissione_data,
					e.ord_stato_desc,
					g.ord_ts_det_importo as importo,
					f.ord_ts_code,
                    -- 05.07.2018 Sofia jira siac-6193
                    f.ord_ts_id,
                    a.contotes_id,
                    a.dist_id
				from
					siac_t_ordinativo a,
					siac_r_ordinativo_stato d,
					siac_d_ordinativo_stato e,
					siac_t_ordinativo_ts f,
					siac_t_ordinativo_ts_det g,
					siac_d_ordinativo_ts_det_tipo h,
					siac_d_ordinativo_tipo i
				where a.bil_id=bilId
                and d.ord_id=a.ord_id
				and d.ord_stato_id=e.ord_stato_id
				and now() BETWEEN d.validita_inizio and COALESCE(d.validita_fine,now())
				and f.ord_id=a.ord_id
				and g.ord_ts_id=f.ord_ts_id
				and h.ord_ts_det_tipo_id=g.ord_ts_det_tipo_id
				and h.ord_ts_det_tipo_code = 'A'
				and i.ord_tipo_id=a.ord_tipo_id
				and i.ord_tipo_code='P'
				and a.data_cancellazione is null
				and d.data_cancellazione is null
				and e.data_cancellazione is null
				and f.data_cancellazione is null
				and g.data_cancellazione is null
				and i.data_cancellazione is null
			),
			soggetto as (
				select
					b.ord_id,
                    -- 12.07.2018 Sofia jira siac-6193
					c.soggetto_code ord_soggetto_code,
					c.soggetto_desc ord_soggetto_desc,
                    -- 05.07.2018 Sofia jira siac-6193
                    c.codice_fiscale::varchar sog_codice_fiscale,
				    c.partita_iva    sog_partita_iva,
                    c.soggetto_id
				from
					siac_r_ordinativo_soggetto b,
					siac_t_soggetto c
				where c.ente_proprietario_id=enteProprietarioId
                and  b.soggetto_id=c.soggetto_id
				and now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now())
				and b.data_cancellazione is null
				and c.data_cancellazione is null
			),
			liquidazione as
            (
             -- 05.07.2018 Sofia jira siac-6193
              with
              impegno as
              (
				select
					r.liq_id
				from
					siac_r_liquidazione_movgest r
				where r.movgest_ts_id = movgestTsId
				and   r.data_cancellazione is null
				and   now() BETWEEN r.validita_inizio and coalesce (r.validita_fine,now())
			  ),
              liq as
              (
				select
					i.sord_id ord_ts_id,
					i.liq_id,
					l.liq_anno,
					l.liq_numero,
					m.ord_id
				from
					siac_r_liquidazione_ord i,
					siac_t_liquidazione l,
					siac_t_ordinativo_ts m
				where l.bil_id=bilId
                and   i.sord_id=m.ord_ts_id
                and   l.liq_id=i.liq_id
                and   i.data_cancellazione is null
				and   now() BETWEEN i.validita_inizio and COALESCE(i.validita_fine,now())
                and   l.data_cancellazione is null
                and   now() BETWEEN l.validita_inizio and COALESCE(l.validita_fine,now())
                and   m.data_cancellazione is null
                and   m.validita_fine is null

              ),
              -- 05.07.2018 Sofia jira siac-6193
              liq_atto as
              (
              	select rliq.liq_id,
                       coalesce(alg.attoal_causale , atto.attoamm_oggetto) liq_attoamm_desc,
                  	   alg.data_creazione liq_attoalg_data_inserimento,
                       alg.attoal_data_scadenza liq_attoalg_data_scad,
                       algstato.attoal_stato_desc liq_attoalg_stato_desc
        	    from siac_r_liquidazione_atto_amm rliq,
            	     siac_t_atto_amm atto
                	 left join siac_t_atto_allegato alg
                           join siac_r_atto_allegato_stato rsalg
                            join siac_d_atto_allegato_stato algstato
                            on (algstato.attoal_stato_id=rsalg.attoal_stato_id and algstato.attoal_stato_code!='A')
                           on (rsalg.attoal_id=alg.attoal_id and
                               rsalg.data_cancellazione is null and
                               now() between rsalg.validita_inizio and coalesce(rsalg.validita_fine, now()))
                     on ( alg.attoamm_id=atto.attoamm_id )
	             where atto.ente_proprietario_id=enteProprietarioId
                 and   atto.attoamm_id=rliq.attoamm_id
	             and   rliq.data_cancellazione is null
     		     and   rliq.validita_fine is null
            	 and   atto.data_cancellazione is null
	             and   now() between atto.validita_inizio and coalesce(atto.validita_fine, now())
              )
              select liq.*,
                     liq_atto.liq_attoamm_desc,
                     liq_atto.liq_attoalg_data_inserimento,
                     liq_atto.liq_attoalg_data_scad,
                     liq_atto.liq_attoalg_stato_desc
              from  impegno,
                    liq left join liq_atto on (liq.liq_id=liq_atto.liq_id)
              where impegno.liq_id=liq.liq_id
			),
			attoamm as (
				select
					m.ord_id,
					n.attoamm_id,
					n.attoamm_numero,
					n.attoamm_anno,
					q.attoamm_stato_desc,
					o.attoamm_tipo_code,
					o.attoamm_tipo_desc
				from
					siac_r_ordinativo_atto_amm m,
					siac_t_atto_amm n,
					siac_d_atto_amm_tipo o,
					siac_r_atto_amm_stato p,
					siac_d_atto_amm_stato q
				where n.ente_proprietario_id=enteProprietarioId
                and   m.attoamm_id=n.attoamm_id
				and o.attoamm_tipo_id=n.attoamm_tipo_id
				and p.attoamm_id=n.attoamm_id
				and p.attoamm_stato_id=q.attoamm_stato_id
				and now() BETWEEN p.validita_inizio and coalesce (p.validita_fine,now())
				and now() BETWEEN m.validita_inizio and COALESCE(m.validita_fine,now())
				and q.attoamm_stato_code<>'ANNULLATO'
				and m.data_cancellazione is null
				and n.data_cancellazione is null
				and o.data_cancellazione is null
				and p.data_cancellazione is null
				and q.data_cancellazione is null
			),
			capitolo as (
				select
					r.ord_id,
					s.elem_id,
					s.elem_code,
					s.elem_code2,
					s.elem_code3,
					s.elem_desc
				from  -- 05.07.2018 Sofia jira siac-6193
                      siac_r_movgest_bil_elem re,
                      siac_r_ordinativo_bil_elem r,
					  siac_t_bil_elem s
				where re.movgest_id=_uid_impegno -- 05.07.2018 Sofia jira siac-6193
                and   r.elem_id=re.elem_id       -- 05.07.2018 Sofia jira siac-6193
                and   s.elem_id=r.elem_id
				and   r.data_cancellazione is null
				and   s.data_cancellazione is null
                and   re.data_cancellazione is null
				and   now() BETWEEN r.validita_inizio and coalesce (r.validita_fine,now())
                and   now() BETWEEN re.validita_inizio and coalesce (re.validita_fine,now())
			),
            /* -- 05.07.2018 Sofia jira siac-6193
			modpag as (
				select
					c2.ord_id,
					e2.accredito_tipo_code,
					e2.accredito_tipo_desc
				FROM
					siac_r_ordinativo_modpag c2,
					siac_t_modpag d2,
					siac_d_accredito_tipo e2
				where c2.modpag_id=d2.modpag_id
				and e2.accredito_tipo_id=d2.accredito_tipo_id
				and now() BETWEEN c2.validita_inizio and coalesce (c2.validita_fine,now())
				and c2.data_cancellazione is null
				and d2.data_cancellazione is null
				and e2.data_cancellazione is null
			),*/
            -- 05.07.2018 Sofia jira siac-6193
            modpag as
            (
             select
			         queryMDP.soggetto_cessione_code ord_soggetto_cessione_code,
			         queryMDP.soggetto_cessione_desc ord_soggetto_cessione_desc,
			         queryMDP.accredito_tipo_code ord_accredito_tipo_code,
		             queryMDP.accredito_tipo_desc ord_accredito_tipo_desc,
			         queryMDP.iban ord_iban,
			         queryMDP.bic ord_bic,
			         queryMDP.contocorrente ord_contocorrente,
			         queryMDP.contocorrente_intestazione ord_contocorrente_intestazione,
			         queryMDP.banca_denominazione ord_banca_denominazione,
			         queryMDP.quietanziante ord_quietanzante,
			         queryMDP.quietanziante_codice_fiscale::varchar ord_quietanzante_codice_fiscale,
			         queryMDP.relaz_tipo_code ord_relaz_tipo_code,
			         queryMDP.relaz_tipo_desc ord_relaz_tipo_desc,
                     queryMDP.ord_id
             from
             (
                select
			         sog_cessione.soggetto_code soggetto_cessione_code,
			         sog_cessione.soggetto_desc soggetto_cessione_desc,
			         dat.accredito_tipo_code,
		             dat.accredito_tipo_desc,
			         tmod.iban,
			         tmod.bic,
			         tmod.contocorrente,
			         tmod.contocorrente_intestazione,
			         tmod.banca_denominazione,
			         tmod.quietanziante ,
			         tmod.quietanziante_codice_fiscale::varchar,
			         drt.relaz_tipo_code,
			         drt.relaz_tipo_desc,
                     rmdp.ord_id
		        from  siac_r_ordinativo_modpag rmdp,
                      siac_r_soggetto_relaz rrelaz,
                      siac_r_soggrel_modpag rsm,
        		      siac_d_relaz_tipo drt,
                      siac_d_oil_relaz_tipo oil, siac_r_oil_relaz_tipo roil, -- 13.07.2018 Sofia jira siac-6193
		              siac_t_soggetto sog_cessione,
		              siac_t_modpag tmod,
		              siac_d_accredito_tipo dat
			    where oil.ente_proprietario_id=enteProprietarioId -- 13.07.2018 Sofia jira siac-6193
                and   oil.oil_relaz_tipo_code ='CSI'
                and   roil.oil_relaz_tipo_id=oil.oil_relaz_tipo_id
                and   drt.relaz_tipo_id=roil.relaz_tipo_id
                and   rrelaz.relaz_tipo_id=drt.relaz_tipo_id
                and   rmdp.soggetto_relaz_id=rrelaz.soggetto_relaz_id
                and   rsm.soggetto_relaz_id=rrelaz.soggetto_relaz_id
		        and   tmod.modpag_id=rsm.modpag_id
   		        and   dat.accredito_tipo_id = tmod.accredito_tipo_id
		        and   sog_cessione.soggetto_id=rrelaz.soggetto_id_a
		        and   rmdp.data_cancellazione is null
		        and   rmdp.validita_fine is null
                and   roil.data_cancellazione is null
		        and   roil.validita_fine is null
		        and   rrelaz.data_cancellazione is null
		        and   now()  BETWEEN rrelaz.validita_inizio and coalesce(rrelaz.validita_fine,now())
		        and   rsm.data_cancellazione is null
		        and   now()  BETWEEN rsm.validita_inizio and coalesce(rsm.validita_fine,now())
		        and   tmod.data_cancellazione is null
		        and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
	 		    union
				select
                    null soggetto_cessione_code,
                    null soggetto_cessione_desc,
		            tipo.accredito_tipo_code,
		            tipo.accredito_tipo_desc,
        		    tmod.iban,
		            tmod.bic,
        		    tmod.contocorrente,
		            tmod.contocorrente_intestazione,
        		    tmod.banca_denominazione,
		            tmod.quietanziante,
		            tmod.quietanziante_codice_fiscale::varchar,
                    null relaz_tipo_code,
			        null relaz_tipo_desc,
                    rModpag.ord_id
		        from  siac_r_ordinativo_modpag rModpag, siac_t_modpag tmod,  siac_d_accredito_tipo tipo
				where tipo.ente_proprietario_id=enteProprietarioId
                and   tmod.accredito_tipo_id = tipo.accredito_tipo_id
                and   tmod.modpag_id=rModpag.modpag_id
		        and   rModpag.data_cancellazione is null
		        and   rModpag.validita_fine is null
		        and   tmod.data_cancellazione is null
				and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
             ) queryMDP
            ),
			/* 09.07.2018 Sofia jira siac-6193
             impegno as (
				select
					r.liq_id,
                    s.movgest_ts_id
				from
					siac_r_liquidazione_movgest r,
					siac_t_movgest_ts s
				where s.movgest_id=_uid_impegno
                and   r.movgest_ts_id =s.movgest_ts_id
				and   r.data_cancellazione is null
				and   now() BETWEEN r.validita_inizio and coalesce (r.validita_fine,now())
   				and   s.data_cancellazione is null
                and   now() BETWEEN s.validita_inizio and coalesce (s.validita_fine,now())
			),*/
             -- 05.07.2018 Sofia jira siac-6193
            split as
            (
              select distinct
                     rsub.ord_ts_id
              from 	siac_r_subdoc_ordinativo_ts rsub,
                    siac_t_subdoc sub,siac_r_subdoc_splitreverse_iva_tipo rsplit,
                    siac_d_splitreverse_iva_tipo tipo
              where tipo.ente_proprietario_id=enteProprietarioId
              and   tipo.sriva_tipo_code!='ES'
              and   rsplit.sriva_tipo_id=tipo.sriva_tipo_id
              and   sub.subdoc_id=rsplit.subdoc_id
              and   rsub.subdoc_id=sub.subdoc_id
              and   rsub.data_cancellazione is null
              and   rsub.validita_fine is null
              and   sub.data_cancellazione is null
              and   sub.validita_fine is null
              and   rsplit.data_cancellazione is null
              and   rsplit.validita_fine is null
            ),
            -- 05.07.2018 Sofia jira siac-6193
            split_importo as
            (
            	select rord.ord_id_da ord_id,
                	   coalesce(sum(coalesce(det.ord_ts_det_importo,0)),0) importo
                from siac_r_ordinativo rOrd, siac_d_relaz_tipo tipo,
                     siac_r_ordinativo_stato rstato,siac_d_ordinativo_stato stato,
                     siac_t_ordinativo_ts ts, siac_t_ordinativo_ts_det det, siac_d_ordinativo_ts_det_tipo tipod
				where tipo.ente_proprietario_id=enteProprietarioId
                and   tipo.relaz_tipo_code='SPR'
                and   tipo.relaz_tipo_id=rord.relaz_tipo_id
			    and   rstato.ord_id=rOrd.ord_id_a
                and   stato.ord_stato_id=rstato.ord_stato_id
				and   stato.ord_stato_code!='A'
                and   ts.ord_id=rstato.ord_id
                and   det.ord_ts_id=ts.ord_ts_id
       	        and   tipod.ord_ts_det_tipo_id=det.ord_ts_det_tipo_id
                and   tipod.ord_ts_det_tipo_code='A'
                and   rord.data_cancellazione is null
			    and   now() between rord.validita_inizio and coalesce(rord.validita_fine, now())
   				and   rstato.data_cancellazione is null
				and   now() between rstato.validita_inizio and coalesce(rstato.validita_fine, now())
   				and   ts.data_cancellazione is null
                and   ts.validita_fine is null
   				and   det.data_cancellazione is null
                and   det.validita_fine is null
                group by rord.ord_id_da
            ),
            -- 05.07.2018 Sofia jira siac-6193
            ritenute as
            (
             select distinct ts.ord_ts_id
             from siac_r_doc_onere  rdoc, siac_t_subdoc doc, siac_r_subdoc_ordinativo_ts ts,
                  siac_d_onere_tipo tipo,siac_d_onere onere
	  		 where   tipo.ente_proprietario_id=enteProprietarioId
               and   tipo.onere_tipo_code not in ('SP','ES')
               and   onere.onere_tipo_id=tipo.onere_tipo_id
               and   rdoc.onere_id=onere.onere_id
               and   doc.doc_id=rdoc.doc_id
               and   ts.subdoc_id=doc.subdoc_id
			   and   rdoc.data_cancellazione is null
               and   now() between rdoc.validita_inizio and coalesce(rdoc.validita_fine, now())
               and   doc.data_cancellazione is null
	     	   and   doc.validita_fine is null
               and   ts.data_cancellazione is null
               and   now() between ts.validita_inizio and coalesce(ts.validita_fine, now())
            ),
            -- 05.07.2018 Sofia jira siac-6193
            ritenute_importo as
            (
             select rOrd.ord_id_da ord_id,
                    coalesce(sum(coalesce(det.ord_ts_det_importo,0)),0)  importo
             from siac_r_ordinativo rOrd, siac_d_relaz_tipo tipo,
                  siac_r_ordinativo_stato rstato,siac_d_ordinativo_stato stato,
  	              siac_t_ordinativo_ts ts, siac_t_ordinativo_ts_det det, siac_d_ordinativo_ts_det_tipo tipod
			 where  tipo.ente_proprietario_id=enteProprietarioId
              and   tipo.relaz_tipo_code='RIT_ORD'
			  and   tipo.relaz_tipo_id=rord.relaz_tipo_id
			  and   rstato.ord_id=rOrd.ord_id_a
	          and   stato.ord_stato_id=rstato.ord_stato_id
	    	  and   stato.ord_stato_code!='A'
	          and   ts.ord_id=rstato.ord_id
    	      and   det.ord_ts_id=ts.ord_ts_id
        	  and   tipod.ord_ts_det_tipo_id=det.ord_ts_det_tipo_id
              and   tipod.ord_ts_det_tipo_code='A'
	          and   rord.data_cancellazione is null
 		  	  and   now() between rord.validita_inizio and coalesce(rord.validita_fine, now())
   			  and   rstato.data_cancellazione is null
			  and   now() between rstato.validita_inizio and coalesce(rstato.validita_fine, now())
	   		  and   ts.data_cancellazione is null
    	      and   ts.validita_fine is null
   			  and   det.data_cancellazione is null
              and   det.validita_fine is null
              group by rOrd.ord_id_da
            ),
            -- 05.07.2018 Sofia jira siac-6193
            conto_tesoreria as
            (
             select d.contotes_id, d.contotes_code
             from siac_d_contotesoreria d
             where d.ente_proprietario_id=enteProprietarioId
            ),
            -- 05.07.2018 Sofia jira siac-6193
            distinta as
            (
             select dist.dist_id,
                    dist.dist_code,
                    dist.dist_desc
             from siac_d_distinta dist
             where dist.ente_proprietario_id=enteProprietarioId
            )
            -- 05.07.2018 Sofia jira siac-6193
			select ordinativo.*,
                   soggetto.*,
				   attoamm.*,
                   capitolo.*,
                   --impegno.*,
                   liquidazione.*,
                   modpag.*,
                   -- 05.07.2018 Sofia jira siac-6193
                   ( case when split.ord_ts_id is not null then 'S' else 'N' end) ord_split,
                   split_importo.importo ord_split_importo,
                   ( case when ritenute.ord_ts_id is not null then 'S' else 'N' end) ord_ritenute,
                   ritenute_importo.importo ord_ritenute_importo,
                   conto_tesoreria.contotes_code ord_conto_tesoreria,
                   distinta.dist_code ord_distinta_codice,
                   distinta.dist_desc ord_distinta_desc
			from
				ordinativo
				cross join soggetto
				cross join attoamm
				cross join capitolo
				--cross join impegno -- 09.07.2018 Sofia jira siac-6193
				cross join liquidazione
				left OUTER join modpag on (ordinativo.uid=modpag.ord_id)
                -- 05.07.2018 Sofia jira siac-6193
                left join  split on (split.ord_ts_id=ordinativo.ord_ts_id)
                left join  split_importo on (split_importo.ord_id=ordinativo.uid)
                left join  ritenute on (ritenute.ord_ts_id=ordinativo.ord_ts_id)
                left join  ritenute_importo on (ritenute_importo.ord_id=ordinativo.uid)
                left join  conto_tesoreria on (conto_tesoreria.contotes_id=ordinativo.contotes_id)
                left join  distinta on (distinta.dist_id=ordinativo.dist_id)
			where ordinativo.uid=soggetto.ord_id
			and ordinativo.ord_ts_id=liquidazione.ord_ts_id  -- 09.07.2018 Sofia jira siac-6193
--			and ordinativo.uid=liquidazione.ord_id  -- 09.07.2018 Sofia jira siac-6193
			and ordinativo.uid=attoamm.ord_id
			and ordinativo.uid=capitolo.ord_id
			--and ordinativo.uid=modpag.ord_id
			--and impegno.liq_id=liquidazione.liq_id  -- 09.07.2018 Sofia jira siac-6193
		),
		sac_attoamm as
        (
			select
				y.classif_code,
				y.classif_desc,
				z.attoamm_id
			from
				siac_r_atto_amm_class z,
				siac_t_class y,
				siac_d_class_tipo x
			where x.ente_proprietario_id=enteProprietarioId
            and   x.classif_tipo_code IN ('CDC', 'CDR')
            and   x.classif_tipo_id=y.classif_tipo_id
            and   z.classif_id=y.classif_id
			and now() BETWEEN z.validita_inizio and coalesce (z.validita_fine,now())
			and z.data_cancellazione is NULL
			and x.data_cancellazione is NULL
			and y.data_cancellazione is NULL
		),
        -- 05.07.2018 Sofia jira siac-6193
        carte_contabili as
        (
           select  distinct rcs.soggetto_id
           from  siac_r_cartacont_det_soggetto rcs,
                 siac_t_cartacont_det det, siac_t_cartacont carta,
                 siac_r_cartacont_stato rs,siac_d_cartacont_stato stato
	       where   det.ente_proprietario_id=enteProprietarioId
             and   det.cartac_det_id=rcs.cartac_det_id
             and   carta.cartac_id=det.cartac_id
             and   rs.cartac_id=carta.cartac_id
             and   stato.cartac_stato_id=rs.cartac_stato_id
             and   stato.cartac_stato_code!='A'
             and   rcs.data_cancellazione is null
             and   now() between rcs.validita_inizio and coalesce(rcs.validita_fine, now())
             and   rs.data_cancellazione is null
             and   now() between rs.validita_inizio and coalesce(rs.validita_fine, now())
             and   carta.data_cancellazione is null
             and   carta.validita_fine is null
             and   det.data_cancellazione is null
             and   det.validita_fine is null
        )
        -- 05.07.2018 Sofia jira siac-6193
		select ord_join.*,
               sac_attoamm.*,
               (case when carte_contabili.soggetto_id is not null then 'S' else 'N' end ) sog_carte_contabili
		from ord_join
			 left outer join sac_attoamm on ord_join.attoamm_id=sac_attoamm.attoamm_id
             -- 05.07.2018 Sofia jira siac-6193
             left join carte_contabili on (ord_join.soggetto_id=carte_contabili.soggetto_id)


	),
	provv_cassa as (
		select
			a2.ord_id,
			b2.provc_anno,
			b2.provc_numero,
			b2.provc_data_convalida
		from
			siac_r_ordinativo_prov_cassa a2,
			siac_t_prov_cassa b2
		where b2.ente_proprietario_id=enteProprietarioId
        and  b2.provc_id=a2.provc_id
		and now() BETWEEN a2.validita_inizio and coalesce (a2.validita_fine,now())
		and a2.data_cancellazione is NULL
		and b2.data_cancellazione is NULL
	),
      -- 06.07.2018 Sofia jira siac-6193
    /*quietanza AS(
     --SIAC-5899
              SELECT
                  siac_T_Ordinativo.ord_id,
                  siac_r_ordinativo_quietanza.ord_quietanza_data
              --INTO
                  --ord_quietanza_data
              FROM
                  siac_t_oil_ricevuta
                  ,siac_T_Ordinativo
                  ,siac_d_oil_ricevuta_tipo
                  ,siac_r_ordinativo_quietanza
              WHERE
                      siac_t_oil_ricevuta.oil_ricevuta_tipo_id =  siac_d_oil_ricevuta_tipo.oil_ricevuta_tipo_id
                  AND siac_t_oil_ricevuta.oil_ord_id  = siac_T_Ordinativo.ord_id
                  AND siac_T_Ordinativo.ord_id = siac_r_ordinativo_quietanza.ord_id
                  AND siac_d_oil_ricevuta_tipo.oil_ricevuta_tipo_code = 'Q'
                  --AND siac_T_Ordinativo.ord_Id = uid
                  AND siac_t_oil_ricevuta.data_cancellazione is null
                  AND siac_T_Ordinativo.data_cancellazione is null
                  AND siac_d_oil_ricevuta_tipo.data_cancellazione is null
                  AND siac_r_ordinativo_quietanza.data_cancellazione is null
    )*/
    -- 06.07.2018 Sofia jira siac-6193
    quietanza as
    (
	  SELECT r.ord_id, max(r.ord_quietanza_data) ord_quietanza_data
	  FROM siac_r_ordinativo_quietanza r
	  WHERE r.ente_proprietario_id=enteProprietarioId
      and   r.data_cancellazione  is null
      and   now() between r.validita_inizio and coalesce(r.validita_fine, now())
      group by r.ord_id
    )
	select
		ord_join_outer.uid,
		ord_join_outer.ord_numero,
		ord_join_outer.ord_desc,
		ord_join_outer.ord_emissione_data,
        -- 12.07.2018 Sofia siac-6193
		ord_join_outer.ord_soggetto_code,
		ord_join_outer.ord_soggetto_desc,
		ord_join_outer.ord_stato_desc,
		ord_join_outer.importo,
		ord_join_outer.ord_ts_code,
		ord_join_outer.attoamm_numero,
		ord_join_outer.attoamm_anno,
		ord_join_outer.attoamm_stato_desc,
		ord_join_outer.classif_code as attoamm_sac_code,
		ord_join_outer.classif_desc as attoamm_sac_desc,
		ord_join_outer.attoamm_tipo_code,
		ord_join_outer.attoamm_tipo_desc,
		ord_join_outer.elem_id as uid_capitolo,
		ord_join_outer.elem_code as num_capitolo,
		ord_join_outer.elem_code2 as num_articolo,
		ord_join_outer.elem_code3 as num_ueb,
		ord_join_outer.elem_desc as capitolo_desc,
		provv_cassa.provc_anno,
		provv_cassa.provc_numero,
		provv_cassa.provc_data_convalida,
        quietanza.ord_quietanza_data,
        -- 05.07.2018 Sofia jira siac-6193
        ord_join_outer.sog_codice_fiscale,
  		ord_join_outer.sog_partita_iva,
        -- 10.07.2018 Sofia jira siac-6193
        -- MDP - no cessione
        (case when ord_join_outer.ord_relaz_tipo_code is null then ord_join_outer.ord_accredito_tipo_code
              else null end ) ord_accredito_tipo_code,
        (case when ord_join_outer.ord_relaz_tipo_code is null then ord_join_outer.ord_accredito_tipo_desc
              else null end ) ord_accredito_tipo_desc,
        (case when ord_join_outer.ord_relaz_tipo_code is null then ord_join_outer.ord_iban
              else null end ) ord_iban,
        (case when ord_join_outer.ord_relaz_tipo_code is null then ord_join_outer.ord_bic
              else null end ) ord_bic,
        (case when ord_join_outer.ord_relaz_tipo_code is null then ord_join_outer.ord_contocorrente
              else null end ) ord_contocorrente,
        (case when ord_join_outer.ord_relaz_tipo_code is null then ord_join_outer.ord_contocorrente_intestazione
              else null end ) ord_contocorrente_intestazione,
        (case when ord_join_outer.ord_relaz_tipo_code is null then ord_join_outer.ord_banca_denominazione
              else null end ) ord_banca_denominazione,
        (case when ord_join_outer.ord_relaz_tipo_code is null then ord_join_outer.ord_quietanzante
              else null end ) ord_quietanzante,
        (case when ord_join_outer.ord_relaz_tipo_code is null then ord_join_outer.ord_quietanzante_codice_fiscale
              else null end ) ord_quietanzante_codice_fiscale,
        -- dati cessione
		ord_join_outer.ord_soggetto_cessione_code,
		ord_join_outer.ord_soggetto_cessione_desc,
		ord_join_outer.ord_relaz_tipo_code,
  		ord_join_outer.ord_relaz_tipo_desc,
        -- MDP - cessione
		(case when ord_join_outer.ord_relaz_tipo_code is not null then ord_join_outer.ord_accredito_tipo_code
              else null end ) ord_accredito_tipo_code_cess,
        (case when ord_join_outer.ord_relaz_tipo_code is not  null then ord_join_outer.ord_accredito_tipo_desc
              else null end ) ord_accredito_tipo_desc_cess,
        (case when ord_join_outer.ord_relaz_tipo_code is not null then ord_join_outer.ord_iban
              else null end ) ord_iban_cess,
        (case when ord_join_outer.ord_relaz_tipo_code is not null then ord_join_outer.ord_bic
              else null end ) ord_bic_cess,
        (case when ord_join_outer.ord_relaz_tipo_code is not null then ord_join_outer.ord_contocorrente
              else null end ) ord_contocorrente_cess,
        (case when ord_join_outer.ord_relaz_tipo_code is not null then ord_join_outer.ord_contocorrente_intestazione
              else null end ) ord_contocorrente_intestazione_cess,
        (case when ord_join_outer.ord_relaz_tipo_code is not null then ord_join_outer.ord_banca_denominazione
              else null end ) ord_banca_denominazione_cess,
        (case when ord_join_outer.ord_relaz_tipo_code is not null then ord_join_outer.ord_quietanzante
              else null end ) ord_quietanzante_cess,
        (case when ord_join_outer.ord_relaz_tipo_code is not null then ord_join_outer.ord_quietanzante_codice_fiscale
              else null end ) ord_quietanzante_codice_fiscale_cess,
        ord_join_outer.liq_attoamm_desc,
		ord_join_outer.liq_attoalg_data_inserimento,
  		ord_join_outer.liq_attoalg_data_scad,
		ord_join_outer.liq_attoalg_stato_desc,
        ord_join_outer.ord_split::varchar,
        ord_join_outer.ord_split_importo,
        ord_join_outer.ord_ritenute::varchar,
        ord_join_outer.ord_ritenute_importo,
        ord_join_outer.sog_carte_contabili::varchar carte_contabili,
        (case when provv_cassa.provc_numero is not null then 'S' else 'N' end )::varchar ord_copertura,
        ord_join_outer.ord_conto_tesoreria,
        ord_join_outer.ord_distinta_codice,
        ord_join_outer.ord_distinta_desc
	from ord_join_outer
		left outer join provv_cassa on ord_join_outer.uid=provv_cassa.ord_id
		left outer join quietanza on ord_join_outer.uid=quietanza.ord_id



	order by 2,4,12,11
	LIMIT _limit
	OFFSET _offset;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--21

DROP FUNCTION if exists fnc_siac_cons_entita_mandato_from_liquidazione (integer,  integer, integer);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_mandato_from_liquidazione (
  _liq_id integer,
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  ord_numero numeric,
  ord_desc varchar,
  ord_emissione_data timestamp,
  -- 12.07.2018 Sofia siac-6193
  ord_soggetto_code varchar,
  ord_soggetto_desc varchar,
  ord_stato_desc varchar,
  importo numeric,
  ord_ts_code varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  num_capitolo varchar,
  num_articolo varchar,
  num_ueb varchar,
  capitolo_desc varchar,
  provc_anno integer,
  provc_numero numeric,
  provc_data_convalida timestamp,
  ord_quietanza_data timestamp,
  -- 05.07.2018 Sofia jira siac-6193
  sog_codice_fiscale varchar,
  sog_partita_iva varchar,
  -- MDP - no cessione
  ord_accredito_tipo_code varchar,
  ord_accredito_tipo_desc varchar,
  ord_iban varchar,
  ord_bic varchar,
  ord_contocorrente varchar,
  ord_contocorrente_intestazione varchar,
  ord_banca_denominazione varchar,
  ord_quietanzante varchar,
  ord_quietanzante_codice_fiscale varchar,
  -- Estremi Cessione
  ord_soggetto_cessione_code varchar,
  ord_soggetto_cessione_desc varchar,
  ord_relaz_tipo_code varchar,
  ord_relaz_tipo_desc varchar,
  -- MDP - Cessione
  ord_accredito_tipo_code_cess varchar,
  ord_accredito_tipo_desc_cess varchar,
  ord_iban_cess varchar,
  ord_bic_cess varchar,
  ord_contocorrente_cess varchar,
  ord_contocorrente_intestazione_cess varchar,
  ord_banca_denominazione_cess varchar,
  ord_quietanzante_cess varchar,
  ord_quietanzante_codice_fiscale_cess varchar,
  liq_attoamm_desc varchar,
  liq_attoalg_data_inserimento timestamp,
  liq_attoalg_data_scad timestamp,
  liq_attoalg_stato_desc varchar,
  ord_split varchar,
  ord_split_importo numeric,
  ord_ritenute varchar,
  ord_ritenute_importo numeric,
  carte_contabili varchar,
  ord_copertura varchar,
  ord_conto_tesoreria varchar,
  ord_distinta_codice varchar,
  ord_distinta_desc varchar
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;

    enteProprietarioId integer:=null;
    bilId integer:=null;

BEGIN

	-- 11.07.2018 Sofia siac-6193
    select liq.ente_proprietario_id , liq.bil_id
           into enteProprietarioId, bilId
    from siac_t_liquidazione liq
    where liq.liq_id=_liq_id;

	RETURN QUERY
	with ord_join_outer as (
		with ord_join as (
			with ordinativo as (
				select
					a.ord_id as uid,
					a.ord_numero,
					a.ord_desc,
					a.ord_emissione_data,
					e.ord_stato_desc,
					g.ord_ts_det_importo as importo,
					f.ord_ts_code,
					-- 06.07.2018 Sofia jira siac-6193
                    f.ord_ts_id,
                    a.contotes_id,
                    a.dist_id
				from
					siac_t_ordinativo a,
					siac_r_ordinativo_stato d,
					siac_d_ordinativo_stato e,
					siac_t_ordinativo_ts f,
					siac_t_ordinativo_ts_det g,
					siac_d_ordinativo_ts_det_tipo h,
					siac_d_ordinativo_tipo i
				where a.bil_id=bilId
                and   d.ord_id=a.ord_id
				and d.ord_stato_id=e.ord_stato_id
				and now() BETWEEN d.validita_inizio and COALESCE(d.validita_fine,now())
				and f.ord_id=a.ord_id
				and g.ord_ts_id=f.ord_ts_id
				and h.ord_ts_det_tipo_id=g.ord_ts_det_tipo_id
				and h.ord_ts_det_tipo_code = 'A'
				and i.ord_tipo_id=a.ord_tipo_id
				and i.ord_tipo_code='P'
				and a.data_cancellazione is null
				and d.data_cancellazione is null
				and e.data_cancellazione is null
				and f.data_cancellazione is null
				and g.data_cancellazione is null
				and i.data_cancellazione is null
			),
			soggetto as (
				select
					b.ord_id,
                    -- 12.07.2018 Sofia siac-6193
					c.soggetto_code ord_soggetto_code,
					c.soggetto_desc ord_soggetto_desc,
                    -- 05.07.2018 Sofia jira siac-6193
                    c.codice_fiscale::varchar sog_codice_fiscale,
				    c.partita_iva    sog_partita_iva,
                    c.soggetto_id
				from
					siac_r_ordinativo_soggetto b,
					siac_t_soggetto c
				where c.ente_proprietario_id=enteProprietarioId
                and   c.soggetto_id=b.soggetto_id
				and   now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now())
				and   b.data_cancellazione is null
				and   c.data_cancellazione is null
			),
			attoamm as (
				select
					m.ord_id,
					n.attoamm_id,
					n.attoamm_numero,
					n.attoamm_anno,
					q.attoamm_stato_desc,
					o.attoamm_tipo_code,
					o.attoamm_tipo_desc
				from
					siac_r_ordinativo_atto_amm m,
					siac_t_atto_amm n,
					siac_d_atto_amm_tipo o,
					siac_r_atto_amm_stato p,
					siac_d_atto_amm_stato q
				where n.ente_proprietario_id=enteProprietarioId
                and  n.attoamm_id=m.attoamm_id
				and o.attoamm_tipo_id=n.attoamm_tipo_id
				and p.attoamm_id=n.attoamm_id
				and p.attoamm_stato_id=q.attoamm_stato_id
				and now() BETWEEN p.validita_inizio and coalesce (p.validita_fine,now())
				and now() BETWEEN m.validita_inizio and COALESCE(m.validita_fine,now())
				and q.attoamm_stato_code<>'ANNULLATO'
				and m.data_cancellazione is null
				and n.data_cancellazione is null
				and o.data_cancellazione is null
				and p.data_cancellazione is null
				and q.data_cancellazione is null
			),
			capitolo as (
				select
					r.ord_id,
					s.elem_id,
					s.elem_code,
					s.elem_code2,
					s.elem_code3,
					s.elem_desc
				from
					siac_r_ordinativo_bil_elem r,
					siac_t_bil_elem s,siac_d_bil_elem_tipo tipo
				where tipo.ente_proprietario_id=enteProprietarioId
                and   tipo.elem_tipo_code='CAP-UG'
                and   s.elem_tipo_id=tipo.elem_tipo_id
                and   s.bil_id=bilId
                and   r.elem_id=s.elem_id
				and   r.data_cancellazione is null
				and   s.data_cancellazione is null
				and   now() BETWEEN r.validita_inizio and coalesce (r.validita_fine,now())
			),
            /*-- 06.07.2018 Sofia jira siac-6193
			modpag as (
				select
					c2.ord_id,
					e2.accredito_tipo_code,
					e2.accredito_tipo_desc
				FROM
					siac_r_ordinativo_modpag c2,
					siac_t_modpag d2,
					siac_d_accredito_tipo e2
				where c2.modpag_id=d2.modpag_id
				and e2.accredito_tipo_id=d2.accredito_tipo_id
				and now() BETWEEN c2.validita_inizio and coalesce (c2.validita_fine,now())
				and c2.data_cancellazione is null
				and d2.data_cancellazione is null
				and e2.data_cancellazione is null
			),*/
            -- 06.07.2018 Sofia jira siac-6193
            modpag as
            (
             select
			         queryMDP.soggetto_cessione_code ord_soggetto_cessione_code,
			         queryMDP.soggetto_cessione_desc ord_soggetto_cessione_desc,
			         queryMDP.accredito_tipo_code,
		             queryMDP.accredito_tipo_desc,
			         queryMDP.iban ord_iban,
			         queryMDP.bic ord_bic,
			         queryMDP.contocorrente ord_contocorrente,
			         queryMDP.contocorrente_intestazione ord_contocorrente_intestazione,
			         queryMDP.banca_denominazione ord_banca_denominazione,
			         queryMDP.quietanziante ord_quietanzante,
			         queryMDP.quietanziante_codice_fiscale::varchar ord_quietanzante_codice_fiscale,
			         queryMDP.relaz_tipo_code ord_relaz_tipo_code,
			         queryMDP.relaz_tipo_desc ord_relaz_tipo_desc,
                     queryMDP.ord_id
             from
             (
                select
			         sog_cessione.soggetto_code soggetto_cessione_code,
			         sog_cessione.soggetto_desc soggetto_cessione_desc,
			         dat.accredito_tipo_code,
		             dat.accredito_tipo_desc,
			         tmod.iban,
			         tmod.bic,
			         tmod.contocorrente,
			         tmod.contocorrente_intestazione,
			         tmod.banca_denominazione,
			         tmod.quietanziante ,
			         tmod.quietanziante_codice_fiscale::varchar,
			         drt.relaz_tipo_code,
			         drt.relaz_tipo_desc,
                     rmdp.ord_id
		        from  siac_r_ordinativo_modpag rmdp,
                      siac_r_soggetto_relaz rrelaz,
                      siac_r_soggrel_modpag rsm,
        		      siac_d_relaz_tipo drt,
                      -- 13.07.2018 Sofia jira SIAC-6193
                      siac_d_oil_relaz_tipo oil, siac_r_oil_relaz_tipo roil,
		              siac_t_soggetto sog_cessione,
		              siac_t_modpag tmod,
		              siac_d_accredito_tipo dat
			    where oil.ente_proprietario_id=enteProprietarioId                 -- 13.07.2018 Sofia jira SIAC-6193
                and   oil.oil_relaz_tipo_code ='CSI'
                and   roil.oil_relaz_tipo_id=oil.oil_relaz_tipo_id
                and   drt.relaz_tipo_id=roil.relaz_tipo_id
                and   rrelaz.relaz_tipo_id=drt.relaz_tipo_id
                and   rmdp.soggetto_relaz_id=rrelaz.soggetto_relaz_id
                and   rsm.soggetto_relaz_id=rrelaz.soggetto_relaz_id
		        and   tmod.modpag_id=rsm.modpag_id
   		        and   dat.accredito_tipo_id = tmod.accredito_tipo_id
		        and   sog_cessione.soggetto_id=rrelaz.soggetto_id_a
		        and   rmdp.data_cancellazione is null
		        and   rmdp.validita_fine is null
                and   roil.data_cancellazione is null
		        and   roil.validita_fine is null
		        and   rrelaz.data_cancellazione is null
		        and   now()  BETWEEN rrelaz.validita_inizio and coalesce(rrelaz.validita_fine,now())
		        and   rsm.data_cancellazione is null
		        and   now()  BETWEEN rsm.validita_inizio and coalesce(rsm.validita_fine,now())
		        and   tmod.data_cancellazione is null
		        and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
	 		    union
				select
                    null soggetto_cessione_code,
                    null soggetto_cessione_desc,
		            tipo.accredito_tipo_code,
		            tipo.accredito_tipo_desc,
        		    tmod.iban,
		            tmod.bic,
        		    tmod.contocorrente,
		            tmod.contocorrente_intestazione,
        		    tmod.banca_denominazione,
		            tmod.quietanziante,
		            tmod.quietanziante_codice_fiscale::varchar,
                    null relaz_tipo_code,
			        null relaz_tipo_desc,
                    rModpag.ord_id
		        from  siac_r_ordinativo_modpag rModpag, siac_t_modpag tmod,  siac_d_accredito_tipo tipo
				where tipo.ente_proprietario_id=enteProprietarioId
                and   tmod.accredito_tipo_id = tipo.accredito_tipo_id
                and   tmod.modpag_id=rModpag.modpag_id
		        and   rModpag.data_cancellazione is null
		        and   rModpag.validita_fine is null
		        and   tmod.data_cancellazione is null
				and   now()  BETWEEN tmod.validita_inizio and coalesce(tmod.validita_fine,now())
             ) queryMDP
            ),
            /* -- 06.07.2018 Sofia jira siac-6193
			liquidazione as
            (
				select
					z.ord_id
				from
					siac_r_liquidazione_ord r,
					siac_t_liquidazione s,siac_t_ordinativo_ts z
				where s.liq_id =r.liq_id
				and s.liq_id=_liq_id
				and r.data_cancellazione is null
				and s.data_cancellazione is null
				and z.ord_ts_id=r.sord_id
				and now() BETWEEN r.validita_inizio and coalesce (r.validita_fine,now())
			)*/
            -- 06.07.2018 Sofia jira siac-6193
            liquidazione as
            (
              with
              liq as
              (
				select
					i.sord_id ord_ts_id,
					i.liq_id--,
--					m.ord_id
				from siac_t_liquidazione l,
                     siac_r_liquidazione_ord i--,
					 --siac_t_ordinativo_ts m
				where l.liq_id=_liq_id
                and   i.liq_id=l.liq_id
--                and   m.ord_ts_id=i.sord_id
                and   i.data_cancellazione is null
				and   now() BETWEEN i.validita_inizio and COALESCE(i.validita_fine,now())
                and   l.data_cancellazione is null
                and   now() BETWEEN l.validita_inizio and COALESCE(l.validita_fine,now())
--                and   m.data_cancellazione is null
--                and   m.validita_fine is null

              ),
              liq_atto as
              (
              	select rliq.liq_id,
                       coalesce(alg.attoal_causale , atto.attoamm_oggetto) liq_attoamm_desc,
                  	   alg.data_creazione liq_attoalg_data_inserimento,
                       alg.attoal_data_scadenza liq_attoalg_data_scad,
                       algstato.attoal_stato_desc liq_attoalg_stato_desc
        	    from siac_r_liquidazione_atto_amm rliq,
            	     siac_t_atto_amm atto
                	 left join siac_t_atto_allegato alg
                           join siac_r_atto_allegato_stato rsalg
                            join siac_d_atto_allegato_stato algstato
                            on (algstato.attoal_stato_id=rsalg.attoal_stato_id and algstato.attoal_stato_code!='A')
                           on (rsalg.attoal_id=alg.attoal_id and
                               rsalg.data_cancellazione is null and
                               now() between rsalg.validita_inizio and coalesce(rsalg.validita_fine, now()))
                     on ( alg.attoamm_id=atto.attoamm_id )
	             where rliq.liq_id=_liq_id
                 and   atto.attoamm_id=rliq.attoamm_id
	             and   rliq.data_cancellazione is null
     		     and   rliq.validita_fine is null
            	 and   atto.data_cancellazione is null
	             and   now() between atto.validita_inizio and coalesce(atto.validita_fine, now())
              )
              select liq.*,
                     liq_atto.liq_attoamm_desc,
                     liq_atto.liq_attoalg_data_inserimento,
                     liq_atto.liq_attoalg_data_scad,
                     liq_atto.liq_attoalg_stato_desc
              from liq left join liq_atto on (liq.liq_id=liq_atto.liq_id)
			),
            -- 06.07.2018 Sofia jira siac-6193
            split as
            (
              select distinct
                     rsub.ord_ts_id
              from 	siac_r_subdoc_ordinativo_ts rsub,
                    siac_t_subdoc sub,siac_r_subdoc_splitreverse_iva_tipo rsplit,
                    siac_d_splitreverse_iva_tipo tipo
              where tipo.ente_proprietario_id=enteProprietarioId
              and   tipo.sriva_tipo_code!='ES'
              and   rsplit.sriva_tipo_id=tipo.sriva_tipo_id
              and   sub.subdoc_id=rsplit.subdoc_id
              and   rsub.subdoc_id=sub.subdoc_id
              and   rsub.data_cancellazione is null
              and   rsub.validita_fine is null
              and   sub.data_cancellazione is null
              and   sub.validita_fine is null
              and   rsplit.data_cancellazione is null
              and   rsplit.validita_fine is null
            ),
            -- 06.07.2018 Sofia jira siac-6193
            split_importo as
            (
            	select rord.ord_id_da ord_id,
                	   coalesce(sum(coalesce(det.ord_ts_det_importo,0)),0) importo
                from siac_r_ordinativo rOrd, siac_d_relaz_tipo tipo,
                     siac_r_ordinativo_stato rstato,siac_d_ordinativo_stato stato,
                     siac_t_ordinativo_ts ts, siac_t_ordinativo_ts_det det, siac_d_ordinativo_ts_det_tipo tipod
				where tipo.ente_proprietario_id=enteProprietarioId
                and   tipo.relaz_tipo_code='SPR'
                and   tipo.relaz_tipo_id=rord.relaz_tipo_id
			    and   rstato.ord_id=rOrd.ord_id_a
                and   stato.ord_stato_id=rstato.ord_stato_id
				and   stato.ord_stato_code!='A'
                and   ts.ord_id=rstato.ord_id
                and   det.ord_ts_id=ts.ord_ts_id
       	        and   tipod.ord_ts_det_tipo_id=det.ord_ts_det_tipo_id
                and   tipod.ord_ts_det_tipo_code='A'
                and   rord.data_cancellazione is null
			    and   now() between rord.validita_inizio and coalesce(rord.validita_fine, now())
   				and   rstato.data_cancellazione is null
				and   now() between rstato.validita_inizio and coalesce(rstato.validita_fine, now())
   				and   ts.data_cancellazione is null
                and   ts.validita_fine is null
   				and   det.data_cancellazione is null
                and   det.validita_fine is null
                group by rord.ord_id_da
            ),
            -- 06.07.2018 Sofia jira siac-6193
            ritenute as
            (
             select distinct ts.ord_ts_id
             from siac_r_doc_onere  rdoc, siac_t_subdoc doc, siac_r_subdoc_ordinativo_ts ts,
                  siac_d_onere_tipo tipo,siac_d_onere onere
	  		 where   tipo.ente_proprietario_id=enteProprietarioId
               and   tipo.onere_tipo_code not in ('SP','ES')
               and   onere.onere_tipo_id=tipo.onere_tipo_id
               and   rdoc.onere_id=onere.onere_id
               and   doc.doc_id=rdoc.doc_id
               and   ts.subdoc_id=doc.subdoc_id
			   and   rdoc.data_cancellazione is null
               and   now() between rdoc.validita_inizio and coalesce(rdoc.validita_fine, now())
               and   doc.data_cancellazione is null
	     	   and   doc.validita_fine is null
               and   ts.data_cancellazione is null
               and   now() between ts.validita_inizio and coalesce(ts.validita_fine, now())
            ),
            -- 06.07.2018 Sofia jira siac-6193
            ritenute_importo as
            (
             select rOrd.ord_id_da ord_id,
                    coalesce(sum(coalesce(det.ord_ts_det_importo,0)),0)  importo
             from siac_r_ordinativo rOrd, siac_d_relaz_tipo tipo,
                  siac_r_ordinativo_stato rstato,siac_d_ordinativo_stato stato,
  	              siac_t_ordinativo_ts ts, siac_t_ordinativo_ts_det det, siac_d_ordinativo_ts_det_tipo tipod
			 where  tipo.ente_proprietario_id=enteProprietarioId
              and   tipo.relaz_tipo_code='RIT_ORD'
			  and   tipo.relaz_tipo_id=rord.relaz_tipo_id
			  and   rstato.ord_id=rOrd.ord_id_a
	          and   stato.ord_stato_id=rstato.ord_stato_id
	    	  and   stato.ord_stato_code!='A'
	          and   ts.ord_id=rstato.ord_id
    	      and   det.ord_ts_id=ts.ord_ts_id
        	  and   tipod.ord_ts_det_tipo_id=det.ord_ts_det_tipo_id
              and   tipod.ord_ts_det_tipo_code='A'
	          and   rord.data_cancellazione is null
 		  	  and   now() between rord.validita_inizio and coalesce(rord.validita_fine, now())
   			  and   rstato.data_cancellazione is null
			  and   now() between rstato.validita_inizio and coalesce(rstato.validita_fine, now())
	   		  and   ts.data_cancellazione is null
    	      and   ts.validita_fine is null
   			  and   det.data_cancellazione is null
              and   det.validita_fine is null
              group by rOrd.ord_id_da
            ),
            -- 06.07.2018 Sofia jira siac-6193
            conto_tesoreria as
            (
             select d.contotes_id, d.contotes_code
             from siac_d_contotesoreria d
             where d.ente_proprietario_id=enteProprietarioId
            ),
            -- 06.07.2018 Sofia jira siac-6193
            distinta as
            (
             select dist.dist_id,
                    dist.dist_code,
                    dist.dist_desc
             from siac_d_distinta dist
             where dist.ente_proprietario_id=enteProprietarioId
            )
			select ordinativo.*,
                   soggetto.*,
				   attoamm.*,
                   capitolo.*,
                   liquidazione.*,
                   modpag.*,
                   -- 06.07.2018 Sofia jira siac-6193
                   ( case when split.ord_ts_id is not null then 'S' else 'N' end) ord_split,
                   split_importo.importo ord_split_importo,
                   ( case when ritenute.ord_ts_id is not null then 'S' else 'N' end) ord_ritenute,
                   ritenute_importo.importo ord_ritenute_importo,
                   conto_tesoreria.contotes_code ord_conto_tesoreria,
                   distinta.dist_code ord_distinta_codice,
                   distinta.dist_desc ord_distinta_desc

			from
				ordinativo
				cross join soggetto
				cross join attoamm
				cross join capitolo
				cross join liquidazione
				left OUTER join modpag on (ordinativo.uid=modpag.ord_id)
                -- 05.07.2018 Sofia jira siac-6193
                left join  split on (split.ord_ts_id=ordinativo.ord_ts_id)
                left join  split_importo on (split_importo.ord_id=ordinativo.uid)
                left join  ritenute on (ritenute.ord_ts_id=ordinativo.ord_ts_id)
                left join  ritenute_importo on (ritenute_importo.ord_id=ordinativo.uid)
                left join  conto_tesoreria on (conto_tesoreria.contotes_id=ordinativo.contotes_id)
                left join  distinta on (distinta.dist_id=ordinativo.dist_id)
			where ordinativo.uid=soggetto.ord_id
			and ordinativo.uid=attoamm.ord_id
			and ordinativo.uid=capitolo.ord_id
			--and ordinativo.uid=modpag.ord_id
--			and ordinativo.uid=liquidazione.ord_id
            -- 06.07.2018 Sofia jira siac-6193
            and ordinativo.ord_ts_id=liquidazione.ord_ts_id
		),
		sac_attoamm as (
			select
				y.classif_code,
				y.classif_desc,
				z.attoamm_id
			from
				siac_r_atto_amm_class z,
				siac_t_class y,
				siac_d_class_tipo x
			where  x.ente_proprietario_id=enteProprietarioId
            and    x.classif_tipo_code IN ('CDC', 'CDR')
            and    y.classif_tipo_id=x.classif_tipo_id
            and    z.classif_id=y.classif_id
			and now() BETWEEN z.validita_inizio and coalesce (z.validita_fine,now())
			and z.data_cancellazione is NULL
			and x.data_cancellazione is NULL
			and y.data_cancellazione is NULL
		),
        -- 06.07.2018 Sofia jira siac-6193
        carte_contabili as
        (
           select  distinct rcs.soggetto_id
           from  siac_r_cartacont_det_soggetto rcs,
                 siac_t_cartacont_det det, siac_t_cartacont carta,
                 siac_r_cartacont_stato rs,siac_d_cartacont_stato stato
	       where   det.ente_proprietario_id=enteProprietarioId
             and   det.cartac_det_id=rcs.cartac_det_id
             and   carta.cartac_id=det.cartac_id
             and   rs.cartac_id=carta.cartac_id
             and   stato.cartac_stato_id=rs.cartac_stato_id
             and   stato.cartac_stato_code!='A'
             and   rcs.data_cancellazione is null
             and   now() between rcs.validita_inizio and coalesce(rcs.validita_fine, now())
             and   rs.data_cancellazione is null
             and   now() between rs.validita_inizio and coalesce(rs.validita_fine, now())
             and   carta.data_cancellazione is null
             and   carta.validita_fine is null
             and   det.data_cancellazione is null
             and   det.validita_fine is null
        )
        -- 06.07.2018 Sofia jira siac-6193
		select ord_join.*,
               sac_attoamm.*,
               (case when carte_contabili.soggetto_id is not null then 'S' else 'N' end ) sog_carte_contabili
		from ord_join
		left outer join sac_attoamm on ord_join.attoamm_id=sac_attoamm.attoamm_id
        -- 06.07.2018 Sofia jira siac-6193
        left join carte_contabili on (ord_join.soggetto_id=carte_contabili.soggetto_id)

	),
	provv_cassa as (
		select
			a2.ord_id,
			b2.provc_anno,
			b2.provc_numero,
			b2.provc_data_convalida
		from
			siac_r_ordinativo_prov_cassa a2,
			siac_t_prov_cassa b2
		where b2.ente_proprietario_id=enteProprietarioId
        and  b2.provc_id=a2.provc_id
		and now() BETWEEN a2.validita_inizio and coalesce (a2.validita_fine,now())
		and a2.data_cancellazione is NULL
		and b2.data_cancellazione is NULL
	),
    /* -- 06.07.2018 Sofia jira siac-6193
    quietanza AS(
     --SIAC-5899
      SELECT
          siac_T_Ordinativo.ord_id,
          siac_r_ordinativo_quietanza.ord_quietanza_data
      FROM
          siac_t_oil_ricevuta
          ,siac_T_Ordinativo
          ,siac_d_oil_ricevuta_tipo
          ,siac_r_ordinativo_quietanza
      WHERE
              siac_t_oil_ricevuta.oil_ricevuta_tipo_id =  siac_d_oil_ricevuta_tipo.oil_ricevuta_tipo_id
          AND siac_t_oil_ricevuta.oil_ord_id  = siac_T_Ordinativo.ord_id
          AND siac_T_Ordinativo.ord_id = siac_r_ordinativo_quietanza.ord_id
          AND siac_d_oil_ricevuta_tipo.oil_ricevuta_tipo_code = 'Q'
          AND siac_t_oil_ricevuta.data_cancellazione is null
          AND siac_T_Ordinativo.data_cancellazione is null
          AND siac_d_oil_ricevuta_tipo.data_cancellazione is null
          AND siac_r_ordinativo_quietanza.data_cancellazione is null
    )*/
    -- 06.07.2018 Sofia jira siac-6193
    quietanza as
    (
	  SELECT r.ord_id, max(r.ord_quietanza_data) ord_quietanza_data
	  FROM siac_r_ordinativo_quietanza r
	  WHERE r.data_cancellazione  is null
      and   now() between r.validita_inizio and coalesce(r.validita_fine, now())
      group by r.ord_id
    )

	select
		ord_join_outer.uid,
		ord_join_outer.ord_numero,
		ord_join_outer.ord_desc,
		ord_join_outer.ord_emissione_data,
        -- 12.07.2018 Sofia siac-6193
		ord_join_outer.ord_soggetto_code,
		ord_join_outer.ord_soggetto_desc,
--- 11.07.2018 Sofia siac-6193
---		ord_join_outer.accredito_tipo_code,
---		ord_join_outer.accredito_tipo_desc,
		ord_join_outer.ord_stato_desc,
		ord_join_outer.importo,
		ord_join_outer.ord_ts_code,
		ord_join_outer.attoamm_numero,
		ord_join_outer.attoamm_anno,
		ord_join_outer.attoamm_stato_desc,
		ord_join_outer.classif_code as attoamm_sac_code,
		ord_join_outer.classif_desc as attoamm_sac_desc,
		ord_join_outer.attoamm_tipo_code,
		ord_join_outer.attoamm_tipo_desc,
		ord_join_outer.elem_code as num_capitolo,
		ord_join_outer.elem_code2 as num_articolo,
		ord_join_outer.elem_code3 as num_ueb,
		ord_join_outer.elem_desc as capitolo_desc,
		provv_cassa.provc_anno,
		provv_cassa.provc_numero,
		provv_cassa.provc_data_convalida,
        quietanza.ord_quietanza_data,
        -- 05.07.2018 Sofia jira siac-6193
        ord_join_outer.sog_codice_fiscale,
  		ord_join_outer.sog_partita_iva,
        -- 11.07.2018 Sofia siac-6193
   		(case when ord_join_outer.ord_relaz_tipo_code is null then ord_join_outer.accredito_tipo_code end ) ord_accredito_tipo_code,
   		(case when ord_join_outer.ord_relaz_tipo_code is null then ord_join_outer.accredito_tipo_desc end ) ord_accredito_tipo_desc,
   		(case when ord_join_outer.ord_relaz_tipo_code is null then ord_join_outer.ord_iban end ) ord_iban,
   		(case when ord_join_outer.ord_relaz_tipo_code is null then ord_join_outer.ord_bic end ) ord_bic,
   		(case when ord_join_outer.ord_relaz_tipo_code is null then ord_join_outer.ord_contocorrente end ) ord_contocorrente,
   		(case when ord_join_outer.ord_relaz_tipo_code is null then ord_join_outer.ord_contocorrente_intestazione end ) ord_contocorrente_intestazione,
   		(case when ord_join_outer.ord_relaz_tipo_code is null then ord_join_outer.ord_banca_denominazione end ) ord_banca_denominazione,
   		(case when ord_join_outer.ord_relaz_tipo_code is null then ord_join_outer.ord_quietanzante end ) ord_quietanzante,
   		(case when ord_join_outer.ord_relaz_tipo_code is null then ord_join_outer.ord_quietanzante_codice_fiscale end ) ord_quietanzante_codice_fiscale,
        -- 11.07.2018 Sofia siac-6193
        ord_join_outer.ord_soggetto_cessione_code,
		ord_join_outer.ord_soggetto_cessione_desc,
		ord_join_outer.ord_relaz_tipo_code,
  		ord_join_outer.ord_relaz_tipo_desc,
   		(case when ord_join_outer.ord_relaz_tipo_code is not null then ord_join_outer.accredito_tipo_code end ) ord_accredito_tipo_code_cess,
   		(case when ord_join_outer.ord_relaz_tipo_code is not null then ord_join_outer.accredito_tipo_desc end ) ord_accredito_tipo_desc_cess,
   		(case when ord_join_outer.ord_relaz_tipo_code is not null then ord_join_outer.ord_iban end ) ord_iban_cess,
   		(case when ord_join_outer.ord_relaz_tipo_code is not null then ord_join_outer.ord_bic end ) ord_bic_cess,
   		(case when ord_join_outer.ord_relaz_tipo_code is not null then ord_join_outer.ord_contocorrente end ) ord_contocorrente_cess,
   		(case when ord_join_outer.ord_relaz_tipo_code is not null then ord_join_outer.ord_contocorrente_intestazione end ) ord_contocorrente_intestazione_cess,
   		(case when ord_join_outer.ord_relaz_tipo_code is not null then ord_join_outer.ord_banca_denominazione end ) ord_banca_denominazione_cess,
   		(case when ord_join_outer.ord_relaz_tipo_code is not null then ord_join_outer.ord_quietanzante end ) ord_quietanzante_cess,
   		(case when ord_join_outer.ord_relaz_tipo_code is not null then ord_join_outer.ord_quietanzante_codice_fiscale end ) ord_quietanzante_codice_fiscale_cess,
        ord_join_outer.liq_attoamm_desc,
		ord_join_outer.liq_attoalg_data_inserimento,
  		ord_join_outer.liq_attoalg_data_scad,
		ord_join_outer.liq_attoalg_stato_desc,
        ord_join_outer.ord_split::varchar,
        ord_join_outer.ord_split_importo,
        ord_join_outer.ord_ritenute::varchar,
        ord_join_outer.ord_ritenute_importo,
        ord_join_outer.sog_carte_contabili::varchar carte_contabili,
        (case when provv_cassa.provc_numero is not null then 'S' else 'N' end )::varchar ord_copertura,
        ord_join_outer.ord_conto_tesoreria,
        ord_join_outer.ord_distinta_codice,
        ord_join_outer.ord_distinta_desc
	from ord_join_outer
      left outer join provv_cassa on ord_join_outer.uid=provv_cassa.ord_id
      left outer join quietanza on ord_join_outer.uid=quietanza.ord_id

	order by 2,4,12,11
	LIMIT _limit
	OFFSET _offset;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--22
DROP FUNCTION if exists fnc_siac_cons_entita_mandato_from_provvedimento (integer,  integer, integer);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_mandato_from_provvedimento (
  _uid_provvedimento integer,
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  ord_numero numeric,
  ord_desc varchar,
  ord_emissione_data timestamp,
  -- 12.07.2018 Sofia siac-6193
  ord_soggetto_code varchar,
  ord_soggetto_desc varchar,
-- 11.07.2018 Sofia jira siac-6193
--  accredito_tipo_code varchar,
--  accredito_tipo_desc varchar,
  ord_stato_desc varchar,
  importo numeric,
  ord_ts_code varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  uid_capitolo integer,
  num_capitolo varchar,
  num_articolo varchar,
  num_ueb varchar,
  capitolo_desc varchar,
  provc_anno integer,
  provc_numero numeric,
  provc_data_convalida timestamp,
  ord_quietanza_data timestamp,
  -- 11.07.2018 Sofia jira siac-6193
  sog_codice_fiscale varchar,
  sog_partita_iva varchar,
  -- MDP - no cessione
  ord_accredito_tipo_code varchar,
  ord_accredito_tipo_desc varchar,
  ord_iban varchar,
  ord_bic varchar,
  ord_contocorrente varchar,
  ord_contocorrente_intestazione varchar,
  ord_banca_denominazione varchar,
  ord_quietanzante varchar,
  ord_quietanzante_codice_fiscale varchar,
  -- Estremi Cessione
  ord_soggetto_cessione_code varchar,
  ord_soggetto_cessione_desc varchar,
  ord_relaz_tipo_code varchar,
  ord_relaz_tipo_desc varchar,
  -- MDP - Cessione
  ord_accredito_tipo_code_cess varchar,
  ord_accredito_tipo_desc_cess varchar,
  ord_iban_cess varchar,
  ord_bic_cess varchar,
  ord_contocorrente_cess varchar,
  ord_contocorrente_intestazione_cess varchar,
  ord_banca_denominazione_cess varchar,
  ord_quietanzante_cess varchar,
  ord_quietanzante_codice_fiscale_cess varchar,
  liq_attoamm_desc varchar,
  liq_attoalg_data_inserimento timestamp,
  liq_attoalg_data_scad timestamp,
  liq_attoalg_stato_desc varchar,
  ord_split varchar,
  ord_split_importo numeric,
  ord_ritenute varchar,
  ord_ritenute_importo numeric,
  carte_contabili varchar,
  ord_copertura varchar,
  ord_conto_tesoreria varchar,
  ord_distinta_codice varchar,
  ord_distinta_desc varchar


) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;

    enteProprietarioId integer:=null;
BEGIN

    -- 11.07.2018 Sofia jira siac-6193
	select ente_proprietario_id into enteProprietarioId
    from siac_t_atto_amm atto
    where atto.attoamm_id=_uid_provvedimento;

	RETURN QUERY
	with ord_join_outer as (
		with ord_join as (
			with ordinativo as (
				select
					a.ord_id as uid,
					a.ord_numero,
					a.ord_desc,
					a.ord_emissione_data,
					e.ord_stato_desc,
					g.ord_ts_det_importo as importo,
					f.ord_ts_code,
                    -- 11.07.2018 Sofia jira siac-6193
                    f.ord_ts_id,
                    a.contotes_id,
                    a.dist_id
				from
					siac_t_ordinativo a,
					siac_r_ordinativo_stato d,
					siac_d_ordinativo_stato e,
					siac_t_ordinativo_ts f,
					siac_t_ordinativo_ts_det g,
					siac_d_ordinativo_ts_det_tipo h,
					siac_d_ordinativo_tipo i
				where d.ord_id=a.ord_id
				and d.ord_stato_id=e.ord_stato_id
				and now() BETWEEN d.validita_inizio and COALESCE(d.validita_fine,now())
				and f.ord_id=a.ord_id
				and g.ord_ts_id=f.ord_ts_id
				and h.ord_ts_det_tipo_id=g.ord_ts_det_tipo_id
				and h.ord_ts_det_tipo_code = 'A'
				and i.ord_tipo_id=a.ord_tipo_id
				and i.ord_tipo_code='P'
				and a.data_cancellazione is null
				and d.data_cancellazione is null
				and e.data_cancellazione is null
				and f.data_cancellazione is null
				and g.data_cancellazione is null
				and i.data_cancellazione is null
			),
			soggetto as (
				select
					b.ord_id,
					c.soggetto_code,
					c.soggetto_desc,
                    -- 11.07.2018 Sofia jira siac-6193
                    c.codice_fiscale::varchar sog_codice_fiscale,
				    c.partita_iva    sog_partita_iva,
                    c.soggetto_id
				from
					siac_r_ordinativo_soggetto b,
					siac_t_soggetto c
				where b.soggetto_id=c.soggetto_id
				and now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now())
				and b.data_cancellazione is null
				and c.data_cancellazione is null
			),
			attoamm as (
				select
					m.ord_id,
					n.attoamm_id,
					n.attoamm_numero,
					n.attoamm_anno,
					q.attoamm_stato_desc,
					o.attoamm_tipo_code,
					o.attoamm_tipo_desc
				from
					siac_r_ordinativo_atto_amm m,
					siac_t_atto_amm n,
					siac_d_atto_amm_tipo o,
					siac_r_atto_amm_stato p,
					siac_d_atto_amm_stato q
				where n.attoamm_id=m.attoamm_id
				and n.attoamm_id=_uid_provvedimento
				and o.attoamm_tipo_id=n.attoamm_tipo_id
				and p.attoamm_id=n.attoamm_id
				and p.attoamm_stato_id=q.attoamm_stato_id
				and now() BETWEEN p.validita_inizio and coalesce (p.validita_fine,now())
				and now() BETWEEN m.validita_inizio and COALESCE(m.validita_fine,now())
				and q.attoamm_stato_code<>'ANNULLATO'
				and m.data_cancellazione is null
				and n.data_cancellazione is null
				and o.data_cancellazione is null
				and p.data_cancellazione is null
				and q.data_cancellazione is null
			),
			capitolo as (
				select
					r.ord_id,
					s.elem_id,
					s.elem_code,
					s.elem_code2,
					s.elem_code3,
					s.elem_desc
				from
					siac_r_ordinativo_bil_elem r,
					siac_t_bil_elem s
				where s.elem_id=r.elem_id
				and r.data_cancellazione is null
				and s.data_cancellazione is null
				and now() BETWEEN r.validita_inizio and coalesce (r.validita_fine,now())
			),
			modpag as
            (
				with modpag_noncessione as
                (
					select
						c2.ord_id,
						e2.accredito_tipo_code,
						e2.accredito_tipo_desc,
                        -- 11.07.2018 Sofia jira siac-6193
                        null::varchar soggetto_cessione_code,
                        null::varchar soggetto_cessione_desc,
                        null::varchar relaz_tipo_code,
                        null::varchar relaz_tipo_desc,
                        d2.iban,
                        d2.bic,
                        d2.contocorrente,
                        d2.contocorrente_intestazione,
                        d2.banca_denominazione,
                        d2.quietanziante,
                        d2.quietanziante_codice_fiscale::varchar
					FROM
						siac_r_ordinativo_modpag c2,
						siac_t_modpag d2,
						siac_d_accredito_tipo e2
					where c2.modpag_id=d2.modpag_id
					and   e2.accredito_tipo_id=d2.accredito_tipo_id
					and   now() BETWEEN c2.validita_inizio and coalesce (c2.validita_fine,now())
					and   c2.data_cancellazione is null
					and   d2.data_cancellazione is null
					and   e2.data_cancellazione is null
				),
				modpag_cessione as
                (
					select
						c2.ord_id,
                        -- 11.07.2018 Sofia jira siac-6193
                        accre.accredito_tipo_code,
                        accre.accredito_tipo_desc,
                        sog.soggetto_code soggetto_cessione_code,
                        sog.soggetto_desc soggetto_cessione_desc,
						e2.relaz_tipo_code,
						e2.relaz_tipo_desc,
                        -- 11.07.2018 Sofia jira siac-6193
                        mdp.iban,
                        mdp.bic,
                        mdp.contocorrente,
                        mdp.contocorrente_intestazione,
                        mdp.banca_denominazione,
                        mdp.quietanziante,
                        mdp.quietanziante_codice_fiscale::varchar
					from
						siac_r_ordinativo_modpag c2,
						siac_r_soggetto_relaz d2,
                        siac_t_soggetto sog,
						siac_d_relaz_tipo e2,
                        siac_d_oil_relaz_tipo oil, siac_r_oil_relaz_tipo roil, -- 13.07.2018 Sofia jira SIAC-6193
                        siac_r_soggrel_modpag rel,
                        siac_t_modpag mdp,
                        siac_d_accredito_tipo accre
					where d2.soggetto_relaz_id = c2.soggetto_relaz_id
					and   e2.relaz_tipo_id = d2.relaz_tipo_id
                    -- 13.07.2017 Sofia jira siac-6193
                    and   roil.relaz_tipo_id=e2.relaz_tipo_id
                    and   oil.oil_relaz_tipo_id=roil.oil_relaz_tipo_id
                    and   oil.oil_relaz_tipo_code='CSI'
                    and   rel.soggetto_relaz_id=d2.soggetto_relaz_id
                    and   mdp.modpag_id=rel.modpag_id
                    and   accre.accredito_tipo_id=mdp.accredito_tipo_id
                    and   sog.soggetto_id=d2.soggetto_id_a
                    -- 13.07.2017 Sofia jira siac-6193
                    and   roil.data_cancellazione is null
                    and   roil.validita_fine is null
                    and   c2.data_cancellazione is null
					and   now() BETWEEN c2.validita_inizio and coalesce (c2.validita_fine,now())
					and   d2.data_cancellazione is null
                    and   now() BETWEEN d2.validita_inizio and coalesce (d2.validita_fine,now())
					and   rel.data_cancellazione is null
                    and   now() BETWEEN rel.validita_inizio and coalesce (rel.validita_fine,now())
                    and   mdp.data_cancellazione is null
                    and   now() BETWEEN mdp.validita_inizio and coalesce (mdp.validita_fine,now())
				)
				select *
				from modpag_noncessione
				UNION ALL
				select *
				from modpag_cessione
			),
            -- 11.07.2018 Sofia jira siac-6193
            liquidazione as
            (
              with
              liq as
              (
				select r.sord_id ord_ts_id,
					   r.liq_id
				from  siac_r_liquidazione_ord r
				where r.ente_proprietario_id=enteProprietarioId
                and   r.data_cancellazione is null
				and   now() BETWEEN r.validita_inizio and COALESCE(r.validita_fine,now())
              ),
              liq_atto as
              (
              	select rliq.liq_id,
                       coalesce(alg.attoal_causale , atto.attoamm_oggetto) liq_attoamm_desc,
                  	   alg.data_creazione liq_attoalg_data_inserimento,
                       alg.attoal_data_scadenza liq_attoalg_data_scad,
                       algstato.attoal_stato_desc liq_attoalg_stato_desc
        	    from siac_r_liquidazione_atto_amm rliq,
            	     siac_t_atto_amm atto
                	 left join siac_t_atto_allegato alg
                           join siac_r_atto_allegato_stato rsalg
                            join siac_d_atto_allegato_stato algstato
                            on (algstato.attoal_stato_id=rsalg.attoal_stato_id and algstato.attoal_stato_code!='A')
                           on (rsalg.attoal_id=alg.attoal_id and
                               rsalg.data_cancellazione is null and
                               now() between rsalg.validita_inizio and coalesce(rsalg.validita_fine, now()))
                     on ( alg.attoamm_id=atto.attoamm_id )
	             where atto.ente_proprietario_id=enteProprietarioId
                 and   rliq.attoamm_id=atto.attoamm_id
	             and   rliq.data_cancellazione is null
     		     and   rliq.validita_fine is null
            	 and   atto.data_cancellazione is null
	             and   now() between atto.validita_inizio and coalesce(atto.validita_fine, now())
              )
              select liq.*,
                     liq_atto.liq_attoamm_desc,
                     liq_atto.liq_attoalg_data_inserimento,
                     liq_atto.liq_attoalg_data_scad,
                     liq_atto.liq_attoalg_stato_desc
              from liq left join liq_atto on (liq.liq_id=liq_atto.liq_id)
			),
            -- 11.07.2018 Sofia jira siac-6193
            split as
            (
              select distinct
                     rsub.ord_ts_id
              from 	siac_r_subdoc_ordinativo_ts rsub,
                    siac_t_subdoc sub,siac_r_subdoc_splitreverse_iva_tipo rsplit,
                    siac_d_splitreverse_iva_tipo tipo
              where tipo.ente_proprietario_id=enteProprietarioId
              and   tipo.sriva_tipo_code!='ES'
              and   rsplit.sriva_tipo_id=tipo.sriva_tipo_id
              and   sub.subdoc_id=rsplit.subdoc_id
              and   rsub.subdoc_id=sub.subdoc_id
              and   rsub.data_cancellazione is null
              and   rsub.validita_fine is null
              and   sub.data_cancellazione is null
              and   sub.validita_fine is null
              and   rsplit.data_cancellazione is null
              and   rsplit.validita_fine is null
            ),
            -- 11.07.2018 Sofia jira siac-6193
            split_importo as
            (
            	select rord.ord_id_da ord_id,
                	   coalesce(sum(coalesce(det.ord_ts_det_importo,0)),0) importo
                from siac_r_ordinativo rOrd, siac_d_relaz_tipo tipo,
                     siac_r_ordinativo_stato rstato,siac_d_ordinativo_stato stato,
                     siac_t_ordinativo_ts ts, siac_t_ordinativo_ts_det det, siac_d_ordinativo_ts_det_tipo tipod
				where tipo.ente_proprietario_id=enteProprietarioId
                and   tipo.relaz_tipo_code='SPR'
                and   tipo.relaz_tipo_id=rord.relaz_tipo_id
			    and   rstato.ord_id=rOrd.ord_id_a
                and   stato.ord_stato_id=rstato.ord_stato_id
				and   stato.ord_stato_code!='A'
                and   ts.ord_id=rstato.ord_id
                and   det.ord_ts_id=ts.ord_ts_id
       	        and   tipod.ord_ts_det_tipo_id=det.ord_ts_det_tipo_id
                and   tipod.ord_ts_det_tipo_code='A'
                and   rord.data_cancellazione is null
			    and   now() between rord.validita_inizio and coalesce(rord.validita_fine, now())
   				and   rstato.data_cancellazione is null
				and   now() between rstato.validita_inizio and coalesce(rstato.validita_fine, now())
   				and   ts.data_cancellazione is null
                and   ts.validita_fine is null
   				and   det.data_cancellazione is null
                and   det.validita_fine is null
                group by rord.ord_id_da
            ),
            -- 11.07.2018 Sofia jira siac-6193
            ritenute as
            (
             select distinct ts.ord_ts_id
             from siac_r_doc_onere  rdoc, siac_t_subdoc doc, siac_r_subdoc_ordinativo_ts ts,
                  siac_d_onere_tipo tipo,siac_d_onere onere
	  		 where   tipo.ente_proprietario_id=enteProprietarioId
               and   tipo.onere_tipo_code not in ('SP','ES')
               and   onere.onere_tipo_id=tipo.onere_tipo_id
               and   rdoc.onere_id=onere.onere_id
               and   doc.doc_id=rdoc.doc_id
               and   ts.subdoc_id=doc.subdoc_id
			   and   rdoc.data_cancellazione is null
               and   now() between rdoc.validita_inizio and coalesce(rdoc.validita_fine, now())
               and   doc.data_cancellazione is null
	     	   and   doc.validita_fine is null
               and   ts.data_cancellazione is null
               and   now() between ts.validita_inizio and coalesce(ts.validita_fine, now())
            ),
            -- 11.07.2018 Sofia jira siac-6193
            ritenute_importo as
            (
             select rOrd.ord_id_da ord_id,
                    coalesce(sum(coalesce(det.ord_ts_det_importo,0)),0)  importo
             from siac_r_ordinativo rOrd, siac_d_relaz_tipo tipo,
                  siac_r_ordinativo_stato rstato,siac_d_ordinativo_stato stato,
  	              siac_t_ordinativo_ts ts, siac_t_ordinativo_ts_det det, siac_d_ordinativo_ts_det_tipo tipod
			 where  tipo.ente_proprietario_id=enteProprietarioId
              and   tipo.relaz_tipo_code='RIT_ORD'
			  and   tipo.relaz_tipo_id=rord.relaz_tipo_id
			  and   rstato.ord_id=rOrd.ord_id_a
	          and   stato.ord_stato_id=rstato.ord_stato_id
	    	  and   stato.ord_stato_code!='A'
	          and   ts.ord_id=rstato.ord_id
    	      and   det.ord_ts_id=ts.ord_ts_id
        	  and   tipod.ord_ts_det_tipo_id=det.ord_ts_det_tipo_id
              and   tipod.ord_ts_det_tipo_code='A'
	          and   rord.data_cancellazione is null
 		  	  and   now() between rord.validita_inizio and coalesce(rord.validita_fine, now())
   			  and   rstato.data_cancellazione is null
			  and   now() between rstato.validita_inizio and coalesce(rstato.validita_fine, now())
	   		  and   ts.data_cancellazione is null
    	      and   ts.validita_fine is null
   			  and   det.data_cancellazione is null
              and   det.validita_fine is null
              group by rOrd.ord_id_da
            ),
            -- 11.07.2018 Sofia jira siac-6193
            conto_tesoreria as
            (
             select d.contotes_id, d.contotes_code
             from siac_d_contotesoreria d
             where d.ente_proprietario_id=enteProprietarioId
            ),
            -- 11.07.2018 Sofia jira siac-6193
            distinta as
            (
             select dist.dist_id,
                    dist.dist_code,
                    dist.dist_desc
             from siac_d_distinta dist
             where dist.ente_proprietario_id=enteProprietarioId
            )
			select ordinativo.*,
                   soggetto.*,
                   attoamm.*,
                   capitolo.*,
                   modpag.*,
                   liquidazione.*,
		           -- 11.07.2018 Sofia jira siac-6193
                   ( case when split.ord_ts_id is not null then 'S' else 'N' end)::varchar ord_split,
                   split_importo.importo ord_split_importo,
                   -- 11.07.2018 Sofia jira siac-6193
                   ( case when ritenute.ord_ts_id is not null then 'S' else 'N' end)::varchar ord_ritenute,
                   ritenute_importo.importo ord_ritenute_importo,
                   conto_tesoreria.contotes_code ord_conto_tesoreria,
                   distinta.dist_code ord_distinta_codice,
                   distinta.dist_desc ord_distinta_desc
			from
				      ordinativo
				cross join soggetto
				cross join attoamm
				cross join capitolo
                LEFT OUTER JOIN modpag on  (ordinativo.uid=modpag.ord_id)
                -- 11.07.2018 Sofia jira siac-6193
                left join liquidazione on (ordinativo.ord_ts_id=liquidazione.ord_ts_id)
                left join split on (ordinativo.ord_ts_id=split.ord_ts_id)
                left join split_importo on (ordinativo.uid=split_importo.ord_id)
                left join ritenute on (ordinativo.ord_ts_id=ritenute.ord_ts_id)
                left join ritenute_importo on (ordinativo.uid=ritenute_importo.ord_id)
                left join  conto_tesoreria on (conto_tesoreria.contotes_id=ordinativo.contotes_id)
                left join  distinta on (distinta.dist_id=ordinativo.dist_id)
			where ordinativo.uid=soggetto.ord_id
			and ordinativo.uid=attoamm.ord_id
			and ordinativo.uid=capitolo.ord_id
			--and ordinativo.uid=modpag.ord_id
		),
		sac_attoamm as (
			select
				y.classif_code,
				y.classif_desc,
				z.attoamm_id
			from
				siac_r_atto_amm_class z,
				siac_t_class y,
				siac_d_class_tipo x
			where z.classif_id=y.classif_id
			and x.classif_tipo_id=y.classif_tipo_id
			and now() BETWEEN z.validita_inizio and coalesce (z.validita_fine,now())
			and x.classif_tipo_code IN ('CDC', 'CDR')
			and z.data_cancellazione is NULL
			and x.data_cancellazione is NULL
			and y.data_cancellazione is NULL
		),
        -- 11.07.2018 Sofia jira siac-6193
        carte_contabili as
        (
           select  distinct rcs.soggetto_id
           from  siac_r_cartacont_det_soggetto rcs,
                 siac_t_cartacont_det det, siac_t_cartacont carta,
                 siac_r_cartacont_stato rs,siac_d_cartacont_stato stato
	       where   det.ente_proprietario_id=enteProprietarioId
             and   det.cartac_det_id=rcs.cartac_det_id
             and   carta.cartac_id=det.cartac_id
             and   rs.cartac_id=carta.cartac_id
             and   stato.cartac_stato_id=rs.cartac_stato_id
             and   stato.cartac_stato_code!='A'
             and   rcs.data_cancellazione is null
             and   now() between rcs.validita_inizio and coalesce(rcs.validita_fine, now())
             and   rs.data_cancellazione is null
             and   now() between rs.validita_inizio and coalesce(rs.validita_fine, now())
             and   carta.data_cancellazione is null
             and   carta.validita_fine is null
             and   det.data_cancellazione is null
             and   det.validita_fine is null
        )
		select ord_join.*,
               sac_attoamm.*,
               (case when carte_contabili.soggetto_id is not null then 'S' else 'N' end ) sog_carte_contabili
		from ord_join
	  	  left outer join sac_attoamm     on ord_join.attoamm_id=sac_attoamm.attoamm_id
          left outer join carte_contabili on ord_join.soggetto_id=carte_contabili.soggetto_id
	),
	provv_cassa as (
		select
			a2.ord_id,
			b2.provc_anno,
			b2.provc_numero,
			b2.provc_data_convalida
		from
			siac_r_ordinativo_prov_cassa a2,
			siac_t_prov_cassa b2
		where b2.provc_id=a2.provc_id
		and now() BETWEEN a2.validita_inizio and coalesce (a2.validita_fine,now())
		and a2.data_cancellazione is NULL
		and b2.data_cancellazione is NULL
	),
    /*quietanza AS(
     --SIAC-5899
      SELECT
          siac_T_Ordinativo.ord_id,
          siac_r_ordinativo_quietanza.ord_quietanza_data
      FROM
          siac_t_oil_ricevuta
          ,siac_T_Ordinativo
          ,siac_d_oil_ricevuta_tipo
          ,siac_r_ordinativo_quietanza
      WHERE
              siac_t_oil_ricevuta.oil_ricevuta_tipo_id =  siac_d_oil_ricevuta_tipo.oil_ricevuta_tipo_id
          AND siac_t_oil_ricevuta.oil_ord_id  = siac_T_Ordinativo.ord_id
          AND siac_T_Ordinativo.ord_id = siac_r_ordinativo_quietanza.ord_id
          AND siac_d_oil_ricevuta_tipo.oil_ricevuta_tipo_code = 'Q'
          AND siac_t_oil_ricevuta.data_cancellazione is null
          AND siac_T_Ordinativo.data_cancellazione is null
          AND siac_d_oil_ricevuta_tipo.data_cancellazione is null
          AND siac_r_ordinativo_quietanza.data_cancellazione is null
    )*/
    -- 11.07.2018 Sofia jira siac-6193
    quietanza as
    (
	  SELECT r.ord_id, max(r.ord_quietanza_data) ord_quietanza_data
	  FROM siac_r_ordinativo_quietanza r
	  WHERE r.data_cancellazione  is null
      and   now() between r.validita_inizio and coalesce(r.validita_fine, now())
      group by r.ord_id
    )
    select
		ord_join_outer.uid,
		ord_join_outer.ord_numero,
		ord_join_outer.ord_desc,
		ord_join_outer.ord_emissione_data,
        -- 12.07.2018 Sofia siac-6193
		ord_join_outer.soggetto_code ord_soggetto_code,
		ord_join_outer.soggetto_desc ord_soggetto_desc,
-- 11.07.2018 Sofia jira siac-6193
--		ord_join_outer.accredito_tipo_code,
--		ord_join_outer.accredito_tipo_desc,
		ord_join_outer.ord_stato_desc,
		ord_join_outer.importo,
		ord_join_outer.ord_ts_code,
		ord_join_outer.attoamm_numero,
		ord_join_outer.attoamm_anno,
		ord_join_outer.attoamm_stato_desc,
		ord_join_outer.classif_code as attoamm_sac_code,
		ord_join_outer.classif_desc as attoamm_sac_desc,
		ord_join_outer.attoamm_tipo_code,
		ord_join_outer.attoamm_tipo_desc,
		ord_join_outer.elem_id as uid_capitolo,
		ord_join_outer.elem_code as num_capitolo,
		ord_join_outer.elem_code2 as num_articolo,
		ord_join_outer.elem_code3 as num_ueb,
		ord_join_outer.elem_desc as capitolo_desc,
		provv_cassa.provc_anno,
		provv_cassa.provc_numero,
		provv_cassa.provc_data_convalida,
        quietanza.ord_quietanza_data,
        -- 11.07.2018 Sofia jira siac-6193
        ord_join_outer.sog_codice_fiscale,
  		ord_join_outer.sog_partita_iva,
        -- MDP  - no cessione
        (case when ord_join_outer.relaz_tipo_code is null then ord_join_outer.accredito_tipo_code else null end ) ord_accredito_tipo_code,
        (case when ord_join_outer.relaz_tipo_code is null then ord_join_outer.accredito_tipo_desc else null end ) ord_accredito_tipo_desc,
        (case when ord_join_outer.relaz_tipo_code is null then ord_join_outer.iban else null end ) ord_iban,
        (case when ord_join_outer.relaz_tipo_code is null then ord_join_outer.bic else null end ) ord_bic,
        (case when ord_join_outer.relaz_tipo_code is null then ord_join_outer.contocorrente else null end ) ord_contocorrente,
        (case when ord_join_outer.relaz_tipo_code is null then ord_join_outer.contocorrente_intestazione else null end ) ord_contocorrente_intestazione,
        (case when ord_join_outer.relaz_tipo_code is null then ord_join_outer.banca_denominazione else null end ) ord_banca_denominazione,
        (case when ord_join_outer.relaz_tipo_code is null then ord_join_outer.quietanziante else null end ) ord_quietanzante,
        (case when ord_join_outer.relaz_tipo_code is null then ord_join_outer.quietanziante_codice_fiscale else null end ) ord_quietanzante_codice_fiscale,
        -- estremi cessione
	    ord_join_outer.soggetto_cessione_code ord_soggetto_cessione_code,
        ord_join_outer.soggetto_cessione_desc ord_soggetto_cessione_desc,
        ord_join_outer.relaz_tipo_code ord_relaz_tipo_code,
        ord_join_outer.relaz_tipo_desc ord_relaz_tipo_desc,
        -- MDP - cessione
		(case when ord_join_outer.relaz_tipo_code is not null then ord_join_outer.accredito_tipo_code else null end ) ord_accredito_tipo_code_cess,
        (case when ord_join_outer.relaz_tipo_code is not null then ord_join_outer.accredito_tipo_desc else null end ) ord_accredito_tipo_desc_cess,
        (case when ord_join_outer.relaz_tipo_code is not null then ord_join_outer.iban else null end ) ord_iban_cess,
        (case when ord_join_outer.relaz_tipo_code is not null then ord_join_outer.bic else null end ) ord_bic_cess,
        (case when ord_join_outer.relaz_tipo_code is not null then ord_join_outer.contocorrente else null end ) ord_contocorrente_cess,
        (case when ord_join_outer.relaz_tipo_code is not null then ord_join_outer.contocorrente_intestazione else null end ) ord_contocorrente_intestazione_cess,
        (case when ord_join_outer.relaz_tipo_code is not null then ord_join_outer.banca_denominazione else null end ) ord_banca_denominazione_cess,
        (case when ord_join_outer.relaz_tipo_code is not null then ord_join_outer.quietanziante else null end ) ord_quietanzante_cess,
        (case when ord_join_outer.relaz_tipo_code is not null then ord_join_outer.quietanziante_codice_fiscale else null end ) ord_quietanzante_codice_fiscale_cess,
		ord_join_outer.liq_attoamm_desc,
        ord_join_outer.liq_attoalg_data_inserimento,
        ord_join_outer.liq_attoalg_data_scad,
        ord_join_outer.liq_attoalg_stato_desc,
        ord_join_outer.ord_split,
        ord_join_outer.ord_split_importo,
        ord_join_outer.ord_ritenute,
        ord_join_outer.ord_ritenute_importo,
        ord_join_outer.sog_carte_contabili::varchar carte_contabili,
        (case when provv_cassa.provc_numero is not null then 'S' else 'N' end )::varchar ord_copertura,
        ord_join_outer.ord_conto_tesoreria,
        ord_join_outer.ord_distinta_codice,
        ord_join_outer.ord_distinta_desc
	from ord_join_outer
		left outer join provv_cassa on ord_join_outer.uid=provv_cassa.ord_id
    	left outer join quietanza on ord_join_outer.uid=quietanza.ord_id

	order by 2,4,12,11
	LIMIT _limit
	OFFSET _offset;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--23

DROP FUNCTION if exists fnc_siac_cons_entita_mandato_from_soggetto (integer,  varchar, integer, integer);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_mandato_from_soggetto (
  _uid_soggetto integer,
  _annoesercizio varchar,
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  ord_numero numeric,
  ord_desc varchar,
  ord_emissione_data timestamp,
  -- 11.07.2018 Sofia siac-6193
  ord_soggetto_code varchar,
  ord_soggetto_desc varchar,
  -- 11.07.2018 Sofia siac-6193
  --  accredito_tipo_code varchar,
  --  accredito_tipo_desc varchar,
  ord_stato_desc varchar,
  importo numeric,
  ord_ts_code varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  uid_capitolo integer,
  num_capitolo varchar,
  num_articolo varchar,
  num_ueb varchar,
  capitolo_desc varchar,
  provc_anno integer,
  provc_numero numeric,
  provc_data_convalida timestamp,
  ord_quietanza_data timestamp,
  -- 11.07.2018 Sofia jira siac-6193
  sog_codice_fiscale varchar,
  sog_partita_iva varchar,
  -- MDP - no cessione
  ord_accredito_tipo_code varchar,
  ord_accredito_tipo_desc varchar,
  ord_iban varchar,
  ord_bic varchar,
  ord_contocorrente varchar,
  ord_contocorrente_intestazione varchar,
  ord_banca_denominazione varchar,
  ord_quietanzante varchar,
  ord_quietanzante_codice_fiscale varchar,
  -- Estremi Cessione
  ord_soggetto_cessione_code varchar,
  ord_soggetto_cessione_desc varchar,
  ord_relaz_tipo_code varchar,
  ord_relaz_tipo_desc varchar,
  -- MDP - Cessione
  ord_accredito_tipo_code_cess varchar,
  ord_accredito_tipo_desc_cess varchar,
  ord_iban_cess varchar,
  ord_bic_cess varchar,
  ord_contocorrente_cess varchar,
  ord_contocorrente_intestazione_cess varchar,
  ord_banca_denominazione_cess varchar,
  ord_quietanzante_cess varchar,
  ord_quietanzante_codice_fiscale_cess varchar,
  liq_attoamm_desc varchar,
  liq_attoalg_data_inserimento timestamp,
  liq_attoalg_data_scad timestamp,
  liq_attoalg_stato_desc varchar,
  ord_split varchar,
  ord_split_importo numeric,
  ord_ritenute varchar,
  ord_ritenute_importo numeric,
  carte_contabili varchar,
  ord_copertura varchar,
  ord_conto_tesoreria varchar,
  ord_distinta_codice varchar,
  ord_distinta_desc varchar
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;

    enteProprietarioId integer=null;

BEGIN

	-- 11.07.2018 Sofia jira siac-6193
    select s.ente_proprietario_id into enteProprietarioId
    from siac_t_soggetto s
    where s.soggetto_id=_uid_soggetto;

	RETURN QUERY
	with ord_join_outer as (
		with ord_join as (
			with ordinativo as (
            	--8,7 sec --> 4,7
				select
					a.ord_id as uid,
					a.ord_numero,
					a.ord_desc,
					a.ord_emissione_data,
					e.ord_stato_desc,
					g.ord_ts_det_importo as importo,
					f.ord_ts_code,
                    -- 11.07.2018 Sofia jira siac-6193
                    f.ord_ts_id,
                    a.contotes_id,
                    a.dist_id
				from
					 siac_t_ordinativo a
					,siac_r_ordinativo_stato d
					,siac_d_ordinativo_stato e
					,siac_t_ordinativo_ts f
					,siac_t_ordinativo_ts_det g
					,siac_d_ordinativo_ts_det_tipo h
					,siac_d_ordinativo_tipo i
                    ,siac_t_bil tbil
					,siac_t_periodo tper

				where d.ord_id=a.ord_id
                    and d.ord_stato_id=e.ord_stato_id
                    and f.ord_id=a.ord_id
                    and g.ord_ts_id=f.ord_ts_id
                    and h.ord_ts_det_tipo_id=g.ord_ts_det_tipo_id
                    and a.bil_id = tbil.bil_id
                    and tbil.periodo_id	= tper.periodo_id
                    and i.ord_tipo_id=a.ord_tipo_id
					and tbil.ente_proprietario_id = enteProprietarioId                    
                    and tper.anno = _annoEsercizio
                    and h.ord_ts_det_tipo_code = 'A'
                    and i.ord_tipo_code='P'
                    and now() BETWEEN d.validita_inizio and COALESCE(d.validita_fine,now())
                    and a.data_cancellazione is null
                    and d.data_cancellazione is null
                    and e.data_cancellazione is null
                    and f.data_cancellazione is null
                    and g.data_cancellazione is null
                    and h.data_cancellazione is null
                    and i.data_cancellazione is null
                    and tbil.data_cancellazione is null
                    and tper.data_cancellazione is null

			),
			soggetto as (--ok
				select
					b.ord_id,
					c.soggetto_code,
					c.soggetto_desc,
                    -- 11.07.2018 Sofia jira siac-6193
                    c.codice_fiscale::varchar sog_codice_fiscale,
				    c.partita_iva    sog_partita_iva,
                    c.soggetto_id
				from
					siac_t_soggetto c,
					siac_r_ordinativo_soggetto b
				where c.soggetto_id=b.soggetto_id
				and c.soggetto_id=_uid_soggetto
				and now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now())
				and b.data_cancellazione is null
				and c.data_cancellazione is null
			),
            --40 sec -->11
			attoamm as (
				select
					m.ord_id,
					n.attoamm_id,
					n.attoamm_numero,
					n.attoamm_anno,
					q.attoamm_stato_desc,
					o.attoamm_tipo_code,
					o.attoamm_tipo_desc
				from
					siac_t_atto_amm n,
					siac_d_atto_amm_tipo o,
					siac_r_atto_amm_stato p,
					siac_d_atto_amm_stato q,
					siac_r_ordinativo_atto_amm m
				where n.attoamm_id=m.attoamm_id
				and o.attoamm_tipo_id=n.attoamm_tipo_id
				and p.attoamm_id=n.attoamm_id
				and p.attoamm_stato_id=q.attoamm_stato_id
                and n.ente_proprietario_id = enteProprietarioId
				and now() BETWEEN p.validita_inizio and coalesce (p.validita_fine,now())
				and now() BETWEEN m.validita_inizio and COALESCE (m.validita_fine,now())
				and q.attoamm_stato_code<>'ANNULLATO'
				and m.data_cancellazione is null
				and n.data_cancellazione is null
				and o.data_cancellazione is null
				and p.data_cancellazione is null
				and q.data_cancellazione is null
			),
            --56 sec -->18
			capitolo as (
				select
					r.ord_id,
					s.elem_id,
					s.elem_code,
					s.elem_code2,
					s.elem_code3,
					s.elem_desc
				from
					siac_t_bil_elem s,
					siac_r_ordinativo_bil_elem r
				where s.elem_id=r.elem_id
                and s.ente_proprietario_id = enteProprietarioId
				and r.data_cancellazione is null
				and s.data_cancellazione is null
				and now() BETWEEN r.validita_inizio and coalesce (r.validita_fine,now())
			),
			modpag as
            (
				with modpag_noncessione as
                (
					select
						c2.ord_id,
						e2.accredito_tipo_code,
						e2.accredito_tipo_desc,
                        -- 11.07.2018 Sofia jira siac-6193
                        null::varchar soggetto_cessione_code,
                        null::varchar soggetto_cessione_desc,
                        null::varchar relaz_tipo_code,
                        null::varchar relaz_tipo_desc,
                        d2.iban,
                        d2.bic,
                        d2.contocorrente,
                        d2.contocorrente_intestazione,
                        d2.banca_denominazione,
                        d2.quietanziante,
                        d2.quietanziante_codice_fiscale::varchar
					FROM
						siac_r_ordinativo_modpag c2,
						siac_t_modpag d2,
						siac_d_accredito_tipo e2
					where c2.modpag_id=d2.modpag_id
					and e2.accredito_tipo_id=d2.accredito_tipo_id
                    and d2.ente_proprietario_id = enteProprietarioId                    
                    and d2.soggetto_id = _uid_soggetto					
                    and now() BETWEEN c2.validita_inizio and coalesce (c2.validita_fine,now())
					and c2.data_cancellazione is null
					and d2.data_cancellazione is null--??forse da commentare siac-5670
					and e2.data_cancellazione is null
				),
				modpag_cessione as --ok
                (
					select
						c2.ord_id,
						-- 11.07.2018 Sofia jira siac-6193
                        accre.accredito_tipo_code,
                        accre.accredito_tipo_desc,
                        sog.soggetto_code soggetto_cessione_code,
                        sog.soggetto_desc soggetto_cessione_desc,
						e2.relaz_tipo_code,
						e2.relaz_tipo_desc,
                        -- 11.07.2018 Sofia jira siac-6193
                        mdp.iban,
                        mdp.bic,
                        mdp.contocorrente,
                        mdp.contocorrente_intestazione,
                        mdp.banca_denominazione,
                        mdp.quietanziante,
                        mdp.quietanziante_codice_fiscale::varchar
					from
						siac_r_ordinativo_modpag c2,
						siac_r_soggetto_relaz d2,
                        siac_t_soggetto sog,
						siac_d_relaz_tipo e2,
                        siac_d_oil_relaz_tipo oil, 
                        siac_r_oil_relaz_tipo roil, -- 13.07.2018 Sofia jira siac-6193
                        siac_r_soggrel_modpag rel,
                        siac_t_modpag mdp,
                        siac_d_accredito_tipo accre
					where d2.soggetto_relaz_id = c2.soggetto_relaz_id
					and   e2.relaz_tipo_id = d2.relaz_tipo_id
                    -- 13.07.2017 Sofia jira siac-6193
                    and   roil.relaz_tipo_id=e2.relaz_tipo_id
                    and   oil.oil_relaz_tipo_id=roil.oil_relaz_tipo_id
                    and   oil.oil_relaz_tipo_code='CSI'
                    and   rel.soggetto_relaz_id=d2.soggetto_relaz_id
                    and   mdp.modpag_id=rel.modpag_id
                    and   accre.accredito_tipo_id=mdp.accredito_tipo_id
                    and   sog.soggetto_id=d2.soggetto_id_a  
                    
                    and   d2.soggetto_id_da = _uid_soggetto
                  
                    and   sog.ente_proprietario_id = enteProprietarioId        
                    and   mdp.soggetto_id = _uid_soggetto                    
                    -- 13.07.2017 Sofia jira siac-6193
					and   c2.data_cancellazione is null
					and   d2.data_cancellazione is null
                    and   sog.data_cancellazione is null
					and   e2.data_cancellazione is null
                    and   oil.data_cancellazione is null
                    and   roil.data_cancellazione is null
                    and   rel.data_cancellazione is null
                    and   mdp.data_cancellazione is null
                    and   accre.data_cancellazione is null
                    and   roil.validita_fine is null
					and   now() BETWEEN c2.validita_inizio and coalesce (c2.validita_fine,now())
                    and   now() BETWEEN d2.validita_inizio and coalesce (d2.validita_fine,now())
                    and   now() BETWEEN rel.validita_inizio and coalesce (rel.validita_fine,now())
                    and   now() BETWEEN mdp.validita_inizio and coalesce (mdp.validita_fine,now())
				)
				select *
				from modpag_noncessione
				UNION ALL
				select *
				from modpag_cessione
			),
            -- 11.07.2018 Sofia jira siac-6193
            liquidazione as
            (
              with
              liq as
              (
				select r.sord_id ord_ts_id,
					   r.liq_id
				from  siac_r_liquidazione_ord r
				where r.ente_proprietario_id=enteProprietarioId
                and   r.data_cancellazione is null
				and   now() BETWEEN r.validita_inizio and COALESCE(r.validita_fine,now())
              ),
              liq_atto as --15 sec
              (
              	select rliq.liq_id,
                       coalesce(alg.attoal_causale , atto.attoamm_oggetto) liq_attoamm_desc,
                  	   alg.data_creazione liq_attoalg_data_inserimento,
                       alg.attoal_data_scadenza liq_attoalg_data_scad,
                       algstato.attoal_stato_desc liq_attoalg_stato_desc
        	    from siac_r_liquidazione_atto_amm rliq,
            	     siac_t_atto_amm atto
                	 left join siac_t_atto_allegato alg
                     join siac_r_atto_allegato_stato rsalg
                     join siac_d_atto_allegato_stato algstato on (algstato.attoal_stato_id=rsalg.attoal_stato_id and algstato.attoal_stato_code!='A')
                     on (rsalg.attoal_id=alg.attoal_id and rsalg.data_cancellazione is null and now() between rsalg.validita_inizio and coalesce(rsalg.validita_fine, now()))
                     on ( alg.attoamm_id=atto.attoamm_id )
	             where atto.ente_proprietario_id= enteProprietarioId
                 and   rliq.attoamm_id=atto.attoamm_id
	             and   rliq.data_cancellazione is null
     		     and   rliq.validita_fine is null
            	 and   atto.data_cancellazione is null
	             and   now() between atto.validita_inizio and coalesce(atto.validita_fine, now())
              )
              select liq.*,
                     liq_atto.liq_attoamm_desc,
                     liq_atto.liq_attoalg_data_inserimento,
                     liq_atto.liq_attoalg_data_scad,
                     liq_atto.liq_attoalg_stato_desc
              from liq left join liq_atto on (liq.liq_id=liq_atto.liq_id)
			),
            -- 11.07.2018 Sofia jira siac-6193
            split as
            (
              select distinct
                     rsub.ord_ts_id
              from 	siac_r_subdoc_ordinativo_ts rsub,
                    siac_t_subdoc sub,siac_r_subdoc_splitreverse_iva_tipo rsplit,
                    siac_d_splitreverse_iva_tipo tipo
              where tipo.ente_proprietario_id=enteProprietarioId
              and   tipo.sriva_tipo_code!='ES'
              and   rsplit.sriva_tipo_id=tipo.sriva_tipo_id
              and   sub.subdoc_id=rsplit.subdoc_id
              and   rsub.subdoc_id=sub.subdoc_id
              and   rsub.data_cancellazione is null
              and   rsub.validita_fine is null
              and   sub.data_cancellazione is null
              and   sub.validita_fine is null
              and   rsplit.data_cancellazione is null
              and   rsplit.validita_fine is null
            ),
            -- 11.07.2018 Sofia jira siac-6193
            split_importo as
            (
            	select rord.ord_id_da ord_id,
                	   coalesce(sum(coalesce(det.ord_ts_det_importo,0)),0) importo
                from siac_r_ordinativo rOrd, siac_d_relaz_tipo tipo,
                     siac_r_ordinativo_stato rstato,siac_d_ordinativo_stato stato,
                     siac_t_ordinativo_ts ts, siac_t_ordinativo_ts_det det, siac_d_ordinativo_ts_det_tipo tipod
				where tipo.ente_proprietario_id=enteProprietarioId
                and   tipo.relaz_tipo_code='SPR'
                and   tipo.relaz_tipo_id=rord.relaz_tipo_id
			    and   rstato.ord_id=rOrd.ord_id_a
                and   stato.ord_stato_id=rstato.ord_stato_id
				and   stato.ord_stato_code!='A'
                and   ts.ord_id=rstato.ord_id
                and   det.ord_ts_id=ts.ord_ts_id
       	        and   tipod.ord_ts_det_tipo_id=det.ord_ts_det_tipo_id
                and   tipod.ord_ts_det_tipo_code='A'
                and   rord.data_cancellazione is null
			    and   now() between rord.validita_inizio and coalesce(rord.validita_fine, now())
   				and   rstato.data_cancellazione is null
				and   now() between rstato.validita_inizio and coalesce(rstato.validita_fine, now())
   				and   ts.data_cancellazione is null
                and   ts.validita_fine is null
   				and   det.data_cancellazione is null
                and   det.validita_fine is null
                group by rord.ord_id_da
            ),
            -- 11.07.2018 Sofia jira siac-6193
            ritenute as
            (
             select distinct ts.ord_ts_id
             from siac_r_doc_onere  rdoc, siac_t_subdoc doc, siac_r_subdoc_ordinativo_ts ts,
                  siac_d_onere_tipo tipo,siac_d_onere onere
	  		 where   tipo.ente_proprietario_id=enteProprietarioId
               and   tipo.onere_tipo_code not in ('SP','ES')
               and   onere.onere_tipo_id=tipo.onere_tipo_id
               and   rdoc.onere_id=onere.onere_id
               and   doc.doc_id=rdoc.doc_id
               and   ts.subdoc_id=doc.subdoc_id
			   and   rdoc.data_cancellazione is null
               and   now() between rdoc.validita_inizio and coalesce(rdoc.validita_fine, now())
               and   doc.data_cancellazione is null
	     	   and   doc.validita_fine is null
               and   ts.data_cancellazione is null
               and   now() between ts.validita_inizio and coalesce(ts.validita_fine, now())
            ),
            -- 11.07.2018 Sofia jira siac-6193
            ritenute_importo as --ok
            (
             select rOrd.ord_id_da ord_id,coalesce(sum(coalesce(det.ord_ts_det_importo,0)),0)  importo
             from siac_r_ordinativo rOrd, siac_d_relaz_tipo tipo,
                  siac_r_ordinativo_stato rstato,siac_d_ordinativo_stato stato,
  	              siac_t_ordinativo_ts ts, siac_t_ordinativo_ts_det det, siac_d_ordinativo_ts_det_tipo tipod
			 where  tipo.ente_proprietario_id=enteProprietarioId
              and   tipo.relaz_tipo_code='RIT_ORD'
			  and   tipo.relaz_tipo_id=rord.relaz_tipo_id
			  and   rstato.ord_id=rOrd.ord_id_a
	          and   stato.ord_stato_id=rstato.ord_stato_id
	    	  and   stato.ord_stato_code!='A'
	          and   ts.ord_id=rstato.ord_id
    	      and   det.ord_ts_id=ts.ord_ts_id
        	  and   tipod.ord_ts_det_tipo_id=det.ord_ts_det_tipo_id
              and   tipod.ord_ts_det_tipo_code='A'
	          and   rord.data_cancellazione is null
 		  	  and   now() between rord.validita_inizio and coalesce(rord.validita_fine, now())
   			  and   rstato.data_cancellazione is null
			  and   now() between rstato.validita_inizio and coalesce(rstato.validita_fine, now())
	   		  and   ts.data_cancellazione is null
    	      and   ts.validita_fine is null
   			  and   det.data_cancellazione is null
              and   det.validita_fine is null
              group by rOrd.ord_id_da
            ),
            -- 11.07.2018 Sofia jira siac-6193
            conto_tesoreria as
            (
             select d.contotes_id, d.contotes_code
             from siac_d_contotesoreria d
             where d.ente_proprietario_id=enteProprietarioId
            ),
            -- 11.07.2018 Sofia jira siac-6193
            distinta as
            (
             select dist.dist_id,
                    dist.dist_code,
                    dist.dist_desc
             from siac_d_distinta dist
             where dist.ente_proprietario_id=enteProprietarioId
            )
			select ordinativo.*,
                   soggetto.*,
                   attoamm.*,
                   capitolo.*,
                   modpag.*,
                   liquidazione.*,
                   -- 11.07.2018 Sofia jira siac-6193
                   ( case when split.ord_ts_id is not null then 'S' else 'N' end)::varchar ord_split,
                   split_importo.importo ord_split_importo,
                   -- 11.07.2018 Sofia jira siac-6193
                   ( case when ritenute.ord_ts_id is not null then 'S' else 'N' end)::varchar ord_ritenute,
                   ritenute_importo.importo ord_ritenute_importo,
                   conto_tesoreria.contotes_code ord_conto_tesoreria,
                   distinta.dist_code ord_distinta_codice,
                   distinta.dist_desc ord_distinta_desc
			from
				           ordinativo
				CROSS JOIN soggetto
				CROSS JOIN attoamm
				CROSS JOIN capitolo
				LEFT OUTER JOIN modpag on  (ordinativo.uid=modpag.ord_id)
                -- 11.07.2018 Sofia jira siac-6193
                left join liquidazione on (ordinativo.ord_ts_id=liquidazione.ord_ts_id)
                left join split on (ordinativo.ord_ts_id=split.ord_ts_id)
                left join split_importo on (ordinativo.uid=split_importo.ord_id)
                left join ritenute on (ordinativo.ord_ts_id=ritenute.ord_ts_id)
                left join ritenute_importo on (ordinativo.uid=ritenute_importo.ord_id)
                left join  conto_tesoreria on (conto_tesoreria.contotes_id=ordinativo.contotes_id)
                left join  distinta on (distinta.dist_id=ordinativo.dist_id)
			where ordinativo.uid=soggetto.ord_id
			and ordinativo.uid=attoamm.ord_id
			and ordinativo.uid=capitolo.ord_id
			--and ordinativo.uid=modpag.ord_id
		),
		sac_attoamm as (
			select
				y.classif_code,
				y.classif_desc,
				z.attoamm_id
			from
				siac_r_atto_amm_class z,
				siac_t_class y,
				siac_d_class_tipo x
			where z.classif_id=y.classif_id
			and x.classif_tipo_id=y.classif_tipo_id
            and y.ente_proprietario_id = enteProprietarioId
			and now() BETWEEN z.validita_inizio and coalesce (z.validita_fine,now())
			and x.classif_tipo_code IN ('CDC', 'CDR')
			and z.data_cancellazione is NULL
			and x.data_cancellazione is NULL
			and y.data_cancellazione is NULL
		),
        -- 11.07.2018 Sofia jira siac-6193
        carte_contabili as
        (
           select  distinct rcs.soggetto_id
           from  siac_r_cartacont_det_soggetto rcs,
                 siac_t_cartacont_det det, siac_t_cartacont carta,
                 siac_r_cartacont_stato rs,siac_d_cartacont_stato stato
	       where   det.ente_proprietario_id=enteProprietarioId
             and   det.cartac_det_id=rcs.cartac_det_id
             and   carta.cartac_id=det.cartac_id
             and   rs.cartac_id=carta.cartac_id
             and   stato.cartac_stato_id=rs.cartac_stato_id
             and   stato.cartac_stato_code!='A'
             and   rcs.data_cancellazione is null
             and   now() between rcs.validita_inizio and coalesce(rcs.validita_fine, now())
             and   rs.data_cancellazione is null
             and   now() between rs.validita_inizio and coalesce(rs.validita_fine, now())
             and   carta.data_cancellazione is null
             and   carta.validita_fine is null
             and   det.data_cancellazione is null
             and   det.validita_fine is null
        )
		select ord_join.*,
        	   sac_attoamm.*,
               (case when carte_contabili.soggetto_id is not null then 'S' else 'N' end ) sog_carte_contabili
		from ord_join
		left outer join sac_attoamm on ord_join.attoamm_id=sac_attoamm.attoamm_id
        -- 11.07.2018 Sofia jira siac-6193
        left outer join carte_contabili on ord_join.soggetto_id=carte_contabili.soggetto_id
	),
	provv_cassa as (
		select
			a2.ord_id,
			b2.provc_anno,
			b2.provc_numero,
			b2.provc_data_convalida
		from
			siac_r_ordinativo_prov_cassa a2,
			siac_t_prov_cassa b2
		where b2.provc_id=a2.provc_id
        and b2.ente_proprietario_id = enteProprietarioId
		and now() BETWEEN a2.validita_inizio and coalesce (a2.validita_fine,now())
		and a2.data_cancellazione is NULL
		and b2.data_cancellazione is NULL
	),quietanza AS(
     --SIAC-5899
      SELECT
          siac_T_Ordinativo.ord_id,
          siac_r_ordinativo_quietanza.ord_quietanza_data
      FROM
          siac_t_oil_ricevuta
          ,siac_T_Ordinativo
          ,siac_d_oil_ricevuta_tipo
          ,siac_r_ordinativo_quietanza
      WHERE
              siac_t_oil_ricevuta.oil_ricevuta_tipo_id =  siac_d_oil_ricevuta_tipo.oil_ricevuta_tipo_id
          AND siac_t_oil_ricevuta.oil_ord_id  = siac_T_Ordinativo.ord_id
          AND siac_T_Ordinativo.ord_id = siac_r_ordinativo_quietanza.ord_id
          and siac_T_Ordinativo.ente_proprietario_id = enteProprietarioId
          AND siac_d_oil_ricevuta_tipo.oil_ricevuta_tipo_code = 'Q'
          AND siac_t_oil_ricevuta.data_cancellazione is null
          AND siac_T_Ordinativo.data_cancellazione is null
          AND siac_d_oil_ricevuta_tipo.data_cancellazione is null
          AND siac_r_ordinativo_quietanza.data_cancellazione is null
    )
	select
		ord_join_outer.uid,
		ord_join_outer.ord_numero,
		ord_join_outer.ord_desc,
		ord_join_outer.ord_emissione_data,
        -- 12.07.2018 Sofia siac-6193
		ord_join_outer.soggetto_code ord_soggetto_code,
		ord_join_outer.soggetto_desc ord_soggetto_desc,
        -- 11.07.2018 Sofia jira siac-6193
        --		ord_join_outer.accredito_tipo_code,
        --		ord_join_outer.accredito_tipo_desc,
		ord_join_outer.ord_stato_desc,
		ord_join_outer.importo,
		ord_join_outer.ord_ts_code,
		ord_join_outer.attoamm_numero,
		ord_join_outer.attoamm_anno,
		ord_join_outer.attoamm_stato_desc,
		ord_join_outer.classif_code as attoamm_sac_code,
		ord_join_outer.classif_desc as attoamm_sac_desc,
		ord_join_outer.attoamm_tipo_code,
		ord_join_outer.attoamm_tipo_desc,
		ord_join_outer.elem_id as uid_capitolo,
		ord_join_outer.elem_code as num_capitolo,
		ord_join_outer.elem_code2 as num_articolo,
		ord_join_outer.elem_code3 as num_ueb,
		ord_join_outer.elem_desc as capitolo_desc,
		provv_cassa.provc_anno,
		provv_cassa.provc_numero,
		provv_cassa.provc_data_convalida,
		quietanza.ord_quietanza_data,
        -- 11.07.2018 Sofia jira siac-6193
        ord_join_outer.sog_codice_fiscale,
  		ord_join_outer.sog_partita_iva,
        -- MDP  - no cessione
        (case when ord_join_outer.relaz_tipo_code is null then ord_join_outer.accredito_tipo_code else null end ) ord_accredito_tipo_code,
        (case when ord_join_outer.relaz_tipo_code is null then ord_join_outer.accredito_tipo_desc else null end ) ord_accredito_tipo_desc,
        (case when ord_join_outer.relaz_tipo_code is null then ord_join_outer.iban else null end ) ord_iban,
        (case when ord_join_outer.relaz_tipo_code is null then ord_join_outer.bic else null end ) ord_bic,
        (case when ord_join_outer.relaz_tipo_code is null then ord_join_outer.contocorrente else null end ) ord_contocorrente,
        (case when ord_join_outer.relaz_tipo_code is null then ord_join_outer.contocorrente_intestazione else null end ) ord_contocorrente_intestazione,
        (case when ord_join_outer.relaz_tipo_code is null then ord_join_outer.banca_denominazione else null end ) ord_banca_denominazione,
        (case when ord_join_outer.relaz_tipo_code is null then ord_join_outer.quietanziante else null end ) ord_quietanzante,
        (case when ord_join_outer.relaz_tipo_code is null then ord_join_outer.quietanziante_codice_fiscale else null end ) ord_quietanzante_codice_fiscale,
        -- estremi cessione
	    ord_join_outer.soggetto_cessione_code ord_soggetto_cessione_code,
        ord_join_outer.soggetto_cessione_desc ord_soggetto_cessione_desc,
        ord_join_outer.relaz_tipo_code ord_relaz_tipo_code,
        ord_join_outer.relaz_tipo_desc ord_relaz_tipo_desc,
        -- MDP - cessione
		(case when ord_join_outer.relaz_tipo_code is not null then ord_join_outer.accredito_tipo_code else null end ) ord_accredito_tipo_code_cess,
        (case when ord_join_outer.relaz_tipo_code is not null then ord_join_outer.accredito_tipo_desc else null end ) ord_accredito_tipo_desc_cess,
        (case when ord_join_outer.relaz_tipo_code is not null then ord_join_outer.iban else null end ) ord_iban_cess,
        (case when ord_join_outer.relaz_tipo_code is not null then ord_join_outer.bic else null end ) ord_bic_cess,
        (case when ord_join_outer.relaz_tipo_code is not null then ord_join_outer.contocorrente else null end ) ord_contocorrente_cess,
        (case when ord_join_outer.relaz_tipo_code is not null then ord_join_outer.contocorrente_intestazione else null end ) ord_contocorrente_intestazione_cess,
        (case when ord_join_outer.relaz_tipo_code is not null then ord_join_outer.banca_denominazione else null end ) ord_banca_denominazione_cess,
        (case when ord_join_outer.relaz_tipo_code is not null then ord_join_outer.quietanziante else null end ) ord_quietanzante_cess,
        (case when ord_join_outer.relaz_tipo_code is not null then ord_join_outer.quietanziante_codice_fiscale else null end ) ord_quietanzante_codice_fiscale_cess,
		ord_join_outer.liq_attoamm_desc,
        ord_join_outer.liq_attoalg_data_inserimento,
        ord_join_outer.liq_attoalg_data_scad,
        ord_join_outer.liq_attoalg_stato_desc,
        ord_join_outer.ord_split,
        ord_join_outer.ord_split_importo,
        ord_join_outer.ord_ritenute,
        ord_join_outer.ord_ritenute_importo,
        ord_join_outer.sog_carte_contabili::varchar carte_contabili,
        (case when provv_cassa.provc_numero is not null then 'S' else 'N' end )::varchar ord_copertura,
        ord_join_outer.ord_conto_tesoreria,
        ord_join_outer.ord_distinta_codice,
        ord_join_outer.ord_distinta_desc


	from ord_join_outer
		left outer join provv_cassa on ord_join_outer.uid=provv_cassa.ord_id
    	left outer join quietanza on ord_join_outer.uid=quietanza.ord_id
	order by 2,4,12,11
	LIMIT _limit
	OFFSET _offset;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--24

DROP FUNCTION IF EXISTS fnc_siac_cons_entita_modalita_pagamento_from_soggetto(INTEGER, INTEGER, INTEGER);

CREATE OR REPLACE FUNCTION fnc_siac_cons_entita_modalita_pagamento_from_soggetto (
	_uid_soggetto INTEGER,
	_limit INTEGER,
	_page INTEGER
)
RETURNS TABLE (
	ordine INTEGER,
	modpag_stato_code VARCHAR,
	modpag_stato_desc VARCHAR,
	associato_a VARCHAR,
	descr_arricchita VARCHAR,
	is_cessione BOOLEAN,
    soggetto_code_princ varchar, -- 26.06.2018 Sofia siac-6193
    soggetto_desc_princ varchar  -- 26.06.2018 Sofia siac-6193
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
	rec RECORD;
BEGIN

	FOR rec IN
	SELECT *
	FROM (
		SELECT
			--Codice (numero d'ordine)
			rModpagOrdine.ordine,
			--Descrizione (campo derivato Descrizione della modalita' di pagamento)
			sog1.soggetto_code,
			sog1.soggetto_desc,
			modpag.quietanziante,
			modpag.quietanziante_codice_fiscale,
			modpag.quietanzante_nascita_data,
			modpag.quietanziante_nascita_luogo,
			modpag.quietanziante_nascita_stato,
			modpag.bic,
			modpag.contocorrente,
			modpag.contocorrente_intestazione,
			modpag.iban,
			modpag.banca_denominazione,
			--Associato a (soggetto o <Denominazione> della sede)
			sog_ordine.soggetto_code soggetto_code_ordine,
			sog_ordine.soggetto_desc soggetto_desc_ordine,
			--Stato
			dModpagStato.modpag_stato_code,
			dModpagStato.modpag_stato_desc,
			dAccreditoTipo.accredito_tipo_code mod_pag_tipo_code,
			dAccreditoTipo.accredito_tipo_desc mod_pag_tipo_desc,
			CASE
				WHEN sog1.soggetto_desc = sog_ordine.soggetto_desc THEN 'Soggetto'
				ELSE sog1.soggetto_desc
			END associato_a,
			false is_cessione
		FROM
			siac_t_soggetto sog1,
			siac_t_modpag modpag,
			siac_r_modpag_stato rModpagStato,
			siac_d_modpag_stato dModpagStato,
			siac_r_modpag_ordine rModpagOrdine,
			siac_t_soggetto sog_ordine,
			siac_d_accredito_tipo dAccreditoTipo
		WHERE sog_ordine.soggetto_id = _uid_soggetto
		AND sog1.soggetto_id = modpag.soggetto_id
		AND modpag.modpag_id = rModpagStato.modpag_id
		AND rModpagStato.modpag_stato_id = dModpagStato.modpag_stato_id
		AND modpag.modpag_id = rModpagOrdine.modpag_id
		AND rModpagOrdine.soggetto_id = sog_ordine.soggetto_id
		AND dAccreditoTipo.accredito_tipo_id = modpag.accredito_tipo_id
		AND sog1.data_cancellazione IS NULL
		AND modpag.data_cancellazione IS NULL
		AND rModpagStato.data_cancellazione IS NULL
		AND dModpagStato.data_cancellazione IS NULL
		AND rModpagOrdine.data_cancellazione IS NULL
		AND sog_ordine.data_cancellazione IS NULL
		AND dAccreditoTipo.data_cancellazione IS NULL
		-- Union effettuata con l'all in quanto non vi e' possibilita' di record duplicati
		UNION ALL
		--cessioni
		SELECT
			rModpagOrdine.ordine,
			sog2.soggetto_code,
			sog2.soggetto_desc,
			modpag.quietanziante,
			modpag.quietanziante_codice_fiscale,
			modpag.quietanzante_nascita_data,
			modpag.quietanziante_nascita_luogo,
			modpag.quietanziante_nascita_stato,
			modpag.bic,
			modpag.contocorrente,
			modpag.contocorrente_intestazione,
			modpag.iban,
			modpag.banca_denominazione,
			sog_ordine.soggetto_code soggetto_code_ordine,
			sog_ordine.soggetto_desc soggetto_desc_ordine,
			dModpagStato.modpag_stato_code,
			dModpagStato.modpag_stato_desc,
			dRelazTipo.relaz_tipo_code mod_pag_tipo_code,
			dRelazTipo.relaz_tipo_desc mod_pag_tipo_desc,
			-- TODO: verificare l'associato_a nel caso di cessione
			'Soggetto' associato_a,
			true is_cessione
		FROM
			siac_t_soggetto sog1,
			siac_r_soggetto_relaz soggettorelaz,
			siac_r_soggrel_modpag rsoggrelmodpag,
			siac_t_modpag modpag,
			siac_t_soggetto sog2,
			siac_r_modpag_stato rModpagStato,
			siac_d_modpag_stato dModpagStato,
			siac_r_modpag_ordine rModpagOrdine,
			siac_t_soggetto sog_ordine,
			siac_d_relaz_tipo dRelazTipo
		WHERE sog_ordine.soggetto_id = _uid_soggetto
		AND   sog1.soggetto_id = soggettorelaz.soggetto_id_da
		AND   soggettorelaz.soggetto_relaz_id = rsoggrelmodpag.soggetto_relaz_id
		AND   rsoggrelmodpag.modpag_id = modpag.modpag_id
		AND   modpag.modpag_id = rModpagStato.modpag_id
		AND   rModpagStato.modpag_stato_id = dModpagStato.modpag_stato_id
		AND   modpag.soggetto_id = sog2.soggetto_id -- a
		AND   rsoggrelmodpag.soggrelmpag_id = rModpagOrdine.soggrelmpag_id
		AND   rModpagOrdine.soggetto_id = sog_ordine.soggetto_id
		AND   dRelazTipo.relaz_tipo_id = soggettorelaz.relaz_tipo_id
		AND   sog1.data_cancellazione IS NULL
		AND   soggettorelaz.data_cancellazione IS NULL
		AND   rsoggrelmodpag.data_cancellazione IS NULL
		AND   modpag.data_cancellazione IS NULL
		AND   sog2.data_cancellazione IS NULL
		AND   rModpagStato.data_cancellazione IS NULL
		AND   dModpagStato.data_cancellazione IS NULL
		AND   rModpagOrdine.data_cancellazione IS NULL
		AND   sog_ordine.data_cancellazione IS NULL
		AND   dRelazTipo.data_cancellazione IS NULL
	) AS tmp
	ORDER BY tmp.ordine
	LIMIT _limit
	OFFSET _offset
	LOOP
		ordine := rec.ordine;
		modpag_stato_code := rec.modpag_stato_code;
		modpag_stato_desc := rec.modpag_stato_desc;
		associato_a := rec.associato_a;
		is_cessione := rec.is_cessione;

		-- Calcolo della descrizione arricchita
		-- Pulizia del campo
		descr_arricchita := '';

        -- 26.06.2018 Sofia siac-6193
        soggetto_code_princ:=rec.soggetto_code_ordine;
        soggetto_desc_princ:=rec.soggetto_desc_ordine;

		-- Soggetto ricevente
		IF rec.is_cessione THEN
			descr_arricchita := descr_arricchita || 'Soggetto ricevente: ' || rec.soggetto_code;
			IF rec.soggetto_desc IS NOT NULL AND (rec.soggetto_desc <> '') THEN
				descr_arricchita := descr_arricchita || ' - ' || rec.soggetto_desc;
			END IF;
		END IF;

		-- Tipo di accredito
		IF rec.mod_pag_tipo_code IS NOT NULL AND (rec.mod_pag_tipo_code <> '') THEN
			IF (descr_arricchita <> '') THEN
				descr_arricchita := descr_arricchita || ' - ';
			END IF;
			descr_arricchita := descr_arricchita || 'Tipo accredito: ' || rec.mod_pag_tipo_code;

			IF rec.mod_pag_tipo_desc IS NOT NULL AND (rec.mod_pag_tipo_desc <> '') THEN
				descr_arricchita := descr_arricchita || ' - ' || rec.mod_pag_tipo_desc;
			END IF;
		END IF;

		-- IBAN
		IF rec.iban IS NOT NULL AND (rec.iban <> '') THEN
			IF (descr_arricchita <> '') THEN
				descr_arricchita := descr_arricchita || ' - ';
			END IF;
			descr_arricchita := descr_arricchita || 'IBAN: ' || rec.iban;
		END IF;

		-- BIC
		IF rec.bic IS NOT NULL AND (rec.bic <> '') THEN
			IF (descr_arricchita <> '') THEN
				descr_arricchita := descr_arricchita || ' - ';
			END IF;
			descr_arricchita := descr_arricchita || 'BIC: ' || rec.bic;
		END IF;

		-- CONTO CORRENTE
		IF rec.contocorrente IS NOT NULL AND (rec.contocorrente <> '') THEN
			IF (descr_arricchita <> '') THEN
				descr_arricchita := descr_arricchita || ' - ';
			END IF;
			descr_arricchita := descr_arricchita || 'Conto: ' || rec.contocorrente;

			IF rec.contocorrente_intestazione IS NOT NULL AND (rec.contocorrente_intestazione <> '') THEN
				descr_arricchita := descr_arricchita || ' intestato a ' || rec.contocorrente_intestazione;
			END IF;
		END IF;

		-- QUIETANZANTE
		IF rec.quietanziante IS NOT NULL AND (rec.quietanziante <> '') THEN
			IF (descr_arricchita <> '') THEN
				descr_arricchita := descr_arricchita || ' - ';
			END IF;
			descr_arricchita := descr_arricchita || 'Quietanzante: ' || rec.quietanziante;

			IF rec.quietanziante_codice_fiscale IS NOT NULL AND (rec.quietanziante_codice_fiscale <> '') THEN
				descr_arricchita := descr_arricchita || ' (CF: ' || rec.quietanziante_codice_fiscale || ')';
			END IF;

			IF rec.quietanzante_nascita_data IS NOT NULL THEN
				descr_arricchita := descr_arricchita || ', nato il ' || rec.quietanzante_nascita_data;
			END IF;

			IF rec.quietanziante_nascita_luogo IS NOT NULL AND (rec.quietanziante_nascita_luogo <> '') THEN
				descr_arricchita := descr_arricchita || ' a ' || rec.quietanziante_nascita_luogo;
			END IF;

			IF rec.quietanziante_nascita_stato IS NOT NULL AND (rec.quietanziante_nascita_stato <> '') THEN
				descr_arricchita := descr_arricchita || ', ' || rec.quietanziante_nascita_stato;
			END IF;
		END IF;

		RETURN NEXT;
	END LOOP;
	RETURN;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--25
DROP FUNCTION if exists fnc_siac_cons_entita_reversale_from_accertamento (integer,  integer, integer);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_reversale_from_accertamento (
  _uid_accertamento integer,
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  ord_anno integer,
  ord_numero numeric,
  ord_desc varchar,
  soggetto_code varchar,
  soggetto_desc varchar,
  accredito_tipo_code varchar,
  accredito_tipo_desc varchar,
  ord_stato_desc varchar,
  importo numeric,
  ord_ts_code varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  uid_capitolo integer,
  capitolo_numero varchar,
  capitolo_articolo varchar,
  ueb_numero varchar,
  capitolo_desc varchar,
  capitolo_anno varchar,
  provc_anno integer,
  provc_numero numeric,
  provc_data_convalida timestamp,
  ord_quietanza_data timestamp,
  -- 13.07.2018 Sofia jira siac-6193
  ord_emissione_data timestamp,
  conto_tesoreria varchar,
  distinta_code varchar,
  distinta_desc varchar,
  ord_split     varchar,
  ord_ritenute  varchar
) AS
$body$
DECLARE
_offset INTEGER := (_page) * _limit;
_test VARCHAR := 'test';
rec record;
v_ord_id integer;
v_attoamm_id integer;
v_ord_ts_id integer;
BEGIN

	for rec in
		select
			a.elem_id,
			c2.anno,
			a.elem_code,
			a.elem_code2,
			a.elem_code3,
			d.ord_id,
			d.ord_anno,
			d.ord_numero,
			d.ord_desc,
			l.ord_stato_desc,
			g.ord_ts_code,
			g.ord_ts_id,
            -- 13.07.2018 Sofia jira siac-6193
            d.ord_emissione_data,
            d.contotes_id,
            d.dist_id
		from
			siac_t_bil_elem a,
			siac_t_bil b2,
			siac_t_periodo c2,
			siac_r_ordinativo_bil_elem b,
			siac_t_ordinativo d,
			siac_d_ordinativo_tipo e,
			siac_r_ordinativo_ts_movgest_ts f,
			siac_t_ordinativo_ts g,
			siac_t_movgest_ts h,
			siac_r_ordinativo_stato i,
			siac_d_ordinativo_stato l
		where a.bil_id=b2.bil_id
		and c2.periodo_id=b2.periodo_id
		and b.elem_id=a.elem_id
		and d.ord_id=b.ord_id
		and e.ord_tipo_id=d.ord_tipo_id
		and e.ord_tipo_code='I'
		and f.ord_ts_id=g.ord_ts_id
		and g.ord_id=d.ord_id
		and h.movgest_ts_id=f.movgest_ts_id
		and h.movgest_id=_uid_accertamento
		and i.ord_id=d.ord_id
		and l.ord_stato_id=i.ord_stato_id
		and now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now())
		and now() BETWEEN f.validita_inizio and COALESCE(f.validita_fine,now())
		and now() BETWEEN i.validita_inizio and COALESCE(i.validita_fine,now())
		and b.data_cancellazione is null
		and d.data_cancellazione is null
		and b2.data_cancellazione is null
		and c2.data_cancellazione is null
		and e.data_cancellazione is null
		and f.data_cancellazione is null
		and g.data_cancellazione is null
		and h.data_cancellazione is null
		and i.data_cancellazione is null
		and l.data_cancellazione is null
		order by 7,8
		LIMIT _limit
		OFFSET _offset

		loop

			uid:=rec.elem_id;
			capitolo_anno:=rec.anno;
			capitolo_numero:=rec.elem_code;
			capitolo_articolo:=rec.elem_code2;
			ueb_numero:=rec.elem_code3;
			ord_anno:=rec.ord_anno;
			ord_numero:=rec.ord_numero;
			ord_desc:=rec.ord_desc;
			v_ord_id:=rec.ord_id;
			ord_stato_desc:=rec.ord_stato_desc;
			ord_ts_code:=rec.ord_ts_code;
			v_ord_ts_id:=rec.ord_ts_id;

			select
				f.ord_ts_det_importo
			into importo
			from
				siac_t_ordinativo_ts e,
				siac_t_ordinativo_ts_det f,
				siac_d_ordinativo_ts_det_tipo g
			where e.ord_ts_id=v_ord_ts_id
			and f.ord_ts_id=e.ord_ts_id
			and g.ord_ts_det_tipo_id=f.ord_ts_det_tipo_id
			and g.ord_ts_det_tipo_code='A'
			and e.data_cancellazione is null
			and f.data_cancellazione is null
			and g.data_cancellazione is null;

			select
				y.soggetto_code,
				y.soggetto_desc
			into
				soggetto_code,
				soggetto_desc
			from
				siac_r_ordinativo_soggetto z,
				siac_t_soggetto y
			where z.soggetto_id=y.soggetto_id
			and now() BETWEEN z.validita_inizio
			and COALESCE(z.validita_fine,now())
			and z.data_cancellazione is null
			and y.data_cancellazione is null
			and z.ord_id=v_ord_id;

			select
				q.attoamm_id,
				q.attoamm_numero,
				q.attoamm_anno,
				t.attoamm_stato_desc,
				r.attoamm_tipo_code,
				r.attoamm_tipo_desc
			into
				v_attoamm_id,
				attoamm_numero,
				attoamm_anno,
				attoamm_stato_desc,
				attoamm_tipo_code,
				attoamm_tipo_desc
			from
				siac_r_ordinativo_atto_amm p,
				siac_t_atto_amm q,
				siac_d_atto_amm_tipo r,
				siac_r_atto_amm_stato s,
				siac_d_atto_amm_stato t
			where p.attoamm_id=q.attoamm_id
			and r.attoamm_tipo_id=q.attoamm_tipo_id
			and s.attoamm_id=q.attoamm_id
			and t.attoamm_stato_id=s.attoamm_stato_id
			and now() BETWEEN p.validita_inizio and COALESCE(p.validita_fine,now())
			and now() BETWEEN s.validita_inizio and COALESCE(s.validita_fine,now())
			and p.ord_id=v_ord_id
			and p.data_cancellazione is null
			and q.data_cancellazione is null
			and r.data_cancellazione is null
			and s.data_cancellazione is null
			and t.data_cancellazione is null;

			select
				y.classif_code,
				y.classif_desc
			into
				attoamm_sac_code,
				attoamm_sac_desc
			from
				siac_r_atto_amm_class z,
				siac_t_class y,
				siac_d_class_tipo x
			where z.classif_id=y.classif_id
			and x.classif_tipo_id=y.classif_tipo_id
			and x.classif_tipo_code IN ('CDC', 'CDR')
			and now() BETWEEN z.validita_inizio and COALESCE(z.validita_fine,now())
			and z.data_cancellazione is NULL
			and x.data_cancellazione is NULL
			and y.data_cancellazione is NULL
			and z.attoamm_id=v_attoamm_id;

             --SIAC-5899
              SELECT
                  siac_r_ordinativo_quietanza.ord_quietanza_data
              INTO
                  ord_quietanza_data
              FROM
                  siac_t_oil_ricevuta
                  ,siac_T_Ordinativo
                  ,siac_d_oil_ricevuta_tipo
                  ,siac_r_ordinativo_quietanza
              WHERE
                      siac_t_oil_ricevuta.oil_ricevuta_tipo_id =  siac_d_oil_ricevuta_tipo.oil_ricevuta_tipo_id
                  AND siac_t_oil_ricevuta.oil_ord_id  = siac_T_Ordinativo.ord_id
                  AND siac_T_Ordinativo.ord_id = siac_r_ordinativo_quietanza.ord_id
                  AND siac_d_oil_ricevuta_tipo.oil_ricevuta_tipo_code = 'Q'
                  AND siac_T_Ordinativo.ord_Id = v_ord_id
                  AND siac_t_oil_ricevuta.data_cancellazione is null
                  AND siac_T_Ordinativo.data_cancellazione is null
                  AND siac_d_oil_ricevuta_tipo.data_cancellazione is null
                  AND siac_r_ordinativo_quietanza.data_cancellazione is null;

            -- 13.07.2018 Sofia jira siac-6193
            ord_emissione_data:=rec.ord_emissione_data;

            -- 13.07.2018 Sofia jira siac-6193
            conto_tesoreria:=null;
            select conto.contotes_code into conto_tesoreria
            from siac_d_contotesoreria conto
            where conto.contotes_id=rec.contotes_id;

            distinta_code:=null;
            distinta_desc:=null;
            select d.dist_code, d.dist_desc
                   into distinta_code, distinta_desc
            from siac_d_distinta d
            where d.dist_id=rec.dist_id;

            -- 13.07.2018 Sofia jira siac-6193
            ord_split:=null;
           	select tipo.relaz_tipo_code into ord_split
            from siac_r_ordinativo rOrd, siac_d_relaz_tipo tipo,
                 siac_r_ordinativo_stato rstato,siac_d_ordinativo_stato stato
  		    where rord.ord_id_a=rec.ord_id
            and   tipo.relaz_tipo_id=rord.relaz_tipo_id
            and   tipo.relaz_tipo_code='SPR'
			and   rstato.ord_id=rOrd.ord_id_da
            and   stato.ord_stato_id=rstato.ord_stato_id
			and   stato.ord_stato_code!='A'
            and   rord.data_cancellazione is null
	        and   now() between rord.validita_inizio and coalesce(rord.validita_fine, now())
   		    and   rstato.data_cancellazione is null
			and   now() between rstato.validita_inizio and coalesce(rstato.validita_fine, now())
            limit 1;
			if ord_split is not null then
                 ord_split:='S';
            else ord_split:='N';
            end if;

            -- 13.07.2018 Sofia jira siac-6193
            ord_ritenute:=null;
            select tipo.relaz_tipo_code into ord_ritenute
            from siac_r_ordinativo rOrd, siac_d_relaz_tipo tipo,
                 siac_r_ordinativo_stato rstato,siac_d_ordinativo_stato stato
  		    where rord.ord_id_a=rec.ord_id
            and   tipo.relaz_tipo_id=rord.relaz_tipo_id
            and   tipo.relaz_tipo_code='RIT_ORD'
			and   rstato.ord_id=rOrd.ord_id_da
            and   stato.ord_stato_id=rstato.ord_stato_id
			and   stato.ord_stato_code!='A'
            and   rord.data_cancellazione is null
	        and   now() between rord.validita_inizio and coalesce(rord.validita_fine, now())
   		    and   rstato.data_cancellazione is null
			and   now() between rstato.validita_inizio and coalesce(rstato.validita_fine, now())
            limit 1;
            if ord_ritenute is not null then
                 ord_ritenute:='S';
            else ord_ritenute:='N';
            end if;

			return next;

		end loop;
	return;


END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--26
drop function if exists fnc_siac_cons_entita_reversale_from_capitoloentrata_importo ( integer );
drop function if exists fnc_siac_cons_entita_reversale_from_capitoloentrata_importo ( integer ,varchar);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_reversale_from_capitoloentrata_importo (
  _uid_capitoloentrata integer,
  _filtro_crp varchar -- 12.07.2018 Sofia jira siac-6193 C,R,altro per tutto

)
RETURNS numeric AS
$body$
DECLARE
	total numeric;
BEGIN

	SELECT coalesce(sum(i.ord_ts_det_importo),0)
	into total
	from
		siac_t_bil_elem a,
		siac_t_bil b2,
		siac_t_periodo c2,
		siac_r_ordinativo_bil_elem b,
		siac_t_ordinativo d,
		siac_d_ordinativo_tipo e,
		siac_r_ordinativo_stato f,
		siac_d_ordinativo_stato g,
		siac_t_ordinativo_ts h,
		siac_t_ordinativo_ts_det i,
		siac_d_ordinativo_ts_det_tipo j,
        siac_r_ordinativo_ts_movgest_ts rmov,
        siac_t_movgest_ts ts,
        siac_t_movgest mov
	where a.bil_id=b2.bil_id
	and c2.periodo_id=b2.periodo_id
	and a.elem_id=_uid_capitoloentrata
	and b.elem_id=a.elem_id
	and d.ord_id=b.ord_id
	and e.ord_tipo_id=d.ord_tipo_id
	and e.ord_tipo_code='I'
	and f.ord_id=d.ord_id
	and g.ord_stato_id=f.ord_stato_id
	and h.ord_id = d.ord_id
	and i.ord_ts_id=h.ord_ts_id
	and j.ord_ts_det_tipo_id=i.ord_ts_det_tipo_id
	and j.ord_ts_det_tipo_code='A'
    and rmov.ord_ts_id=h.ord_ts_id
    and ts.movgest_ts_id=rmov.movgest_ts_id
    and mov.movgest_id=ts.movgest_id
    and ( case when coalesce(_filtro_crp,'')='C' then c2.anno::integer=mov.movgest_anno
      	       when coalesce(_filtro_crp,'')='R' then mov.movgest_anno<c2.anno::integer
                    else true end )
	and now() BETWEEN f.validita_inizio and COALESCE(f.validita_fine,now())
	and now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now())
	and b.data_cancellazione is null
	and d.data_cancellazione is null
	and b2.data_cancellazione is null
	and c2.data_cancellazione is null
	and e.data_cancellazione is null
	and h.data_cancellazione is null
    and rmov.data_cancellazione is null
    and now() BETWEEN rmov.validita_inizio and COALESCE(rmov.validita_fine,now())
    and ts.data_cancellazione is null
    and now() BETWEEN ts.validita_inizio and COALESCE(ts.validita_fine,now())
    and mov.data_cancellazione is null
    and now() BETWEEN mov.validita_inizio and COALESCE(mov.validita_fine,now());

	return total;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

--27

drop function if exists fnc_siac_cons_entita_reversale_from_capitoloentrata_total (integer);
drop function if exists fnc_siac_cons_entita_reversale_from_capitoloentrata_total (integer,varchar);


CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_reversale_from_capitoloentrata_total (
  _uid_capitoloentrata integer,
  _filtro_crp varchar -- 12.07.2018 Sofia jira siac-6193 C,R,altro per tutto

)
RETURNS bigint AS
$body$
DECLARE
	total bigint;
BEGIN

	SELECT coalesce(count(*),0)
	into total
	from
		siac_t_bil_elem a,
		siac_t_bil b2,
		siac_t_periodo c2,
		siac_r_ordinativo_bil_elem b,
		siac_t_ordinativo d,
		siac_d_ordinativo_tipo e,
		siac_r_ordinativo_stato f,
		siac_d_ordinativo_stato g,
		siac_t_ordinativo_ts h,
        siac_r_ordinativo_ts_movgest_ts rmov,
        siac_t_movgest_ts ts,
        siac_t_movgest mov
	where a.bil_id=b2.bil_id
	and c2.periodo_id=b2.periodo_id
	and a.elem_id=_uid_capitoloentrata
	and b.elem_id=a.elem_id
	and d.ord_id=b.ord_id
	and e.ord_tipo_id=d.ord_tipo_id
	and e.ord_tipo_code='I'
	and f.ord_id=d.ord_id
	and g.ord_stato_id=f.ord_stato_id
	and h.ord_id = d.ord_id
    and rmov.ord_ts_id=h.ord_ts_id
    and ts.movgest_ts_id=rmov.movgest_ts_id
    and mov.movgest_id=ts.movgest_id
    and ( case when coalesce(_filtro_crp,'')='C' then c2.anno::integer=mov.movgest_anno
      	       when coalesce(_filtro_crp,'')='R' then mov.movgest_anno<c2.anno::integer
                    else true end )
	and now() BETWEEN f.validita_inizio and COALESCE(f.validita_fine,now())
	and now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now())
	and b.data_cancellazione is null
	and d.data_cancellazione is null
	and b2.data_cancellazione is null
	and c2.data_cancellazione is null
	and e.data_cancellazione is null
	and h.data_cancellazione is null
    and rmov.data_cancellazione is null
    and now() BETWEEN rmov.validita_inizio and COALESCE(rmov.validita_fine,now())
    and ts.data_cancellazione is null
    and now() BETWEEN ts.validita_inizio and COALESCE(ts.validita_fine,now())
    and mov.data_cancellazione is null
    and now() BETWEEN mov.validita_inizio and COALESCE(mov.validita_fine,now());

	return total;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

--28

DROP FUNCTION if exists fnc_siac_cons_entita_reversale_from_capitoloentrata (integer,  integer, integer);

DROP FUNCTION if exists fnc_siac_cons_entita_reversale_from_capitoloentrata (integer,  varchar,integer, integer);


CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_reversale_from_capitoloentrata (
  _uid_capitoloentrata integer,
  _filtro_crp varchar, -- 12.07.2018 Sofia jira SIAC-6193 C,R
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  ord_numero numeric,
  ord_desc varchar,
  ord_emissione_data timestamp,
  soggetto_code varchar,
  soggetto_desc varchar,
  accredito_tipo_code varchar,
  accredito_tipo_desc varchar,
  ord_stato_desc varchar,
  importo numeric,
  ord_ts_code varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  uid_capitolo integer,
  capitolo_numero varchar,
  capitolo_articolo varchar,
  ueb_numero varchar,
  capitolo_desc varchar,
  capitolo_anno varchar,
  provc_anno integer,
  provc_numero numeric,
  provc_data_convalida timestamp,
  ord_quietanza_data timestamp,
  -- 12.07.2018 Sofia jira siac-6193
  conto_tesoreria varchar,
  distinta_code varchar,
  distinta_desc varchar,
  ord_split     varchar,
  ord_ritenute  varchar
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
	_test VARCHAR := 'test';
rec record;
v_ord_id integer;
v_ord_ts_id integer;
v_attoamm_id integer;
BEGIN

	for rec in
     -- 12.07.2018 Sofia jira SIAC-6193 C,R
     WITH
      movimenti as
      (
      select rmov.ord_ts_id, mov.movgest_anno
      from   siac_r_movgest_bil_elem re,siac_t_movgest mov,
             siac_t_movgest_ts ts, siac_r_ordinativo_ts_movgest_ts rmov
      where  re.elem_id=_uid_capitoloentrata
      and    mov.movgest_id=re.movgest_id
      and    ts.movgest_id=mov.movgest_id
      and    rmov.movgest_ts_id=ts.movgest_ts_id
      and    re.data_cancellazione is null
      and    now() BETWEEN re.validita_inizio and COALESCE(re.validita_fine,now())
      and    mov.data_cancellazione is null
      and    now() BETWEEN mov.validita_inizio and COALESCE(mov.validita_fine,now())
      and    ts.data_cancellazione is null
      and    now() BETWEEN ts.validita_inizio and COALESCE(ts.validita_fine,now())
      and    rmov.data_cancellazione is null
      and    now() BETWEEN rmov.validita_inizio and COALESCE(rmov.validita_fine,now())
      ),
      ordinativi as
      (
		select
			a.elem_id,
			c2.anno,
			a.elem_code,
			a.elem_code2,
			a.elem_code3,
			d.ord_id,
			d.ord_anno,
			d.ord_numero,
			d.ord_desc,
			g.ord_stato_desc,
			h.ord_ts_id,
			h.ord_ts_code,
            -- 12.07.2018 Sofia jira siac-6193
            d.contotes_id,
            d.dist_id
		from
			siac_t_bil_elem a,
			siac_t_bil b2,
			siac_t_periodo c2,
			siac_r_ordinativo_bil_elem b,
			siac_t_ordinativo d,
			siac_d_ordinativo_tipo e,
			siac_r_ordinativo_stato f,
			siac_d_ordinativo_stato g,
			siac_t_ordinativo_ts h
		where a.bil_id=b2.bil_id
		and c2.periodo_id=b2.periodo_id
		and a.elem_id=_uid_capitoloentrata
		and b.elem_id=a.elem_id
		and d.ord_id=b.ord_id
		and e.ord_tipo_id=d.ord_tipo_id
		and e.ord_tipo_code='I'
		and f.ord_id=d.ord_id
		and g.ord_stato_id=f.ord_stato_id
		and h.ord_id = d.ord_id
		and now() BETWEEN f.validita_inizio and COALESCE(f.validita_fine,now())
		and now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now())
		and b.data_cancellazione is null
		and d.data_cancellazione is null
		and b2.data_cancellazione is null
		and c2.data_cancellazione is null
		and e.data_cancellazione is null
		and h.data_cancellazione is null
       )
       -- 12.07.2018 Sofia jira SIAC-6193 C,R
       select ordinativi.*
       from ordinativi, movimenti
       where ordinativi.ord_ts_id=movimenti.ord_ts_id
       and   ( case when coalesce(_filtro_crp,'')='C' then ordinativi.ord_anno=movimenti.movgest_anno
      			    when coalesce(_filtro_crp,'')='R' then movimenti.movgest_anno<ordinativi.ord_anno
                    else true end )
	   LIMIT _limit
	   OFFSET _offset

		loop
			uid:=rec.ord_id;
			capitolo_anno:=rec.anno;
			capitolo_numero:=rec.elem_code;
			capitolo_articolo:=rec.elem_code2;
			ueb_numero:=rec.elem_code3;
			ord_numero:=rec.ord_numero;
			ord_desc:=rec.ord_desc;
			v_ord_id:=rec.ord_id;
			ord_stato_desc:=rec.ord_stato_desc;
			v_ord_ts_id:=rec.ord_ts_id;
			ord_ts_code:=rec.ord_ts_code;

			select
				f.ord_ts_det_importo
			into
				importo
			from
				siac_t_ordinativo_ts e,
				siac_t_ordinativo_ts_det f,
				siac_d_ordinativo_ts_det_tipo g
			where e.ord_ts_id=v_ord_ts_id
			and f.ord_ts_id=e.ord_ts_id
			and g.ord_ts_det_tipo_id=f.ord_ts_det_tipo_id
			and g.ord_ts_det_tipo_code='A'
			and e.data_cancellazione is null
			and f.data_cancellazione is null
			and g.data_cancellazione is null;

			select
				y.soggetto_code,
				y.soggetto_desc
			into
				soggetto_code,
				soggetto_desc
			from
				siac_r_ordinativo_soggetto z,
				siac_t_soggetto y
			where z.soggetto_id=y.soggetto_id
			and now() BETWEEN z.validita_inizio
			and COALESCE(z.validita_fine,now())
			and now() BETWEEN z.validita_inizio and COALESCE(z.validita_fine,now())
			and z.data_cancellazione is null
			and y.data_cancellazione is null
			and z.ord_id=v_ord_id;

			select
				q.attoamm_id,
				q.attoamm_numero,
				q.attoamm_anno,
				t.attoamm_stato_desc,
				r.attoamm_tipo_code,
				r.attoamm_tipo_desc
			into
				v_attoamm_id,
				attoamm_numero,
				attoamm_anno,
				attoamm_stato_desc,
				attoamm_tipo_code,
				attoamm_tipo_desc
			from
				siac_r_ordinativo_atto_amm p,
				siac_t_atto_amm q,
				siac_d_atto_amm_tipo r,
				siac_r_atto_amm_stato s,
				siac_d_atto_amm_stato t
			where p.attoamm_id=q.attoamm_id
			and now() BETWEEN p.validita_inizio and COALESCE(p.validita_fine,now())
			and r.attoamm_tipo_id=q.attoamm_tipo_id
			and s.attoamm_id=q.attoamm_id
			and t.attoamm_stato_id=s.attoamm_stato_id
			and now() BETWEEN s.validita_inizio and COALESCE(s.validita_fine,now())
			and p.ord_id=v_ord_id
			and p.data_cancellazione is null
			and q.data_cancellazione is null
			and r.data_cancellazione is null
			and s.data_cancellazione is null
			and t.data_cancellazione is null;

			--sac
			select
				y.classif_code,
				y.classif_desc
			into
				attoamm_sac_code,
				attoamm_sac_desc
			from
				siac_r_atto_amm_class z,
				siac_t_class y,
				siac_d_class_tipo x
			where z.classif_id=y.classif_id
			and x.classif_tipo_id=y.classif_tipo_id
			and x.classif_tipo_code IN ('CDC', 'CDR')
			and now() BETWEEN z.validita_inizio and COALESCE(z.validita_fine,now())
			and z.data_cancellazione is NULL
			and x.data_cancellazione is NULL
			and y.data_cancellazione is NULL
			and z.attoamm_id=v_attoamm_id;

            --SIAC-5899
            SELECT
                siac_r_ordinativo_quietanza.ord_quietanza_data
            INTO
                ord_quietanza_data
            FROM
                siac_t_oil_ricevuta
                ,siac_T_Ordinativo
                ,siac_d_oil_ricevuta_tipo
                ,siac_r_ordinativo_quietanza
            WHERE
                    siac_t_oil_ricevuta.oil_ricevuta_tipo_id =  siac_d_oil_ricevuta_tipo.oil_ricevuta_tipo_id
                AND siac_t_oil_ricevuta.oil_ord_id  = siac_T_Ordinativo.ord_id
                AND siac_T_Ordinativo.ord_id = siac_r_ordinativo_quietanza.ord_id
                AND siac_d_oil_ricevuta_tipo.oil_ricevuta_tipo_code = 'Q'
                AND siac_T_Ordinativo.ord_Id = v_ord_id
                AND siac_t_oil_ricevuta.data_cancellazione is null
                AND siac_T_Ordinativo.data_cancellazione is null
                AND siac_d_oil_ricevuta_tipo.data_cancellazione is null
                AND siac_r_ordinativo_quietanza.data_cancellazione is null;

            -- 12.07.2018 Sofia jira siac-6193
            conto_tesoreria:=null;
            select conto.contotes_code into conto_tesoreria
            from siac_d_contotesoreria conto
            where conto.contotes_id=rec.contotes_id;

            distinta_code:=null;
            distinta_desc:=null;
            select d.dist_code, d.dist_desc
                   into distinta_code, distinta_desc
            from siac_d_distinta d
            where d.dist_id=rec.dist_id;

            -- 12.07.2018 Sofia jira siac-6193
            ord_split:=null;
           	select tipo.relaz_tipo_code into ord_split
            from siac_r_ordinativo rOrd, siac_d_relaz_tipo tipo,
                 siac_r_ordinativo_stato rstato,siac_d_ordinativo_stato stato
  		    where rord.ord_id_a=rec.ord_id
            and   tipo.relaz_tipo_id=rord.relaz_tipo_id
            and   tipo.relaz_tipo_code='SPR'
			and   rstato.ord_id=rOrd.ord_id_da
            and   stato.ord_stato_id=rstato.ord_stato_id
			and   stato.ord_stato_code!='A'
            and   rord.data_cancellazione is null
	        and   now() between rord.validita_inizio and coalesce(rord.validita_fine, now())
   		    and   rstato.data_cancellazione is null
			and   now() between rstato.validita_inizio and coalesce(rstato.validita_fine, now())
            limit 1;
			if ord_split is not null then
                 ord_split:='S';
            else ord_split:='N';
            end if;

            -- 12.07.2018 Sofia jira siac-6193
            ord_ritenute:=null;
            select tipo.relaz_tipo_code into ord_ritenute
            from siac_r_ordinativo rOrd, siac_d_relaz_tipo tipo,
                 siac_r_ordinativo_stato rstato,siac_d_ordinativo_stato stato
  		    where rord.ord_id_a=rec.ord_id
            and   tipo.relaz_tipo_id=rord.relaz_tipo_id
            and   tipo.relaz_tipo_code='RIT_ORD'
			and   rstato.ord_id=rOrd.ord_id_da
            and   stato.ord_stato_id=rstato.ord_stato_id
			and   stato.ord_stato_code!='A'
            and   rord.data_cancellazione is null
	        and   now() between rord.validita_inizio and coalesce(rord.validita_fine, now())
   		    and   rstato.data_cancellazione is null
			and   now() between rstato.validita_inizio and coalesce(rstato.validita_fine, now())
            limit 1;
            if ord_ritenute is not null then
                 ord_ritenute:='S';
            else ord_ritenute:='N';
            end if;

			return next;
		end loop;
	return;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--29
DROP FUNCTION if exists fnc_siac_cons_entita_reversale_from_provvedimento (integer,  integer, integer);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_reversale_from_provvedimento (
  _uid_provvedimento integer,
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  ord_numero numeric,
  ord_desc varchar,
  ord_emissione_data timestamp,
  soggetto_code varchar,
  soggetto_desc varchar,
  accredito_tipo_code varchar,
  accredito_tipo_desc varchar,
  ord_stato_desc varchar,
  importo numeric,
  ord_ts_code varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  uid_capitolo integer,
  capitolo_numero varchar,
  capitolo_articolo varchar,
  num_ueb varchar,
  capitolo_desc varchar,
  capitolo_anno varchar,
  provc_anno integer,
  provc_numero numeric,
  provc_data_convalida timestamp,
  ord_quietanza_data timestamp,
  -- 13.07.2018 Sofia jira siac-6193
  conto_tesoreria varchar,
  distinta_code varchar,
  distinta_desc varchar,
  ord_split     varchar,
  ord_ritenute  varchar
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
BEGIN

	RETURN QUERY
		with ord_join_outer as (
			with ord_join as (
				with ordinativo as (
					select
						a.ord_id as uid,
						a.ord_numero,
						a.ord_desc,
						a.ord_emissione_data,
						e.ord_stato_desc,
						g.ord_ts_det_importo as importo,
						f.ord_ts_code,
                        -- 13.07.2018 Sofia jira siac-6193
                        a.contotes_id,
                        a.dist_id
					from
						siac_t_ordinativo a,
						siac_r_ordinativo_stato d,
						siac_d_ordinativo_stato e,
						siac_t_ordinativo_ts f,
						siac_t_ordinativo_ts_det g,
						siac_d_ordinativo_ts_det_tipo h,
						siac_d_ordinativo_tipo i
					where d.ord_id=a.ord_id
					and d.ord_stato_id=e.ord_stato_id
					and now() BETWEEN d.validita_inizio and COALESCE(d.validita_fine,now())
					and f.ord_id=a.ord_id
					and g.ord_ts_id=f.ord_ts_id
					and h.ord_ts_det_tipo_id=g.ord_ts_det_tipo_id
					and h.ord_ts_det_tipo_code = 'A'
					and i.ord_tipo_id=a.ord_tipo_id
					and i.ord_tipo_code='I'
					and a.data_cancellazione is null
					and d.data_cancellazione is null
					and e.data_cancellazione is null
					and f.data_cancellazione is null
					and g.data_cancellazione is null
					and i.data_cancellazione is null
				),
				soggetto as (
					select
						b.ord_id,
						c.soggetto_code,
						c.soggetto_desc
					from
						siac_r_ordinativo_soggetto b,
						siac_t_soggetto c
					where b.soggetto_id=c.soggetto_id
					and now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now())
					and b.data_cancellazione is null
					and c.data_cancellazione is null
				),
				attoamm as (
					select
						m.ord_id,
						n.attoamm_id,
						n.attoamm_numero,
						n.attoamm_anno,
						q.attoamm_stato_desc,
						o.attoamm_tipo_code,
						o.attoamm_tipo_desc
					from
						siac_r_ordinativo_atto_amm m,
						siac_t_atto_amm n,
						siac_d_atto_amm_tipo o,
						siac_r_atto_amm_stato p,
						siac_d_atto_amm_stato q
					where n.attoamm_id=m.attoamm_id
					and n.attoamm_id=_uid_provvedimento
					and o.attoamm_tipo_id=n.attoamm_tipo_id
					and p.attoamm_id=n.attoamm_id
					and p.attoamm_stato_id=q.attoamm_stato_id
					and now() BETWEEN p.validita_inizio and coalesce (p.validita_fine,now())
					and now() BETWEEN m.validita_inizio and COALESCE(m.validita_fine,now())
					and q.attoamm_stato_code<>'ANNULLATO'
					and m.data_cancellazione is null
					and n.data_cancellazione is null
					and o.data_cancellazione is null
					and p.data_cancellazione is null
					and q.data_cancellazione is null
				),
				capitolo as (
					select
						r.ord_id,
						s.elem_id,
						s.elem_code,
						s.elem_code2,
						s.elem_code3,
						s.elem_desc,
						y.anno capitolo_anno
					from
						siac_r_ordinativo_bil_elem r,
						siac_t_bil_elem s,
						siac_t_bil x,
						siac_t_periodo y
					where s.elem_id=r.elem_id
					and r.data_cancellazione is null
					and s.data_cancellazione is null
					and x.bil_id=s.bil_id
					and y.periodo_id=x.periodo_id
					and now() BETWEEN r.validita_inizio and coalesce (r.validita_fine,now())
				),
				modpag as (
					with modpag_noncessione as (
						select
							c2.ord_id,
							e2.accredito_tipo_code,
							e2.accredito_tipo_desc
						FROM
							siac_r_ordinativo_modpag c2,
							siac_t_modpag d2,
							siac_d_accredito_tipo e2
						where c2.modpag_id=d2.modpag_id
						and e2.accredito_tipo_id=d2.accredito_tipo_id
						and now() BETWEEN c2.validita_inizio and coalesce (c2.validita_fine,now())
						and c2.data_cancellazione is null
						and d2.data_cancellazione is null
						and e2.data_cancellazione is null
					),
					modpag_cessione as (
						select
							c2.ord_id,
							e2.relaz_tipo_code accredito_tipo_code,
							e2.relaz_tipo_desc accredito_tipo_desc
						from
							siac_r_ordinativo_modpag c2,
							siac_r_soggetto_relaz d2,
							siac_d_relaz_tipo e2
						where d2.soggetto_relaz_id = c2.soggetto_relaz_id
						and e2.relaz_tipo_id = d2.relaz_tipo_id
						and now() BETWEEN c2.validita_inizio and coalesce (c2.validita_fine,now())
						and c2.data_cancellazione is null
						and d2.data_cancellazione is null
						and e2.data_cancellazione is null
					)
					select *
					from modpag_noncessione
					UNION ALL
					select *
					from modpag_cessione
				),
                -- 13.07.2018 Sofia siac-6193
                conto_tesoreria as
                (
                 select conto.contotes_id, conto.contotes_code
                 from siac_d_contotesoreria conto
                 where conto.data_cancellazione is null
                ),
                -- 13.07.2018 Sofia siac-6193
                distinta as
                (
                select d.dist_id, d.dist_code, d.dist_desc
                from siac_d_distinta d
                where d.data_cancellazione is null
                )
				select
					*
				from ordinativo
				join soggetto on ordinativo.uid=soggetto.ord_id
				join attoamm on ordinativo.uid=attoamm.ord_id
				join capitolo on ordinativo.uid=capitolo.ord_id
				left outer join modpag on ordinativo.uid=modpag.ord_id
                -- 13.07.2018 Sofia siac-6193
                left join conto_tesoreria on (ordinativo.contotes_id=conto_tesoreria.contotes_id)
                left join distinta on (ordinativo.dist_id=distinta.dist_id)
			),
			sac_attoamm as (
				select
					y.classif_code,
					y.classif_desc,
					z.attoamm_id
				from
					siac_r_atto_amm_class z,
					siac_t_class y,
					siac_d_class_tipo x
				where z.classif_id=y.classif_id
				and x.classif_tipo_id=y.classif_tipo_id
				and now() BETWEEN z.validita_inizio and coalesce (z.validita_fine,now())
				and x.classif_tipo_code IN ('CDC', 'CDR')
				and z.data_cancellazione is NULL
				and x.data_cancellazione is NULL
				and y.data_cancellazione is NULL
			)
			select
				*
			from
				ord_join
				left outer join sac_attoamm on ord_join.attoamm_id=sac_attoamm.attoamm_id
		),
		provv_cassa as (
			select
				a2.ord_id,
				b2.provc_anno,
				b2.provc_numero,
				b2.provc_data_convalida
			from
				siac_r_ordinativo_prov_cassa a2,
				siac_t_prov_cassa b2
			where b2.provc_id=a2.provc_id
			and now() BETWEEN a2.validita_inizio and coalesce (a2.validita_fine,now())
			and a2.data_cancellazione is NULL
			and b2.data_cancellazione is NULL
		),
    	quietanza AS
        (
     --SIAC-5899
        SELECT
            siac_T_Ordinativo.ord_id,
            siac_r_ordinativo_quietanza.ord_quietanza_data
        --INTO
            --ord_quietanza_data
        FROM
            siac_t_oil_ricevuta
            ,siac_T_Ordinativo
            ,siac_d_oil_ricevuta_tipo
            ,siac_r_ordinativo_quietanza
        WHERE
                siac_t_oil_ricevuta.oil_ricevuta_tipo_id =  siac_d_oil_ricevuta_tipo.oil_ricevuta_tipo_id
            AND siac_t_oil_ricevuta.oil_ord_id  = siac_T_Ordinativo.ord_id
            AND siac_T_Ordinativo.ord_id = siac_r_ordinativo_quietanza.ord_id
            AND siac_d_oil_ricevuta_tipo.oil_ricevuta_tipo_code = 'Q'
            --AND siac_T_Ordinativo.ord_Id = uid
            AND siac_t_oil_ricevuta.data_cancellazione is null
            AND siac_T_Ordinativo.data_cancellazione is null
            AND siac_d_oil_ricevuta_tipo.data_cancellazione is null
            AND siac_r_ordinativo_quietanza.data_cancellazione is null
            ),
        split as
        (
           select distinct rord.ord_id_a ord_id
           from siac_r_ordinativo rOrd, siac_d_relaz_tipo tipo,
                siac_r_ordinativo_stato rstato,siac_d_ordinativo_stato stato
 		   where tipo.relaz_tipo_code='SPR'
            and   rord.relaz_tipo_id=tipo.relaz_tipo_id
			and   rstato.ord_id=rOrd.ord_id_da
            and   stato.ord_stato_id=rstato.ord_stato_id
			and   stato.ord_stato_code!='A'
            and   rord.data_cancellazione is null
	        and   now() between rord.validita_inizio and coalesce(rord.validita_fine, now())
   		    and   rstato.data_cancellazione is null
			and   now() between rstato.validita_inizio and coalesce(rstato.validita_fine, now())
        ),
        ritenute as
        (
           select distinct rord.ord_id_a ord_id
           from siac_r_ordinativo rOrd, siac_d_relaz_tipo tipo,
                siac_r_ordinativo_stato rstato,siac_d_ordinativo_stato stato
 		   where tipo.relaz_tipo_code='RIT_ORD'
            and   rord.relaz_tipo_id=tipo.relaz_tipo_id
			and   rstato.ord_id=rOrd.ord_id_da
            and   stato.ord_stato_id=rstato.ord_stato_id
			and   stato.ord_stato_code!='A'
            and   rord.data_cancellazione is null
	        and   now() between rord.validita_inizio and coalesce(rord.validita_fine, now())
   		    and   rstato.data_cancellazione is null
			and   now() between rstato.validita_inizio and coalesce(rstato.validita_fine, now())
        )
		select
			ord_join_outer.uid,
			ord_join_outer.ord_numero,
			ord_join_outer.ord_desc,
			ord_join_outer.ord_emissione_data,
			ord_join_outer.soggetto_code,
			ord_join_outer.soggetto_desc,
			ord_join_outer.accredito_tipo_code,
			ord_join_outer.accredito_tipo_desc,
			ord_join_outer.ord_stato_desc,
			ord_join_outer.importo,
			ord_join_outer.ord_ts_code,
			ord_join_outer.attoamm_numero,
			ord_join_outer.attoamm_anno,
			ord_join_outer.attoamm_stato_desc,
			ord_join_outer.classif_code as attoamm_sac_code,
			ord_join_outer.classif_desc as attoamm_sac_desc,
			ord_join_outer.attoamm_tipo_code,
			ord_join_outer.attoamm_tipo_desc,
			ord_join_outer.elem_id as uid_capitolo,
			ord_join_outer.elem_code as num_capitolo,
			ord_join_outer.elem_code2 as num_articolo,
			ord_join_outer.elem_code3 as num_ueb,
			ord_join_outer.elem_desc as capitolo_desc,
			ord_join_outer.capitolo_anno,
			provv_cassa.provc_anno,
			provv_cassa.provc_numero,
			provv_cassa.provc_data_convalida,
            quietanza.ord_quietanza_data,
            -- 13.07.2018 Sofia siac-6193
            ord_join_outer.contotes_code conto_tesoreria,
            ord_join_outer.dist_code distinta_code,
            ord_join_outer.dist_desc distinta_desc,
            (case when split.ord_id is not null then 'S' else 'N' end)::varchar ord_split,
            (case when ritenute.ord_id is not null then 'S' else 'N' end)::varchar ord_ritenute
		from ord_join_outer
			left outer join provv_cassa on ord_join_outer.uid=provv_cassa.ord_id
			left outer join quietanza on ord_join_outer.uid=quietanza.ord_id
            -- 13.07.2018 Sofia siac-6193
   			left outer join split on ord_join_outer.uid=split.ord_id
            left outer join ritenute on ord_join_outer.uid=ritenute.ord_id
        order by
			ord_join_outer.ord_numero,
			ord_join_outer.ord_emissione_data,
			ord_join_outer.attoamm_anno,
			ord_join_outer.attoamm_numero
 LIMIT _limit
 OFFSET _offset;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--30

DROP FUNCTION if exists fnc_siac_cons_entita_reversale_from_soggetto (integer,   varchar,   integer,   integer);
DROP FUNCTION if exists fnc_siac_cons_entita_reversale_from_soggetto (integer,   integer,   integer);

--select * from fnc_siac_cons_entita_reversale_from_soggetto (345,  '2018',12, 0);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_reversale_from_soggetto (
  _uid_soggetto integer,
  _annoesercizio varchar,
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  ord_numero numeric,
  ord_desc varchar,
  ord_emissione_data timestamp,
  soggetto_code varchar,
  soggetto_desc varchar,
  accredito_tipo_code varchar,
  accredito_tipo_desc varchar,
  ord_stato_desc varchar,
  importo numeric,
  ord_ts_code varchar,
  attoamm_numero integer,
  attoamm_anno varchar,
  attoamm_stato_desc varchar,
  attoamm_sac_code varchar,
  attoamm_sac_desc varchar,
  attoamm_tipo_code varchar,
  attoamm_tipo_desc varchar,
  uid_capitolo integer,
  capitolo_numero varchar,
  capitolo_articolo varchar,
  num_ueb varchar,
  capitolo_desc varchar,
  capitolo_anno varchar,
  provc_anno integer,
  provc_numero numeric,
  provc_data_convalida timestamp,
  ord_quietanza_data timestamp,
  -- 13.07.2018 Sofia jira siac-6193
  conto_tesoreria varchar,
  distinta_code varchar,
  distinta_desc varchar,
  ord_split     varchar,
  ord_ritenute  varchar
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
    v_ente_proprietario_id INTEGER;
BEGIN

	select ente_proprietario_id	into v_ente_proprietario_id from siac_t_soggetto where soggetto_id = _uid_soggetto;
	RETURN QUERY
	with ord_join_outer as (
		with ord_join as (
			with ordinativo as (
				select
					a.ord_id as uid,
					a.ord_numero,
					a.ord_desc,
					a.ord_emissione_data,
					e.ord_stato_desc,
					g.ord_ts_det_importo as importo,
					f.ord_ts_code,
                    -- 13.07.2018 Sofia jira siac-6193
                    a.contotes_id,
                    a.dist_id
				from
					 siac_t_ordinativo a
					,siac_r_ordinativo_stato d
					,siac_d_ordinativo_stato e
					,siac_t_ordinativo_ts f
					,siac_t_ordinativo_ts_det g
					,siac_d_ordinativo_ts_det_tipo h
					,siac_d_ordinativo_tipo i
                    ,siac_t_bil tbil
					,siac_t_periodo tper

				where d.ord_id=a.ord_id
				and d.ord_stato_id=e.ord_stato_id
				and f.ord_id=a.ord_id
				and g.ord_ts_id=f.ord_ts_id
				and h.ord_ts_det_tipo_id=g.ord_ts_det_tipo_id

                and a.bil_id = tbil.bil_id
                and tbil.periodo_id	= tper.periodo_id
                and tper.anno = _annoEsercizio
				and a.ente_proprietario_id =  v_ente_proprietario_id
				and now() BETWEEN d.validita_inizio and COALESCE(d.validita_fine,now())
				and h.ord_ts_det_tipo_code = 'A'
				and i.ord_tipo_id=a.ord_tipo_id
				and i.ord_tipo_code='I'
				and a.data_cancellazione is null
				and d.data_cancellazione is null
				and e.data_cancellazione is null
				and f.data_cancellazione is null
				and g.data_cancellazione is null
				and h.data_cancellazione is null
                and tbil.data_cancellazione is null
				and tper.data_cancellazione is null

			),
			soggetto as (
				select
					b.ord_id,
					c.soggetto_code,
					c.soggetto_desc
				from
					siac_r_ordinativo_soggetto b,
					siac_t_soggetto c
				where b.soggetto_id=c.soggetto_id
				and c.soggetto_id=_uid_soggetto
				and now() BETWEEN b.validita_inizio and COALESCE(b.validita_fine,now())
				and b.data_cancellazione is null
				and c.data_cancellazione is null
			),
			attoamm as (
				select
					m.ord_id,
					n.attoamm_id,
					n.attoamm_numero,
					n.attoamm_anno,
					q.attoamm_stato_desc,
					o.attoamm_tipo_code,
					o.attoamm_tipo_desc
				from
					siac_r_ordinativo_atto_amm m,
					siac_t_atto_amm n,
					siac_d_atto_amm_tipo o,
					siac_r_atto_amm_stato p,
					siac_d_atto_amm_stato q
				where n.attoamm_id=m.attoamm_id
				and o.attoamm_tipo_id=n.attoamm_tipo_id
				and p.attoamm_id=n.attoamm_id
				and p.attoamm_stato_id=q.attoamm_stato_id
				and now() BETWEEN p.validita_inizio and coalesce (p.validita_fine,now())
				and now() BETWEEN m.validita_inizio and COALESCE(m.validita_fine,now())
                and n.ente_proprietario_id =  v_ente_proprietario_id
				and q.attoamm_stato_code<>'ANNULLATO'
				and m.data_cancellazione is null
				and n.data_cancellazione is null
				and o.data_cancellazione is null
				and p.data_cancellazione is null
				and q.data_cancellazione is null
			),
			capitolo as (
				select
					r.ord_id,
					s.elem_id,
					s.elem_code,
					s.elem_code2,
					s.elem_code3,
					s.elem_desc,
					y.anno capitolo_anno
				from
					siac_r_ordinativo_bil_elem r,
					siac_t_bil_elem s,
					siac_t_bil x,
					siac_t_periodo y
				where s.elem_id=r.elem_id
				and x.bil_id=s.bil_id
				and y.periodo_id=x.periodo_id
                and x.ente_proprietario_id =  v_ente_proprietario_id
				and r.data_cancellazione is null
				and s.data_cancellazione is null
				and x.data_cancellazione is null
				and y.data_cancellazione is null
				and now() BETWEEN r.validita_inizio and coalesce (r.validita_fine,now())
			),
			modpag as (
				select c2.ord_id,
					e2.accredito_tipo_code,
					e2.accredito_tipo_desc
				FROM
					siac_r_ordinativo_modpag c2,
					siac_t_modpag d2,
					siac_d_accredito_tipo e2
				where c2.modpag_id=d2.modpag_id
				and e2.accredito_tipo_id=d2.accredito_tipo_id
				and now() BETWEEN c2.validita_inizio and coalesce (c2.validita_fine,now())
                and d2.ente_proprietario_id =  v_ente_proprietario_id
				and c2.data_cancellazione is null
				and d2.data_cancellazione is null
				and e2.data_cancellazione is null
			),
            -- 13.07.2018 Sofia siac-6193
            conto_tesoreria as
            (
            	select conto.contotes_id, conto.contotes_code
                from siac_d_contotesoreria conto
                where conto.data_cancellazione is null
            ),
            -- 13.07.2018 Sofia siac-6193
            distinta as
            (
            	select d.dist_id, d.dist_code, d.dist_desc
                from siac_d_distinta d
                where 
                    d.ente_proprietario_id =  v_ente_proprietario_id
                and d.data_cancellazione is null
            )
			select *
			from ordinativo
			join soggetto on ordinativo.uid=soggetto.ord_id
			join attoamm on ordinativo.uid=attoamm.ord_id
			join capitolo on ordinativo.uid=capitolo.ord_id
			left outer join modpag on ordinativo.uid=modpag.ord_id
            -- 13.07.2018 Sofia siac-6193
            left join conto_tesoreria on (ordinativo.contotes_id=conto_tesoreria.contotes_id)
            left join distinta on (ordinativo.dist_id=distinta.dist_id)
		),
		sac_attoamm as (
			select
				y.classif_code,
				y.classif_desc,
				z.attoamm_id
			from
				siac_r_atto_amm_class z,
				siac_t_class y,
				siac_d_class_tipo x
			where z.classif_id=y.classif_id
			and x.classif_tipo_id=y.classif_tipo_id
			and now() BETWEEN z.validita_inizio and coalesce (z.validita_fine,now())
			and x.classif_tipo_code IN ('CDC', 'CDR')
            and y.ente_proprietario_id =  v_ente_proprietario_id
			and z.data_cancellazione is NULL
			and x.data_cancellazione is NULL
			and y.data_cancellazione is NULL
		)
		select *
		from ord_join
		left outer join sac_attoamm on ord_join.attoamm_id=sac_attoamm.attoamm_id
	),
	provv_cassa as(
		select
			a2.ord_id,
			b2.provc_anno,
			b2.provc_numero,
			b2.provc_data_convalida
		from
			siac_r_ordinativo_prov_cassa a2,
			siac_t_prov_cassa b2
		where b2.provc_id=a2.provc_id
		and now() BETWEEN a2.validita_inizio and coalesce (a2.validita_fine,now())
        and b2.ente_proprietario_id =  v_ente_proprietario_id
		and a2.data_cancellazione is NULL
		and b2.data_cancellazione is NULL
	),
    quietanza AS(
     --SIAC-5899
        SELECT
            siac_T_Ordinativo.ord_id,
            siac_r_ordinativo_quietanza.ord_quietanza_data
        --INTO
            --ord_quietanza_data
        FROM
            siac_t_oil_ricevuta
            ,siac_T_Ordinativo
            ,siac_d_oil_ricevuta_tipo
            ,siac_r_ordinativo_quietanza
        WHERE
                siac_t_oil_ricevuta.oil_ricevuta_tipo_id =  siac_d_oil_ricevuta_tipo.oil_ricevuta_tipo_id
            AND siac_t_oil_ricevuta.oil_ord_id  = siac_T_Ordinativo.ord_id
            AND siac_T_Ordinativo.ord_id = siac_r_ordinativo_quietanza.ord_id
            and siac_t_ordinativo.ente_proprietario_id =  v_ente_proprietario_id
            AND siac_d_oil_ricevuta_tipo.oil_ricevuta_tipo_code = 'Q'            
            --AND siac_T_Ordinativo.ord_Id = uid
            AND siac_t_oil_ricevuta.data_cancellazione is null
            AND siac_T_Ordinativo.data_cancellazione is null
            AND siac_d_oil_ricevuta_tipo.data_cancellazione is null
            AND siac_r_ordinativo_quietanza.data_cancellazione is null
            ),
    split as
        (
           select distinct rord.ord_id_a ord_id
           from siac_r_ordinativo rOrd, siac_d_relaz_tipo tipo,
                siac_r_ordinativo_stato rstato,siac_d_ordinativo_stato stato
 		   where tipo.relaz_tipo_code='SPR'
            and   rord.relaz_tipo_id=tipo.relaz_tipo_id
			and   rstato.ord_id=rOrd.ord_id_da
            and   stato.ord_stato_id=rstato.ord_stato_id
			and   stato.ord_stato_code!='A'
            and   tipo.ente_proprietario_id =  v_ente_proprietario_id
            and   rord.data_cancellazione is null
	        and   now() between rord.validita_inizio and coalesce(rord.validita_fine, now())
   		    and   rstato.data_cancellazione is null
            and   tipo.data_cancellazione is null
            and   stato.data_cancellazione is null
			and   now() between rstato.validita_inizio and coalesce(rstato.validita_fine, now())
        ),
        ritenute as
        (
           select distinct rord.ord_id_a ord_id
           from siac_r_ordinativo rOrd, siac_d_relaz_tipo tipo,
                siac_r_ordinativo_stato rstato,siac_d_ordinativo_stato stato
 		   where tipo.relaz_tipo_code='RIT_ORD'
            and   rord.relaz_tipo_id=tipo.relaz_tipo_id
			and   rstato.ord_id=rOrd.ord_id_da
            and   stato.ord_stato_id=rstato.ord_stato_id
			and   stato.ente_proprietario_id =  v_ente_proprietario_id
			and   stato.ord_stato_code!='A'
            and   tipo.data_cancellazione is null
            and   stato.data_cancellazione is null
            and   rord.data_cancellazione is null
	        and   now() between rord.validita_inizio and coalesce(rord.validita_fine, now())
   		    and   rstato.data_cancellazione is null
			and   now() between rstato.validita_inizio and coalesce(rstato.validita_fine, now())
        )
	select
		ord_join_outer.uid,
		ord_join_outer.ord_numero,
		ord_join_outer.ord_desc,
		ord_join_outer.ord_emissione_data,
		ord_join_outer.soggetto_code,
		ord_join_outer.soggetto_desc,
		ord_join_outer.accredito_tipo_code,
		ord_join_outer.accredito_tipo_desc,
		ord_join_outer.ord_stato_desc,
		ord_join_outer.importo,
		ord_join_outer.ord_ts_code,
		ord_join_outer.attoamm_numero,
		ord_join_outer.attoamm_anno,
		ord_join_outer.attoamm_stato_desc,
		ord_join_outer.classif_code as attoamm_sac_code,
		ord_join_outer.classif_desc as attoamm_sac_desc,
		ord_join_outer.attoamm_tipo_code,
		ord_join_outer.attoamm_tipo_desc,
		ord_join_outer.elem_id as uid_capitolo,
		ord_join_outer.elem_code as capitolo_numero,
		ord_join_outer.elem_code2 as capitolo_articolo,
		ord_join_outer.elem_code3 as numero_ueb,
		ord_join_outer.elem_desc as capitolo_desc,
		ord_join_outer.capitolo_anno as capitolo_anno,
		provv_cassa.provc_anno,
		provv_cassa.provc_numero,
		provv_cassa.provc_data_convalida,
		quietanza.ord_quietanza_data,
        -- 13.07.2018 Sofia siac-6193
        ord_join_outer.contotes_code conto_tesoreria,
        ord_join_outer.dist_code distinta_code,
        ord_join_outer.dist_desc distinta_desc,
        (case when split.ord_id is not null then 'S' else 'N' end)::varchar ord_split,
        (case when ritenute.ord_id is not null then 'S' else 'N' end)::varchar ord_ritenute
	from ord_join_outer
		left outer join provv_cassa on ord_join_outer.uid=provv_cassa.ord_id
    	left outer join quietanza on ord_join_outer.uid=quietanza.ord_id
        -- 13.07.2018 Sofia siac-6193
  	    left outer join split on ord_join_outer.uid=split.ord_id
        left outer join ritenute on ord_join_outer.uid=ritenute.ord_id
	order by 2,4,12,11
	LIMIT _limit
	OFFSET _offset;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;

--31

DROP FUNCTION IF EXISTS fnc_siac_cons_entita_sede_secondaria_from_soggetto(INTEGER, INTEGER, INTEGER);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_sede_secondaria_from_soggetto (
	_uid_soggetto INTEGER,
	_limit INTEGER,
	_page INTEGER
)
RETURNS TABLE (
	toponimo VARCHAR,
	zip_code VARCHAR,
	comune_desc VARCHAR,
	sigla_automobilistica VARCHAR,
	via_tipo_desc VARCHAR,
	soggetto_code VARCHAR,
	soggetto_desc VARCHAR,
	soggetto_stato_code VARCHAR,
	soggetto_stato_desc VARCHAR,
  	soggetto_code_princ VARCHAR, -- 26.06.2018 Sofia siac-6193
  	soggetto_desc_princ VARCHAR  -- 26.06.2018 Sofia siac-6193
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
BEGIN

	RETURN QUERY

	WITH provincia AS (
		SELECT
			siac_r_comune_provincia.comune_id,
			siac_t_provincia.sigla_automobilistica
			-- La relazione tra provincia e regione non e' popolata
		FROM
			siac_r_comune_provincia,
			siac_t_provincia
			--siac_r_provincia_regione
			--siac_t_regione
		WHERE siac_r_comune_provincia.provincia_id = siac_t_provincia.provincia_id
		--AND siac_t_provincia.provincia_id = siac_r_provincia_regione.provincia_id
		--AND siac_r_provincia_regione.regione_id = siac_t_regione.regione_id
		AND siac_r_comune_provincia.data_cancellazione IS NULL
		AND siac_t_provincia.data_cancellazione IS NULL
		--AND siac_r_provincia_regione.data_cancellazione IS NULL
		--AND siac_t_regione.data_cancellazione IS NULL
	),
	sede_sec AS (
		SELECT
			sog2.soggetto_id sede_sec_id,
			sog1.soggetto_id,
			sog2.soggetto_code,
			sog2.soggetto_desc,
			dSogStato.soggetto_stato_code,
			dSogStato.soggetto_stato_desc,
            sog1.soggetto_code soggetto_code_princ, -- 26.06.2018 Sofia siac-6193
            sog1.soggetto_desc soggetto_desc_princ  -- 26.06.2018 Sofia siac-6193
		FROM
			siac_t_soggetto sog1,
			siac_r_soggetto_relaz rSogRelaz,
			siac_d_relaz_tipo dRelTipo,
			siac_t_soggetto sog2,
			siac_r_soggetto_stato rSogStato,
			siac_d_soggetto_stato dSogStato
		WHERE sog1.soggetto_id = rSogRelaz.soggetto_id_da
		AND rSogRelaz.relaz_tipo_id = dRelTipo.relaz_tipo_id
		AND dRelTipo.relaz_tipo_code = 'SEDE_SECONDARIA'
		AND rSogRelaz.soggetto_id_a = sog2.soggetto_id
		AND sog2.soggetto_id = rSogStato.soggetto_id
		AND rSogStato.soggetto_stato_id = dSogStato.soggetto_stato_id
		AND sog1.data_cancellazione IS NULL
		AND rSogRelaz.data_cancellazione IS NULL
		AND dRelTipo.data_cancellazione IS NULL
		AND sog2.data_cancellazione IS NULL
		AND rSogStato.data_cancellazione IS NULL
		AND dSogStato.data_cancellazione IS NULL
	)
	SELECT
		siac_t_indirizzo_soggetto.toponimo,
		siac_t_indirizzo_soggetto.zip_code,
		siac_t_comune.comune_desc,
		provincia.sigla_automobilistica,
		siac_d_via_tipo.via_tipo_desc,
		sede_sec.soggetto_code,
		sede_sec.soggetto_desc,
		sede_sec.soggetto_stato_code,
		sede_sec.soggetto_stato_desc,
   		sede_sec.soggetto_code_princ, -- 26.06.2018 Sofia siac-6193
   		sede_sec.soggetto_desc_princ  -- 26.06.2018 Sofia siac-6193
	FROM siac_t_indirizzo_soggetto
	CROSS JOIN siac_t_comune
	CROSS JOIN sede_sec
	LEFT OUTER JOIN siac_d_via_tipo ON (siac_t_indirizzo_soggetto.via_tipo_id = siac_d_via_tipo.via_tipo_id AND siac_d_via_tipo.data_cancellazione IS NULL)
	LEFT OUTER JOIN provincia ON (provincia.comune_id = siac_t_comune.comune_id)
	WHERE sede_sec.soggetto_id = _uid_soggetto
	AND siac_t_indirizzo_soggetto.soggetto_id = sede_sec.sede_sec_id
	AND siac_t_indirizzo_soggetto.comune_id = siac_t_comune.comune_id
	AND siac_t_indirizzo_soggetto.data_cancellazione IS NULL
	AND siac_t_comune.data_cancellazione IS NULL
	ORDER BY sede_sec.soggetto_desc
	LIMIT _limit
	OFFSET _offset;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;


--32

DROP FUNCTION IF EXISTS siac.fnc_siac_cons_entita_soggetto (integer,varchar,varchar,varchar,varchar, integer, integer);

CREATE OR REPLACE FUNCTION siac.fnc_siac_cons_entita_soggetto (
  _ente_proprietario_id integer,
  _codice_soggetto varchar,
  _denominazione_soggetto varchar,
  _codice_fiscale_soggetto varchar,
  _partita_iva_soggetto varchar,
  _limit integer,
  _page integer
)
RETURNS TABLE (
  uid integer,
  soggetto_code varchar,
  soggetto_desc varchar,
  soggetto_codice_fiscale varchar,
  soggetto_partita_iva varchar,
  soggetto_via_tipo_desc varchar,
  soggetto_toponimo varchar,
  soggetto_comune_desc varchar,
  soggetto_stato_desc varchar,
  soggetto_nota_operazione varchar,
  soggetto_extcarta varchar,
  soggetto_matricola varchar,
  soggetto_mod_pag_code varchar,
  soggetto_mod_pag_desc varchar
) AS
$body$
DECLARE
	_offset INTEGER := (_page) * _limit;
	stringaTest character varying := 'Test';
BEGIN

RETURN QUERY
with sg as(
	with sogg as (
      select
        sog.soggetto_id
        ,sog.soggetto_code
        ,sog.soggetto_desc
        ,sog.codice_fiscale::varchar
        ,sog.partita_iva
        ,tipo.via_tipo_desc -- 26.06.2018 Sofia siac-6193
        ,ind.toponimo -- 26.06.2018 Sofia siac-6193
        ,com.comune_desc -- 26.06.2018 Sofia siac-6193
        ,stato.soggetto_stato_desc -- 26.06.2018 Sofia siac-6193
        ,COALESCE (rs.nota_operazione,' ') nota_operazione -- 26.06.2018 Sofia siac-6193
       from siac_d_ambito  a,siac_T_soggetto  sog,siac_t_indirizzo_soggetto ind,
            siac_t_comune  com,siac_d_via_tipo tipo,siac_r_soggetto_stato rs,siac_d_soggetto_stato stato
       where a.ente_proprietario_id=_ente_proprietario_id
        and  a.ambito_code='AMBITO_FIN'
        and  sog.ambito_id=a.ambito_id
		and  ind.soggetto_id = sog.soggetto_id
        and  com.comune_id = ind.comune_id
        and  tipo.via_tipo_id = ind.via_tipo_id
   	    and  rs.soggetto_id = sog.soggetto_id
		and  stato.soggetto_stato_id = rs.soggetto_stato_id
        and  coalesce(ind.principale,'N')='S' --- indirizzo principale
        and (_codice_soggetto is null or upper(sog.soggetto_code) = upper(_codice_soggetto))
        and (_denominazione_soggetto is null or upper(sog.soggetto_desc) like  '%'||upper(_denominazione_soggetto)||'%')
        and (_codice_fiscale_soggetto is null or _codice_fiscale_soggetto=sog.codice_fiscale)
        and (_partita_iva_soggetto is null or _partita_iva_soggetto=sog.partita_iva)
		and rs.data_cancellazione is null
        and now() between rs.validita_inizio and COALESCE(rs.validita_fine,now())
        and sog.data_cancellazione is null
        and now() between sog.validita_inizio and COALESCE(sog.validita_fine,now())
        and ind.data_cancellazione is null
        and now() between ind.validita_inizio and COALESCE(ind.validita_fine,now())
      ),
      soggattr as (
        select b.*
        from  siac_r_soggetto_attr b,siac_t_attr c
        where c.ente_proprietario_id=_ente_proprietario_id
        and   c.attr_code='Matricola'
        and   b.attr_id=c.attr_id
        and   coalesce(b.testo,'')!=''
        and   b.data_cancellazione is null
        and  now() between b.validita_inizio and COALESCE(b.validita_fine,now())
      ),
      cartaContabile  as -- 26.06.2018 Sofia siac-6193
      (
      	select distinct r.soggetto_id
        from siac_r_cartacont_det_soggetto r
        where r.ente_proprietario_id=_ente_proprietario_id
        and   r.data_cancellazione is null
        and now() between r.validita_inizio and COALESCE(r.validita_fine,now())
      )
    select
         sogg.soggetto_id
        ,sogg.soggetto_code
        ,sogg.soggetto_desc
        ,sogg.codice_fiscale
        ,sogg.partita_iva
        ,sogg.via_tipo_desc
        ,sogg.toponimo
        ,sogg.comune_desc
        ,sogg.soggetto_stato_desc
        ,sogg.nota_operazione
        ,(CASE when cartaContabile.soggetto_id is null then 'N'::varchar ELSE 'S'::varchar END) extcarta
        ,coalesce(soggattr.testo,' ') matricola
    from sogg
    	left outer join  soggattr on sogg.soggetto_id=soggattr.soggetto_id
		left outer join  cartaContabile on sogg.soggetto_id=cartaContabile.soggetto_id
)

select
	sg.*
    ,' '::varchar soggetto_mod_pag_code
    ,' '::varchar soggetto_mod_pag_desc
   	from sg


LIMIT _limit
OFFSET _offset;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100 ROWS 1000;



--SIAC-6193 FINE

--SIAC-6175 INIZIO java
SELECT fnc_dba_add_column_params('siac_t_ordinativo', 'ord_da_trasmettere', 'BOOLEAN NOT NULL DEFAULT TRUE');
--SIAC-6175 FINE java

-- SIAC-6175 SOFIA

-- 20.06.2018 siac-6175
SELECT fnc_dba_add_column_params('siac_dwh_ordinativo_pagamento', 'ord_da_trasmettere', 'BOOLEAN');
SELECT fnc_dba_add_column_params('siac_dwh_ordinativo_incasso', 'ord_da_trasmettere', 'BOOLEAN');

DROP FUNCTION IF EXISTS fnc_mif_ordinativo_spesa_splus (
  enteproprietarioid integer,
  nomeente varchar,
  annobilancio varchar,
  loginoperazione varchar,
  dataelaborazione timestamp,
  mifordritrasmelabid integer,
  out flussoelabmifdistoilid integer,
  out flussoelabmifid integer,
  out numeroordinativitrasm integer,
  out nomefilemif varchar,
  out codicerisultato integer,
  out messaggiorisultato varchar
);

DROP FUNCTION IF EXISTS fnc_mif_ordinativo_spesa_splus
( enteProprietarioId integer,
  nomeEnte VARCHAR,
  annobilancio varchar,
  loginOperazione varchar,
  dataElaborazione timestamp,
  out flussoElabMifDistOilId integer,
  out flussoElabMifId integer,
  out numeroOrdinativiTrasm integer,
  out nomeFileMif varchar,
  out codiceRisultato integer,
  out messaggioRisultato varchar );

CREATE OR REPLACE FUNCTION fnc_mif_ordinativo_spesa_splus (
  enteproprietarioid integer,
  nomeente varchar,
  annobilancio varchar,
  loginoperazione varchar,
  dataelaborazione timestamp,
  mifordritrasmelabid integer,
  out flussoelabmifdistoilid integer,
  out flussoelabmifid integer,
  out numeroordinativitrasm integer,
  out nomefilemif varchar,
  out codicerisultato integer,
  out messaggiorisultato varchar
)
RETURNS record AS
$body$
DECLARE


 strMessaggio VARCHAR(1500):='';
 strMessaggioFinale VARCHAR(1500):='';
 strMessaggioScarto VARCHAR(1500):='';
 strExecSql VARCHAR(1500):='';

 mifOrdinativoIdRec record;

 mifFlussoOrdinativoRec  mif_t_ordinativo_spesa%rowtype;


 mifFlussoElabMifArr flussoElabMifRecType[];


 mifCountRec integer:=1;
 mifCountTmpRec integer:=1;
 mifAFlussoElabTypeRec  flussoElabMifRecType;
 flussoElabMifElabRec  flussoElabMifRecType;
 mifElabRec record;

 attoAmmRec record;
 enteOilRec record;
 enteProprietarioRec record;
 soggettoRec record;
 soggettoSedeRec record;
 soggettoQuietRec record;
 soggettoQuietRifRec record;
 MDPRec record;
 codAccreRec record;
 bilElemRec record;
 indirizzoRec record;
 ordSostRec record;


 tipoPagamRec record;
 ritenutaRec record;
 ricevutaRec record;
 quoteOrdinativoRec record;
 ordRec record;


 isIndirizzoBenef boolean:=false;
 isIndirizzoBenQuiet boolean:=false;

 flussoElabMifValore varchar (1000):=null;
 flussoElabMifValoreDesc varchar (1000):=null;

 ordNumero numeric:=null;
 ordAnno  integer:=null;
 attoAmmTipoSpr varchar(50):=null;
 attoAmmTipoAll varchar(50):=null;
 attoAmmTipoAllAll varchar(50):=null;

 attoAmmStrTipoRag  varchar(50):=null;
 attoAmmTipoAllRag varchar(50):=null;


 tipoMDPCbi varchar(50):=null;
 tipoMDPCsi varchar(50):=null;
 tipoMDPCo  varchar(50):=null;
 tipoMDPCCP varchar(50):=null;
 tipoMDPCB  varchar(50):=null;
 tipoPaeseCB varchar(50):=null;
 avvisoTipoMDPCo varchar(50):=null;
 codiceCge  varchar(50):=null;
 siopeDef   varchar(50):=null;
 codResult   integer:=null;

 indirizzoEnte varchar(500):=null;
 localitaEnte varchar(500):=null;
 soggettoEnteId INTEGER:=null;
 soggettoRifId integer:=null;
 soggettoSedeSecId integer:=null;
 soggettoQuietId integer:=null;
 soggettoQuietRifId integer:=null;
 accreditoGruppoCode varchar(15):=null;




 flussoElabMifLogId  integer :=null;
 flussoElabMifTipoId integer :=null;
 flussoElabMifTipoNomeFile varchar(500):=null;
 flussoElabMifTipoDec BOOLEAN:=false;
 flussoElabMifOilId integer :=null;
 flussoElabMifDistOilRetId integer:=null;
 mifOrdSpesaId integer:=null;

 dataInizioVal timestamp :=annoBilancio||'-01-01';
 dataFineVal timestamp :=annoBilancio||'-12-31';


 ordImporto numeric :=0;


 ordTipoCodeId integer :=null;
 ordStatoCodeIId  integer :=null;
 ordStatoCodeAId  integer :=null;

 classCdrTipoId INTEGER:=null;
 classCdcTipoId INTEGER:=null;
 ordDetTsTipoId integer :=null;

 ordSedeSecRelazTipoId integer:=null;
 ordRelazCodeTipoId integer :=null;
 ordCsiRelazTipoId  integer:=null;

 noteOrdAttrId integer:=null;

 movgestTsTipoSubId integer:=null;


 famTitSpeMacroAggrCodeId integer:=null;
 titoloUscitaCodeTipoId integer :=null;
 programmaCodeTipoId integer :=null;
 programmaCodeTipo varchar(50):=null;
 famMissProgrCode VARCHAR(50):=null;
 famMissProgrCodeId integer:=null;
 programmaId integer :=null;
 titoloUscitaId integer:=null;



 isPaeseSepa integer:=null;
 ordCodiceBollo  varchar(10):=null;
 ordCodiceBolloDesc varchar(500):=null;
 ordDataScadenza timestamp:=null;

 ordCsiRelazTipo varchar(20):=null;
 ordCsiCOTipo varchar(50):=null;


 ambitoFinId integer:=null;
 anagraficaBenefCBI varchar(500):=null;

 isDefAnnoRedisuo  varchar(5):=null;


 -- ritenute
 tipoRelazRitOrd varchar(10):=null;
 tipoRelazSprOrd varchar(10):=null;
 tipoRelazSubOrd varchar(10):=null;
 tipoRitenuta varchar(10):='R';
 progrRitenuta  varchar(10):=null;
 isRitenutaAttivo boolean:=false;
 tipoOnereIrpefId integer:=null;
 tipoOnereInpsId integer:=null;
 tipoOnereIrpef varchar(10):=null;
 tipoOnereInps varchar(10):=null;

 tipoOnereIrpegId integer:=null;
 tipoOnereIrpeg varchar(10):=null;

 codiceUECodeTipo VARCHAR(50):=null;
 codiceUECodeTipoId integer:=null;
 codiceCofogCodeTipo  VARCHAR(50):=null;
 codiceCofogCodeTipoId integer:=null;
 siopeCodeTipo varchar(50):=null;
 siopeCodeTipoId integer :=null;
 eventoTipoCodeId integer:=null;
 collEventoCodeId integer:=null;

 classifTipoCodeFraz    varchar(50):=null;
 classifTipoCodeFrazVal varchar(50):=null;
 classifTipoCodeFrazId   integer:=null;

 tipoClassFruttifero varchar(100):=null;
 valFruttifero varchar(100):=null;
 valFruttiferoStr varchar(100):=null;
 valFruttiferoStrAltro varchar(100):=null;
 tipoClassFruttiferoId integer:=null;
 valFruttiferoId  integer:=null;

 classVincolatoCode   varchar(100):=null;
 classVincolatoCodeId INTEGER:=null;
 valFruttiferoClassCode   varchar(100):=null;
 valFruttiferoClassCodeId INTEGER:=null;
 valFruttiferoClassCodeSI varchar(100):=null;
 valFruttiferoCodeSI varchar(100):=null;
 valFruttiferoClassCodeNO varchar(100):=null;
 valFruttiferoCodeNO varchar(100):=null;

 cigCausAttrId INTEGER:=null;
 cupCausAttrId INTEGER:=null;
 cigCausAttr   varchar(10):=null;
 cupCausAttr   varchar(10):=null;


 codicePaeseIT varchar(50):=null;
 codiceAccreCB varchar(50):=null;
 codiceAccreCO varchar(50):=null;
 codiceAccreREG varchar(50):=null;
 codiceSepa     varchar(50):=null;
 codiceExtraSepa varchar(50):=null;
 codiceGFB  varchar(50):=null;

 sepaCreditTransfer boolean:=false;
 accreditoGruppoSepaTr varchar(10):=null;
 SepaTr varchar(10):=null;
 paeseSepaTr varchar(10):=null;


 numeroDocs varchar(10):=null;
 tipoDocs varchar(50):=null;
 tipoDocsComm varchar(50):=null;
 tipoGruppoDocs varchar(50):=null;

 tipoEsercizio varchar(50):=null;
 statoBeneficiario boolean :=false;
 bavvioFrazAttr boolean :=false;
 dataAvvioFrazAttr timestamp:=null;
 attrfrazionabile VARCHAR(50):=null;

 dataAvvioSiopeNew VARCHAR(50):=null;
 bAvvioSiopeNew   boolean:=false;


 tipoPagamPostA VARCHAR(100):=null;
 tipoPagamPostB VARCHAR(100):=null;

 cupAttrCodeId INTEGER:=null;
 cupAttrCode   varchar(10):=null;
 cigAttrCodeId INTEGER:=null;
 cigAttrCode   varchar(10):=null;
 ricorrenteCodeTipo varchar(50):=null;
 ricorrenteCodeTipoId integer:=null;

 codiceBolloPlusEsente boolean:=false;
 codiceBolloPlusDesc   varchar(100):=null;

 statoDelegatoCredEff boolean :=false;

 comPccAttrId integer:=null;
 pccOperazTipoId integer:=null;


 -- Transazione elementare
 programmaTbr varchar(50):=null;
 codiceFinVTbr varchar(50):=null;
 codiceEconPatTbr varchar(50):=null;
 cofogTbr varchar(50):=null;
 transazioneUeTbr varchar(50):=null;
 siopeTbr varchar(50):=null;
 cupTbr varchar(50):=null;
 ricorrenteTbr varchar(50):=null;
 aslTbr varchar(50):=null;
 progrRegUnitTbr varchar(50):=null;

 codiceFinVTipoTbrId integer:=null;
 cupAttrId integer:=null;
 ricorrenteTipoTbrId integer:=null;
 aslTipoTbrId integer:=null;
 progrRegUnitTipoTbrId integer:=null;

 codiceFinVCodeTbr varchar(50):=null;
 contoEconCodeTbr varchar(50):=null;
 cofogCodeTbr varchar(50):=null;
 codiceUeCodeTbr varchar(50):=null;
 siopeCodeTbr varchar(50):=null;
 cupAttrTbr varchar(50):=null;
 ricorrenteCodeTbr varchar(50):=null;
 aslCodeTbr  varchar(50):=null;
 progrRegUnitCodeTbr varchar(50):=null;



 isGestioneQuoteOK boolean:=false;
 isGestioneFatture boolean:=false;
 isRicevutaAttivo boolean:=false;
 isTransElemAttiva boolean:=false;
 isMDPCo boolean:=false;
 isOrdPiazzatura boolean:=false;

 docAnalogico    varchar(100):=null;
 titoloCorrente   varchar(100):=null;
 descriTitoloCorrente varchar(100):=null;
 titoloCapitale   varchar(100):=null;
 descriTitoloCapitale varchar(100):=null;

 -- 20.02.2018 Sofia jira siac-5849
 defNaturaPag  varchar(100):=null;

 attrCodeDataScad varchar(100):=null;
 titoloCap  varchar(100):=null;

 isOrdCommerciale boolean:=false;
 -- 20.03.2018 Sofia SIAC-5968
 tipoPdcIVA VARCHAR(100):=null;
 codePdcIVA VARCHAR(100):=null;

 NVL_STR               CONSTANT VARCHAR:='';


 ORD_TIPO_CODE_P  CONSTANT  varchar :='P';
 ORD_STATO_CODE_I CONSTANT  varchar :='I';
 ORD_STATO_CODE_A CONSTANT  varchar :='A';
 ORD_RELAZ_CODE_SOS  CONSTANT  varchar :='SOS_ORD';
 ORD_TIPO_A CONSTANT  varchar :='A';

 ORD_RELAZ_SEDE_SEC CONSTANT  varchar :='SEDE_SECONDARIA';
 AMBITO_FIN CONSTANT  varchar :='AMBITO_FIN';

 NOTE_ORD_ATTR CONSTANT  varchar :='NOTE_ORDINATIVO';

 CDC CONSTANT varchar:='CDC';
 CDR CONSTANT varchar:='CDR';


 PROGRAMMA               CONSTANT varchar:='PROGRAMMA';
 TITOLO_SPESA            CONSTANT varchar:='TITOLO_SPESA';
 FAM_TIT_SPE_MACROAGGREG CONSTANT varchar:='Spesa - TitoliMacroaggregati';

 FUNZIONE_CODE_I CONSTANT  varchar :='INSERIMENTO'; -- inserimenti
 FUNZIONE_CODE_S CONSTANT  varchar :='SOSTITUZIONE'; -- sostituzioni senza trasmissione
 FUNZIONE_CODE_N CONSTANT  varchar :='ANNULLO'; -- annullamenti prima di trasmissione

 FUNZIONE_CODE_A CONSTANT  varchar :='ANNULLO'; -- annullamenti dopo trasmissione
 FUNZIONE_CODE_VB CONSTANT  varchar :='VARIAZIONE'; -- spostamenti dopo trasmissione


 ORD_TS_DET_TIPO_A CONSTANT varchar:='A';
 MOVGEST_TS_TIPO_S  CONSTANT varchar:='S';

 SPACE_ASCII CONSTANT integer:=32;
 VT_ASCII CONSTANT integer:=13;
 BS_ASCII CONSTANT integer:=10;

 NUM_SETTE CONSTANT integer:=7;
 NUM_DODICI CONSTANT integer:=12;
 ZERO_PAD CONSTANT  varchar :='0';

 ELAB_MIF_ESITO_IN CONSTANT  varchar :='IN';
 MANDMIF_TIPO  CONSTANT  varchar :='MANDMIF_SPLUS';


 COM_PCC_ATTR  CONSTANT  varchar :='flagComunicaPCC';
 PCC_OPERAZ_CPAG  CONSTANT varchar:='CP';

 SEPARATORE     CONSTANT  varchar :='|';



 FLUSSO_MIF_ELAB_TEST_COD_ABI_BT      CONSTANT integer:=1;  -- codice_ABI_BT
 FLUSSO_MIF_ELAB_TEST_COD_ENTE_IPA    CONSTANT integer:=4;  -- codice_ente
 FLUSSO_MIF_ELAB_TEST_DESC_ENTE       CONSTANT integer:=5;  -- descrizione_ente
 FLUSSO_MIF_ELAB_TEST_COD_ISTAT_ENTE  CONSTANT integer:=6;  -- codice_istat_ente
 FLUSSO_MIF_ELAB_TEST_CODFISC_ENTE    CONSTANT integer:=7;  -- codice_fiscale_ente
 FLUSSO_MIF_ELAB_TEST_CODTRAMITE_ENTE CONSTANT integer:=8;  -- codice_tramite_ente
 FLUSSO_MIF_ELAB_TEST_CODTRAMITE_BT   CONSTANT integer:=9;  -- codice_tramite_bt
 FLUSSO_MIF_ELAB_TEST_COD_ENTE_BT     CONSTANT integer:=10; -- codice_ente_bt
 FLUSSO_MIF_ELAB_TEST_RIFERIMENTO_ENTE CONSTANT integer:=11; -- riferimento_ente
 FLUSSO_MIF_ELAB_TEST_ESERCIZIO       CONSTANT integer:=12; -- riferimento_ente

 FLUSSO_MIF_ELAB_INIZIO_ORD     CONSTANT integer:=13;  -- tipo_operazione

 FLUSSO_MIF_ELAB_FATTURE        CONSTANT integer:=53;  -- fattura_siope_codice_ipa_ente_siope
 FLUSSO_MIF_ELAB_FATT_CODFISC   CONSTANT integer:=58;  -- fattura_siope_codice_fiscale_emittente_siope
 FLUSSO_MIF_ELAB_FATT_DATASCAD_PAG CONSTANT integer:=62; -- data_scadenza_pagam_siope
 FLUSSO_MIF_ELAB_FATT_NATURA_PAG CONSTANT integer:=64; -- natura_spesa_siope
 FLUSSO_MIF_ELAB_NUM_SOSPESO    CONSTANT integer:=122; -- numero_provvisorio
 FLUSSO_MIF_ELAB_RITENUTA       CONSTANT integer:=124; -- importo_ritenuta
 FLUSSO_MIF_ELAB_RITENUTA_PRG   CONSTANT integer:=126; -- progressivo_versante


 REGMOVFIN_STATO_A              CONSTANT varchar:='A';
 SEGNO_ECONOMICO				CONSTANT varchar:='Dare';



BEGIN

	numeroOrdinativiTrasm:=0;
    codiceRisultato:=0;
    messaggioRisultato:='';
	flussoElabMifId:=null;
    nomeFileMif:=null;

    flussoElabMifDistOilId:=null;

	strMessaggioFinale:='Invio ordinativi di spesa SIOPE PLUS.';


    -- enteOilRec
    strMessaggio:='Lettura dati ente OIL  per flusso MIF tipo '||MANDMIF_TIPO||'.';
    select * into strict enteOilRec
    from siac_t_ente_oil ente
    where ente.ente_proprietario_id=enteProprietarioId
    and   ente.data_cancellazione is null
    and   ente.validita_fine is null;

    if enteOilRec is null then
    	raise exception ' Errore in reperimento dati';
    end if;

    if enteOilRec.ente_oil_siope_plus=false then
    	raise exception ' SIOPE PLUS non attivo per l''ente.';
    end if;

    -- inserimento record in tabella mif_t_flusso_elaborato
    strMessaggio:='Inserimento mif_t_flusso_elaborato tipo flusso='||MANDMIF_TIPO||'.';

    insert into mif_t_flusso_elaborato
    (flusso_elab_mif_data ,
     flusso_elab_mif_esito,
     flusso_elab_mif_esito_msg,
     flusso_elab_mif_file_nome,
     flusso_elab_mif_tipo_id,
     flusso_elab_mif_id_flusso_oil, -- da calcolare su tab progressivi
     flusso_elab_mif_codice_flusso_oil, -- da calcolare su tab progressivi
     validita_inizio,
     ente_proprietario_id,
     login_operazione)
     (select dataElaborazione,
             ELAB_MIF_ESITO_IN,
             'Elaborazione in corso per tipo flusso '||MANDMIF_TIPO,
      		 tipo.flusso_elab_mif_nome_file,
     		 tipo.flusso_elab_mif_tipo_id,
     		 null,--flussoElabMifOilId, -- da calcolare su tab progressivi
             null, -- flussoElabMifDistOilId -- da calcolare su tab progressivi
    		 dataElaborazione,
     		 enteProprietarioId,
      		 loginOperazione
      from mif_d_flusso_elaborato_tipo tipo
      where tipo.ente_proprietario_id=enteProprietarioId
      and   tipo.flusso_elab_mif_tipo_code=MANDMIF_TIPO
      and   tipo.data_cancellazione is null
      and   tipo.validita_fine is null
     )
     returning flusso_elab_mif_id into flussoElabMifLogId;-- valore da restituire

      raise notice 'flussoElabMifLogId %',flussoElabMifLogId;

     if flussoElabMifLogId is null then
       RAISE EXCEPTION ' Errore generico in inserimento %.',MANDMIF_TIPO;
     end if;

    strMessaggio:='Verifica esistenza elaborazioni in corso per tipo flusso '||MANDMIF_TIPO||'.';
	codResult:=null;
    select distinct 1 into codResult
    from mif_t_flusso_elaborato elab,  mif_d_flusso_elaborato_tipo tipo
    where  elab.flusso_elab_mif_id!=flussoElabMifLogId
    and    elab.flusso_elab_mif_esito=ELAB_MIF_ESITO_IN
    and    elab.data_cancellazione is null
    and    elab.validita_fine is null
    and    tipo.flusso_elab_mif_tipo_id=elab.flusso_elab_mif_tipo_id
    and    tipo.flusso_elab_mif_tipo_code=MANDMIF_TIPO
    and    tipo.ente_proprietario_id=enteProprietarioId
    and    tipo.data_cancellazione is null
    and    tipo.validita_fine is null;

    if codResult is not null then
    	RAISE EXCEPTION ' Verificare situazioni esistenti.';
    end if;

    -- verifico se la tabella degli id contiene dati in tal caso elaborazioni precedenti sono andate male
    strMessaggio:='Verifica esistenza dati in tabella temporanea id [mif_t_ordinativo_spesa_id].';
    codResult:=null;
    select distinct 1 into codResult
    from mif_t_ordinativo_spesa_id mif
    where mif.ente_proprietario_id=enteProprietarioId;

    if codResult is not null then
      RAISE EXCEPTION ' Dati presenti verificarne il contenuto ed effettuare pulizia prima di rieseguire.';
    end if;



    codResult:=null;
    -- recupero indentificativi tipi codice vari
	begin

        -- ordTipoCodeId
        strMessaggio:='Lettura ordinativo tipo Code Id '||ORD_TIPO_CODE_P||'.';
        select ord_tipo.ord_tipo_id into strict ordTipoCodeId
        from siac_d_ordinativo_tipo ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.ord_tipo_code=ORD_TIPO_CODE_P
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
   		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));

		-- ordStatoCodeIId
        strMessaggio:='Lettura ordinativo stato Code Id '||ORD_STATO_CODE_I||'.';
        select ord_tipo.ord_stato_id into strict ordStatoCodeIId
        from siac_d_ordinativo_stato ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.ord_stato_code=ORD_STATO_CODE_I
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));


        -- ordStatoCodeAId
        strMessaggio:='Lettura ordinativo stato Code Id '||ORD_STATO_CODE_A||'.';
        select ord_tipo.ord_stato_id into strict ordStatoCodeAId
        from siac_d_ordinativo_stato ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.ord_stato_code=ORD_STATO_CODE_A
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));


		-- classCdrTipoId
        strMessaggio:='Lettura classif Id per tipo sac='||CDR||'.';
        select tipo.classif_tipo_id into strict classCdrTipoId
        from siac_d_class_tipo tipo
        where tipo.ente_proprietario_id=enteProprietarioId
        and   tipo.classif_tipo_code=CDR
        and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));

        -- classCdcTipoId
        strMessaggio:='Lettura classif Id per tipo sac='||CDC||'.';
        select tipo.classif_tipo_id into strict classCdrTipoId
        from siac_d_class_tipo tipo
        where tipo.ente_proprietario_id=enteProprietarioId
        and   tipo.classif_tipo_code=CDC
        and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));


		-- ordDetTsTipoId
        strMessaggio:='Lettura tipo importo ordinativo  Code Id '||ORD_TS_DET_TIPO_A||'.';
        select ord_tipo.ord_ts_det_tipo_id into strict ordDetTsTipoId
        from siac_d_ordinativo_ts_det_tipo ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.ord_ts_det_tipo_code=ORD_TS_DET_TIPO_A
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));


        -- ordSedeSecRelazTipoId
        strMessaggio:='Lettura relazione sede secondaria  Code Id '||ORD_RELAZ_SEDE_SEC||'.';
        select ord_tipo.relaz_tipo_id into strict ordSedeSecRelazTipoId
        from siac_d_relaz_tipo ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.relaz_tipo_code=ORD_RELAZ_SEDE_SEC
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));


		-- ordRelazCodeTipoId
        strMessaggio:='Lettura relazione   Code Id '||ORD_RELAZ_CODE_SOS||'.';
		select ord_tipo.relaz_tipo_id into strict ordRelazCodeTipoId
    	from siac_d_relaz_tipo ord_tipo
		where ord_tipo.ente_proprietario_id=enteProprietarioId
		and   ord_tipo.relaz_tipo_code=ORD_RELAZ_CODE_SOS
		and   ord_tipo.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));


        -- movgestTsTipoSubId
        strMessaggio:='Lettura movgest_ts_tipo  '||MOVGEST_TS_TIPO_S||'.';
		select ord_tipo.movgest_ts_tipo_id into strict movgestTsTipoSubId
    	from siac_d_movgest_ts_tipo ord_tipo
		where ord_tipo.ente_proprietario_id=enteProprietarioId
		and   ord_tipo.movgest_ts_tipo_code=MOVGEST_TS_TIPO_S
		and   ord_tipo.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));


    	-- programmaCodeTipoId
        strMessaggio:='Lettura programma_code_tipo_id  '||PROGRAMMA||'.';
		select tipo.classif_tipo_id into strict programmaCodeTipoId
    	from siac_d_class_tipo tipo
		where tipo.ente_proprietario_id=enteProprietarioId
		and   tipo.classif_tipo_code=PROGRAMMA
		and   tipo.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',validita_inizio)
		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(validita_fine,dataElaborazione));

		-- famTitSpeMacroAggrCodeId
		-- FAM_TIT_SPE_MACROAGGREG='Spesa - TitoliMacroaggregati'
        strMessaggio:='Lettura fam_tit_spe_macroggregati_code_tipo_id  '||FAM_TIT_SPE_MACROAGGREG||'.';
		select fam.classif_fam_tree_id into strict famTitSpeMacroAggrCodeId
        from siac_t_class_fam_tree fam
        where fam.ente_proprietario_id=enteProprietarioId
        and   fam.class_fam_code=FAM_TIT_SPE_MACROAGGREG
        and   fam.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',fam.validita_inizio)
		and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(fam.validita_fine,dataElaborazione));


    	-- titoloUscitaCodeTipoId
        strMessaggio:='Lettura titolo_spesa_code_tipo_id  '||TITOLO_SPESA||'.';
		select tipo.classif_tipo_id into strict titoloUscitaCodeTipoId
    	from siac_d_class_tipo tipo
		where tipo.ente_proprietario_id=enteProprietarioId
		and   tipo.classif_tipo_code=TITOLO_SPESA
		and   tipo.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',validita_inizio)
		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(validita_fine,dataElaborazione));

		-- noteOrdAttrId
        strMessaggio:='Lettura noteOrdAttrId per attributo='||NOTE_ORD_ATTR||'.';
		select attr.attr_id into strict  noteOrdAttrId
        from siac_t_attr attr
        where attr.ente_proprietario_id=enteProprietarioId
        and   attr.attr_code=NOTE_ORD_ATTR
        and   attr.data_cancellazione is null
        and   date_trunc('day',dataElaborazione)>=date_trunc('day',attr.validita_inizio)
 	 	and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(attr.validita_fine,dataElaborazione));


        -- ambitoFinId
        strMessaggio:='Lettura ambito  Code Id '||AMBITO_FIN||'.';
        select a.ambito_id into strict ambitoFinId
        from siac_d_ambito a
        where a.ente_proprietario_id=enteProprietarioId
   		and   a.ambito_code=AMBITO_FIN
        and   a.data_cancellazione is null
        and   a.validita_fine is null;

        -- flussoElabMifTipoId
        strMessaggio:='Lettura tipo flusso MIF  Code Id '||MANDMIF_TIPO||'.';
        select tipo.flusso_elab_mif_tipo_id, tipo.flusso_elab_mif_nome_file, tipo.flusso_elab_mif_tipo_dec
               into strict flussoElabMifTipoId,flussoElabMifTipoNomeFile, flussoElabMifTipoDec
        from mif_d_flusso_elaborato_tipo tipo
        where tipo.ente_proprietario_id=enteProprietarioId
   		and   tipo.flusso_elab_mif_tipo_code=MANDMIF_TIPO
        and   tipo.data_cancellazione is null
        and   tipo.validita_fine is null;

        -- raise notice 'flussoElabMifTipoId %',flussoElabMifTipoId;
        -- mifFlussoElabTypeRec


        strMessaggio:='Lettura flusso struttura MIF  per tipo '||MANDMIF_TIPO||'.';
        for mifElabRec IN
        (select m.*
         from mif_d_flusso_elaborato m
         where m.flusso_elab_mif_tipo_id=flussoElabMifTipoId
         and   m.flusso_elab_mif_elab=true
         order by m.flusso_elab_mif_ordine_elab
        )
        loop
        	mifAFlussoElabTypeRec.flussoElabMifId :=mifElabRec.flusso_elab_mif_id;
            mifAFlussoElabTypeRec.flussoElabMifAttivo :=mifElabRec.flusso_elab_mif_attivo;
            mifAFlussoElabTypeRec.flussoElabMifDef :=mifElabRec.flusso_elab_mif_default;
            mifAFlussoElabTypeRec.flussoElabMifElab :=mifElabRec.flusso_elab_mif_elab;
            mifAFlussoElabTypeRec.flussoElabMifParam :=mifElabRec.flusso_elab_mif_param;

            mifAFlussoElabTypeRec.flusso_elab_mif_ordine_elab :=mifElabRec.flusso_elab_mif_ordine_elab;
            mifAFlussoElabTypeRec.flusso_elab_mif_ordine :=mifElabRec.flusso_elab_mif_ordine;
            mifAFlussoElabTypeRec.flusso_elab_mif_code :=mifElabRec.flusso_elab_mif_code;
            mifAFlussoElabTypeRec.flusso_elab_mif_campo :=mifElabRec.flusso_elab_mif_campo;

            mifFlussoElabMifArr[mifElabRec.flusso_elab_mif_ordine_elab]:=mifAFlussoElabTypeRec;

        end loop;



		-- Gestione registroPcc per enti che non gestiscono quitanze
        -- Nota : capire se necessario gestire PCC
		/*if enteOilRec.ente_oil_quiet_ord=false then

  			-- comPccAttrId
	        strMessaggio:='Lettura comPccAttrId per attributo='||COM_PCC_ATTR||'.';
			select attr.attr_id into strict  comPccAttrId
	        from siac_t_attr attr
	        where attr.ente_proprietario_id=enteProprietarioId
	        and   attr.attr_code=COM_PCC_ATTR
	        and   attr.data_cancellazione is null
	        and   date_trunc('day',dataElaborazione)>=date_trunc('day',attr.validita_inizio)
   	 	    and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(attr.validita_fine,dataElaborazione));

            strMessaggio:='Lettura Id tipo operazine PCC='||PCC_OPERAZ_CPAG||'.';
			select pcc.pccop_tipo_id into strict pccOperazTipoId
		    from siac_d_pcc_operazione_tipo pcc
		    where pcc.ente_proprietario_id=enteProprietarioId
		    and   pcc.pccop_tipo_code=PCC_OPERAZ_CPAG;


        end if;*/

        -- enteProprietarioRec
        strMessaggio:='Lettura dati ente proprietario per flusso MIF tipo '||MANDMIF_TIPO||'.';
        select * into strict enteProprietarioRec
        from siac_t_ente_proprietario ente
        where ente.ente_proprietario_id=enteProprietarioId
	    and   ente.data_cancellazione is null
        and   ente.validita_fine is null;

        -- soggettoEnteId
        strMessaggio:='Lettura indirizzo ente proprietario [siac_r_soggetto_ente_proprietario] per flusso MIF tipo '||MANDMIF_TIPO||'.';
        select ente.soggetto_id into soggettoEnteId
        from siac_r_soggetto_ente_proprietario ente
        where ente.ente_proprietario_id=enteProprietarioId
        and   ente.data_cancellazione is null
        and   ente.validita_fine is null;

        if soggettoEnteId is not null then
            strMessaggio:='Lettura indirizzo ente proprietario [siac_t_indirizzo_soggetto] per flusso MIF tipo '||MANDMIF_TIPO||'.';

        	select viaTipo.via_tipo_code||' '||indir.toponimo||' '||indir.numero_civico,
        		   com.comune_desc
                   into indirizzoEnte,localitaEnte
            from siac_t_indirizzo_soggetto indir,
                 siac_t_comune com,
                 siac_d_via_tipo viaTipo
            where indir.soggetto_id=soggettoEnteId
            and   indir.principale='S'
            and   indir.data_cancellazione is null
            and   indir.validita_fine is null
            and   com.comune_id=indir.comune_id
            and   com.data_cancellazione is null
            and   com.validita_fine is null
            and   viaTipo.via_tipo_id=indir.via_tipo_id
            and   viaTipo.data_cancellazione is null
	   		and   date_trunc('day',dataElaborazione)>=date_trunc('day',viaTipo.validita_inizio)
 			and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(viaTipo.validita_fine,dataElaborazione))
            order by indir.indirizzo_id;
        end if;

        -- Calcolo progressivo "distinta" per flusso MANDMIF
	    -- calcolo su progressivi di flussoElabMifDistOilId flussoOIL univoco per tipo flusso
        strMessaggio:='Lettura progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_'||MANDMIF_TIPO||'_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
        codResult:=null;
        select prog.prog_value into flussoElabMifDistOilRetId -- 25.05.2016 Sofia - JIRA-3619
        from siac_t_progressivo prog
        where prog.ente_proprietario_id=enteProprietarioId
        and   prog.prog_key='oil_'||MANDMIF_TIPO||'_'||annoBilancio
        and   prog.ambito_id=ambitoFinId
        and   prog.data_cancellazione is null
        and   prog.validita_fine is null;

        if flussoElabMifDistOilRetId is null then -- 25.05.2016 Sofia - JIRA-3619
			strMessaggio:='Inserimento progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_out_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
        	insert into siac_t_progressivo
            (prog_key,
             prog_value,
			 ambito_id,
		     validita_inizio,
			 ente_proprietario_id,
			 login_operazione
            )
            values
            ('oil_'||MANDMIF_TIPO||'_'||annoBilancio,1,ambitoFinId,now(),enteProprietarioId,loginOperazione)
            returning prog_id into codResult;

            if codResult is null then
            	RAISE EXCEPTION ' Progressivo non inserito.';
            else
            	flussoElabMifDistOilRetId:=0;
            end if;
        end if;

        if flussoElabMifDistOilRetId is not null then
	        flussoElabMifDistOilRetId:=flussoElabMifDistOilRetId+1;
        end if;

	    -- calcolo su progressivo di flussoElabMifOilId flussoOIL univoco
        strMessaggio:='Lettura progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_out_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
        codResult:=null;
        select prog.prog_value into flussoElabMifOilId
        from siac_t_progressivo prog
        where prog.ente_proprietario_id=enteProprietarioId
        and   prog.prog_key='oil_out_'||annoBilancio
        and   prog.ambito_id=ambitoFinId
        and   prog.data_cancellazione is null
        and   prog.validita_fine is null;

        if flussoElabMifOilId is null then
			strMessaggio:='Inserimento progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_out_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
        	insert into siac_t_progressivo
            (prog_key,
             prog_value,
			 ambito_id,
		     validita_inizio,
			 ente_proprietario_id,
			 login_operazione
            )
            values
            ('oil_out_'||annoBilancio,1,ambitoFinId,now(),enteProprietarioId,loginOperazione)
            returning prog_id into codResult;

            if codResult is null then
            	RAISE EXCEPTION ' Progressivo non inserito.';
            else
            	flussoElabMifOilId:=0;
            end if;
        end if;

        if flussoElabMifOilId is not null then
	        flussoElabMifOilId:=flussoElabMifOilId+1;
        end if;

        exception
		when no_data_found then
			RAISE EXCEPTION ' Non presente in archivio';
        when TOO_MANY_ROWS THEN
            RAISE EXCEPTION ' Diverse righe presenti in archivio.';
		when others  THEN
			RAISE EXCEPTION ' %-%.',SQLSTATE,substring(upper(SQLERRM) from 1 for 500);
    end;




    --- popolamento mif_t_ordinativo_spesa_id


    -- ordinativi emessi o emessi/spostati non ancora mai trasmessi codice_funzione='I' -- INSERIMENTO
    strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_spesa_id].Codice funzione='||FUNZIONE_CODE_I||'.';

    insert into mif_t_ordinativo_spesa_id
    (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil,
     mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
     mif_ord_soggetto_id, mif_ord_modpag_id,
     mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
     mif_ord_liq_id, mif_ord_atto_amm_id, mif_ord_contotes_id,mif_ord_dist_id,
     mif_ord_codbollo_id,mif_ord_comm_tipo_id,mif_ord_notetes_id,mif_ord_desc,
     mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
     mif_ord_siope_tipo_debito_id,mif_ord_siope_assenza_motivazione_id,
     mif_ord_login_creazione,mif_ord_login_modifica,
     ente_proprietario_id, login_operazione)
    (
     with
     ritrasm as
     (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	  from mif_t_ordinativo_ritrasmesso r
	  where mifOrdRitrasmElabId is not null
	  and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	  and   r.ente_proprietario_id=enteProprietarioId
	  and   r.data_cancellazione is null),
     ordinativi as
     (
      select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_I mif_ord_codice_funzione,
             bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
             ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
             extract('year' from ord.ord_emissione_data)||'-'||
             lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
             lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione , 0 mif_ord_ord_anno_movg,
             0 mif_ord_soggetto_id,0 mif_ord_modpag_id,0 mif_ord_subord_id, elem.elem_id mif_ord_elem_id,
             0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_liq_id,0 mif_ord_atto_amm_id,
             ord.contotes_id mif_ord_contotes_id,ord.dist_id mif_ord_dist_id,ord.codbollo_id mif_ord_codbollo_id,
             ord.comm_tipo_id mif_ord_comm_tipo_id,ord.notetes_id mif_ord_notetes_id, ord.ord_desc mif_ord_desc,
             ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
             ord.siope_tipo_debito_id,ord.siope_assenza_motivazione_id,
             ord.login_creazione mif_ord_login_creazione,ord.login_modifica mif_ord_login_modifica,
             enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
      from siac_t_ordinativo ord,siac_r_ordinativo_stato ord_stato,siac_t_bil bil, siac_t_periodo per,siac_r_ordinativo_bil_elem elem
      where  bil.ente_proprietario_id=enteProprietarioId
        and  per.periodo_id=bil.periodo_id
        and  per.anno::integer <=annoBilancio::integer
        and  ord.bil_id=bil.bil_id
        and  ord.ord_tipo_id=ordTipoCodeId
        and  ord_stato.ord_id=ord.ord_id
        and  ord_stato.data_cancellazione is null
	    and  date_trunc('day',dataElaborazione)>=date_trunc('day',ord_stato.validita_inizio)
  	    and  ord_stato.validita_fine is null
        and  ord_stato.ord_stato_id=ordStatoCodeIId
        and  ord.ord_trasm_oil_data is null
        and  ord.ord_emissione_data<=dataElaborazione
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175		
        and  ord.ord_da_trasmettere=true -- 19.06.2017 Sofia siac-6175
        and  elem.ord_id=ord.ord_id
        and  elem.data_cancellazione is null
        and  not exists (select 1 from siac_r_ordinativo rord
                          where rord.ord_id_a=ord.ord_id
                          and   rord.data_cancellazione is null
                          and   rord.validita_fine is null
			              and   rord.relaz_tipo_id=ordRelazCodeTipoId)
       )
       select  o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
		       o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
     		   o.mif_ord_soggetto_id, o.mif_ord_modpag_id,
               o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_liq_id, o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_dist_id,
               o.mif_ord_codbollo_id,o.mif_ord_comm_tipo_id,o.mif_ord_notetes_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.siope_tipo_debito_id,o.siope_assenza_motivazione_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id , o.login_operazione
       from ordinativi o
	   where mifOrdRitrasmElabId is null
		  or (mifOrdRitrasmElabId is not null and exists
             (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
       );


      -- ordinativi emessi o emessi/spostati non ancora mai trasmessi, sostituzione di altro ordinativo codice_funzione='S' -- 'SOSPENSIONE'
      strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_spesa_id].Codice funzione='||FUNZIONE_CODE_S||'.';

      insert into mif_t_ordinativo_spesa_id
	  (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil,
       mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
 	   mif_ord_soggetto_id, mif_ord_modpag_id,
 	   mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
 	   mif_ord_liq_id, mif_ord_atto_amm_id, mif_ord_contotes_id, mif_ord_dist_id,
       mif_ord_codbollo_id,mif_ord_comm_tipo_id,mif_ord_notetes_id,mif_ord_desc,
       mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
       mif_ord_siope_tipo_debito_id,mif_ord_siope_assenza_motivazione_id,
       mif_ord_login_creazione,mif_ord_login_modifica,
       ente_proprietario_id, login_operazione)
	  (
       with
       ritrasm as
       (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	    from mif_t_ordinativo_ritrasmesso r
	    where mifOrdRitrasmElabId is not null
	    and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	    and   r.ente_proprietario_id=enteProprietarioId
	    and   r.data_cancellazione is null),
       ordinativi as
       (select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_S mif_ord_codice_funzione,
               bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
               ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
               extract('year' from ord.ord_emissione_data)||'-'||
               lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
               lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione,
               0 mif_ord_ord_anno_movg,
               0 mif_ord_soggetto_id ,0 mif_ord_modpag_id,0 mif_ord_subord_id,
               elem.elem_id mif_ord_elem_id,
               0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_liq_id,0 mif_ord_atto_amm_id,
               ord.contotes_id mif_ord_contotes_id,ord.dist_id mif_ord_dist_id,ord.codbollo_id mif_ord_codbollo_id,
               ord.comm_tipo_id mif_ord_comm_tipo_id,ord.notetes_id mif_ord_notetes_id,
               ord.ord_desc mif_ord_desc,
               ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
               ord.siope_tipo_debito_id,ord.siope_assenza_motivazione_id,
               ord.login_creazione mif_ord_login_creazione, ord.login_modifica mif_ord_login_modifica,
               enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
  	    from siac_t_ordinativo ord,siac_r_ordinativo_stato ord_stato,
             siac_t_bil bil, siac_t_periodo per,
             siac_r_ordinativo_bil_elem elem,siac_r_ordinativo rord
  	    where  bil.ente_proprietario_id=enteProprietarioId
   		  and  per.periodo_id=bil.periodo_id
    	  and  per.anno::integer <=annoBilancio::integer
      	  and  ord.bil_id=bil.bil_id
     	  and  ord.ord_tipo_id=ordTipoCodeId
    	  and  ord_stato.ord_id=ord.ord_id
    	  and  ord_stato.data_cancellazione is null
	   	  and  date_trunc('day',dataElaborazione)>=date_trunc('day',ord_stato.validita_inizio)
  	      and  ord_stato.validita_fine is null
    	  and  ord_stato.ord_stato_id=ordStatoCodeIId
	      and  ord.ord_trasm_oil_data is null
    	  and  ord.ord_emissione_data<=dataElaborazione
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175		
          and  ord.ord_da_trasmettere=true -- 19.06.2017 Sofia siac-6175
    	  and  elem.ord_id=ord.ord_id
    	  and  elem.data_cancellazione is null
          and  elem.validita_fine is null
          and  rord.ord_id_a=ord.ord_id
          and  rord.relaz_tipo_id=ordRelazCodeTipoId
          and  rord.data_cancellazione is null
          and  rord.validita_fine is null
        )
        select  o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
		       o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
     		   o.mif_ord_soggetto_id, o.mif_ord_modpag_id,
               o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_liq_id, o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_dist_id,
               o.mif_ord_codbollo_id,o.mif_ord_comm_tipo_id,o.mif_ord_notetes_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.siope_tipo_debito_id,o.siope_assenza_motivazione_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id, o.login_operazione
        from ordinativi o
	    where mifOrdRitrasmElabId is null
		   or (mifOrdRitrasmElabId is not null and exists
              (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
      );

      -- ordinativi emessi e annullati mai trasmessi codice_funzione='N' -- ANNULLO
      strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_spesa_id].Codice funzione='||FUNZIONE_CODE_N||'.';

	  insert into mif_t_ordinativo_spesa_id
	  (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil,
       mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
	   mif_ord_soggetto_id, mif_ord_modpag_id,
	   mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
 	   mif_ord_liq_id, mif_ord_atto_amm_id, mif_ord_contotes_id,mif_ord_dist_id,
       mif_ord_codbollo_id,mif_ord_comm_tipo_id,mif_ord_notetes_id,mif_ord_desc,
       mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
       mif_ord_siope_tipo_debito_id,mif_ord_siope_assenza_motivazione_id,
       mif_ord_login_creazione,mif_ord_login_modifica,
       ente_proprietario_id, login_operazione)
	  (
       with
       ritrasm as
       (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	    from mif_t_ordinativo_ritrasmesso r
	    where mifOrdRitrasmElabId is not null
	    and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	    and   r.ente_proprietario_id=enteProprietarioId
	    and   r.data_cancellazione is null),
       ordinativi as
       (select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_N mif_ord_codice_funzione,
               bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
      	 	   ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
               extract('year' from ord.ord_emissione_data)||'-'||
               lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
               lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione,
               0 mif_ord_ord_anno_movg,
               0 mif_ord_soggetto_id,0 mif_ord_modpag_id,0 mif_ord_subord_id,
               elem.elem_id mif_ord_elem_id,
               0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_liq_id,0 mif_ord_atto_amm_id,
               ord.contotes_id mif_ord_contotes_id,ord.dist_id mif_ord_dist_id,
               ord.codbollo_id mif_ord_codbollo_id,ord.comm_tipo_id mif_ord_comm_tipo_id,
               ord.notetes_id mif_ord_notetes_id,ord.ord_desc mif_ord_desc,
               ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
               ord.siope_tipo_debito_id,ord.siope_assenza_motivazione_id,
               ord.login_creazione mif_ord_login_creazione,ord.login_modifica mif_ord_login_modifica,
               enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
  	    from siac_t_ordinativo ord, siac_r_ordinativo_stato ord_stato,
             siac_t_bil bil, siac_t_periodo per,
             siac_r_ordinativo_bil_elem elem
        where  bil.ente_proprietario_id=enteProprietarioId
         and  per.periodo_id=bil.periodo_id
         and  per.anno::integer <=annoBilancio::integer
         and  ord.bil_id=bil.bil_id
         and  ord.ord_tipo_id=ordTipoCodeId
         and  ord_stato.ord_id=ord.ord_id
         and  ord_stato.validita_inizio<=dataElaborazione -- questa e'' la data di annullamento
         and  ord.ord_emissione_data<=dataElaborazione
         and  ord_stato.data_cancellazione is null
         and  date_trunc('day',dataElaborazione)>=date_trunc('day',ord_stato.validita_inizio)
  	     and  ord_stato.validita_fine is null
         and  ord_stato.ord_stato_id=ordStatoCodeAId
         and  ord.ord_trasm_oil_data is null
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175		
         and  ord.ord_da_trasmettere=true -- 19.06.2017 Sofia siac-6175
         and  elem.ord_id=ord.ord_id
         and  elem.data_cancellazione is null
         and  elem.validita_fine is null
       ),
       -- 23.03.2018 Sofia SIAC-5969
       ordSos as
       (
          select rord.ord_id_da, rord.ord_id_a
          from siac_r_ordinativo rOrd
          where rOrd.ente_proprietario_id=enteProprietarioId
          and   rOrd.relaz_tipo_id=ordRelazCodeTipoId
          and   rOrd.data_cancellazione is null
          and   rOrd.validita_fine is null
       ),
       -- 16.04.2018 Sofia siac-6067
       enteOil as
       (
       select false esclAnnull
       from siac_t_ente_oil oil
       where oil.ente_proprietario_id=enteProprietarioId
       and   oil.ente_oil_invio_escl_annulli=false
       )
       select  o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
		       o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
     		   o.mif_ord_soggetto_id, o.mif_ord_modpag_id,
               o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_liq_id, o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_dist_id,
               o.mif_ord_codbollo_id,o.mif_ord_comm_tipo_id,o.mif_ord_notetes_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.siope_tipo_debito_id,o.siope_assenza_motivazione_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id , o.login_operazione
       from ordinativi o, enteOil  -- 16.04.2018 Sofia siac-6067
/*	   where mifOrdRitrasmElabId is null
		  or (mifOrdRitrasmElabId is not null and exists
             (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))*/
	   where
        -- 23.03.2018 Sofia SIAC-5969
        ( mifOrdRitrasmElabId is null
		  or (mifOrdRitrasmElabId is not null and exists
             (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
        )
        and  enteOil.esclAnnull=false -- 16.04.2018 Sofia siac-6067
        -- 23.03.2018 Sofia SIAC-5969 : devono essere escludi ordinativi
        -- sostituiti e sostituti
        and
        not exists
        (select 1 from ordSos where ordSos.ord_id_da=o.mif_ord_ord_id)
        and
        not exists
        (select 1 from ordSos where ordSos.ord_id_a=o.mif_ord_ord_id)
	   );

      -- ordinativi emessi tramessi e poi annullati, anche dopo spostamento  codice_funzione='A' -- ANNULLO
      strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_spesa_id].Codice funzione='||FUNZIONE_CODE_A||'.';

      insert into mif_t_ordinativo_spesa_id
      (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil,
       mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
       mif_ord_soggetto_id, mif_ord_modpag_id,
       mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
       mif_ord_liq_id, mif_ord_atto_amm_id,mif_ord_contotes_id,mif_ord_dist_id,
       mif_ord_codbollo_id,mif_ord_comm_tipo_id,mif_ord_notetes_id,mif_ord_desc,
       mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
       mif_ord_siope_tipo_debito_id,mif_ord_siope_assenza_motivazione_id,
       mif_ord_login_creazione,mif_ord_login_modifica,
       ente_proprietario_id, login_operazione)
      (
       with
       ritrasm as
       (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	    from mif_t_ordinativo_ritrasmesso r
	    where mifOrdRitrasmElabId is not null
	    and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	    and   r.ente_proprietario_id=enteProprietarioId
	    and   r.data_cancellazione is null),
       ordinativi as
       (select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_A mif_ord_codice_funzione,
               bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
               ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
               extract('year' from ord.ord_emissione_data)||'-'||
               lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
               lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione,
               0 mif_ord_ord_anno_movg,
               0 mif_ord_soggetto_id,0 mif_ord_modpag_id,0 mif_ord_subord_id,
               elem.elem_id mif_ord_elem_id,
               0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_liq_id,0 mif_ord_atto_amm_id,
               ord.contotes_id mif_ord_contotes_id,ord.dist_id mif_ord_dist_id,ord.codbollo_id mif_ord_codbollo_id,
               ord.comm_tipo_id mif_ord_comm_tipo_id,
               ord.notetes_id mif_ord_notetes_id,ord.ord_desc mif_ord_desc,
               ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
               ord.siope_tipo_debito_id,ord.siope_assenza_motivazione_id,
               ord.login_creazione mif_ord_login_creazione,ord.login_modifica mif_ord_login_modifica,
               enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
        from siac_t_ordinativo ord,siac_r_ordinativo_stato ord_stato,
             siac_t_bil bil, siac_t_periodo per,
             siac_r_ordinativo_bil_elem elem
        where  bil.ente_proprietario_id=enteProprietarioId
          and  per.periodo_id=bil.periodo_id
          and  per.anno::integer <=annoBilancio::integer
          and  ord.bil_id=bil.bil_id
          and  ord.ord_tipo_id=ordTipoCodeId
   		  and  ord_stato.ord_id=ord.ord_id
  		  and  ord.ord_emissione_data<=dataElaborazione
          and  ord_stato.validita_inizio<=dataElaborazione  -- questa e'' la data di annullamento
  		  and  ord.ord_trasm_oil_data is not null
 		  and  ord.ord_trasm_oil_data<ord_stato.validita_inizio
          and  ord_stato.data_cancellazione is null
          and  date_trunc('day',dataElaborazione)>=date_trunc('day',ord_stato.validita_inizio)
  	      and  ord_stato.validita_fine is null
          and  ord_stato.ord_stato_id=ordStatoCodeAId
          and  ( ord.ord_spostamento_data is null or ord.ord_spostamento_data<ord_stato.validita_inizio)
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175		
          and  ord.ord_da_trasmettere=true -- 19.06.2017 Sofia siac-6175
          and  elem.ord_id=ord.ord_id
          and  elem.data_cancellazione is null
          and  elem.validita_fine is null
        ),
        -- 23.03.2018 Sofia SIAC-5969
        ordSos as
        (
          select rord.ord_id_da, rord.ord_id_a
          from siac_r_ordinativo rOrd
          where rOrd.ente_proprietario_id=enteProprietarioId
          and   rOrd.relaz_tipo_id=ordRelazCodeTipoId
          and   rOrd.data_cancellazione is null
          and   rOrd.validita_fine is null
        )
        select o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
		       o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
     		   o.mif_ord_soggetto_id, o.mif_ord_modpag_id,
               o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_liq_id, o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_dist_id,
               o.mif_ord_codbollo_id,o.mif_ord_comm_tipo_id,o.mif_ord_notetes_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.siope_tipo_debito_id,o.siope_assenza_motivazione_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id , o.login_operazione
        from ordinativi o
        -- 23.03.2018 Sofia SIAC-5969
/*	    where mifOrdRitrasmElabId is null
		  or (mifOrdRitrasmElabId is not null and exists
             (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))*/
	    where
        ( mifOrdRitrasmElabId is null
		  or (mifOrdRitrasmElabId is not null and exists
             (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
        )
        -- 23.03.2018 Sofia SIAC-5969 : devono essere escludi ordinativi
        -- sostituiti e sostituti
        and
        not exists
        (select 1 from ordSos where ordSos.ord_id_da=o.mif_ord_ord_id)
        and
        not exists
        (select 1 from ordSos where ordSos.ord_id_a=o.mif_ord_ord_id)
       );

      -- ordinativi emessi , trasmessi  e poi spostati codice_funzione='VB' ( mai annullati ) _--- VARIAZIONE
      strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_spesa_id].Codice funzione='||FUNZIONE_CODE_VB||'.';

      insert into mif_t_ordinativo_spesa_id
      (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil,
       mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
       mif_ord_soggetto_id, mif_ord_modpag_id,
       mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
       mif_ord_liq_id, mif_ord_atto_amm_id, mif_ord_contotes_id,mif_ord_dist_id,
       mif_ord_codbollo_id,mif_ord_comm_tipo_id,mif_ord_notetes_id,mif_ord_desc,
       mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
       mif_ord_siope_tipo_debito_id,mif_ord_siope_assenza_motivazione_id,
       mif_ord_login_creazione,mif_ord_login_modifica,
       ente_proprietario_id, login_operazione)
      (
       with
       ritrasm as
       (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	    from mif_t_ordinativo_ritrasmesso r
	    where mifOrdRitrasmElabId is not null
	    and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	    and   r.ente_proprietario_id=enteProprietarioId
	    and   r.data_cancellazione is null),
       ordinativi as
       (select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_VB mif_ord_codice_funzione,
               bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
               ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
               extract('year' from ord.ord_emissione_data)||'-'||
               lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
               lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione,
               0 mif_ord_ord_anno_movg,
               0 mif_ord_soggetto_id,0 mif_ord_modpag_id,0 mif_ord_subord_id,
               elem.elem_id mif_ord_elem_id,
               0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_liq_id,0 mif_ord_atto_amm_id,
               ord.contotes_id mif_ord_contotes_id,ord.dist_id mif_ord_dist_id,ord.codbollo_id mif_ord_codbollo_id,
               ord.comm_tipo_id mif_ord_comm_tipo_id,
               ord.notetes_id mif_ord_notetes_id,ord.ord_desc mif_ord_desc,
               ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
               ord.siope_tipo_debito_id,ord.siope_assenza_motivazione_id,
               ord.login_creazione mif_ord_login_creazione,ord.login_modifica mif_ord_login_modifica,
               enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
        from siac_t_ordinativo ord,siac_t_bil bil, siac_t_periodo per, siac_r_ordinativo_bil_elem elem
        where  bil.ente_proprietario_id=enteProprietarioId
         and  per.periodo_id=bil.periodo_id
         and  per.anno::integer <=annoBilancio::integer
         and  ord.bil_id=bil.bil_id
         and  ord.ord_tipo_id=ordTipoCodeId
         and  ord.ord_emissione_data<=dataElaborazione
         and  ord.ord_trasm_oil_data is not null
         and  ord.ord_spostamento_data is not null
         and  ord.ord_trasm_oil_data<ord.ord_spostamento_data
         and  ord.ord_spostamento_data<=dataElaborazione
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175		
         and  ord.ord_da_trasmettere=true -- 19.06.2017 Sofia siac-6175
         and  not exists (select 1 from siac_r_ordinativo_stato ord_stato
  				          where  ord_stato.ord_id=ord.ord_id
					        and  ord_stato.ord_stato_id=ordStatoCodeAId
                            and  ord_stato.data_cancellazione is null)
         and  elem.ord_id=ord.ord_id
         and  elem.data_cancellazione is null
         and  elem.validita_fine is null
        )
       select o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
		       o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
     		   o.mif_ord_soggetto_id, o.mif_ord_modpag_id,
               o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_liq_id, o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_dist_id,
               o.mif_ord_codbollo_id,o.mif_ord_comm_tipo_id,o.mif_ord_notetes_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.siope_tipo_debito_id,o.siope_assenza_motivazione_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id , o.login_operazione
       from ordinativi o
	   where mifOrdRitrasmElabId is null
		  or (mifOrdRitrasmElabId is not null and exists
             (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
      );
      -- aggiornamento mif_t_ordinativo_spesa_id per id


      strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per fase_operativa_code.';
      update mif_t_ordinativo_spesa_id m
      set mif_ord_bil_fase_ope=(select fase.fase_operativa_code from siac_r_bil_fase_operativa rFase, siac_d_fase_operativa fase
      							where rFase.bil_id=m.mif_ord_bil_id
                                and   rFase.data_cancellazione is null
                                and   rFase.validita_fine is null
                                and   fase.fase_operativa_id=rFase.fase_operativa_id
                                and   fase.data_cancellazione is null
                                and   fase.validita_fine is null);


      strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per soggetto_id.';
      -- soggetto_id

      update mif_t_ordinativo_spesa_id m
      set mif_ord_soggetto_id=coalesce(s.soggetto_id,0)
      from siac_r_ordinativo_soggetto s
      where s.ord_id=m.mif_ord_ord_id
      and s.data_cancellazione is null
      and s.validita_fine is null;

      strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per modpag_id.';

      -- modpag_id
      update mif_t_ordinativo_spesa_id m set  mif_ord_modpag_id=coalesce(s.modpag_id,0)
      from siac_r_ordinativo_modpag s
      where s.ord_id=m.mif_ord_ord_id
   	  and s.modpag_id is not null
      and s.data_cancellazione is null
      and s.validita_fine is null;

      strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per modpag_id [CSI].';
      update mif_t_ordinativo_spesa_id m set mif_ord_modpag_id=coalesce(rel.modpag_id,0)
      from siac_r_ordinativo_modpag s, siac_r_soggrel_modpag rel
      where s.ord_id=m.mif_ord_ord_id
      and s.soggetto_relaz_id is not null
      and rel.soggetto_relaz_id=s.soggetto_relaz_id
      and s.data_cancellazione is null
      and s.validita_fine is null
      and rel.data_cancellazione is null
      --  and rel.validita_fine is null
      -- 04.04.2018 Sofia SIAC-6064
      and date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(rel.validita_fine,dataElaborazione))
      and exists  (select  1 from siac_r_soggrel_modpag rel1
                   where    rel.soggetto_relaz_id=s.soggetto_relaz_id
		           and      rel1.soggrelmpag_id=rel.soggrelmpag_id
         		   order by rel1.modpag_id
			       limit 1);

      strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per subord_id.';

      -- subord_id
      update mif_t_ordinativo_spesa_id m
      set mif_ord_subord_id =
                             (select s.ord_ts_id from siac_t_ordinativo_ts s
                               where s.ord_id=m.mif_ord_ord_id
                                 and s.data_cancellazione is null
                                 and s.validita_fine is null
                               order by s.ord_ts_id
                               limit 1);

     strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per liq_id.';

	 -- liq_id
	 update mif_t_ordinativo_spesa_id m
	 set mif_ord_liq_id = (select s.liq_id from siac_r_liquidazione_ord s
                            where s.sord_id = m.mif_ord_subord_id
                              and s.data_cancellazione is null
                              and s.validita_fine is null);
     strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per movgest_ts_id.';

     -- movgest_ts_id
     update mif_t_ordinativo_spesa_id m
     set mif_ord_movgest_ts_id = (select s.movgest_ts_id from siac_r_liquidazione_movgest s
                                   where s.liq_id = m.mif_ord_liq_id
                                     and s.data_cancellazione is null
                                     and s.validita_fine is null);
     strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per movgest_id.';

     -- movgest_id
     update mif_t_ordinativo_spesa_id m
     set mif_ord_movgest_id = (select s.movgest_id from siac_t_movgest_ts s
                               where  s.movgest_ts_id = m.mif_ord_movgest_ts_id
                               and s.data_cancellazione is null
                               and s.validita_fine is null);

     strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per movgest_id.';

     -- movgest_anno
     update mif_t_ordinativo_spesa_id m
     set mif_ord_ord_anno_movg = (select s.movgest_anno from siac_t_movgest s
                              	  where  s.movgest_id = m.mif_ord_movgest_id
                             	  and s.data_cancellazione is null
                                  and s.validita_fine is null);


     strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per attoamm_id.';

    -- attoamm_id
    update mif_t_ordinativo_spesa_id m
    set mif_ord_atto_amm_id = (select s.attoamm_id from siac_r_liquidazione_atto_amm s
                                where s.liq_id = m.mif_ord_liq_id
                                  and s.data_cancellazione is null
                                  and s.validita_fine is null);

    strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per attoamm_id movgest_ts.';
	-- attoamm_movgest_ts_id
    update mif_t_ordinativo_spesa_id m
    set mif_ord_atto_amm_movg_id = (select s.attoamm_id from siac_r_movgest_ts_atto_amm s
                                    where s.movgest_ts_id = m.mif_ord_movgest_ts_id
                                    and s.data_cancellazione is null
                                    and s.validita_fine is null);

	-- mif_ord_programma_id
    -- mif_ord_programma_code
    -- mif_ord_programma_desc
    strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per mif_ord_programma_id mif_ord_programma_code mif_ord_programma_desc.';
    update mif_t_ordinativo_spesa_id m
    set (mif_ord_programma_id,mif_ord_programma_code,mif_ord_programma_desc) = (class.classif_id,class.classif_code,class.classif_desc) -- 11.01.2016 Sofia
    from siac_r_bil_elem_class classElem, siac_t_class class
    where classElem.elem_id=m.mif_ord_elem_id
    and   class.classif_id=classElem.classif_id
    and   class.classif_tipo_id=programmaCodeTipoId
    and   classElem.data_cancellazione is null
    and   classElem.validita_fine is null
    and   class.data_cancellazione is null;

	-- mif_ord_titolo_id
    -- mif_ord_titolo_code
    strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per mif_ord_titolo_id mif_ord_titolo_code.';
    update mif_t_ordinativo_spesa_id m
    set (mif_ord_titolo_id, mif_ord_titolo_code) = (cp.classif_id,cp.classif_code)
	from siac_r_bil_elem_class classElem, siac_t_class cf, siac_r_class_fam_tree r, siac_t_class cp
	where classElem.elem_id=m.mif_ord_elem_id
    and   cf.classif_id=classElem.classif_id
    and   cf.data_cancellazione is null
    and   classElem.data_cancellazione is null
    and   classElem.validita_fine is null
	and   r.classif_id=cf.classif_id
	and   r.classif_id_padre is not null
	and   r.classif_fam_tree_id=famTitSpeMacroAggrCodeId
    and   r.data_cancellazione is null
    and   r.validita_fine is null
	and   cp.classif_id=r.classif_id_padre
    and   cp.data_cancellazione is null;






	-- mif_ord_note_attr_id
	strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per mif_ord_note_attr_id.';
	update mif_t_ordinativo_spesa_id m
    set mif_ord_note_attr_id= attr.ord_attr_id
    from siac_r_ordinativo_attr attr
    where attr.ord_id=m.mif_ord_ord_id
    and   attr.attr_id=noteOrdAttrId
    and   attr.data_cancellazione is null
    and   attr.validita_fine is null;


    strMessaggio:='Verifica esistenza ordinativi di spesa da trasmettere.';
    codResult:=null;
    select 1 into codResult
    from mif_t_ordinativo_spesa_id where ente_proprietario_id=enteProprietarioId;

    if codResult is null then
      codResult:=-12;
      RAISE EXCEPTION ' Nessun ordinativo di spesa da trasmettere.';
    end if;


    -- <ritenute>
    flussoElabMifElabRec:=null;
    flussoElabMifElabRec:=mifFlussoElabMifArr[FLUSSO_MIF_ELAB_RITENUTA];

    strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                   ||' tipo flusso '||MANDMIF_TIPO||'.';
    if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    end if;
    if flussoElabMifElabRec.flussoElabMifAttivo=true then
    	if flussoElabMifElabRec.flussoElabMifElab=true then
        	if flussoElabMifElabRec.flussoElabMifParam is not null then
  					tipoRelazRitOrd:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
	                tipoRelazSprOrd:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
	                tipoRelazSubOrd:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                    tipoOnereIrpef:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));
                    tipoOnereInps:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,5));
                    tipoOnereIrpeg:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,6));


                    if tipoRelazRitOrd is null or tipoRelazSprOrd is null or tipoRelazSubOrd is null
                       or tipoOnereInps is null or tipoOnereIrpef is null
                       or tipoOnereIrpeg is null then
                       RAISE EXCEPTION ' Dati configurazione ritenute non completi.';
                    end if;
                    isRitenutaAttivo:=true;
            end if;
	    else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	   	end if;
   end if;

   if isRitenutaAttivo=true then
     	flussoElabMifElabRec:=null;
        flussoElabMifElabRec:=mifFlussoElabMifArr[FLUSSO_MIF_ELAB_RITENUTA_PRG];
         strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	   	 if flussoElabMifElabRec.flussoElabMifId is null then
  			  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	   	 end if;
    	 if flussoElabMifElabRec.flussoElabMifAttivo=true then
    		if flussoElabMifElabRec.flussoElabMifElab=true then
            	if flussoElabMifElabRec.flussoElabMifDef is not null then
                	progrRitenuta:=flussoElabMifElabRec.flussoElabMifDef;
                end if;
	    	else
				RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	   		end if;
	     else
    	   isRitenutaAttivo:=false;
		 end if;
   end if;

   if isRitenutaAttivo=true then
           strMessaggio:='Lettura dati identificativo tipo Onere '||tipoOnereIrpef
                       ||' sezione ritenute - tipo flusso '||MANDMIF_TIPO||'.';

           select tipo.onere_tipo_id into tipoOnereIrpefId
           from siac_d_onere_tipo tipo
           where tipo.ente_proprietario_id=enteProprietarioId
           and   tipo.onere_tipo_code=tipoOnereIrpef
           and   tipo.data_cancellazione is null
 	  	   and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
   		   and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));

           if tipoOnereIrpefId is null then
            	RAISE EXCEPTION ' Dato non reperito.';
           end if;

           strMessaggio:='Lettura dati identificativo tipo Onere '||tipoOnereInps
                       ||' sezione ritenute - tipo flusso '||MANDMIF_TIPO||'.';

           select tipo.onere_tipo_id into tipoOnereInpsId
           from siac_d_onere_tipo tipo
           where tipo.ente_proprietario_id=enteProprietarioId
           and   tipo.onere_tipo_code=tipoOnereInps
           and   tipo.data_cancellazione is null
 	  	   and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		   and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));


           if tipoOnereInpsId is null then
            	RAISE EXCEPTION ' Dato non reperito.';
           end if;

		   strMessaggio:='Lettura dati identificativo tipo Onere '||tipoOnereIrpeg
                        ||' sezione ritenute - tipo flusso '||MANDMIF_TIPO||'.';

           select tipo.onere_tipo_id into tipoOnereIrpegId
           from siac_d_onere_tipo tipo
           where tipo.ente_proprietario_id=enteProprietarioId
           and   tipo.onere_tipo_code=tipoOnereIrpeg
           and   tipo.data_cancellazione is null
 	  	   and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		   and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));


           if tipoOnereIrpegId is null then
            	RAISE EXCEPTION ' Dato non reperito.';
           end if;
   end if;


   -- <sospesi>
   -- <sospeso>
   -- <numero_provvisorio>
   -- <importo_provvisorio>
   flussoElabMifElabRec:=null;
   flussoElabMifElabRec:=mifFlussoElabMifArr[FLUSSO_MIF_ELAB_NUM_SOSPESO];
   mifCountRec:=FLUSSO_MIF_ELAB_NUM_SOSPESO;
   strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
   if flussoElabMifElabRec.flussoElabMifId is null then
  	  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
   end if;
   if flussoElabMifElabRec.flussoElabMifAttivo=true then
    	if flussoElabMifElabRec.flussoElabMifElab=true then
			null;
        else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
   		end if;
        isRicevutaAttivo:=true;
   end if;




   flussoElabMifElabRec:=null;
   mifCountRec:=FLUSSO_MIF_ELAB_FATTURE;
   flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
   strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'.';
   if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
   end if;
   if flussoElabMifElabRec.flussoElabMifAttivo=true then
   	if flussoElabMifElabRec.flussoElabMifElab=true then
    	if flussoElabMifElabRec.flussoElabMifParam is not null  then
 		    numeroDocs:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            tipoDocs  :=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
            tipoGruppoDocs  :=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
            if numeroDocs is not null and numeroDocs!='' and
               tipoDocs is not null and tipoDocs!='' and
               tipoGruppoDocs is not null and tipoGruppoDocs!='' then
                tipoDocs:=tipoDocs||'|'||tipoGruppoDocs;
            	isGestioneFatture:=true;
            end if;
		end if;
    else
    	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
    end if;
   end if;

   if isGestioneFatture=true then

    flussoElabMifElabRec:=null;
    mifCountRec:=FLUSSO_MIF_ELAB_FATT_CODFISC;
    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'.';
    if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    end if;
    if flussoElabMifElabRec.flussoElabMifAttivo=true then
   	 if flussoElabMifElabRec.flussoElabMifElab=true then
    	if flussoElabMifElabRec.flussoElabMifParam is not null  then
 		    docAnalogico:=flussoElabMifElabRec.flussoElabMifParam;
		end if;
     else
    	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
     end if;
    end if;

   end if;

   if isGestioneFatture=true then
    flussoElabMifElabRec:=null;
    mifCountRec:=FLUSSO_MIF_ELAB_FATT_DATASCAD_PAG;
    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'.';
    if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    end if;
    if flussoElabMifElabRec.flussoElabMifAttivo=true then
   	 if flussoElabMifElabRec.flussoElabMifElab=true then
    	if flussoElabMifElabRec.flussoElabMifParam is not null  then
            attrCodeDataScad:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
		end if;
     else
    	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
     end if;
    end if;

   end if;

   if isGestioneFatture=true then

    flussoElabMifElabRec:=null;
    mifCountRec:=FLUSSO_MIF_ELAB_FATT_NATURA_PAG;
    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'.';
    if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    end if;
    if flussoElabMifElabRec.flussoElabMifAttivo=true then
   	 if flussoElabMifElabRec.flussoElabMifElab=true then
        -- 20.02.2018 Sofia JIRA siac-5849
        /*
    	if flussoElabMifElabRec.flussoElabMifParam is not null  then
            titoloCorrente:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            descriTitoloCorrente:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
            titoloCapitale:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
            descriTitoloCapitale:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));

		end if;*/

        -- 20.02.2018 Sofia JIRA siac-5849
        if flussoElabMifElabRec.flussoElabMifDef is not null then
        	defNaturaPag:=flussoElabMifElabRec.flussoElabMifDef;
        end if;
     else
    	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
     end if;
    end if;

   end if;

   --- lettura mif_t_ordinativo_spesa_id per popolamento mif_t_ordinativo_spesa
   codResult:=null;
   strMessaggio:='Lettura ordinativi di spesa da migrare [mif_t_ordinativo_spesa_id].Inizio ciclo.';
   for mifOrdinativoIdRec IN
   (select ms.*
     from mif_t_ordinativo_spesa_id ms
     where ms.ente_proprietario_id=enteProprietarioId
     order by ms.mif_ord_anno_bil,
              ms.mif_ord_ord_numero
   )
   loop


		mifFlussoOrdinativoRec:=null;
		MDPRec:=null;
        codAccreRec:=null;
		bilElemRec:=null;
        soggettoRec:=null;
        soggettoSedeRec:=null;
        soggettoRifId:=null;
        soggettoSedeSecId:=null;
		indirizzoRec:=null;
        mifOrdSpesaId:=null;




        isIndirizzoBenef:=true;
        isIndirizzoBenQuiet:=true;


        bavvioFrazAttr:=false;
        bAvvioSiopeNew:=false;


	    statoBeneficiario:=false;
		statoDelegatoCredEff:=false;

        -- lettura importo ordinativo
 		strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura importo ordinativo di spesa per tipo flusso '||MANDMIF_TIPO||'.';

        mifFlussoOrdinativoRec.mif_ord_importo:=fnc_mif_importo_ordinativo(mifOrdinativoIdRec.mif_ord_ord_id,ordDetTsTipoId,
        													  		       flussoElabMifTipoDec);
        if flussoElabMifTipoDec=true and
           coalesce(position('.' in mifFlussoOrdinativoRec.mif_ord_importo),0)=0 then
           mifFlussoOrdinativoRec.mif_ord_importo:=mifFlussoOrdinativoRec.mif_ord_importo||'.00';
        end if;

        -- lettura MDP ti ordinativo
 		strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura MDP ordinativo di spesa per tipo flusso '||MANDMIF_TIPO||'.';

		select * into MDPRec
        from siac_t_modpag mdp
        where mdp.modpag_id=mifOrdinativoIdRec.mif_ord_modpag_id;
        if MDPRec is null then
        	RAISE EXCEPTION ' Errore in lettura siac_t_modpag.';
        end if;

        -- lettura accreditoTipo ti ordinativo
 		strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura accredito tipo ordinativo di spesa per tipo flusso '||MANDMIF_TIPO||'.';

        select tipo.accredito_tipo_id, tipo.accredito_tipo_code,tipo.accredito_tipo_desc,
               gruppo.accredito_gruppo_id, gruppo.accredito_gruppo_code
               into codAccreRec
        from siac_d_accredito_tipo tipo, siac_d_accredito_gruppo gruppo
        where tipo.accredito_tipo_id=MDPRec.accredito_tipo_id
          and tipo.data_cancellazione is null
          and date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		  and date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione))
          and gruppo.accredito_gruppo_id=tipo.accredito_gruppo_id;
        if codAccreRec is null then
        	RAISE EXCEPTION ' Errore in lettura siac_d_accredito_tipo siac_d_accredito_gruppo.';
        end if;


        -- lettura dati soggetto ordinativo
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati soggetto [siac_r_soggetto_relaz] ordinativo di spesa per tipo flusso '||MANDMIF_TIPO||'.';
        select rel.soggetto_id_da into soggettoRifId
        from  siac_r_soggetto_relaz rel
        where rel.soggetto_id_a=mifOrdinativoIdRec.mif_ord_soggetto_id
        and   rel.relaz_tipo_id=ordSedeSecRelazTipoId
        and   rel.ente_proprietario_id=enteProprietarioId
        and   rel.data_cancellazione is null
		and   rel.validita_fine is null;

        if soggettoRifId is null then
	        soggettoRifId:=mifOrdinativoIdRec.mif_ord_soggetto_id;
        else
        	soggettoSedeSecId:=mifOrdinativoIdRec.mif_ord_soggetto_id;
        end if;

        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati soggetto di riferimento ordinativo di spesa per tipo flusso '||MANDMIF_TIPO||'.';

        select * into soggettoRec
   	    from siac_t_soggetto sogg
       	where sogg.soggetto_id=soggettoRifId;

        if soggettoRec is null then
        	RAISE EXCEPTION ' Errore in lettura siac_t_soggetto [soggetto_id= %].',soggettoRifId;
        end if;

        if soggettoSedeSecId is not null then
	        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati sede sec. soggetto di riferimento ordinativo di spesa per tipo flusso '||MANDMIF_TIPO||'.';

            select * into soggettoSedeRec
   		    from siac_t_soggetto sogg
	       	where sogg.soggetto_id=soggettoSedeSecId;

	        if soggettoSedeRec is null then
    	    	RAISE EXCEPTION ' Errore in lettura siac_t_soggetto [soggetto_id=%]',soggettoSedeSecId;
        	end if;

        end if;



        -- lettura elemento bilancio  ordinativo
 		strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura elemento bilancio ordinativo di spesa per tipo flusso '||MANDMIF_TIPO||'.';

		select * into bilElemRec
        from siac_t_bil_elem elem
        where elem.elem_id=mifOrdinativoIdRec.mif_ord_elem_id;
        if bilElemRec is null then
        	RAISE EXCEPTION ' Errore in lettura siac_t_bil_elem.';
        end if;

		-- dati testata flusso presenti come tag solo in testata
        -- valorizzati su ogni ordinativo trasmesso
        -- <testata_flusso>
		-- <codice_ABI_BT>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_COD_ABI_BT;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_abi is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_abi_bt:=enteOilRec.ente_oil_abi;
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_abi_bt:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <codice_ente>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_COD_ENTE_IPA;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice_ipa is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_ipa:=trim(both ' ' from enteOilRec.ente_oil_codice_ipa);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_ipa:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <descrizione_ente>
	    flussoElabMifElabRec:=null;
		mifCountRec:=FLUSSO_MIF_ELAB_TEST_DESC_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteProprietarioRec.ente_denominazione is not null then
            	mifFlussoOrdinativoRec.mif_ord_desc_ente:=enteProprietarioRec.ente_denominazione;
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
               	mifFlussoOrdinativoRec.mif_ord_desc_ente:=substring(flussoElabMifElabRec.flussoElabMifDef from 1 for 30);
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

	    -- <codice_istat_ente>
	    flussoElabMifElabRec:=null;
		mifCountRec:=FLUSSO_MIF_ELAB_TEST_COD_ISTAT_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice_istat is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_istat:=enteOilRec.ente_oil_codice_istat;
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
               	mifFlussoOrdinativoRec.mif_ord_codice_ente_istat:=substring(flussoElabMifElabRec.flussoElabMifDef from 1 for 30);
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <codice_fiscale_ente>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_CODFISC_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteProprietarioRec.codice_fiscale is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente:=trim(both ' ' from enteProprietarioRec.codice_fiscale);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <codice_tramite_ente>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_CODTRAMITE_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice_tramite is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite:=trim(both ' ' from enteOilRec.ente_oil_codice_tramite);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <codice_tramite_BT>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_CODTRAMITE_BT;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice_tramite_bt is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite_bt:=trim(both ' ' from enteOilRec.ente_oil_codice_tramite_bt);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite_bt:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <codice_ente_BT>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_COD_ENTE_BT;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_bt:=trim(both ' ' from enteOilRec.ente_oil_codice);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_bt:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <riferimento_ente>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_RIFERIMENTO_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_riferimento is not null then
            	mifFlussoOrdinativoRec.mif_ord_riferimento_ente:=trim(both ' ' from enteOilRec.ente_oil_riferimento);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_riferimento_ente:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;
        -- </testata_flusso>

        -- <testata_esercizio>
        -- <esercizio>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_ESERCIZIO;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
            mifFlussoOrdinativoRec.mif_ord_anno_esercizio:=mifOrdinativoIdRec.mif_ord_anno_bil;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;
        -- </testata_esercizio>

        mifCountRec:=FLUSSO_MIF_ELAB_INIZIO_ORD;
        mifCountTmpRec:=FLUSSO_MIF_ELAB_INIZIO_ORD;

        -- <mandato>
		-- <tipo_operazione>
        flussoElabMifElabRec:=null;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if  flussoElabMifElabRec.flussoElabMifAttivo=true then
         if   flussoElabMifElabRec.flussoElabMifElab=true then
            if flussoElabMifElabRec.flussoElabMifParam is not null then
	            flussoElabMifValore:=fnc_mif_ordinativo_carico_bollo( mifOrdinativoIdRec.mif_ord_codice_funzione,flussoElabMifElabRec.flussoElabMifParam);
            else
            	flussoElabMifValore:=mifOrdinativoIdRec.mif_ord_codice_funzione;
            end if;
            if flussoElabMifValore is not null then
				mifFlussoOrdinativoRec.mif_ord_codice_funzione:=flussoElabMifValore;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <numero_mandato>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
/*         	if flussoElabMifTipoDec=false then
				mifFlussoOrdinativoRec.mif_ord_numero:=lpad(mifOrdinativoIdRec.mif_ord_ord_numero,NUM_SETTE,ZERO_PAD);
            else
	            mifFlussoOrdinativoRec.mif_ord_numero:=mifOrdinativoIdRec.mif_ord_ord_numero;
            end if;*/
            mifFlussoOrdinativoRec.mif_ord_numero:=mifOrdinativoIdRec.mif_ord_ord_numero;
         else
            RAISE EXCEPTION ' Configurazione tag/campo non elaborabile.';
         end if;
        end if;


        -- <data_mandato>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true  then
         if  flussoElabMifElabRec.flussoElabMifElab=true then
			mifFlussoOrdinativoRec.mif_ord_data:=mifOrdinativoIdRec.mif_ord_data_emissione;
         else
            RAISE EXCEPTION ' Configurazione tag/campo non  elaborabile.';
         end if;
        end if;



		-- <importo_mandato>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
			-- calcolato inizio ciclo
            null;
         else
         	mifFlussoOrdinativoRec.mif_ord_importo:='0';
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <conto_evidenza>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
			if mifOrdinativoIdRec.mif_ord_contotes_id is not null then
                 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
					   ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura conto tesoreria.';


            	select d.contotes_code into flussoElabMifValore
                from siac_d_contotesoreria d
                where d.contotes_id=mifOrdinativoIdRec.mif_ord_contotes_id;
                if flussoElabMifValore is null then
                	RAISE EXCEPTION ' Dato non presente in archivio.';
                end if;
            end if;

            if flussoElabMifValore is not null then
	            mifFlussoOrdinativoRec.mif_ord_bci_conto_tes:=substring(flussoElabMifValore from 1 for 7 );
            end if;

         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <estremi_provvedimento_autorizzativo>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
					   ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        flussoElabMifValore:=null;
        attoAmmRec:=null;
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
           if mifOrdinativoIdRec.mif_ord_atto_amm_id is not null then
			if flussoElabMifElabRec.flussoElabMifParam is not null then
                if attoAmmTipoSpr is null then
            		attoAmmTipoSpr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                end if;
                if attoAmmTipoAll is null then
                	attoAmmTipoAll:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
            	end if;
            end if;

            select * into attoAmmRec
            from fnc_mif_estremi_atto_amm(mifOrdinativoIdRec.mif_ord_atto_amm_id,
                                          mifOrdinativoIdRec.mif_ord_atto_amm_movg_id,
                                          attoAmmTipoSpr,attoAmmTipoAll,
                                          dataElaborazione,dataFineVal);
           end if;

           if attoAmmRec.attoAmmEstremi is not null   then
                mifFlussoOrdinativoRec.mif_ord_estremi_attoamm:=attoAmmRec.attoAmmEstremi;
           elseif flussoElabMifElabRec.flussoElabMifDef is not null then
           		mifFlussoOrdinativoRec.mif_ord_estremi_attoamm:=flussoElabMifElabRec.flussoElabMifDef;
           end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
       end if;


       -- <responsabile_provvedimento>
	   flussoElabMifElabRec:=null;
	   flussoElabMifValore:=null;
	   flussoElabMifValoreDesc:=null;
	   mifCountRec:=mifCountRec+1;
	   flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

	  if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	  end if;
	  if flussoElabMifElabRec.flussoElabMifAttivo=true then
   		if flussoElabMifElabRec.flussoElabMifElab=true then


         if mifOrdinativoIdRec.mif_ord_login_creazione is not null then
			flussoElabMifValore:=mifOrdinativoIdRec.mif_ord_login_creazione;
         end if;

         if flussoElabMifValore is not null then
        	select substring(s.soggetto_desc  from 1 for 12)  into flussoElabMifValoreDesc
			from siac_t_account a, siac_r_soggetto_ruolo r, siac_t_soggetto s
			where a.ente_proprietario_id=enteProprietarioId
            and   a.account_code=flussoElabMifValore
			and   r.soggeto_ruolo_id=a.soggeto_ruolo_id
			and   s.soggetto_id=r.soggetto_id
            and   r.data_cancellazione is null
            and   r.validita_fine is null
            and   a.data_cancellazione is null
            and   a.validita_fine is null;

            if 	flussoElabMifValoreDesc is not null then
            	flussoElabMifValore:=flussoElabMifValoreDesc;
            end if;
         end if;

         if flussoElabMifValore is not null then
            mifFlussoOrdinativoRec.mif_ord_resp_attoamm:=substring(flussoElabMifValore from 1 for 12);
         end if;
       else
		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  	   end if;
     end if;

     -- <ufficio_responsabile>
     mifCountRec:=mifCountRec+1;

     -- <bilancio>
     -- <codifica_bilancio>
     flussoElabMifElabRec:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then

                mifFlussoOrdinativoRec.mif_ord_codifica_bilancio:=mifOrdinativoIdRec.mif_ord_programma_code
                												||mifOrdinativoIdRec.mif_ord_titolo_code;

                mifFlussoOrdinativoRec.mif_ord_capitolo:=bilElemRec.elem_code;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
      end if;

	  -- <descrizione_codifica>
      flussoElabMifElabRec:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
            	mifFlussoOrdinativoRec.mif_ord_desc_codifica:=substring( bilElemRec.elem_desc from 1 for 30);
                mifFlussoOrdinativoRec.mif_ord_desc_codifica_bil:=substring( mifOrdinativoIdRec.mif_ord_programma_desc from 1 for 30);
     	 else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
     	 end if;
      end if;

      -- <gestione>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if flussoElabMifElabRec.flussoElabMifDef is not null then
            	if mifOrdinativoIdRec.mif_ord_anno_bil=mifOrdinativoIdRec.mif_ord_ord_anno_movg then
	            	flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
                else
	                flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,2));
                end if;
            	mifFlussoOrdinativoRec.mif_ord_gestione:=flussoElabMifValore;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
      end if;

      -- <anno_residuo>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then

            if  mifOrdinativoIdRec.mif_ord_anno_bil!=mifOrdinativoIdRec.mif_ord_ord_anno_movg  then
               	   mifFlussoOrdinativoRec.mif_ord_anno_res:=mifOrdinativoIdRec.mif_ord_ord_anno_movg;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
      end if;


      -- <numero_articolo>
      flussoElabMifElabRec:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
            	mifFlussoOrdinativoRec.mif_ord_articolo:=bilElemRec.elem_code2;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
      end if;

      -- <voce_economica>
      mifCountRec:=mifCountRec+1;


      -- <importo_bilancio>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
        if flussoElabMifElabRec.flussoElabMifElab=true then
           	mifFlussoOrdinativoRec.mif_ord_importo_bil:=mifFlussoOrdinativoRec.mif_ord_importo;
        else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
        end if;
      end if;

      -- </bilancio>

      -- <funzionario_delegato>
      -- <codice_funzionario_delegato>
      -- <importo_funzionario_delegato>
      -- <tipologia_funzionario_delegato>
      -- <numero_pagamento_funzionario_delegato>
      mifCountRec:=mifCountRec+5;

      -- <informazioni_beneficiario>

      -- <progressivo_beneficiario>
      flussoElabMifElabRec:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
--	  raise notice 'progressivo_beneficiario mifCountRec=%',mifCountRec;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
        if flussoElabMifElabRec.flussoElabMifElab=true then
                if flussoElabMifElabRec.flussoElabMifDef is not null then
                	mifFlussoOrdinativoRec.mif_ord_progr_benef:=flussoElabMifElabRec.flussoElabMifDef;
                end if;
        else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
        end if;
      end if;

      -- <importo_beneficiario>
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=null;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
  	 	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
     		mifFlussoOrdinativoRec.mif_ord_importo_benef:=mifFlussoOrdinativoRec.mif_ord_importo;
	     else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	     end if;
      end if;


	  -- <tipo_pagamento>
      flussoElabMifElabRec:=null;
      tipoPagamRec:=null;
	  mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
     	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
	 	if flussoElabMifElabRec.flussoElabMifElab=true then
    	   	if flussoElabMifElabRec.flussoElabMifParam is not null and
               flussoElabMifElabRec.flussoElabMifDef is not null then
            	if codicePaeseIT is null then
                	codicePaeseIT:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                end if;
                if codiceAccreCB is null then
	                codiceAccreCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                end if;
                if codiceAccreREG is null then
	                codiceAccreREG:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                end if;
				if codiceSepa is null then
	                codiceSepa:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));
                end if;
				if codiceExtraSepa is null then
	                codiceExtraSepa:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,5));
                end if;

                if codiceGFB is null then
	                codiceGFB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,6));
                end if;

                select * into tipoPagamRec
                from fnc_mif_tipo_pagamento_splus( mifOrdinativoIdRec.mif_ord_ord_id,
											       (case when MDPRec.iban is not null and length(MDPRec.iban)>=2
                                                   then substring(MDPRec.iban from 1 for 2)
                                                   else null end), -- codicePaese
	                                               codicePaeseIT,codiceSepa,codiceExtraSepa,
                                                   codiceAccreCB,codiceAccreREG,
                                                   flussoElabMifElabRec.flussoElabMifDef, -- compensazione
												   MDPRec.accredito_tipo_id,
                                                   codAccreRec.accredito_gruppo_code,
                                                   mifFlussoOrdinativoRec.mif_ord_importo::NUMERIC, -- importo_ordinativo
                                                   (case when codAccreRec.accredito_tipo_code=codiceGFB then true else false end),
	                                               dataElaborazione,dataFineVal,
                                                   enteProprietarioId);
                if tipoPagamRec is not null then
                	if tipoPagamRec.descTipoPagamento is not null then
                    	mifFlussoOrdinativoRec.mif_ord_pagam_tipo:=tipoPagamRec.descTipoPagamento;
                        mifFlussoOrdinativoRec.mif_ord_pagam_code:=tipoPagamRec.codeTipoPagamento;
                    end if;
                end if;

	        end if;
     	else
       		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	    end if;
      end if;

      -- <impignorabili>
      mifCountRec:=mifCountRec+1;


      -- <frazionabile>
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then --1
         if flussoElabMifElabRec.flussoElabMifElab=true then --2
          if flussoElabMifElabRec.flussoElabMifParam is not null and --3
             flussoElabMifElabRec.flussoElabMifDef is not null  then

             if dataAvvioFrazAttr is null then
             	dataAvvioFrazAttr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
             end if;

             if dataAvvioFrazAttr is not null and
                dataAvvioFrazAttr::timestamp<=date_trunc('DAY',mifOrdinativoIdRec.mif_ord_data_emissione::timestamp) -- data emissione ordinativo
                then
                bavvioFrazAttr:=true;
             end if;

             if bavvioFrazAttr=false then
              if classifTipoCodeFraz is null then
               classifTipoCodeFraz:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
              end if;

              if classifTipoCodeFrazVal is null then
               classifTipoCodeFrazVal:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
              end if;
             else
              if attrFrazionabile is null then
	             attrFrazionabile:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));
              end if;
             end if;

             if  bavvioFrazAttr = false then
              if classifTipoCodeFraz is not null and
				 classifTipoCodeFrazVal is not null and
                 classifTipoCodeFrazId is null then
                strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura classificatoreTipoId '||classifTipoCodeFraz||'.';
             	select tipo.classif_tipo_id into classifTipoCodeFrazId
                from siac_d_class_tipo tipo
                where tipo.ente_proprietario_id=enteProprietarioId
                and   tipo.classif_tipo_code=classifTipoCodeFraz
                and   tipo.data_cancellazione is null
                and   tipo.validita_fine is null
                order by tipo.classif_tipo_id
                limit 1;
              end if;

              if classifTipoCodeFrazVal is not null and
                 classifTipoCodeFrazId is not null then
               strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore classificatore '||classifTipoCodeFraz||' [siac_r_ordinativo_class].';
             	select c.classif_code into flussoElabMifValore
                from siac_r_ordinativo_class r, siac_t_class c
                where r.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                and   c.classif_id=r.classif_id
                and   c.classif_tipo_id=classifTipoCodeFrazId
                and   r.data_cancellazione is null
                and   r.validita_fine is null
                and   c.data_cancellazione is null
                order by r.ord_classif_id
                limit 1;

              end if;

              if classifTipoCodeFrazVal is not null and
                flussoElabMifValore is not null and
                flussoElabMifValore=classifTipoCodeFrazVal then
             	mifFlussoOrdinativoRec.mif_ord_class_codice_gest_fraz:=flussoElabMifElabRec.flussoElabMifDef;
             end if;
			else
              if attrFrazionabile is not null then
               --- calcolo su attributo
               codResult:=null;
               select 1 into codResult
               from  siac_t_ordinativo_ts ts,siac_r_liquidazione_ord liqord,
                     siac_r_liquidazione_movgest rmov,
                     siac_r_movgest_ts_attr r, siac_t_attr attr
               where ts.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
               and   liqord.sord_id=ts.ord_ts_id
               and   rmov.liq_id=liqord.liq_id
               and   r.movgest_ts_id=rmov.movgest_ts_id
               and   attr.attr_id=r.attr_id
               and   attr.attr_code=attrFrazionabile
               and   r.boolean='N'
               and   r.data_cancellazione is null
               and   r.validita_fine is null
               and   rmov.data_cancellazione is null
               and   rmov.validita_fine is null
               and   liqord.data_cancellazione is null
               and   liqord.validita_fine is null
			   and   ts.data_cancellazione is null
               and   ts.validita_fine is null;

               if codResult is not null then
               	mifFlussoOrdinativoRec.mif_ord_class_codice_gest_fraz:=flussoElabMifElabRec.flussoElabMifDef;
               end if;

             end if;

            end if;

          end if; -- 3
      	 else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;  --- 2

        end if; -- 1

  	   -- <gestione_provvisoria>
       flussoElabMifElabRec:=null;
       mifCountRec:=mifCountRec+1;
        -- gestione_provvisoria da impostare solo se frazionabile=NO
       if mifFlussoOrdinativoRec.mif_ord_class_codice_gest_fraz is not null then
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
          if flussoElabMifElabRec.flussoElabMifParam is not null and
             flussoElabMifElabRec.flussoElabMifDef is not null and
             mifOrdinativoIdRec.mif_ord_bil_fase_ope is not null  then

             if tipoEsercizio is null then
	             tipoEsercizio:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
             end if;
          	if tipoEsercizio=mifOrdinativoIdRec.mif_ord_bil_fase_ope  then
				mifFlussoOrdinativoRec.mif_ord_class_codice_gest_prov=flussoElabMifElabRec.flussoElabMifDef;
            end if;
		   end if;


         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;

        end if;
        --- frazionabile da impostare NO solo se gestione_provvisoria=SI
        if mifFlussoOrdinativoRec.mif_ord_class_codice_gest_prov is null then
        	mifFlussoOrdinativoRec.mif_ord_class_codice_gest_fraz:=null;
        end if;

      else
       	null;
      end if;

      -- <data_esecuzione_pagamento>
      flussoElabMifElabRec:=null;
      ordDataScadenza:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
  	 	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
        	if flussoElabMifElabRec.flussoElabMifParam is not null and
               mifFlussoOrdinativoRec.mif_ord_pagam_tipo is not null and
               mifFlussoOrdinativoRec.mif_ord_pagam_tipo=flussoElabMifElabRec.flussoElabMifParam then
            	flussoElabMifElabRec.flussoElabMifElab:=false; -- se REGOLARIZZAZIONE data_esecuzione_pagamento non deve essere valorizzato
            end if;

            if flussoElabMifElabRec.flussoElabMifElab=true then
        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura data scadenza.';
        	 select sub.ord_ts_data_scadenza into ordDataScadenza
             from siac_t_ordinativo_ts sub
             where sub.ord_ts_id=mifOrdinativoIdRec.mif_ord_subord_id;

             if ordDataScadenza is not null and
--               date_trunc('DAY',ordDataScadenza)>= date_trunc('DAY',dataElaborazione) and
               date_trunc('DAY',ordDataScadenza)> date_trunc('DAY',dataElaborazione) and -- 13.12.2017 Sofia siac-5653
               extract('year' from ordDataScadenza)::integer<=annoBilancio::integer then
		  		mifFlussoOrdinativoRec.mif_ord_pagam_data_esec:=
    		        extract('year' from ordDataScadenza)||'-'||
    	         	lpad(extract('month' from ordDataScadenza)::varchar,2,'0')||'-'||
            	 	lpad(extract('day' from ordDataScadenza)::varchar,2,'0');
             end if;
            end if;

	     else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	     end if;
      end if;

      -- <data_scadenza_pagamento>
  	  mifCountRec:=mifCountRec+1;

	  -- <destinazione>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      mifCountRec:=mifCountRec+1;
      codResult:=null;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
  	   RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
   	   if flussoElabMifElabRec.flussoElabMifElab=true then

        if flussoElabMifElabRec.flussoElabMifParam is not null or
           flussoElabMifElabRec.flussoElabMifDef is not null then --1

           if flussoElabMifElabRec.flussoElabMifParam is not null then --2
		    if classVincolatoCode is null then
	        	classVincolatoCode:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            end if;

            if classVincolatoCode is not null and classVincolatoCodeId is null then
            	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura identificativo classVincolatoCode='||classVincolatoCode||'.';

                select tipo.classif_tipo_id into classVincolatoCodeId
                from siac_d_class_tipo tipo
                where tipo.ente_proprietario_id=enteProprietarioId
                and   tipo.classif_tipo_code=classVincolatoCode;

            end if;

            if classVincolatoCodeId is not null then
            	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore per classVincolatoCode='||classVincolatoCode||'.';

                         select c.classif_desc into flussoElabMifValore
                         from siac_r_ordinativo_class r, siac_t_class c
                         where r.ord_id=  mifOrdinativoIdRec.mif_ord_ord_id
                         and   c.classif_id=r.classif_id
                         and   c.classif_tipo_id=classVincolatoCodeId
                         and   r.data_cancellazione is null
                         and   r.validita_fine is null
                         and   c.data_cancellazione is null;

            end if;
  	     end if; --2


         if flussoElabMifValore is null and --3
            mifOrdinativoIdRec.mif_ord_contotes_id is not null and
        	mifOrdinativoIdRec.mif_ord_contotes_id!=0 then

		    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
    		                   ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
        		               ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
            		           ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                		       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                    		   ||' mifCountRec='||mifCountRec
	                    	   ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore per conto corrente tesoreria [mif_r_conto_tesoreria_vincolato].';

			select mif.vincolato into flussoElabMifValore
    	    from mif_r_conto_tesoreria_vincolato mif
	    	where mif.ente_proprietario_id=enteProprietarioId
    	    and   mif.contotes_id=mifOrdinativoIdRec.mif_ord_contotes_id
	        and   mif.validita_fine is null
		    and   mif.data_cancellazione is null;


        end if; --3
 	    if flussoElabMifValore is null and
           flussoElabMifElabRec.flussoElabMifDef is not null then
           flussoElabMifValore:=flussoElabMifElabRec.flussoElabMifDef;
        end if;

	    if flussoElabMifValore is not null then
        	mifFlussoOrdinativoRec.mif_ord_progr_dest:=flussoElabMifValore;
        end if;

       end if; --1
      else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
      end if;
     end if;


     -- <numero_conto_banca_italia_ente_ricevente>
     flussoElabMifElabRec:=null;
     flussoElabMifValore:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
     codResult:=null;
     if flussoElabMifElabRec.flussoElabMifId is null then
     	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;

     if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
        	if flussoElabMifElabRec.flussoElabMifParam is not null then
            	-- non esposto se regolarizzazione (provvisori)
                if mifFlussoOrdinativoRec.mif_ord_pagam_tipo is not null and
-- 28.12.2017 Sofia SIAC-5665	   mifFlussoOrdinativoRec.mif_ord_pagam_tipo= trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2)) then
          		   ( mifFlussoOrdinativoRec.mif_ord_pagam_tipo=
                     trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2))
                    or
                     mifFlussoOrdinativoRec.mif_ord_pagam_tipo=
                     trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3))
                    )  then -- 28.12.2017 Sofia SIAC-5665

                   flussoElabMifElabRec.flussoElabMifElab:=false;
                end if;

                if flussoElabMifElabRec.flussoElabMifElab=true then
	             if tipoMDPCbi is null then
                   	tipoMDPCbi:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
               	  end if;


                  if tipoMDPCbi is not null then
                  	if codAccreRec.accredito_gruppo_code=tipoMDPCbi then
                        	 mifFlussoOrdinativoRec.mif_ord_bci_conto:=MDPRec.contocorrente;
                    end if;
                  end if;
                 end if;


            end if;
       else
           RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
     end if;


     -- <tipo_contabilita_ente_ricevente>
     mifCountRec:=mifCountRec+1;
     flussoElabMifElabRec:=null;
     flussoElabMifValore:=null;
     codResult:=null;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
        if flussoElabMifElabRec.flussoElabMifElab=true then
             if flussoElabMifElabRec.flussoElabMifDef is not null then

                if flussoElabMifElabRec.flussoElabMifParam is not null then
                   if tipoClassFruttifero is null then
                    	tipoClassFruttifero:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                   end if;

                   if tipoClassFruttifero is not null and valFruttifero is null then
	                   valFruttifero:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                       valFruttiferoStr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                       valFruttiferoStrAltro:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));
                   end if;

                   if tipoClassFruttifero is not null and
                      valFruttifero is not null and
                      valFruttiferoStr is not null and
                      valFruttiferoStrAltro is not null and
                      tipoClassFruttiferoId is null then

                    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura classifTipoCodeId '||tipoClassFruttifero||'.';
                   	select tipo.classif_tipo_id into tipoClassFruttiferoId
                    from siac_d_class_tipo tipo
                    where tipo.ente_proprietario_id=enteProprietarioId
                    and   tipo.classif_tipo_code=tipoClassFruttifero
                    and   tipo.data_cancellazione is null
                    and   tipo.validita_fine is null;

                   end if;


                   if tipoClassFruttiferoId is not null and
                      valFruttifero is not null and
                      valFruttiferoStr is not null and
                      valFruttiferoStrAltro is not null and
                      valFruttiferoId is null then

                    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura classidId '||tipoClassFruttifero||' [siac_r_ordinativo_class].';


                   	select c.classif_code into flussoElabMifValore
                    from siac_r_ordinativo_class r, siac_t_class c
                    where r.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
	                and   c.classif_id=r.classif_id
                    and   c.classif_tipo_id=tipoClassFruttiferoId
                    and   r.data_cancellazione is null
                    and   r.validita_fine is null
                    and   c.data_cancellazione is null
                    order by r.ord_classif_id limit 1;

                    if flussoElabMifValore is not null then
                    	if flussoElabMifValore=valFruttifero THEN
                        	flussoElabMifValore=valFruttiferoStr;
                        else
                          flussoElabMifValore=valFruttiferoStrAltro;
                        end if;
                    end if;

                  end if;

				end if; -- param

				if flussoElabMifValore is not null then
	                mifFlussoOrdinativoRec.mif_ord_bci_tipo_contabil:=flussoElabMifValore;
                end if;

               if mifFlussoOrdinativoRec.mif_ord_bci_tipo_contabil is null and
	              mifOrdinativoIdRec.mif_ord_contotes_id is not null and
    	          mifOrdinativoIdRec.mif_ord_contotes_id!=0 then

               	  flussoElabMifValore:=null;
	              strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore per conto corrente tesoreria [mif_r_conto_tesoreria_fruttifero].';
	           	  select mif.fruttifero into flussoElabMifValore
	              from mif_r_conto_tesoreria_fruttifero mif
    	          where mif.ente_proprietario_id=enteProprietarioId
        	      and   mif.contotes_id=mifOrdinativoIdRec.mif_ord_contotes_id
            	  and   mif.validita_fine is null
	              and   mif.data_cancellazione is null;

    	          if flussoElabMifValore is not null then
        	       	mifFlussoOrdinativoRec.mif_ord_bci_tipo_contabil:=flussoElabMifValore;
            	  end if;

              end if;

              if mifFlussoOrdinativoRec.mif_ord_bci_tipo_contabil is null then
                   	mifFlussoOrdinativoRec.mif_ord_bci_tipo_contabil:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
              end if;
           end if; -- default
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

      -- <tipo_postalizzazione>
      flussoElabMifElabRec:=null;
      codResult:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifValore:=null;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      raise notice 'tipo_postalizzazione mifCountRec=%',mifCountRec;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
    	if flussoElabMifElabRec.flussoElabMifElab=true then
         if flussoElabMifElabRec.flussoElabMifParam is not null and
            flussoElabMifElabRec.flussoElabMifDef is not null then
           if tipoPagamPostA is null then
           	tipoPagamPostA:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
           end if;

           if tipoPagamPostB is null then
           	tipoPagamPostB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
           end if;


           if tipoPagamPostA is not null or tipoPagamPostB is not null then
			  if tipoPagamRec is not null and tipoPagamRec.descTipoPagamento is not null then
              	if tipoPagamRec.descTipoPagamento in (tipoPagamPostA,tipoPagamPostB) then
	                mifFlussoOrdinativoRec.mif_ord_pagam_postalizza:=flussoElabMifElabRec.flussoElabMifDef;
                end if;
              end if;
           end if;

         end if;
        else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
        end if;
      end if;


      -- <classificazione>
	  -- <codice_cgu>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      flussoElabMifValoreDesc:=null;
      codiceCge:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      raise notice 'classificazione mifCountRec=%',mifCountRec;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then -- attivo
       if flussoElabMifElabRec.flussoElabMifElab=true then -- elab

        if flussoElabMifElabRec.flussoElabMifParam is not null then -- param

       	 if siopeCodeTipo is null and flussoElabMifElabRec.flussoElabMifParam is not null then
         	siopeCodeTipo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
         end if;

         if siopeDef is null and flussoElabMifElabRec.flussoElabMifParam is not null then
         	siopeDef:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
         end if;

         if coalesce(dataAvvioSiopeNew,NVL_STR)=NVL_STR and
            flussoElabMifElabRec.flussoElabMifParam is not null then
           	dataAvvioSiopeNew:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
         end if;

         if coalesce(dataAvvioSiopeNew,NVL_STR)!=NVL_STR and codiceFinVTbr is null then
       	 	codiceFinVTbr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));
         end if;

         if coalesce(dataAvvioSiopeNew,NVL_STR)!=NVL_STR then
       	  if dataAvvioSiopeNew::timestamp<=date_trunc('DAY',mifOrdinativoIdRec.mif_ord_data_emissione::timestamp) -- data emissione ordinativo
             then
              bAvvioSiopeNew:=true;
           end if;
         end if;

         if bAvvioSiopeNew=true then -- avvioSiopeNew
           if codiceFinVTbr is not null and codiceFinVTipoTbrId is null then
		  	-- codiceFinVTipoTbrId
            strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'.Lettura ID codice tipo='||codiceFinVTbr||'.';
			select tipo.classif_tipo_id into strict codiceFinVTipoTbrId
			from siac_d_class_tipo tipo
			where tipo.ente_proprietario_id=enteProprietarioId
			and   tipo.classif_tipo_code=codiceFinVTbr
			and   tipo.data_cancellazione is null
			and   date_trunc('day',dataElaborazione)>=date_trunc('day',validita_inizio)
		    and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(validita_fine,dataElaborazione));
          end if;

          if codiceFinVTipoTbrId is not null then
          	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore per codice tipo='||codiceFinVTbr||'.';

            select replace(substring(class.classif_code,2),'.','') , class.classif_desc
                   into flussoElabMifValore,flussoElabMifValoreDesc
		   	from siac_r_ordinativo_class r, siac_t_class class
			where r.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
		    and   class.classif_id=r.classif_id
		    and   class.classif_tipo_id=codiceFinVTipoTbrId
		    and   r.data_cancellazione is null
		    and   r.validita_fine is NULL
		    and   class.data_cancellazione is null;

          	if   flussoElabMifValore is null then
             strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore per codice tipo='||codiceFinVTbr||'.';

             select replace(substring(class.classif_code,2),'.','') , class.classif_desc
                   into flussoElabMifValore,flussoElabMifValoreDesc
 		   	 from siac_r_liquidazione_class r, siac_t_class class
			 where r.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
		     and   class.classif_id=r.classif_id
		     and   class.classif_tipo_id=codiceFinVTipoTbrId
		     and   r.data_cancellazione is null
		     and   r.validita_fine is NULL
		     and   class.data_cancellazione is null;
            end if;

          end if;
         else -- avvioSiopeNew
           strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura ID codice tipo='||siopeCodeTipo||'.';

           if siopeCodeTipoId is null and siopeCodeTipo is not null then
           	select tipo.classif_tipo_id into siopeCodeTipoId
            from siac_d_class_tipo tipo
            where tipo.classif_tipo_code=siopeCodeTipo
            and   tipo.ente_proprietario_id=enteProprietarioId
            and   tipo.data_cancellazione is null
	 		and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		    and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));
           end if;

           strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore per codice tipo='||siopeCodeTipo||'.';

           if siopeCodeTipoId is not null then
           	select class.classif_code, class.classif_desc
                   into flussoElabMifValore,flussoElabMifValoreDesc
            from siac_r_ordinativo_class cord, siac_t_class class
            where cord.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
            and cord.data_cancellazione is null
            and cord.validita_fine is null
            and class.classif_id=cord.classif_id
            and class.classif_code!=siopeDef
            and class.data_cancellazione is null
            and class.classif_tipo_id=siopeCodeTipoId;

            if flussoElabMifValore is null then
             select class.classif_code, class.classif_desc
                    into flussoElabMifValore,flussoElabMifValoreDesc
             from siac_r_liquidazione_class cord, siac_t_class class
             where cord.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
             and cord.data_cancellazione is null
             and cord.validita_fine is null
             and class.classif_id=cord.classif_id
             and class.classif_code!=siopeDef
             and class.data_cancellazione is null
             and class.classif_tipo_id=siopeCodeTipoId;
            end if;


           end if;
         end if; -- avvioSiopeNew


         if flussoElabMifValore is not null then
         	mifFlussoOrdinativoRec.mif_ord_class_codice_cge:=flussoElabMifValore;
            codiceCge:=flussoElabMifValore;
         end if;
        end if; -- param
       else -- elab
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if; -- elab
      end if; -- attivo

	  -- <codice_cup>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      flussoElabMifValoreDesc:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
       if flussoElabMifElabRec.flussoElabMifElab=true then
			if flussoElabMifElabRec.flussoElabMifParam is not null then
            	if coalesce(cupAttrCode,NVL_STR)=NVL_STR then
                	cupAttrCode:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                end if;

                if coalesce(cupAttrCode,NVL_STR)!=NVL_STR and cupAttrId is null then
                	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura attr_id '||cupAttrCode||'.';
                	select attr.attr_id into cupAttrId
                    from siac_t_attr attr
                    where attr.ente_proprietario_id=enteProprietarioId
                    and   attr.attr_code=cupAttrCode
                    and   attr.data_cancellazione is null
                    and   attr.validita_fine is null;
                end if;

                if cupAttrId is not null then
                	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore '||cupAttrCode||' [siac_r_ordinativo_attr].';

                	select a.testo into flussoElabMifValore
                    from siac_r_ordinativo_attr a
                    where a.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                    and   a.attr_id=cupAttrId
                    and   a.data_cancellazione is null
                    and   a.validita_fine is null;

                    if coalesce(flussoElabMifValore,NVL_STR)!=NVL_STR then
                    	mifFlussoOrdinativoRec.mif_ord_class_codice_cup:=flussoElabMifValore;
                    end if;


                    if mifFlussoOrdinativoRec.mif_ord_class_codice_cup is null then
                    	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore '||cupAttrCode||' [siac_r_liquidazione_attr].';

                    	select a.testo into flussoElabMifValore
                        from siac_r_liquidazione_attr  a
                        where a.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
                        and   a.attr_id=cupAttrId
                        and   a.data_cancellazione is null
	                    and   a.validita_fine is null;


                        if coalesce(flussoElabMifValore,NVL_STR)!=NVL_STR then
    	                	mifFlussoOrdinativoRec.mif_ord_class_codice_cup:=flussoElabMifValore;
	                    end if;
                    end if;
                end if;
            end if;
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

      -- <codice_cpv>
      mifCountRec:=mifCountRec+1;

      -- <importo>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      flussoElabMifValoreDesc:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

	  if flussoElabMifElabRec.flussoElabMifAttivo=true then
       if flussoElabMifElabRec.flussoElabMifElab=true then
 	      	mifFlussoOrdinativoRec.mif_ord_class_importo:=mifFlussoOrdinativoRec.mif_ord_importo;
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

      -- </classificazione>

      -- <classificazione_dati_siope_uscite>
	  -- <tipo_debito_siope_c>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      isOrdCommerciale:=false;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
       if flussoElabMifElabRec.flussoElabMifElab=true then
        -- 21.12.2017 Sofia JIRA SIAC-5665
        if flussoElabMifElabRec.flussoElabMifParam is not null then
            flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            tipoDocsComm:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2))||'|'||
                      trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3))||'|'||
                      trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));

            isOrdCommerciale:=fnc_mif_ordinativo_esiste_documenti_splus( mifOrdinativoIdRec.mif_ord_ord_id,
                                                                         tipoDocsComm,
                                                   	                     enteProprietarioId
                                                                        );


/*        	if mifOrdinativoIdRec.mif_ord_siope_tipo_debito_id is not null then
                strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura tipo debito [siac_d_siope_tipo_debito].';
            	select tipo.siope_tipo_debito_desc_bnkit into flussoElabMifValore
                from siac_d_siope_tipo_debito tipo
                where tipo.siope_tipo_debito_id=mifOrdinativoIdRec.mif_ord_siope_tipo_debito_id;
            end if;

            if flussoElabMifValore is not null and
               upper(flussoElabMifValore)=flussoElabMifElabRec.flussoElabMifParam then
               mifFlussoOrdinativoRec.mif_ord_class_tipo_debito:=flussoElabMifElabRec.flussoElabMifParam;
               isOrdCommerciale:=true;
            end if;*/
            -- 21.12.2017 Sofia JIRA SIAC-5665
            if isOrdCommerciale=true then
            	mifFlussoOrdinativoRec.mif_ord_class_tipo_debito:=flussoElabMifValore;
            end if;
        end if;
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

	  -- <tipo_debito_siope_nc>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      mifCountRec:=mifCountRec+1;
      codResult:=null;
      if isOrdCommerciale=false then
       flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
       strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
       if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
       end if;
       if flussoElabMifElabRec.flussoElabMifAttivo=true then
        if flussoElabMifElabRec.flussoElabMifElab=true then
         if flussoElabMifElabRec.flussoElabMifDef is not null then
            -- 20.03.2018 Sofia SIAC-5968 - test sul pdcFin di OP per verificare se IVA
            if flussoElabMifElabRec.flussoElabMifParam is not null then
         	 if coalesce(tipoPdcIVA,'')='' then
	         	tipoPdcIVA:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
             end if;
             if coalesce(codePdcIVA,'')='' then
	         	codePdcIVA:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
             end if;

             if coalesce(tipoPdcIVA,'')!=''  and coalesce(codePdcIVA,'')!='' then
                strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Verifica tipo debito IVA.';
             	select 1 into codResult
                from siac_r_ordinativo_class rc, siac_t_class c, siac_d_class_tipo tipo
                where rc.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                and   c.classif_id=rc.classif_id
                and   tipo.classif_tipo_id=c.classif_tipo_id
                and   tipo.classif_tipo_code=tipoPdcIVA
                and   c.classif_code like codePdcIVA||'%'
                and   rc.data_cancellazione is null
                and   rc.validita_fine is null;

                if codResult is not null then
	               	flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,2));
                end if;
             end if;

            end if;

            -- 21.12.2017 Sofia JIRA SIAC-5665
            --mifFlussoOrdinativoRec.mif_ord_class_tipo_debito_nc:=flussoElabMifElabRec.flussoElabMifParam;

            -- 20.03.2018 Sofia SIAC-5968
            if flussoElabMifValore is null then
            	flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
            end if;
            -- 20.03.2018 Sofia SIAC-5968
			mifFlussoOrdinativoRec.mif_ord_class_tipo_debito_nc:=flussoElabMifValore;

         end if;
        else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
        end if;
       end if;
      end if;




      -- <codice_cig_siope>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      flussoElabMifValoreDesc:=null;
      mifCountRec:=mifCountRec+1;
      raise notice 'codice_cig_siope mifCountRec=%',mifCountRec;
      -- solo per COMMERCIALI
	  if isOrdCommerciale=true then
       flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
       strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
       if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
       end if;

       if flussoElabMifElabRec.flussoElabMifAttivo=true then
        if flussoElabMifElabRec.flussoElabMifElab=true then
			if flussoElabMifElabRec.flussoElabMifParam is not null then
            	if coalesce(cigAttrCode,NVL_STR)=NVL_STR then
                	cigAttrCode:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                end if;

                if coalesce(cigAttrCode,NVL_STR)!=NVL_STR and cigAttrCodeId is null then
                	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura attr_id '||cigAttrCode||'.';
                	select attr.attr_id into cigAttrCodeId
                    from siac_t_attr attr
                    where attr.ente_proprietario_id=enteProprietarioId
                    and   attr.attr_code=cigAttrCode
                    and   attr.data_cancellazione is null
                    and   attr.validita_fine is null;
                end if;

                if cigAttrCodeId is not null then
                	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore '||cupAttrCode||' [siac_r_ordinativo_attr].';

                	select a.testo into flussoElabMifValore
                    from siac_r_ordinativo_attr a
                    where a.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                    and   a.attr_id=cigAttrCodeId
                    and   a.data_cancellazione is null
                    and   a.validita_fine is null;

                    if coalesce(flussoElabMifValore,NVL_STR)!=NVL_STR then
                    	mifFlussoOrdinativoRec.mif_ord_class_cig:=flussoElabMifValore;
                    end if;


                    if mifFlussoOrdinativoRec.mif_ord_class_cig is null then
                    	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore '||cigAttrCode||' [siac_r_liquidazione_attr].';

                    	select a.testo into flussoElabMifValore
                        from siac_r_liquidazione_attr  a
                        where a.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
                        and   a.attr_id=cigAttrCodeId
                        and   a.data_cancellazione is null
	                    and   a.validita_fine is null;


                        if coalesce(flussoElabMifValore,NVL_STR)!=NVL_STR then
    	                	mifFlussoOrdinativoRec.mif_ord_class_cig:=flussoElabMifValore;
	                    end if;
                    end if;
                end if;
            end if;
        else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
        end if;
       end if;
      end if;

      -- <motivo_esclusione_cig_siope>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      mifCountRec:=mifCountRec+1;
      -- solo per COMMERCIALI
      if isOrdCommerciale=true and
         mifFlussoOrdinativoRec.mif_ord_class_cig is null then
       flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
       strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
       if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
       end if;

	   if flussoElabMifElabRec.flussoElabMifAttivo=true then
        if flussoElabMifElabRec.flussoElabMifElab=true then
       	  if mifOrdinativoIdRec.mif_ord_siope_assenza_motivazione_id is not null then
          	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura motivazione [siac_d_siope_assenza_motivazione].';
            raise notice 'siope_assenza_motivazione_desc_bnkit';
		  	select upper(ass.siope_assenza_motivazione_desc_bnkit) into flussoElabMifValore
			from siac_d_siope_assenza_motivazione ass
			where ass.siope_assenza_motivazione_id=mifOrdinativoIdRec.mif_ord_siope_assenza_motivazione_id;
          end if;
		  if flussoElabMifValore is not null then
	    	  mifFlussoOrdinativoRec.mif_ord_class_motivo_nocig:=flussoElabMifValore;
              raise notice 'siope_assenza_motivazione_desc_bnkit=%',mifFlussoOrdinativoRec.mif_ord_class_motivo_nocig;

          end if;
        else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
        end if;
       end if;
      end if;

      raise notice 'motivo_esclusione_cig_siope mifCountRec=%',mifCountRec;

      -- <fatture_siope>
      -- </fatture_siope>
      mifCountRec:=mifCountRec+12;

      -- <dati_ARCONET_siope>


      -- <codice_missione_siope>
	  flussoElabMifElabRec:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
       if flussoElabMifElabRec.flussoElabMifElab=true then
    	  mifFlussoOrdinativoRec.mif_ord_class_missione:=SUBSTRING(mifOrdinativoIdRec.mif_ord_programma_code from 1 for 2);
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

      raise notice 'codice_missione_siope mifCountRec=%',mifCountRec;

      -- <codice_programma_siope>
	  flussoElabMifElabRec:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
       if flussoElabMifElabRec.flussoElabMifElab=true then
    	  mifFlussoOrdinativoRec.mif_ord_class_programma:=mifOrdinativoIdRec.mif_ord_programma_code;
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

      -- <codice_economico_siope>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      mifCountRec:=mifCountRec+1;
                              raise notice 'codice_economico_siope mifCountRec=%',mifCountRec;

      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
       if flussoElabMifElabRec.flussoElabMifElab=true then
        if flussoElabMifElabRec.flussoElabMifParam is not null then

          if codiceFinVTbr is null then
				codiceFinVTbr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
          end if;

		  if codiceFinVTbr is not null and codiceFinVTipoTbrId is null then
		  	-- codiceFinVTipoTbrId
            strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'.Lettura ID codice tipo='||codiceFinVTbr||'.';
			select tipo.classif_tipo_id into strict codiceFinVTipoTbrId
			from siac_d_class_tipo tipo
			where tipo.ente_proprietario_id=enteProprietarioId
			and   tipo.classif_tipo_code=codiceFinVTbr
			and   tipo.data_cancellazione is null
			and   date_trunc('day',dataElaborazione)>=date_trunc('day',validita_inizio)
		    and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(validita_fine,dataElaborazione));
          end if;

          if codiceFinVTipoTbrId is not null then
          	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore per codice tipo='||codiceFinVTbr||'.';

            select class.classif_code  into flussoElabMifValore
		   	from siac_r_ordinativo_class r, siac_t_class class
			where r.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
		    and   class.classif_id=r.classif_id
		    and   class.classif_tipo_id=codiceFinVTipoTbrId
		    and   r.data_cancellazione is null
		    and   r.validita_fine is NULL
		    and   class.data_cancellazione is null;

          	if   flussoElabMifValore is null then
             strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore per codice tipo='||codiceFinVTbr||'.';

             select class.classif_code  into flussoElabMifValore
 		   	 from siac_r_liquidazione_class r, siac_t_class class
			 where r.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
		     and   class.classif_id=r.classif_id
		     and   class.classif_tipo_id=codiceFinVTipoTbrId
		     and   r.data_cancellazione is null
		     and   r.validita_fine is NULL
		     and   class.data_cancellazione is null;
            end if;
          end if;
/*
       	  if collEventoCodeId is null then
        	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'Lettura tipo coll. evento '||flussoElabMifElabRec.flussoElabMifParam||'.';


            select coll.collegamento_tipo_id into collEventoCodeId
            from siac_d_collegamento_tipo coll
            where coll.ente_proprietario_id=enteProprietarioId
            and   coll.collegamento_tipo_code=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1))
            and   coll.data_cancellazione is null
		    and   date_trunc('day',dataElaborazione)>=date_trunc('day',coll.validita_inizio)
		    and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(coll.validita_fine,dataElaborazione));

         end if;

	     if collEventoCodeId is not null then
		  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'Lettura conto economico patrimoniale.';
                             raise notice 'QUI QUI strMessaggio=%',strMessaggio;

          select conto.pdce_conto_code into flussoElabMifValore
          from siac_t_pdce_conto conto, siac_t_reg_movfin regMovFin, siac_r_evento_reg_movfin rEvento,
               siac_d_evento evento,
               siac_t_mov_ep reg, siac_r_reg_movfin_stato regstato, siac_d_reg_movfin_stato stato,
               siac_t_prima_nota pn, siac_r_prima_nota_stato rpnota, siac_d_prima_nota_stato pnstato,
               siac_t_mov_ep_det det
          where evento.ente_proprietario_id=enteProprietarioId
          and   evento.collegamento_tipo_id=collEventoCodeId -- OP
          and   rEvento.evento_id=evento.evento_id
          and   rEvento.campo_pk_id=mifOrdinativoIdRec.mif_ord_ord_id
          and   regMovFin.regmovfin_id=rEvento.regmovfin_id
--          and   regMovFin.ambito_id=ambitoFinId  -- AMBITO_FIN togliamo ambito
          and   regstato.regmovfin_id=regMovFin.regmovfin_id
          and   stato.regmovfin_stato_id=regstato.regmovfin_stato_id
          and   stato.regmovfin_stato_code!=REGMOVFIN_STATO_A
          and   reg.regmovfin_id=regMovFin.regmovfin_id
          and   pn.pnota_id=reg.regep_id
          and   rpnota.pnota_id=pn.pnota_id
          and   pnstato.pnota_stato_id=rpnota.pnota_stato_id
          and   pnstato.pnota_stato_code!=REGMOVFIN_STATO_A  -- forse sarebbe meglio prendere solo i D
          and   det.movep_id=reg.movep_id
          and   det.movep_det_segno=SEGNO_ECONOMICO -- Dare
		  and   conto.pdce_conto_id=det.pdce_conto_id
          and   regMovFin.data_cancellazione is null
          and   regMovFin.validita_fine is null
          and   rEvento.data_cancellazione is null
          and   rEvento.validita_fine is null
          and   evento.data_cancellazione is null
          and   evento.validita_fine is null
          and   reg.data_cancellazione is null
          and   reg.validita_fine is null
          and   regstato.data_cancellazione is null
          and   regstato.validita_fine is null
          and   pn.data_cancellazione is null
          and   pn.validita_fine is null
          and   rpnota.data_cancellazione is null
          and   rpnota.validita_fine is null
          and   conto.data_cancellazione is null
          and   conto.validita_fine is null
          order by pn.pnota_id desc
          limit 1;
         end if;
*/
       end if;


        if flussoElabMifValore is not null then
	        mifFlussoOrdinativoRec.mif_ord_class_economico:=flussoElabMifValore;
        end if;
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

	  -- <importo_codice_economico_siope>
	  mifCountRec:=mifCountRec+1;
      if mifFlussoOrdinativoRec.mif_ord_class_economico is not null then
      	flussoElabMifElabRec:=null;
	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
                                                    raise notice 'QUI QUI strMessaggio=%',strMessaggio;

	    if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    	end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         		mifFlussoOrdinativoRec.mif_ord_class_importo_economico:=mifFlussoOrdinativoRec.mif_ord_importo;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;
      end if;

      -- <codice_UE_siope>
      flussoElabMifElabRec:=null;
	  flussoElabMifValore:=null;
	  codResult:=null;
	  mifCountRec:=mifCountRec+1;
            raise notice 'codice_UE_siope mifCountRec=%',mifCountRec;

	  flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	  if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	  end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
	   	if flussoElabMifElabRec.flussoElabMifElab=true then
    	 if flussoElabMifElabRec.flussoElabMifParam is not null then
     		if codiceUECodeTipo is null then
				codiceUECodeTipo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
	        end if;

            if codiceUECodeTipo is not null and codiceUECodeTipoId is null then
        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_d_class_tipo.';

        	 select tipo.classif_tipo_id into codiceUECodeTipoId
             from  siac_d_class_tipo tipo
             where tipo.ente_proprietario_id=enteProprietarioId
             and   tipo.classif_tipo_code=codiceUECodeTipo
             and   tipo.data_cancellazione is null
		     and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
		 	 and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));
            end if;

	        if codiceUECodeTipoId is not null then
        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_r_ordinativo_class.';
                             raise notice 'QUI QUI codiceUECodeTipo=% strMessaggio=%',codiceUECodeTipo,strMessaggio;

        	 select class.classif_code into flussoElabMifValore
             from siac_r_ordinativo_class rclass, siac_t_class class
             where rclass.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
             and   rclass.data_cancellazione is null
             and   rclass.validita_fine is null
             and   class.classif_id=rclass.classif_id
             and   class.classif_tipo_id=codiceUECodeTipoId
             and   class.data_cancellazione is null
             order by rclass.ord_classif_id
             limit 1;

                             raise notice '222QUI QUI codiceUECodeTipo=% strMessaggio=%',codiceUECodeTipo,strMessaggio;

             if flussoElabMifValore is null then
        	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_r_liquidazione_class.';
        	  select class.classif_code into flussoElabMifValore
              from siac_r_liquidazione_class rclass, siac_t_class class
              where rclass.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
              and   rclass.data_cancellazione is null
              and   rclass.validita_fine is null
              and   class.classif_id=rclass.classif_id
              and   class.classif_tipo_id=codiceUECodeTipoId
              and   class.data_cancellazione is null
              order by rclass.liq_classif_id
              limit 1;
             end if;
	        end if;

      	    if flussoElabMifValore is not null then
                raise notice 'QUI QUI flussoElabMifValore=%',flussoElabMifValore;
            	mifFlussoOrdinativoRec.mif_ord_class_transaz_ue:=flussoElabMifValore;
            end if;

      	 end if;
        else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		end if;
	  end if;

      -- <codice_uscita_siope>
      flussoElabMifElabRec:=null;
	  flussoElabMifValore:=null;
	  codResult:=null;
	  mifCountRec:=mifCountRec+1;
                  raise notice 'codice_uscita_siope mifCountRec=%',mifCountRec;

	  flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	  if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	  end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
	   	if flussoElabMifElabRec.flussoElabMifElab=true then
    	 if flussoElabMifElabRec.flussoElabMifParam is not null then
     		if ricorrenteCodeTipo is null then
				ricorrenteCodeTipo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
	        end if;

            if ricorrenteCodeTipo is not null and ricorrenteCodeTipoId is null then
        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_d_class_tipo.';

        	 select tipo.classif_tipo_id into ricorrenteCodeTipoId
             from  siac_d_class_tipo tipo
             where tipo.ente_proprietario_id=enteProprietarioId
             and   tipo.classif_tipo_code=ricorrenteCodeTipo
             and   tipo.data_cancellazione is null
		     and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
		 	 and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));
            end if;

	        if ricorrenteCodeTipoId is not null then
        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_r_ordinativo_class.';
                                                    raise notice 'QUI QUI strMessaggio=%',strMessaggio;

        	 select upper(class.classif_desc) into flussoElabMifValore
             from siac_r_ordinativo_class rclass, siac_t_class class
             where rclass.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
             and   rclass.data_cancellazione is null
             and   rclass.validita_fine is null
             and   class.classif_id=rclass.classif_id
             and   class.classif_tipo_id=ricorrenteCodeTipoId
             and   class.data_cancellazione is null
             order by rclass.ord_classif_id
             limit 1;


             if flussoElabMifValore is null then
        	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_r_liquidazione_class.';
        	  select upper(class.classif_desc) into flussoElabMifValore
              from siac_r_liquidazione_class rclass, siac_t_class class
              where rclass.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
              and   rclass.data_cancellazione is null
              and   rclass.validita_fine is null
              and   class.classif_id=rclass.classif_id
              and   class.classif_tipo_id=ricorrenteCodeTipoId
              and   class.data_cancellazione is null
              order by rclass.liq_classif_id
              limit 1;
             end if;
	        end if;

      	    if flussoElabMifValore is not null then
            	mifFlussoOrdinativoRec.mif_ord_class_ricorrente_spesa:=flussoElabMifValore;
            end if;

      	 end if;
        else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		end if;
	  end if;


      -- <codice_cofog_siope>
      flussoElabMifElabRec:=null;
	  flussoElabMifValore:=null;
	  codResult:=null;
	  mifCountRec:=mifCountRec+1;
                        raise notice 'codice_cofog_siope mifCountRec=%',mifCountRec;

	  flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	  if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	  end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
	   	if flussoElabMifElabRec.flussoElabMifElab=true then
    	 if flussoElabMifElabRec.flussoElabMifParam is not null then
     		if codiceCofogCodeTipo is null then
				codiceCofogCodeTipo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
	        end if;

            if codiceCofogCodeTipo is not null and codiceCofogCodeTipoId is null then
        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_d_class_tipo.';

        	 select tipo.classif_tipo_id into codiceCofogCodeTipoId
             from  siac_d_class_tipo tipo
             where tipo.ente_proprietario_id=enteProprietarioId
             and   tipo.classif_tipo_code=codiceCofogCodeTipo
             and   tipo.data_cancellazione is null
		     and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
		 	 and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));
            end if;

	        if codiceCofogCodeTipoId is not null then
        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_r_ordinativo_class.';
                                                    raise notice 'QUI QUI strMessaggio=%',strMessaggio;

        	 select class.classif_code into flussoElabMifValore
             from siac_r_ordinativo_class rclass, siac_t_class class
             where rclass.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
             and   rclass.data_cancellazione is null
             and   rclass.validita_fine is null
             and   class.classif_id=rclass.classif_id
             and   class.classif_tipo_id=codiceCofogCodeTipoId
             and   class.data_cancellazione is null
             order by rclass.ord_classif_id
             limit 1;


             if flussoElabMifValore is null then
        	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_r_liquidazione_class.';
        	  select class.classif_code into flussoElabMifValore
              from siac_r_liquidazione_class rclass, siac_t_class class
              where rclass.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
              and   rclass.data_cancellazione is null
              and   rclass.validita_fine is null
              and   class.classif_id=rclass.classif_id
              and   class.classif_tipo_id=codiceCofogCodeTipoId
              and   class.data_cancellazione is null
              order by rclass.liq_classif_id
              limit 1;
             end if;
	        end if;

      	    if flussoElabMifValore is not null then
            	mifFlussoOrdinativoRec.mif_ord_class_cofog_codice:=flussoElabMifValore;
            end if;

      	 end if;
        else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		end if;
	  end if;

      -- <importo_cofog_siope>
  	  mifCountRec:=mifCountRec+1;
      if mifFlussoOrdinativoRec.mif_ord_class_cofog_codice is not null then
       flussoElabMifElabRec:=null;
	   flussoElabMifValore:=null;
	   flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	   if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	   end if;
       if flussoElabMifElabRec.flussoElabMifAttivo=true then
	     if flussoElabMifElabRec.flussoElabMifElab=true then
        		mifFlussoOrdinativoRec.mif_ord_class_cofog_importo:=mifFlussoOrdinativoRec.mif_ord_importo;

         else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		 end if;
	    end if;
       end if;

      -- </dati_ARCONET_siope>

      -- </classificazione_dati_siope_uscite>

      -- <bollo>
      -- <assoggettamento_bollo>
   	  mifCountRec:=mifCountRec+1;
      ordCodiceBolloDesc:=null;
      codiceBolloPlusDesc:=null;
      codiceBolloPlusEsente:=false;
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      if mifOrdinativoIdRec.mif_ord_codbollo_id is not null then


	   flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
  	    end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
	   	  if flussoElabMifElabRec.flussoElabMifElab=true then

          	if flussoElabMifElabRec.flussoElabMifParam is not null and
               flussoElabMifElabRec.flussoElabMifDef is not null and
               mifFlussoOrdinativoRec.mif_ord_pagam_tipo is not null and
               mifFlussoOrdinativoRec.mif_ord_pagam_tipo in
                 (trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1)), -- REGOLARIZZAZIONE
                  trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2))  -- F24EP
                 ) then

               codiceBolloPlusEsente:=true;
               -- REGOLARIZZAZIONE
               if mifFlussoOrdinativoRec.mif_ord_pagam_tipo=
                  trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1)) then
                  mifFlussoOrdinativoRec.mif_ord_bollo_carico:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
               	  mifFlussoOrdinativoRec.mif_ordin_bollo_caus_esenzione:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,2));
               end if;
               -- F24EP
               if mifFlussoOrdinativoRec.mif_ord_pagam_tipo=
                  trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2)) then
                  mifFlussoOrdinativoRec.mif_ord_bollo_carico:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
               	  mifFlussoOrdinativoRec.mif_ordin_bollo_caus_esenzione:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
               end if;
            end if;

            if mifFlussoOrdinativoRec.mif_ord_bollo_carico is null then
          	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura codice bollo.';

             select bollo.codbollo_desc , plus.codbollo_plus_desc, plus.codbollo_plus_esente
                   into ordCodiceBolloDesc, codiceBolloPlusDesc, codiceBolloPlusEsente
             from siac_d_codicebollo bollo, siac_d_codicebollo_plus plus, siac_r_codicebollo_plus rp
             where bollo.codbollo_id=mifOrdinativoIdRec.mif_ord_codbollo_id
             and   rp.codbollo_id=bollo.codbollo_id
             and   plus.codbollo_plus_id=rp.codbollo_plus_id
             and   rp.data_cancellazione is null
             and   rp.validita_fine is null;

             if coalesce(codiceBolloPlusDesc,NVL_STR)!=NVL_STR  then
            	mifFlussoOrdinativoRec.mif_ord_bollo_carico:=codiceBolloPlusDesc;
             end if;
            end if;
          else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		  end if;
        end if;
       end if;

      -- <causale_esenzione_bollo>
   	  mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=null;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      if codiceBolloPlusEsente=true and coalesce(ordCodiceBolloDesc,NVL_STR)!=NVL_STR then
      	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
  	    end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
	   	  if flussoElabMifElabRec.flussoElabMifElab=true then
            if mifFlussoOrdinativoRec.mif_ordin_bollo_caus_esenzione is null then
--              27.06.2018 Sofia siac-6272
--	          	mifFlussoOrdinativoRec.mif_ordin_bollo_caus_esenzione:=substring(ordCodiceBolloDesc from 1 for 30);
                mifFlussoOrdinativoRec.mif_ordin_bollo_caus_esenzione:=ordCodiceBolloDesc;
            end if;
          else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		  end if;
        end if;
      end if;
      -- </bollo>

	  -- <spese>
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      ordCodiceBolloDesc:=null;
      codiceBolloPlusDesc:=null;
      codiceBolloPlusEsente:=false;
      -- <soggetto_destinatario_delle_spese>
      if mifOrdinativoIdRec.mif_ord_comm_tipo_id is not null then
	   flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
  	    end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
	   	  if flussoElabMifElabRec.flussoElabMifElab=true then
          	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura codice commissione.';

            select tipo.comm_tipo_desc , plus.comm_tipo_plus_desc, plus.comm_tipo_plus_esente
                   into ordCodiceBolloDesc, codiceBolloPlusDesc, codiceBolloPlusEsente
            from siac_d_commissione_tipo tipo, siac_d_commissione_tipo_plus plus, siac_r_commissione_tipo_plus rp
            where tipo.comm_tipo_id=mifOrdinativoIdRec.mif_ord_comm_tipo_id
            and   rp.comm_tipo_id=tipo.comm_tipo_id
            and   plus.comm_tipo_plus_id=rp.comm_tipo_plus_id
            and   rp.data_cancellazione is null
            and   rp.validita_fine is null;

            if coalesce(codiceBolloPlusDesc,NVL_STR)!=NVL_STR  then
            	mifFlussoOrdinativoRec.mif_ord_commissioni_carico:=codiceBolloPlusDesc;
            end if;
          else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		  end if;
        end if;
      end if;
      -- <natura_pagamento>
      mifCountRec:=mifCountRec+1;

      -- <causale_esenzione_spese>
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      if codiceBolloPlusEsente=true and mifFlussoOrdinativoRec.mif_ord_commissioni_carico is not null then
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
       if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
  	   end if;
       if flussoElabMifElabRec.flussoElabMifAttivo=true then
	   	  if flussoElabMifElabRec.flussoElabMifElab=true then
          	mifFlussoOrdinativoRec.mif_ord_commissioni_esenzione:=ordCodiceBolloDesc;
          else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		  end if;
       end if;
      end if;
      -- </spese>

	  -- <beneficiario>
      mifCountRec:=mifCountRec+1;
      -- <anagrafica_beneficiario>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      mifCountRec:=mifCountRec+1;
      anagraficaBenefCBI:=null;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
--       raise notice 'beneficiario mifCountRec=%',mifCountRec;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if soggettoSedeSecId is not null then
            	flussoElabMifValore:=soggettoRec.soggetto_desc||' '||soggettoSedeRec.soggetto_desc;
            else
            	flussoElabMifValore:=soggettoRec.soggetto_desc;
            end if;

            /*if flussoElabMifElabRec.flussoElabMifParam is not null and tipoMDPCbi is null then
	           	tipoMDPCbi:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            end if; */

            -- se non e girofondo o se lo e ma il contocorrente_intestazione e vuoto
            -- valorizzo i tag di anagrafica_beneficiario
            -- altrimenti solo anagrafica_beneficiario=contocorrente_intestazione
            -- e anagrafica_beneficiario in dati_a_disposizione_ente
            /*if codAccreRec.accredito_gruppo_code!=tipoMDPCbi or
			   (codAccreRec.accredito_gruppo_code=tipoMDPCbi and
                 (MDPRec.contocorrente_intestazione is null or MDPRec.contocorrente_intestazione='')) then
	           	mifFlussoOrdinativoRec.mif_ord_anag_benef:=substring(flussoElabMifValore from 1 for 140);
            else
	            	anagraficaBenefCBI:=flussoElabMifValore;
	                mifFlussoOrdinativoRec.mif_ord_anag_benef:=substring(MDPRec.contocorrente_intestazione from 1 for 140);
            end if;*/

            mifFlussoOrdinativoRec.mif_ord_anag_benef:=substring(flussoElabMifValore from 1 for 140);

       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
     end if;



	 -- <indirizzo_beneficiario>
     flussoElabMifElabRec:=null;
     flussoElabMifValore:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' indirizzo_benef mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

     if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;

     if flussoElabMifElabRec.flussoElabMifAttivo=true then
       if flussoElabMifElabRec.flussoElabMifElab=true then
        	if soggettoSedeSecId is not null then
                select * into indirizzoRec
                from siac_t_indirizzo_soggetto indir
                where indir.soggetto_id=soggettoSedeSecId
                and   indir.data_cancellazione is null
                and   indir.validita_fine is null;

            else
            	select * into indirizzoRec
                from siac_t_indirizzo_soggetto indir
                where indir.soggetto_id=soggettoRifId
                and   indir.principale='S'
                and   indir.data_cancellazione is null
         	    and   indir.validita_fine is null;

            end if;

            if indirizzoRec is null then
            	-- RAISE EXCEPTION ' Errore in lettura indirizzo soggetto [siac_t_indirizzo_soggetto].';
                isIndirizzoBenef:=false;
            end if;

            if isIndirizzoBenef=true then

             if indirizzoRec.via_tipo_id is not null then
            	select tipo.via_tipo_code into flussoElabMifValore
                from siac_d_via_tipo tipo
                where tipo.via_tipo_id=indirizzoRec.via_tipo_id
                and   tipo.data_cancellazione is null
         	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		 		and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));
                if flussoElabMifValore is not null then
                	flussoElabMifValore:=flussoElabMifValore||' ';
                end if;
             end if;

             flussoElabMifValore:=trim(both from coalesce(flussoElabMifValore,'')||coalesce(indirizzoRec.toponimo,'')
                                 ||' '||coalesce(indirizzoRec.numero_civico,''));

             if flussoElabMifValore is not null and anagraficaBenefCBI is null then
	            mifFlussoOrdinativoRec.mif_ord_indir_benef:=substring(flussoElabMifValore from 1 for 30);
             end if;
           end if;
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

   	  -- <cap_beneficiario>
      mifCountRec:=mifCountRec+1;
      if isIndirizzoBenef=true then
        if indirizzoRec.zip_code is not null and anagraficaBenefCBI is null then
         flussoElabMifElabRec:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
	            mifFlussoOrdinativoRec.mif_ord_cap_benef:=lpad(indirizzoRec.zip_code,5,'0');
          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
         end if;
        end if;
	  end if;

      -- <localita_beneficiario>
      mifCountRec:=mifCountRec+1;
      if isIndirizzoBenef=true then

        if indirizzoRec.comune_id is not null and anagraficaBenefCBI is null then
         flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;

	     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
          	select com.comune_desc into flussoElabMifValore
            from siac_t_comune com
            where com.comune_id=indirizzoRec.comune_id
            and   com.data_cancellazione is null
            and   com.validita_fine is null;

            if flussoElabMifValore is not null then
	            mifFlussoOrdinativoRec.mif_ord_localita_benef:=substring(flussoElabMifValore from 1 for 30);
            end if;
          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
         end if;
        end if;
      end if;


	  -- <provincia_beneficiario>
      mifCountRec:=mifCountRec+1;
      if isIndirizzoBenef=true then

        if indirizzoRec.comune_id is not null and anagraficaBenefCBI is null then
         flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
          	select prov.sigla_automobilistica into flussoElabMifValore
            from siac_r_comune_provincia provRel, siac_t_provincia prov
            where provRel.comune_id=indirizzoRec.comune_id
            and   provRel.data_cancellazione is null
            and   provRel.validita_fine is null
            and   prov.provincia_id=provRel.provincia_id
            and   prov.data_cancellazione is null
            and   prov.validita_fine is null
            order by provRel.data_creazione;

            if flussoElabMifValore is not null then
	            mifFlussoOrdinativoRec.mif_ord_prov_benef:=flussoElabMifValore;
            end if;
          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
         end if;
        end if;
      end if;

      -- <stato_beneficiario>
      mifCountRec:=mifCountRec+1; -- popolare in seguito ricavato il codice_paese di piazzatura
      flussoElabMifElabRec:=null;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
        if flussoElabMifElabRec.flussoElabMifElab=true then
          if anagraficaBenefCBI is null and
             statoBeneficiario=false then
	            statoBeneficiario:=true;
           end if;
         else
           RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
      end if;

	  -- <partita_iva_beneficiario>
      mifCountRec:=mifCountRec+1;
      if ( anagraficaBenefCBI is null and
            (soggettoRec.partita_iva is not null or
            (soggettoRec.partita_iva is null and soggettoRec.codice_fiscale is not null and length(soggettoRec.codice_fiscale)=11))
          )   then
      	 flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
          	    if soggettoRec.partita_iva is not null then
		            mifFlussoOrdinativoRec.mif_ord_partiva_benef:=soggettoRec.partita_iva;
                else
                    if length(trim ( both ' ' from soggettoRec.codice_fiscale))=11 then
                        mifFlussoOrdinativoRec.mif_ord_partiva_benef:=trim ( both ' ' from soggettoRec.codice_fiscale);
                    end if;
                end if;
          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
         end if;
      end if;

       -- <codice_fiscale_beneficiario>
      mifCountRec:=mifCountRec+1;
--      if mifFlussoOrdinativoRec.mif_ord_partiva_benef is null and anagraficaBenefCBI is null then
      	 flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
            -- se CASSA codice_fiscale obbligatorio
          	if flussoElabMifElabRec.flussoElabMifParam is not null then
		            if tipoMDPCo is null then
                    	tipoMDPCo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                	end if;

                    if tipoMDPCo is not null and
                       tipoMDPCo=codAccreRec.accredito_gruppo_code then
                       if soggettoRec.codice_fiscale is not null then
                    	flussoElabMifValore:=trim ( both ' ' from soggettoRec.codice_fiscale);
                       else
	                    if mifFlussoOrdinativoRec.mif_ord_partiva_benef is not null then
     	                   flussoElabMifValore:=mifFlussoOrdinativoRec.mif_ord_partiva_benef;
                        end if;
                       end if;
                    end if;
            end if;

            -- se non CASSA valorizzato se partita iva non presente e  codice_fiscale=16
            if flussoElabMifValore is null and
               mifFlussoOrdinativoRec.mif_ord_partiva_benef is null and
               soggettoRec.codice_fiscale is not null and
               length(soggettoRec.codice_fiscale)=16 then
               flussoElabMifValore:=trim ( both ' ' from soggettoRec.codice_fiscale);
            end if;

            if flussoElabMifValore is not null then
		             mifFlussoOrdinativoRec.mif_ord_codfisc_benef:=flussoElabMifValore;
            end if;
          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
         end if;
--        end if;
      -- </beneficiario>


      -- <delegato>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      isMDPCo:=false;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
        if flussoElabMifElabRec.flussoElabMifElab=true then
         	if flussoElabMifElabRec.flussoElabMifParam is not null then
                    if tipoMDPCo is null then
                    	tipoMDPCo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                	end if;

                    if tipoMDPCo is not null and
                       tipoMDPCo=codAccreRec.accredito_gruppo_code then
                    	isMDPCo:=true;
                    end if;

					if isMDPCo=true and -- non esporre se REGOLARIZZAZIONE ( provvisori di cassa )
                       mifFlussoOrdinativoRec.mif_ord_pagam_tipo is not null and
            		   ( mifFlussoOrdinativoRec.mif_ord_pagam_tipo=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2))
                         or
                         mifFlussoOrdinativoRec.mif_ord_pagam_tipo=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3))
                       )  then -- 20.12.2017 Sofia Jira SIAC-5665
			             isMDPCo=false;
			        end if;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
      end if;

      -- <anagrafica_delegato>
      mifCountRec:=mifCountRec+1;
      if isMDPCo=true and MDPRec.quietanziante is not null then
        	flussoElabMifElabRec:=null;
      		flussoElabMifValore:=null;

     	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
		    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        	if flussoElabMifElabRec.flussoElabMifId is null then
	            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    	    end if;
            if flussoElabMifElabRec.flussoElabMifAttivo=true then
         		if flussoElabMifElabRec.flussoElabMifElab=true then
                   	mifFlussoOrdinativoRec.mif_ord_anag_quiet:=MDPRec.quietanziante;
           		else
           			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
		         end if;
	        end if;
      end if;

      mifCountRec:=mifCountRec+7;
--      raise notice 'codfisc_quiet mifCountRec=%',mifCountRec;
      -- <codice_fiscale_delegato>
      if isMDPCo=true and mifFlussoOrdinativoRec.mif_ord_anag_quiet is not null and
         MDPRec.quietanziante_codice_fiscale is not null  and
         length(MDPRec.quietanziante_codice_fiscale)=16   then
             flussoElabMifElabRec:=null;
      		 flussoElabMifValore:=null;
             flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec]; -- 72
		     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        	 if flussoElabMifElabRec.flussoElabMifId is null then
	            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    	     end if;
             if flussoElabMifElabRec.flussoElabMifAttivo=true then
         		if flussoElabMifElabRec.flussoElabMifElab=true then
                   	flussoElabMifValore:=trim ( both ' ' from MDPRec.quietanziante_codice_fiscale);

                    if flussoElabMifValore is not null then
                    	mifFlussoOrdinativoRec.mif_ord_codfisc_quiet:=flussoElabMifValore;
                    end if;

           		else
           			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
		        end if;
	         end if;
      end if;
      -- </delegato>

	  -- <creditore_effettivo>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      soggettoQuietRec:=null;
      soggettoQuietRifRec:=null;
      soggettoQuietId:=null;
      soggettoQuietRifId:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then

	      /* -- 20.04.2018 Sofia JIRA SIAC-6097
          if flussoElabMifElabRec.flussoElabMifParam is not null and
             mifFlussoOrdinativoRec.mif_ord_pagam_tipo is not null and
             ( mifFlussoOrdinativoRec.mif_ord_pagam_tipo=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3))
               or
               mifFlussoOrdinativoRec.mif_ord_pagam_tipo=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4))
               or -- 13.04.2018 Sofia JIRA SIAC-6097
               mifFlussoOrdinativoRec.mif_ord_pagam_tipo=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,5))
               or
               mifFlussoOrdinativoRec.mif_ord_pagam_tipo=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,6))
                 -- 13.04.2018 Sofia JIRA SIAC-6097
               or
               mifFlussoOrdinativoRec.mif_ord_pagam_tipo=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,7))
                 -- 19.04.2018 Sofia JIRA SIAC-6097
             )   then -- 20.12.2017 Sofia JIRA siac-5665

          end if;*/


          -- 20.04.2018 Sofia JIRA SIAC-6097
          if flussoElabMifElabRec.flussoElabMifParam is not null and
           mifFlussoOrdinativoRec.mif_ord_pagam_tipo is not null  then

           flussoElabMifValore:= regexp_replace(flussoElabMifElabRec.flussoElabMifParam,
                                                trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1))||'.'||
                                                trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2))||'.',
							                    '');
 		   if  fnc_mif_ordinativo_esenzione_bollo(mifFlussoOrdinativoRec.mif_ord_pagam_tipo,flussoElabMifValore)=true  then
	           flussoElabMifElabRec.flussoElabMifElab=false;
               flussoElabMifValore:=null;
           end if;
          end if;

          if flussoElabMifElabRec.flussoElabMifElab=true then -- non esporre su regolarizzazione (provvisori)
           if  ordCsiRelazTipoId is null then
            if ordCsiRelazTipo is null then
            	if flussoElabMifElabRec.flussoElabMifParam is not null then
	                ordCsiRelazTipo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                    ordCsiCOTipo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                end if;
            end if;

            if ordCsiRelazTipo is  not null then
                select tipo.oil_relaz_tipo_id into ordCsiRelazTipoId
               	from siac_d_oil_relaz_tipo tipo
	            where tipo.ente_proprietario_id=enteProprietarioId
    	          and tipo.oil_relaz_tipo_code=ordCsiRelazTipo
        	      and tipo.data_cancellazione is null
                  and tipo.validita_fine is null;
            end if;
           end if;

           if ordCsiRelazTipoId is not null and
              ( ordCsiCOTipo is null or ordCsiCOTipo!=codAccreRec.accredito_gruppo_code ) then

                soggettoQuietId:=MDPRec.soggetto_id;

                select sogg.*
                       into  soggettoQuietRec
                from siac_t_soggetto sogg, siac_r_soggrel_modpag relmdp,siac_r_soggetto_relaz relsogg,
                     siac_r_oil_relaz_tipo roil
                where sogg.soggetto_id=MDPRec.soggetto_id
                and   sogg.data_cancellazione is null
                and   sogg.validita_fine is null
                and   relmdp.modpag_id=MDPRec.modpag_id
                and   relmdp.data_cancellazione is null
                -- and   relmdp.validita_fine is null 04.04.2018 Sofia SIAC-6064
                -- 04.04.2018 Sofia SIAC-6064
			    and date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(relmdp.validita_fine,dataElaborazione))
    			and   relmdp.soggetto_relaz_id=relsogg.soggetto_relaz_id
                and   relsogg.soggetto_id_a=MDPRec.soggetto_id
                and   relsogg.soggetto_id_da=soggettoRifId
                and   roil.relaz_tipo_id=relsogg.relaz_tipo_id
                and   roil.oil_relaz_tipo_id=ordCsiRelazTipoId
                and   relsogg.data_cancellazione is null
                and   relsogg.validita_fine is null
                and   roil.data_cancellazione is null
                and   roil.validita_fine is null;

				if soggettoQuietRec is null then
                	soggettoQuietId:=null;
                end if;

               if soggettoQuietId is not null then
                 select sogg.*
                        into soggettoQuietRifRec
		         from  siac_t_soggetto sogg, siac_r_soggetto_relaz rel
		         where rel.soggetto_id_a=soggettoQuietRec.soggetto_id
		         and   rel.relaz_tipo_id=ordSedeSecRelazTipoId
		         and   rel.ente_proprietario_id=enteProprietarioId
		         and   rel.data_cancellazione is null
                 and   rel.validita_fine is null
                 and   sogg.soggetto_id=rel.soggetto_id_da
		         and   sogg.data_cancellazione is null
                 and   sogg.validita_fine is null;


                 if soggettoQuietRifRec is null then

                 else
                 	soggettoQuietRifId:=soggettoQuietRifRec.soggetto_id;
                 end if;
               end if;
            end if;
          end if;
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

      mifCountRec:=mifCountRec+1;
  	  -- <anagrafica_creditore_effettivo>
      if soggettoQuietId is not null then
         flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;

	     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec]; --63
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
         	if flussoElabMifElabRec.flussoElabMifElab=true then
	            if soggettoQuietRifId is not null then
    	        	flussoElabMifValore:=soggettoQuietRifRec.soggetto_desc||' '||soggettoQuietRec.soggetto_desc;
        	    else
            		flussoElabMifValore:=soggettoQuietRec.soggetto_desc;
	            end if;

                if flussoElabMifValore is not null then
--                	mifFlussoOrdinativoRec.mif_ord_anag_del:=substring(flussoElabMifValore from 1 for 140);

                    -- 24.01.2018 Sofia jira siac-5765 - scambio tag
                    -- in creditore_effettivo -- anagrafica_beneficiario
                    mifFlussoOrdinativoRec.mif_ord_anag_del:=mifFlussoOrdinativoRec.mif_ord_anag_benef;
                    mifFlussoOrdinativoRec.mif_ord_indir_del:=mifFlussoOrdinativoRec.mif_ord_indir_benef;
                    mifFlussoOrdinativoRec.mif_ord_cap_del:=mifFlussoOrdinativoRec.mif_ord_cap_benef;
                    mifFlussoOrdinativoRec.mif_ord_localita_del:=mifFlussoOrdinativoRec.mif_ord_localita_benef;
                    mifFlussoOrdinativoRec.mif_ord_prov_del:=mifFlussoOrdinativoRec.mif_ord_prov_benef;
                    mifFlussoOrdinativoRec.mif_ord_partiva_del:=mifFlussoOrdinativoRec.mif_ord_partiva_benef;
                    mifFlussoOrdinativoRec.mif_ord_codfisc_del:=mifFlussoOrdinativoRec.mif_ord_codfisc_benef;

                    -- 24.01.2018 Sofia jira siac-5765 - scambio tag
                    -- in anagrafica_beneficiario -- creditore_effettivo
                    mifFlussoOrdinativoRec.mif_ord_anag_benef:=substring(flussoElabMifValore from 1 for 140);

                end if;
         	else
            	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
         end if;
	  end if;

      mifCountRec:=mifCountRec+1;
      -- <indirizzo_creditore_effettivo>
      if soggettoQuietId is not null then
         flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;
         indirizzoRec:=null;
		 flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
         	if flussoElabMifElabRec.flussoElabMifElab=true then

                select * into indirizzoRec
                from siac_t_indirizzo_soggetto indir
                where indir.soggetto_id=soggettoQuietId
                and   (case when soggettoQuietRifId is null
                            then indir.principale='S' else coalesce(indir.principale,'N')='N' end)
                and   indir.data_cancellazione is null
                and   indir.validita_fine is null;

                if indirizzoRec is null then
                    isIndirizzoBenQuiet:=false;
            	end if;

			    if isIndirizzoBenQuiet=true then

            	 if indirizzoRec.via_tipo_id is not null then
            		select tipo.via_tipo_code into flussoElabMifValore
                	from siac_d_via_tipo tipo
               		where tipo.via_tipo_id=indirizzoRec.via_tipo_id
	                and   tipo.data_cancellazione is null
    	     	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 			 		and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));

                	if flussoElabMifValore is not null then
                		flussoElabMifValore:=flussoElabMifValore||' ';
               	    end if;

           		  end if;

	             flussoElabMifValore:=trim(both from coalesce(flussoElabMifValore,'')||coalesce(indirizzoRec.toponimo,'')
    	                             ||' '||coalesce(indirizzoRec.numero_civico,''));

        	     if flussoElabMifValore is not null then
--	        	    mifFlussoOrdinativoRec.mif_ord_indir_del:=substring(flussoElabMifValore from 1 for 30);

                    -- 24.01.2018 Sofia jira siac-5765 - scambio tag
                    -- in anagrafica_beneficiario -- creditore_effettivo
                    mifFlussoOrdinativoRec.mif_ord_indir_benef:=substring(flussoElabMifValore from 1 for 30);
	             end if;
                end if;
         	else
            	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
         end if;
     end if;

	 -- <cap_creditore_effettivo>
     mifCountRec:=mifCountRec+1;
     if isIndirizzoBenQuiet=true then
        if soggettoQuietId is not null and indirizzoRec is not null then
         flussoElabMifElabRec:=null;
		 flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
         	if flussoElabMifElabRec.flussoElabMifElab=true then
--         		mifFlussoOrdinativoRec.mif_ord_cap_del:=lpad(indirizzoRec.zip_code,5,'0');

				-- 24.01.2018 Sofia jira siac-5765 - scambio tag
                -- in anagrafica_beneficiario -- creditore_effettivo
                mifFlussoOrdinativoRec.mif_ord_cap_benef:=lpad(indirizzoRec.zip_code,5,'0');
            else
            	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;

         end if;
        end if;
     end if;


     -- <localita_creditore_effettivo>
     mifCountRec:=mifCountRec+1;
     if isIndirizzoBenQuiet=true then
        if soggettoQuietId is not null and indirizzoRec.comune_id is not null then
         flussoElabMifElabRec:=null;
		 flussoElabMifValore:=null;
		 flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
         	if flussoElabMifElabRec.flussoElabMifElab=true then

            	select com.comune_desc into flussoElabMifValore
           		from siac_t_comune com
	            where com.comune_id=indirizzoRec.comune_id
    	        and   com.data_cancellazione is null
                and   com.validita_fine is null;

	            if flussoElabMifValore is not null then
--		            mifFlussoOrdinativoRec.mif_ord_localita_del:=substring(flussoElabMifValore from 1 for 30);

                    -- 24.01.2018 Sofia jira siac-5765 - scambio tag
                    -- in anagrafica_beneficiario -- creditore_effettivo
                    mifFlussoOrdinativoRec.mif_ord_localita_benef:=substring(flussoElabMifValore from 1 for 30);
        	    end if;
            else
            	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
         end if;
        end if;
     end if;

     mifCountRec:=mifCountRec+1;
	 -- <provincia_creditore_effettivo>
	 if isIndirizzoBenQuiet=true then
        if soggettoQuietId is not null and indirizzoRec.comune_id is not null then
         flussoElabMifElabRec:=null;
		 flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
         	if flussoElabMifElabRec.flussoElabMifElab=true then

            	select prov.sigla_automobilistica into flussoElabMifValore
            	from siac_r_comune_provincia provRel, siac_t_provincia prov
           		where provRel.comune_id=indirizzoRec.comune_id
           	  	and   provRel.data_cancellazione is null
                and   provRel.validita_fine is null
        	    and   prov.provincia_id=provRel.provincia_id
            	and   prov.data_cancellazione is null
                and   prov.validita_fine is null
        	    order by provRel.data_creazione;

	            if flussoElabMifValore is not null then
--		            mifFlussoOrdinativoRec.mif_ord_prov_del:=flussoElabMifValore;
                    -- 24.01.2018 Sofia jira siac-5765 - scambio tag
                    -- in anagrafica_beneficiario -- creditore_effettivo
                    mifFlussoOrdinativoRec.mif_ord_prov_benef:=flussoElabMifValore;
        	    end if;
            else
            	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
         end if;
        end if;
     end if;

     mifCountRec:=mifCountRec+1;
	 -- <stato_creditore_effettivo>
     if soggettoQuietId is not null  then
        flussoElabMifElabRec:=null;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
       if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
       end if;
       if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
         	if statoDelegatoCredEff=false then
	            statoDelegatoCredEff:=true;
                -- valorizzato poi in piazzatura
            end if;
          else
           RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
       end if;
     end if;

     mifCountRec:=mifCountRec+1;
	 -- <partita_iva_creditore_effettivo>
     if soggettoQuietId is not null THEN
         flussoElabMifElabRec:=null;
		 flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
         	if flussoElabMifElabRec.flussoElabMifElab=true then
                if  soggettoQuietRifId is not null then
	            	if soggettoQuietRifRec.partita_iva is not null  or
                       (soggettoQuietRifRec.partita_iva is null and
                        soggettoQuietRifRec.codice_fiscale is not null and length(soggettoQuietRifRec.codice_fiscale)=11)
                       then
                       	if soggettoQuietRifRec.partita_iva is not null then
	    	             flussoElabMifValore:=soggettoQuietRifRec.partita_iva;
                        else
                         flussoElabMifValore:=trim ( both ' ' from soggettoQuietRifRec.codice_fiscale);
                        end if;
                     end if;
				else
                	if soggettoQuietRec.partita_iva is not null  or
                       (soggettoQuietRec.partita_iva is null and
                        soggettoQuietRec.codice_fiscale is not null and length(soggettoQuietRec.codice_fiscale)=11)
                       then
                       	if soggettoQuietRec.partita_iva is not null then
	    	             flussoElabMifValore:=soggettoQuietRec.partita_iva;
                        else
                         flussoElabMifValore:=trim ( both ' ' from soggettoQuietRec.codice_fiscale);
                        end if;
                    end if;
                end if;

			    if flussoElabMifValore is not null then
--	                mifFlussoOrdinativoRec.mif_ord_partiva_del:=flussoElabMifValore;

                    -- 24.01.2018 Sofia jira siac-5765 - scambio tag
                    -- in anagrafica_beneficiario -- creditore_effettivo
                    mifFlussoOrdinativoRec.mif_ord_partiva_benef:=flussoElabMifValore;

                end if;
         	else
            	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
         end if;
     end if;

     mifCountRec:=mifCountRec+1;
     -- <codice_fiscale_creditore_effettivo>
     if soggettoQuietId is not null  then
         flussoElabMifElabRec:=null;
		 flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
         	if flussoElabMifElabRec.flussoElabMifElab=true then
            	if soggettoQuietRifId is not null then
                 if mifFlussoOrdinativoRec.mif_ord_partiva_del is null then
                  if soggettoQuietRifRec.codice_fiscale is not null and
                     length(soggettoQuietRifRec.codice_fiscale)= 16 then
	                 flussoElabMifValore:=trim ( both ' ' from soggettoQuietRifRec.codice_fiscale);
                  end if;
                 end if;
                else
                 if soggettoQuietRec.codice_fiscale is not null and
                    length(soggettoQuietRec.codice_fiscale)=16 then
	                 flussoElabMifValore:=trim ( both ' ' from soggettoQuietRec.codice_fiscale);
                 end if;
                end if;

				if flussoElabMifValore is not null then
--	                mifFlussoOrdinativoRec.mif_ord_codfisc_del:=flussoElabMifValore;

                    -- 24.01.2018 Sofia jira siac-5765 - scambio tag
                    -- in anagrafica_beneficiario -- creditore_effettivo
  		            mifFlussoOrdinativoRec.mif_ord_codfisc_benef:=flussoElabMifValore;

                end if;
         	else
            	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
        end if;
     end if;

     -- </creditore_effettivo>
/**/
	 -- <piazzatura>
     flussoElabMifElabRec:=null;
     isOrdPiazzatura:=false;
     accreditoGruppoCode:=null;
     isPaeseSepa:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
--     raise notice 'piazzatura mifCountRec=%',mifCountRec;
     if flussoElabMifElabRec.flussoElabMifId is null then
      	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;
     if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
       	 if flussoElabMifElabRec.flussoElabMifParam is not null then
            isOrdPiazzatura:=fnc_mif_ordinativo_piazzatura_splus(MDPRec.accredito_tipo_id,
                                                           		 mifOrdinativoIdRec.mif_ord_codice_funzione,
		  												         flussoElabMifElabRec.flussoElabMifParam,
                                                                 mifFlussoOrdinativoRec.mif_ord_pagam_tipo,
			                                                     dataElaborazione,dataFineVal,enteProprietarioId);
         end if;
      	else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
        end if;
     end if;

     if isOrdPiazzatura=true then

      	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura tipo accredito MDP per popolamento  campi relativi a'||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

--        raise notice 'Ordinativo con piazzatura % codice funzione=%',mifOrdinativoIdRec.mif_ord_ord_id,mifOrdinativoIdRec.mif_ord_codice_funzione;

		accreditoGruppoCode:=codAccreRec.accredito_gruppo_code;
	    --raise notice 'accreditoGruppoCode=% ',accreditoGruppoCode;

        if MDPRec.iban is not null and length(MDPRec.iban)>2  then
        	select distinct 1 into isPaeseSepa
            from siac_t_sepa sepa
            where sepa.sepa_iso_code=substring(upper(MDPRec.iban) from 1 for 2)
            and   sepa.ente_proprietario_id=enteProprietarioId
            and   sepa.data_cancellazione is null
      	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',sepa.validita_inizio)
 			and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(sepa.validita_fine,dataElaborazione));
        end if;
     end if;


     -- <abi_beneficiario>
 	 mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true then
        flussoElabMifElabRec:=null;
     	flussoElabMifValore:=null;

	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	    if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
        		if flussoElabMifElabRec.flussoElabMifParam is not null then
                	if tipoMDPCB is null then
	                    tipoMDPCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                    end if;
                    if tipoPaeseCB is null then
	                    tipoPaeseCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                    end if;

                    -- 15.01.2018 Sofia JIRA SIAC-5765
					if tipoMDPCCP is null then
                    	tipoMDPCCP:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                    end if;


                    if tipoMDPCB is not null and tipoMDPCB=accreditoGruppoCode and
                       MDPRec.iban is not null and length(MDPRec.iban)>2 and
                       tipoPaeseCB is not null and tipoPaeseCB=substring(upper(MDPRec.iban) from 1 for 2) then -- solo IT
                       	flussoElabMifValore:=substring(upper(MDPRec.iban) from 6 for 5);
                    end if;

                    -- 15.01.2018 Sofia JIRA SIAC-5765
                    if flussoElabMifValore is null and
                       flussoElabMifElabRec.flussoElabMifDef is not null and
                       tipoMDPCCP is not null and tipoMDPCCP=accreditoGruppoCode then
                       flussoElabMifValore:=flussoElabMifElabRec.flussoElabMifDef;
                    end if;


                    if flussoElabMifValore is not null then
                    	mifFlussoOrdinativoRec.mif_ord_abi_benef:=flussoElabMifValore;
                    end if;
    	        end if;
    	  	else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
     	 end if;
	 end if;

     -- <cab_beneficiario>
     mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true then
         flussoElabMifElabRec:=null;
     	 flussoElabMifValore:=null;
 	     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	     if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;
         if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
        		if flussoElabMifElabRec.flussoElabMifParam is not null then
                	if tipoMDPCB is null then
	                    tipoMDPCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                    end if;
                    if tipoPaeseCB is null then
	                    tipoPaeseCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                    end if;

                    -- 15.01.2018 Sofia JIRA SIAC-5765
					if tipoMDPCCP is null then
                    	tipoMDPCCP:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                    end if;

                    if tipoMDPCB is not null and tipoMDPCB=accreditoGruppoCode and
                       MDPRec.iban is not null and length(MDPRec.iban)>2 and
                       tipoPaeseCB is not null and tipoPaeseCB=substring(upper(MDPRec.iban) from 1 for 2) then -- solo IT
                       	flussoElabMifValore:=substring(upper(MDPRec.iban) from 11 for 5);
                    end if;

                    -- 15.01.2018 Sofia JIRA SIAC-5765
                    if flussoElabMifValore is null and
                       flussoElabMifElabRec.flussoElabMifDef is not null and
                       tipoMDPCCP is not null and tipoMDPCCP=accreditoGruppoCode then
                       flussoElabMifValore:=flussoElabMifElabRec.flussoElabMifDef;
                    end if;

                    if flussoElabMifValore is not null then
                    	mifFlussoOrdinativoRec.mif_ord_cab_benef:=flussoElabMifValore;
                    end if;
    	        end if;
    	  	else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
     	 end if;
     end if;

     -- <numero_conto_corrente_beneficiario>
     mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true then
        flussoElabMifElabRec:=null;
     	flussoElabMifValore:=null;
	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	    if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
        		if flussoElabMifElabRec.flussoElabMifParam is not null then
                	if tipoMDPCB is null then
	                    tipoMDPCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                    end if;
                    if tipoPaeseCB is null then
	                    tipoPaeseCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                    end if;
                    if tipoMDPCCP is null or tipoMDPCCP='' then
                    	tipoMDPCCP:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                    end if;

                    if tipoMDPCB is not null and tipoMDPCB=accreditoGruppoCode and
                       MDPRec.iban is not null and length(MDPRec.iban)>2 and
                       tipoPaeseCB is not null and tipoPaeseCB=substring(upper(MDPRec.iban) from 1 for 2) then -- solo IT
                       	flussoElabMifValore:=substring(upper(MDPRec.iban) from 16 for 12);
                    end if;

                    if tipoMDPCCP is not null and tipoMDPCCP=accreditoGruppoCode and
                       coalesce(MDPRec.contocorrente,NVL_STR)!=NVL_STR then
                       flussoElabMifValore:=lpad(MDPRec.contocorrente,NUM_DODICI,ZERO_PAD);
                    end if;

                    --raise notice 'numero_conto_corrente_beneficiario';
                    --raise notice 'tipoMDPCCP=% ',tipoMDPCCP;

                    if flussoElabMifValore is not null then
                    	mifFlussoOrdinativoRec.mif_ord_cc_benef:=flussoElabMifValore;
                    end if;
    	        end if;
    	  	else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
     	 end if;
     end if;

     -- <caratteri_controllo>
     mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true then
	    flussoElabMifElabRec:=null;
    	flussoElabMifValore:=null;
	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	    if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
        		if flussoElabMifElabRec.flussoElabMifParam is not null then
                	if tipoMDPCB is null then
	                    tipoMDPCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                    end if;
                    if tipoPaeseCB is null then
	                    tipoPaeseCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                    end if;

					-- 15.01.2018 Sofia JIRA SIAC-5765
					if tipoMDPCCP is null then
                    	tipoMDPCCP:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                    end if;

                    if tipoMDPCB is not null and tipoMDPCB=accreditoGruppoCode and
                       MDPRec.iban is not null and length(MDPRec.iban)>2 and
                       tipoPaeseCB is not null and tipoPaeseCB=substring(upper(MDPRec.iban) from 1 for 2) then -- solo IT
                       	flussoElabMifValore:=substring(upper(MDPRec.iban) from 3 for 2);
                    end if;

                    -- 15.01.2018 Sofia JIRA SIAC-5765
                    if flussoElabMifValore is null and
                       flussoElabMifElabRec.flussoElabMifDef is not null and
                       tipoMDPCCP is not null and tipoMDPCCP=accreditoGruppoCode then
                       flussoElabMifValore:=flussoElabMifElabRec.flussoElabMifDef;
                    end if;

                    if flussoElabMifValore is not null then
                    	mifFlussoOrdinativoRec.mif_ord_ctrl_benef:=flussoElabMifValore;
                    end if;
    	        end if;
    	  	else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
     	end if;
     end if;


     -- <codice_cin>
     mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true then
        flussoElabMifElabRec:=null;
     	flussoElabMifValore:=null;
	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	    if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
        		if flussoElabMifElabRec.flussoElabMifParam is not null then
                	if tipoMDPCB is null then
	                    tipoMDPCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                    end if;
                    if tipoPaeseCB is null then
	                    tipoPaeseCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                    end if;


					-- 15.01.2018 Sofia JIRA SIAC-5765
					if tipoMDPCCP is null then
                    	tipoMDPCCP:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                    end if;


                    if tipoMDPCB is not null and tipoMDPCB=accreditoGruppoCode and
                       MDPRec.iban is not null and length(MDPRec.iban)>2 and
                       tipoPaeseCB is not null and tipoPaeseCB=substring(upper(MDPRec.iban) from 1 for 2) then -- solo IT
                       	flussoElabMifValore:=substring(upper(MDPRec.iban) from 5 for 1);
                    end if;

                    -- 15.01.2018 Sofia JIRA SIAC-5765
                    if flussoElabMifValore is null and
                       flussoElabMifElabRec.flussoElabMifDef is not null and
                       tipoMDPCCP is not null and tipoMDPCCP=accreditoGruppoCode then
                       flussoElabMifValore:=flussoElabMifElabRec.flussoElabMifDef;
                    end if;

                    if flussoElabMifValore is not null then
                    	mifFlussoOrdinativoRec.mif_ord_cin_benef:=flussoElabMifValore;
                    end if;
    	        end if;
    	  	else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
     	 end if;
     end if;

     -- <codice_paese>
	 mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true then
        flussoElabMifElabRec:=null;
     	flussoElabMifValore:=null;
	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	    if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
        		if flussoElabMifElabRec.flussoElabMifParam is not null then
                	if tipoMDPCB is null then
	                    tipoMDPCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                    end if;
                    if tipoPaeseCB is null then
	                    tipoPaeseCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                    end if;

					-- 15.01.2018 Sofia JIRA SIAC-5765
					if tipoMDPCCP is null then
                    	tipoMDPCCP:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                    end if;


                    if tipoMDPCB is not null and tipoMDPCB=accreditoGruppoCode and
                       MDPRec.iban is not null and length(MDPRec.iban)>2 and
                       tipoPaeseCB is not null and tipoPaeseCB=substring(upper(MDPRec.iban) from 1 for 2) then -- solo IT
                       	flussoElabMifValore:=substring(upper(MDPRec.iban) from 1 for 2);
                    end if;


					-- 15.01.2018 Sofia JIRA SIAC-5765
                    if flussoElabMifValore is null and
                       flussoElabMifElabRec.flussoElabMifDef is not null and
                       tipoMDPCCP is not null and tipoMDPCCP=accreditoGruppoCode then
                       flussoElabMifValore:=flussoElabMifElabRec.flussoElabMifDef;
                    end if;

                    if flussoElabMifValore is not null then
                    	mifFlussoOrdinativoRec.mif_ord_cod_paese_benef:=flussoElabMifValore;
--                        raise notice 'statoBenficiario=%',statoBeneficiario;
                        if statoBeneficiario=true and statoDelegatoCredEff=false then -- se CSI IBAN non riporta dati del beneficiario quindi omettiamo codice_paese
                        	mifFlussoOrdinativoRec.mif_ord_stato_benef:=flussoElabMifValore;
                        end if;
                        if statoDelegatoCredEff=true then
--	                        mifFlussoOrdinativoRec.mif_ord_stato_del:=flussoElabMifValore;
                            -- 24.01.2018 Sofia jira siac-5765
                            mifFlussoOrdinativoRec.mif_ord_stato_del:=mifFlussoOrdinativoRec.mif_ord_stato_benef;
                            mifFlussoOrdinativoRec.mif_ord_stato_benef:=flussoElabMifValore;
                        end if;
                    end if;
    	        end if;
    	  	else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
       end if;
     end if;


     -- extra sepa
     -- <denominazione_banca_destinataria>
     mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true and isPaeseSepa is null then
		 flussoElabMifElabRec:=null;
     	 flussoElabMifValore:=null;
		 flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	     if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	 end if;
         if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
        		if flussoElabMifElabRec.flussoElabMifParam is not null then
                	if tipoMDPCB is null then
	                    tipoMDPCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                    end if;


                    if tipoMDPCB is not null and tipoMDPCB=accreditoGruppoCode and
                       MDPRec.banca_denominazione is not null  then
                       	flussoElabMifValore:=MDPRec.banca_denominazione;
                    end if;
                    if flussoElabMifValore is not null then
                    	mifFlussoOrdinativoRec.mif_ord_denom_banca_benef:=flussoElabMifValore;
                    end if;
    	        end if;
    	  	else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
     	 end if;
     end if;
     -- </piazzatura>

     -- sezione esteri sepa
     -- <sepa_credit_transfer>
     mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true
        and isPaeseSepa is not null then
     	flussoElabMifElabRec:=null;
   	    flussoElabMifValore:=null;
	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	     if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	 end if;
         if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
		     if flussoElabMifElabRec.flussoElabMifParam is not null then
                if paeseSepaTr is null then
	        	   	paeseSepaTr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                end if;
                if accreditoGruppoSepaTr is null then
	            	accreditoGruppoSepaTr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                end if;
                if SepaTr is null then
		            SepaTr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                end if;

    	        if accreditoGruppoSepaTr is not null and SepaTr is not null and paeseSepaTr is not null then
	    	        sepaCreditTransfer:=true;
            	end if;
             end if;
            else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
         end if;
     end if;

     -- <iban>
     mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true
        and sepaCreditTransfer=true
        and isPaeseSepa is not null
        and accreditoGruppoSepaTr=accreditoGruppoCode then
     	flussoElabMifElabRec:=null;
   	    flussoElabMifValore:=null;
	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	     if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	 end if;
         if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
		     	if MDPRec.iban is not null and length(MDPRec.iban)>=2 and
        		   substring(upper(MDPRec.iban) from 1 for 2)!=paeseSepaTr then
		           	mifFlussoOrdinativoRec.mif_ord_sepa_iban_tr:=MDPRec.iban;
        		end if;
            else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
         end if;
     end if;

     -- <bic>
     mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true
        and sepaCreditTransfer=true
        and isPaeseSepa is not null
        and accreditoGruppoSepaTr=accreditoGruppoCode then
     	flussoElabMifElabRec:=null;
   	    flussoElabMifValore:=null;
	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	     if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	 end if;
         if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
		     	if MDPRec.bic is not null and
                   MDPRec.iban is not null and length(MDPRec.iban)>=2 and
        		   substring(upper(MDPRec.iban) from 1 for 2)!=paeseSepaTr then
		           mifFlussoOrdinativoRec.mif_ord_sepa_bic_tr:=MDPRec.bic;
        		end if;
            else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
         end if;
     end if;
     mifCountRec:=mifCountRec+5;
     -- </sepa_credit_transfer>


     -- <causale> ancora informazioni_beneficiario
     flussoElabMifElabRec:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifValore:=null;
     flussoElabMifValoreDesc:=null;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
--     raise notice 'causale mifCountRec=%',mifCountRec;
     if flussoElabMifElabRec.flussoElabMifId is null then
  	 	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;
     if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
        	if flussoElabMifElabRec.flussoElabMifParam is not null then
            	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura CUP-CIG.';
            	if cupCausAttr is null then
	            	cupCausAttr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                end if;
                if cigCausAttr is null then
	                cigCausAttr:=trim (both ' '	 from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                end if;

                if coalesce(cupCausAttr,NVL_STR)!=NVL_STR  and cupCausAttrId is null then
                	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura attr_id '||cupCausAttr||'.';
                	select attr.attr_id into cupCausAttrId
                    from siac_t_attr attr
                    where attr.ente_proprietario_id=enteProprietarioId
                    and   attr.attr_code=cupCausAttr
                    and   attr.data_cancellazione is null
                    and   attr.validita_fine is null;

                end if;

                if coalesce(cigCausAttr,NVL_STR)!=NVL_STR and cigCausAttrId is null then

                	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura attr_id '||cigCausAttr||'.';
                	select attr.attr_id into cigCausAttrId
                    from siac_t_attr attr
                    where attr.ente_proprietario_id=enteProprietarioId
                    and   attr.attr_code=cigCausAttr
                    and   attr.data_cancellazione is null
                    and   attr.validita_fine is null;

                end if;


                if cupCausAttrId is not null then
                	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore '||cupCausAttr||' [siac_r_ordinativo_attr].';

                	select a.testo into flussoElabMifValore
                    from siac_r_ordinativo_attr a
                    where a.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                    and   a.attr_id=cupCausAttrId
                    and   a.data_cancellazione is null
                    and   a.validita_fine is null;

                    if coalesce(flussoElabMifValore,NVL_STR)=NVL_STR then
                       	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore '||cupCausAttr||' [siac_r_liquidazione_attr].';

                    	select a.testo into flussoElabMifValore
                        from siac_r_liquidazione_attr  a
                        where a.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
                        and   a.attr_id=cupCausAttrId
                        and   a.data_cancellazione is null
	                    and   a.validita_fine is null;
                    end if;
                end if;

                if cigCausAttrId is not null then
                	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore '||cigCausAttr||' [siac_r_ordinativo_attr].';

                	select a.testo into flussoElabMifValoreDesc
                    from siac_r_ordinativo_attr a
                    where a.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                    and   a.attr_id=cigCausAttrId
                    and   a.data_cancellazione is null
                    and   a.validita_fine is null;

                    if coalesce(flussoElabMifValoreDesc,NVL_STR)=NVL_STR then
                       	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore '||cigCausAttr||' [siac_r_liquidazione_attr].';

                    	select a.testo into flussoElabMifValoreDesc
                        from siac_r_liquidazione_attr  a
                        where a.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
                        and   a.attr_id=cigCausAttrId
                        and   a.data_cancellazione is null
	                    and   a.validita_fine is null;
                    end if;
                end if;

            end if;
            -- cup
			if coalesce(flussoElabMifValore,NVL_STR)!=NVL_STR then
			       	mifFlussoOrdinativoRec.mif_ord_pagam_causale:=cupCausAttr||' '||flussoElabMifValore;

            end if;
            -- cig
			if coalesce(flussoElabMifValoreDesc,NVL_STR)!=NVL_STR  then
                	mifFlussoOrdinativoRec.mif_ord_pagam_causale:=
                      trim (both ' ' from coalesce(mifFlussoOrdinativoRec.mif_ord_pagam_causale,' ')||
                           ' '||cigCausAttr||' '||flussoElabMifValoreDesc);
            end if;


			mifFlussoOrdinativoRec.mif_ord_pagam_causale:=
      			replace(replace(substring(trim (both ' ' from coalesce(mifFlussoOrdinativoRec.mif_ord_pagam_causale,' ')||' '||mifOrdinativoIdRec.mif_ord_desc )
	                            from 1 for 370) , chr(VT_ASCII),chr(SPACE_ASCII)),chr(BS_ASCII),NVL_STR);

--			raise notice 'mifFlussoOrdinativoRec.mif_ord_pagam_causale %',mifFlussoOrdinativoRec.mif_ord_pagam_causale;


	     else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	     end if;
     end if;

     -- <sospeso>
     -- <numero_provvisorio>
     -- <importo_provvisorio>
     mifCountRec:=mifCountRec+2;

	 -- <ritenuta>
     -- <importo_ritenute>
     -- <numero_reversale>
     -- <progressivo_versante>
     mifCountRec:=mifCountRec+3;

	 -- <informazioni_aggiuntive>

     -- <lingua>
    flussoElabMifElabRec:=null;
    mifCountRec:=mifCountRec+1;
    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
     if flussoElabMifElabRec.flussoElabMifId is null then
  	 	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;
     if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
        	if flussoElabMifElabRec.flussoElabMifDef is not null then
        		mifFlussoOrdinativoRec.mif_ord_lingua:=flussoElabMifElabRec.flussoElabMifDef;

--                raise notice 'LINGUA def % %',flussoElabMifElabRec.flusso_elab_mif_campo,flussoElabMifElabRec.flussoElabMifDef;
            end if;
	     else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	     end if;
     end if;


    -- <riferimento_documento_esterno>
    mifCountRec:=mifCountRec+1;
    if tipoPagamRec is not null then
    	flussoElabMifElabRec:=null;
        flussoElabMifValore:=null;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	    if flussoElabMifElabRec.flussoElabMifId is null then
  		 	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	    end if;
    	if flussoElabMifElabRec.flussoElabMifAttivo=true then
    		if flussoElabMifElabRec.flussoElabMifElab=true then
        		if flussoElabMifElabRec.flussoElabMifDef is not null and
                   flussoElabMifElabRec.flussoElabMifParam is not null then

                    -- modalita accredito=STI - STIPENDI
                    if codAccreRec.accredito_tipo_code =
                           trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3)) then
                           flussoElabMifValore:=
                             trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,2));
                    end if;

                    if  coalesce(flussoElabMifValore,'')='' and
                        tipoPagamRec.descTipoPagamento in
                        (trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1)),
                         trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2))
                        ) then
		                flussoElabMifValore:=tipoPagamRec.descTipoPagamento;
                    end if;

                    -- 23.01.2018 Sofia jira siac-5765
			        if codAccreRec.accredito_gruppo_code =
                           trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4)) and
                           MDPRec.contocorrente is not null and MDPRec.contocorrente!=''
                            then
                           flussoElabMifValore:=MDPRec.contocorrente;
                    end if;
                    -- 23.01.2018 Sofia jira siac-5765

                    if coalesce(flussoElabMifValore,'')='' and tipoPagamRec.defRifDocEsterno=true then
                        flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
                    end if;

                    if coalesce(flussoElabMifValore,'')!='' then
	                    mifFlussoOrdinativoRec.mif_ord_rif_doc_esterno:=flussoElabMifValore;
                    end if;
		        end if;
			else
     			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
		    end if;
    	end if;
    end if;
    -- </informazioni_aggiuntive>

    -- <sostituzione_mandato>

    flussoElabMifElabRec:=null;
    ordSostRec:=null;
    mifCountRec:=mifCountRec+1;
    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
    if flussoElabMifElabRec.flussoElabMifId is null then
  		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    end if;
    if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
                	select * into ordSostRec
                    from fnc_mif_ordinativo_sostituito( mifOrdinativoIdRec.mif_ord_ord_id,
 														ordRelazCodeTipoId,
                                                        dataElaborazione,dataFineVal);
    	else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	    end if;

    end if;

   mifCountRec:=mifCountRec+3;
   if ordSostRec is not null then
   		 flussoElabMifElabRec:=null;
   		 flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec-2];
	     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec-2
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         -- <numero_mandato_da_sostituire>
      	 if flussoElabMifElabRec.flussoElabMifId is null then
  	 		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	 end if;

      	 if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	   if flussoElabMifElabRec.flussoElabMifElab=true then
--        		mifFlussoOrdinativoRec.mif_ord_num_ord_colleg:=lpad(ordSostRec.ordNumeroSostituto::varchar,NUM_SETTE,ZERO_PAD);
                mifFlussoOrdinativoRec.mif_ord_num_ord_colleg:=ordSostRec.ordNumeroSostituto::varchar;
	    	else
     			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	     	end if;
         end if;

     	-- <progressivo_beneficiario_da_sostuire>
     	flussoElabMifElabRec:=null;
  	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec-1];
	    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec-1
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
    	if flussoElabMifElabRec.flussoElabMifId is null then
  	 		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	    end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
     		if flussoElabMifElabRec.flussoElabMifElab=true then
            	if flussoElabMifElabRec.flussoElabMifDef is not null then
                	mifFlussoOrdinativoRec.mif_ord_progr_ord_colleg:=flussoElabMifElabRec.flussoElabMifDef;
                end if;
     	    else
     			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
	    end if;

        -- <esercizio_mandato_da_sostituire>
        flussoElabMifElabRec:=null;
		flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
    	if flussoElabMifElabRec.flussoElabMifId is null then
  	 		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	    end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
     		if flussoElabMifElabRec.flussoElabMifElab=true then
               	mifFlussoOrdinativoRec.mif_ord_anno_ord_colleg:=ordSostRec.ordAnnoSostituto;
     	    else
     			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
	    end if;

     end if;


     -- <dati_a_disposizione_ente_beneficiario> facoltativo non valorizzato
     -- </informazioni_beneficiario>

     -- <dati_a_disposizione_ente_mandato>
	 -- <codice_distinta>
     flussoElabMifElabRec:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifValore:=null;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
     if flussoElabMifElabRec.flussoElabMifId is null then
  	 		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	 end if;

     if flussoElabMifElabRec.flussoElabMifAttivo=true then
      if flussoElabMifElabRec.flussoElabMifElab=true then
      		if mifOrdinativoIdRec.mif_ord_dist_id is not null then
				strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura distinta [siac_d_distinta].';
            	select  d.dist_code into flussoElabMifValore
                from siac_d_distinta d
                where d.dist_id=mifOrdinativoIdRec.mif_ord_dist_id;
            end if;

            if flussoElabMifValore is not null then
              	mifFlussoOrdinativoRec.mif_ord_codice_distinta:=flussoElabMifValore;
            end if;
      else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	  end if;
	 end if;

     -- <atto_contabile>
     flussoElabMifElabRec:=null;
     flussoElabMifValore:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
     if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;
     if flussoElabMifElabRec.flussoElabMifAttivo=true then
	     if flussoElabMifElabRec.flussoElabMifElab=true then
         	if flussoElabMifElabRec.flussoElabMifParam is not null then
                if attoAmmTipoAllRag is null then
            		attoAmmTipoAllRag:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                end if;
                if attoAmmStrTipoRag is null then
                	attoAmmStrTipoRag:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
         		end if;

                if attoAmmTipoAllRag is not null and  attoAmmStrTipoRag is not null then

                 flussoElabMifValore:=fnc_mif_estremi_attoamm_all(mifOrdinativoIdRec.mif_ord_atto_amm_id,
                 										          attoAmmTipoAllRag,attoAmmStrTipoRag,
                                                                  dataElaborazione, dataFineVal);

                end if;
          	end if;

            if flussoElabMifValore is not null then
                 	mifFlussoOrdinativoRec.mif_ord_codice_atto_contabile:=flussoElabMifValore;
            end if;

         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

      -- 15.01.2018 Sofia SIAC-5765
      -- <codice_operatore>
	  flussoElabMifElabRec:=null;
	  flussoElabMifValore:=null;
	  flussoElabMifValoreDesc:=null;
	  mifCountRec:=mifCountRec+1;
	  flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

	  if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	  end if;
	  if flussoElabMifElabRec.flussoElabMifAttivo=true then
   		if flussoElabMifElabRec.flussoElabMifElab=true then


         if mifOrdinativoIdRec.mif_ord_login_creazione is not null then
			flussoElabMifValore:=mifOrdinativoIdRec.mif_ord_login_creazione;
         end if;

         if flussoElabMifValore is not null then
        	select substring(s.soggetto_desc  from 1 for 12)  into flussoElabMifValoreDesc
			from siac_t_account a, siac_r_soggetto_ruolo r, siac_t_soggetto s
			where a.ente_proprietario_id=enteProprietarioId
            and   a.account_code=flussoElabMifValore
			and   r.soggeto_ruolo_id=a.soggeto_ruolo_id
			and   s.soggetto_id=r.soggetto_id
            and   r.data_cancellazione is null
            and   r.validita_fine is null
            and   a.data_cancellazione is null
            and   a.validita_fine is null;

            if 	flussoElabMifValoreDesc is not null then
            	flussoElabMifValore:=flussoElabMifValoreDesc;
            end if;
         end if;

         if flussoElabMifValore is not null then
            mifFlussoOrdinativoRec.mif_ord_code_operatore:=substring(flussoElabMifValore from 1 for 12);
         end if;
       else
		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  	   end if;
     end if;

     -- </dati_a_disposizione_ente_mandato>

     -- </mandato>
/**/
        /*raise notice 'codice_funzione= %',mifFlussoOrdinativoRec.mif_ord_codice_funzione;
		raise notice 'numero_mandato= %',mifFlussoOrdinativoRec.mif_ord_numero;
        raise notice 'data_mandato= %',mifFlussoOrdinativoRec.mif_ord_data;
        raise notice 'importo_mandato= %',mifFlussoOrdinativoRec.mif_ord_importo;*/

		 strMessaggio:='Inserimento mif_t_ordinativo_spesa per ord. numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        INSERT INTO mif_t_ordinativo_spesa
        (
  		-- mif_ord_data_elab, def now
  		 mif_ord_flusso_elab_mif_id,
 		 mif_ord_bil_id,
 		 mif_ord_ord_id,
  		 mif_ord_anno,
  		 mif_ord_numero,
  		 mif_ord_codice_funzione,
  		 mif_ord_data,
  		 mif_ord_importo,
  		 mif_ord_flag_fin_loc,
  		 mif_ord_documento,
  		 mif_ord_bci_tipo_ente_pag,
  		 mif_ord_bci_dest_ente_pag,
  		 mif_ord_bci_conto_tes,
 		 mif_ord_estremi_attoamm,
         mif_ord_resp_attoamm,
         mif_ord_uff_resp_attomm,
  		 mif_ord_codice_abi_bt,
  		 mif_ord_codice_ente,
  		 mif_ord_desc_ente,
  		 mif_ord_codice_ente_bt,
  		 mif_ord_anno_esercizio,
         mif_ord_codice_flusso_oil,
  		 mif_ord_id_flusso_oil,
  		 mif_ord_data_creazione_flusso,
  		 mif_ord_anno_flusso,
 		 mif_ord_codice_struttura,
  		 mif_ord_ente_localita,
  		 mif_ord_ente_indirizzo,
 		 mif_ord_codice_raggrup,
  		 mif_ord_progr_benef,
         mif_ord_progr_dest,
  		 mif_ord_bci_conto,
  		 mif_ord_bci_tipo_contabil,
  		 mif_ord_class_codice_cge,
  		 mif_ord_class_importo,
  		 mif_ord_class_codice_cup,
  		 mif_ord_class_codice_gest_prov,
  		 mif_ord_class_codice_gest_fraz,
  		 mif_ord_codifica_bilancio,
         mif_ord_capitolo,
  		 mif_ord_articolo,
  		 mif_ord_desc_codifica,
         mif_ord_desc_codifica_bil,
  		 mif_ord_gestione,
  		 mif_ord_anno_res,
  		 mif_ord_importo_bil,
  		 mif_ord_stanz,
    	 mif_ord_mandati_stanz,
  		 mif_ord_disponibilita,
  		 mif_ord_prev,
  		 mif_ord_mandati_prev,
  		 mif_ord_disp_cassa,
  		 mif_ord_anag_benef,
  		 mif_ord_indir_benef,
  		 mif_ord_cap_benef,
  		 mif_ord_localita_benef,
  		 mif_ord_prov_benef,
         mif_ord_stato_benef,
  		 mif_ord_partiva_benef,
  		 mif_ord_codfisc_benef,
  		 mif_ord_anag_quiet,
  		 mif_ord_indir_quiet,
  		 mif_ord_cap_quiet,
  		 mif_ord_localita_quiet,
  		 mif_ord_prov_quiet,
  		 mif_ord_partiva_quiet,
  		 mif_ord_codfisc_quiet,
	     mif_ord_stato_quiet,
  		 mif_ord_anag_del,
         mif_ord_indir_del,
         mif_ord_cap_del,
         mif_ord_localita_del,
         mif_ord_prov_del,
  		 mif_ord_codfisc_del,
         mif_ord_partiva_del,
         mif_ord_stato_del,
  		 mif_ord_invio_avviso,
  		 mif_ord_abi_benef,
  		 mif_ord_cab_benef,
  		 mif_ord_cc_benef_estero,
 		 mif_ord_cc_benef,
         mif_ord_ctrl_benef,
  		 mif_ord_cin_benef,
  		 mif_ord_cod_paese_benef,
  		 mif_ord_denom_banca_benef,
  		 mif_ord_cc_postale_benef,
  		 mif_ord_swift_benef,
  		 mif_ord_iban_benef,
         mif_ord_sepa_iban_tr,
         mif_ord_sepa_bic_tr,
         mif_ord_sepa_id_end_tr,
  		 mif_ord_bollo_esenzione,
  		 mif_ord_bollo_carico,
  		 mif_ordin_bollo_caus_esenzione,
  		 mif_ord_commissioni_carico,
         mif_ord_commissioni_esenzione,
  		 mif_ord_commissioni_importo,
         mif_ord_commissioni_natura,
  		 mif_ord_pagam_tipo,
  		 mif_ord_pagam_code,
  		 mif_ord_pagam_importo,
  		 mif_ord_pagam_causale,
  		 mif_ord_pagam_data_esec,
  		 mif_ord_lingua,
  		 mif_ord_rif_doc_esterno,
  		 mif_ord_info_tesoriere,
  		 mif_ord_flag_copertura,
  		 mif_ord_num_ord_colleg,
  		 mif_ord_progr_ord_colleg,
  		 mif_ord_anno_ord_colleg,
  		 mif_ord_code_operatore, -- 15.01.2018 Sofia SIAC-5765
  		 mif_ord_descri_estesa_cap,
  		 mif_ord_siope_codice_cge,
  		 mif_ord_siope_descri_cge,
         mif_ord_codice_ente_ipa,
         mif_ord_codice_ente_istat,
         mif_ord_codice_ente_tramite,
         mif_ord_codice_ente_tramite_bt,
	     mif_ord_riferimento_ente,
         mif_ord_importo_benef,
         mif_ord_pagam_postalizza,
         mif_ord_class_tipo_debito,
         mif_ord_class_tipo_debito_nc,
         mif_ord_class_cig,
         mif_ord_class_motivo_nocig,
         mif_ord_class_missione,
         mif_ord_class_programma,
         mif_ord_class_economico,
         mif_ord_class_importo_economico,
         mif_ord_class_transaz_ue,
         mif_ord_class_ricorrente_spesa,
         mif_ord_class_cofog_codice,
         mif_ord_class_cofog_importo,
         mif_ord_codice_distinta,
         mif_ord_codice_atto_contabile,
  		 validita_inizio,
         ente_proprietario_id,
  		 login_operazione
		)
		VALUES
        (
	  	 --:mif_ord_data_elab,
  		 flussoElabMifLogId, --idElaborazione univoco
  		 mifOrdinativoIdRec.mif_ord_bil_id,
  		 mifOrdinativoIdRec.mif_ord_ord_id,
  		 mifOrdinativoIdRec.mif_ord_ord_anno,
  		 mifFlussoOrdinativoRec.mif_ord_numero,
  		 mifFlussoOrdinativoRec.mif_ord_codice_funzione,
  		 mifFlussoOrdinativoRec.mif_ord_data,
--  	     (case when mifFlussoOrdinativoRec.mif_ord_codice_funzione in (FUNZIONE_CODE_N,FUNZIONE_CODE_A) then
--                    '0.00' else mifFlussoOrdinativoRec.mif_ord_importo end),
         mifFlussoOrdinativoRec.mif_ord_importo,
 		 mifFlussoOrdinativoRec.mif_ord_flag_fin_loc,
  	     mifFlussoOrdinativoRec.mif_ord_documento,
 		 mifFlussoOrdinativoRec.mif_ord_bci_tipo_ente_pag,
 	 	 mifFlussoOrdinativoRec.mif_ord_bci_dest_ente_pag,
 		 mifFlussoOrdinativoRec.mif_ord_bci_conto_tes,
 		 mifFlussoOrdinativoRec.mif_ord_estremi_attoamm,
         mifFlussoOrdinativoRec.mif_ord_resp_attoamm,
  		 mifFlussoOrdinativoRec.mif_ord_uff_resp_attomm,
 		 mifFlussoOrdinativoRec.mif_ord_codice_abi_bt,
 		 mifFlussoOrdinativoRec.mif_ord_codice_ente,
		 mifFlussoOrdinativoRec.mif_ord_desc_ente,
  		 mifFlussoOrdinativoRec.mif_ord_codice_ente_bt,
 		 mifFlussoOrdinativoRec.mif_ord_anno_esercizio,
  		annoBilancio||flussoElabMifDistOilRetId::varchar,
  		flussoElabMifOilId, --idflussoOil
        extract(year from now())||'-'||
        lpad(extract('month' from now())::varchar,2,'0')||'-'||
        lpad(extract('day' from now())::varchar,2,'0')||'T'||
        lpad(extract('hour' from now())::varchar,2,'0')||':'||
        lpad(extract('minute' from now())::varchar,2,'0')||':'||'00',  -- mif_ord_data_creazione_flusso
        extract(year from now())::integer,
 		mifFlussoOrdinativoRec.mif_ord_codice_struttura,
 		mifFlussoOrdinativoRec.mif_ord_ente_localita,
		mifFlussoOrdinativoRec.mif_ord_ente_indirizzo,
 		mifFlussoOrdinativoRec.mif_ord_codice_raggrup,
 		mifFlussoOrdinativoRec.mif_ord_progr_benef,
 		mifFlussoOrdinativoRec.mif_ord_progr_dest,
 		mifFlussoOrdinativoRec.mif_ord_bci_conto,
  		mifFlussoOrdinativoRec.mif_ord_bci_tipo_contabil,
 		mifFlussoOrdinativoRec.mif_ord_class_codice_cge,
        mifFlussoOrdinativoRec.mif_ord_class_importo,
 		mifFlussoOrdinativoRec.mif_ord_class_codice_cup,
 		mifFlussoOrdinativoRec.mif_ord_class_codice_gest_prov,
 		mifFlussoOrdinativoRec.mif_ord_class_codice_gest_fraz,
 		mifFlussoOrdinativoRec.mif_ord_codifica_bilancio,
        mifFlussoOrdinativoRec.mif_ord_capitolo,
  		mifFlussoOrdinativoRec.mif_ord_articolo,
 		mifFlussoOrdinativoRec.mif_ord_desc_codifica,
        mifFlussoOrdinativoRec.mif_ord_desc_codifica_bil,
		mifFlussoOrdinativoRec.mif_ord_gestione,
 		mifFlussoOrdinativoRec.mif_ord_anno_res,
 		mifFlussoOrdinativoRec.mif_ord_importo_bil,
        mifFlussoOrdinativoRec.mif_ord_stanz,
    	mifFlussoOrdinativoRec.mif_ord_mandati_stanz,
  		mifFlussoOrdinativoRec.mif_ord_disponibilita,
		mifFlussoOrdinativoRec.mif_ord_prev,
  		mifFlussoOrdinativoRec.mif_ord_mandati_prev,
  		mifFlussoOrdinativoRec.mif_ord_disp_cassa,
        mifFlussoOrdinativoRec.mif_ord_anag_benef,
  		mifFlussoOrdinativoRec.mif_ord_indir_benef,
		mifFlussoOrdinativoRec.mif_ord_cap_benef,
 		mifFlussoOrdinativoRec.mif_ord_localita_benef,
  		mifFlussoOrdinativoRec.mif_ord_prov_benef,
        mifFlussoOrdinativoRec.mif_ord_stato_benef,
 		mifFlussoOrdinativoRec.mif_ord_partiva_benef,
  		mifFlussoOrdinativoRec.mif_ord_codfisc_benef,
  		mifFlussoOrdinativoRec.mif_ord_anag_quiet,
        mifFlussoOrdinativoRec.mif_ord_indir_quiet,
  		mifFlussoOrdinativoRec.mif_ord_cap_quiet,
 		mifFlussoOrdinativoRec.mif_ord_localita_quiet,
  		mifFlussoOrdinativoRec.mif_ord_prov_quiet,
 		mifFlussoOrdinativoRec.mif_ord_partiva_quiet,
 		mifFlussoOrdinativoRec.mif_ord_codfisc_quiet,
        mifFlussoOrdinativoRec.mif_ord_stato_quiet,
 		mifFlussoOrdinativoRec.mif_ord_anag_del,
        mifFlussoOrdinativoRec.mif_ord_indir_del,
        mifFlussoOrdinativoRec.mif_ord_cap_del,
 		mifFlussoOrdinativoRec.mif_ord_localita_del,
 		mifFlussoOrdinativoRec.mif_ord_prov_del,
 		mifFlussoOrdinativoRec.mif_ord_codfisc_del,
 		mifFlussoOrdinativoRec.mif_ord_partiva_del,
        mifFlussoOrdinativoRec.mif_ord_stato_del,
 		mifFlussoOrdinativoRec.mif_ord_invio_avviso,
 		mifFlussoOrdinativoRec.mif_ord_abi_benef,
 		mifFlussoOrdinativoRec.mif_ord_cab_benef,
 		mifFlussoOrdinativoRec.mif_ord_cc_benef_estero,
 		mifFlussoOrdinativoRec.mif_ord_cc_benef,
 		mifFlussoOrdinativoRec.mif_ord_ctrl_benef,
 		mifFlussoOrdinativoRec.mif_ord_cin_benef,
 		mifFlussoOrdinativoRec.mif_ord_cod_paese_benef,
  		mifFlussoOrdinativoRec.mif_ord_denom_banca_benef,
 		mifFlussoOrdinativoRec.mif_ord_cc_postale_benef,
  		mifFlussoOrdinativoRec.mif_ord_swift_benef,
  		mifFlussoOrdinativoRec.mif_ord_iban_benef,
        mifFlussoOrdinativoRec.mif_ord_sepa_iban_tr,
        mifFlussoOrdinativoRec.mif_ord_sepa_bic_tr,
        mifFlussoOrdinativoRec.mif_ord_sepa_id_end_tr,
 		mifFlussoOrdinativoRec.mif_ord_bollo_esenzione,
  		mifFlussoOrdinativoRec.mif_ord_bollo_carico,
  		mifFlussoOrdinativoRec.mif_ordin_bollo_caus_esenzione,
 		mifFlussoOrdinativoRec.mif_ord_commissioni_carico,
        mifFlussoOrdinativoRec.mif_ord_commissioni_esenzione,
		mifFlussoOrdinativoRec.mif_ord_commissioni_importo,
        mifFlussoOrdinativoRec.mif_ord_commissioni_natura,
  		mifFlussoOrdinativoRec.mif_ord_pagam_tipo,
 		mifFlussoOrdinativoRec.mif_ord_pagam_code,
	    mifFlussoOrdinativoRec.mif_ord_pagam_importo,
 		mifFlussoOrdinativoRec.mif_ord_pagam_causale,
 		mifFlussoOrdinativoRec.mif_ord_pagam_data_esec,
 		mifFlussoOrdinativoRec.mif_ord_lingua,
		mifFlussoOrdinativoRec.mif_ord_rif_doc_esterno,
 		mifFlussoOrdinativoRec.mif_ord_info_tesoriere,
 		mifFlussoOrdinativoRec.mif_ord_flag_copertura,
		mifFlussoOrdinativoRec.mif_ord_num_ord_colleg,
		mifFlussoOrdinativoRec.mif_ord_progr_ord_colleg,
		mifFlussoOrdinativoRec.mif_ord_anno_ord_colleg,
        mifFlussoOrdinativoRec.mif_ord_code_operatore, -- 15.01.2018 Sofia SIAC-5765
        mifFlussoOrdinativoRec.mif_ord_descri_estesa_cap,
        mifFlussoOrdinativoRec.mif_ord_siope_codice_cge,
        mifFlussoOrdinativoRec.mif_ord_siope_descri_cge,
        mifFlussoOrdinativoRec.mif_ord_codice_ente_ipa,
        mifFlussoOrdinativoRec.mif_ord_codice_ente_istat,
        mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite,
        mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite_bt,
	    mifFlussoOrdinativoRec.mif_ord_riferimento_ente,
        mifFlussoOrdinativoRec.mif_ord_importo_benef,
        mifFlussoOrdinativoRec.mif_ord_pagam_postalizza,
        mifFlussoOrdinativoRec.mif_ord_class_tipo_debito,
        mifFlussoOrdinativoRec.mif_ord_class_tipo_debito_nc,
        mifFlussoOrdinativoRec.mif_ord_class_cig,
        mifFlussoOrdinativoRec.mif_ord_class_motivo_nocig,
        mifFlussoOrdinativoRec.mif_ord_class_missione,
        mifFlussoOrdinativoRec.mif_ord_class_programma,
        mifFlussoOrdinativoRec.mif_ord_class_economico,
        mifFlussoOrdinativoRec.mif_ord_class_importo_economico,
        mifFlussoOrdinativoRec.mif_ord_class_transaz_ue,
        mifFlussoOrdinativoRec.mif_ord_class_ricorrente_spesa,
        mifFlussoOrdinativoRec.mif_ord_class_cofog_codice,
        mifFlussoOrdinativoRec.mif_ord_class_cofog_importo,
	    mifFlussoOrdinativoRec.mif_ord_codice_distinta,
        mifFlussoOrdinativoRec.mif_ord_codice_atto_contabile,
        now(),
        enteProprietarioId,
        loginOperazione
   )
   returning mif_ord_id into mifOrdSpesaId;




 -- dati fatture da valorizzare se ordinativo commerciale
 -- @@@@ sicuramente da completare
 -- <fattura_siope>
 if isGestioneFatture = true and isOrdCommerciale=true then
  flussoElabMifElabRec:=null;
  mifCountRec:=FLUSSO_MIF_ELAB_FATTURE;
  titoloCap:=null;
  flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Gestione fatture.Lettura natura spesa.';

  /*if mifOrdinativoIdRec.mif_ord_titolo_code=titoloCorrente then
	  	titoloCap:=descriTitoloCorrente;
  else
   if mifOrdinativoIdRec.mif_ord_titolo_code=titoloCapitale then
     	titoloCap:=descriTitoloCapitale;
   end if;
  end if;*/
  -- 20.02.2018 Sofia JIRA siac-5849
  select oil.oil_natura_spesa_desc into titoloCap
  from siac_d_oil_natura_spesa oil, siac_r_oil_natura_spesa_titolo r
  where r.oil_natura_spesa_titolo_id=mifOrdinativoIdRec.mif_ord_titolo_id
  and   oil.oil_natura_spesa_id=r.oil_natura_spesa_id
  and   r.data_cancellazione is null
  and   r.validita_fine is null;
  if titoloCap is null then titoloCap:=defNaturaPag; end if;
   -- 26.02.2018 Sofia JIRA siac-5849 - inclusione delle note credito  per ordinativi di pagamento
  titoloCap:=titoloCap||'|N'; -- 08.05.2018 Sofia siac-6137
  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Gestione fatture.Inizio ciclo.';
  ordRec:=null;
  for ordRec in
  (select * from fnc_mif_ordinativo_documenti_splus( mifOrdinativoIdRec.mif_ord_ord_id,
											         numeroDocs::integer,
                                                     tipoDocs,
                                                     docAnalogico,
                                                     attrCodeDataScad,
                                                     titoloCap,
                                                     enteOilRec.ente_oil_codice_pcc_uff,
		   		                        	         enteProprietarioId,
	            		                             dataElaborazione,dataFineVal)
  )
  loop
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Inserimento fatture '
                       ||' in mif_t_ordinativo_spesa_documenti '
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         insert into  mif_t_ordinativo_spesa_documenti
         ( mif_ord_id,
		   mif_ord_documento,
           mif_ord_doc_codice_ipa_ente,
	       mif_ord_doc_tipo,
           mif_ord_doc_tipo_a,
		   mif_ord_doc_id_lotto_sdi,
		   mif_ord_doc_tipo_analog,
		   mif_ord_doc_codfisc_emis,
		   mif_ord_doc_anno,
	       mif_ord_doc_numero,
	       mif_ord_doc_importo,
	       mif_ord_doc_data_scadenza,
	       mif_ord_doc_motivo_scadenza,
	       mif_ord_doc_natura_spesa,
		   validita_inizio,
		   ente_proprietario_id,
		   login_operazione
         )
         values
         (mifOrdSpesaId,
          --ordRec.numero_fattura_siope,
          'S', -- 07.06.2018 Sofia SIAC-6228
		  ordRec.codice_ipa_ente_siope,
		  ordRec.tipo_documento_siope,
          ordRec.tipo_documento_siope_a,
          ordRec.identificativo_lotto_sdi_siope,
          ordRec.tipo_documento_analogico_siope,
          trim ( both ' ' from ordRec.codice_fiscale_emittente_siope),
		  ordRec.anno_emissione_fattura_siope,
		  ordRec.numero_fattura_siope,
          ordRec.importo_siope,
		  ordRec.data_scadenza_pagam_siope,
		  ordRec.motivo_scadenza_siope,
    	  ordRec.natura_spesa_siope,
          now(),
          enteProprietarioId,
          loginOperazione
         );
  end loop;
 end if;




   -- <ritenuta>
   -- <importo_ritenuta>
   -- <numero_reversale>
   -- <progressivo_reversale>

   if  isRitenutaAttivo=true then
    ritenutaRec:=null;
    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Gestione  ritenute'
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
    for ritenutaRec in
    (select *
     from fnc_mif_ordinativo_ritenute(mifOrdinativoIdRec.mif_ord_ord_id,
         	 					      tipoRelazRitOrd,tipoRelazSubOrd,tipoRelazSprOrd,
                                      tipoOnereIrpefId,tipoOnereInpsId,
                                      tipoOnereIrpegId,
									  ordStatoCodeAId,ordDetTsTipoId,
                                      flussoElabMifTipoDec,
    	                              enteProprietarioId,dataElaborazione,dataFineVal)
    )
    loop
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Inserimento ritenuta'
                       ||' in mif_t_ordinativo_spesa_ritenute '
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
   		insert into mif_t_ordinativo_spesa_ritenute
        (mif_ord_id,
  		 mif_ord_rit_tipo,
 		 mif_ord_rit_importo,
 		 mif_ord_rit_numero,
  		 mif_ord_rit_ord_id,
 		 mif_ord_rit_progr_rev,
  		 validita_inizio,
		 ente_proprietario_id,
		 login_operazione)
        values
        (mifOrdSpesaId,
         tipoRitenuta,
         ritenutaRec.importoRitenuta,
         ritenutaRec.numeroRitenuta,
         ritenutaRec.ordRitenutaId,
         progrRitenuta,
         now(),
         enteProprietarioId,
         loginOperazione
        );

    end loop;
   end if;

   -- <sospeso>
   -- <numero_provvisorio>
   -- <importo_provvisorio>
  if  isRicevutaAttivo=true then
    ricevutaRec:=null;
    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Gestione  provvisori'
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
    for ricevutaRec in
    (select *
     from fnc_mif_ordinativo_ricevute(mifOrdinativoIdRec.mif_ord_ord_id,
                                      flussoElabMifTipoDec,
    	                              enteProprietarioId,dataElaborazione,dataFineVal)
    )
    loop
    	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Inserimento   ricevuta'
                       ||' in mif_t_ordinativo_spesa_ricevute '
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
   		insert into mif_t_ordinativo_spesa_ricevute
        (mif_ord_id,
	     mif_ord_ric_anno,
	     mif_ord_ric_numero,
	     mif_ord_provc_id,
		 mif_ord_ric_importo,
	     validita_inizio,
		 ente_proprietario_id,
	     login_operazione
        )
        values
        (mifOrdSpesaId,
         ricevutaRec.annoRicevuta,
         ricevutaRec.numeroRicevuta,
         ricevutaRec.provRicevutaId,
         ricevutaRec.importoRicevuta,
         now(),
         enteProprietarioId,
         loginOperazione
        );
    end loop;
  end if;

  numeroOrdinativiTrasm:=numeroOrdinativiTrasm+1;
 end loop;

/* if comPccAttrId is not null and numeroOrdinativiTrasm>0 then
   	   strMessaggio:='Inserimento Registro PCC.';
	   insert into siac_t_registro_pcc
	   (doc_id,
    	subdoc_id,
	    pccop_tipo_id,
    	ordinativo_data_emissione,
	    ordinativo_numero,
    	rpcc_quietanza_data,
        rpcc_quietanza_importo,
	    soggetto_id,
    	validita_inizio,
	    ente_proprietario_id,
    	login_operazione
	    )
    	(
         with
         mif as
         (select m.mif_ord_ord_id ord_id, m.mif_ord_soggetto_id soggetto_id,
                 ord.ord_emissione_data , ord.ord_numero
          from mif_t_ordinativo_spesa_id m, siac_t_ordinativo ord
          where m.ente_proprietario_id=enteProprietarioId
          and   substring(m.mif_ord_codice_funzione from 1 for 1)=FUNZIONE_CODE_I
          and   ord.ord_id=m.mif_ord_ord_id
         ),
         tipodoc as
         (select tipo.doc_tipo_id
          from siac_d_doc_tipo tipo ,siac_r_doc_tipo_attr attr
          where attr.attr_id=comPccAttrId
          and   attr.boolean='S'
          and   tipo.doc_tipo_id=attr.doc_tipo_id
          and   attr.data_cancellazione is null
          and   attr.validita_fine is null
          and   tipo.data_cancellazione is null
          and   tipo.validita_fine is null
         ),
         doc as
         (select distinct m.mif_ord_ord_id ord_id, subdoc.doc_id , subdoc.subdoc_id, subdoc.subdoc_importo, doc.doc_tipo_id
	      from  mif_t_ordinativo_spesa_id m, siac_t_ordinativo_ts ts, siac_r_subdoc_ordinativo_ts rsubdoc,
                siac_t_subdoc subdoc, siac_t_doc doc
          where m.ente_proprietario_id=enteProprietarioId
          and   substring(m.mif_ord_codice_funzione from 1 for 1)=FUNZIONE_CODE_I
          and   ts.ord_id=m.mif_ord_ord_id
          and   rsubdoc.ord_ts_id=ts.ord_ts_id
          and   subdoc.subdoc_id=rsubdoc.subdoc_id
          and   doc.doc_id=subdoc.doc_id
          and   ts.data_cancellazione is null
          and   ts.validita_fine is null
          and   rsubdoc.data_cancellazione is null
          and   rsubdoc.validita_fine is null
          and   subdoc.data_cancellazione is null
          and   subdoc.validita_fine is null
          and   doc.data_cancellazione is null
          and   doc.validita_fine is null
         )
         select
          doc.doc_id,
          doc.subdoc_id,
          pccOperazTipoId,
--          mif.ord_emissione_data,
--		  mif.ord_emissione_data+(1*interval '1 day'),
		  mif.ord_emissione_data,
          mif.ord_numero,
          dataElaborazione,
          doc.subdoc_importo,
          mif.soggetto_id,
          now(),
          enteProprietarioId,
          loginOperazione
         from mif, doc,tipodoc
         where mif.ord_id=doc.ord_id
         and   tipodoc.doc_tipo_id=doc.doc_tipo_id
        );
   end if;*/


   strMessaggio:='Aggiornamento progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_out_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
   update siac_t_progressivo p set prog_value=flussoElabMifOilId
   where p.ente_proprietario_id=enteProprietarioId
   and   p.prog_key='oil_out_'||annoBilancio
   and   p.ambito_id=ambitoFinId
   and   p.data_cancellazione is null
   and   p.validita_fine is null;

   strMessaggio:='Aggiornamento progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_'||MANDMIF_TIPO||'_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
   update siac_t_progressivo p set prog_value=flussoElabMifDistOilRetId
   where p.ente_proprietario_id=enteProprietarioId
   and   p.prog_key='oil_'||MANDMIF_TIPO||'_'||annoBilancio
   and   p.ambito_id=ambitoFinId
   and   p.data_cancellazione is null
   and   p.validita_fine is null;


   strMessaggio:='Aggiornamento mif_t_flusso_elaborato.';

   update  mif_t_flusso_elaborato
   set (flusso_elab_mif_id_flusso_oil,flusso_elab_mif_codice_flusso_oil,flusso_elab_mif_num_ord_elab,flusso_elab_mif_file_nome,flusso_elab_mif_esito_msg)=
   	   (flussoElabMifOilId,annoBilancio||flussoElabMifDistOilRetId::varchar,numeroOrdinativiTrasm,flussoElabMifTipoNomeFile||'_'||enteOilRec.ente_oil_codice,
        'Elaborazione in corso tipo flusso '||MANDMIF_TIPO||' - Dati inseriti in mif_t_ordinativo_spesa')
   where flusso_elab_mif_id=flussoElabMifLogId;

    -- gestire aggiornamento mif_t_flusso_elaborato

	RAISE NOTICE 'numeroOrdinativiTrasm %', numeroOrdinativiTrasm;
    messaggioRisultato:=strMessaggioFinale||' Trasmessi '||numeroOrdinativiTrasm||' ordinativi di spesa.';
    messaggioRisultato:=upper(messaggioRisultato);
    flussoElabMifId:=flussoElabMifLogId;
    nomeFileMif:=flussoElabMifTipoNomeFile||'_'||enteOilRec.ente_oil_codice;


    flussoElabMifDistOilId:=(annoBilancio||flussoElabMifDistOilRetId::varchar)::integer;
    return;

exception
    when RAISE_EXCEPTION THEN
    	raise notice '% % ERRORE :  % %',strMessaggioFinale,coalesce(strMessaggio,''),
	        	substring(upper(SQLERRM) from 1 for 100),mifCountRec;
        if codResult=-12 then
          messaggioRisultato:=
        	coalesce(strMessaggioFinale,'')||coalesce(strMessaggio,'')||' '||coalesce(substring(upper(SQLERRM) from 1 for 500),'')||' '||mifCountRec||'.' ;
          codiceRisultato:=0;
        else
          messaggioRisultato:=
        	coalesce(strMessaggioFinale,'')||coalesce(strMessaggio,'')||'ERRORE:  '||' '||coalesce(substring(upper(SQLERRM) from 1 for 500),'')||' '||mifCountRec||'.' ;
       	  codiceRisultato:=-1;
    	end if;

        numeroOrdinativiTrasm:=0;
		messaggioRisultato:=upper(messaggioRisultato);

        if flussoElabMifLogId is not null then
            flussoElabMifId:=flussoElabMifLogId;
        	update  mif_t_flusso_elaborato
   			set (flusso_elab_mif_esito,flusso_elab_mif_esito_msg)=
                ('KO',messaggioRisultato)
		    where flusso_elab_mif_id=flussoElabMifLogId;
        else
        	flussoElabMifId:=null;
        end if;

        return;
     when NO_DATA_FOUND THEN
        raise notice '% % ERRORE : % %',strMessaggioFinale,coalesce(strMessaggio,''),
	        	substring(upper(SQLERRM) from 1 for 500),mifCountRec;
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||' Nessun dato presente in archivio '||' '||mifCountRec||'.';
        numeroOrdinativiTrasm:=0;
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);

        if flussoElabMifLogId is not null then
            flussoElabMifId:=flussoElabMifLogId;
        	update  mif_t_flusso_elaborato
   			set (flusso_elab_mif_esito,flusso_elab_mif_esito_msg)=
                ('KO',messaggioRisultato)
		    where flusso_elab_mif_id=flussoElabMifLogId;
        else
        	flussoElabMifId:=null;
        end if;

        return;
     when TOO_MANY_ROWS THEN
        raise notice '% % ERRORE : % %',strMessaggioFinale,coalesce(strMessaggio,''),
	        	substring(upper(SQLERRM) from 1 for 500),mifCountRec;
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||' Diverse righe presenti in archivio '||' '||mifCountRec||'.';
        numeroOrdinativiTrasm:=0;
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);

        if flussoElabMifLogId is not null then


            flussoElabMifId:=flussoElabMifLogId;
        	update  mif_t_flusso_elaborato
   			set (flusso_elab_mif_esito,flusso_elab_mif_esito_msg)=
                ('KO',messaggioRisultato)
		    where flusso_elab_mif_id=flussoElabMifLogId;
        else
        	flussoElabMifId:=null;
        end if;
        return;
	when others  THEN
		raise notice '% % Errore DB % % %',strMessaggioFinale,coalesce(strMessaggio,''),SQLSTATE,
	        	substring(upper(SQLERRM) from 1 for 100),mifCountRec;
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||'ERRORE DB:'||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 500)||' '||mifCountRec||'.' ;
        numeroOrdinativiTrasm:=0;
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);

        if flussoElabMifLogId is not null then
            flussoElabMifId:=flussoElabMifLogId;
        	update  mif_t_flusso_elaborato
   			set (flusso_elab_mif_esito,flusso_elab_mif_esito_msg)=
                ('KO',messaggioRisultato)
		    where flusso_elab_mif_id=flussoElabMifLogId;

        else
        	flussoElabMifId:=null;
        end if;

        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

DROP FUNCTION IF EXISTS fnc_mif_ordinativo_entrata_splus
( enteProprietarioId integer,
  nomeEnte VARCHAR,
  annobilancio varchar,
  loginOperazione varchar,
  dataElaborazione timestamp,
  out flussoElabMifDistOilId integer,
  out flussoElabMifId integer,
  out numeroOrdinativiTrasm integer,
  out nomeFileMif varchar,
  out codiceRisultato integer,
  out messaggioRisultato varchar );

DROP FUNCTION IF EXISTS fnc_mif_ordinativo_entrata_splus
( enteProprietarioId integer,
  nomeEnte VARCHAR,
  annobilancio varchar,
  loginOperazione varchar,
  dataElaborazione timestamp,
  mifOrdRitrasmElabId integer,
  out flussoElabMifDistOilId integer,
  out flussoElabMifId integer,
  out numeroOrdinativiTrasm integer,
  out nomeFileMif varchar,
  out codiceRisultato integer,
  out messaggioRisultato varchar );
  


CREATE OR REPLACE FUNCTION fnc_mif_ordinativo_entrata_splus
( enteProprietarioId integer,
  nomeEnte VARCHAR,
  annobilancio varchar,
  loginOperazione varchar,
  dataElaborazione timestamp,
  mifOrdRitrasmElabId integer,
  out flussoElabMifDistOilId integer,
  out flussoElabMifId integer,
  out numeroOrdinativiTrasm integer,
  out nomeFileMif varchar,
  out codiceRisultato integer,
  out messaggioRisultato varchar )
RETURNS record AS
$body$
DECLARE


 strMessaggio VARCHAR(1500):='';
 strMessaggioFinale VARCHAR(1500):='';
 strMessaggioScarto VARCHAR(1500):='';
 strExecSql VARCHAR(1500):='';

 mifOrdinativoIdRec record;

 mifFlussoOrdinativoRec  mif_t_ordinativo_entrata%rowtype;
-- ordinativoRec record;


 enteOilRec record;
 enteProprietarioRec record;
 soggettoRec record;
 isIndirizzoBenef boolean:=false;
 ordRec record;

 bilElemRec record;
 indirizzoRec record;
 ordSostRec record;
 ricevutaRec record;
 quoteOrdinativoRec record;

 flussoElabMifValore varchar (1000):=null;
 flussoElabMifValoreDesc varchar (1000):=null;




 classCdrTipoId INTEGER:=null;
 classCdcTipoId INTEGER:=null;

 codiceCge  varchar(50):=null;
 siopeDef   varchar(50):=null;
 descCge    varchar(500):=null;
 codResult   integer:=null;

 indirizzoEnte varchar(500):=null;
 localitaEnte varchar(500):=null;
 soggettoEnteId INTEGER:=null;
 soggettoRifId integer:=null;
 siopeClassTipoId integer:=null;

 ordTipoCodeId integer :=null;
 ordStatoCodeIId  integer :=null;
 ordStatoCodeAId  integer :=null;
 ordRelazCodeTipoId integer :=null;
 ordDetTsTipoId integer :=null;



 ambitoFinId integer:=null;

 isDefAnnoRedisuo  varchar(5):=null;
 isRicevutaAttivo boolean:=false;
 isGestioneFatture boolean:=false;

 codiceUECodeTipo VARCHAR(50):=null;
 codiceUECodeTipoId integer:=null;


 ordAllegatoCartAttrId integer:=null;
 ordinativoTsDetTipoId integer:=null;
 movgestTsTipoSubId integer:=null;
 ordinativoSpesaTipoId integer:=null;


 flussoElabMifLogId  integer :=null;
 flussoElabMifTipoId integer :=null;
 flussoElabMifTipoNomeFile varchar(500):=null;
 flussoElabMifTipoDec BOOLEAN:=false;

 flussoElabMifOilId integer :=null;
 flussoElabMifDistOilRetId integer:=null;
 mifOrdSpesaId integer:=null;

 NVL_STR               CONSTANT VARCHAR:='';
 dataInizioVal timestamp :=annoBilancio||'-01-01';
 dataFineVal timestamp :=annoBilancio||'-12-31';


 ordImporto numeric :=0;

 dataAvvioSiopeNew VARCHAR(50):=null;
 bAvvioSiopeNew   boolean:=false;


 -- siope plus
 tipoIncassoCode    varchar(100):=null;
 tipoIncassoCodeId  integer:=null;
 tipoRitOrdInc      varchar(100):=null;
 tipoSplitOrdInc    varchar(100):=null;
 tipoSubOrdInc      varchar(100):=null;
 tipoRitenuteInc    varchar(100):=null;
 tipoIncassoCompensazione varchar(100):=null;
 tipoIncassoRegolarizza varchar(100):=null;
 tipoIncassoCassa varchar(100):=null;
 tipoContoCCPCode varchar(100):=null;
 tipoContoCCPCodeId integer:=null;
 siopeCodeTipo varchar(50):=null;
 siopeCodeTipoId integer :=null;
 codiceFinVTbr varchar(50):=null;
 codiceFinVTipoTbrId integer:=null;

 tipoClassFruttifero varchar(100):=null;
 valFruttifero varchar(100):=null;
 valFruttiferoStr varchar(100):=null;
 valFruttiferoStrAltro varchar(100):=null;
 tipoClassFruttiferoId integer:=null;
 valFruttiferoId  integer:=null;
 eventoTipoCodeId integer:=null;
 collEventoCodeId integer:=null;
 ricorrenteCodeTipoId integer:=null;
 ricorrenteCodeTipo varchar(100):=null;

 classVincolatoCode   varchar(100):=null;
 classVincolatoCodeId INTEGER:=null;

 ordCodiceBollo  varchar(10):=null;
 ordCodiceBolloDesc varchar(500):=null;
 codiceBolloPlusDesc   varchar(100):=null;

 codiceBolloPlusEsente boolean:=false;
 isOrdCommerciale boolean:=false;

 attoAmmTipoAllRag varchar(50):=null;
 attoAmmStrTipoRag varchar(50):=null;
 -- siope plus


 ORD_TIPO_CODE_P  CONSTANT  varchar :='P';
 ORD_TIPO_CODE_I  CONSTANT  varchar :='I';
 ORD_STATO_CODE_I CONSTANT  varchar :='I';
 ORD_STATO_CODE_A CONSTANT  varchar :='A';
 ORD_TIPO_IMPORTO_A CONSTANT  varchar :='A';


 AMBITO_FIN CONSTANT  varchar :='AMBITO_FIN';
 ALLEG_CART_ATTR CONSTANT VARCHAR:='flagAllegatoCartaceo';

 CDC CONSTANT varchar:='CDC';
 CDR CONSTANT varchar:='CDR';

 FUNZIONE_CODE_I CONSTANT  varchar :='INSERIMENTO';
 FUNZIONE_CODE_S CONSTANT  varchar :='SOSTITUZIONE';
 FUNZIONE_CODE_N CONSTANT  varchar :='ANNULLO';

 -- annullamenti e variazioni dopo trasmissione
 FUNZIONE_CODE_A CONSTANT  varchar :='ANNULLO';
 FUNZIONE_CODE_VB CONSTANT  varchar :='VARIAZIONE';

 ORD_RELAZ_CODE_SOS  CONSTANT  varchar :='SOS_ORD';
 ORD_TS_DET_TIPO_A CONSTANT varchar:='A';
 MOVGEST_TS_TIPO_S  CONSTANT varchar:='S';


 REGMOVFIN_STATO_A              CONSTANT varchar:='A';
 SEGNO_ECONOMICO				CONSTANT varchar:='Avere';

 SPACE_ASCII CONSTANT integer:=32;
 VT_ASCII CONSTANT integer:=13;
 BS_ASCII CONSTANT integer:=10;

 NUM_SETTE CONSTANT integer:=7;
 ZERO_PAD CONSTANT  varchar :='0';

 ELAB_MIF_ESITO_IN CONSTANT  varchar :='IN';
 MANDMIF_TIPO  CONSTANT  varchar :='REVMIF_SPLUS';


 SEPARATORE     CONSTANT  varchar :='|';

 mifFlussoElabMifArr flussoElabMifRecType[];

 mifCountTmpRec integer :=null;
 mifCountRec integer:=1;
 mifAFlussoElabTypeRec  flussoElabMifRecType;
 flussoElabMifElabRec  flussoElabMifRecType;
 mifElabRec record;

 tipologiaTipoId integer:=null;
 categoriaTipoId integer:=null;
 famTitEntTipoCategId integer:=null;
 ordinativoSplitId integer:=null;

 -- 20.03.2018 Sofia SIAC-5968
 ordinativoReintroitoId  integer:=null;
 tipoRelREIORD varchar(20):=null;
 tipoRelSPR  varchar(20):=null;
 tipoDocsComm  varchar(50):=null;
 tipoPdcIVA    varchar(50):=null;
 codePdcIVA    varchar(50):=null;

 numeroDocs  varchar(10):=null;
 tipoDocs    varchar(50):=null;
 tipoGruppoDocs   varchar(50):=null;
 docAnalogico varchar(50):=null;
 attrCodeDataScad varchar(50):=null;

 titoloCorrente varchar(10):=null;
 descriTitoloCorrente varchar(50):=null;
 titoloCapitale varchar(10):=null;
 descriTitoloCapitale varchar(50):=null;
 titoloCap varchar(10):=null;
 macroAggrTipoCode varchar(20):=null;
 macroAggrTipoCodeId integer:=null;


 -- 23.02.2018 Sofia jira siac-5849
 defNaturaPag  varchar(100):=null;
 famMacroTitCode varchar(100):=null;
 famMacroTitCodeId integer:=null;

 FAM_TIT_ENT_TIPCATEG CONSTANT varchar:='Entrata - TitoliTipologieCategorie';
 CATEGORIA CONSTANT varchar:='CATEGORIA';
 TIPOLOGIA CONSTANT varchar:='TIPOLOGIA';



 FLUSSO_MIF_ELAB_TEST_COD_ABI_BT      CONSTANT integer:=1;  -- codice_ABI_BT
 FLUSSO_MIF_ELAB_TEST_COD_ENTE_IPA    CONSTANT integer:=4;  -- codice_ente
 FLUSSO_MIF_ELAB_TEST_DESC_ENTE       CONSTANT integer:=5;  -- descrizione_ente
 FLUSSO_MIF_ELAB_TEST_COD_ISTAT_ENTE  CONSTANT integer:=6;  -- codice_istat_ente
 FLUSSO_MIF_ELAB_TEST_CODFISC_ENTE    CONSTANT integer:=7;  -- codice_fiscale_ente
 FLUSSO_MIF_ELAB_TEST_CODTRAMITE_ENTE CONSTANT integer:=8;  -- codice_tramite_ente
 FLUSSO_MIF_ELAB_TEST_CODTRAMITE_BT   CONSTANT integer:=9;  -- codice_tramite_bt
 FLUSSO_MIF_ELAB_TEST_COD_ENTE_BT     CONSTANT integer:=10; -- codice_ente_bt
 FLUSSO_MIF_ELAB_TEST_RIFERIMENTO_ENTE CONSTANT integer:=11; -- riferimento_ente
 FLUSSO_MIF_ELAB_TEST_ESERCIZIO       CONSTANT integer:=12;  -- esercizio

 FLUSSO_MIF_ELAB_INIZIO_ORD     CONSTANT integer:=13;  -- tipo_operazione
 FLUSSO_MIF_ELAB_FATTURE        CONSTANT integer:=35;  -- codice_ipa_ente_siope
 FLUSSO_MIF_ELAB_FATT_CODFISC   CONSTANT integer:=40;  -- codice_fiscale_emittente_siope
 FLUSSO_MIF_ELAB_FATT_DATASCAD_PAG  CONSTANT integer:=44;  -- data_scadenza_pagam_siope
 FLUSSO_MIF_ELAB_FATT_NATURA_PAG CONSTANT integer:=46;  -- natura_spesa_siope
 FLUSSO_MIF_ELAB_NUM_SOSPESO    CONSTANT integer:=62;  -- numero_provvisorio



BEGIN

	numeroOrdinativiTrasm:=0;
    codiceRisultato:=0;
    messaggioRisultato:='';
	flussoElabMifId:=null;
    nomeFileMif:=null;

    flussoElabMifDistOilId:=null;

	strMessaggioFinale:='Invio ordinativi di entrata a SIOPE PLUS.';


    -- enteOilRec
    strMessaggio:='Lettura dati ente OIL  per flusso MIF tipo '||MANDMIF_TIPO||'.';
    select * into strict enteOilRec
    from siac_t_ente_oil ente
    where ente.ente_proprietario_id=enteProprietarioId
    and   ente.data_cancellazione is null
    and   ente.validita_fine is null;

    if enteOilRec is null then
    	raise exception ' Errore in reperimento dati';
    end if;

    if enteOilRec.ente_oil_siope_plus=false then
    	raise exception ' SIOPE PLUS non attivo per l''ente.';
    end if;

    -- inserimento record in tabella mif_t_flusso_elaborato
    strMessaggio:='Inserimento mif_t_flusso_elaborato tipo_flusso='||MANDMIF_TIPO||'.';

    insert into mif_t_flusso_elaborato
    (flusso_elab_mif_data ,
     flusso_elab_mif_esito,
     flusso_elab_mif_esito_msg,
     flusso_elab_mif_file_nome,
     flusso_elab_mif_tipo_id,
     flusso_elab_mif_id_flusso_oil, -- da calcolare su tab progressivi
     validita_inizio,
     ente_proprietario_id,
     login_operazione)
     (select dataElaborazione,
             ELAB_MIF_ESITO_IN,
             'Elaborazione in corso per tipo flusso '||MANDMIF_TIPO,
      		 tipo.flusso_elab_mif_nome_file,
     		 tipo.flusso_elab_mif_tipo_id,
     		 null,--flussoElabMifOilId, -- da calcolare su tab progressivi
    		 dataElaborazione,
     		 enteProprietarioId,
      		 loginOperazione
      from mif_d_flusso_elaborato_tipo tipo
      where tipo.ente_proprietario_id=enteProprietarioId
      and   tipo.flusso_elab_mif_tipo_code=MANDMIF_TIPO
      and   tipo.data_cancellazione is null
      and   tipo.validita_fine is null
     )
     returning flusso_elab_mif_id into flussoElabMifLogId;-- valore da restituire

      raise notice 'flussoElabMifLogId %',flussoElabMifLogId;

     if flussoElabMifLogId is null then
       RAISE EXCEPTION ' Errore generico in inserimento %.',MANDMIF_TIPO;
     end if;

    strMessaggio:='Verifica esistenza elaborazioni in corso per tipo flusso '||MANDMIF_TIPO||'.';
	codResult:=null;
    select distinct 1 into codResult
    from mif_t_flusso_elaborato elab,  mif_d_flusso_elaborato_tipo tipo
    where  elab.flusso_elab_mif_id!=flussoElabMifLogId
    and    elab.flusso_elab_mif_esito=ELAB_MIF_ESITO_IN
    and    elab.data_cancellazione is null
    and    elab.validita_fine is null
    and    tipo.flusso_elab_mif_tipo_id=elab.flusso_elab_mif_tipo_id
    and    tipo.flusso_elab_mif_tipo_code=MANDMIF_TIPO
    and    tipo.ente_proprietario_id=enteProprietarioId
    and    tipo.data_cancellazione is null
    and    tipo.validita_fine is null;

    if codResult is not null then
    	RAISE EXCEPTION ' Verificare situazioni esistenti.';
    end if;

    -- verifico se la tabella degli id contiene dati in tal caso elaborazioni precedenti sono andate male
    strMessaggio:='Verifica esistenza dati in tabella temporanea id [mif_t_ordinativo_entrata_id].';
    codResult:=null;

    select distinct 1 into codResult
    from mif_t_ordinativo_entrata_id mif
    where mif.ente_proprietario_id=enteProprietarioId;


    if codResult is not null then
      RAISE EXCEPTION ' Dati presenti verificarne il contenuto ed effettuare pulizia prima di rieseguire.';
    end if;



    codResult:=null;
    -- recupero indentificativi tipi codice vari
	begin

        -- ordTipoCodeId
        strMessaggio:='Lettura ordinativo tipo Code Id '||ORD_TIPO_CODE_I||'.';
        select ord_tipo.ord_tipo_id into strict ordTipoCodeId
        from siac_d_ordinativo_tipo ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.ord_tipo_code=ORD_TIPO_CODE_I
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));

		-- ordinativoSpesaTipoId
        strMessaggio:='Lettura ordinativo tipo Code Id '||ORD_TIPO_CODE_P||'.';
        select ord_tipo.ord_tipo_id into strict ordinativoSpesaTipoId
        from siac_d_ordinativo_tipo ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.ord_tipo_code=ORD_TIPO_CODE_P
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));

		-- ordStatoCodeIId
        strMessaggio:='Lettura ordinativo stato Code Id '||ORD_STATO_CODE_I||'.';
        select ord_tipo.ord_stato_id into strict ordStatoCodeIId
        from siac_d_ordinativo_stato ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.ord_stato_code=ORD_STATO_CODE_I
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));

        -- ordStatoCodeAId
        strMessaggio:='Lettura ordinativo stato Code Id '||ORD_STATO_CODE_A||'.';
        select ord_tipo.ord_stato_id into strict ordStatoCodeAId
        from siac_d_ordinativo_stato ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.ord_stato_code=ORD_STATO_CODE_A
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));


        -- classCdrTipoId
        strMessaggio:='Lettura classif Id per tipo sac='||CDR||'.';
        select tipo.classif_tipo_id into strict classCdrTipoId
        from siac_d_class_tipo tipo
        where tipo.ente_proprietario_id=enteProprietarioId
        and   tipo.classif_tipo_code=CDR
        and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));

        -- classCdcTipoId
        strMessaggio:='Lettura classif Id per tipo sac='||CDC||'.';
        select tipo.classif_tipo_id into strict classCdrTipoId
        from siac_d_class_tipo tipo
        where tipo.ente_proprietario_id=enteProprietarioId
        and   tipo.classif_tipo_code=CDC
        and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));


		-- ordAllegatoCartAttrId
        strMessaggio:='Lettura attributo ordinativo  Code Id '||ALLEG_CART_ATTR||'.';
        select attr.attr_id into strict ordAllegatoCartAttrId
        from siac_t_attr attr
        where attr.ente_proprietario_id=enteProprietarioId
        and   attr.attr_code=ALLEG_CART_ATTR
        and   attr.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',attr.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(attr.validita_fine,dataElaborazione));

		-- ordDetTsTipoId
        strMessaggio:='Lettura tipo importo ordinativo  Code Id '||ORD_TIPO_IMPORTO_A||'.';
        select ord_tipo.ord_ts_det_tipo_id into strict ordDetTsTipoId
        from siac_d_ordinativo_ts_det_tipo ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.ord_ts_det_tipo_code=ORD_TIPO_IMPORTO_A
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));



		-- ordinativoTsDetTipoId
        strMessaggio:='Lettura ordinativo_ts_det_tipo '||ORD_TS_DET_TIPO_A||'.';
		select ord_tipo.ord_ts_det_tipo_id into strict ordinativoTsDetTipoId
    	from siac_d_ordinativo_ts_det_tipo ord_tipo
		where ord_tipo.ente_proprietario_id=enteProprietarioId
		and   ord_tipo.ord_ts_det_tipo_code=ORD_TS_DET_TIPO_A
		and   ord_tipo.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));

        -- movgestTsTipoSubId
        strMessaggio:='Lettura movgest_ts_tipo  '||MOVGEST_TS_TIPO_S||'.';
		select ord_tipo.movgest_ts_tipo_id into strict movgestTsTipoSubId
    	from siac_d_movgest_ts_tipo ord_tipo
		where ord_tipo.ente_proprietario_id=enteProprietarioId
		and   ord_tipo.movgest_ts_tipo_code=MOVGEST_TS_TIPO_S
		and   ord_tipo.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));

        -- ordRelazCodeTipoId
        strMessaggio:='Lettura relazione   Code Id '||ORD_RELAZ_CODE_SOS||'.';
		select ord_tipo.relaz_tipo_id into strict ordRelazCodeTipoId
    	from siac_d_relaz_tipo ord_tipo
		where ord_tipo.ente_proprietario_id=enteProprietarioId
		and   ord_tipo.relaz_tipo_code=ORD_RELAZ_CODE_SOS
		and   ord_tipo.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));


        -- ambitoFinId
        strMessaggio:='Lettura ambito  Code Id '||AMBITO_FIN||'.';
        select a.ambito_id into strict ambitoFinId
        from siac_d_ambito a
        where a.ente_proprietario_id=enteProprietarioId
   		and   a.ambito_code=AMBITO_FIN
        and   a.data_cancellazione is null
        and   a.validita_fine is null;

		-- tipologiaTipoId
        strMessaggio:='Lettura tipologia_code_tipo_id  '||TIPOLOGIA||'.';
		select tipo.classif_tipo_id into strict tipologiaTipoId
    	from siac_d_class_tipo tipo
		where tipo.ente_proprietario_id=enteProprietarioId
		and   tipo.classif_tipo_code=TIPOLOGIA
		and   tipo.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',validita_inizio)
		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(validita_fine,dataElaborazione));

   	    -- categoriaTipoId
        strMessaggio:='Lettura categoria_code_tipo_id  '||CATEGORIA||'.';
		select tipo.classif_tipo_id into strict categoriaTipoId
    	from siac_d_class_tipo tipo
		where tipo.ente_proprietario_id=enteProprietarioId
		and   tipo.classif_tipo_code=CATEGORIA
		and   tipo.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',validita_inizio)
		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(validita_fine,dataElaborazione));


		-- famTitEntTipoCategId
		-- FAM_TIT_ENT_TIPCATEG='Entrata - TitoliTipologieCategorie'
        strMessaggio:='Lettura fam_tit_ent_tipcategorie_code_tipo_id  '||FAM_TIT_ENT_TIPCATEG||'.';
		select fam.classif_fam_tree_id into strict famTitEntTipoCategId
        from siac_t_class_fam_tree fam
        where fam.ente_proprietario_id=enteProprietarioId
        and   fam.class_fam_code=FAM_TIT_ENT_TIPCATEG
        and   fam.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',fam.validita_inizio)
  		and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(fam.validita_fine,dataElaborazione));

        -- flussoElabMifTipoId
        strMessaggio:='Lettura tipo flusso MIF  Code Id '||MANDMIF_TIPO||'.';
        select tipo.flusso_elab_mif_tipo_id, tipo.flusso_elab_mif_nome_file, tipo.flusso_elab_mif_tipo_dec
               into strict flussoElabMifTipoId,flussoElabMifTipoNomeFile,flussoElabMifTipoDec
        from mif_d_flusso_elaborato_tipo tipo
        where tipo.ente_proprietario_id=enteProprietarioId
   		and   tipo.flusso_elab_mif_tipo_code=MANDMIF_TIPO
        and   tipo.data_cancellazione is null
        and   tipo.validita_fine is null;

        -- raise notice 'flussoElabMifTipoId %',flussoElabMifTipoId;


        strMessaggio:='Lettura flusso struttura SIOPE PLUS  per tipo '||MANDMIF_TIPO||'.';
        for mifElabRec IN
        (select m.*
         from mif_d_flusso_elaborato m
         where m.flusso_elab_mif_tipo_id=flussoElabMifTipoId
         and   m.flusso_elab_mif_elab=true
         order by m.flusso_elab_mif_ordine_elab
        )
        loop
        	mifAFlussoElabTypeRec.flussoElabMifId :=mifElabRec.flusso_elab_mif_id;
            mifAFlussoElabTypeRec.flussoElabMifAttivo :=mifElabRec.flusso_elab_mif_attivo;
            mifAFlussoElabTypeRec.flussoElabMifDef :=mifElabRec.flusso_elab_mif_default;
            mifAFlussoElabTypeRec.flussoElabMifElab :=mifElabRec.flusso_elab_mif_elab;
            mifAFlussoElabTypeRec.flussoElabMifParam :=mifElabRec.flusso_elab_mif_param;

            mifAFlussoElabTypeRec.flusso_elab_mif_ordine_elab :=mifElabRec.flusso_elab_mif_ordine_elab;

            mifAFlussoElabTypeRec.flusso_elab_mif_ordine :=mifElabRec.flusso_elab_mif_ordine;

            mifAFlussoElabTypeRec.flusso_elab_mif_code :=mifElabRec.flusso_elab_mif_code;
            mifAFlussoElabTypeRec.flusso_elab_mif_campo :=mifElabRec.flusso_elab_mif_campo;

            mifFlussoElabMifArr[mifElabRec.flusso_elab_mif_ordine_elab]:=mifAFlussoElabTypeRec;

        end loop;


        -- enteProprietarioRec
        strMessaggio:='Lettura dati ente proprietario per flusso SIOPE PLUS tipo '||MANDMIF_TIPO||'.';
        select * into strict enteProprietarioRec
        from siac_t_ente_proprietario ente
        where ente.ente_proprietario_id=enteProprietarioId
        and   ente.data_cancellazione is null
        and   ente.validita_fine is null;

        -- soggettoEnteId
        strMessaggio:='Lettura indirizzo ente proprietario [siac_r_soggetto_ente_proprietario] per flusso SIOPE PLUS tipo '||MANDMIF_TIPO||'.';
        select ente.soggetto_id into soggettoEnteId
        from siac_r_soggetto_ente_proprietario ente
        where ente.ente_proprietario_id=enteProprietarioId
        and   ente.data_cancellazione is null
        and   ente.validita_fine is null;

        if soggettoEnteId is not null then
            strMessaggio:='Lettura indirizzo ente proprietario [siac_t_indirizzo_soggetto] per flusso SIOPE PLUS tipo '||MANDMIF_TIPO||'.';

        	select viaTipo.via_tipo_code||' '||indir.toponimo||' '||indir.numero_civico,
        		   com.comune_desc
                   into indirizzoEnte,localitaEnte
            from siac_t_indirizzo_soggetto indir,
                 siac_t_comune com,
                 siac_d_via_tipo viaTipo
            where indir.soggetto_id=soggettoEnteId
            and   indir.principale='S'
            and   indir.data_cancellazione is null
            and   indir.validita_fine is null
            and   com.comune_id=indir.comune_id
            and   com.data_cancellazione is null
            and   com.validita_fine is null
            and   viaTipo.via_tipo_id=indir.via_tipo_id
            and   viaTipo.data_cancellazione is null
	   		and   date_trunc('day',dataElaborazione)>=date_trunc('day',viaTipo.validita_inizio)
 			and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(viaTipo.validita_fine,dataElaborazione))
            order by indir.indirizzo_id;
        end if;


        -- calcolo progressivo "distinta" per flusso REVMIF
	    -- calcolo su progressi di flussoElabMifDistOilId flussoOIL univoco per tipo flusso
        strMessaggio:='Lettura progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_'||MANDMIF_TIPO||'_'||annoBilancio||'  per flusso SIOPE PLUS tipo '||MANDMIF_TIPO||'.';
        codResult:=null;

        select prog.prog_value into flussoElabMifDistOilRetId
          from siac_t_progressivo prog
        where prog.ente_proprietario_id=enteProprietarioId
        and   prog.prog_key='oil_'||MANDMIF_TIPO||'_'||annoBilancio
        and   prog.ambito_id=ambitoFinId
        and   prog.data_cancellazione is null
        and   prog.validita_fine is null;

        if flussoElabMifDistOilRetId is null then
			strMessaggio:='Inserimento progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_out_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
        	insert into siac_t_progressivo
            (prog_key,
             prog_value,
			 ambito_id,
		     validita_inizio,
			 ente_proprietario_id,
			 login_operazione
            )
            values
            ('oil_'||MANDMIF_TIPO||'_'||annoBilancio,1,ambitoFinId,now(),enteProprietarioId,loginOperazione)
            returning prog_id into codResult;

            if codResult is null then
            	RAISE EXCEPTION ' Progressivo non inserito.';
            else
            	flussoElabMifDistOilRetId:=0;
            end if;
        end if;

        if flussoElabMifDistOilRetId is not null then
	        flussoElabMifDistOilRetId:=flussoElabMifDistOilRetId+1;
        end if;


	    -- calcolo su progressi di flussoElabMifOilId flussoOIL univoco
        strMessaggio:='Lettura progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_out_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
        codResult:=null;
        select prog.prog_value into flussoElabMifOilId
        from siac_t_progressivo prog
        where prog.ente_proprietario_id=enteProprietarioId
        and   prog.prog_key='oil_out_'||annoBilancio
        and   prog.ambito_id=ambitoFinId
        and   prog.data_cancellazione is null
        and   prog.validita_fine is null;

        if flussoElabMifOilId is null then
			strMessaggio:='Inserimento progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_out_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
        	insert into siac_t_progressivo
            (prog_key,
             prog_value,
			 ambito_id,
		     validita_inizio,
			 ente_proprietario_id,
			 login_operazione
            )
            values
            ('oil_out_'||annoBilancio,1,ambitoFinId,now(),enteProprietarioId,loginOperazione)
            returning prog_id into codResult;

            if codResult is null then
            	RAISE EXCEPTION ' Progressivo non inserito.';
            else
            	flussoElabMifOilId:=0;
            end if;
        end if;

        if flussoElabMifOilId is not null then
	        flussoElabMifOilId:=flussoElabMifOilId+1;
        end if;

        exception
		when no_data_found then
			RAISE EXCEPTION ' Non presente in archivio';
        when TOO_MANY_ROWS THEN
            RAISE EXCEPTION ' Diverse righe presenti in archivio.';
		when others  THEN
			RAISE EXCEPTION ' %-%.',SQLSTATE,substring(upper(SQLERRM) from 1 for 500);
    end;




    --- popolamento mif_t_ordinativo_entrata_id


    -- ordinativi emessi o emessi/spostati non ancora mai trasmessi codice_funzione='I'
    strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_entrata_id].Codice funzione='||FUNZIONE_CODE_I||'.';

    insert into mif_t_ordinativo_entrata_id
    (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil,
     mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
     mif_ord_soggetto_id, mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
     mif_ord_atto_amm_id, mif_ord_contotes_id,mif_ord_notetes_id,mif_ord_dist_id,mif_ord_desc,
     mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
     mif_ord_codbollo_id,
     mif_ord_login_creazione,mif_ord_login_modifica,
     ente_proprietario_id, login_operazione)
    (
     with
     ritrasm as
     (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	  from mif_t_ordinativo_ritrasmesso r
	  where mifOrdRitrasmElabId is not null
	  and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	  and   r.ente_proprietario_id=enteProprietarioId
	  and   r.data_cancellazione is null),
     ordinativi as
     (select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_I mif_ord_codice_funzione,
             bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
             ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
             extract('year' from ord.ord_emissione_data)||'-'||
             lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
             lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione,0 mif_ord_ord_anno_movg,
             0 mif_ord_soggetto_id,0 mif_ord_subord_id,elem.elem_id mif_ord_elem_id,
             0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_atto_amm_id,ord.contotes_id mif_ord_contotes_id,
             ord.notetes_id mif_ord_notetes_id,ord.dist_id mif_ord_dist_id, ord.ord_desc mif_ord_desc ,
             ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
             ord.codbollo_id mif_ord_codbollo_id,
             ord.login_creazione mif_ord_login_creazione,ord.login_modifica mif_ord_login_modifica,
             enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
      from siac_t_ordinativo ord,siac_r_ordinativo_stato ord_stato,siac_t_bil bil, siac_t_periodo per,siac_r_ordinativo_bil_elem elem
      where  bil.ente_proprietario_id=enteProprietarioId
        and  per.periodo_id=bil.periodo_id
        and  per.anno::integer <=annoBilancio::integer
         and  ord.bil_id=bil.bil_id
         and  ord.ord_tipo_id=ordTipoCodeId
         and  ord_stato.ord_id=ord.ord_id
         and  ord_stato.data_cancellazione is null
	   	 and  date_trunc('day',dataElaborazione)>=date_trunc('day',ord_stato.validita_inizio)
		 and  ord_stato.validita_fine is null
         and  ord_stato.ord_stato_id=ordStatoCodeIId
         and  ord.ord_trasm_oil_data is null
         and  ord.ord_emissione_data<=dataElaborazione
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175		
         and  ord.ord_da_trasmettere=true -- 19.06.2018 Sofia Sofia siac-6175
         and  elem.ord_id=ord.ord_id
         and  elem.data_cancellazione is null
         and  not exists (select 1 from siac_r_ordinativo rord
                          where rord.ord_id_a=ord.ord_id
                          and   rord.data_cancellazione is null
                          and   rord.validita_fine is null
			              and   rord.relaz_tipo_id=ordRelazCodeTipoId)
      )
      select   o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
               o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
               o.mif_ord_soggetto_id, o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_notetes_id,o.mif_ord_dist_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.mif_ord_codbollo_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id, o.login_operazione
      from ordinativi o
	  where mifOrdRitrasmElabId is null
	     or (mifOrdRitrasmElabId is not null and exists
            (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
      );


      -- ordinativi emessi o emessi/spostati non ancora mai trasmessi, sostituzione di altro ordinativo codice_funzione='S'
      strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_entrata_id].Codice funzione='||FUNZIONE_CODE_S||'.';

      insert into mif_t_ordinativo_entrata_id
	  (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil,
       mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
       mif_ord_soggetto_id, mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
       mif_ord_atto_amm_id, mif_ord_contotes_id,mif_ord_notetes_id,mif_ord_dist_id,mif_ord_desc,
       mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
       mif_ord_codbollo_id,
       mif_ord_login_creazione,mif_ord_login_modifica,
       ente_proprietario_id, login_operazione)
	  (
	   with
       ritrasm as
       (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	    from mif_t_ordinativo_ritrasmesso r
	    where mifOrdRitrasmElabId is not null
	    and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	    and   r.ente_proprietario_id=enteProprietarioId
	    and   r.data_cancellazione is null),
       ordinativi as
       (select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_S mif_ord_codice_funzione,
               bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
               ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
               extract('year' from ord.ord_emissione_data)||'-'||
               lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
               lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione,
               0 mif_ord_ord_anno_movg,
               0 mif_ord_soggetto_id,0 mif_ord_subord_id,
               elem.elem_id mif_ord_elem_id,
               0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_atto_amm_id,
               ord.contotes_id mif_ord_contotes_id,ord.notetes_id mif_ord_notetes_id,ord.dist_id mif_ord_dist_id,
               ord.ord_desc mif_ord_desc,
               ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
               ord.codbollo_id mif_ord_codbollo_id,
               ord.login_creazione mif_ord_login_creazione, ord.login_modifica mif_ord_login_modifica,
               enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
  	    from siac_t_ordinativo ord,siac_r_ordinativo_stato ord_stato,
             siac_t_bil bil, siac_t_periodo per,
             siac_r_ordinativo_bil_elem elem,siac_r_ordinativo rord
  	    where  bil.ente_proprietario_id=enteProprietarioId
   		  and  per.periodo_id=bil.periodo_id
    	  and  per.anno::integer <=annoBilancio::integer
    	  and  ord.bil_id=bil.bil_id
    	  and  ord.ord_tipo_id=ordTipoCodeId
    	  and  ord_stato.ord_id=ord.ord_id
    	  and  ord_stato.data_cancellazione is null
	   	  and  date_trunc('day',dataElaborazione)>=date_trunc('day',ord_stato.validita_inizio)
          and  ord_stato.validita_fine is null
    	  and  ord_stato.ord_stato_id=ordStatoCodeIId
	      and  ord.ord_trasm_oil_data is null
    	  and  ord.ord_emissione_data<=dataElaborazione
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175		
          and  ord.ord_da_trasmettere=true -- 19.06.2018 Sofia Sofia siac-6175
    	  and  elem.ord_id=ord.ord_id
    	  and  elem.data_cancellazione is null
          and  elem.validita_fine is null
          and  rord.ord_id_a=ord.ord_id
          and  rord.relaz_tipo_id=ordRelazCodeTipoId
          and  rord.data_cancellazione is null
          and  rord.validita_fine is null
        )
        select o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
               o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
               o.mif_ord_soggetto_id, o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_notetes_id,o.mif_ord_dist_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.mif_ord_codbollo_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id, o.login_operazione
        from ordinativi o
	    where mifOrdRitrasmElabId is null
	     or (mifOrdRitrasmElabId is not null and exists
            (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
      );

      -- ordinativi emessi e annullati mai trasmessi codice_funzione='N'
      strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_entrata_id].Codice funzione='||FUNZIONE_CODE_N||'.';

	  insert into mif_t_ordinativo_entrata_id
	  (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil,
       mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
       mif_ord_soggetto_id, mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
       mif_ord_atto_amm_id, mif_ord_contotes_id,mif_ord_notetes_id,mif_ord_dist_id,mif_ord_desc,
       mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
       mif_ord_codbollo_id,
       mif_ord_login_creazione,mif_ord_login_modifica,
       ente_proprietario_id, login_operazione)
	  (
	   with
       ritrasm as
       (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	    from mif_t_ordinativo_ritrasmesso r
	    where mifOrdRitrasmElabId is not null
	    and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	    and   r.ente_proprietario_id=enteProprietarioId
	    and   r.data_cancellazione is null),
       ordinativi as
       (select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_N mif_ord_codice_funzione,
               bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
      	 	   ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
               extract('year' from ord.ord_emissione_data)||'-'||
               lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
               lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione,
               0 mif_ord_ord_anno_movg,
               0 mif_ord_soggetto_id,0 mif_ord_subord_id,elem.elem_id mif_ord_elem_id,
               0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_atto_amm_id,
               ord.contotes_id mif_ord_contotes_id,ord.notetes_id mif_ord_notetes_id,ord.dist_id mif_ord_dist_id,
               ord.ord_desc mif_ord_desc,
               ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
               ord.codbollo_id mif_ord_codbollo_id,
               ord.login_creazione mif_ord_login_creazione,ord.login_modifica mif_ord_login_modifica,
               enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
  	    from siac_t_ordinativo ord, siac_r_ordinativo_stato ord_stato,
             siac_t_bil bil, siac_t_periodo per,
             siac_r_ordinativo_bil_elem elem
        where  bil.ente_proprietario_id=enteProprietarioId
         and  per.periodo_id=bil.periodo_id
         and  per.anno::integer <=annoBilancio::integer
         and  ord.bil_id=bil.bil_id
         and  ord.ord_tipo_id=ordTipoCodeId
         and  ord_stato.ord_id=ord.ord_id
         and  ord_stato.validita_inizio<=dataElaborazione -- questa e'' la data di annullamento
         and  ord.ord_emissione_data<=dataElaborazione
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175		
         and  ord.ord_da_trasmettere=true -- 19.06.2018 Sofia Sofia siac-6175
         and  ord_stato.data_cancellazione is null
         and  date_trunc('day',dataElaborazione)>=date_trunc('day',ord_stato.validita_inizio)
   		 and  ord_stato.validita_fine is null
         and  ord_stato.ord_stato_id=ordStatoCodeAId
         and  ord.ord_trasm_oil_data is null
         and  elem.ord_id=ord.ord_id
         and  elem.data_cancellazione is null
         and  elem.validita_fine is null
        ),
        -- 16.04.2018 Sofia siac-6067
        enteOil as
        (
         select false esclAnnull
         from siac_t_ente_oil oil
         where oil.ente_proprietario_id=enteProprietarioId
         and   oil.ente_oil_invio_escl_annulli=false
        )
        select o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
               o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
               o.mif_ord_soggetto_id, o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_notetes_id,o.mif_ord_dist_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.mif_ord_codbollo_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id, o.login_operazione
        from ordinativi o, enteOil -- 16.04.2018 Sofia siac-6067
	    where
        ( mifOrdRitrasmElabId is null
	      or (mifOrdRitrasmElabId is not null and exists
             (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
        ) -- 16.04.2018 Sofia siac-6067
        and  enteOil.esclAnnull=false -- 16.04.2018 Sofia siac-6067
	   );

      -- ordinativi emessi tramessi e poi annullati, anche dopo spostamento  codice_funzione='A'
      strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_entrata_id].Codice funzione='||FUNZIONE_CODE_A||'.';

      insert into mif_t_ordinativo_entrata_id
      (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil,
       mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
       mif_ord_soggetto_id, mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
       mif_ord_atto_amm_id, mif_ord_contotes_id,mif_ord_notetes_id,mif_ord_dist_id,mif_ord_desc,
       mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
       mif_ord_codbollo_id,
       mif_ord_login_creazione,mif_ord_login_modifica,
       ente_proprietario_id, login_operazione)
      (
	   with
       ritrasm as
       (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	    from mif_t_ordinativo_ritrasmesso r
	    where mifOrdRitrasmElabId is not null
	    and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	    and   r.ente_proprietario_id=enteProprietarioId
	    and   r.data_cancellazione is null),
       ordinativi as
       (select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_A mif_ord_codice_funzione,
               bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
               ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
               extract('year' from ord.ord_emissione_data)||'-'||
               lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
               lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione,0 mif_ord_ord_anno_movg,
               0 mif_ord_soggetto_id,0 mif_ord_subord_id,elem.elem_id mif_ord_elem_id,
               0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_atto_amm_id,
               ord.contotes_id mif_ord_contotes_id, ord.notetes_id mif_ord_notetes_id,ord.dist_id mif_ord_dist_id,
               ord.ord_desc mif_ord_desc,
               ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
               ord.codbollo_id mif_ord_codbollo_id,
               ord.login_creazione mif_ord_login_creazione,ord.login_modifica mif_ord_login_modifica,
               enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
        from siac_t_ordinativo ord,siac_r_ordinativo_stato ord_stato,
             siac_t_bil bil, siac_t_periodo per,
             siac_r_ordinativo_bil_elem elem
        where  bil.ente_proprietario_id=enteProprietarioId
         and  per.periodo_id=bil.periodo_id
         and  per.anno::integer <=annoBilancio::integer
         and  ord.bil_id=bil.bil_id
         and  ord.ord_tipo_id=ordTipoCodeId
   		 and  ord_stato.ord_id=ord.ord_id
  		 and  ord.ord_emissione_data<=dataElaborazione
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175		
         and  ord.ord_da_trasmettere=true -- 19.06.2018 Sofia Sofia siac-6175
         and  ord_stato.validita_inizio<=dataElaborazione  -- questa e'' la data di annullamento
  		 and  ord.ord_trasm_oil_data is not null
 		 and  ord.ord_trasm_oil_data<ord_stato.validita_inizio
         and  ord_stato.data_cancellazione is null
         and  date_trunc('day',dataElaborazione)>=date_trunc('day',ord_stato.validita_inizio)
         and  ord_stato.validita_fine is null -- SofiaData
         and  ord_stato.ord_stato_id=ordStatoCodeAId
         and  ( ord.ord_spostamento_data is null or ord.ord_spostamento_data<ord_stato.validita_inizio)
         and  elem.ord_id=ord.ord_id
         and  elem.data_cancellazione is null
         and  elem.validita_fine is null
        )
        select o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
               o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
               o.mif_ord_soggetto_id, o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_notetes_id,o.mif_ord_dist_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.mif_ord_codbollo_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id, o.login_operazione
        from ordinativi o
	    where mifOrdRitrasmElabId is null
	     or (mifOrdRitrasmElabId is not null and exists
            (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
       );

      -- ordinativi emessi , trasmessi  e poi spostati codice_funzione='VB' ( mai annullati )
      strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_entrata_id].Codice funzione='||FUNZIONE_CODE_VB||'.';

      insert into mif_t_ordinativo_entrata_id
      (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil ,
       mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
       mif_ord_soggetto_id, mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
       mif_ord_atto_amm_id, mif_ord_contotes_id,mif_ord_notetes_id,mif_ord_dist_id,mif_ord_desc,
       mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
       mif_ord_codbollo_id,
       mif_ord_login_creazione,mif_ord_login_modifica,
       ente_proprietario_id, login_operazione)
      (
	   with
       ritrasm as
       (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	    from mif_t_ordinativo_ritrasmesso r
	    where mifOrdRitrasmElabId is not null
	    and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	    and   r.ente_proprietario_id=enteProprietarioId
	    and   r.data_cancellazione is null),
       ordinativi as
       (select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_VB mif_ord_codice_funzione,
               bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
               ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
               extract('year' from ord.ord_emissione_data)||'-'||
               lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
               lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione,0 mif_ord_ord_anno_movg,
               0 mif_ord_soggetto_id,0 mif_ord_subord_id,elem.elem_id mif_ord_elem_id,
               0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_atto_amm_id,
               ord.contotes_id mif_ord_contotes_id,ord.notetes_id mif_ord_notetes_id,ord.dist_id mif_ord_dist_id,
               ord.ord_desc mif_ord_desc,
               ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
               ord.codbollo_id mif_ord_codbollo_id,
               ord.login_creazione mif_ord_login_creazione,ord.login_modifica mif_ord_login_modifica,
               enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
        from siac_t_ordinativo ord,siac_t_bil bil, siac_t_periodo per, siac_r_ordinativo_bil_elem elem
        where  bil.ente_proprietario_id=enteProprietarioId
         and  per.periodo_id=bil.periodo_id
         and  per.anno::integer <=annoBilancio::integer
         and  ord.bil_id=bil.bil_id
         and  ord.ord_tipo_id=ordTipoCodeId
         and  ord.ord_emissione_data<=dataElaborazione
         and  ord.ord_trasm_oil_data is not null
         and  ord.ord_spostamento_data is not null
         and  ord.ord_trasm_oil_data<ord.ord_spostamento_data
         and  ord.ord_spostamento_data<=dataElaborazione
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175		
         and  ord.ord_da_trasmettere=true -- 19.06.2018 Sofia Sofia siac-6175
         and  not exists (select 1 from siac_r_ordinativo_stato ord_stato
  				          where  ord_stato.ord_id=ord.ord_id
					        and  ord_stato.ord_stato_id=ordStatoCodeAId
                            and  ord_stato.data_cancellazione is null)
         and  elem.ord_id=ord.ord_id
         and  elem.data_cancellazione is null
         and  elem.validita_fine is null
        )
		select o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
               o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
               o.mif_ord_soggetto_id, o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_notetes_id,o.mif_ord_dist_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.mif_ord_codbollo_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id, o.login_operazione
        from ordinativi o
	    where mifOrdRitrasmElabId is null
	     or (mifOrdRitrasmElabId is not null and exists
            (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
       );

      -- aggiornamento mif_t_ordinativo_entrata_id per id


      strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_entrata_id] per soggetto_id.';
      -- soggetto_id
      update mif_t_ordinativo_entrata_id m
      set mif_ord_soggetto_id = (select s.soggetto_id from siac_r_ordinativo_soggetto s
                                 where s.ord_id=m.mif_ord_ord_id
                                   and s.data_cancellazione is null
                                   and s.validita_fine is null);

      strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_entrata_id] per subord_id.';

      -- subord_id
      update mif_t_ordinativo_entrata_id m
      set mif_ord_subord_id =
                             (select s.ord_ts_id from siac_t_ordinativo_ts s
                               where s.ord_id=m.mif_ord_ord_id
                                 and s.data_cancellazione is null
                                 and s.validita_fine is null
                               order by s.ord_ts_id
                               limit 1);



     strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_entrata_id] per movgest_ts_id.';

     -- movgest_ts_id
     update mif_t_ordinativo_entrata_id m
     set mif_ord_movgest_ts_id = (select ts.movgest_ts_id from siac_t_ordinativo_ts s, siac_r_ordinativo_ts_movgest_ts ts
	                              where s.ord_id=m.mif_ord_ord_id
                                  and   ts.ord_ts_id=s.ord_ts_id
                                  and   s.data_cancellazione is null
                                  and   s.validita_fine is null
                                  and   ts.data_cancellazione is null
                                  and   ts.validita_fine is null
                                  order by s.ord_ts_id
                                  limit 1);


     strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_entrata_id] per movgest_id.';

     -- movgest_id
     update mif_t_ordinativo_entrata_id m
     set mif_ord_movgest_id = (select s.movgest_id from siac_t_movgest_ts s
                               where  s.movgest_ts_id = m.mif_ord_movgest_ts_id
                               and s.data_cancellazione is null
                               and s.validita_fine is null);


     strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_entrata_id] per movgest_id.';

     -- movgest_anno
     update mif_t_ordinativo_entrata_id m
     set mif_ord_ord_anno_movg = (select s.movgest_anno from siac_t_movgest s
                              	  where  s.movgest_id = m.mif_ord_movgest_id
                             	  and s.data_cancellazione is null
                                  and s.validita_fine is null);


     strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_entrata_id] per attoamm_id.';

    -- attoamm_id
    update mif_t_ordinativo_entrata_id m
    set mif_ord_atto_amm_id = (select s.attoamm_id from siac_r_ordinativo_atto_amm s
                                where s.ord_id = m.mif_ord_ord_id
                                  and s.data_cancellazione is null
                                  and s.validita_fine is null);


    strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_entrata_id] per attoamm_id movgest_ts.';
	-- attoamm_movgest_ts_id
    update mif_t_ordinativo_entrata_id m
    set mif_ord_atto_amm_movg_id = (select s.attoamm_id from siac_r_movgest_ts_atto_amm s
                                    where s.movgest_ts_id = m.mif_ord_movgest_ts_id
                                    and s.data_cancellazione is null
                                    and s.validita_fine is null);


	-- mif_ord_tipologia_id
    -- mif_ord_tipologia_code
    -- mif_ord_tipologia_desc
	strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_entrata_id] per mif_ord_tipologia_id mif_ord_tipologia_code mif_ord_tipologia_desc.';
	update mif_t_ordinativo_entrata_id m
    set (mif_ord_tipologia_id, mif_ord_tipologia_code,mif_ord_tipologia_desc) = (cp.classif_id,cp.classif_code,cp.classif_desc)
    from  siac_r_bil_elem_class classElem, siac_t_class cf, siac_r_class_fam_tree r, siac_t_class cp
	where classElem.elem_id= m.mif_ord_elem_id
	and   cf.classif_id=classElem.classif_id
	and   cf.data_cancellazione is null
	and   cf.classif_tipo_id= categoriaTipoid -- categoria
	and   r.classif_id=cf.classif_id
	and   r.classif_id_padre is not null
	and   r.classif_fam_tree_id=famTitEntTipoCategId -- famiglia
	and   r.data_cancellazione is null
	and   r.validita_fine is null
	and   classElem.data_cancellazione is null
	and   classElem.validita_fine is null
	and   cp.classif_id=r.classif_id_padre
	and   cp.data_cancellazione is null
	and   cp.classif_tipo_id=tipologiaTipoid; --tipologia

    strMessaggio:='Verifica esistenza ordinativi di entrata da trasmettere.';
    codResult:=null;

    select 1 into codResult
    from mif_t_ordinativo_entrata_id where ente_proprietario_id=enteProprietarioId;

    if codResult is null then
      codResult:=-12;
      RAISE EXCEPTION ' Nessun ordinativo di entrata da trasmettere.';
    end if;




   -- <sospesi>
   -- <sospeso>
   -- <numero_provvisorio>
   -- <importo_provvisorio>
   flussoElabMifElabRec:=null;
   flussoElabMifElabRec:=mifFlussoElabMifArr[FLUSSO_MIF_ELAB_NUM_SOSPESO];

   strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
   if flussoElabMifElabRec.flussoElabMifId is null then
  	  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
   end if;
   raise notice 'numero_provvisorio FLUSSO_MIF_ELAB_NUM_SOSPESO=% strMessaggio=%',FLUSSO_MIF_ELAB_NUM_SOSPESO,strMessaggio;

   if flussoElabMifElabRec.flussoElabMifAttivo=true then
    	if flussoElabMifElabRec.flussoElabMifElab=true then
			isRicevutaAttivo:=true;
        else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
   		end if;
   end if;


   flussoElabMifElabRec:=null;
   mifCountRec:=FLUSSO_MIF_ELAB_FATTURE;
   flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
   strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'.';
   if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
   end if;
   if flussoElabMifElabRec.flussoElabMifAttivo=true then
   	if flussoElabMifElabRec.flussoElabMifElab=true then
    	if flussoElabMifElabRec.flussoElabMifParam is not null  then
 		    numeroDocs:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            tipoDocs  :=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
            tipoGruppoDocs  :=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
            if numeroDocs is not null and numeroDocs!='' and
               tipoDocs is not null and tipoDocs!='' and
               tipoGruppoDocs is not null and tipoGruppoDocs!='' then
                tipoDocs:=tipoDocs||'|'||tipoGruppoDocs;
            	isGestioneFatture:=true;
            end if;
		end if;
    else
    	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
    end if;
   end if;

   if isGestioneFatture=true then

    flussoElabMifElabRec:=null;
    mifCountRec:=FLUSSO_MIF_ELAB_FATT_CODFISC;
    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'.';
    if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    end if;
    if flussoElabMifElabRec.flussoElabMifAttivo=true then
   	 if flussoElabMifElabRec.flussoElabMifElab=true then
    	if flussoElabMifElabRec.flussoElabMifParam is not null  then
 		    docAnalogico:=flussoElabMifElabRec.flussoElabMifParam;
		end if;
     else
    	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
     end if;
    end if;

   end if;

   if isGestioneFatture=true then
    flussoElabMifElabRec:=null;
    mifCountRec:=FLUSSO_MIF_ELAB_FATT_DATASCAD_PAG;
    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'.';
    if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    end if;
    if flussoElabMifElabRec.flussoElabMifAttivo=true then
   	 if flussoElabMifElabRec.flussoElabMifElab=true then
    	if flussoElabMifElabRec.flussoElabMifParam is not null  then
            attrCodeDataScad:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
		end if;
     else
    	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
     end if;
    end if;

   end if;

   if isGestioneFatture=true then

    flussoElabMifElabRec:=null;
    mifCountRec:=FLUSSO_MIF_ELAB_FATT_NATURA_PAG;
    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'.';
    if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    end if;
    if flussoElabMifElabRec.flussoElabMifAttivo=true then
   	 if flussoElabMifElabRec.flussoElabMifElab=true then
    	if flussoElabMifElabRec.flussoElabMifParam is not null  then
            /* 23.02.2018 Sofia JIRA siac-5849
            titoloCorrente:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            descriTitoloCorrente:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
            titoloCapitale:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
            descriTitoloCapitale:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));
            macroAggrTipoCode:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,5));
            if macroAggrTipoCode is not null then
            	strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'. Lettura identificato classificatore tipo='||macroAggrTipoCode||'.';
            	select tipo.classif_tipo_id into macroAggrTipoCodeId
                from siac_d_class_tipo tipo
                where tipo.ente_proprietario_id=enteProprietarioId
                and   tipo.classif_tipo_code=macroAggrTipoCode
                and   tipo.data_cancellazione is null
                and   tipo.validita_fine is null;

            end if;*/

            -- 23.02.2018 Sofia JIRA siac-5849
            macroAggrTipoCode:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            if macroAggrTipoCode is not null then
            	strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'. Lettura identificato classificatore tipo='||macroAggrTipoCode||'.';
            	select tipo.classif_tipo_id into macroAggrTipoCodeId
                from siac_d_class_tipo tipo
                where tipo.ente_proprietario_id=enteProprietarioId
                and   tipo.classif_tipo_code=macroAggrTipoCode
                and   tipo.data_cancellazione is null
                and   tipo.validita_fine is null;

            end if;
            -- 23.02.2018 Sofia JIRA siac-5849
            famMacroTitCode:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
            if famMacroTitCode is not null then
	            strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'. Lettura identificato famiglia tipo='||famMacroTitCode||'.';
	            select tree.classif_fam_tree_id into famMacroTitCodeId
				from siac_t_class_fam_tree tree, siac_d_class_fam d
				where d.ente_proprietario_id=enteProprietarioId
				and   d.classif_fam_desc=famMacroTitCode --'Spesa - TitoliMacroaggregati'
				and   tree.classif_fam_id=d.classif_fam_id
                and   tree.data_cancellazione is null
                and   tree.validita_fine is null
                and   d.data_cancellazione is null
                and   d.validita_fine is null;

            end if;

			-- 23.02.2018 Sofia JIRA siac-5849
	        if flussoElabMifElabRec.flussoElabMifDef is not null then
        		defNaturaPag:=flussoElabMifElabRec.flussoElabMifDef;
    	    end if;

		end if;
     else
    	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
     end if;
    end if;

   end if;

    --- lettura mif_t_ordinativo_entrata_id per popolamento mif_t_ordinativo_entrata
    codResult:=null;
    strMessaggio:='Lettura ordinativi di entrata da migrare [mif_t_ordinativo_entrata_id].Inizio ciclo.';
    for mifOrdinativoIdRec IN
    (select ms.*
     from mif_t_ordinativo_entrata_id ms
     where ms.ente_proprietario_id=enteProprietarioId
     order by ms.mif_ord_anno_bil,
              ms.mif_ord_ord_numero
    )
    loop

--		raise notice 'Inizio ciclo numero_ord=%',mifOrdinativoIdRec.mif_ord_ord_numero;
		mifFlussoOrdinativoRec:=null;
		bilElemRec:=null;
        soggettoRec:=null;

        soggettoRifId:=null;

		indirizzoRec:=null;
        mifOrdSpesaId:=null;
	    mifCountRec:=1;
		isIndirizzoBenef:=true;
        bAvvioSiopeNew:=false;

        -- lettura importo ordinativo
		strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura importo ordinativo di entrata per tipo flusso '||MANDMIF_TIPO||'.';

        mifFlussoOrdinativoRec.mif_ord_importo:=fnc_mif_importo_ordinativo(mifOrdinativoIdRec.mif_ord_ord_id,ordDetTsTipoId,
        										flussoElabMifTipoDec);
        if flussoElabMifTipoDec=true and
           coalesce(position('.' in mifFlussoOrdinativoRec.mif_ord_importo),0)=0 then
           mifFlussoOrdinativoRec.mif_ord_importo:=mifFlussoOrdinativoRec.mif_ord_importo||'.00';
        end if;

        -- lettura dati soggetto ordinativo
        soggettoRifId:=mifOrdinativoIdRec.mif_ord_soggetto_id;
        select * into soggettoRec
   	    from siac_t_soggetto sogg
       	where sogg.soggetto_id=soggettoRifId;

        if soggettoRec is null then
        	RAISE EXCEPTION ' Errore in lettura siac_t_soggetto [soggetto_id= %].',soggettoRifId;
        end if;


        -- lettura elemento bilancio  ordinativo
 		strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura elemento bilancio ordinativo di entrata per tipo flusso '||MANDMIF_TIPO||'.';

		select * into bilElemRec
        from siac_t_bil_elem elem
        where elem.elem_id=mifOrdinativoIdRec.mif_ord_elem_id;
        if bilElemRec is null then
        	RAISE EXCEPTION ' Errore in lettura siac_t_bil_elem.';
        end if;

        -- dati testata flusso presenti come tag solo in testata
        -- valorizzati su ogni ordinativo trasmesso
        -- <testata_flusso>
		-- <codice_ABI_BT>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_COD_ABI_BT;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_abi is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_abi_bt:=enteOilRec.ente_oil_abi;
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_abi_bt:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <codice_ente>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_COD_ENTE_IPA;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice_ipa is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_ipa:=trim(both ' ' from enteOilRec.ente_oil_codice_ipa);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_ipa:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <descrizione_ente>
	    flussoElabMifElabRec:=null;
		mifCountRec:=FLUSSO_MIF_ELAB_TEST_DESC_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteProprietarioRec.ente_denominazione is not null then
            	mifFlussoOrdinativoRec.mif_ord_desc_ente:=enteProprietarioRec.ente_denominazione;
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
               	mifFlussoOrdinativoRec.mif_ord_desc_ente:=substring(flussoElabMifElabRec.flussoElabMifDef from 1 for 30);
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

	    -- <codice_istat_ente>
	    flussoElabMifElabRec:=null;
		mifCountRec:=FLUSSO_MIF_ELAB_TEST_COD_ISTAT_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice_istat is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_istat:=enteOilRec.ente_oil_codice_istat;
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
               	mifFlussoOrdinativoRec.mif_ord_codice_ente_istat:=substring(flussoElabMifElabRec.flussoElabMifDef from 1 for 30);
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <codice_fiscale_ente>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_CODFISC_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteProprietarioRec.codice_fiscale is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente:=trim(both ' ' from enteProprietarioRec.codice_fiscale);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <codice_tramite_ente>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_CODTRAMITE_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice_tramite is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite:=trim(both ' ' from enteOilRec.ente_oil_codice_tramite);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <codice_tramite_BT>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_CODTRAMITE_BT;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice_tramite_bt is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite_bt:=trim(both ' ' from enteOilRec.ente_oil_codice_tramite_bt);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite_bt:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <codice_ente_BT>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_COD_ENTE_BT;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_bt:=trim(both ' ' from enteOilRec.ente_oil_codice);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_bt:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <riferimento_ente>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_RIFERIMENTO_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_riferimento is not null then
            	mifFlussoOrdinativoRec.mif_ord_riferimento_ente:=trim(both ' ' from enteOilRec.ente_oil_riferimento);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_riferimento_ente:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;
        -- </testata_flusso>

        -- <testata_esercizio>
        -- <esercizio>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_ESERCIZIO;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
            mifFlussoOrdinativoRec.mif_ord_anno_esercizio:=mifOrdinativoIdRec.mif_ord_anno_bil;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;
        -- </testata_esercizio>

		-- <reversale>
        mifCountRec :=FLUSSO_MIF_ELAB_INIZIO_ORD;

	    -- <tipo_operazione>
        flussoElabMifElabRec:=null;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        raise notice 'tipo_operazione strMessaggio=%',strMessaggio;
        if  flussoElabMifElabRec.flussoElabMifAttivo=true then
         if   flussoElabMifElabRec.flussoElabMifElab=true then
            if flussoElabMifElabRec.flussoElabMifParam is not null then
	            flussoElabMifValore:=fnc_mif_ordinativo_carico_bollo( mifOrdinativoIdRec.mif_ord_codice_funzione,flussoElabMifElabRec.flussoElabMifParam);
            else
            	flussoElabMifValore:=mifOrdinativoIdRec.mif_ord_codice_funzione;
            end if;

            if flussoElabMifValore is not null then
				mifFlussoOrdinativoRec.mif_ord_codice_funzione:=flussoElabMifValore;
            end if;

         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <numero_reversale>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if flussoElabMifTipoDec=false then
				mifFlussoOrdinativoRec.mif_ord_numero:=lpad(mifOrdinativoIdRec.mif_ord_ord_numero,NUM_SETTE,ZERO_PAD);
            else
	            mifFlussoOrdinativoRec.mif_ord_numero:=mifOrdinativoIdRec.mif_ord_ord_numero;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo non elaborabile.';
         end if;
        end if;


        -- <data_reversale>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true  then
         if  flussoElabMifElabRec.flussoElabMifElab=true then
			mifFlussoOrdinativoRec.mif_ord_data:=mifOrdinativoIdRec.mif_ord_data_emissione;
         else
            RAISE EXCEPTION ' Configurazione tag/campo non  elaborabile.';
         end if;
        end if;

		-- <importo_reversale>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
			-- calcolato inizio ciclo
            null;
         else
         	mifFlussoOrdinativoRec.mif_ord_importo:='0';
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <conto_evidenza>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
            if mifOrdinativoIdRec.mif_ord_contotes_id is not null then
                 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
					   ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura conto tesoreria.';

            	select d.contotes_code into flussoElabMifValore
                from siac_d_contotesoreria d
                where d.contotes_id=mifOrdinativoIdRec.mif_ord_contotes_id;
                if flussoElabMifValore is null then
                	RAISE EXCEPTION ' Dato non presente in archivio.';
                end if;
            end if;

			if flussoElabMifValore is not null then
             mifFlussoOrdinativoRec.mif_ord_destinazione:=flussoElabMifValore;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <bilancio>
        -- <codifica_bilancio>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;
        raise notice 'codifica_bilancio strMessaggio=%',strMessaggio;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then

         		mifFlussoOrdinativoRec.mif_ord_codifica_bilancio:=
                    substring(mifOrdinativoIdRec.mif_ord_tipologia_code from 1 for 5) ;
            	mifFlussoOrdinativoRec.mif_ord_capitolo:=bilElemRec.elem_code;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


	    -- <descrizione_codifica>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
            	mifFlussoOrdinativoRec.mif_ord_desc_codifica:=substring( bilElemRec.elem_desc from 1 for 30);
                mifFlussoOrdinativoRec.mif_ord_desc_codifica_bil:=substring( mifOrdinativoIdRec.mif_ord_tipologia_desc from 1 for 30);
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <gestione>
        flussoElabMifElabRec:=null;
        flussoElabMifValore:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if flussoElabMifElabRec.flussoElabMifDef is not null then
            	if mifOrdinativoIdRec.mif_ord_anno_bil=mifOrdinativoIdRec.mif_ord_ord_anno_movg then
	            	flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
                else
	                flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,2));
                end if;
            	mifFlussoOrdinativoRec.mif_ord_gestione:=flussoElabMifValore;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <anno_residuo>
        flussoElabMifElabRec:=null;
        flussoElabMifValore:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
		  if mifOrdinativoIdRec.mif_ord_anno_bil!=mifOrdinativoIdRec.mif_ord_ord_anno_movg  then
       	 	mifFlussoOrdinativoRec.mif_ord_anno_res:=mifOrdinativoIdRec.mif_ord_ord_anno_movg;
          end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

		-- <numero_articolo>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
            	mifFlussoOrdinativoRec.mif_ord_articolo:=bilElemRec.elem_code2;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <voce_economica>
        mifCountRec:=mifCountRec+1;

        -- <importo_bilancio>
        flussoElabMifElabRec:=null;
        flussoElabMifValore:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
           	mifFlussoOrdinativoRec.mif_ord_importo_bil:=mifFlussoOrdinativoRec.mif_ord_importo;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;
        -- </bilancio>

	    -- <informazioni_versante>

        -- <progressivo_versante>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        raise notice 'progressivo_versante strMessaggio=%',strMessaggio;

        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
           	if flussoElabMifElabRec.flussoElabMifDef is not null then
                	mifFlussoOrdinativoRec.mif_ord_progr_vers:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <importo_versante>
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=null;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
  	 	 RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	 if flussoElabMifElabRec.flussoElabMifElab=true then
     		mifFlussoOrdinativoRec.mif_ord_vers_importo:=mifFlussoOrdinativoRec.mif_ord_importo;
	     else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	     end if;
        end if;

	    -- <tipo_riscossione>
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=null;
	    flussoElabMifValore:=null;
        flussoElabMifValoreDesc:=null;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
           RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
            if coalesce(flussoElabMifElabRec.flussoElabMifParam,NVL_STR)!=NVL_STR and
               coalesce(flussoElabMifElabRec.flussoElabMifDef,NVL_STR)!=NVL_STR then
              if  tipoIncassoCode is null then
            	tipoIncassoCode:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
              end if;
              if tipoRitOrdInc is null then
	              tipoRitOrdInc:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
              end if;
              if tipoSplitOrdInc is null then
	              tipoSplitOrdInc:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
              end if;
              if tipoSubOrdInc is null then
	              tipoSubOrdInc:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));
              end if;

              if tipoRitenuteInc is null then
              	tipoRitenuteInc:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,5))||','||
                                 trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,6))||','||
                                 trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,7));
              end if;

			  if tipoIncassoCompensazione is null then
              	tipoIncassoCompensazione:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
              end if;
   			  if tipoIncassoRegolarizza is null then
              	tipoIncassoRegolarizza:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,2));
              end if;

   			  if tipoIncassoCassa is null then
              	tipoIncassoCassa:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,3));
              end if;

              if tipoIncassoCode is not null and tipoIncassoCodeId is null then
                strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura classif_tipo_id per classicatore '||tipoIncassoCode||'.';
              	select tipo.classif_tipo_id into tipoIncassoCodeId
                from siac_d_class_tipo tipo
                where tipo.ente_proprietario_id=enteProprietarioId
                and   tipo.classif_tipo_code=tipoIncassoCode
                and   tipo.data_cancellazione is null
                and   tipo.validita_fine is null;

              end if;

              if tipoIncassoCodeId is not null then
                strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura tipoIncasso '||tipoIncassoCode||' per ordinativo.';

                flussoElabMifValore:=fnc_mif_tipo_incasso_splus
                                     ( mifOrdinativoIdRec.mif_ord_ord_id,
  									   mifFlussoOrdinativoRec.mif_ord_importo::NUMERIC,
                                       tipoRitOrdInc,
                                       tipoSplitOrdInc,
                                       tipoSubOrdInc,
                                       tipoRitenuteInc,
 									   tipoIncassoCodeId,
                                       tipoIncassoCompensazione,
                                       tipoIncassoRegolarizza,
                                       tipoIncassoCassa,
                                       dataElaborazione,
                                       dataFineVal,
                                       enteProprietarioId
                                     );
              end if;

		     if flussoElabMifValore is not null then
	           mifFlussoOrdinativoRec.mif_ord_vers_tipo_riscos:=flussoElabMifValore;
             end if;
           end if;
          else
          	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
        end if;

	    -- <numero_ccp>
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=null;
	    flussoElabMifValore:=null;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
           RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
          	if flussoElabMifElabRec.flussoElabMifParam is not null and
               mifFlussoOrdinativoRec.mif_ord_vers_tipo_riscos is not null then
               if mifFlussoOrdinativoRec.mif_ord_vers_tipo_riscos=
                  trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1)) then
                  if tipoContoCCPCode is null then
                  	tipoContoCCPCode:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                  end if;
                  if tipoContoCCPCodeId is null then
                    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura identificativo classificatore tipo='||tipoContoCCPCode||'.';
                  	select tipo.classif_tipo_id into tipoContoCCPCodeId
                    from siac_d_class_tipo tipo
                    where tipo.ente_proprietario_id=enteProprietarioId
                    and   tipo.classif_tipo_code=tipoContoCCPCode
                    and   tipo.data_cancellazione is null;
                  end if;

                  if tipoContoCCPCodeId is not null then
                    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore classificatore tipo='||tipoContoCCPCode||'.';
                  	select c.classif_code into flussoElabMifValore
                    from siac_r_ordinativo_class r, siac_t_class c
                    where r.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                    and   c.classif_id=r.classif_id
                    and   c.classif_tipo_id=tipoContoCCPCodeId
                    and   r.data_cancellazione is null
                    and   r.validita_fine is null
                    and   c.data_cancellazione is null;
                  end if;
               end if;
               if flussoElabMifValore is not null then
               	mifFlussoOrdinativoRec.mif_ord_vers_cc_postale:=flussoElabMifValore;
               end if;
            end if;
           else
          	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
        end if;

		-- <tipo_entrata>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifValore:=null;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
			if coalesce(flussoElabMifElabRec.flussoElabMifDef,NVL_STR)!=NVL_STR then
              if coalesce(flussoElabMifElabRec.flussoElabMifParam,NVL_STR)!=NVL_STR then
                   if tipoClassFruttifero is null then
                    	tipoClassFruttifero:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                   end if;

                   if tipoClassFruttifero is not null and valFruttifero is null then
	                   valFruttifero:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                       valFruttiferoStr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                       valFruttiferoStrAltro:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));
                   end if;


                   if tipoClassFruttifero is not null and
                      valFruttifero is not null and
                      valFruttiferoStr is not null and
                      valFruttiferoStrAltro is not null and
                      tipoClassFruttiferoId is null then

                    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura classifTipoCodeId '||tipoClassFruttifero||'.';
                   	select tipo.classif_tipo_id into tipoClassFruttiferoId
                    from siac_d_class_tipo tipo
                    where tipo.ente_proprietario_id=enteProprietarioId
                    and   tipo.classif_tipo_code=tipoClassFruttifero
                    and   tipo.data_cancellazione is null
                    and   tipo.validita_fine is null;

                   end if;
                   if tipoClassFruttiferoId is not null and
                      valFruttifero is not null and
                      valFruttiferoStr is not null and
                      valFruttiferoStrAltro is not null and
                      valFruttiferoId is null then
                    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura classidId '||tipoClassFruttifero||' [siac_r_ordinativo_class].';


                   	select c.classif_code into flussoElabMifValore
                    from siac_r_ordinativo_class r, siac_t_class c
                    where r.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
	                and   c.classif_id=r.classif_id
                    and   c.classif_tipo_id=tipoClassFruttiferoId
                    and   r.data_cancellazione is null
                    and   r.validita_fine is null
                    and   c.data_cancellazione is null
                    order by r.ord_classif_id limit 1;

                    if flussoElabMifValore is not null then
                    	if flussoElabMifValore=valFruttifero THEN
                        	flussoElabMifValore=valFruttiferoStr;
                        else
                          flussoElabMifValore=valFruttiferoStrAltro;
                        end if;
                    end if;
                   end if;
				 end if; -- param


	             if flussoElabMifValore is null and
     	            mifOrdinativoIdRec.mif_ord_contotes_id is not null and
        	        mifOrdinativoIdRec.mif_ord_contotes_id!=0 then

    	            strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
        	               ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
            	           ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                	       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
	                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
    	                   ||' mifCountRec='||mifCountRec
        	               ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore per conto corrente tesoreria [mif_r_conto_tesoreria_fruttifero].';
	                -- 16.02.2018 Sofia siac-5874
                    select mif.fruttifero_oi into flussoElabMifValore
    	            from mif_r_conto_tesoreria_fruttifero mif
	                where mif.ente_proprietario_id=enteProprietarioId
    	            and   mif.contotes_id=mifOrdinativoIdRec.mif_ord_contotes_id
	                and   mif.validita_fine is null
    	            and   mif.data_cancellazione is null;


	             end if;


                 if flussoElabMifValore is null then
                   	flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
                 end if;

                 mifFlussoOrdinativoRec.mif_ord_bci_tipo_entrata:=flussoElabMifValore;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


		-- <destinazione>
        flussoElabMifElabRec:=null;
        flussoElabMifValore:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
		   if flussoElabMifElabRec.flussoElabMifParam is not null then

           	if classVincolatoCode is null then
            	classVincolatoCode:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            end if;

            if classVincolatoCodeId is null and classVincolatoCode is not null then
                strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura identificativo classVincolatoCode='||classVincolatoCode||'.';

                select tipo.classif_tipo_id into strict classVincolatoCodeId
    		    from siac_d_class_tipo tipo
		        where tipo.ente_proprietario_id=enteProprietarioId
        		and   tipo.classif_tipo_code=classVincolatoCode
		        and   tipo.data_cancellazione is null
                and   tipo.validita_fine is null;
            end if;

            if classVincolatoCodeId is not null then
	            strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore classVincolatoCode='||classVincolatoCode||'.';


                 select c.classif_desc into flussoElabMifValore
                 from siac_r_ordinativo_class r, siac_t_class c
                 where r.ord_id=  mifOrdinativoIdRec.mif_ord_ord_id
                 and   c.classif_id=r.classif_id
                 and   c.classif_tipo_id=classVincolatoCodeId
                 and   r.data_cancellazione is null
                 and   r.validita_fine is null
                 and   c.data_cancellazione is null;
            end if;
           end if;

		   if flussoElabMifValore is null and
    	 	  mifOrdinativoIdRec.mif_ord_contotes_id is not null and
        	  mifOrdinativoIdRec.mif_ord_contotes_id!=0 then

		      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
    		                   ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
        		               ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
            		           ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                		       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                    		   ||' mifCountRec='||mifCountRec
	                    	   ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore per conto corrente tesoreria [mif_r_conto_tesoreria_vincolato].';

			  select mif.vincolato into flussoElabMifValore
    	      from mif_r_conto_tesoreria_vincolato mif
	    	  where mif.ente_proprietario_id=enteProprietarioId
    	      and   mif.contotes_id=mifOrdinativoIdRec.mif_ord_contotes_id
	          and   mif.validita_fine is null
		      and   mif.data_cancellazione is null;
	       end if;

		   if flussoElabMifValore is null and
           	flussoElabMifElabRec.flussoElabMifDef is not null then
            flussoElabMifValore:=flussoElabMifElabRec.flussoElabMifDef;
           end if;

           if flussoElabMifValore is not null then
           	mifFlussoOrdinativoRec.mif_ord_vers_cod_riscos:=flussoElabMifValore;
           end if;

         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <classificazione>
        -- <codice_cge>
        flussoElabMifElabRec:=null;
        flussoElabMifValore:=null;
        flussoElabMifValoreDesc:=null;
        codiceCge:=null;
        descCge:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;
        raise notice 'codice_cge strMessaggio=%',strMessaggio;

        if flussoElabMifElabRec.flussoElabMifAttivo=true  then
         if flussoElabMifElabRec.flussoElabMifElab=true  then
         		if flussoElabMifElabRec.flussoElabMifParam is not null  then
                	if siopeCodeTipo is null and flussoElabMifElabRec.flussoElabMifParam is not null then
                        siopeCodeTipo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                    end if;
					if siopeDef is null and flussoElabMifElabRec.flussoElabMifParam is not null then
                        siopeDef:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                    end if;

                    if coalesce(dataAvvioSiopeNew,NVL_STR)=NVL_STR and
	                  flussoElabMifElabRec.flussoElabMifParam is not null then
    	                	dataAvvioSiopeNew:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
        	        end if;

            	    if coalesce(dataAvvioSiopeNew,NVL_STR)!=NVL_STR and codiceFinVTbr is null then
                	  	codiceFinVTbr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));
	                end if;

            	    if coalesce(dataAvvioSiopeNew,NVL_STR)!=NVL_STR then
                	  	if dataAvvioSiopeNew::timestamp<=date_trunc('DAY',mifOrdinativoIdRec.mif_ord_data_emissione::timestamp) -- data emissione ordinativo
                    	then
    	                	bAvvioSiopeNew:=true;
	                    end if;
    	            end if;

                    if  bAvvioSiopeNew=true then
                     -- lettura da PDC_V
                  	 if codiceFinVTbr is not null and codiceFinVTipoTbrId is null then --1
						-- codiceFinVTipoTbrId
                        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                     		  ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                     		  ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                    		  ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
		                      ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
		                      ||' mifCountRec='||mifCountRec
	                          ||' tipo flusso '||MANDMIF_TIPO||'.Lettura id class tipo='||codiceFinVTbr||'.';
			   		    select tipo.classif_tipo_id into strict codiceFinVTipoTbrId
				    	from siac_d_class_tipo tipo
						where tipo.ente_proprietario_id=enteProprietarioId
						and   tipo.classif_tipo_code=codiceFinVTbr
						and   tipo.data_cancellazione is null
						and   date_trunc('day',dataElaborazione)>=date_trunc('day',validita_inizio)
						and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(validita_fine,dataElaborazione));
                     end if; --1

                     if codiceFinVTipoTbrId is not null then --2
      		 		  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura piano_conti_fin_V_code '||codiceFinVTbr||' [siac_r_ordinativo_class] .';
		    		  select replace(substring(class.classif_code,2),'.','') , class.classif_desc
                       into flussoElabMifValore,flussoElabMifValoreDesc
			  		  from siac_r_ordinativo_class r, siac_t_class class
	       		      where r.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
	      		      and   class.classif_id=r.classif_id
 		              and   class.classif_tipo_id=codiceFinVTipoTbrId
		 	          and   r.data_cancellazione is null
				      and   r.validita_fine is NULL
	  		          and   class.data_cancellazione is null;

			 		  if flussoElabMifValore is null then --3
		               strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura piano_conti_fin_V_code '||codiceFinVTbr||' [siac_r_movgest_class].';

             		   select replace(substring(class.classif_code,2),'.','') , class.classif_desc
                    	into flussoElabMifValore,flussoElabMifValoreDesc
		    	       from siac_r_movgest_class rclass, siac_t_class class
		               where rclass.movgest_ts_id=mifOrdinativoIdRec.mif_ord_movgest_ts_id
    		           and   rclass.data_cancellazione is null
        		       and   rclass.validita_fine is null
            		   and   class.classif_id=rclass.classif_id
		               and   class.classif_tipo_id=codiceFinVTipoTbrId
    		           and   class.data_cancellazione is null
		               order by rclass.movgest_classif_id
    		           limit 1;
        	           end if; --3
                      end if;--2
                    else
                	 if siopeCodeTipoId is null then --1
                    	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                     		  ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                     		  ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                    		  ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
		                      ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
		                      ||' mifCountRec='||mifCountRec
	                          ||' tipo flusso '||MANDMIF_TIPO||'.Lettura id class tipo='||siopeCodeTipo||'.';

                    	select class.classif_tipo_id into siopeCodeTipoId
                        from siac_d_class_tipo class
                        where class.classif_tipo_code=siopeCodeTipo
                        and   class.ente_proprietario_id=enteProprietarioId
                        and   class.data_cancellazione is null
 				    	and   date_trunc('day',dataElaborazione)>=date_trunc('day',class.validita_inizio)
	 		 		    and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(class.validita_fine,dataElaborazione));
                     end if;
                   if siopeCodeTipoId is not null then --2
                    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                     		  ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                     		  ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                    		  ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
		                      ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
		                      ||' mifCountRec='||mifCountRec
	                          ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore class tipo='||flussoElabMifElabRec.flussoElabMifParam||'.';


                	select class.classif_code, class.classif_desc
                           into flussoElabMifValore,flussoElabMifValoreDesc
                    from siac_r_ordinativo_class cord, siac_t_class class
                    where cord.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                    and cord.data_cancellazione is null
                    and cord.validita_fine is null
                    and class.classif_id=cord.classif_id
                    and class.classif_tipo_id=siopeCodeTipoId
                    and class.classif_code!=siopeDef
                    and class.data_cancellazione is null;

                    if flussoElabMifValore is null then --3
	                    select class.classif_code, class.classif_desc
    		                   into flussoElabMifValore,flussoElabMifValoreDesc
	                    from siac_r_movgest_class  r,  siac_t_class class
    	                where r.movgest_ts_id=mifOrdinativoIdRec.mif_ord_movgest_ts_id
        	            and   r.data_cancellazione is null
            	        and   r.validita_fine is null
                	    and class.classif_id=r.classif_id
                    	and class.classif_tipo_id=siopeCodeTipoId
	                    and class.classif_code!=siopeDef
    	                and class.data_cancellazione is null;
                   end if; --3
                  end if; --2
                end if; --if  bAvvioSiopeNew=true then

                if flussoElabMifValore is not null then
                	mifFlussoOrdinativoRec.mif_ord_class_codice_cge:=flussoElabMifValore;
                    codiceCge:=flussoElabMifValore;
	                descCge:=flussoElabMifValoreDesc;


               end if;
            end if; --param
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if; -- elab
        end if; -- attivo

	    -- <importo>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
	    if codiceCge is not null then
    	flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
        			   ||' tipo flusso '||MANDMIF_TIPO||'.';
    	if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	    end if;

	    if flussoElabMifElabRec.flussoElabMifAttivo=true then
    	  if flussoElabMifElabRec.flussoElabMifElab=true then
                	mifFlussoOrdinativoRec.mif_ord_class_importo:=mifFlussoOrdinativoRec.mif_ord_importo;
	      else
    	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	     end if;
    	end if;
	   end if;

       -- <classificazione_dati_siope_entrate>

       -- <tipo_debito_siope_c> COMMERCIALE
       flussoElabMifElabRec:=null;
       flussoElabMifValore:=null;
       isOrdCommerciale:=false;
       ordinativoSplitId:=null;
       ordinativoReintroitoId:=null;
       mifCountRec:=mifCountRec+1;
       flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
        			   ||' tipo flusso '||MANDMIF_TIPO||'.';
       if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	   end if;

	   if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
	          if flussoElabMifElabRec.flussoElabMifDef is not null and
                 flussoElabMifElabRec.flussoElabMifParam is not null then
				 -- 20.03.2018 Sofia SIAC-5968
                 if  tipoRelSPR is null then
                 		tipoRelSPR:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                 end if;
   				 -- 20.03.2018 Sofia SIAC-5968
                 if tipoRelREIORD is null then
                    tipoRelREIORD:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                 end if;

                 -- 20.03.2018 Sofia SIAC-5968
			     if tipoRelSPR is not null and tipoRelSPR!='' then
				  -- caso di ordinativo di incasso collegato a ordinativo di pagamento per Split
                  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
        			   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura ordinativo di pagamento SPLIT.';

  		          select ord.ord_id into ordinativoSplitId
			      from siac_r_ordinativo rOrd, siac_t_ordinativo ord,siac_d_ordinativo_tipo tipo,
			          siac_r_ordinativo_stato rstato, siac_d_ordinativo_stato stato, siac_d_relaz_tipo tiporel
				  where rord.ord_id_a=mifOrdinativoIdRec.mif_ord_ord_id
				  and   ord.ord_id=rord.ord_id_da
				  and   tipo.ord_tipo_id=ord.ord_tipo_id
				  and   tipo.ord_tipo_code='P'
			      and   rstato.ord_id=ord.ord_id
	              and   stato.ord_stato_id=rstato.ord_stato_id
	              and   stato.ord_stato_code!='A'
				  and   tiporel.relaz_tipo_id=rOrd.relaz_tipo_id
                  --and   tiporel.relaz_tipo_code=flussoElabMifElabRec.flussoElabMifParam -- 20.03.2018 Sofia SIAC-5968
                  and   tiporel.relaz_tipo_code=tipoRelSPR
				  and   rord.data_cancellazione is null
				  and   rord.validita_fine is null
				  and   ord.data_cancellazione is null
			      and   ord.validita_fine is null
			      and   rstato.data_cancellazione is null
	              and   rstato.validita_fine is null
                  limit 1;

            	  if ordinativoSplitId is not null then
                    -- 20.03.2018 Sofia SIAC-5968
                    --mifFlussoOrdinativoRec.mif_ord_class_tipo_debito=flussoElabMifElabRec.flussoElabMifDef;
                    isOrdCommerciale:=true;
        	      end if;
                end if;

                -- 20.03.2018 Sofia SIAC-5968
                if isOrdCommerciale=false and  tipoRelREIORD is not null and tipoRelREIORD!='' then

                  -- caso di ordinativo di incasso collegato a ordinativo di pagamento per Reintroito
                  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
        			   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura ordinativo di pagamento Rentroito.';

  		          select ord.ord_id into ordinativoReintroitoId
			      from siac_r_ordinativo rOrd, siac_t_ordinativo ord,siac_d_ordinativo_tipo tipo,
			           siac_d_relaz_tipo tiporel
				  where rord.ord_id_da=mifOrdinativoIdRec.mif_ord_ord_id
				  and   ord.ord_id=rord.ord_id_a
				  and   tipo.ord_tipo_id=ord.ord_tipo_id
				  and   tipo.ord_tipo_code='P'
				  and   tiporel.relaz_tipo_id=rOrd.relaz_tipo_id
                  and   tiporel.relaz_tipo_code=tipoRelREIORD
				  and   rord.data_cancellazione is null
				  and   rord.validita_fine is null
				  and   ord.data_cancellazione is null
			      and   ord.validita_fine is null
                  limit 1;


                  if ordinativoReintroitoId is not null then
                  	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
        			   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura ordinativo di pagamento Rentroito. Commerciale.';

                    if coalesce(tipoDocsComm,'')='' then
                      tipoDocsComm:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3))||'|'||
                        trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4))||'|'||
                        trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,5));
                    end if;

                  	isOrdCommerciale:=fnc_mif_ordinativo_esiste_documenti_splus(ordinativoReintroitoId,
			                                                                    tipoDocsComm,
                  				                                   	            enteProprietarioId
                                                                               );
                    if isOrdCommerciale=true then
                    	ordinativoSplitId:=ordinativoReintroitoId;
                    end if;

                  end if;

               end if;

               -- 20.03.2018 Sofia SIAC-5968
 			   if isOrdCommerciale=true then
	               mifFlussoOrdinativoRec.mif_ord_class_tipo_debito=flussoElabMifElabRec.flussoElabMifDef;

               end if;

              end if;
	      else
    	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	      end if;
       end if;

	   -- <tipo_debito_siope_nc> NON_COMMERCIALE se non COMMERCIALE -- NON COMMERCIALE
       flussoElabMifElabRec:=null;
       flussoElabMifValore:=null;
       codResult:=null;
       mifCountRec:=mifCountRec+1;
       if isOrdCommerciale=false then
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
        			   ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	    end if;

	    if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
           if flussoElabMifElabRec.flussoElabMifDef is not null then -- 20.03.2018 Sofia SIAC-5968
/*	          if flussoElabMifElabRec.flussoElabMifDef is not null then -- 20.03.2018 Sofia SIAC-5968
                   mifFlussoOrdinativoRec.mif_ord_class_tipo_debito_nc=flussoElabMifElabRec.flussoElabMifDef;
              end if;*/

              -- 20.03.2018 Sofia SIAC-5968 - test sul pdcFin di OP per verificare se IVA
              if ordinativoReintroitoId is not null and
                 flussoElabMifElabRec.flussoElabMifParam is not null then
                 tipoPdcIVA:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                 codePdcIVA:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                 if coalesce(tipoPdcIVA ,'')!='' and
                    coalesce(codePdcIVA ,'')!='' then
                        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
		                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
        		               ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                		       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
		                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
        		               ||' mifCountRec='||mifCountRec
        					   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura ordinativo di pagamento Rentroito. Iva.';
                    	select 1 into codResult
                        from siac_r_ordinativo_class rc, siac_t_class c, siac_d_class_tipo tipo
                        where rc.ord_id=ordinativoReintroitoId
                        and   c.classif_id=rc.classif_id
                        and   tipo.classif_tipo_id=c.classif_tipo_id
                        and   tipo.classif_tipo_code=tipoPdcIVA
                        and   c.classif_code like codePdcIVA||'%'
                        and   rc.data_cancellazione is null
                        and   rc.validita_fine is null;

                        if codResult is not null then
                        	flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,2));
                        end if;
                 end if;
              end if;
              -- 20.03.2018 Sofia SIAC-5968
              if flussoElabMifValore is null then
              	flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
              end if;
              -- 20.03.2018 Sofia SIAC-5968
              if flussoElabMifValore is not null then
	              mifFlussoOrdinativoRec.mif_ord_class_tipo_debito_nc=flussoElabMifValore;
              end if;
            end if;
	      else
    	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	      end if;
        end if;
       end if;


       mifCountRec:=mifCountRec+12;
       -- <fatture_siope>
	   -- </fatture_siope>

       -- <dati_ARCONET_siope>
       -- <codice_economico_siope>
       flussoElabMifElabRec:=null;
       flussoElabMifValore:=null;
       mifCountRec:=mifCountRec+1;
       flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
       strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
       if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
       end if;
       if flussoElabMifElabRec.flussoElabMifAttivo=true then
        if flussoElabMifElabRec.flussoElabMifElab=true then
         if flussoElabMifElabRec.flussoElabMifParam is not null then

         	if codiceFinVTbr is null then
            	codiceFinVTbr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            end if;
 			if codiceFinVTbr is not null and codiceFinVTipoTbrId is null then --1
				-- codiceFinVTipoTbrId
                strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                     		  ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                     		  ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                    		  ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
		                      ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
		                      ||' mifCountRec='||mifCountRec
	                          ||' tipo flusso '||MANDMIF_TIPO||'.Lettura id class tipo='||codiceFinVTbr||'.';
			   select tipo.classif_tipo_id into strict codiceFinVTipoTbrId
			   from siac_d_class_tipo tipo
			   where tipo.ente_proprietario_id=enteProprietarioId
			   and   tipo.classif_tipo_code=codiceFinVTbr
			   and   tipo.data_cancellazione is null
			   and   date_trunc('day',dataElaborazione)>=date_trunc('day',validita_inizio)
			   and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(validita_fine,dataElaborazione));
            end if; --1

            if codiceFinVTipoTbrId is not null then --2
      			strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura piano_conti_fin_V_code '||codiceFinVTbr||' [siac_r_ordinativo_class] .';
		    	select class.classif_code into flussoElabMifValore
  	  		    from siac_r_ordinativo_class r, siac_t_class class
	       	    where r.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
	      	      and   class.classif_id=r.classif_id
 		          and   class.classif_tipo_id=codiceFinVTipoTbrId
		 	      and   r.data_cancellazione is null
			      and   r.validita_fine is NULL
	  		      and   class.data_cancellazione is null;

			   if flussoElabMifValore is null then --3
		     	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura piano_conti_fin_V_code '||codiceFinVTbr||' [siac_r_movgest_class].';

             	   select class.classif_desc into flussoElabMifValore
	    	       from siac_r_movgest_class rclass, siac_t_class class
	               where rclass.movgest_ts_id=mifOrdinativoIdRec.mif_ord_movgest_ts_id
   		           and   rclass.data_cancellazione is null
       		       and   rclass.validita_fine is null
           		   and   class.classif_id=rclass.classif_id
	               and   class.classif_tipo_id=codiceFinVTipoTbrId
   		           and   class.data_cancellazione is null
	               order by rclass.movgest_classif_id
   		           limit 1;
   	           end if; --3
           end if;--2
 /*      	  if collEventoCodeId is null then
        	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'Lettura tipo evento '||flussoElabMifElabRec.flussoElabMifParam||'.';

            select coll.collegamento_tipo_id into collEventoCodeId
            from siac_d_collegamento_tipo coll
            where coll.ente_proprietario_id=enteProprietarioId
            and   coll.collegamento_tipo_code=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1))
            and   coll.data_cancellazione is null
		    and   date_trunc('day',dataElaborazione)>=date_trunc('day',coll.validita_inizio)
		    and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(coll.validita_fine,dataElaborazione));
         end if;

	     if collEventoCodeId is not null then
		  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'Lettura conto economico patrimoniale.';
          select conto.pdce_conto_code into flussoElabMifValore
          from siac_t_pdce_conto conto, siac_t_reg_movfin regMovFin, siac_r_evento_reg_movfin rEvento,
               siac_d_collegamento_tipo coll, siac_d_evento evento,
               siac_t_mov_ep reg, siac_r_reg_movfin_stato regstato, siac_d_reg_movfin_stato stato,
               siac_t_prima_nota pn, siac_r_prima_nota_stato rpnota, siac_d_prima_nota_stato pnstato,
               siac_t_mov_ep_det det
          where coll.ente_proprietario_id=enteProprietarioId
          and   coll.collegamento_tipo_id=collEventoCodeId
          and   evento.collegamento_tipo_id=coll.collegamento_tipo_id
          and   rEvento.evento_id=evento.evento_id
          and   rEvento.campo_pk_id=mifOrdinativoIdRec.mif_ord_ord_id
          and   regMovFin.regmovfin_id=rEvento.regmovfin_id
--          and   regMovFin.ambito_id=ambitoFinId  -- AMBITO_FIN
          and   regstato.regmovfin_id=regMovFin.regmovfin_id
          and   stato.regmovfin_stato_id=regstato.regmovfin_stato_id
          and   stato.regmovfin_stato_code!=REGMOVFIN_STATO_A
          and   reg.regmovfin_id=regMovFin.regmovfin_id
          and   pn.pnota_id=reg.regep_id
          and   rpnota.pnota_id=pn.pnota_id
          and   pnstato.pnota_stato_id=rpnota.pnota_stato_id
          and   pnstato.pnota_stato_code!=REGMOVFIN_STATO_A
          and   det.movep_id=reg.movep_id
          and   det.movep_det_segno=SEGNO_ECONOMICO -- Avere
		  and   conto.pdce_conto_id=det.pdce_conto_id
          and   regMovFin.data_cancellazione is null
          and   regMovFin.validita_fine is null
          and   rEvento.data_cancellazione is null
          and   rEvento.validita_fine is null
          and   evento.data_cancellazione is null
          and   evento.validita_fine is null
          and   reg.data_cancellazione is null
          and   reg.validita_fine is null
          and   regstato.data_cancellazione is null
          and   regstato.validita_fine is null
          and   pn.data_cancellazione is null
          and   pn.validita_fine is null
          and   rpnota.data_cancellazione is null
          and   rpnota.validita_fine is null
          and   conto.data_cancellazione is null
          and   conto.validita_fine is null
          order by pn.pnota_id desc
          limit 1;
         end if;*/

	    end if; -- param
        if flussoElabMifValore is not null then
	        mifFlussoOrdinativoRec.mif_ord_class_economico:=flussoElabMifValore;
        end if;
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

	  -- <importo_codice_economico_siope>
	  mifCountRec:=mifCountRec+1;
      if mifFlussoOrdinativoRec.mif_ord_class_economico is not null then
      	flussoElabMifElabRec:=null;
	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	    if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    	end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         		mifFlussoOrdinativoRec.mif_ord_class_importo_economico:=mifFlussoOrdinativoRec.mif_ord_importo;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;
      end if;

	  -- <codice_ue_siope>
	  flussoElabMifElabRec:=null;
	  flussoElabMifValore:=null;
	  mifCountRec:=mifCountRec+1;
	  flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	  if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	  end if;
	  if flussoElabMifElabRec.flussoElabMifAttivo=true then
   		if flussoElabMifElabRec.flussoElabMifElab=true then
	     if flussoElabMifElabRec.flussoElabMifParam is not null then
    	 	if codiceUECodeTipo is null then
				codiceUECodeTipo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
	        end if;

         	if codiceUECodeTipo is not null and codiceUECodeTipoId is null then
        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_d_class_tipo.';

        	 select tipo.classif_tipo_id into codiceUECodeTipoId
             from  siac_d_class_tipo tipo
             where tipo.ente_proprietario_id=enteProprietarioId
             and   tipo.classif_tipo_code=codiceUECodeTipo
             and   tipo.data_cancellazione is null
		     and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
		 	 and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));
       		end if;

	        if codiceUECodeTipoId is not null then

        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_t_class [siac_r_ordinativo_class].';
        	 select class.classif_code into flussoElabMifValore
             from siac_r_ordinativo_class rclass, siac_t_class class
             where rclass.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
             and   rclass.data_cancellazione is null
             and   rclass.validita_fine is null
             and   class.classif_id=rclass.classif_id
             and   class.classif_tipo_id=codiceUECodeTipoId
             and   class.data_cancellazione is null
             order by rclass.ord_classif_id
             limit 1;

		     if flussoElabMifValore is null then
            	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_t_class [siac_r_movgest_class].';
				select class.classif_code into flussoElabMifValore
	    	    from siac_r_movgest_class rclass, siac_t_class class
	            where rclass.movgest_ts_id=mifOrdinativoIdRec.mif_ord_movgest_ts_id
	            and   rclass.data_cancellazione is null
	            and   rclass.validita_fine is null
	            and   class.classif_id=rclass.classif_id
	            and   class.classif_tipo_id=codiceUECodeTipoId
	            and   class.data_cancellazione is null
	            order by rclass.movgest_classif_id
	            limit 1;
             end if;
        	end if;

	        if flussoElabMifValore is not null then
				mifFlussoOrdinativoRec.mif_ord_class_transaz_ue:=flussoElabMifValore;
    	    end if;
          end if;
	   else
		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  	   end if;
      end if;

	  -- <codice_entrata_siope>
	  flussoElabMifElabRec:=null;
	  flussoElabMifValore:=null;
	  mifCountRec:=mifCountRec+1;
	  flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	  if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	  end if;
	  if flussoElabMifElabRec.flussoElabMifAttivo=true then
   		if flussoElabMifElabRec.flussoElabMifElab=true then
	     if flussoElabMifElabRec.flussoElabMifParam is not null then
    	 	if ricorrenteCodeTipo is null then
				ricorrenteCodeTipo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
	        end if;

         	if ricorrenteCodeTipo is not null and ricorrenteCodeTipoId is null then
        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_d_class_tipo.';

        	 select tipo.classif_tipo_id into ricorrenteCodeTipoId
             from  siac_d_class_tipo tipo
             where tipo.ente_proprietario_id=enteProprietarioId
             and   tipo.classif_tipo_code=ricorrenteCodeTipo
             and   tipo.data_cancellazione is null
		     and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
		 	 and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));
       		end if;

	        if ricorrenteCodeTipoId is not null then

        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_t_class [siac_r_ordinativo_class].';
        	 select upper(class.classif_desc) into flussoElabMifValore
             from siac_r_ordinativo_class rclass, siac_t_class class
             where rclass.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
             and   rclass.data_cancellazione is null
             and   rclass.validita_fine is null
             and   class.classif_id=rclass.classif_id
             and   class.classif_tipo_id=ricorrenteCodeTipoId
             and   class.data_cancellazione is null
             order by rclass.ord_classif_id
             limit 1;

		     if flussoElabMifValore is null then
            	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_t_class [siac_r_movgest_class].';
				select upper(class.classif_desc) into flussoElabMifValore
	    	    from siac_r_movgest_class rclass, siac_t_class class
	            where rclass.movgest_ts_id=mifOrdinativoIdRec.mif_ord_movgest_ts_id
	            and   rclass.data_cancellazione is null
	            and   rclass.validita_fine is null
	            and   class.classif_id=rclass.classif_id
	            and   class.classif_tipo_id=ricorrenteCodeTipoId
	            and   class.data_cancellazione is null
	            order by rclass.movgest_classif_id
	            limit 1;
             end if;
        	end if;

	        if flussoElabMifValore is not null then
				mifFlussoOrdinativoRec.mif_ord_class_ricorrente_entrata:=flussoElabMifValore;
    	    end if;
          end if;
	   else
		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  	   end if;
      end if;



       -- </dati_ARCONET_siope>
       -- </classificazione_dati_siope_entrate>
       -- </classificazione>

       -- <bollo>
       -- <assoggettamento_bollo>
   	  mifCountRec:=mifCountRec+1;
      ordCodiceBolloDesc:=null;
      codiceBolloPlusDesc:=null;
      codiceBolloPlusEsente:=false;
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      if mifOrdinativoIdRec.mif_ord_codbollo_id is not null then


	   flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
  	    end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
	   	  if flussoElabMifElabRec.flussoElabMifElab=true then
            -- se REGOLARIZZAZIONE IMPOSTAZIONE DI ESENTE BOLLO
            if flussoElabMifElabRec.flussoElabMifParam is not null and
               flussoElabMifElabRec.flussoElabMifDef is not null and
               mifFlussoOrdinativoRec.mif_ord_vers_tipo_riscos is not null and
/*               mifFlussoOrdinativoRec.mif_ord_vers_tipo_riscos=
                 trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1)) -- REGOLARIZZAZIONE*/
               mifFlussoOrdinativoRec.mif_ord_vers_tipo_riscos in  -- siac-5652 14.12.2017 Sofia
               ( trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1)), -- REGOLARIZZAZIONE
                 trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2))  -- REGOLARIZZAZIONE ACCREDITO BANCA d'ITALIA
               )
                  then
                   mifFlussoOrdinativoRec.mif_ord_bollo_carico:=
                       trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
                   mifFlussoOrdinativoRec.mif_ord_bollo_esenzione:=
                    trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,2));

                   codiceBolloPlusEsente:=true;
            end if;

            if mifFlussoOrdinativoRec.mif_ord_bollo_carico  is null then
          	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura codice bollo.';

             select bollo.codbollo_desc , replace(plus.codbollo_plus_desc,'BENEFICIARIO','VERSANTE'), plus.codbollo_plus_esente
                   into ordCodiceBolloDesc, codiceBolloPlusDesc, codiceBolloPlusEsente
             from siac_d_codicebollo bollo, siac_d_codicebollo_plus plus, siac_r_codicebollo_plus rp
             where bollo.codbollo_id=mifOrdinativoIdRec.mif_ord_codbollo_id
             and   rp.codbollo_id=bollo.codbollo_id
             and   plus.codbollo_plus_id=rp.codbollo_plus_id
             and   rp.data_cancellazione is null
             and   rp.validita_fine is null;

             if coalesce(codiceBolloPlusDesc,NVL_STR)!=NVL_STR  then
            	mifFlussoOrdinativoRec.mif_ord_bollo_carico:=codiceBolloPlusDesc;
             end if;
            end if;
          else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		  end if;
        end if;
       end if;

      -- <causale_esenzione_bollo>
   	  mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=null;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      if codiceBolloPlusEsente=true and coalesce(ordCodiceBolloDesc,NVL_STR)!=NVL_STR then
      	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
  	    end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
	   	  if flussoElabMifElabRec.flussoElabMifElab=true then
--              27.06.2018 Sofia siac-6272
--			mifFlussoOrdinativoRec.mif_ord_bollo_esenzione:=substring(ordCodiceBolloDesc from 1 for 30);
          	mifFlussoOrdinativoRec.mif_ord_bollo_esenzione:=ordCodiceBolloDesc;
          else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		  end if;
        end if;
      end if;
	  -- </bollo>

      -- <versante>
      -- <anagrafica_versante>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
            	flussoElabMifValore:=soggettoRec.soggetto_desc;

                if flussoElabMifValore is not null then
	                mifFlussoOrdinativoRec.mif_ord_anag_versante:=substring(flussoElabMifValore from 1 for 140);
                end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
      end if;

	   -- <indirizzo_versante>
       flussoElabMifElabRec:=null;
       flussoElabMifValore:=null;
       mifCountRec:=mifCountRec+1;
       flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
       strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' indirizzo_benef mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
            	select * into indirizzoRec
                from siac_t_indirizzo_soggetto indir
                where indir.soggetto_id=soggettoRifId
                and   indir.principale='S'
                and   indir.data_cancellazione is null
         	    and   indir.validita_fine is null;
	            if indirizzoRec is null then
                    isIndirizzoBenef:=false;
	            end if;

				if isIndirizzoBenef=true then
                 if indirizzoRec.via_tipo_id is not null then
            		select tipo.via_tipo_code into flussoElabMifValore
	                from siac_d_via_tipo tipo
    	            where tipo.via_tipo_id=indirizzoRec.via_tipo_id
        	        and   tipo.data_cancellazione is null
         		    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		 			and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));

         	        if flussoElabMifValore is not null then
        	        	flussoElabMifValore:=flussoElabMifValore||' ';
    	            end if;
             	 end if;

            	 flussoElabMifValore:=trim(both from coalesce(flussoElabMifValore,'')||coalesce(indirizzoRec.toponimo,'')
                                 ||' '||coalesce(indirizzoRec.numero_civico,''));

	             if flussoElabMifValore is not null then
		            mifFlussoOrdinativoRec.mif_ord_indir_versante:=substring(flussoElabMifValore from 1 for 30);
        	     end if;
               end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

   	   -- <cap_versante>
       mifCountRec:=mifCountRec+1;
	   if isIndirizzoBenef=true then
        if indirizzoRec.zip_code is not null  then
         flussoElabMifElabRec:=null;

         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
	            mifFlussoOrdinativoRec.mif_ord_cap_versante:=lpad(indirizzoRec.zip_code,5,'0');
          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
         end if;
        end if;
       end if;


       -- <localita_beneficiario>
       mifCountRec:=mifCountRec+1;
	   if isIndirizzoBenef=true then
        if indirizzoRec.comune_id is not null  then
         flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;

	     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
          	select com.comune_desc into flussoElabMifValore
            from siac_t_comune com
            where com.comune_id=indirizzoRec.comune_id
            and   com.data_cancellazione is null
            and   com.validita_fine is null;

            if flussoElabMifValore is not null then
	            mifFlussoOrdinativoRec.mif_ord_localita_versante:=substring(flussoElabMifValore from 1 for 30);
            end if;
          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
         end if;
        end if;
	  end if;

	  -- <provincia_beneficiario>
      mifCountRec:=mifCountRec+1;
	  if isIndirizzoBenef=true then
        if indirizzoRec.comune_id is not null  then
         flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
          	select prov.sigla_automobilistica into flussoElabMifValore
            from siac_r_comune_provincia provRel, siac_t_provincia prov
            where provRel.comune_id=indirizzoRec.comune_id
            and   provRel.data_cancellazione is null
            and   provRel.validita_fine is null
            and   prov.provincia_id=provRel.provincia_id
            and   prov.data_cancellazione is null
            and   prov.validita_fine is null
            order by provRel.data_creazione;

            if flussoElabMifValore is not null then
	            mifFlussoOrdinativoRec.mif_ord_prov_versante:=flussoElabMifValore;
            end if;
          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
         end if;
        end if;
	 end if;


	 -- <stato_versante>
  	 mifCountRec:=mifCountRec+1;

     -- <partita_iva_versante>
     mifCountRec:=mifCountRec+1;
     if soggettoRec.partita_iva is not null or
        (soggettoRec.partita_iva is null and soggettoRec.codice_fiscale is not null and length(soggettoRec.codice_fiscale)=11) then
      	 flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
          		if soggettoRec.partita_iva is not null then
                	 mifFlussoOrdinativoRec.mif_ord_partiva_versante:=soggettoRec.partita_iva;
                else
                	mifFlussoOrdinativoRec.mif_ord_partiva_versante:=trim ( both ' ' from soggettoRec.codice_fiscale);
                end if;

          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
        end if;
      end if;

      -- <codice_fiscale_versante>
      mifCountRec:=mifCountRec+1;
      if soggettoRec.partita_iva is null  then
      	 flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
          	if soggettoRec.codice_fiscale is not null and
  			   length(soggettoRec.codice_fiscale)=16 then
				flussoElabMifValore:=trim ( both ' ' from soggettoRec.codice_fiscale);
            end if;

            if flussoElabMifValore is not null then
		            mifFlussoOrdinativoRec.mif_ord_codfisc_versante:=flussoElabMifValore;
            end if;
          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
         end if;
      end if;
     -- </versante>

     -- <causale>
	 flussoElabMifElabRec:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
     if flussoElabMifElabRec.flussoElabMifId is null then
  	 	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;
     if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
            mifFlussoOrdinativoRec.mif_ord_vers_causale:=
	            replace(replace(substring(mifOrdinativoIdRec.mif_ord_desc from 1 for 370) , chr(VT_ASCII),chr(SPACE_ASCII)),chr(BS_ASCII),NVL_STR);
	     else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	     end if;
      end if;

      -- <sospeso>
      -- <sospesi>
      -- <numero_provvisorio>
      -- <importo_provvisorio>
      mifCountRec:=mifCountRec+2;


      -- <mandato_associato>
      -- <numero_mandato>
      -- <progressivo_associato>
      mifCountRec:=mifCountRec+2;

      -- <informazioni_aggiuntive>
      -- <lingua>
     flussoElabMifElabRec:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
     if flussoElabMifElabRec.flussoElabMifId is null then
  	 	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;
     if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
        	if flussoElabMifElabRec.flussoElabMifDef is not null then
        		mifFlussoOrdinativoRec.mif_ord_lingua:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
	     else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	     end if;
     end if;

     -- <riferimento_documento_esterno>
     mifCountRec:=mifCountRec+1;
   	 flussoElabMifElabRec:=null;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
     if flussoElabMifElabRec.flussoElabMifId is null then
  		 	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;
   	 if flussoElabMifElabRec.flussoElabMifAttivo=true then
		if flussoElabMifElabRec.flussoElabMifElab=true then
        		if flussoElabMifElabRec.flussoElabMifDef is not null then
                	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura presenza allegati cartacei.';

                	select 1 into codResult
				    from siac_r_ordinativo_attr rattr
					where rattr.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                    and   rattr.attr_id=ordAllegatoCartAttrId
				    and   rattr.boolean='S'
					and   rattr.data_cancellazione is null
				    and   rattr.validita_fine is null;

				if codResult is not null then
	                mifFlussoOrdinativoRec.mif_ord_rif_doc_esterno:=flussoElabMifElabRec.flussoElabMifDef;
		        end if;
             end if;
		else
    		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	    end if;
      end if;
      -- </informazioni_aggiuntive>

      -- <sostituzione_reversale>
      -- <numero_reversale_da_sostituire>
      flussoElabMifElabRec:=null;
      ordSostRec:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

      if flussoElabMifElabRec.flussoElabMifId is null then
  		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
        			strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura ordinativi di sostituzione.';
                	select * into ordSostRec
                    from fnc_mif_ordinativo_sostituito( mifOrdinativoIdRec.mif_ord_ord_id,
 														ordRelazCodeTipoId,
                                                        dataElaborazione,dataFineVal);

                    if ordSostRec is not null then
                    	mifFlussoOrdinativoRec.mif_ord_num_ord_colleg:=lpad(ordSostRec.ordNumeroSostituto::varchar,NUM_SETTE,ZERO_PAD);
                    end if;
    	else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	    end if;

      end if;

      mifCountRec:=mifCountRec+1;
      -- <progressivo_reversale_da_sostituire>
      if mifFlussoOrdinativoRec.mif_ord_num_ord_colleg is not null then
       	flussoElabMifElabRec:=null;
  	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
    	if flussoElabMifElabRec.flussoElabMifId is null then
  	 		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	    end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
     		if flussoElabMifElabRec.flussoElabMifElab=true then
            	if flussoElabMifElabRec.flussoElabMifDef is not null then
                	mifFlussoOrdinativoRec.mif_ord_progr_ord_colleg:=flussoElabMifElabRec.flussoElabMifDef;
                end if;
     	    else
     			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
	    end if;
 	 end if;

     -- <esercizio_reversale_da_sostituire>
     mifCountRec:=mifCountRec+1;
     if mifFlussoOrdinativoRec.mif_ord_num_ord_colleg is not null then
        flussoElabMifElabRec:=null;
		flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
    	if flussoElabMifElabRec.flussoElabMifId is null then
  	 		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	    end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
     		if flussoElabMifElabRec.flussoElabMifElab=true then
               	mifFlussoOrdinativoRec.mif_ord_anno_ord_colleg:=ordSostRec.ordAnnoSostituto;
     	    else
     			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
	    end if;
    end if;
	-- </sostituzione_reversale>

    -- <dati_a_disposizione_ente_versante> facoltativo non valorizzato
    -- </informazioni_versante>

    -- <dati_a_disposizione_ente_reversale>
    -- <codice_distinta>
    flussoElabMifElabRec:=null;
    mifCountRec:=mifCountRec+1;
    flussoElabMifValore:=null;
    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
     if flussoElabMifElabRec.flussoElabMifId is null then
  	 		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	 end if;

     if flussoElabMifElabRec.flussoElabMifAttivo=true then
      if flussoElabMifElabRec.flussoElabMifElab=true then
      		if mifOrdinativoIdRec.mif_ord_dist_id is not null then
				strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura distinta [siac_d_distinta].';
            	select  d.dist_code into flussoElabMifValore
                from siac_d_distinta d
                where d.dist_id=mifOrdinativoIdRec.mif_ord_dist_id;
            end if;

            if flussoElabMifValore is not null then
              	mifFlussoOrdinativoRec.mif_ord_codice_distinta:=flussoElabMifValore;
            end if;
      else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	  end if;
	 end if;

     -- <atto_contabile>
     flussoElabMifElabRec:=null;
     flussoElabMifValore:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
     if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;
     if flussoElabMifElabRec.flussoElabMifAttivo=true then
	     if flussoElabMifElabRec.flussoElabMifElab=true then
         	if flussoElabMifElabRec.flussoElabMifParam is not null then
                if attoAmmTipoAllRag is null then
            		attoAmmTipoAllRag:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                end if;
                if attoAmmStrTipoRag is null then
                	attoAmmStrTipoRag:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
         		end if;

                if attoAmmTipoAllRag is not null and  attoAmmStrTipoRag is not null then

                 flussoElabMifValore:=fnc_mif_estremi_attoamm_all(mifOrdinativoIdRec.mif_ord_atto_amm_id,
                 										          attoAmmTipoAllRag,attoAmmStrTipoRag,
                                                                  dataElaborazione, dataFineVal);

                end if;
          	end if;

            if flussoElabMifValore is not null then
                 	mifFlussoOrdinativoRec.mif_ord_codice_atto_contabile:=flussoElabMifValore;
            end if;

         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


      -- 15.01.2018 Sofia SIAC-5765
      -- <codice_operatore>
	  flussoElabMifElabRec:=null;
	  flussoElabMifValore:=null;
	  flussoElabMifValoreDesc:=null;
	  mifCountRec:=mifCountRec+1;
	  flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

	  if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	  end if;
	  if flussoElabMifElabRec.flussoElabMifAttivo=true then
   		if flussoElabMifElabRec.flussoElabMifElab=true then


         if mifOrdinativoIdRec.mif_ord_login_creazione is not null then
			flussoElabMifValore:=mifOrdinativoIdRec.mif_ord_login_creazione;
         end if;

         if flussoElabMifValore is not null then
        	select substring(s.soggetto_desc  from 1 for 12)  into flussoElabMifValoreDesc
			from siac_t_account a, siac_r_soggetto_ruolo r, siac_t_soggetto s
			where a.ente_proprietario_id=enteProprietarioId
            and   a.account_code=flussoElabMifValore
			and   r.soggeto_ruolo_id=a.soggeto_ruolo_id
			and   s.soggetto_id=r.soggetto_id
            and   r.data_cancellazione is null
            and   r.validita_fine is null
            and   a.data_cancellazione is null
            and   a.validita_fine is null;

            if 	flussoElabMifValoreDesc is not null then
            	flussoElabMifValore:=flussoElabMifValoreDesc;
            end if;
         end if;

         if flussoElabMifValore is not null then
            mifFlussoOrdinativoRec.mif_ord_code_operatore:=substring(flussoElabMifValore from 1 for 12);
         end if;
       else
		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  	   end if;
     end if;
    -- </dati_a_disposizione_ente_reversale>
    -- </reversale>



  /*raise notice 'codice_funzione= %',mifFlussoOrdinativoRec.mif_ord_codice_funzione;
  raise notice 'numero_reversale= %',mifFlussoOrdinativoRec.mif_ord_numero;
  raise notice 'data_reversale= %',mifFlussoOrdinativoRec.mif_ord_data;
  raise notice 'importo_reversale= %',mifFlussoOrdinativoRec.mif_ord_importo;*/

  strMessaggio:='Inserimento mif_t_ordinativo_entrata per ord. numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        INSERT INTO mif_t_ordinativo_entrata
        (
		 mif_ord_flusso_elab_mif_id,
		 mif_ord_ord_id,
		 mif_ord_bil_id,
		 mif_ord_anno,
		 mif_ord_numero,
         mif_ord_codice_funzione,
		 mif_ord_data,
		 mif_ord_importo,
		 mif_ord_bci_tipo_contabil,
		 mif_ord_bci_tipo_entrata,
		 --mif_ord_bci_numero_doc,
		 mif_ord_destinazione,
		 mif_ord_codice_abi_bt,
		 mif_ord_codice_ente,
		 mif_ord_desc_ente,
		 mif_ord_codice_ente_bt,
		 mif_ord_anno_esercizio,
         mif_ord_codice_flusso_oil,
		 mif_ord_data_creazione_flusso,
		 mif_ord_anno_flusso,
         mif_ord_id_flusso_oil,
		 mif_ord_codice_struttura,
		 mif_ord_ente_localita,
		 mif_ord_ente_indirizzo,
		 mif_ord_cod_raggrup,
		 mif_ord_progr_vers,
		 mif_ord_class_codice_cge,
		 mif_ord_class_importo,
		 mif_ord_codifica_bilancio,
         mif_ord_capitolo,
		 mif_ord_articolo,
		 mif_ord_desc_codifica,
         mif_ord_desc_codifica_bil,
		 mif_ord_gestione,
		 mif_ord_anno_res,
		 mif_ord_importo_bil,
		 mif_ord_anag_versante,
		 mif_ord_indir_versante,
		 mif_ord_cap_versante,
		 mif_ord_localita_versante,
		 mif_ord_prov_versante,
		 mif_ord_partiva_versante,
		 mif_ord_codfisc_versante,
		 mif_ord_bollo_esenzione,
		 mif_ord_vers_tipo_riscos,
		 mif_ord_vers_cod_riscos,
		 mif_ord_vers_importo,
		 mif_ord_vers_causale,
		 mif_ord_lingua,
		 mif_ord_rif_doc_esterno,
		 mif_ord_info_tesoriere,
		 mif_ord_flag_copertura,
		 mif_ord_sost_rev,
		 mif_ord_num_ord_colleg,
		 mif_ord_progr_ord_colleg,
		 mif_ord_anno_ord_colleg,
		 mif_ord_numero_acc,
		 mif_ord_code_operatore, -- 15.01.2018 Sofia SIAC-5765
		 mif_ord_siope_codice_cge,
		 mif_ord_siope_descri_cge,
		 mif_ord_descri_estesa_cap,
         mif_ord_codice_ente_ipa, -- newSiope+
	     mif_ord_codice_ente_istat,
		 mif_ord_codice_ente_tramite,
		 mif_ord_codice_ente_tramite_bt,
		 mif_ord_riferimento_ente,
         mif_ord_vers_cc_postale,
		 mif_ord_class_tipo_debito,
         mif_ord_class_tipo_debito_nc,
		 mif_ord_class_economico,
		 mif_ord_class_importo_economico,
		 mif_ord_class_transaz_ue,
		 mif_ord_class_ricorrente_entrata,
		 mif_ord_bollo_carico,
		 mif_ord_stato_versante,
		 mif_ord_codice_distinta,
		 mif_ord_codice_atto_contabile, -- newSiope+
  		 validita_inizio,
         ente_proprietario_id,
  		 login_operazione
		)
		VALUES
        (
  		 flussoElabMifLogId, --idElaborazione univoco -- mif_ord_flusso_elab_mif_id
  		 mifOrdinativoIdRec.mif_ord_ord_id,     -- mif_ord_ord_id
		 mifOrdinativoIdRec.mif_ord_bil_id,     -- mif_ord_bil_id
  		 mifOrdinativoIdRec.mif_ord_ord_anno,   -- mif_ord_anno
  		 mifFlussoOrdinativoRec.mif_ord_numero, -- mif_ord_numero
  		 mifFlussoOrdinativoRec.mif_ord_codice_funzione, -- mif_ord_codice_funzione
  		 mifFlussoOrdinativoRec.mif_ord_data, -- mif_ord_data
--  	     (case when mifFlussoOrdinativoRec.mif_ord_codice_funzione in (FUNZIONE_CODE_N,FUNZIONE_CODE_A) then
--                    '0.00' else mifFlussoOrdinativoRec.mif_ord_importo end), -- mif_ord_importo
         mifFlussoOrdinativoRec.mif_ord_importo,  -- mif_ord_importo
 		 mifFlussoOrdinativoRec.mif_ord_bci_tipo_contabil,  -- mif_ord_bci_tipo_contabil
  	     mifFlussoOrdinativoRec.mif_ord_bci_tipo_entrata,   -- mif_ord_bci_tipo_entrata
 		 --mifFlussoOrdinativoRec.mif_ord_bci_numero_doc,   -- mif_ord_bci_numero_doc
 	 	 mifFlussoOrdinativoRec.mif_ord_destinazione,       -- mif_ord_destinazione
 		 mifFlussoOrdinativoRec.mif_ord_codice_abi_bt,      -- mif_ord_codice_abi_bt
 		mifFlussoOrdinativoRec.mif_ord_codice_ente,         -- mif_ord_codice_ente
		mifFlussoOrdinativoRec.mif_ord_desc_ente,           -- mif_ord_desc_ente
  		mifFlussoOrdinativoRec.mif_ord_codice_ente_bt,      -- mif_ord_codice_ente_bt
 		mifFlussoOrdinativoRec.mif_ord_anno_esercizio,      -- mif_ord_anno_esercizio
--  		annoBilancio||flussoElabMifDistOilId::varchar,  -- flussoElabMifDistOilId
  		annoBilancio||flussoElabMifDistOilRetId::varchar,
        extract(year from now())||'-'||
        lpad(extract('month' from now())::varchar,2,'0')||'-'||
        lpad(extract('day' from now())::varchar,2,'0')||'T'||
        lpad(extract('hour' from now())::varchar,2,'0')||':'||
        lpad(extract('minute' from now())::varchar,2,'0')||':'||'00',  -- mif_ord_data_creazione_flusso
        extract(year from now())::integer,                  -- mif_ord_anno_flusso
		flussoElabMifOilId, --idflussoOil                   -- mif_ord_id_flusso_oil
 		mifFlussoOrdinativoRec.mif_ord_codice_struttura,  -- mif_ord_codice_struttura
 		mifFlussoOrdinativoRec.mif_ord_ente_localita,     -- mif_ord_ente_localita
		mifFlussoOrdinativoRec.mif_ord_ente_indirizzo,    -- mif_ord_ente_indirizzo
        mifFlussoOrdinativoRec.mif_ord_cod_raggrup,       -- mif_ord_cod_raggrup
 		mifFlussoOrdinativoRec.mif_ord_progr_vers,        -- mif_ord_progr_vers
 		mifFlussoOrdinativoRec.mif_ord_class_codice_cge,  -- mif_ord_class_codice_cge
        mifFlussoOrdinativoRec.mif_ord_class_importo,     -- mif_ord_class_importo
 		mifFlussoOrdinativoRec.mif_ord_codifica_bilancio, -- mif_ord_codifica_bilancio
        mifFlussoOrdinativoRec.mif_ord_capitolo,          -- mif_ord_capitolo
  		mifFlussoOrdinativoRec.mif_ord_articolo,          -- mif_ord_articolo
 		mifFlussoOrdinativoRec.mif_ord_desc_codifica,     -- mif_ord_desc_codifica
        mifFlussoOrdinativoRec.mif_ord_desc_codifica_bil, -- mif_ord_desc_codifica_bil
		mifFlussoOrdinativoRec.mif_ord_gestione,          -- mif_ord_gestione
 		mifFlussoOrdinativoRec.mif_ord_anno_res,          -- mif_ord_anno_res
        mifFlussoOrdinativoRec.mif_ord_importo_bil,       -- mif_ord_importo_bil
        mifFlussoOrdinativoRec.mif_ord_anag_versante,     -- mif_ord_anag_versante
  		mifFlussoOrdinativoRec.mif_ord_indir_versante,    -- mif_ord_indir_versante
		mifFlussoOrdinativoRec.mif_ord_cap_versante,      -- mif_ord_cap_versante
 		mifFlussoOrdinativoRec.mif_ord_localita_versante, -- mif_ord_localita_versante
  		mifFlussoOrdinativoRec.mif_ord_prov_versante,     -- mif_ord_prov_versante
 		mifFlussoOrdinativoRec.mif_ord_partiva_versante,
  		mifFlussoOrdinativoRec.mif_ord_codfisc_versante,
 		mifFlussoOrdinativoRec.mif_ord_bollo_esenzione,
        mifFlussoOrdinativoRec.mif_ord_vers_tipo_riscos,
        mifFlussoOrdinativoRec.mif_ord_vers_cod_riscos,
        mifFlussoOrdinativoRec.mif_ord_vers_importo,
        mifFlussoOrdinativoRec.mif_ord_vers_causale,
 		mifFlussoOrdinativoRec.mif_ord_lingua,
		mifFlussoOrdinativoRec.mif_ord_rif_doc_esterno,
 		mifFlussoOrdinativoRec.mif_ord_info_tesoriere,
 		mifFlussoOrdinativoRec.mif_ord_flag_copertura,
        mifFlussoOrdinativoRec.mif_ord_sost_rev,
		mifFlussoOrdinativoRec.mif_ord_num_ord_colleg,
		mifFlussoOrdinativoRec.mif_ord_progr_ord_colleg,
		mifFlussoOrdinativoRec.mif_ord_anno_ord_colleg,
		mifFlussoOrdinativoRec.mif_ord_numero_acc,
        mifFlussoOrdinativoRec.mif_ord_code_operatore, -- 15.01.2018 Sofia SIAC-5765
        mifFlussoOrdinativoRec.mif_ord_siope_codice_cge,
        mifFlussoOrdinativoRec.mif_ord_siope_descri_cge,
        mifFlussoOrdinativoRec.mif_ord_descri_estesa_cap,
        mifFlussoOrdinativoRec.mif_ord_codice_ente_ipa, -- newSiope+
	    mifFlussoOrdinativoRec.mif_ord_codice_ente_istat,
		mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite,
		mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite_bt,
		mifFlussoOrdinativoRec.mif_ord_riferimento_ente,
        mifFlussoOrdinativoRec.mif_ord_vers_cc_postale,
	    mifFlussoOrdinativoRec.mif_ord_class_tipo_debito,    -- commerciale
        mifFlussoOrdinativoRec.mif_ord_class_tipo_debito_nc, -- non_commerciale
	    mifFlussoOrdinativoRec.mif_ord_class_economico,
	    mifFlussoOrdinativoRec.mif_ord_class_importo_economico,
	    mifFlussoOrdinativoRec.mif_ord_class_transaz_ue,
	    mifFlussoOrdinativoRec.mif_ord_class_ricorrente_entrata,
	    mifFlussoOrdinativoRec.mif_ord_bollo_carico,
	    mifFlussoOrdinativoRec.mif_ord_stato_versante,
	    mifFlussoOrdinativoRec.mif_ord_codice_distinta,
	    mifFlussoOrdinativoRec.mif_ord_codice_atto_contabile, -- newSiope+
        now(),
        enteProprietarioId,
        loginOperazione
     )
     returning mif_ord_id into mifOrdSpesaId;



   /* da vedere
     if isGestioneQuoteOK=true then
	  quoteOrdinativoRec:=null;
	  mifCountRec:=FLUSSO_MIF_ELAB_NUM_QUOTA_MAND;
	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura quote ordinativo.';

	for quoteOrdinativoRec in
    (select *
	 from fnc_mif_ordinativo_quote_entrata(mifOrdinativoIdRec.mif_ord_ord_id,
		 								   ordinativoTsDetTipoId,movgestTsTipoSubId,
                                           classCdrTipoId,classCdcTipoId,
        		                           enteProprietarioId,dataElaborazione,dataFineVal)
    )
    loop
  		-- <Numero_quota_reversale>
		mifCountRec:=FLUSSO_MIF_ELAB_NUM_QUOTA_MAND;
	    flussoElabMifElabRec:=null;
        codResult:=null;
		flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];


    end loop;

 end if; */





 -- <sospesi>
 -- <sospeso>
 -- <numero_provvisorio>
 -- <importo_provvisorio>
 if  isRicevutaAttivo=true then
    ricevutaRec:=null;
    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Gestione  provvisori'
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
    for ricevutaRec in
    (select *
     from fnc_mif_ordinativo_ricevute(mifOrdinativoIdRec.mif_ord_ord_id,
								      flussoElabMifTipoDec,
    	                              enteProprietarioId,dataElaborazione,dataFineVal)
    )
    loop
    	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Inserimento   ricevuta'
                       ||' in mif_t_ordinativo_entrata_ricevute '
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
   		insert into mif_t_ordinativo_entrata_ricevute
        (mif_ord_id,
	     mif_ord_ric_anno,
	     mif_ord_ric_numero,
	     mif_ord_provc_id,
		 mif_ord_ric_importo,
	     validita_inizio,
		 ente_proprietario_id,
	     login_operazione
        )
        values
        (mifOrdSpesaId,
         ricevutaRec.annoRicevuta,
         ricevutaRec.numeroRicevuta,
         ricevutaRec.provRicevutaId,
         ricevutaRec.importoRicevuta,
         now(),
         enteProprietarioId,
         loginOperazione
        );
    end loop;

  end if;

  -- dati fatture da valorizzare se ordinativo commerciale
  -- @@@@ sicuramente da completare
  -- <fattura_siope>
  if isGestioneFatture = true and isOrdCommerciale=true then
   flussoElabMifElabRec:=null;
   mifCountRec:=FLUSSO_MIF_ELAB_FATTURE;
   titoloCap:=null;
   codResult:=null;
   flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];

   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Gestione fatture.Lettura macroaggregato ordinativo di spesa collegato.';
--   select c.classif_code into titoloCap
   -- 23.02.2018 Sofia JIRA siac-5849
   select c.classif_id into codResult
   from siac_r_ordinativo_bil_elem re, siac_r_bil_elem_class rc,
        siac_t_class c
   where re.ord_id=ordinativoSplitId
   and   rc.elem_id=re.elem_id
   and   c.classif_id=rc.classif_id
   and   c.classif_tipo_id=macroAggrTipoCodeId
   and   re.data_cancellazione is null
   and   re.validita_fine is null
   and   rc.data_cancellazione is null
   and   rc.validita_fine is null
   and   c.data_cancellazione is null;

   -- 23.02.2018 Sofia JIRA siac-5849
   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Gestione fatture.Lettura natura spesa ordinativo di spesa collegato.';
   select oil.oil_natura_spesa_desc into titoloCap
   from siac_d_oil_natura_spesa oil, siac_r_oil_natura_spesa_titolo r,
        siac_r_class_fam_tree rtree
   where rtree.classif_fam_tree_id=famMacroTitCodeId
   and   rtree.classif_id=codResult -- macroaggregatoId
   and   r.oil_natura_spesa_titolo_id=rtree.classif_id_padre
   and   oil.oil_natura_spesa_id=r.oil_natura_spesa_id
   and   rtree.data_cancellazione is null
   and   rtree.validita_fine is null
   and   r.data_cancellazione is null
   and   r.validita_fine is null;

  if titoloCap is null then titoloCap:=defNaturaPag; end if;
  -- 26.02.2018 Sofia JIRA siac-5849 - esclusione note credito  per ordinativi di incasso
  titoloCap:=titoloCap||'|S';

  /**  -- 23.02.2018 Sofia JIRA siac-5849
  if titoloCap is not null then
    if substring(titoloCap from 1 for 1)=titoloCorrente then
	  	titoloCap:=descriTitoloCorrente;
    else
     if substring(titoloCap from 1 for 1)=titoloCapitale then
     	titoloCap:=descriTitoloCapitale;
     end if;
    end if;
   end if; **/

   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Gestione fatture.';
   ordRec:=null;
   for ordRec in
   (select * from fnc_mif_ordinativo_documenti_splus( ordinativoSplitId, -- cerco i documenti relativi a ordinativo di pagamento collegato per split
											          numeroDocs::integer,
                                                      tipoDocs,
                                                      docAnalogico,
                                                      attrCodeDataScad,
                                                      titoloCap,
                                                      enteOilRec.ente_oil_codice_pcc_uff,
		   		                        	          enteProprietarioId,
	            		                              dataElaborazione,dataFineVal)
   )
    loop
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Inserimento fatture '
                       ||' in mif_t_ordinativo_spesa_documenti '
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         insert into  mif_t_ordinativo_spesa_documenti
         ( mif_ord_id,
		   mif_ord_documento,
           mif_ord_doc_codice_ipa_ente,
	       mif_ord_doc_tipo,
           mif_ord_doc_tipo_a,
		   mif_ord_doc_id_lotto_sdi,
		   mif_ord_doc_tipo_analog,
		   mif_ord_doc_codfisc_emis,
		   mif_ord_doc_anno,
	       mif_ord_doc_numero,
	       mif_ord_doc_importo,
	       mif_ord_doc_data_scadenza,
	       mif_ord_doc_motivo_scadenza,
	       mif_ord_doc_natura_spesa,
		   validita_inizio,
		   ente_proprietario_id,
		   login_operazione
         )
         values
         (mifOrdSpesaId,
--          ordRec.numero_fattura_siope,
          'E', -- 07.06.2018 Sofia SIAC-6228
		  ordRec.codice_ipa_ente_siope,
		  ordRec.tipo_documento_siope,
          ordRec.tipo_documento_siope_a,
          ordRec.identificativo_lotto_sdi_siope,
          ordRec.tipo_documento_analogico_siope,
          trim ( both ' ' from ordRec.codice_fiscale_emittente_siope),
		  ordRec.anno_emissione_fattura_siope,
		  ordRec.numero_fattura_siope,
          --ordRec.importo_siope,     -- 22.12.2017 Sofia siac-5665
          ordRec.importo_siope_split, -- 22.12.2017 Sofia siac-5665
		  ordRec.data_scadenza_pagam_siope,
		  ordRec.motivo_scadenza_siope,
    	  ordRec.natura_spesa_siope,
          now(),
          enteProprietarioId,
          loginOperazione
         );
    end loop;
   end if;

   numeroOrdinativiTrasm:=numeroOrdinativiTrasm+1;

   end loop;

   strMessaggio:='Aggiornamento progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_out_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
   update siac_t_progressivo p set prog_value=flussoElabMifOilId
   where p.ente_proprietario_id=enteProprietarioId
   and   p.prog_key='oil_out_'||annoBilancio
   and   p.ambito_id=ambitoFinId
   and   p.data_cancellazione is null
   and   p.validita_fine is null;

   strMessaggio:='Aggiornamento progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_'||MANDMIF_TIPO||'_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
   update siac_t_progressivo p set prog_value=flussoElabMifDistOilRetId
   where p.ente_proprietario_id=enteProprietarioId
   and   p.prog_key='oil_'||MANDMIF_TIPO||'_'||annoBilancio
   and   p.ambito_id=ambitoFinId
   and   p.data_cancellazione is null
   and   p.validita_fine is null;

   strMessaggio:='Aggiornamento mif_t_flusso_elaborato.';
   update  mif_t_flusso_elaborato
   set (flusso_elab_mif_id_flusso_oil,flusso_elab_mif_codice_flusso_oil,flusso_elab_mif_num_ord_elab,flusso_elab_mif_file_nome,flusso_elab_mif_esito_msg)=
   	   (flussoElabMifOilId,annoBilancio||flussoElabMifDistOilRetId::varchar,numeroOrdinativiTrasm,flussoElabMifTipoNomeFile||'_'||enteOilRec.ente_oil_codice,
        'Elaborazione in corso tipo flusso '||MANDMIF_TIPO||' - Dati inseriti in mif_t_ordinativo_entrata')
   where flusso_elab_mif_id=flussoElabMifLogId;

    -- gestire aggiornamento mif_t_flusso_elaborato

	RAISE NOTICE 'numeroOrdinativiTrasm %', numeroOrdinativiTrasm;
    messaggioRisultato:=strMessaggioFinale||' Trasmessi '||numeroOrdinativiTrasm||' ordinativi di entrata.';
    messaggioRisultato:=upper(messaggioRisultato);
    flussoElabMifId:=flussoElabMifLogId;
    nomeFileMif:=flussoElabMifTipoNomeFile||'_'||enteOilRec.ente_oil_codice;
    flussoElabMifDistOilId:=(annoBilancio||flussoElabMifDistOilRetId::varchar)::integer;

    return;

exception
    when RAISE_EXCEPTION THEN
    	raise notice '% % ERRORE :  % %',coalesce(strMessaggioFinale,''),coalesce(strMessaggio,''),
	        	substring(upper(SQLERRM) from 1 for 1000),mifCountRec;
        if codResult=-12 then
          messaggioRisultato:=
        	coalesce(strMessaggioFinale,'')||coalesce(strMessaggio,'')||' '||coalesce(substring(upper(SQLERRM) from 1 for 1500),'') ||' '||mifCountRec||'.';
          codiceRisultato:=0;
        else
          messaggioRisultato:=
        	coalesce(strMessaggioFinale,'')||coalesce(strMessaggio,'')||'ERRORE:  '||' '||coalesce(substring(upper(SQLERRM) from 1 for 1500),'')||' '||mifCountRec||'.' ;
       	  codiceRisultato:=-1;
    	end if;

        numeroOrdinativiTrasm:=0;
		messaggioRisultato:=upper(messaggioRisultato);

        if flussoElabMifLogId is not null then
            flussoElabMifId:=flussoElabMifLogId;
        	update  mif_t_flusso_elaborato
   			set (flusso_elab_mif_esito,flusso_elab_mif_esito_msg)=
                ('KO',messaggioRisultato)
		    where flusso_elab_mif_id=flussoElabMifLogId;
        else
        	flussoElabMifId:=null;
        end if;

        return;
     when NO_DATA_FOUND THEN
        raise notice '% % ERRORE : % %',coalesce(strMessaggioFinale,''),coalesce(strMessaggio,''),
	        	substring(upper(SQLERRM) from 1 for 1500),mifCountRec;
        messaggioRisultato:=coalesce(strMessaggioFinale,'')||coalesce(strMessaggio,'')||' Nessun dato presente in archivio '||' '||mifCountRec||'.';
        numeroOrdinativiTrasm:=0;
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);

        if flussoElabMifLogId is not null then
            flussoElabMifId:=flussoElabMifLogId;
        	update  mif_t_flusso_elaborato
   			set (flusso_elab_mif_esito,flusso_elab_mif_esito_msg)=
                ('KO',messaggioRisultato)
		    where flusso_elab_mif_id=flussoElabMifLogId;
        else
        	flussoElabMifId:=null;
        end if;

        return;
     when TOO_MANY_ROWS THEN
        raise notice '% % ERRORE : % %',coalesce(strMessaggioFinale,''),coalesce(strMessaggio,''),
	        	substring(upper(SQLERRM) from 1 for 1500),mifCountRec;
        messaggioRisultato:=coalesce(strMessaggioFinale,'')||coalesce(strMessaggio,'')||' Diverse righe presenti in archivio '||' '||mifCountRec||'.';
        numeroOrdinativiTrasm:=0;
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);

        if flussoElabMifLogId is not null then
            flussoElabMifId:=flussoElabMifLogId;
        	update  mif_t_flusso_elaborato
   			set (flusso_elab_mif_esito,flusso_elab_mif_esito_msg)=
                ('KO',messaggioRisultato)
		    where flusso_elab_mif_id=flussoElabMifLogId;
        else
        	flussoElabMifId:=null;
        end if;
        return;
	when others  THEN
		raise notice '% % Errore DB % % %',coalesce(strMessaggioFinale,''),coalesce(strMessaggio,''),SQLSTATE,
	        	substring(upper(SQLERRM) from 1 for 1000),mifCountRec;
        messaggioRisultato:=coalesce(strMessaggioFinale,'')||coalesce(strMessaggio,'')||'ERRORE DB:'||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 1500)||' '||mifCountRec||'.' ;
        numeroOrdinativiTrasm:=0;
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);

        if flussoElabMifLogId is not null then
            flussoElabMifId:=flussoElabMifLogId;
        	update  mif_t_flusso_elaborato
   			set (flusso_elab_mif_esito,flusso_elab_mif_esito_msg)=
                ('KO',messaggioRisultato)
		    where flusso_elab_mif_id=flussoElabMifLogId;
        else
        	flussoElabMifId:=null;
        end if;

        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

CREATE OR REPLACE FUNCTION siac.fnc_siac_dwh_ordinativo_incasso (
  p_anno_bilancio varchar,
  p_ente_proprietario_id integer,
  p_data timestamp
)
RETURNS TABLE (
  esito varchar
) AS
$body$
DECLARE
v_user_table varchar;
params varchar;

BEGIN

IF p_ente_proprietario_id IS NULL THEN
   RAISE EXCEPTION 'Errore: Parametro Ente Propietario nullo';
   RETURN;
END IF;
IF p_anno_bilancio IS NULL THEN
   RAISE EXCEPTION 'Errore: Parametro Anno di bilancio nullo';
   RETURN;
END IF;

select fnc_siac_random_user()
into	v_user_table;

IF p_data IS NULL THEN
        p_data := now();
END IF;

params := p_anno_bilancio||' - '||p_ente_proprietario_id::varchar||' - '||p_data::varchar;


insert into
siac_dwh_log_elaborazioni (
ente_proprietario_id,
fnc_name ,
fnc_parameters ,
fnc_elaborazione_inizio ,
fnc_user
)
values (
p_ente_proprietario_id,
'fnc_siac_dwh_ordinativo_incasso',
params,
clock_timestamp(),
v_user_table
);


esito:= 'Inizio funzione carico ordinativi in incasso (FNC_SIAC_DWH_ORDINATIVO_INCASSO) - '||clock_timestamp();
RETURN NEXT;

esito:= '  Inizio eliminazione dati pregressi - '||clock_timestamp();
return next;
DELETE FROM siac.siac_dwh_ordinativo_incasso
WHERE ente_proprietario_id = p_ente_proprietario_id
AND   bil_anno = p_anno_bilancio;
esito:= '  Fine eliminazione dati pregressi - '||clock_timestamp();
return next;

esito:= '  Inizio eliminazione dati subordinativi pregressi - '||clock_timestamp();
return next;
DELETE FROM siac.siac_dwh_subordinativo_incasso
WHERE ente_proprietario_id = p_ente_proprietario_id
AND   bil_anno = p_anno_bilancio;
esito:= '  Fine eliminazione dati subordinativi pregressi - '||clock_timestamp();
return next;


INSERT INTO siac.siac_dwh_ordinativo_incasso
  (
  ente_proprietario_id,
  ente_denominazione,
  bil_anno,
  cod_fase_operativa,
  desc_fase_operativa,
  anno_ord_inc,
  num_ord_inc,
  desc_ord_inc,
  cod_stato_ord_inc,
  desc_stato_ord_inc,
  castelletto_cassa_ord_inc,
  castelletto_competenza_ord_inc,
  castelletto_emessi_ord_inc,
  data_emissione,
  data_riduzione,
  data_spostamento,
  data_variazione,
  beneficiario_multiplo,
  cod_bollo,
  desc_cod_bollo,
  cod_tipo_commissione,
  desc_tipo_commissione,
  cod_conto_tesoreria,
  decrizione_conto_tesoreria,
  cod_distinta,
  desc_distinta,
  soggetto_id,
  cod_soggetto,
  desc_soggetto,
  cf_soggetto,
  cf_estero_soggetto,
  p_iva_soggetto,
  soggetto_id_mod_pag,
  cod_soggetto_mod_pag,
  desc_soggetto_mod_pag,
  cf_soggetto_mod_pag,
  cf_estero_soggetto_mod_pag,
  p_iva_soggetto_mod_pag,
  cod_tipo_accredito,
  desc_tipo_accredito,
  mod_pag_id,
  quietanziante,
  data_nascita_quietanziante,
  luogo_nascita_quietanziante,
  stato_nascita_quietanziante,
  bic,
  contocorrente,
  intestazione_contocorrente,
  iban,
  note_mod_pag,
  data_scadenza_mod_pag,
  cod_tipo_atto_amministrativo,
  desc_tipo_atto_amministrativo,
  desc_stato_atto_amministrativo,
  anno_atto_amministrativo,
  num_atto_amministrativo,
  oggetto_atto_amministrativo,
  note_atto_amministrativo,
  cod_tipo_avviso,
  desc_tipo_avviso,
  cod_pdc_finanziario_i,
  desc_pdc_finanziario_i,
  cod_pdc_finanziario_ii,
  desc_pdc_finanziario_ii,
  cod_pdc_finanziario_iii,
  desc_pdc_finanziario_iii,
  cod_pdc_finanziario_iv,
  desc_pdc_finanziario_iv,
  cod_pdc_finanziario_v,
  desc_pdc_finanziario_v,
  cod_pdc_economico_i,
  desc_pdc_economico_i,
  cod_pdc_economico_ii,
  desc_pdc_economico_ii,
  cod_pdc_economico_iii,
  desc_pdc_economico_iii,
  cod_pdc_economico_iv,
  desc_pdc_economico_iv,
  cod_pdc_economico_v,
  desc_pdc_economico_v,
  cod_cofog_divisione,
  desc_cofog_divisione,
  cod_cofog_gruppo,
  desc_cofog_gruppo,
  classificatore_1,
  classificatore_1_valore,
  classificatore_1_desc_valore,
  classificatore_2,
  classificatore_2_valore,
  classificatore_2_desc_valore,
  classificatore_3,
  classificatore_3_valore,
  classificatore_3_desc_valore,
  classificatore_4,
  classificatore_4_valore,
  classificatore_4_desc_valore,
  classificatore_5,
  classificatore_5_valore,
  classificatore_5_desc_valore,
  allegato_cartaceo,
  cup,
  note,
  cod_capitolo,
  cod_articolo,
  cod_ueb,
  desc_capitolo,
  desc_articolo,
  importo_iniziale,
  importo_attuale,
  cod_cdr_atto_amministrativo,
  desc_cdr_atto_amministrativo,
  cod_cdc_atto_amministrativo,
  desc_cdc_atto_amministrativo,
  data_firma,
  firma,
  data_inizio_val_stato_ordin,
  data_inizio_val_ordin,
  data_creazione_ordin,
  data_modifica_ordin,
  data_trasmissione,
  cod_siope,
  desc_siope,
  caus_id -- SIAC-5522
  , cod_causale -- SIAC-5897
  , desc_causale
  , cod_tipo_causale -- SIAC-5897
  , desc_tipo_causale
  , ord_da_trasmettere -- 20.06.2018 Sofia siac-6175
  )
select tb.ente_proprietario_id, tb.ente_denominazione, tb.anno, tb.fase_operativa_code,tb.fase_operativa_desc,
tb.ord_anno, tb.ord_numero,tb.ord_desc, tb.ord_stato_code,tb.ord_stato_desc,
tb.ord_cast_cassa, tb.ord_cast_competenza, tb.ord_cast_emessi,
tb.ord_emissione_data, tb.ord_riduzione_data, tb.ord_spostamento_data, tb.ord_variazione_data,
case when tb.ord_beneficiariomult=true then 'T' else 'F' end,
tb.codbollo_code, tb.codbollo_desc,
tb.comm_tipo_code, tb.comm_tipo_desc,
tb.contotes_code, tb.contotes_desc,
tb.dist_code, tb.dist_desc,
tb.soggetto_id,tb.soggetto_code, tb.soggetto_desc, tb.codice_fiscale, tb.codice_fiscale_estero, tb.partita_iva,
tb.v_soggetto_id_modpag,  tb.v_codice_soggetto_modpag, tb.v_descrizione_soggetto_modpag,
tb.v_codice_fiscale_soggetto_modpag,tb. v_codice_fiscale_estero_soggetto_modpag,tb.v_partita_iva_soggetto_modpag,
tb.v_codice_tipo_accredito, tb.v_descrizione_tipo_accredito, tb.modpag_id,
tb.v_quietanziante, tb.v_data_nascita_quietanziante,tb.v_luogo_nascita_quietanziante,tb.v_stato_nascita_quietanziante,
tb.v_bic, tb.v_contocorrente, tb.v_intestazione_contocorrente, tb.v_iban,
tb.v_note_modalita_pagamento, tb.v_data_scadenza_modalita_pagamento,
tb.attoamm_tipo_code, tb.attoamm_tipo_desc,tb.attoamm_stato_desc,
tb.attoamm_anno, tb.attoamm_numero, tb.attoamm_oggetto, tb.attoamm_note,
tb.v_codice_tipo_avviso, tb.v_descrizione_tipo_avviso,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_codice_pdc_finanziario_I else tb.pdc4_codice_pdc_finanziario_I end codice_pdc_finanziario_II,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_descrizione_pdc_finanziario_I else tb.pdc4_descrizione_pdc_finanziario_I end descrizione_pdc_finanziario_I,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_codice_pdc_finanziario_II else tb.pdc4_codice_pdc_finanziario_II end codice_pdc_finanziario_II,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_descrizione_pdc_finanziario_II else tb.pdc4_descrizione_pdc_finanziario_II end descrizione_pdc_finanziario_II,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_codice_pdc_finanziario_III else tb.pdc4_codice_pdc_finanziario_III end codice_pdc_finanziario_III,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_descrizione_pdc_finanziario_III else tb.pdc4_descrizione_pdc_finanziario_III end descrizione_pdc_finanziario_III,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_codice_pdc_finanziario_IV else tb.pdc4_codice_pdc_finanziario_IV end codice_pdc_finanziario_IV  ,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_descrizione_pdc_finanziario_IV else tb.pdc4_descrizione_pdc_finanziario_IV end descrizione_pdc_finanziario_IV,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_codice_pdc_finanziario_V end codice_pdc_finanziario_V  ,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_descrizione_pdc_finanziario_V end descrizione_pdc_finanziario_V,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_codice_pdc_economico_I else tb.pce4_codice_pdc_economico_I end codice_pdc_economico_I,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_descrizione_pdc_economico_I else tb.pce4_descrizione_pdc_economico_I end descrizione_pdc_economico_I,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_codice_pdc_economico_II else tb.pce4_codice_pdc_economico_II end codice_pdc_economico_II,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_descrizione_pdc_economico_II else tb.pce4_descrizione_pdc_economico_II end descrizione_pdc_economico_II,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_codice_pdc_economico_III else tb.pce4_codice_pdc_economico_III end codice_pdc_economico_III,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_descrizione_pdc_economico_III else tb.pce4_descrizione_pdc_economico_III end descrizione_pdc_economico_III,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_codice_pdc_economico_IV else tb.pce4_codice_pdc_economico_IV end codice_pdc_economico_IV  ,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_descrizione_pdc_economico_IV else tb.pce4_descrizione_pdc_economico_IV end descrizione_pdc_economico_IV,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_codice_pdc_economico_V end codice_pdc_economico_V  ,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_descrizione_pdc_economico_V end descrizione_pdc_economico_V,
tb.codice_cofog_divisione, tb.descrizione_cofog_divisione,tb.codice_cofog_gruppo,tb.descrizione_cofog_gruppo,
tb.cla26_classif_tipo_desc,tb.cla26_classif_code,tb.cla26_classif_desc,
tb.cla27_classif_tipo_desc,tb.cla27_classif_code,tb.cla27_classif_desc,
tb.cla28_classif_tipo_desc,tb.cla28_classif_code,tb.cla28_classif_desc,
tb.cla29_classif_tipo_desc,tb.cla29_classif_code,tb.cla29_classif_desc,
tb.cla30_classif_tipo_desc,tb.cla30_classif_code,tb.cla30_classif_desc,
tb.v_flagAllegatoCartaceo,
tb.v_cup,
tb.v_note_ordinativo,
tb.v_codice_capitolo, tb.v_codice_articolo, tb.v_codice_ueb, tb.v_descrizione_capitolo ,
tb.v_descrizione_articolo,tb.importo_iniziale,tb.importo_attuale,
case when tb.cdc_cdc_code::varchar is not null then  tb.cdc_cdr_code::varchar else tb.cdr_cdr_code::varchar end cdr_code,
case when tb.cdc_cdc_code::varchar is not null then  tb.cdc_cdr_desc::varchar else tb.cdr_cdr_desc::varchar end cdr_desc,
case when tb.cdc_cdc_code::varchar is not null then  tb.cdc_cdc_code::varchar else tb.cdr_cdc_code::varchar end cdc_code,
case when tb.cdc_cdc_code::varchar is not null then  tb.cdc_cdc_desc::varchar else tb.cdr_cdc_desc::varchar end cdc_desc,
tb.v_data_firma,tb.v_firma,
tb.data_inizio_val_stato_ordpg,
tb.data_inizio_val_ordpg,
tb.data_creazione_ordpg,
tb.data_modifica_ordpg,
tb.ord_trasm_oil_data,
tb.mif_ord_class_codice_cge,
tb.descr_siope,
tb.caus_id -- SIAC-5522
--SIAC-5897
,tb.caus_code
,tb.caus_desc
,tb.caus_tipo_code
,tb.caus_tipo_desc
,tb.ord_da_trasmettere -- 20.06.2018 Sofia siac-6175
from (
with ord_pag as (
SELECT d.ente_proprietario_id, d.ente_denominazione, c.anno, i.fase_operativa_code, i.fase_operativa_desc,
a.ord_anno, a.ord_numero, a.ord_desc, g.ord_stato_code, g.ord_stato_desc, a.ord_cast_cassa, a.ord_cast_competenza,
a.ord_cast_emessi, a.ord_emissione_data, a.ord_riduzione_data, a.ord_spostamento_data, a.ord_variazione_data,
a.ord_beneficiariomult
,a.ord_id, --q.elem_id,
b.bil_id, a.comm_tipo_id,
f.validita_inizio as data_inizio_val_stato_ordpg,
a.validita_inizio as data_inizio_val_ordpg,
a.data_creazione as data_creazione_ordpg,
a.data_modifica as data_modifica_ordpg,
a.codbollo_id,a.contotes_id,a.dist_id,
a.ord_trasm_oil_data,
a.caus_id, -- SIAC-5522,
a.ord_da_trasmettere -- 20.06.2018 Sofia siac-6175
FROM siac_t_ordinativo a, siac_t_bil b, siac_t_periodo c, siac_t_ente_proprietario d,
siac_d_ordinativo_tipo e, siac_r_ordinativo_stato f, siac_d_ordinativo_stato g ,
 siac_r_bil_fase_operativa h, siac_d_fase_operativa i
where  d.ente_proprietario_id = p_ente_proprietario_id
and
c.anno = p_anno_bilancio
AND e.ord_tipo_code = 'I' and
a.bil_id = b.bil_id and
c.periodo_id = b.periodo_id and
d.ente_proprietario_id = a.ente_proprietario_id and
a.ord_tipo_id = e.ord_tipo_id AND
f.ord_id = a.ord_id  and
f.ord_stato_id = g.ord_stato_id
AND p_data BETWEEN f.validita_inizio AND COALESCE(f.validita_fine, p_data)
and h.fase_operativa_id = i.fase_operativa_id
AND   h.bil_id = b.bil_id
AND p_data BETWEEN h.validita_inizio AND COALESCE(h.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
and d.data_cancellazione is null
and e.data_cancellazione is null
and f.data_cancellazione is null
and g.data_cancellazione is null
),
bollo as (select
a.codbollo_code, a.codbollo_desc,
a.codbollo_id from siac_d_codicebollo a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null
),
contotes as  (select
a.contotes_code, a.contotes_desc,a.contotes_id from siac_d_contotesoreria a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null
)
,
dist as  (select a.dist_code, a.dist_desc,a.dist_id from siac_d_distinta a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null
),
commis as  (select a.comm_tipo_code, a.comm_tipo_desc, a.comm_tipo_id from
siac_d_commissione_tipo a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null
),
bilelem as (SELECT b.ord_id,
a.elem_code v_codice_capitolo, a.elem_code2 v_codice_articolo,
a.elem_code3 v_codice_ueb, a.elem_desc v_descrizione_capitolo ,
a.elem_desc2 v_descrizione_articolo
FROM siac.siac_t_bil_elem a, siac_r_ordinativo_bil_elem b
WHERE a.elem_id = b.elem_id
and b.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is NULL
and b.data_cancellazione is NULL),
modpag as (
with mod as (
select a.ord_id, b.modpag_id ,
b.soggetto_id v_soggetto_id_modpag, --b.accredito_tipo_id v_accredito_tipo_id,
b.quietanziante v_quietanziante, b.quietanzante_nascita_data v_data_nascita_quietanziante,
b.quietanziante_nascita_luogo v_luogo_nascita_quietanziante,
       b.quietanziante_nascita_stato v_stato_nascita_quietanziante,
       b.bic v_bic, b.contocorrente v_contocorrente, b.contocorrente_intestazione v_intestazione_contocorrente,
       b.iban v_iban,
       b.note v_note_modalita_pagamento, b.data_scadenza v_data_scadenza_modalita_pagamento,
 c.soggetto_code v_codice_soggetto_modpag, c.soggetto_desc v_descrizione_soggetto_modpag,
  c.codice_fiscale v_codice_fiscale_soggetto_modpag,
  c.codice_fiscale_estero v_codice_fiscale_estero_soggetto_modpag, c.partita_iva v_partita_iva_soggetto_modpag
  , b.accredito_tipo_id
from siac_r_ordinativo_modpag a,
siac_t_modpag b,siac_t_soggetto c
where a.modpag_id=b.modpag_id and a.ente_proprietario_id=p_ente_proprietario_id
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and c.soggetto_id=b.soggetto_id
and a.data_cancellazione is null and b.data_cancellazione is null
and c.data_cancellazione is null),
acc as (select
a.accredito_tipo_id,
a.accredito_tipo_code v_codice_tipo_accredito, a.accredito_tipo_desc v_descrizione_tipo_accredito
from siac_d_accredito_tipo a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null)
select * from mod left join acc
on mod.accredito_tipo_id=acc.accredito_tipo_id
)
,
sogg as (
SELECT
c.ord_id,d.soggetto_id,
d.soggetto_code, d.soggetto_desc, d.codice_fiscale, d.codice_fiscale_estero, d.partita_iva
FROM siac_r_soggetto_relaz a, siac_d_relaz_tipo b,siac_r_ordinativo_soggetto c,siac_t_soggetto d
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.relaz_tipo_id = b.relaz_tipo_id
AND   b.relaz_tipo_code  = 'SEDE_SECONDARIA'
and c.soggetto_id=a.soggetto_id_da
and p_data BETWEEN c.validita_inizio AND COALESCE(c.validita_fine, p_data)
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and d.soggetto_id=c.soggetto_id
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
union
select b.ord_id,a.soggetto_id,
a.soggetto_code, a.soggetto_desc, a.codice_fiscale, a.codice_fiscale_estero, a.partita_iva
 from siac_t_soggetto a, siac_r_ordinativo_soggetto b
where a.ente_proprietario_id=p_ente_proprietario_id
and a.soggetto_id=b.soggetto_id
and p_data BETWEEN b.validita_inizio AND COALESCE(b.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
),
--classificatori non gerarchici
tipoavviso as (
SELECT
a.ord_id ,b.classif_code v_codice_tipo_avviso, b.classif_desc v_descrizione_tipo_avviso
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='TIPO_AVVISO'
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
),
ricspesa as (
SELECT
a.ord_id ,b.classif_code v_codice_spesa_ricorrente, b.classif_desc v_descrizione_spesa_ricorrente
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='RICORRENTE_SPESA'
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
transue as (
SELECT
a.ord_id ,b.classif_code v_codice_transazione_spesa_ue, b.classif_desc v_descrizione_transazione_spesa_ue
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='TRANSAZIONE_UE_SPESA'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
class26 as (
SELECT
a.ord_id ,
c.classif_tipo_desc cla26_classif_tipo_desc,
b.classif_code cla26_classif_code, b.classif_desc cla26_classif_desc
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_26'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
class27 as (
SELECT
a.ord_id ,
c.classif_tipo_desc cla27_classif_tipo_desc,
b.classif_code cla27_classif_code, b.classif_desc cla27_classif_desc
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_27'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
class28 as (
SELECT
a.ord_id ,
c.classif_tipo_desc cla28_classif_tipo_desc,
b.classif_code cla28_classif_code, b.classif_desc cla28_classif_desc
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_28'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
class29 as (
SELECT
a.ord_id ,
c.classif_tipo_desc cla29_classif_tipo_desc,
b.classif_code cla29_classif_code, b.classif_desc cla29_classif_desc
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_29'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
class30 as (
SELECT
a.ord_id ,
c.classif_tipo_desc cla30_classif_tipo_desc,
b.classif_code cla30_classif_code, b.classif_desc cla30_classif_desc
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_30'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
),
cofog as (
select distinct r.ord_id,
a.classif_code codice_cofog_gruppo,a.classif_desc descrizione_cofog_gruppo,
a2.classif_code codice_cofog_divisione,a2.classif_desc descrizione_cofog_divisione
from
siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--DIVISIONE_COFOG
siac_r_class_fam_tree d2,
siac_t_class a2
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='GRUPPO_COFOG'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine, p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null)
, pdc5 as (
select distinct
r.ord_id,
a.classif_code pdc5_codice_pdc_finanziario_V,a.classif_desc pdc5_descrizione_pdc_finanziario_V,
a2.classif_code pdc5_codice_pdc_finanziario_IV,a2.classif_desc pdc5_descrizione_pdc_finanziario_IV,
a3.classif_code pdc5_codice_pdc_finanziario_III,a3.classif_desc pdc5_descrizione_pdc_finanziario_III,
a4.classif_code pdc5_codice_pdc_finanziario_II,a4.classif_desc pdc5_descrizione_pdc_finanziario_II,
a5.classif_code pdc5_codice_pdc_finanziario_I,a5.classif_desc pdc5_descrizione_pdc_finanziario_I
 from siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4,
--PDC_I
siac_r_class_fam_tree d5,
siac_t_class a5
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PDC_V'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and d5.classif_id=a4.classif_id
and a5.classif_id=d5.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d3.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
and p_data BETWEEN d5.validita_inizio and COALESCE(d5.validita_fine,p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null
and d3.data_cancellazione is null
and a3.data_cancellazione is null
and d4.data_cancellazione is null
and a4.data_cancellazione is null
and d5.data_cancellazione is null
and a5.data_cancellazione is null
)
, pdc4 as (
select distinct r.ord_id,
a.classif_code pdc4_codice_pdc_finanziario_IV,a.classif_desc pdc4_descrizione_pdc_finanziario_IV,
a2.classif_code pdc4_codice_pdc_finanziario_III,a2.classif_desc pdc4_descrizione_pdc_finanziario_III,
a3.classif_code pdc4_codice_pdc_finanziario_II,a3.classif_desc pdc4_descrizione_pdc_finanziario_II,
a4.classif_code pdc4_codice_pdc_finanziario_I,a4.classif_desc pdc4_descrizione_pdc_finanziario_I
 from siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PDC_IV'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d3.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null
and d3.data_cancellazione is null
and a3.data_cancellazione is null
and d4.data_cancellazione is null
and a4.data_cancellazione is null
)
, pce5 as (
select distinct r.ord_id,
--r.classif_id,
a.classif_code pce5_codice_pdc_economico_V,a.classif_desc pce5_descrizione_pdc_economico_V,
a2.classif_code pce5_codice_pdc_economico_IV,a2.classif_desc pce5_descrizione_pdc_economico_IV,
a3.classif_code pce5_codice_pdc_economico_III,a3.classif_desc pce5_descrizione_pdc_economico_III,
a4.classif_code pce5_codice_pdc_economico_II,a4.classif_desc pce5_descrizione_pdc_economico_II,
a5.classif_code pce5_codice_pdc_economico_I,a5.classif_desc pce5_descrizione_pdc_economico_I
 from siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4,
--PDC_I
siac_r_class_fam_tree d5,
siac_t_class a5
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PCE_V'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and d5.classif_id=a4.classif_id
and a5.classif_id=d5.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d3.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
and p_data BETWEEN d5.validita_inizio and COALESCE(d5.validita_fine,p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null
and d3.data_cancellazione is null
and a3.data_cancellazione is null
and d4.data_cancellazione is null
and a4.data_cancellazione is null
and d5.data_cancellazione is null
and a5.data_cancellazione is null
)
, pce4 as (
select distinct r.ord_id,
a.classif_code pce4_codice_pdc_economico_IV,a.classif_desc pce4_descrizione_pdc_economico_IV,
a2.classif_code pce4_codice_pdc_economico_III,a2.classif_desc pce4_descrizione_pdc_economico_III,
a3.classif_code pce4_codice_pdc_economico_II,a3.classif_desc pce4_descrizione_pdc_economico_II,
a4.classif_code pce4_codice_pdc_economico_I,a4.classif_desc pce4_descrizione_pdc_economico_I
 from siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PCE_IV'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d3.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null
and d3.data_cancellazione is null
and a3.data_cancellazione is null
and d4.data_cancellazione is null
and a4.data_cancellazione is null
),
--atto amm
attoamm as (
with atmc as (
with atm as (
SELECT
a.ord_id,
b.attoamm_anno, b.attoamm_numero, b.attoamm_oggetto, b.attoamm_note,
       e.attoamm_tipo_code, e.attoamm_tipo_desc, d.attoamm_stato_desc, b.attoamm_id
FROM
siac.siac_r_ordinativo_atto_amm a,
siac.siac_t_atto_amm b, siac.siac_r_atto_amm_stato c,
siac.siac_d_atto_amm_stato d, siac.siac_d_atto_amm_tipo e
WHERE
a.ente_proprietario_id=p_ente_proprietario_id
and a.attoamm_id=b.attoamm_id
AND c.attoamm_id = b.attoamm_id
AND d.attoamm_stato_id = c.attoamm_stato_id
AND e.attoamm_tipo_id = b.attoamm_tipo_id
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
--AND
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   d.data_cancellazione IS NULL
AND   e.data_cancellazione IS NULL
)
, atmrclass as (select a.attoamm_id,a.classif_id from siac_r_atto_amm_class a where
a.ente_proprietario_id=p_ente_proprietario_id and
a.data_cancellazione is null and
 p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
)
select atm.*,atmrclass.classif_id from atm left join atmrclass
on atmrclass.attoamm_id=atm.attoamm_id
)
,
cdc as (
select a.classif_id,a.classif_code cdc_cdc_code,a.classif_desc cdc_cdc_desc
,a2.classif_code cdc_cdr_code,a2.classif_desc cdc_cdr_desc
 from siac_t_class a,siac_d_class_tipo b, siac_r_class_fam_tree c,siaC_t_class a2
where a.ente_proprietario_id=p_ente_proprietario_id
and b.classif_tipo_id=a.classif_tipo_id
and b.classif_tipo_code='CDC'
and c.classif_id=a.classif_id
--and p_data BETWEEN c.validita_inizio AND COALESCE(c.validita_fine, p_data)
and a2.classif_id=c.classif_id_padre
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
and a2.data_cancellazione is null)
,cdr as (
select a.classif_id,null cdr_cdc_code,null cdr_cdc_desc
,a.classif_code cdr_cdr_code,a.classif_desc cdr_cdr_desc
 from siaC_t_class a,siac_d_class_tipo b
 where a.ente_proprietario_id=p_ente_proprietario_id
and b.classif_tipo_id=a.classif_tipo_id
and b.classif_tipo_code='CDR'
and a.data_cancellazione is null
and b.data_cancellazione is null)
select
atmc.ord_id,
atmc.attoamm_anno, atmc.attoamm_numero, atmc.attoamm_oggetto, atmc.attoamm_note,
atmc.attoamm_tipo_code, atmc.attoamm_tipo_desc, atmc.attoamm_stato_desc, atmc.attoamm_id,
cdc.cdc_cdc_code,cdc.cdc_cdc_desc,cdc.cdc_cdr_code,cdc.cdc_cdr_desc,
cdr.cdr_cdc_code,cdr.cdr_cdc_desc,cdr.cdr_cdr_code,cdr.cdr_cdr_desc
from atmc left join cdc on
atmc.classif_id=cdc.classif_id
left join cdr on
atmc.classif_id=cdr.classif_id)
--sezione attributi
, t_flagAllegatoCartaceo as (
SELECT
a.ord_id
, a."boolean" v_flagAllegatoCartaceo
FROM   siac.siac_r_ordinativo_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagAllegatoCartaceo' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL)
, t_cup as (
SELECT
a.ord_id
, a.testo v_cup
FROM   siac.siac_r_ordinativo_attr a, siac.siac_t_attr b
WHERE
b.attr_code='cup' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL)
, t_noteordinativo as (
SELECT
a.ord_id
, a.testo v_note_ordinativo
FROM   siac.siac_r_ordinativo_attr a, siac.siac_t_attr b
WHERE
b.attr_code='NOTE_ORDINATIVO' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL)
,
impiniziale as (
SELECT COALESCE(SUM(b.ord_ts_det_importo),0) importo_iniziale,
a.ord_id
FROM   siac.siac_t_ordinativo_ts a, siac.siac_t_ordinativo_ts_det b, siac.siac_d_ordinativo_ts_det_tipo c
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.ord_ts_id = b.ord_ts_id
AND    c.ord_ts_det_tipo_id = b.ord_ts_det_tipo_id
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.data_cancellazione IS NULL
and c.ord_ts_det_tipo_code='I'
GROUP BY
a.ord_id),
impattuale as (
SELECT COALESCE(SUM(b.ord_ts_det_importo),0) importo_attuale,
a.ord_id
FROM   siac.siac_t_ordinativo_ts a, siac.siac_t_ordinativo_ts_det b, siac.siac_d_ordinativo_ts_det_tipo c
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.ord_ts_id = b.ord_ts_id
AND    c.ord_ts_det_tipo_id = b.ord_ts_det_tipo_id
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.data_cancellazione IS NULL
and c.ord_ts_det_tipo_code='A'
GROUP BY
a.ord_id),
firma as (select
a.ord_id,
a.ord_firma_data v_data_firma, a.ord_firma v_firma
 from siac_r_ordinativo_firma a where a.ente_proprietario_id=p_ente_proprietario_id
AND   a.data_cancellazione IS NULL
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data))
, mif as (
  select tb.mif_ord_ord_id, tb.mif_ord_class_codice_cge, tb.descr_siope from (
  with mif1 as (
      select a.mif_ord_anno, a.mif_ord_numero, a.mif_ord_ord_id,
             a.mif_ord_class_codice_cge,
             b.flusso_elab_mif_id, b.flusso_elab_mif_data
      from mif_t_ordinativo_entrata a,  mif_t_flusso_elaborato b
      where a.ente_proprietario_id=p_ente_proprietario_id
      and  a.mif_ord_flusso_elab_mif_id=b.flusso_elab_mif_id
      and b.flusso_elab_mif_esito='OK'
      and a.data_cancellazione is null
      and b.data_cancellazione is null
     ) ,
      mifmax as (
      select max(b.flusso_elab_mif_id) flusso_elab_mif_id,
      a.mif_ord_anno,a.mif_ord_numero::integer
      from mif_t_ordinativo_entrata a, mif_t_flusso_elaborato b
      where a.ente_proprietario_id=p_ente_proprietario_id
      and b.flusso_elab_mif_id=a.mif_ord_flusso_elab_mif_id
      and b.flusso_elab_mif_esito='OK'
      and a.data_cancellazione is null
      and b.data_cancellazione is null
      group by a.mif_ord_anno,a.mif_ord_numero::integer
    ),
      descsiope as (
      select replace(substring(a.classif_code from 2),'.', '') codice_siope,
         a.classif_desc descr_siope
      from  siac_t_class a, siac_d_class_tipo b
      where a.classif_tipo_id = b.classif_tipo_id
      and   b.classif_tipo_code = 'PDC_V'
      and   a.ente_proprietario_id = p_ente_proprietario_id
      and   substring(a.classif_code from 1 for 1) = 'E'
      and   a.data_cancellazione is null
      and   b.data_cancellazione is null
      union
      select a.classif_code codice_siope,
             a.classif_desc descr_siope
      from  siac_t_class a, siac_d_class_tipo b
      where a.classif_tipo_id = b.classif_tipo_id
      and   b.classif_tipo_code = 'SIOPE_ENTRATA_I'
      and   a.classif_code not in ('XXXX','YYYY')
      and   a.ente_proprietario_id = p_ente_proprietario_id
      and   a.data_cancellazione is null
      and   b.data_cancellazione is null
      )
    select mif1.*, descsiope.descr_siope
    from mif1
    left join descsiope on descsiope.codice_siope = mif1.mif_ord_class_codice_cge
    join mifmax on mif1.flusso_elab_mif_id=mifmax.flusso_elab_mif_id
    and  mif1.mif_ord_anno=mifmax.mif_ord_anno
    and  mif1.mif_ord_numero::integer=mifmax.mif_ord_numero) as tb
    )
-- JIRA 5897
, causale as (
      select c.caus_id, c.caus_code,c.caus_desc, ct.caus_tipo_code, ct.caus_tipo_desc
      from
      siac_d_causale c
      , siac_d_causale_tipo ct
      , siac_r_causale_tipo r
      where
      p_data between r.validita_inizio and coalesce (r.validita_fine,p_data)
      and    r.data_cancellazione is null
      and    r.validita_fine is null
      and    r.caus_id = c.caus_id
      and    r.caus_tipo_id = ct.caus_tipo_id
      and    r.ente_proprietario_id = p_ente_proprietario_id)
select ord_pag.*,
cofog.codice_cofog_gruppo,
cofog.descrizione_cofog_gruppo,
cofog.codice_cofog_divisione,
cofog.descrizione_cofog_divisione,
pdc5.pdc5_codice_pdc_finanziario_V,pdc5.pdc5_descrizione_pdc_finanziario_V,
pdc5.pdc5_codice_pdc_finanziario_IV,pdc5.pdc5_descrizione_pdc_finanziario_IV,
pdc5.pdc5_codice_pdc_finanziario_III,pdc5.pdc5_descrizione_pdc_finanziario_III,
pdc5.pdc5_codice_pdc_finanziario_II,pdc5.pdc5_descrizione_pdc_finanziario_II,
pdc5.pdc5_codice_pdc_finanziario_I,pdc5.pdc5_descrizione_pdc_finanziario_I,
pdc4.pdc4_codice_pdc_finanziario_IV,pdc4.pdc4_descrizione_pdc_finanziario_IV,
pdc4.pdc4_codice_pdc_finanziario_III,pdc4.pdc4_descrizione_pdc_finanziario_III,
pdc4.pdc4_codice_pdc_finanziario_II,pdc4.pdc4_descrizione_pdc_finanziario_II,
pdc4.pdc4_codice_pdc_finanziario_I,pdc4.pdc4_descrizione_pdc_finanziario_I,
pce5.pce5_codice_pdc_economico_V,pce5.pce5_descrizione_pdc_economico_V,
pce5.pce5_codice_pdc_economico_IV,pce5.pce5_descrizione_pdc_economico_IV,
pce5.pce5_codice_pdc_economico_III,pce5.pce5_descrizione_pdc_economico_III,
pce5.pce5_codice_pdc_economico_II,pce5.pce5_descrizione_pdc_economico_II,
pce5.pce5_codice_pdc_economico_I,pce5.pce5_descrizione_pdc_economico_I,
pce4.pce4_codice_pdc_economico_IV,pce4.pce4_descrizione_pdc_economico_IV,
pce4.pce4_codice_pdc_economico_III,pce4.pce4_descrizione_pdc_economico_III,
pce4.pce4_codice_pdc_economico_II,pce4.pce4_descrizione_pdc_economico_II,
pce4.pce4_codice_pdc_economico_I,pce4.pce4_descrizione_pdc_economico_I,
attoamm.attoamm_anno, attoamm.attoamm_numero, attoamm.attoamm_oggetto, attoamm.attoamm_note,
attoamm.attoamm_tipo_code, attoamm.attoamm_tipo_desc, attoamm.attoamm_stato_desc, attoamm.attoamm_id,
attoamm.cdc_cdc_code,attoamm.cdc_cdc_desc,attoamm.cdc_cdr_code,attoamm.cdc_cdr_desc,
attoamm.cdr_cdc_code,attoamm.cdr_cdc_desc,attoamm.cdr_cdr_code,attoamm.cdr_cdr_desc,
t_flagAllegatoCartaceo.v_flagAllegatoCartaceo, t_cup.v_cup,
t_noteordinativo.v_note_ordinativo,
impiniziale.importo_iniziale,
impattuale.importo_attuale,
firma.v_data_firma, firma.v_firma,bollo.*,commis.*,contotes.*,dist.*,modpag.*,sogg.*,
tipoavviso.*,ricspesa.*,transue.*,
class26.*,class27.*,class28.*,class29.*,class30.*,
bilelem.*,
mif.mif_ord_class_codice_cge, mif.descr_siope
--SIAC-5897
, causale.caus_code,causale.caus_desc,causale.caus_tipo_code, causale.caus_tipo_desc
from ord_pag
left join bollo
on ord_pag.codbollo_id=bollo.codbollo_id
left join contotes
on ord_pag.contotes_id=contotes.contotes_id
left join dist
on ord_pag.dist_id=dist.dist_id
left join commis
on ord_pag.comm_tipo_id=commis.comm_tipo_id
left join bilelem
on ord_pag.ord_id=bilelem.ord_id
left join modpag
on ord_pag.ord_id=modpag.ord_id
left join sogg
on ord_pag.ord_id=sogg.ord_id
left join tipoavviso
on ord_pag.ord_id=tipoavviso.ord_id
left join ricspesa
on ord_pag.ord_id=ricspesa.ord_id
left join transue
on ord_pag.ord_id=transue.ord_id
left join class26
on ord_pag.ord_id=class26.ord_id
left join class27
on ord_pag.ord_id=class27.ord_id
left join class28
on ord_pag.ord_id=class28.ord_id
left join class29
on ord_pag.ord_id=class29.ord_id
left join class30
on ord_pag.ord_id=class30.ord_id
left join cofog
on ord_pag.ord_id=cofog.ord_id
left join pdc5
on ord_pag.ord_id=pdc5.ord_id
left join pdc4
on ord_pag.ord_id=pdc4.ord_id
left join pce5
on ord_pag.ord_id=pce5.ord_id
left join pce4
on ord_pag.ord_id=pce4.ord_id
left join attoamm
on ord_pag.ord_id=attoamm.ord_id
left join t_flagAllegatoCartaceo
on ord_pag.ord_id=t_flagAllegatoCartaceo.ord_id
left join t_cup
on ord_pag.ord_id=t_cup.ord_id
left join t_noteordinativo
on
ord_pag.ord_id=t_noteordinativo.ord_id
left join impiniziale
on ord_pag.ord_id=impiniziale.ord_id
left join impattuale
on ord_pag.ord_id=impattuale.ord_id
left join firma
on ord_pag.ord_id=firma.ord_id
left join mif on ord_pag.ord_id = mif.mif_ord_ord_id
-- JIRA 5897
left join causale on ord_pag.caus_id = causale.caus_id
) as tb;



     INSERT INTO siac.siac_dwh_subordinativo_incasso
    (
    ente_proprietario_id,
    ente_denominazione,
    bil_anno,
    cod_fase_operativa,
    desc_fase_operativa,
    anno_ord_inc,
    num_ord_inc,
    desc_ord_inc,
    cod_stato_ord_inc,
    desc_stato_ord_inc,
    castelletto_cassa_ord_inc,
    castelletto_competenza_ord_inc,
    castelletto_emessi_ord_inc,
    data_emissione,
    data_riduzione,
    data_spostamento,
    data_variazione,
    beneficiario_multiplo,
    num_subord_inc,
    desc_subord_inc,
    data_scadenza,
    importo_iniziale,
    importo_attuale,
    cod_onere,
    desc_onere,
    cod_tipo_onere,
    desc_tipo_onere,
    importo_carico_ente,
    importo_carico_soggetto,
    importo_imponibile,
    inizio_attivita,
    fine_attivita,
    cod_causale,
    desc_causale,
    cod_attivita_onere,
    desc_attivita_onere,
    anno_accertamento,
    num_accertamento,
    desc_accertamento,
    cod_subaccertamento,
    importo_quietanziato,
    data_inizio_val_stato_ordin,
    data_inizio_val_subordin,
    data_creazione_subordin,
    data_modifica_subordin,
      --04/07/2017: SIAC-5037 aggiunta gestione dei documenti
    cod_gruppo_doc,
  	desc_gruppo_doc ,
    cod_famiglia_doc ,
    desc_famiglia_doc ,
    cod_tipo_doc ,
    desc_tipo_doc ,
    anno_doc ,
    num_doc ,
    num_subdoc ,
    cod_sogg_doc,
    caus_id, -- SIAC-5522
    doc_id, -- SIAC-5573
    cod_causale_ord, --SIAC-5897
    desc_causale_ord,
    cod_tipo_causale_ord, --SIAC-5897
    desc_tipo_causale_ord --SIAC-5897
    )
    select tb.ente_proprietario_id, tb.ente_denominazione, tb.anno, tb.fase_operativa_code,tb.fase_operativa_desc,
tb.ord_anno, tb.ord_numero,tb.ord_desc, tb.ord_stato_code,tb.ord_stato_desc,
tb.ord_cast_cassa, tb.ord_cast_competenza, tb.ord_cast_emessi,
tb.ord_emissione_data, tb.ord_riduzione_data, tb.ord_spostamento_data, tb.ord_variazione_data,
case when tb.ord_beneficiariomult=true then 'T' else 'F' end,
tb.ord_ts_code, tb.ord_ts_desc, tb.ord_ts_data_scadenza, tb.importo_iniziale, tb.importo_attuale,
tb.onere_code, tb.onere_desc,tb.onere_tipo_code, tb.onere_tipo_desc   ,
tb.importo_carico_ente, tb.importo_carico_soggetto, tb.importo_imponibile,
tb.attivita_inizio, tb.attivita_fine,tb.v_caus_code, tb.v_caus_desc,
tb.v_onere_att_code, tb.v_onere_att_desc,
tb.movgest_anno,tb.movgest_numero,tb.movgest_desc,tb.movgest_ts_code,
case when tb.ord_stato_code='Q' then tb.importo_attuale else null end importo_quietanziato,
tb.data_inizio_val_stato_ordpg,
tb.data_inizio_val_subordpg,
tb.data_creazione_subordpg,
tb.data_modifica_subordpg,
  --04/07/2017: SIAC-5037 aggiunta gestione dei documenti
tb.doc_gruppo_tipo_code,
tb.doc_gruppo_tipo_desc,
tb.doc_fam_tipo_code,
tb.doc_fam_tipo_desc,
tb.doc_tipo_code,
tb.doc_tipo_desc,
tb.doc_anno,
tb.doc_numero,
tb.subdoc_numero,
tb.soggetto_code,
tb.caus_id_ord, -- SIAC-5522
tb.doc_id, -- SIAC-5573
tb.caus_code_ord, --SIAC-5897
tb.caus_desc_ord,
tb.caus_tipo_code_ord, --SIAC-5897
tb.caus_tipo_desc_ord
from (
--subord
with ord_pag as (
SELECT d.ente_proprietario_id, d.ente_denominazione, c.anno, i.fase_operativa_code, i.fase_operativa_desc,
       a.ord_anno, a.ord_numero, a.ord_desc, g.ord_stato_code, g.ord_stato_desc, a.ord_cast_cassa, a.ord_cast_competenza,
       a.ord_cast_emessi, a.ord_emissione_data, a.ord_riduzione_data, a.ord_spostamento_data, a.ord_variazione_data,
       a.ord_beneficiariomult
           ,  a.ord_id, --q.elem_id,
       b.bil_id, a.comm_tipo_id,
       f.validita_inizio as data_inizio_val_stato_ordpg,
       a.validita_inizio as data_inizio_val_ordpg,
       a.data_creazione as data_creazione_ordpg,
       a.data_modifica as data_modifica_ordpg,
       a.codbollo_id,a.contotes_id,a.dist_id, l.ord_ts_id,
       l.ord_ts_code, l.ord_ts_desc, l.ord_ts_data_scadenza,
       l.validita_inizio as data_inizio_val_subordpg,
       l.data_creazione as data_creazione_subordpg,
       l.data_modifica as data_modifica_subordpg,
       a.caus_id as caus_id_ord-- SIAC-5522
FROM siac_t_ordinativo a, siac_t_bil b, siac_t_periodo c, siac_t_ente_proprietario d,
siac_d_ordinativo_tipo e, siac_r_ordinativo_stato f, siac_d_ordinativo_stato g ,
 siac_r_bil_fase_operativa h, siac_d_fase_operativa i ,siac_t_ordinativo_ts l
where  d.ente_proprietario_id = p_ente_proprietario_id--p_ente_proprietario_id
and
c.anno = p_anno_bilancio--p_anno_bilancio
AND e.ord_tipo_code = 'I' and
a.bil_id = b.bil_id and
c.periodo_id = b.periodo_id and
d.ente_proprietario_id = a.ente_proprietario_id and
a.ord_tipo_id = e.ord_tipo_id AND
f.ord_id = a.ord_id  and
f.ord_stato_id = g.ord_stato_id
and l.ord_id=a.ord_id
AND p_data BETWEEN f.validita_inizio AND COALESCE(f.validita_fine, p_data)
and h.fase_operativa_id = i.fase_operativa_id
AND   h.bil_id = b.bil_id
AND p_data BETWEEN h.validita_inizio AND COALESCE(h.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
and d.data_cancellazione is null
and e.data_cancellazione is null
and f.data_cancellazione is null
and g.data_cancellazione is null),
bollo as (select
a.codbollo_code, a.codbollo_desc,
a.codbollo_id from siac_d_codicebollo a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null
),
contotes as  (select
a.contotes_code, a.contotes_desc,a.contotes_id from siac_d_contotesoreria a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null
)
,
dist as  (select a.dist_code, a.dist_desc,a.dist_id from siac_d_distinta a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null
),
commis as  (select a.comm_tipo_code, a.comm_tipo_desc, a.comm_tipo_id from
siac_d_commissione_tipo a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null
),
bilelem as (SELECT b.ord_id,
a.elem_code v_codice_capitolo, a.elem_code2 v_codice_articolo,
a.elem_code3 v_codice_ueb, a.elem_desc v_descrizione_capitolo ,
a.elem_desc2 v_descrizione_articolo
FROM siac.siac_t_bil_elem a, siac_r_ordinativo_bil_elem b
WHERE a.elem_id = b.elem_id
and b.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is NULL
and b.data_cancellazione is NULL),
modpag as (
with mod as (
select a.ord_id, b.modpag_id ,
b.soggetto_id v_soggetto_id_modpag, b.accredito_tipo_id v_accredito_tipo_id,
b.quietanziante v_quietanziante, b.quietanzante_nascita_data v_data_nascita_quietanziante,
b.quietanziante_nascita_luogo v_luogo_nascita_quietanziante,
       b.quietanziante_nascita_stato v_stato_nascita_quietanziante,
       b.bic v_bic, b.contocorrente v_contocorrente, b.contocorrente_intestazione v_intestazione_contocorrente,
       b.iban v_iban,
       b.note v_note_modalita_pagamento, b.data_scadenza v_data_scadenza_modalita_pagamento,
 c.soggetto_code v_codice_soggetto_modpag, c.soggetto_desc v_descrizione_soggetto_modpag,
  c.codice_fiscale v_codice_fiscale_soggetto_modpag,
  c.codice_fiscale_estero v_codice_fiscale_estero_soggetto_modpag, c.partita_iva v_partita_iva_soggetto_modpag
  , b.accredito_tipo_id
from siac_r_ordinativo_modpag a,
siac_t_modpag b,siac_t_soggetto c
where a.modpag_id=b.modpag_id and a.ente_proprietario_id=p_ente_proprietario_id
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and c.soggetto_id=b.soggetto_id
and a.data_cancellazione is null and b.data_cancellazione is null
and c.data_cancellazione is null),
acc as (select
a.accredito_tipo_id,
a.accredito_tipo_code v_codice_tipo_accredito, a.accredito_tipo_desc v_descrizione_tipo_accredito
from siac_d_accredito_tipo a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null)
select * from mod left join acc
on mod.accredito_tipo_id=acc.accredito_tipo_id
)
,
sogg as (
SELECT
c.ord_id,
d.soggetto_code, d.soggetto_desc, d.codice_fiscale, d.codice_fiscale_estero, d.partita_iva
FROM siac_r_soggetto_relaz a, siac_d_relaz_tipo b,siac_r_ordinativo_soggetto c,siac_t_soggetto d
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.relaz_tipo_id = b.relaz_tipo_id
AND   b.relaz_tipo_code  = 'SEDE_SECONDARIA'
and c.soggetto_id=a.soggetto_id_da
and p_data BETWEEN c.validita_inizio AND COALESCE(c.validita_fine, p_data)
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and d.soggetto_id=c.soggetto_id
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
union
select b.ord_id,
a.soggetto_code, a.soggetto_desc, a.codice_fiscale, a.codice_fiscale_estero, a.partita_iva
 from siac_t_soggetto a, siac_r_ordinativo_soggetto b
where a.ente_proprietario_id=p_ente_proprietario_id
and a.soggetto_id=b.soggetto_id
and p_data BETWEEN b.validita_inizio AND COALESCE(b.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
),
--classificatori non gerarchici
tipoavviso as (
SELECT
a.ord_id ,b.classif_code v_codice_tipo_avviso, b.classif_desc v_descrizione_tipo_avviso
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='TIPO_AVVISO'
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
),
ricspesa as (
SELECT
a.ord_id ,b.classif_code v_codice_spesa_ricorrente, b.classif_desc v_descrizione_spesa_ricorrente
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='RICORRENTE_SPESA'
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
transue as (
SELECT
a.ord_id ,b.classif_code v_codice_transazione_spesa_ue, b.classif_desc v_descrizione_transazione_spesa_ue
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='TRANSAZIONE_UE_SPESA'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
class26 as (
SELECT
a.ord_id ,
c.classif_tipo_desc v_classificatore_generico_1,
b.classif_code v_classificatore_generico_1_valore, b.classif_desc v_classificatore_generico_1_descrizione_valore
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_21'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
class27 as (
SELECT
a.ord_id ,
c.classif_tipo_desc v_classificatore_generico_2,
b.classif_code v_classificatore_generico_2_valore, b.classif_desc v_classificatore_generico_2_descrizione_valore
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_22'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
class28 as (
SELECT
a.ord_id ,
c.classif_tipo_desc v_classificatore_generico_3,
b.classif_code v_classificatore_generico_3_valore, b.classif_desc v_classificatore_generico_3_descrizione_valore
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_23'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
class29 as (
SELECT
a.ord_id ,
c.classif_tipo_desc v_classificatore_generico_4,
b.classif_code v_classificatore_generico_4_valore, b.classif_desc v_classificatore_generico_4_descrizione_valore
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_24'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
class30 as (
SELECT
a.ord_id ,
c.classif_tipo_desc v_classificatore_generico_5,
b.classif_code v_classificatore_generico_5_valore, b.classif_desc v_classificatore_generico_5_descrizione_valore
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_25'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
),

cofog as (
select distinct r.ord_id,
a.classif_code codice_cofog_gruppo,a.classif_desc descrizione_cofog_gruppo,
a2.classif_code codice_cofog_divisione,a2.classif_desc descrizione_cofog_divisione
from
siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--DIVISIONE_COFOG
siac_r_class_fam_tree d2,
siac_t_class a2
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='GRUPPO_COFOG'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine, p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null)
, pdc5 as (
select distinct
r.ord_id,
a.classif_code pdc5_codice_pdc_finanziario_V,a.classif_desc pdc5_descrizione_pdc_finanziario_V,
a2.classif_code pdc5_codice_pdc_finanziario_IV,a2.classif_desc pdc5_descrizione_pdc_finanziario_IV,
a3.classif_code pdc5_codice_pdc_finanziario_III,a3.classif_desc pdc5_descrizione_pdc_finanziario_III,
a4.classif_code pdc5_codice_pdc_finanziario_II,a4.classif_desc pdc5_descrizione_pdc_finanziario_II,
a5.classif_code pdc5_codice_pdc_finanziario_I,a5.classif_desc pdc5_descrizione_pdc_finanziario_I
 from siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4,
--PDC_I
siac_r_class_fam_tree d5,
siac_t_class a5
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PDC_V'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and d5.classif_id=a4.classif_id
and a5.classif_id=d5.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d3.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
and p_data BETWEEN d5.validita_inizio and COALESCE(d5.validita_fine,p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null
and d3.data_cancellazione is null
and a3.data_cancellazione is null
and d4.data_cancellazione is null
and a4.data_cancellazione is null
and d5.data_cancellazione is null
and a5.data_cancellazione is null
)
, pdc4 as (
select distinct r.ord_id,
a.classif_code pdc4_codice_pdc_finanziario_IV,a.classif_desc pdc4_descrizione_pdc_finanziario_IV,
a2.classif_code pdc4_codice_pdc_finanziario_III,a2.classif_desc pdc4_descrizione_pdc_finanziario_III,
a3.classif_code pdc4_codice_pdc_finanziario_II,a3.classif_desc pdc4_descrizione_pdc_finanziario_II,
a4.classif_code pdc4_codice_pdc_finanziario_I,a4.classif_desc pdc4_descrizione_pdc_finanziario_I
 from siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PDC_IV'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d3.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null
and d3.data_cancellazione is null
and a3.data_cancellazione is null
and d4.data_cancellazione is null
and a4.data_cancellazione is null
)
, pce5 as (
select distinct r.ord_id,
--r.classif_id,
a.classif_code pce5_codice_pdc_economico_V,a.classif_desc pce5_descrizione_pdc_economico_V,
a2.classif_code pce5_codice_pdc_economico_IV,a2.classif_desc pce5_descrizione_pdc_economico_IV,
a3.classif_code pce5_codice_pdc_economico_III,a3.classif_desc pce5_descrizione_pdc_economico_III,
a4.classif_code pce5_codice_pdc_economico_II,a4.classif_desc pce5_descrizione_pdc_economico_II,
a5.classif_code pce5_codice_pdc_economico_I,a5.classif_desc pce5_descrizione_pdc_economico_I
 from siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4,
--PDC_I
siac_r_class_fam_tree d5,
siac_t_class a5
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PCE_V'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and d5.classif_id=a4.classif_id
and a5.classif_id=d5.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d3.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
and p_data BETWEEN d5.validita_inizio and COALESCE(d5.validita_fine,p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null
and d3.data_cancellazione is null
and a3.data_cancellazione is null
and d4.data_cancellazione is null
and a4.data_cancellazione is null
and d5.data_cancellazione is null
and a5.data_cancellazione is null
)
, pce4 as (
select distinct r.ord_id,
a.classif_code pce4_codice_pdc_economico_IV,a.classif_desc pce4_descrizione_pdc_economico_IV,
a2.classif_code pce4_codice_pdc_economico_III,a2.classif_desc pce4_descrizione_pdc_economico_III,
a3.classif_code pce4_codice_pdc_economico_II,a3.classif_desc pce4_descrizione_pdc_economico_II,
a4.classif_code pce4_codice_pdc_economico_I,a4.classif_desc pce4_descrizione_pdc_economico_I
 from siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PCE_IV'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d3.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null
and d3.data_cancellazione is null
and a3.data_cancellazione is null
and d4.data_cancellazione is null
and a4.data_cancellazione is null
),
--atto amm
attoamm as (
with atmc as (
with atm as (
SELECT
a.ord_id,
b.attoamm_anno, b.attoamm_numero, b.attoamm_oggetto, b.attoamm_note,
       e.attoamm_tipo_code, e.attoamm_tipo_desc, d.attoamm_stato_desc, b.attoamm_id
FROM
siac.siac_r_ordinativo_atto_amm a,
siac.siac_t_atto_amm b, siac.siac_r_atto_amm_stato c,
siac.siac_d_atto_amm_stato d, siac.siac_d_atto_amm_tipo e
WHERE
a.ente_proprietario_id=p_ente_proprietario_id
and a.attoamm_id=b.attoamm_id
AND c.attoamm_id = b.attoamm_id
AND d.attoamm_stato_id = c.attoamm_stato_id
AND e.attoamm_tipo_id = b.attoamm_tipo_id
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
--AND
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   d.data_cancellazione IS NULL
AND   e.data_cancellazione IS NULL
)
, atmrclass as (select a.attoamm_id,a.classif_id from siac_r_atto_amm_class a where
a.ente_proprietario_id=p_ente_proprietario_id and
a.data_cancellazione is null and
 p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
)
select atm.*,atmrclass.classif_id from atm left join atmrclass
on atmrclass.attoamm_id=atm.attoamm_id
)
,
cdc as (
select a.classif_id,a.classif_code cdc_cdc_code,a.classif_desc cdc_cdc_desc
,a2.classif_code cdc_cdr_code,a2.classif_desc cdc_cdr_desc
 from siaC_t_class a,siac_d_class_tipo b, siac_r_class_fam_tree c,siaC_t_class a2
where a.ente_proprietario_id=p_ente_proprietario_id
and b.classif_tipo_id=a.classif_tipo_id
and b.classif_tipo_code='CDC'
and c.classif_id=a.classif_id
and p_data BETWEEN c.validita_inizio AND COALESCE(c.validita_fine, p_data)
and a2.classif_id=c.classif_id_padre
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
and a2.data_cancellazione is null)
,cdr as (
select a.classif_id,null cdr_cdc_code,null cdr_cdc_desc
,a.classif_code cdr_cdr_code,a.classif_desc cdr_cdr_desc
 from siaC_t_class a,siac_d_class_tipo b
 where a.ente_proprietario_id=p_ente_proprietario_id
and b.classif_tipo_id=a.classif_tipo_id
and b.classif_tipo_code='CDR'
and a.data_cancellazione is null
and b.data_cancellazione is null)
select
atmc.ord_id,
atmc.attoamm_anno, atmc.attoamm_numero, atmc.attoamm_oggetto, atmc.attoamm_note,
atmc.attoamm_tipo_code, atmc.attoamm_tipo_desc, atmc.attoamm_stato_desc, atmc.attoamm_id,
cdc.cdc_cdc_code,cdc.cdc_cdc_desc,cdc.cdc_cdr_code,cdc.cdc_cdr_desc,
cdr.cdr_cdc_code,cdr.cdr_cdc_desc,cdr.cdr_cdr_code,cdr.cdr_cdr_desc
from atmc left join cdc on
atmc.classif_id=cdc.classif_id
left join cdr on
atmc.classif_id=cdr.classif_id)
--sezione attributi
, t_flagAllegatoCartaceo as (
SELECT
a.ord_id
, a.testo v_flagAllegatoCartaceo
FROM   siac.siac_r_ordinativo_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagAllegatoCartaceo' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL)
, t_noteordinativo as (
SELECT
a.ord_id
, a.testo v_note_ordinativo
FROM   siac.siac_r_ordinativo_attr a, siac.siac_t_attr b
WHERE
b.attr_code='NOTE_ORDINATIVO' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL),
impiniziale as (
SELECT COALESCE(SUM(b.ord_ts_det_importo),0) importo_iniziale,
b.ord_ts_id
FROM   siac.siac_t_ordinativo_ts a, siac.siac_t_ordinativo_ts_det b, siac.siac_d_ordinativo_ts_det_tipo c
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.ord_ts_id = b.ord_ts_id
AND    c.ord_ts_det_tipo_id = b.ord_ts_det_tipo_id
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.data_cancellazione IS NULL
and c.ord_ts_det_tipo_code='I'
GROUP BY
b.ord_ts_id),
impattuale as (
SELECT COALESCE(SUM(b.ord_ts_det_importo),0) importo_attuale,
b.ord_ts_id
FROM   siac.siac_t_ordinativo_ts a, siac.siac_t_ordinativo_ts_det b, siac.siac_d_ordinativo_ts_det_tipo c
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.ord_ts_id = b.ord_ts_id
AND    c.ord_ts_det_tipo_id = b.ord_ts_det_tipo_id
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.data_cancellazione IS NULL
and c.ord_ts_det_tipo_code='A'
GROUP BY
b.ord_ts_id),
firma as (select
a.ord_id,
a.ord_firma_data v_data_firma, a.ord_firma v_firma
 from siac_r_ordinativo_firma a where a.ente_proprietario_id=p_ente_proprietario_id
AND   a.data_cancellazione IS NULL
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)),
ons as (
with  onere as (
select a.ord_ts_id,
c.onere_code, c.onere_desc, d.onere_tipo_code, d.onere_tipo_desc,
b.importo_carico_ente, b.importo_carico_soggetto, b.importo_imponibile,
b.attivita_inizio, b.attivita_fine, b.caus_id, b.onere_att_id
from  siac_r_doc_onere_ordinativo_ts  a,siac_r_doc_onere b,siac_d_onere c,siac_d_onere_tipo d
where
a.ente_proprietario_id=p_ente_proprietario_id and
 b.doc_onere_id=a.doc_onere_id
and c.onere_id=b.onere_id
and d.onere_tipo_id=c.onere_tipo_id
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
and d.data_cancellazione is null
 AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
 AND p_data BETWEEN b.validita_inizio AND COALESCE(b.validita_fine, p_data)
),
 causale as (SELECT
 dc.caus_id,
 dc.caus_code v_caus_code, dc.caus_desc v_caus_desc
  FROM siac.siac_d_causale dc
  WHERE  dc.ente_proprietario_id=p_ente_proprietario_id and  dc.data_cancellazione IS NULL)
 ,
 onatt as (
 -- Sezione per l'onere
  SELECT
  doa.onere_att_id,
  doa.onere_att_code v_onere_att_code, doa.onere_att_desc v_onere_att_desc
  FROM siac_d_onere_attivita doa
  WHERE --doa.onere_att_id = v_onere_att_id
  doa.ente_proprietario_id=p_ente_proprietario_id
    AND doa.data_cancellazione IS NULL)
select * from onere left join causale
on onere.caus_id= causale.caus_id
left join onatt
on onere.onere_att_id=onatt.onere_att_id)
,
movgest as (
select a.ord_ts_id, c.movgest_anno,c.movgest_numero,c.movgest_desc,
case when d.movgest_ts_tipo_code = 'T' then
     	null
     else
     	b.movgest_ts_code
end movgest_ts_code
from
siac_r_ordinativo_ts_movgest_ts a,siac_t_movgest_ts b,siac_t_movgest c,siac_d_movgest_ts_tipo d
where
a.ente_proprietario_id=p_ente_proprietario_id and
a.movgest_ts_id=b.movgest_ts_id
and c.movgest_id=b.movgest_id
and d.movgest_ts_tipo_id=b.movgest_ts_tipo_id
and p_data BETWEEN a.validita_inizio and COALESCE (a.validita_fine,p_data)
)  ,
--04/07/2017: SIAC-5037 aggiunta gestione dei documenti
 elenco_doc as (
		select distinct d_doc_gruppo.doc_gruppo_tipo_code, d_doc_gruppo.doc_gruppo_tipo_desc,
    	d_doc_fam_tipo.doc_fam_tipo_code, d_doc_fam_tipo.doc_fam_tipo_desc,
        d_doc_tipo.doc_tipo_code, d_doc_tipo.doc_tipo_desc,
        t_doc.doc_numero, t_doc.doc_anno, t_subdoc.subdoc_numero,
        t_soggetto.soggetto_code,
        r_subdoc_ord_ts.ord_ts_id,
        t_doc.doc_id -- SIAC-5573
    from siac_t_doc t_doc
    		LEFT JOIN siac_r_doc_sog r_doc_sog
            	ON (r_doc_sog.doc_id=t_doc.doc_id
                	AND r_doc_sog.data_cancellazione IS NULL
                    AND p_data BETWEEN r_doc_sog.validita_inizio AND
                    	COALESCE(r_doc_sog.validita_fine, p_data))
            LEFT JOIN siac_t_soggetto t_soggetto
            	ON (t_soggetto.soggetto_id=r_doc_sog.soggetto_id
                	AND t_soggetto.data_cancellazione IS NULL),
		siac_t_subdoc t_subdoc,
    	siac_d_doc_tipo d_doc_tipo
        	LEFT JOIN siac_d_doc_gruppo d_doc_gruppo
            	ON (d_doc_gruppo.doc_gruppo_tipo_id=d_doc_tipo.doc_gruppo_tipo_id
                	AND d_doc_gruppo.data_cancellazione IS NULL),
    	siac_d_doc_fam_tipo d_doc_fam_tipo,
        siac_r_subdoc_ordinativo_ts r_subdoc_ord_ts
    where t_doc.doc_id=t_subdoc.doc_id
    	and d_doc_tipo.doc_tipo_id=t_doc.doc_tipo_id
        and d_doc_fam_tipo.doc_fam_tipo_id=d_doc_tipo.doc_fam_tipo_id
        and r_subdoc_ord_ts.subdoc_id=t_subdoc.subdoc_id
    	and t_doc.ente_proprietario_id=p_ente_proprietario_id
    	and t_doc.data_cancellazione IS NULL
   		and t_subdoc.data_cancellazione IS NULL
        AND d_doc_fam_tipo.data_cancellazione IS NULL
        and d_doc_tipo.data_cancellazione IS NULL
        and r_subdoc_ord_ts.data_cancellazione IS NULL
        and r_subdoc_ord_ts.validita_fine IS NULL
        AND p_data BETWEEN r_subdoc_ord_ts.validita_inizio AND
                    	COALESCE(r_subdoc_ord_ts.validita_fine, p_data))
-- JIRA 5897
, causale_ord as (
      select c.caus_id, c.caus_code,c.caus_desc,ct.caus_tipo_code, ct.caus_tipo_desc
      from
      siac_d_causale c
      , siac_d_causale_tipo ct
      , siac_r_causale_tipo r
      where
      p_data between r.validita_inizio and coalesce (r.validita_fine,p_data)
      and    r.data_cancellazione is null
      and    r.validita_fine is null
      and    r.caus_id = c.caus_id
      and    r.caus_tipo_id = ct.caus_tipo_id
      and    r.ente_proprietario_id = p_ente_proprietario_id)
select ord_pag.*,
cofog.codice_cofog_gruppo,
cofog.descrizione_cofog_gruppo,
cofog.codice_cofog_divisione,
cofog.descrizione_cofog_divisione,
pdc5.pdc5_codice_pdc_finanziario_V,pdc5.pdc5_descrizione_pdc_finanziario_V,
pdc5.pdc5_codice_pdc_finanziario_IV,pdc5.pdc5_descrizione_pdc_finanziario_IV,
pdc5.pdc5_codice_pdc_finanziario_III,pdc5.pdc5_descrizione_pdc_finanziario_III,
pdc5.pdc5_codice_pdc_finanziario_II,pdc5.pdc5_descrizione_pdc_finanziario_II,
pdc5.pdc5_codice_pdc_finanziario_I,pdc5.pdc5_descrizione_pdc_finanziario_I,
pdc4.pdc4_codice_pdc_finanziario_IV,pdc4.pdc4_descrizione_pdc_finanziario_IV,
pdc4.pdc4_codice_pdc_finanziario_III,pdc4.pdc4_descrizione_pdc_finanziario_III,
pdc4.pdc4_codice_pdc_finanziario_II,pdc4.pdc4_descrizione_pdc_finanziario_II,
pdc4.pdc4_codice_pdc_finanziario_I,pdc4.pdc4_descrizione_pdc_finanziario_I,
pce5.pce5_codice_pdc_economico_V,pce5.pce5_descrizione_pdc_economico_V,
pce5.pce5_codice_pdc_economico_IV,pce5.pce5_descrizione_pdc_economico_IV,
pce5.pce5_codice_pdc_economico_III,pce5.pce5_descrizione_pdc_economico_III,
pce5.pce5_codice_pdc_economico_II,pce5.pce5_descrizione_pdc_economico_II,
pce5.pce5_codice_pdc_economico_I,pce5.pce5_descrizione_pdc_economico_I,
pce4.pce4_codice_pdc_economico_IV,pce4.pce4_descrizione_pdc_economico_IV,
pce4.pce4_codice_pdc_economico_III,pce4.pce4_descrizione_pdc_economico_III,
pce4.pce4_codice_pdc_economico_II,pce4.pce4_descrizione_pdc_economico_II,
pce4.pce4_codice_pdc_economico_I,pce4.pce4_descrizione_pdc_economico_I,
attoamm.attoamm_anno, attoamm.attoamm_numero, attoamm.attoamm_oggetto, attoamm.attoamm_note,
attoamm.attoamm_tipo_code, attoamm.attoamm_tipo_desc, attoamm.attoamm_stato_desc, attoamm.attoamm_id,
attoamm.cdc_cdc_code,attoamm.cdc_cdc_desc,attoamm.cdc_cdr_code,attoamm.cdc_cdr_desc,
attoamm.cdr_cdc_code,attoamm.cdr_cdc_desc,attoamm.cdr_cdr_code,attoamm.cdr_cdr_desc,
t_flagAllegatoCartaceo.v_flagAllegatoCartaceo,
t_noteordinativo.v_note_ordinativo,
impiniziale.importo_iniziale,
impattuale.importo_attuale,
firma.v_data_firma, firma.v_firma,
ons.*,
movgest.ord_ts_id, movgest.movgest_anno,movgest.movgest_numero,movgest.movgest_desc,movgest.movgest_ts_code,
elenco_doc.*
--SIAC-5897
, causale_ord.caus_code as caus_code_ord,causale_ord.caus_desc as caus_desc_ord, causale_ord.caus_tipo_code as caus_tipo_code_ord,causale_ord.caus_tipo_desc as caus_tipo_desc_ord
from ord_pag
left join bollo
on ord_pag.codbollo_id=bollo.codbollo_id
left join contotes
on ord_pag.contotes_id=contotes.contotes_id
left join dist
on ord_pag.dist_id=dist.dist_id
left join commis
on ord_pag.comm_tipo_id=commis.comm_tipo_id
left join bilelem
on ord_pag.ord_id=bilelem.ord_id
left join modpag
on ord_pag.ord_id=modpag.ord_id
left join sogg
on ord_pag.ord_id=sogg.ord_id
left join tipoavviso
on ord_pag.ord_id=tipoavviso.ord_id
left join ricspesa
on ord_pag.ord_id=ricspesa.ord_id
left join transue
on ord_pag.ord_id=transue.ord_id
left join class26
on ord_pag.ord_id=class26.ord_id
left join class27
on ord_pag.ord_id=class27.ord_id
left join class28
on ord_pag.ord_id=class28.ord_id
left join class29
on ord_pag.ord_id=class29.ord_id
left join class30
on ord_pag.ord_id=class30.ord_id
left join cofog
on ord_pag.ord_id=cofog.ord_id
left join pdc5
on ord_pag.ord_id=pdc5.ord_id
left join pdc4
on ord_pag.ord_id=pdc4.ord_id
left join pce5
on ord_pag.ord_id=pce5.ord_id
left join pce4
on ord_pag.ord_id=pce4.ord_id
left join attoamm
on ord_pag.ord_id=attoamm.ord_id
left join t_flagAllegatoCartaceo
on ord_pag.ord_id=t_flagAllegatoCartaceo.ord_id
left join t_noteordinativo
on
ord_pag.ord_id=t_noteordinativo.ord_id
left join impiniziale
on ord_pag.ord_ts_id=impiniziale.ord_ts_id
left join impattuale
on ord_pag.ord_ts_id=impattuale.ord_ts_id
left join firma
on ord_pag.ord_id=firma.ord_id
left join ons
on ord_pag.ord_ts_id=ons.ord_ts_id
left join movgest
on ord_pag.ord_ts_id=movgest.ord_ts_id
--04/07/2017: SIAC-5037 aggiunta gestione dei documenti
left join elenco_doc
on elenco_doc.ord_ts_id=ord_pag.ord_ts_id
--SIAC-5897
left join causale_ord on causale_ord.caus_id=ord_pag.caus_id_ord
) as tb;


esito:= 'Fine funzione carico ordinativi in pagamento (FNC_SIAC_DWH_ORDINATIVO_PAGAMENTO) - '||clock_timestamp();
RETURN NEXT;

update siac_dwh_log_elaborazioni  set fnc_elaborazione_fine = clock_timestamp(),
fnc_durata=clock_timestamp()-fnc_elaborazione_inizio
where fnc_user=v_user_table;

EXCEPTION
WHEN others THEN
  esito:='Funzione carico ordinativi in pagamento (FNC_SIAC_DWH_ORDINATIVO_PAGAMENTO) terminata con errori';
  RAISE NOTICE '%-%.',SQLSTATE,SQLERRM;
RETURN;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY DEFINER
COST 100 ROWS 1000;

CREATE OR REPLACE FUNCTION siac.fnc_siac_dwh_ordinativo_pagamento (
  p_anno_bilancio varchar,
  p_ente_proprietario_id integer,
  p_data timestamp
)
RETURNS TABLE (
  esito varchar
) AS
$body$
DECLARE

v_user_table varchar;
params varchar;


BEGIN


select fnc_siac_random_user()
into	v_user_table;


IF p_ente_proprietario_id IS NULL THEN
   RAISE EXCEPTION 'Errore: Parametro Ente Propietario nullo';
   RETURN;
END IF;
IF p_anno_bilancio IS NULL THEN
   RAISE EXCEPTION 'Errore: Parametro Anno di bilancio nullo';
   RETURN;
END IF;

IF p_data IS NULL THEN
   p_data := now();
END IF;

params := p_anno_bilancio||' - '||p_ente_proprietario_id::varchar||' - '||p_data::varchar;


insert into
siac_dwh_log_elaborazioni (
ente_proprietario_id,
fnc_name ,
fnc_parameters ,
fnc_elaborazione_inizio ,
fnc_user
)
values (
p_ente_proprietario_id,
'fnc_siac_dwh_ordinativo_pagamento',
params,
clock_timestamp(),
v_user_table
);


esito:= 'Inizio funzione carico ordinativi in pagamento (fnc_siac_dwh_ordinativo_pagamento) - '||clock_timestamp();
RETURN NEXT;

esito:= '  Inizio eliminazione dati pregressi - '||clock_timestamp();
return next;
DELETE FROM siac.siac_dwh_ordinativo_pagamento
WHERE ente_proprietario_id = p_ente_proprietario_id
AND   bil_anno = p_anno_bilancio;
esito:= '  Fine eliminazione dati pregressi - '||clock_timestamp();
return next;

esito:= '  Inizio eliminazione dati subordinativi pregressi - '||clock_timestamp();
return next;
DELETE FROM siac.siac_dwh_subordinativo_pagamento
WHERE ente_proprietario_id = p_ente_proprietario_id
AND   bil_anno = p_anno_bilancio;
esito:= '  Fine eliminazione dati subordinativi pregressi - '||clock_timestamp();
return next;

INSERT INTO siac.siac_dwh_ordinativo_pagamento
 (
  ente_proprietario_id,
  ente_denominazione,
  bil_anno,
  cod_fase_operativa,
  desc_fase_operativa,
  anno_ord_pag,
  num_ord_pag,
  desc_ord_pag,
  cod_stato_ord_pag,
  desc_stato_ord_pag,
  castelletto_cassa_ord_pag,
  castelletto_competenza_ord_pag,
  castelletto_emessi_ord_pag,
  data_emissione,
  data_riduzione,
  data_spostamento,
  data_variazione,
  beneficiario_multiplo,
  cod_bollo,
  desc_cod_bollo,
  cod_tipo_commissione,
  desc_tipo_commissione,
  cod_conto_tesoreria,
  decrizione_conto_tesoreria,
  cod_distinta,
  desc_distinta,
  soggetto_id,
  cod_soggetto,
  desc_soggetto,
  cf_soggetto,
  cf_estero_soggetto,
  p_iva_soggetto,
  soggetto_id_mod_pag,
  cod_soggetto_mod_pag,
  desc_soggetto_mod_pag,
  cf_soggetto_mod_pag,
  cf_estero_soggetto_mod_pag,
  p_iva_soggetto_mod_pag,
  cod_tipo_accredito,
  desc_tipo_accredito,
  mod_pag_id,
  quietanziante,
  data_nascita_quietanziante,
  luogo_nascita_quietanziante,
  stato_nascita_quietanziante,
  bic,
  contocorrente,
  intestazione_contocorrente,
  iban,
  note_mod_pag,
  data_scadenza_mod_pag,
  tipo_cessione, -- 04.07.2017 Sofia SIAC-5036
  cod_cessione,  -- 04.07.2017 Sofia SIAC-5036
  desc_cessione, -- 04.07.2017 Sofia SIAC-5036
  cod_tipo_atto_amministrativo,
  desc_tipo_atto_amministrativo,
  desc_stato_atto_amministrativo,
  anno_atto_amministrativo,
  num_atto_amministrativo,
  oggetto_atto_amministrativo,
  note_atto_amministrativo,
  cod_tipo_avviso,
  desc_tipo_avviso,
  cod_spesa_ricorrente,
  desc_spesa_ricorrente,
  cod_transazione_spesa_ue,
  desc_transazione_spesa_ue,
  cod_pdc_finanziario_i,
  desc_pdc_finanziario_i,
  cod_pdc_finanziario_ii,
  desc_pdc_finanziario_ii,
  cod_pdc_finanziario_iii,
  desc_pdc_finanziario_iii,
  cod_pdc_finanziario_iv,
  desc_pdc_finanziario_iv,
  cod_pdc_finanziario_v,
  desc_pdc_finanziario_v,
  cod_pdc_economico_i,
  desc_pdc_economico_i,
  cod_pdc_economico_ii,
  desc_pdc_economico_ii,
  cod_pdc_economico_iii,
  desc_pdc_economico_iii,
  cod_pdc_economico_iv,
  desc_pdc_economico_iv,
  cod_pdc_economico_v,
  desc_pdc_economico_v,
  cod_cofog_divisione,
  desc_cofog_divisione,
  cod_cofog_gruppo,
  desc_cofog_gruppo,
  classificatore_1,
  classificatore_1_valore,
  classificatore_1_desc_valore,
  classificatore_2,
  classificatore_2_valore,
  classificatore_2_desc_valore,
  classificatore_3,
  classificatore_3_valore,
  classificatore_3_desc_valore,
  classificatore_4,
  classificatore_4_valore,
  classificatore_4_desc_valore,
  classificatore_5,
  classificatore_5_valore,
  classificatore_5_desc_valore,
  allegato_cartaceo,
  --cup,
  note,
  cod_capitolo,
  cod_articolo,
  cod_ueb,
  desc_capitolo,
  desc_articolo,
  importo_iniziale,
  importo_attuale,
  cod_cdr_atto_amministrativo,
  desc_cdr_atto_amministrativo,
  cod_cdc_atto_amministrativo,
  desc_cdc_atto_amministrativo,
  data_firma,
  firma,
  data_inizio_val_stato_ordpg,
  data_inizio_val_ordpg,
  data_creazione_ordpg,
  data_modifica_ordpg,
  data_trasmissione,
  cod_siope,
  desc_siope,
  soggetto_csc_id, -- SIAC-5228
  cod_siope_tipo_debito,
  desc_siope_tipo_debito,
  desc_siope_tipo_debito_bnkit,
  cod_siope_assenza_motivazione,
  desc_siope_assenza_motivazione,
  desc_siope_assenza_motiv_bnkit,
  ord_da_trasmettere -- 20.06.2018 Sofia siac-6175
  )
select tb.ente_proprietario_id, tb.ente_denominazione, tb.anno, tb.fase_operativa_code,tb.fase_operativa_desc,
tb.ord_anno, tb.ord_numero,tb.ord_desc, tb.ord_stato_code,tb.ord_stato_desc,
tb.ord_cast_cassa, tb.ord_cast_competenza, tb.ord_cast_emessi,
tb.ord_emissione_data, tb.ord_riduzione_data, tb.ord_spostamento_data, tb.ord_variazione_data,
case when tb.ord_beneficiariomult=true then 'T' else 'F' end,
tb.codbollo_code, tb.codbollo_desc,
tb.comm_tipo_code, tb.comm_tipo_desc,
tb.contotes_code, tb.contotes_desc,
tb.dist_code, tb.dist_desc,
tb.soggetto_id,tb.soggetto_code, tb.soggetto_desc, tb.codice_fiscale, tb.codice_fiscale_estero, tb.partita_iva,
tb.v_soggetto_id_modpag,  tb.v_codice_soggetto_modpag, tb.v_descrizione_soggetto_modpag,
tb.v_codice_fiscale_soggetto_modpag,tb. v_codice_fiscale_estero_soggetto_modpag,tb.v_partita_iva_soggetto_modpag,
tb.v_codice_tipo_accredito, tb.v_descrizione_tipo_accredito, tb.modpag_id,
tb.v_quietanziante, tb.v_data_nascita_quietanziante,tb.v_luogo_nascita_quietanziante,tb.v_stato_nascita_quietanziante,
tb.v_bic, tb.v_contocorrente, tb.v_intestazione_contocorrente, tb.v_iban,
tb.v_note_modalita_pagamento, tb.v_data_scadenza_modalita_pagamento,
--tb.tipo_cessione, tb.cod_cessione, tb.desc_cessione, -- 04.07.2017 Sofia SIAC-5036
COALESCE(tb.tipo_cessione, tb.oil_relaz_tipo_code) tipo_cessione, -- SIAC-5228
COALESCE(tb.cod_cessione, tb.relaz_tipo_code) cod_cessione, -- SIAC-5228
COALESCE(tb.desc_cessione, tb.relaz_tipo_desc) desc_cessione, -- SIAC-5228
tb.attoamm_tipo_code, tb.attoamm_tipo_desc,tb.attoamm_stato_desc,
tb.attoamm_anno, tb.attoamm_numero, tb.attoamm_oggetto, tb.attoamm_note,
tb.v_codice_tipo_avviso, tb.v_descrizione_tipo_avviso,
tb.v_codice_spesa_ricorrente, tb.v_descrizione_spesa_ricorrente,
tb.v_codice_transazione_spesa_ue, tb.v_descrizione_transazione_spesa_ue,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_codice_pdc_finanziario_I else tb.pdc4_codice_pdc_finanziario_I end codice_pdc_finanziario_II,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_descrizione_pdc_finanziario_I else tb.pdc4_descrizione_pdc_finanziario_I end descrizione_pdc_finanziario_I,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_codice_pdc_finanziario_II else tb.pdc4_codice_pdc_finanziario_II end codice_pdc_finanziario_II,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_descrizione_pdc_finanziario_II else tb.pdc4_descrizione_pdc_finanziario_II end descrizione_pdc_finanziario_II,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_codice_pdc_finanziario_III else tb.pdc4_codice_pdc_finanziario_III end codice_pdc_finanziario_III,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_descrizione_pdc_finanziario_III else tb.pdc4_descrizione_pdc_finanziario_III end descrizione_pdc_finanziario_III,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_codice_pdc_finanziario_IV else tb.pdc4_codice_pdc_finanziario_IV end codice_pdc_finanziario_IV  ,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_descrizione_pdc_finanziario_IV else tb.pdc4_descrizione_pdc_finanziario_IV end descrizione_pdc_finanziario_IV,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_codice_pdc_finanziario_V end codice_pdc_finanziario_V  ,
case when   tb.pdc5_codice_pdc_finanziario_V is not null then    tb.pdc5_descrizione_pdc_finanziario_V end descrizione_pdc_finanziario_V,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_codice_pdc_economico_I else tb.pce4_codice_pdc_economico_I end codice_pdc_economico_I,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_descrizione_pdc_economico_I else tb.pce4_descrizione_pdc_economico_I end descrizione_pdc_economico_I,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_codice_pdc_economico_II else tb.pce4_codice_pdc_economico_II end codice_pdc_economico_II,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_descrizione_pdc_economico_II else tb.pce4_descrizione_pdc_economico_II end descrizione_pdc_economico_II,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_codice_pdc_economico_III else tb.pce4_codice_pdc_economico_III end codice_pdc_economico_III,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_descrizione_pdc_economico_III else tb.pce4_descrizione_pdc_economico_III end descrizione_pdc_economico_III,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_codice_pdc_economico_IV else tb.pce4_codice_pdc_economico_IV end codice_pdc_economico_IV  ,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_descrizione_pdc_economico_IV else tb.pce4_descrizione_pdc_economico_IV end descrizione_pdc_economico_IV,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_codice_pdc_economico_V end codice_pdc_economico_V  ,
case when   tb.pce5_codice_pdc_economico_V is not null then    tb.pce5_descrizione_pdc_economico_V end descrizione_pdc_economico_V,
tb.codice_cofog_divisione, tb.descrizione_cofog_divisione,tb.codice_cofog_gruppo,tb.descrizione_cofog_gruppo,
tb.cla21_classif_tipo_desc,tb.cla21_classif_code,tb.cla21_classif_desc,
tb.cla22_classif_tipo_desc,tb.cla22_classif_code,tb.cla22_classif_desc,
tb.cla23_classif_tipo_desc,tb.cla23_classif_code,tb.cla23_classif_desc,
tb.cla24_classif_tipo_desc,tb.cla24_classif_code,tb.cla24_classif_desc,
tb.cla25_classif_tipo_desc,tb.cla25_classif_code,tb.cla25_classif_desc,
tb.v_flagAllegatoCartaceo,tb.v_note_ordinativo,
tb.v_codice_capitolo, tb.v_codice_articolo, tb.v_codice_ueb, tb.v_descrizione_capitolo ,
tb.v_descrizione_articolo,tb.importo_iniziale,tb.importo_attuale,
case when tb.cdc_cdc_code::varchar is not null then  tb.cdc_cdr_code::varchar else tb.cdr_cdr_code::varchar end cdr_code,
case when tb.cdc_cdc_code::varchar is not null then  tb.cdc_cdr_desc::varchar else tb.cdr_cdr_desc::varchar end cdr_desc,
case when tb.cdc_cdc_code::varchar is not null then  tb.cdc_cdc_code::varchar else tb.cdr_cdc_code::varchar end cdc_code,
case when tb.cdc_cdc_code::varchar is not null then  tb.cdc_cdc_desc::varchar else tb.cdr_cdc_desc::varchar end cdc_desc,
tb.v_data_firma,tb.v_firma,
tb.data_inizio_val_stato_ordpg,
tb.data_inizio_val_ordpg,
tb.data_creazione_ordpg,
tb.data_modifica_ordpg,
tb.ord_trasm_oil_data,
tb.mif_ord_class_codice_cge,
tb.descr_siope,
tb.soggetto_id_da soggetto_csc_id, -- SIAC-5228
tb.siope_tipo_debito_code, tb.siope_tipo_debito_desc, tb.siope_tipo_debito_desc_bnkit,
tb.siope_assenza_motivazione_code, tb.siope_assenza_motivazione_desc, tb.siope_assenza_motivazione_desc_bnkit,
tb.ord_da_trasmettere -- 20.06.2018 Sofia siac-6175
from (
with ordinativipag as (
with ord_pag as (
SELECT d.ente_proprietario_id, d.ente_denominazione, c.anno, i.fase_operativa_code, i.fase_operativa_desc,
a.ord_anno, a.ord_numero, a.ord_desc, g.ord_stato_code, g.ord_stato_desc, a.ord_cast_cassa, a.ord_cast_competenza,
a.ord_cast_emessi, a.ord_emissione_data, a.ord_riduzione_data, a.ord_spostamento_data, a.ord_variazione_data,
a.ord_beneficiariomult
,a.ord_id, --q.elem_id,
b.bil_id, a.comm_tipo_id,
f.validita_inizio as data_inizio_val_stato_ordpg,
a.validita_inizio as data_inizio_val_ordpg,
a.data_creazione as data_creazione_ordpg,
a.data_modifica as data_modifica_ordpg,
a.codbollo_id,a.contotes_id,a.dist_id,
a.ord_trasm_oil_data,
l.siope_tipo_debito_code, l.siope_tipo_debito_desc, l.siope_tipo_debito_desc_bnkit,
m.siope_assenza_motivazione_code, m.siope_assenza_motivazione_desc, m.siope_assenza_motivazione_desc_bnkit,
a.ord_da_trasmettere  -- 20.06.2018 Sofia siac-6175
FROM siac_t_ordinativo a
left join siac_d_siope_tipo_debito l on l.siope_tipo_debito_id = a.siope_tipo_debito_id
                                     and l.data_cancellazione is null
                                     and l.validita_fine is null
left join siac_d_siope_assenza_motivazione m on m.siope_assenza_motivazione_id = a.siope_assenza_motivazione_id
                                             and m.data_cancellazione is null
                                             and m.validita_fine is null
,siac_t_bil b, siac_t_periodo c, siac_t_ente_proprietario d,
siac_d_ordinativo_tipo e, siac_r_ordinativo_stato f, siac_d_ordinativo_stato g ,
 siac_r_bil_fase_operativa h, siac_d_fase_operativa i
where  d.ente_proprietario_id = p_ente_proprietario_id--p_ente_proprietario_id
and
c.anno = p_anno_bilancio
AND e.ord_tipo_code = 'P' and
a.bil_id = b.bil_id and
c.periodo_id = b.periodo_id and
d.ente_proprietario_id = a.ente_proprietario_id and
a.ord_tipo_id = e.ord_tipo_id AND
f.ord_id = a.ord_id  and
f.ord_stato_id = g.ord_stato_id
AND p_data BETWEEN f.validita_inizio AND COALESCE(f.validita_fine, p_data)
and h.fase_operativa_id = i.fase_operativa_id
AND   h.bil_id = b.bil_id
AND p_data BETWEEN h.validita_inizio AND COALESCE(h.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
and d.data_cancellazione is null
and e.data_cancellazione is null
and f.data_cancellazione is null
and g.data_cancellazione is null),
bollo as (select
a.codbollo_code, a.codbollo_desc,
a.codbollo_id from siac_d_codicebollo a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null
),
contotes as  (select
a.contotes_code, a.contotes_desc,a.contotes_id from siac_d_contotesoreria a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null
)
,
dist as  (select a.dist_code, a.dist_desc,a.dist_id from siac_d_distinta a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null
),
commis as  (select a.comm_tipo_code, a.comm_tipo_desc, a.comm_tipo_id from
siac_d_commissione_tipo a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null
),
bilelem as (SELECT b.ord_id,
a.elem_code v_codice_capitolo, a.elem_code2 v_codice_articolo,
a.elem_code3 v_codice_ueb, a.elem_desc v_descrizione_capitolo ,
a.elem_desc2 v_descrizione_articolo
FROM siac.siac_t_bil_elem a, siac_r_ordinativo_bil_elem b
WHERE a.elem_id = b.elem_id
and b.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is NULL
and b.data_cancellazione is NULL),
modpag as (
with mod as (
select a.ord_id, b.modpag_id ,
	   b.soggetto_id v_soggetto_id_modpag, --b.accredito_tipo_id v_accredito_tipo_id,
	   b.quietanziante v_quietanziante, b.quietanzante_nascita_data v_data_nascita_quietanziante,
	   b.quietanziante_nascita_luogo v_luogo_nascita_quietanziante,
       b.quietanziante_nascita_stato v_stato_nascita_quietanziante,
       b.bic v_bic, b.contocorrente v_contocorrente, b.contocorrente_intestazione v_intestazione_contocorrente,
       b.iban v_iban,
       b.note v_note_modalita_pagamento, b.data_scadenza v_data_scadenza_modalita_pagamento,
	   c.soggetto_code v_codice_soggetto_modpag, c.soggetto_desc v_descrizione_soggetto_modpag,
	   c.codice_fiscale v_codice_fiscale_soggetto_modpag,
	   c.codice_fiscale_estero v_codice_fiscale_estero_soggetto_modpag, c.partita_iva v_partita_iva_soggetto_modpag,
	   b.accredito_tipo_id,
       null tipo_cessione , -- 04.07.2017 Sofia SIAC-5036
       null cod_cessione  , -- 04.07.2017 Sofia SIAC-5036
       null desc_cessione   -- 04.07.2017 Sofia SIAC-5036
from siac_r_ordinativo_modpag a,
siac_t_modpag b,siac_t_soggetto c
where a.modpag_id=b.modpag_id and a.ente_proprietario_id=p_ente_proprietario_id
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and c.soggetto_id=b.soggetto_id
and a.data_cancellazione is null and b.data_cancellazione is null
and c.data_cancellazione is null
UNION -- 04.07.2017 Sofia SIAC-5036
select a.ord_id, b.modpag_id ,
	   b.soggetto_id v_soggetto_id_modpag,
	   b.quietanziante v_quietanziante, b.quietanzante_nascita_data v_data_nascita_quietanziante,
	   b.quietanziante_nascita_luogo v_luogo_nascita_quietanziante,
       b.quietanziante_nascita_stato v_stato_nascita_quietanziante,
       b.bic v_bic, b.contocorrente v_contocorrente, b.contocorrente_intestazione v_intestazione_contocorrente,
       b.iban v_iban,
       b.note v_note_modalita_pagamento, b.data_scadenza v_data_scadenza_modalita_pagamento,
	   c.soggetto_code v_codice_soggetto_modpag, c.soggetto_desc v_descrizione_soggetto_modpag,
	   c.codice_fiscale v_codice_fiscale_soggetto_modpag,
	   c.codice_fiscale_estero v_codice_fiscale_estero_soggetto_modpag, c.partita_iva v_partita_iva_soggetto_modpag,
	   b.accredito_tipo_id,
       oil.oil_relaz_tipo_code tipo_cessione,
       tipo.relaz_tipo_code cod_cessione,
       tipo.relaz_tipo_desc desc_cessione
from siac_r_ordinativo_modpag a,siac_r_soggetto_relaz rel, siac_r_soggrel_modpag rmdp,
	 siac_r_oil_relaz_tipo roil,siac_d_oil_relaz_tipo oil,siac_d_relaz_tipo tipo,
	 siac_t_modpag b,siac_t_soggetto c
where a.ente_proprietario_id=p_ente_proprietario_id
and   a.modpag_id is NULL
and   rel.soggetto_relaz_id=a.soggetto_relaz_id
and   rmdp.soggetto_relaz_id=rel.soggetto_relaz_id
and   b.modpag_id=rmdp.modpag_id
and   c.soggetto_id=b.soggetto_id
and   roil.relaz_tipo_id=rel.relaz_tipo_id
and   tipo.relaz_tipo_id=roil.relaz_tipo_id
and   oil.oil_relaz_tipo_id=roil.oil_relaz_tipo_id
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND   p_data BETWEEN rel.validita_inizio AND COALESCE(rel.validita_fine, p_data)
AND   p_data BETWEEN rmdp.validita_inizio AND COALESCE(rmdp.validita_fine, p_data)
AND   p_data BETWEEN roil.validita_inizio AND COALESCE(roil.validita_fine, p_data)
and   a.data_cancellazione is null
and   b.data_cancellazione is null
and   c.data_cancellazione is null
and   rel.data_cancellazione is null
and   rmdp.data_cancellazione is null
and   roil.data_cancellazione is null
),
acc as (select
a.accredito_tipo_id,
a.accredito_tipo_code v_codice_tipo_accredito, a.accredito_tipo_desc v_descrizione_tipo_accredito
from siac_d_accredito_tipo a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null)
select mod.*,acc.v_codice_tipo_accredito, acc.v_descrizione_tipo_accredito
 from mod left join acc
on mod.accredito_tipo_id=acc.accredito_tipo_id
)
,
sogg as (
SELECT
c.ord_id,d.soggetto_id,
d.soggetto_code, d.soggetto_desc, d.codice_fiscale, d.codice_fiscale_estero, d.partita_iva
FROM siac_r_soggetto_relaz a, siac_d_relaz_tipo b,siac_r_ordinativo_soggetto c,siac_t_soggetto d
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.relaz_tipo_id = b.relaz_tipo_id
AND   b.relaz_tipo_code  = 'SEDE_SECONDARIA'
and c.soggetto_id=a.soggetto_id_da
and p_data BETWEEN c.validita_inizio AND COALESCE(c.validita_fine, p_data)
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and d.soggetto_id=c.soggetto_id
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
union
select b.ord_id,a.soggetto_id,
a.soggetto_code, a.soggetto_desc, a.codice_fiscale, a.codice_fiscale_estero, a.partita_iva
 from siac_t_soggetto a, siac_r_ordinativo_soggetto b
where a.ente_proprietario_id=p_ente_proprietario_id
and a.soggetto_id=b.soggetto_id
and p_data BETWEEN b.validita_inizio AND COALESCE(b.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
),
--classificatori non gerarchici
tipoavviso as (
SELECT
a.ord_id ,b.classif_code v_codice_tipo_avviso, b.classif_desc v_descrizione_tipo_avviso
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='TIPO_AVVISO'
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
),
ricspesa as (
SELECT
a.ord_id ,b.classif_code v_codice_spesa_ricorrente, b.classif_desc v_descrizione_spesa_ricorrente
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='RICORRENTE_SPESA'
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
transue as (
SELECT
a.ord_id ,b.classif_code v_codice_transazione_spesa_ue, b.classif_desc v_descrizione_transazione_spesa_ue
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='TRANSAZIONE_UE_SPESA'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
select ord_pag.*, bollo.codbollo_code, bollo.codbollo_desc,
--bollo.codbollo_id,
contotes.contotes_code, contotes.contotes_desc,--contotes.contotes_id,
dist.dist_code, dist.dist_desc,--dist.dist_id,
commis.comm_tipo_code, commis.comm_tipo_desc,
--commis.comm_tipo_id ,
bilelem.v_codice_capitolo, bilelem.v_codice_articolo,
bilelem.v_codice_ueb, bilelem.v_descrizione_capitolo ,
bilelem.v_descrizione_articolo,
modpag.modpag_id,modpag.v_soggetto_id_modpag,modpag.v_quietanziante,modpag.v_data_nascita_quietanziante,
modpag.v_luogo_nascita_quietanziante,
modpag.v_stato_nascita_quietanziante,
modpag.v_bic,modpag.v_contocorrente, modpag.v_intestazione_contocorrente,
modpag.v_iban,
modpag.v_note_modalita_pagamento,modpag.v_data_scadenza_modalita_pagamento,
modpag.v_codice_soggetto_modpag, modpag.v_descrizione_soggetto_modpag,
modpag.v_codice_fiscale_soggetto_modpag,
modpag.v_codice_fiscale_estero_soggetto_modpag,modpag.v_partita_iva_soggetto_modpag,
modpag.accredito_tipo_id,
modpag.tipo_cessione, modpag.cod_cessione,modpag.desc_cessione,
modpag.v_codice_tipo_accredito, modpag.v_descrizione_tipo_accredito,
sogg.soggetto_id,sogg.soggetto_code, sogg.soggetto_desc, sogg.codice_fiscale, sogg.codice_fiscale_estero, sogg.partita_iva
,tipoavviso.v_codice_tipo_avviso, tipoavviso.v_descrizione_tipo_avviso,
ricspesa.v_codice_spesa_ricorrente, ricspesa.v_descrizione_spesa_ricorrente,
transue.v_codice_transazione_spesa_ue, transue.v_descrizione_transazione_spesa_ue
from ord_pag
left join bollo
on ord_pag.codbollo_id=bollo.codbollo_id
left join contotes
on ord_pag.contotes_id=contotes.contotes_id
left join dist
on ord_pag.dist_id=dist.dist_id
left join commis
on ord_pag.comm_tipo_id=commis.comm_tipo_id
left join bilelem
on ord_pag.ord_id=bilelem.ord_id
left join modpag
on ord_pag.ord_id=modpag.ord_id
left join sogg
on ord_pag.ord_id=sogg.ord_id
left join tipoavviso
on ord_pag.ord_id=tipoavviso.ord_id
left join ricspesa
on ord_pag.ord_id=ricspesa.ord_id
left join transue
on ord_pag.ord_id=transue.ord_id
)
,
class21 as (
SELECT
a.ord_id ,
c.classif_tipo_desc cla21_classif_tipo_desc,
b.classif_code cla21_classif_code, b.classif_desc cla21_classif_desc
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_21'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
class22 as (
SELECT
a.ord_id ,
c.classif_tipo_desc cla22_classif_tipo_desc,
b.classif_code cla22_classif_code, b.classif_desc cla22_classif_desc
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_22'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
class23 as (
SELECT
a.ord_id ,
c.classif_tipo_desc cla23_classif_tipo_desc,
b.classif_code cla23_classif_code, b.classif_desc cla23_classif_desc
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_23'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
class24 as (
SELECT
a.ord_id ,
c.classif_tipo_desc cla24_classif_tipo_desc,
b.classif_code cla24_classif_code, b.classif_desc cla24_classif_desc
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_24'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
class25 as (
SELECT
a.ord_id ,
c.classif_tipo_desc cla25_classif_tipo_desc,
b.classif_code cla25_classif_code, b.classif_desc cla25_classif_desc
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id--p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_25'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
),
cofog as (
select distinct r.ord_id,
a.classif_code codice_cofog_gruppo,a.classif_desc descrizione_cofog_gruppo,
a2.classif_code codice_cofog_divisione,a2.classif_desc descrizione_cofog_divisione
from
siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--DIVISIONE_COFOG
siac_r_class_fam_tree d2,
siac_t_class a2
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='GRUPPO_COFOG'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine, p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null)
, pdc5 as (
select distinct
r.ord_id,
a.classif_code pdc5_codice_pdc_finanziario_V,a.classif_desc pdc5_descrizione_pdc_finanziario_V,
a2.classif_code pdc5_codice_pdc_finanziario_IV,a2.classif_desc pdc5_descrizione_pdc_finanziario_IV,
a3.classif_code pdc5_codice_pdc_finanziario_III,a3.classif_desc pdc5_descrizione_pdc_finanziario_III,
a4.classif_code pdc5_codice_pdc_finanziario_II,a4.classif_desc pdc5_descrizione_pdc_finanziario_II,
a5.classif_code pdc5_codice_pdc_finanziario_I,a5.classif_desc pdc5_descrizione_pdc_finanziario_I
 from siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4,
--PDC_I
siac_r_class_fam_tree d5,
siac_t_class a5
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PDC_V'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and d5.classif_id=a4.classif_id
and a5.classif_id=d5.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d3.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
and p_data BETWEEN d5.validita_inizio and COALESCE(d5.validita_fine,p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null
and d3.data_cancellazione is null
and a3.data_cancellazione is null
and d4.data_cancellazione is null
and a4.data_cancellazione is null
and d5.data_cancellazione is null
and a5.data_cancellazione is null
)
, pdc4 as (
select distinct r.ord_id,
a.classif_code pdc4_codice_pdc_finanziario_IV,a.classif_desc pdc4_descrizione_pdc_finanziario_IV,
a2.classif_code pdc4_codice_pdc_finanziario_III,a2.classif_desc pdc4_descrizione_pdc_finanziario_III,
a3.classif_code pdc4_codice_pdc_finanziario_II,a3.classif_desc pdc4_descrizione_pdc_finanziario_II,
a4.classif_code pdc4_codice_pdc_finanziario_I,a4.classif_desc pdc4_descrizione_pdc_finanziario_I
 from siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PDC_IV'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d3.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null
and d3.data_cancellazione is null
and a3.data_cancellazione is null
and d4.data_cancellazione is null
and a4.data_cancellazione is null
)
, pce5 as (
select distinct r.ord_id,
--r.classif_id,
a.classif_code pce5_codice_pdc_economico_V,a.classif_desc pce5_descrizione_pdc_economico_V,
a2.classif_code pce5_codice_pdc_economico_IV,a2.classif_desc pce5_descrizione_pdc_economico_IV,
a3.classif_code pce5_codice_pdc_economico_III,a3.classif_desc pce5_descrizione_pdc_economico_III,
a4.classif_code pce5_codice_pdc_economico_II,a4.classif_desc pce5_descrizione_pdc_economico_II,
a5.classif_code pce5_codice_pdc_economico_I,a5.classif_desc pce5_descrizione_pdc_economico_I
 from siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4,
--PDC_I
siac_r_class_fam_tree d5,
siac_t_class a5
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PCE_V'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and d5.classif_id=a4.classif_id
and a5.classif_id=d5.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d3.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
and p_data BETWEEN d5.validita_inizio and COALESCE(d5.validita_fine,p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null
and d3.data_cancellazione is null
and a3.data_cancellazione is null
and d4.data_cancellazione is null
and a4.data_cancellazione is null
and d5.data_cancellazione is null
and a5.data_cancellazione is null
)
, pce4 as (
select distinct r.ord_id,
a.classif_code pce4_codice_pdc_economico_IV,a.classif_desc pce4_descrizione_pdc_economico_IV,
a2.classif_code pce4_codice_pdc_economico_III,a2.classif_desc pce4_descrizione_pdc_economico_III,
a3.classif_code pce4_codice_pdc_economico_II,a3.classif_desc pce4_descrizione_pdc_economico_II,
a4.classif_code pce4_codice_pdc_economico_I,a4.classif_desc pce4_descrizione_pdc_economico_I
 from siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PCE_IV'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d3.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null
and d3.data_cancellazione is null
and a3.data_cancellazione is null
and d4.data_cancellazione is null
and a4.data_cancellazione is null
),
--atto amm
attoamm as (
with atmc as (
with atm as (
SELECT
a.ord_id,
b.attoamm_anno, b.attoamm_numero, b.attoamm_oggetto, b.attoamm_note,
       e.attoamm_tipo_code, e.attoamm_tipo_desc, d.attoamm_stato_desc, b.attoamm_id
FROM
siac.siac_r_ordinativo_atto_amm a,
siac.siac_t_atto_amm b, siac.siac_r_atto_amm_stato c,
siac.siac_d_atto_amm_stato d, siac.siac_d_atto_amm_tipo e
WHERE
a.ente_proprietario_id=p_ente_proprietario_id
and a.attoamm_id=b.attoamm_id
AND c.attoamm_id = b.attoamm_id
AND d.attoamm_stato_id = c.attoamm_stato_id
AND e.attoamm_tipo_id = b.attoamm_tipo_id
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
--AND
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   d.data_cancellazione IS NULL
AND   e.data_cancellazione IS NULL
)
, atmrclass as (select a.attoamm_id,a.classif_id from siac_r_atto_amm_class a where
a.ente_proprietario_id=p_ente_proprietario_id and
a.data_cancellazione is null and
 p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
)
select atm.*,atmrclass.classif_id from atm left join atmrclass
on atmrclass.attoamm_id=atm.attoamm_id
)
,
cdc as (
select a.classif_id,a.classif_code cdc_cdc_code,a.classif_desc cdc_cdc_desc
,a2.classif_code cdc_cdr_code,a2.classif_desc cdc_cdr_desc
 from siac_t_class a,siac_d_class_tipo b, siac_r_class_fam_tree c,siaC_t_class a2
where a.ente_proprietario_id=p_ente_proprietario_id
and b.classif_tipo_id=a.classif_tipo_id
and b.classif_tipo_code='CDC'
and c.classif_id=a.classif_id
--and p_data BETWEEN c.validita_inizio AND COALESCE(c.validita_fine, p_data)
and a2.classif_id=c.classif_id_padre
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
and a2.data_cancellazione is null)
,cdr as (
select a.classif_id,null cdr_cdc_code,null cdr_cdc_desc
,a.classif_code cdr_cdr_code,a.classif_desc cdr_cdr_desc
 from siaC_t_class a,siac_d_class_tipo b
 where a.ente_proprietario_id=p_ente_proprietario_id
and b.classif_tipo_id=a.classif_tipo_id
and b.classif_tipo_code='CDR'
and a.data_cancellazione is null
and b.data_cancellazione is null)
select
atmc.ord_id,
atmc.attoamm_anno, atmc.attoamm_numero, atmc.attoamm_oggetto, atmc.attoamm_note,
atmc.attoamm_tipo_code, atmc.attoamm_tipo_desc, atmc.attoamm_stato_desc, atmc.attoamm_id,
cdc.cdc_cdc_code,cdc.cdc_cdc_desc,cdc.cdc_cdr_code,cdc.cdc_cdr_desc,
cdr.cdr_cdc_code,cdr.cdr_cdc_desc,cdr.cdr_cdr_code,cdr.cdr_cdr_desc
from atmc left join cdc on
atmc.classif_id=cdc.classif_id
left join cdr on
atmc.classif_id=cdr.classif_id)
--sezione attributi
, t_flagAllegatoCartaceo as (
SELECT
a.ord_id
, a."boolean" v_flagAllegatoCartaceo
FROM   siac.siac_r_ordinativo_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagAllegatoCartaceo' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL)
, t_noteordinativo as (
SELECT
a.ord_id
, a.testo v_note_ordinativo
FROM   siac.siac_r_ordinativo_attr a, siac.siac_t_attr b
WHERE
b.attr_code='NOTE_ORDINATIVO' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL)
,
impiniziale as (
SELECT COALESCE(SUM(b.ord_ts_det_importo),0) importo_iniziale,
a.ord_id
FROM   siac.siac_t_ordinativo_ts a, siac.siac_t_ordinativo_ts_det b, siac.siac_d_ordinativo_ts_det_tipo c
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.ord_ts_id = b.ord_ts_id
AND    c.ord_ts_det_tipo_id = b.ord_ts_det_tipo_id
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.data_cancellazione IS NULL
and c.ord_ts_det_tipo_code='I'
GROUP BY
a.ord_id),
impattuale as (
SELECT COALESCE(SUM(b.ord_ts_det_importo),0) importo_attuale,
a.ord_id
FROM   siac.siac_t_ordinativo_ts a, siac.siac_t_ordinativo_ts_det b, siac.siac_d_ordinativo_ts_det_tipo c
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.ord_ts_id = b.ord_ts_id
AND    c.ord_ts_det_tipo_id = b.ord_ts_det_tipo_id
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.data_cancellazione IS NULL
and c.ord_ts_det_tipo_code='A'
GROUP BY
a.ord_id),
firma as (select
a.ord_id,
a.ord_firma_data v_data_firma, a.ord_firma v_firma
 from siac_r_ordinativo_firma a where a.ente_proprietario_id=p_ente_proprietario_id
AND   a.data_cancellazione IS NULL
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data))
, mif as (
  select tb.mif_ord_ord_id, tb.mif_ord_class_codice_cge, tb.descr_siope from (
  with mif1 as (
      select a.mif_ord_anno, a.mif_ord_numero, a.mif_ord_ord_id,
             a.mif_ord_class_codice_cge,
             b.flusso_elab_mif_id, b.flusso_elab_mif_data
      from mif_t_ordinativo_spesa a,  mif_t_flusso_elaborato b
      where a.ente_proprietario_id=p_ente_proprietario_id
      and  a.mif_ord_flusso_elab_mif_id=b.flusso_elab_mif_id
      and b.flusso_elab_mif_esito='OK'
      and a.data_cancellazione is null
      and b.data_cancellazione is null
     ) ,
      mifmax as (
      select max(b.flusso_elab_mif_id) flusso_elab_mif_id,
      a.mif_ord_anno,a.mif_ord_numero::integer
      from mif_t_ordinativo_spesa a, mif_t_flusso_elaborato b
      where a.ente_proprietario_id=p_ente_proprietario_id
      and b.flusso_elab_mif_id=a.mif_ord_flusso_elab_mif_id
      and b.flusso_elab_mif_esito='OK'
      and a.data_cancellazione is null
      and b.data_cancellazione is null
      group by a.mif_ord_anno,a.mif_ord_numero::integer
    ),
      descsiope as (
      select replace(substring(a.classif_code from p_ente_proprietario_id),'.', '') codice_siope,
         a.classif_desc descr_siope
      from  siac_t_class a, siac_d_class_tipo b
      where a.classif_tipo_id = b.classif_tipo_id
      and   b.classif_tipo_code = 'PDC_V'
      and   a.ente_proprietario_id = p_ente_proprietario_id
      and   substring(a.classif_code from 1 for 1) = 'U'
      and   a.data_cancellazione is null
      and   b.data_cancellazione is null
      union
      select a.classif_code codice_siope,
             a.classif_desc descr_siope
      from  siac_t_class a, siac_d_class_tipo b
      where a.classif_tipo_id = b.classif_tipo_id
      and   b.classif_tipo_code = 'SIOPE_SPESA_I'
      and   a.ente_proprietario_id = p_ente_proprietario_id
      and   a.data_cancellazione is null
      and   b.data_cancellazione is null
      )
    select mif1.*, descsiope.descr_siope
    from mif1
    left join descsiope on descsiope.codice_siope = mif1.mif_ord_class_codice_cge
    join mifmax on mif1.flusso_elab_mif_id=mifmax.flusso_elab_mif_id
    and  mif1.mif_ord_anno=mifmax.mif_ord_anno
    and  mif1.mif_ord_numero::integer=mifmax.mif_ord_numero) as tb
    ),
modpagcsc as ( -- SIAC-5228
SELECT  ordts.ord_id, rel.soggetto_id_da, oil.oil_relaz_tipo_code, tipo.relaz_tipo_code, tipo.relaz_tipo_desc
FROM  siac_t_ordinativo_ts ordts, siac_r_subdoc_ordinativo_ts subdocordts, siac_r_subdoc_modpag subdocmodpag, siac_r_soggrel_modpag sogrel,
      siac_r_soggetto_relaz rel, siac_r_oil_relaz_tipo roil, siac_d_relaz_tipo tipo , siac_d_oil_relaz_tipo oil
WHERE  ordts.ente_proprietario_id = p_ente_proprietario_id
AND    oil.oil_relaz_tipo_code = 'CSC'
AND    ordts.ord_ts_id = subdocordts.ord_ts_id
AND    subdocordts.subdoc_id = subdocmodpag.subdoc_id
AND    sogrel.modpag_id = subdocmodpag.modpag_id
AND    sogrel.soggetto_relaz_id = rel.soggetto_relaz_id
AND    rel.relaz_tipo_id = roil.relaz_tipo_id
AND    tipo.relaz_tipo_id = roil.relaz_tipo_id
AND    oil.oil_relaz_tipo_id = roil.oil_relaz_tipo_id
AND    p_data BETWEEN subdocordts.validita_inizio AND COALESCE(subdocordts.validita_fine, p_data)
AND    p_data BETWEEN subdocmodpag.validita_inizio AND COALESCE(subdocmodpag.validita_fine, p_data)
AND    p_data BETWEEN sogrel.validita_inizio AND COALESCE(sogrel.validita_fine, p_data)
AND    p_data BETWEEN rel.validita_inizio AND COALESCE(rel.validita_fine, p_data)
AND    p_data BETWEEN roil.validita_inizio AND COALESCE(roil.validita_fine, p_data)
AND    ordts.data_cancellazione is null
AND    subdocordts.data_cancellazione is null
AND    subdocmodpag.data_cancellazione is null
AND    sogrel.data_cancellazione is null
AND    rel.data_cancellazione is null
AND    roil.data_cancellazione is null
AND    tipo.data_cancellazione is null
AND    oil.data_cancellazione is null
)
select ordinativipag.ente_proprietario_id, ordinativipag.ente_denominazione, ordinativipag.anno,
ordinativipag.fase_operativa_code, ordinativipag.fase_operativa_desc,
ordinativipag.ord_anno, ordinativipag.ord_numero, ordinativipag.ord_desc, ordinativipag.ord_stato_code,
ordinativipag.ord_stato_desc, ordinativipag.ord_cast_cassa, ordinativipag.ord_cast_competenza,
ordinativipag.ord_cast_emessi, ordinativipag.ord_emissione_data, ordinativipag.ord_riduzione_data,
ordinativipag.ord_spostamento_data, ordinativipag.ord_variazione_data,ordinativipag.ord_beneficiariomult
,ordinativipag.ord_id, ordinativipag.bil_id, ordinativipag.comm_tipo_id,
ordinativipag.data_inizio_val_stato_ordpg,
ordinativipag.data_inizio_val_ordpg,
ordinativipag.data_creazione_ordpg,
ordinativipag.data_modifica_ordpg,
ordinativipag.codbollo_id,ordinativipag.contotes_id,
ordinativipag.dist_id,
ordinativipag.ord_trasm_oil_data,ordinativipag.siope_tipo_debito_code, ordinativipag.siope_tipo_debito_desc,
ordinativipag.siope_tipo_debito_desc_bnkit,ordinativipag.siope_assenza_motivazione_code,
ordinativipag.siope_assenza_motivazione_desc, ordinativipag.siope_assenza_motivazione_desc_bnkit,
cofog.codice_cofog_gruppo,
cofog.descrizione_cofog_gruppo,
cofog.codice_cofog_divisione,
cofog.descrizione_cofog_divisione,
pdc5.pdc5_codice_pdc_finanziario_V,pdc5.pdc5_descrizione_pdc_finanziario_V,
pdc5.pdc5_codice_pdc_finanziario_IV,pdc5.pdc5_descrizione_pdc_finanziario_IV,
pdc5.pdc5_codice_pdc_finanziario_III,pdc5.pdc5_descrizione_pdc_finanziario_III,
pdc5.pdc5_codice_pdc_finanziario_II,pdc5.pdc5_descrizione_pdc_finanziario_II,
pdc5.pdc5_codice_pdc_finanziario_I,pdc5.pdc5_descrizione_pdc_finanziario_I,
pdc4.pdc4_codice_pdc_finanziario_IV,pdc4.pdc4_descrizione_pdc_finanziario_IV,
pdc4.pdc4_codice_pdc_finanziario_III,pdc4.pdc4_descrizione_pdc_finanziario_III,
pdc4.pdc4_codice_pdc_finanziario_II,pdc4.pdc4_descrizione_pdc_finanziario_II,
pdc4.pdc4_codice_pdc_finanziario_I,pdc4.pdc4_descrizione_pdc_finanziario_I,
pce5.pce5_codice_pdc_economico_V,pce5.pce5_descrizione_pdc_economico_V,
pce5.pce5_codice_pdc_economico_IV,pce5.pce5_descrizione_pdc_economico_IV,
pce5.pce5_codice_pdc_economico_III,pce5.pce5_descrizione_pdc_economico_III,
pce5.pce5_codice_pdc_economico_II,pce5.pce5_descrizione_pdc_economico_II,
pce5.pce5_codice_pdc_economico_I,pce5.pce5_descrizione_pdc_economico_I,
pce4.pce4_codice_pdc_economico_IV,pce4.pce4_descrizione_pdc_economico_IV,
pce4.pce4_codice_pdc_economico_III,pce4.pce4_descrizione_pdc_economico_III,
pce4.pce4_codice_pdc_economico_II,pce4.pce4_descrizione_pdc_economico_II,
pce4.pce4_codice_pdc_economico_I,pce4.pce4_descrizione_pdc_economico_I,
attoamm.attoamm_anno, attoamm.attoamm_numero, attoamm.attoamm_oggetto, attoamm.attoamm_note,
attoamm.attoamm_tipo_code, attoamm.attoamm_tipo_desc, attoamm.attoamm_stato_desc, attoamm.attoamm_id,
attoamm.cdc_cdc_code,attoamm.cdc_cdc_desc,attoamm.cdc_cdr_code,attoamm.cdc_cdr_desc,
attoamm.cdr_cdc_code,attoamm.cdr_cdc_desc,attoamm.cdr_cdr_code,attoamm.cdr_cdr_desc,
t_flagAllegatoCartaceo.v_flagAllegatoCartaceo,
t_noteordinativo.v_note_ordinativo,
impiniziale.importo_iniziale,
impattuale.importo_attuale,
firma.v_data_firma, firma.v_firma,
ordinativipag.codbollo_code, ordinativipag.codbollo_desc,
ordinativipag.codbollo_id,
ordinativipag.comm_tipo_code, ordinativipag.comm_tipo_desc, ordinativipag.comm_tipo_id,
ordinativipag.contotes_code, ordinativipag.contotes_desc,ordinativipag.contotes_id,
ordinativipag.dist_code, ordinativipag.dist_desc,ordinativipag.dist_id,
--ordinativipag.ord_id,
ordinativipag.modpag_id ,
ordinativipag.v_soggetto_id_modpag,
ordinativipag.v_quietanziante,
ordinativipag.v_data_nascita_quietanziante,
ordinativipag.v_luogo_nascita_quietanziante,
ordinativipag.v_stato_nascita_quietanziante,
ordinativipag.v_bic, ordinativipag.v_contocorrente, ordinativipag.v_intestazione_contocorrente,
ordinativipag.v_iban,
ordinativipag.v_note_modalita_pagamento, ordinativipag.v_data_scadenza_modalita_pagamento,
ordinativipag.v_codice_soggetto_modpag, ordinativipag.v_descrizione_soggetto_modpag,
ordinativipag.v_codice_fiscale_soggetto_modpag,
ordinativipag.v_codice_fiscale_estero_soggetto_modpag, ordinativipag.v_partita_iva_soggetto_modpag,
ordinativipag.tipo_cessione ,
ordinativipag.cod_cessione  ,
ordinativipag.desc_cessione,
ordinativipag.accredito_tipo_id,
ordinativipag.v_codice_tipo_accredito,
ordinativipag.v_descrizione_tipo_accredito,
--ordinativipag.ord_id,
ordinativipag.soggetto_id,
ordinativipag.soggetto_code, ordinativipag.soggetto_desc, ordinativipag.codice_fiscale,
ordinativipag.codice_fiscale_estero, ordinativipag.partita_iva,
--ordinativipag.ord_id ,
ordinativipag.v_codice_tipo_avviso, ordinativipag.v_descrizione_tipo_avviso,
--ordinativipag.ord_id ,
ordinativipag.v_codice_spesa_ricorrente,
ordinativipag.v_descrizione_spesa_ricorrente,
--ordinativipag.ord_id ,
ordinativipag.v_codice_transazione_spesa_ue,
ordinativipag.v_descrizione_transazione_spesa_ue,
class21.*,class22.*,class23.*,class24.*,class25.*,
ordinativipag.v_codice_capitolo, ordinativipag.v_codice_articolo,
ordinativipag.v_codice_ueb, ordinativipag.v_descrizione_capitolo ,
ordinativipag.v_descrizione_articolo,
mif.mif_ord_class_codice_cge, mif.descr_siope,
modpagcsc.soggetto_id_da,      -- SIAC-5228
modpagcsc.oil_relaz_tipo_code, -- SIAC-5228
modpagcsc.relaz_tipo_code,     -- SIAC-5228
modpagcsc.relaz_tipo_desc,     -- SIAC-5228
ordinativipag.ord_da_trasmettere -- 20.06.2018 Sofia siac-6175
from ordinativipag
left join class21
on ordinativipag.ord_id=class21.ord_id
left join class22
on ordinativipag.ord_id=class22.ord_id
left join class23
on ordinativipag.ord_id=class23.ord_id
left join class24
on ordinativipag.ord_id=class24.ord_id
left join class25
on ordinativipag.ord_id=class25.ord_id
left join cofog
on ordinativipag.ord_id=cofog.ord_id
left join pdc5
on ordinativipag.ord_id=pdc5.ord_id
left join pdc4
on ordinativipag.ord_id=pdc4.ord_id
left join pce5
on ordinativipag.ord_id=pce5.ord_id
left join pce4
on ordinativipag.ord_id=pce4.ord_id
left join attoamm
on ordinativipag.ord_id=attoamm.ord_id
left join t_flagAllegatoCartaceo
on ordinativipag.ord_id=t_flagAllegatoCartaceo.ord_id
left join t_noteordinativo
on
ordinativipag.ord_id=t_noteordinativo.ord_id
left join impiniziale
on ordinativipag.ord_id=impiniziale.ord_id
left join impattuale
on ordinativipag.ord_id=impattuale.ord_id
left join firma
on ordinativipag.ord_id=firma.ord_id
left join mif on ordinativipag.ord_id = mif.mif_ord_ord_id
left join modpagcsc on ordinativipag.ord_id = modpagcsc.ord_id
) as tb;

esito:= 'Fine inserimento ordinativi in pagamento (siac_dwh_ordinativo_pagamento) - '||clock_timestamp();
RETURN NEXT;

 INSERT INTO siac.siac_dwh_subordinativo_pagamento
    (ente_proprietario_id,
    ente_denominazione,
    bil_anno,
    cod_fase_operativa,
    desc_fase_operativa,
    anno_ord_pag,
    num_ord_pag,
    desc_ord_pag,
    cod_stato_ord_pag,
    desc_stato_ord_pag,
    castelletto_cassa_ord_pag,
    castelletto_competenza_ord_pag,
    castelletto_emessi_ord_pag,
    data_emissione,
    data_riduzione,
    data_spostamento,
    data_variazione,
    beneficiario_multiplo,
    num_subord_pag,
    desc_subord_pag,
    data_esecuzione_pagamento,
    importo_iniziale,
    importo_attuale,
    cod_onere,
    desc_onere,
    cod_tipo_onere,
    desc_tipo_onere,
    importo_carico_ente,
    importo_carico_soggetto,
    importo_imponibile,
    inizio_attivita,
    fine_attivita,
    cod_causale,
    desc_causale,
    cod_attivita_onere,
    desc_attivita_onere,
    anno_liquidazione,
    num_liquidazione,
    desc_liquidazione,
    data_emissione_liquidazione,
    importo_liquidazione,
    liquidazione_automatica,
    liquidazione_convalida_manuale,
    cup,
    cig,
    data_inizio_val_stato_ordpg,
    data_inizio_val_subordpg,
    data_creazione_subordpg,
    data_modifica_subordpg,
      --04/07/2017: SIAC-5037 aggiunta gestione dei documenti
    cod_gruppo_doc,
  	desc_gruppo_doc ,
    cod_famiglia_doc ,
    desc_famiglia_doc ,
    cod_tipo_doc ,
    desc_tipo_doc ,
    anno_doc ,
    num_doc ,
    num_subdoc ,
    cod_sogg_doc,
    doc_id -- SIAC-5573
    )
select tb.ente_proprietario_id, tb.ente_denominazione, tb.anno, tb.fase_operativa_code,tb.fase_operativa_desc,
tb.ord_anno, tb.ord_numero,tb.ord_desc, tb.ord_stato_code,tb.ord_stato_desc,
tb.ord_cast_cassa, tb.ord_cast_competenza, tb.ord_cast_emessi,
tb.ord_emissione_data, tb.ord_riduzione_data, tb.ord_spostamento_data, tb.ord_variazione_data,
case when tb.ord_beneficiariomult=true then 'T' else 'F' end ord_beneficiariomult,

tb.ord_ts_code, tb.ord_ts_desc, tb.ord_ts_data_scadenza, tb.importo_iniziale, tb.importo_attuale,
tb.onere_code, tb.onere_desc,tb.onere_tipo_code, tb.onere_tipo_desc   ,
tb.importo_carico_ente, tb.importo_carico_soggetto, tb.importo_imponibile,
tb.attivita_inizio, tb.attivita_fine,tb.v_caus_code, tb.v_caus_desc,
tb.v_onere_att_code, tb.v_onere_att_desc,
tb.v_liq_anno,tb.v_liq_numero, tb.v_liq_desc, tb.v_liq_emissione_data,
tb.v_liq_importo, tb.v_liq_automatica, tb.liq_convalida_manuale,
tb.cup,tb.cig,
tb.data_inizio_val_stato_ordpg,
tb.data_inizio_val_subordpg,
tb.data_creazione_subordpg,
tb.data_modifica_subordpg,
  --04/07/2017: SIAC-5037 aggiunta gestione dei documenti
tb.doc_gruppo_tipo_code,
tb.doc_gruppo_tipo_desc,
tb.doc_fam_tipo_code,
tb.doc_fam_tipo_desc,
tb.doc_tipo_code,
tb.doc_tipo_desc,
tb.doc_anno,
tb.doc_numero,
tb.subdoc_numero,
tb.soggetto_code,
tb.doc_id
-- SIAC-5573
from (
with suball as (
with subordinativipag as (
with ord_pag as (
SELECT d.ente_proprietario_id, d.ente_denominazione, c.anno, i.fase_operativa_code, i.fase_operativa_desc,
       a.ord_anno, a.ord_numero, a.ord_desc, g.ord_stato_code, g.ord_stato_desc, a.ord_cast_cassa, a.ord_cast_competenza,
       a.ord_cast_emessi, a.ord_emissione_data, a.ord_riduzione_data, a.ord_spostamento_data, a.ord_variazione_data,
       a.ord_beneficiariomult,a.ord_id,
       b.bil_id, a.comm_tipo_id,
       f.validita_inizio as data_inizio_val_stato_ordpg,
       a.validita_inizio as data_inizio_val_ordpg,
       a.data_creazione as data_creazione_ordpg,
       a.data_modifica as data_modifica_ordpg,
       a.codbollo_id,a.contotes_id,a.dist_id, l.ord_ts_id,
       l.ord_ts_code, l.ord_ts_desc, l.ord_ts_data_scadenza,
        l.validita_inizio as data_inizio_val_subordpg,
         l.data_creazione as data_creazione_subordpg,
         l.data_modifica as data_modifica_subordpg
FROM siac_t_ordinativo a, siac_t_bil b, siac_t_periodo c, siac_t_ente_proprietario d,
siac_d_ordinativo_tipo e, siac_r_ordinativo_stato f, siac_d_ordinativo_stato g ,
 siac_r_bil_fase_operativa h, siac_d_fase_operativa i ,siac_t_ordinativo_ts l
where  d.ente_proprietario_id = p_ente_proprietario_id and
c.anno = p_anno_bilancio
AND e.ord_tipo_code = 'P' and
a.bil_id = b.bil_id and
c.periodo_id = b.periodo_id and
d.ente_proprietario_id = a.ente_proprietario_id and
a.ord_tipo_id = e.ord_tipo_id AND
f.ord_id = a.ord_id  and
f.ord_stato_id = g.ord_stato_id
and l.ord_id=a.ord_id
AND p_data BETWEEN f.validita_inizio AND COALESCE(f.validita_fine, p_data)
and h.fase_operativa_id = i.fase_operativa_id
AND   h.bil_id = b.bil_id
AND p_data BETWEEN h.validita_inizio AND COALESCE(h.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
and d.data_cancellazione is null
and e.data_cancellazione is null
and f.data_cancellazione is null
and g.data_cancellazione is null),
bollo as (select
a.codbollo_code, a.codbollo_desc,
a.codbollo_id from siac_d_codicebollo a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null
),
contotes as  (select
a.contotes_code, a.contotes_desc,a.contotes_id from siac_d_contotesoreria a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null
)
,
dist as  (select a.dist_code, a.dist_desc,a.dist_id from siac_d_distinta a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null
),
commis as  (select a.comm_tipo_code, a.comm_tipo_desc, a.comm_tipo_id from
siac_d_commissione_tipo a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null
),
bilelem as (SELECT b.ord_id,
a.elem_code v_codice_capitolo, a.elem_code2 v_codice_articolo,
a.elem_code3 v_codice_ueb, a.elem_desc v_descrizione_capitolo ,
a.elem_desc2 v_descrizione_articolo
FROM siac.siac_t_bil_elem a, siac_r_ordinativo_bil_elem b
WHERE a.elem_id = b.elem_id
and b.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is NULL
and b.data_cancellazione is NULL),
modpag as (
with mod as (
select a.ord_id, b.modpag_id ,
b.soggetto_id v_soggetto_id_modpag, b.accredito_tipo_id v_accredito_tipo_id,
b.quietanziante v_quietanziante, b.quietanzante_nascita_data v_data_nascita_quietanziante,
b.quietanziante_nascita_luogo v_luogo_nascita_quietanziante,
       b.quietanziante_nascita_stato v_stato_nascita_quietanziante,
       b.bic v_bic, b.contocorrente v_contocorrente, b.contocorrente_intestazione v_intestazione_contocorrente,
       b.iban v_iban,
       b.note v_note_modalita_pagamento, b.data_scadenza v_data_scadenza_modalita_pagamento,
 c.soggetto_code v_codice_soggetto_modpag, c.soggetto_desc v_descrizione_soggetto_modpag,
  c.codice_fiscale v_codice_fiscale_soggetto_modpag,
  c.codice_fiscale_estero v_codice_fiscale_estero_soggetto_modpag, c.partita_iva v_partita_iva_soggetto_modpag
  , b.accredito_tipo_id
from siac_r_ordinativo_modpag a,
siac_t_modpag b,siac_t_soggetto c
where a.modpag_id=b.modpag_id and a.ente_proprietario_id=p_ente_proprietario_id
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and c.soggetto_id=b.soggetto_id
and a.data_cancellazione is null and b.data_cancellazione is null
and c.data_cancellazione is null),
acc as (select
a.accredito_tipo_id,
a.accredito_tipo_code v_codice_tipo_accredito, a.accredito_tipo_desc v_descrizione_tipo_accredito
from siac_d_accredito_tipo a where a.ente_proprietario_id=p_ente_proprietario_id
and a.data_cancellazione is null)
select * from mod left join acc
on mod.accredito_tipo_id=acc.accredito_tipo_id
)
,
sogg as (
SELECT
c.ord_id,
d.soggetto_code, d.soggetto_desc, d.codice_fiscale, d.codice_fiscale_estero, d.partita_iva
FROM siac_r_soggetto_relaz a, siac_d_relaz_tipo b,siac_r_ordinativo_soggetto c,siac_t_soggetto d
WHERE
a.ente_proprietario_id=p_ente_proprietario_id and
a.relaz_tipo_id = b.relaz_tipo_id
AND   b.relaz_tipo_code  = 'SEDE_SECONDARIA'
and c.soggetto_id=a.soggetto_id_da
and p_data BETWEEN c.validita_inizio AND COALESCE(c.validita_fine, p_data)
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and d.soggetto_id=c.soggetto_id
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
union
select b.ord_id,
a.soggetto_code, a.soggetto_desc, a.codice_fiscale, a.codice_fiscale_estero, a.partita_iva
 from siac_t_soggetto a, siac_r_ordinativo_soggetto b
where a.ente_proprietario_id=p_ente_proprietario_id
and a.soggetto_id=b.soggetto_id
and p_data BETWEEN b.validita_inizio AND COALESCE(b.validita_fine, p_data)
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
),
--classificatori non gerarchici
tipoavviso as (
SELECT
a.ord_id ,b.classif_code v_codice_tipo_avviso, b.classif_desc v_descrizione_tipo_avviso
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='TIPO_AVVISO'
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
),
ricspesa as (
SELECT
a.ord_id ,b.classif_code v_codice_spesa_ricorrente, b.classif_desc v_descrizione_spesa_ricorrente
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='RICORRENTE_SPESA'
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
transue as (
SELECT
a.ord_id ,b.classif_code v_codice_transazione_spesa_ue, b.classif_desc v_descrizione_transazione_spesa_ue
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='TRANSAZIONE_UE_SPESA'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
select ord_pag.*,
bollo.codbollo_code, bollo.codbollo_desc,
contotes.contotes_code, contotes.contotes_desc,
dist.dist_code, dist.dist_desc,
commis.comm_tipo_code, commis.comm_tipo_desc,
bilelem.v_codice_capitolo,bilelem.v_codice_articolo,
bilelem.v_codice_ueb,bilelem.v_descrizione_capitolo ,
bilelem.v_descrizione_articolo,
modpag.modpag_id,modpag.v_soggetto_id_modpag, modpag.v_accredito_tipo_id,
modpag.v_quietanziante,modpag.v_data_nascita_quietanziante,
modpag.v_luogo_nascita_quietanziante,modpag.v_stato_nascita_quietanziante,modpag.v_bic, modpag.v_contocorrente,
modpag.v_intestazione_contocorrente,modpag.v_iban,
modpag.v_note_modalita_pagamento,modpag.v_data_scadenza_modalita_pagamento,
modpag.v_codice_soggetto_modpag,modpag.v_descrizione_soggetto_modpag,
modpag.v_codice_fiscale_soggetto_modpag,modpag.v_codice_fiscale_estero_soggetto_modpag,
modpag.v_partita_iva_soggetto_modpag,--modpag.accredito_tipo_id,
modpag.v_codice_tipo_accredito,modpag.v_descrizione_tipo_accredito,
sogg.soggetto_code, sogg.soggetto_desc, sogg.codice_fiscale, sogg.codice_fiscale_estero, sogg.partita_iva,
tipoavviso.v_codice_tipo_avviso,tipoavviso.v_descrizione_tipo_avviso,
ricspesa.v_codice_spesa_ricorrente, ricspesa.v_descrizione_spesa_ricorrente,
transue.v_codice_transazione_spesa_ue, transue.v_descrizione_transazione_spesa_ue
from ord_pag
left join bollo
on ord_pag.codbollo_id=bollo.codbollo_id
left join contotes
on ord_pag.contotes_id=contotes.contotes_id
left join dist
on ord_pag.dist_id=dist.dist_id
left join commis
on ord_pag.comm_tipo_id=commis.comm_tipo_id
left join bilelem
on ord_pag.ord_id=bilelem.ord_id
left join modpag
on ord_pag.ord_id=modpag.ord_id
left join sogg
on ord_pag.ord_id=sogg.ord_id
left join tipoavviso
on ord_pag.ord_id=tipoavviso.ord_id
left join ricspesa
on ord_pag.ord_id=ricspesa.ord_id
left join transue
on ord_pag.ord_id=transue.ord_id
)--fine sub ordinativipag
,
class21 as (
SELECT
a.ord_id ,
c.classif_tipo_desc v_classificatore_generico_1,
b.classif_code v_classificatore_generico_1_valore, b.classif_desc v_classificatore_generico_1_descrizione_valore
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_21'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
class22 as (
SELECT
a.ord_id ,
c.classif_tipo_desc v_classificatore_generico_2,
b.classif_code v_classificatore_generico_2_valore, b.classif_desc v_classificatore_generico_2_descrizione_valore
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_22'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
class23 as (
SELECT
a.ord_id ,
c.classif_tipo_desc v_classificatore_generico_3,
b.classif_code v_classificatore_generico_3_valore, b.classif_desc v_classificatore_generico_3_descrizione_valore
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_23'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
class24 as (
SELECT
a.ord_id ,
c.classif_tipo_desc v_classificatore_generico_4,
b.classif_code v_classificatore_generico_4_valore, b.classif_desc v_classificatore_generico_4_descrizione_valore
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_24'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
)
,
class25 as (
SELECT
a.ord_id ,
c.classif_tipo_desc v_classificatore_generico_5,
b.classif_code v_classificatore_generico_5_valore, b.classif_desc v_classificatore_generico_5_descrizione_valore
 from siac_r_ordinativo_class a, siac_t_class b, siac_d_class_tipo c
where
a.ente_proprietario_id =p_ente_proprietario_id
and a.classif_id=b.classif_id
and b.classif_tipo_id=c.classif_tipo_id
and c.classif_tipo_code='CLASSIFICATORE_25'
AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
),

cofog as (
select distinct r.ord_id,
a.classif_code codice_cofog_gruppo,a.classif_desc descrizione_cofog_gruppo,
a2.classif_code codice_cofog_divisione,a2.classif_desc descrizione_cofog_divisione
from
siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--DIVISIONE_COFOG
siac_r_class_fam_tree d2,
siac_t_class a2
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='GRUPPO_COFOG'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine, p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null)
, pdc5 as (
select distinct
r.ord_id,
a.classif_code pdc5_codice_pdc_finanziario_V,a.classif_desc pdc5_descrizione_pdc_finanziario_V,
a2.classif_code pdc5_codice_pdc_finanziario_IV,a2.classif_desc pdc5_descrizione_pdc_finanziario_IV,
a3.classif_code pdc5_codice_pdc_finanziario_III,a3.classif_desc pdc5_descrizione_pdc_finanziario_III,
a4.classif_code pdc5_codice_pdc_finanziario_II,a4.classif_desc pdc5_descrizione_pdc_finanziario_II,
a5.classif_code pdc5_codice_pdc_finanziario_I,a5.classif_desc pdc5_descrizione_pdc_finanziario_I
 from siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4,
--PDC_I
siac_r_class_fam_tree d5,
siac_t_class a5
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PDC_V'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and d5.classif_id=a4.classif_id
and a5.classif_id=d5.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d3.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
and p_data BETWEEN d5.validita_inizio and COALESCE(d5.validita_fine,p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null
and d3.data_cancellazione is null
and a3.data_cancellazione is null
and d4.data_cancellazione is null
and a4.data_cancellazione is null
and d5.data_cancellazione is null
and a5.data_cancellazione is null
)
, pdc4 as (
select distinct r.ord_id,
a.classif_code pdc4_codice_pdc_finanziario_IV,a.classif_desc pdc4_descrizione_pdc_finanziario_IV,
a2.classif_code pdc4_codice_pdc_finanziario_III,a2.classif_desc pdc4_descrizione_pdc_finanziario_III,
a3.classif_code pdc4_codice_pdc_finanziario_II,a3.classif_desc pdc4_descrizione_pdc_finanziario_II,
a4.classif_code pdc4_codice_pdc_finanziario_I,a4.classif_desc pdc4_descrizione_pdc_finanziario_I
 from siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PDC_IV'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d3.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null
and d3.data_cancellazione is null
and a3.data_cancellazione is null
and d4.data_cancellazione is null
and a4.data_cancellazione is null
)
, pce5 as (
select distinct r.ord_id,
--r.classif_id,
a.classif_code pce5_codice_pdc_economico_V,a.classif_desc pce5_descrizione_pdc_economico_V,
a2.classif_code pce5_codice_pdc_economico_IV,a2.classif_desc pce5_descrizione_pdc_economico_IV,
a3.classif_code pce5_codice_pdc_economico_III,a3.classif_desc pce5_descrizione_pdc_economico_III,
a4.classif_code pce5_codice_pdc_economico_II,a4.classif_desc pce5_descrizione_pdc_economico_II,
a5.classif_code pce5_codice_pdc_economico_I,a5.classif_desc pce5_descrizione_pdc_economico_I
 from siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4,
--PDC_I
siac_r_class_fam_tree d5,
siac_t_class a5
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PCE_V'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and d5.classif_id=a4.classif_id
and a5.classif_id=d5.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d3.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
and p_data BETWEEN d5.validita_inizio and COALESCE(d5.validita_fine,p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null
and d3.data_cancellazione is null
and a3.data_cancellazione is null
and d4.data_cancellazione is null
and a4.data_cancellazione is null
and d5.data_cancellazione is null
and a5.data_cancellazione is null
)
, pce4 as (
select distinct r.ord_id,
a.classif_code pce4_codice_pdc_economico_IV,a.classif_desc pce4_descrizione_pdc_economico_IV,
a2.classif_code pce4_codice_pdc_economico_III,a2.classif_desc pce4_descrizione_pdc_economico_III,
a3.classif_code pce4_codice_pdc_economico_II,a3.classif_desc pce4_descrizione_pdc_economico_II,
a4.classif_code pce4_codice_pdc_economico_I,a4.classif_desc pce4_descrizione_pdc_economico_I
 from siac_r_ordinativo_class r,
siac_t_class a,siac_d_class_tipo b,
--PDC_IV
siac_r_class_fam_tree d2,
siac_t_class a2,
--PDC_III
siac_r_class_fam_tree d3,
siac_t_class a3,
--PDC_II
siac_r_class_fam_tree d4,
siac_t_class a4
where
r.ente_proprietario_id=p_ente_proprietario_id
and  a.classif_id=r.classif_id
and a.classif_tipo_id=b.classif_tipo_id
and b.classif_tipo_code='PCE_IV'
and d2.classif_id=a.classif_id
and a2.classif_id=d2.classif_id_padre
and d3.classif_id=a2.classif_id
and a3.classif_id=d3.classif_id_padre
and d4.classif_id=a3.classif_id
and a4.classif_id=d4.classif_id_padre
and p_data BETWEEN r.validita_inizio and COALESCE(r.validita_fine,p_data)
and p_data BETWEEN d2.validita_inizio and COALESCE(d2.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d3.validita_fine,p_data)
and p_data BETWEEN d4.validita_inizio and COALESCE(d4.validita_fine,p_data)
and r.data_cancellazione is null
and a.data_cancellazione is null
and b.data_cancellazione is null
and d2.data_cancellazione is null
and a2.data_cancellazione is null
and d3.data_cancellazione is null
and a3.data_cancellazione is null
and d4.data_cancellazione is null
and a4.data_cancellazione is null
),
--atto amm
attoamm as (
with atmc as (
with atm as (
SELECT
a.ord_id,
b.attoamm_anno, b.attoamm_numero, b.attoamm_oggetto, b.attoamm_note,
       e.attoamm_tipo_code, e.attoamm_tipo_desc, d.attoamm_stato_desc, b.attoamm_id
FROM
siac.siac_r_ordinativo_atto_amm a,
siac.siac_t_atto_amm b, siac.siac_r_atto_amm_stato c,
siac.siac_d_atto_amm_stato d, siac.siac_d_atto_amm_tipo e
WHERE
a.ente_proprietario_id=p_ente_proprietario_id
and a.attoamm_id=b.attoamm_id
AND c.attoamm_id = b.attoamm_id
AND d.attoamm_stato_id = c.attoamm_stato_id
AND e.attoamm_tipo_id = b.attoamm_tipo_id
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
--AND
AND   a.data_cancellazione IS NULL
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   d.data_cancellazione IS NULL
AND   e.data_cancellazione IS NULL
)
, atmrclass as (select a.attoamm_id,a.classif_id from siac_r_atto_amm_class a where
a.ente_proprietario_id=p_ente_proprietario_id and
a.data_cancellazione is null and
 p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
)
select atm.*,atmrclass.classif_id from atm left join atmrclass
on atmrclass.attoamm_id=atm.attoamm_id
)
,
cdc as (
select a.classif_id,a.classif_code cdc_cdc_code,a.classif_desc cdc_cdc_desc
,a2.classif_code cdc_cdr_code,a2.classif_desc cdc_cdr_desc
 from siaC_t_class a,siac_d_class_tipo b, siac_r_class_fam_tree c,siaC_t_class a2
where a.ente_proprietario_id=p_ente_proprietario_id
and b.classif_tipo_id=a.classif_tipo_id
and b.classif_tipo_code='CDC'
and c.classif_id=a.classif_id
and p_data BETWEEN c.validita_inizio AND COALESCE(c.validita_fine, p_data)
and a2.classif_id=c.classif_id_padre
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
and a2.data_cancellazione is null)
,cdr as (
select a.classif_id,null cdr_cdc_code,null cdr_cdc_desc
,a.classif_code cdr_cdr_code,a.classif_desc cdr_cdr_desc
 from siaC_t_class a,siac_d_class_tipo b
 where a.ente_proprietario_id=p_ente_proprietario_id
and b.classif_tipo_id=a.classif_tipo_id
and b.classif_tipo_code='CDR'
and a.data_cancellazione is null
and b.data_cancellazione is null)
select
atmc.ord_id,
atmc.attoamm_anno, atmc.attoamm_numero, atmc.attoamm_oggetto, atmc.attoamm_note,
atmc.attoamm_tipo_code, atmc.attoamm_tipo_desc, atmc.attoamm_stato_desc, atmc.attoamm_id,
cdc.cdc_cdc_code,cdc.cdc_cdc_desc,cdc.cdc_cdr_code,cdc.cdc_cdr_desc,
cdr.cdr_cdc_code,cdr.cdr_cdc_desc,cdr.cdr_cdr_code,cdr.cdr_cdr_desc
from atmc left join cdc on
atmc.classif_id=cdc.classif_id
left join cdr on
atmc.classif_id=cdr.classif_id)
--sezione attributi
, t_flagAllegatoCartaceo as (
SELECT
a.ord_id
, a.testo v_flagAllegatoCartaceo
FROM   siac.siac_r_ordinativo_attr a, siac.siac_t_attr b
WHERE
b.attr_code='flagAllegatoCartaceo' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL)
, t_noteordinativo as (
SELECT
a.ord_id
, a.testo v_note_ordinativo
FROM   siac.siac_r_ordinativo_attr a, siac.siac_t_attr b
WHERE
b.attr_code='NOTE_ORDINATIVO' and
a.ente_proprietario_id=p_ente_proprietario_id and
 a.attr_id = b.attr_id
AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL)
select
subordinativipag.ente_proprietario_id, subordinativipag.ente_denominazione, subordinativipag.anno, subordinativipag.fase_operativa_code,
subordinativipag.fase_operativa_desc,subordinativipag.ord_anno, subordinativipag.ord_numero, subordinativipag.ord_desc,
 subordinativipag.ord_stato_code, subordinativipag.ord_stato_desc, subordinativipag.ord_cast_cassa, subordinativipag.ord_cast_competenza,
subordinativipag.ord_cast_emessi, subordinativipag.ord_emissione_data, subordinativipag.ord_riduzione_data,
subordinativipag.ord_spostamento_data, subordinativipag.ord_variazione_data, subordinativipag.ord_beneficiariomult,
subordinativipag.ord_ts_code, subordinativipag.ord_ts_desc, subordinativipag.ord_ts_data_scadenza,
subordinativipag.ord_id,subordinativipag.bil_id, subordinativipag.comm_tipo_id,
subordinativipag.data_inizio_val_stato_ordpg,subordinativipag.data_inizio_val_ordpg,subordinativipag.data_creazione_ordpg,
subordinativipag.data_modifica_ordpg,subordinativipag.codbollo_id,subordinativipag.contotes_id,subordinativipag.dist_id,
subordinativipag.ord_ts_id,
subordinativipag.data_inizio_val_subordpg,subordinativipag.data_creazione_subordpg,subordinativipag.data_modifica_subordpg,
cofog.codice_cofog_gruppo,cofog.descrizione_cofog_gruppo,cofog.codice_cofog_divisione,cofog.descrizione_cofog_divisione,
pdc5.pdc5_codice_pdc_finanziario_V,pdc5.pdc5_descrizione_pdc_finanziario_V,
pdc5.pdc5_codice_pdc_finanziario_IV,pdc5.pdc5_descrizione_pdc_finanziario_IV,
pdc5.pdc5_codice_pdc_finanziario_III,pdc5.pdc5_descrizione_pdc_finanziario_III,
pdc5.pdc5_codice_pdc_finanziario_II,pdc5.pdc5_descrizione_pdc_finanziario_II,
pdc5.pdc5_codice_pdc_finanziario_I,pdc5.pdc5_descrizione_pdc_finanziario_I,
pdc4.pdc4_codice_pdc_finanziario_IV,pdc4.pdc4_descrizione_pdc_finanziario_IV,
pdc4.pdc4_codice_pdc_finanziario_III,pdc4.pdc4_descrizione_pdc_finanziario_III,
pdc4.pdc4_codice_pdc_finanziario_II,pdc4.pdc4_descrizione_pdc_finanziario_II,
pdc4.pdc4_codice_pdc_finanziario_I,pdc4.pdc4_descrizione_pdc_finanziario_I,
pce5.pce5_codice_pdc_economico_V,pce5.pce5_descrizione_pdc_economico_V,
pce5.pce5_codice_pdc_economico_IV,pce5.pce5_descrizione_pdc_economico_IV,
pce5.pce5_codice_pdc_economico_III,pce5.pce5_descrizione_pdc_economico_III,
pce5.pce5_codice_pdc_economico_II,pce5.pce5_descrizione_pdc_economico_II,
pce5.pce5_codice_pdc_economico_I,pce5.pce5_descrizione_pdc_economico_I,
pce4.pce4_codice_pdc_economico_IV,pce4.pce4_descrizione_pdc_economico_IV,
pce4.pce4_codice_pdc_economico_III,pce4.pce4_descrizione_pdc_economico_III,
pce4.pce4_codice_pdc_economico_II,pce4.pce4_descrizione_pdc_economico_II,
pce4.pce4_codice_pdc_economico_I,pce4.pce4_descrizione_pdc_economico_I,
attoamm.attoamm_anno, attoamm.attoamm_numero, attoamm.attoamm_oggetto, attoamm.attoamm_note,
attoamm.attoamm_tipo_code, attoamm.attoamm_tipo_desc, attoamm.attoamm_stato_desc, attoamm.attoamm_id,
attoamm.cdc_cdc_code,attoamm.cdc_cdc_desc,attoamm.cdc_cdr_code,attoamm.cdc_cdr_desc,
attoamm.cdr_cdc_code,attoamm.cdr_cdc_desc,attoamm.cdr_cdr_code,attoamm.cdr_cdr_desc,
t_flagAllegatoCartaceo.v_flagAllegatoCartaceo,
t_noteordinativo.v_note_ordinativo
from subordinativipag
left join class21
on subordinativipag.ord_id=class21.ord_id
left join class22
on subordinativipag.ord_id=class22.ord_id
left join class23
on subordinativipag.ord_id=class23.ord_id
left join class24
on subordinativipag.ord_id=class24.ord_id
left join class25
on subordinativipag.ord_id=class25.ord_id
left join cofog
on subordinativipag.ord_id=cofog.ord_id
left join pdc5
on subordinativipag.ord_id=pdc5.ord_id
left join pdc4
on subordinativipag.ord_id=pdc4.ord_id
left join pce5
on subordinativipag.ord_id=pce5.ord_id
left join pce4
on subordinativipag.ord_id=pce4.ord_id
left join attoamm
on subordinativipag.ord_id=attoamm.ord_id
left join t_flagAllegatoCartaceo
on subordinativipag.ord_id=t_flagAllegatoCartaceo.ord_id
left join t_noteordinativo
on subordinativipag.ord_id=t_noteordinativo.ord_id
)
select suball.*
,
t_cig.cig,
t_cup.cup,
impiniziale.importo_iniziale,
impattuale.importo_attuale,
firma.v_data_firma, firma.v_firma,
ons.*,liq.*, elenco_doc.*
 from suball
 left join
 (
SELECT
a.sord_id
, c.testo cig
FROM   siac_r_liquidazione_ord a, siac_t_attr b,siac_r_liquidazione_attr c
WHERE
b.attr_code='cig' and
a.ente_proprietario_id=p_ente_proprietario_id and
 c.attr_id = b.attr_id
 and c.liq_id=a.liq_id
AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    p_data BETWEEN c.validita_inizio AND COALESCE(c.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    c.data_cancellazione IS NULL) t_cig on t_cig.sord_id=suball.ord_ts_id
  left join (SELECT a.sord_id, c.testo cup
FROM   siac_r_liquidazione_ord a, siac_t_attr b,siac_r_liquidazione_attr c
WHERE b.attr_code='cup' and a.ente_proprietario_id=p_ente_proprietario_id and
 c.attr_id = b.attr_id and c.liq_id=a.liq_id
AND    p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
AND    p_data BETWEEN c.validita_inizio AND COALESCE(c.validita_fine, p_data)
AND    a.data_cancellazione IS NULL
AND    b.data_cancellazione IS NULL
AND    c.data_cancellazione IS NULL) t_cup on t_cup.sord_id=suball.ord_ts_id
left join (SELECT COALESCE(SUM(b.ord_ts_det_importo),0) importo_iniziale, b.ord_ts_id
FROM   siac.siac_t_ordinativo_ts a, siac.siac_t_ordinativo_ts_det b, siac.siac_d_ordinativo_ts_det_tipo c
WHERE a.ente_proprietario_id=p_ente_proprietario_id and a.ord_ts_id = b.ord_ts_id
AND    c.ord_ts_det_tipo_id = b.ord_ts_det_tipo_id
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.data_cancellazione IS NULL
and c.ord_ts_det_tipo_code='I'
GROUP BY b.ord_ts_id) impiniziale on suball.ord_ts_id=impiniziale.ord_ts_id
left join (SELECT COALESCE(SUM(b.ord_ts_det_importo),0) importo_attuale,
b.ord_ts_id FROM siac.siac_t_ordinativo_ts a, siac.siac_t_ordinativo_ts_det b, siac.siac_d_ordinativo_ts_det_tipo c
WHERE a.ente_proprietario_id=p_ente_proprietario_id and a.ord_ts_id = b.ord_ts_id
AND    c.ord_ts_det_tipo_id = b.ord_ts_det_tipo_id
AND   b.data_cancellazione IS NULL
AND   c.data_cancellazione IS NULL
AND   a.data_cancellazione IS NULL
and c.ord_ts_det_tipo_code='A'
GROUP BY
b.ord_ts_id) impattuale on suball.ord_ts_id=impattuale.ord_ts_id
left join (select a.ord_id, a.ord_firma_data v_data_firma, a.ord_firma v_firma
 from siac_r_ordinativo_firma a where a.ente_proprietario_id=p_ente_proprietario_id
AND   a.data_cancellazione IS NULL
AND   p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data))
firma  on suball.ord_id=firma.ord_id
left join (
with  onere as (
select a.ord_ts_id,
c.onere_code, c.onere_desc, d.onere_tipo_code, d.onere_tipo_desc,
b.importo_carico_ente, b.importo_carico_soggetto, b.importo_imponibile,
b.attivita_inizio, b.attivita_fine, b.caus_id, b.onere_att_id
from  siac_r_doc_onere_ordinativo_ts  a,siac_r_doc_onere b,siac_d_onere c,siac_d_onere_tipo d
where
a.ente_proprietario_id=p_ente_proprietario_id and
 b.doc_onere_id=a.doc_onere_id
and c.onere_id=b.onere_id
and d.onere_tipo_id=c.onere_tipo_id
and a.data_cancellazione is null
and b.data_cancellazione is null
and c.data_cancellazione is null
and d.data_cancellazione is null
 AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
 AND p_data BETWEEN b.validita_inizio AND COALESCE(b.validita_fine, p_data)
),
 causale as (SELECT
 dc.caus_id,
 dc.caus_code v_caus_code, dc.caus_desc v_caus_desc
  FROM siac.siac_d_causale dc
  WHERE  dc.ente_proprietario_id=p_ente_proprietario_id and  dc.data_cancellazione IS NULL)
 ,
 onatt as (
 -- Sezione per l'onere
  SELECT
  doa.onere_att_id,
  doa.onere_att_code v_onere_att_code, doa.onere_att_desc v_onere_att_desc
  FROM siac_d_onere_attivita doa
  WHERE --doa.onere_att_id = v_onere_att_id
  doa.ente_proprietario_id=p_ente_proprietario_id
    AND doa.data_cancellazione IS NULL)
select * from onere left join causale
on onere.caus_id= causale.caus_id
left join onatt
on onere.onere_att_id=onatt.onere_att_id) ons
on suball.ord_ts_id=ons.ord_ts_id
left join (select a.sord_id,
b.liq_anno v_liq_anno, b.liq_numero v_liq_numero, b.liq_desc v_liq_desc, b.liq_emissione_data v_liq_emissione_data,
         b.liq_importo v_liq_importo, b.liq_automatica v_liq_automatica, b.liq_convalida_manuale
 FROM siac_r_liquidazione_ord a, siac_t_liquidazione b
  WHERE a.liq_id = b.liq_id
  AND p_data BETWEEN a.validita_inizio AND COALESCE(a.validita_fine, p_data)
  AND a.data_cancellazione IS NULL
  AND b.data_cancellazione IS NULL ) liq
  on suball.ord_ts_id=liq.sord_id
left join   (
		select distinct d_doc_gruppo.doc_gruppo_tipo_code, d_doc_gruppo.doc_gruppo_tipo_desc,
    	d_doc_fam_tipo.doc_fam_tipo_code, d_doc_fam_tipo.doc_fam_tipo_desc,
        d_doc_tipo.doc_tipo_code, d_doc_tipo.doc_tipo_desc,
        t_doc.doc_numero, t_doc.doc_anno, t_subdoc.subdoc_numero,
        t_soggetto.soggetto_code,
        r_subdoc_ord_ts.ord_ts_id,
        t_doc.doc_id -- SIAC-5573
    from siac_t_doc t_doc
    		LEFT JOIN siac_r_doc_sog r_doc_sog
            	ON (r_doc_sog.doc_id=t_doc.doc_id
                	AND r_doc_sog.data_cancellazione IS NULL
                    AND p_data BETWEEN r_doc_sog.validita_inizio AND
                    	COALESCE(r_doc_sog.validita_fine, p_data))
            LEFT JOIN siac_t_soggetto t_soggetto
            	ON (t_soggetto.soggetto_id=r_doc_sog.soggetto_id
                	AND t_soggetto.data_cancellazione IS NULL),
		siac_t_subdoc t_subdoc,
    	siac_d_doc_tipo d_doc_tipo
        	LEFT JOIN siac_d_doc_gruppo d_doc_gruppo
            	ON (d_doc_gruppo.doc_gruppo_tipo_id=d_doc_tipo.doc_gruppo_tipo_id
                	AND d_doc_gruppo.data_cancellazione IS NULL),
    	siac_d_doc_fam_tipo d_doc_fam_tipo,
        siac_r_subdoc_ordinativo_ts r_subdoc_ord_ts
    where t_doc.doc_id=t_subdoc.doc_id
    	and d_doc_tipo.doc_tipo_id=t_doc.doc_tipo_id
        and d_doc_fam_tipo.doc_fam_tipo_id=d_doc_tipo.doc_fam_tipo_id
        and r_subdoc_ord_ts.subdoc_id=t_subdoc.subdoc_id
    	and t_doc.ente_proprietario_id=p_ente_proprietario_id
    	and t_doc.data_cancellazione IS NULL
   		and t_subdoc.data_cancellazione IS NULL
        AND d_doc_fam_tipo.data_cancellazione IS NULL
        and d_doc_tipo.data_cancellazione IS NULL
        and r_subdoc_ord_ts.data_cancellazione IS NULL
        and r_subdoc_ord_ts.validita_fine IS NULL
        AND p_data BETWEEN r_subdoc_ord_ts.validita_inizio AND
                    	COALESCE(r_subdoc_ord_ts.validita_fine, p_data))
 --04/07/2017: SIAC-5037 aggiunta gestione dei documenti
 elenco_doc on elenco_doc.ord_ts_id=suball.ord_ts_id
) as tb;


esito:= 'Fine funzione carico ordinativi in pagamento (fnc_siac_dwh_ordinativo_pagamento) - '||clock_timestamp();
RETURN NEXT;



update siac_dwh_log_elaborazioni  set fnc_elaborazione_fine = clock_timestamp(),
fnc_durata=clock_timestamp()- fnc_elaborazione_inizio
where fnc_user=v_user_table;

EXCEPTION
WHEN others THEN
  esito:='Funzione carico ordinativi in pagamento (fnc_siac_dwh_ordinativo_pagamento) terminata con errori';
  RAISE NOTICE '%-%.',SQLSTATE,SQLERRM;
RETURN;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY DEFINER
COST 100 ROWS 1000;

--FINE SIAC-6175 SOFIA

-- SIAC-6206 INIZIO
insert into siac_d_class_tipo (
			classif_tipo_code, 
            classif_tipo_desc,
            validita_inizio,
			ente_proprietario_id, 
            login_operazione)

SELECT tmp.code, tmp.descr, to_timestamp('2016-01-01', 'YYYY-MM-DD'), tep.ente_proprietario_id, 'admin'         
FROM siac_t_ente_proprietario tep
CROSS JOIN(VALUES ('CLASSIFICATORE_STIPENDI','STIPENDI')) as tmp(code, descr)
WHERE not exists (
 SELECT 1 FROM siac_d_class_tipo et
 WHERE et.classif_tipo_code=tmp.code
 and et.ente_proprietario_id=tep.ente_proprietario_id
 and et.data_cancellazione is null);
 
 
 insert into siac_t_class (
			classif_code, 
            classif_desc,
            classif_tipo_id, 
            validita_inizio, 
            ente_proprietario_id, 
            login_operazione)
SELECT tmp.code, tmp.descr, dgt.classif_tipo_id, to_timestamp('2016-01-01', 'YYYY-MM-DD'), tep.ente_proprietario_id, 'admin'         
FROM siac_t_ente_proprietario tep
JOIN siac_d_class_tipo dgt ON dgt.ente_proprietario_id = tep.ente_proprietario_id           
CROSS JOIN(VALUES ('STI','Stipendi','CLASSIFICATORE_STIPENDI'), ('RT-STI','Ritenute stipendi','CLASSIFICATORE_STIPENDI')) as tmp(code, descr, tipo)
WHERE dgt.classif_tipo_code = tmp.tipo
and not exists (
 SELECT 1 FROM siac_t_class et
 WHERE et.classif_code=tmp.code
 and et.ente_proprietario_id=tep.ente_proprietario_id
 and et.classif_tipo_id=dgt.classif_tipo_id
 and et.data_cancellazione is null); 

 
 
  
 
 
 INSERT INTO
  siac.siac_t_azione
(
  azione_code,
  azione_desc,
  azione_tipo_id,
  gruppo_azioni_id,
  urlapplicazione,
  verificauo,
  validita_inizio,
  ente_proprietario_id,
  login_operazione
)
select 'OP-OIL-associaProvisoriCassa',
'Associa provvisori di cassa',
a.azione_tipo_id,
b.gruppo_azioni_id,
'/../siacboapp/azioneRichiesta.do',
FALSE,
now(),
a.ente_proprietario_id,
'admin'
 from siac_d_azione_tipo a, siac_d_gruppo_azioni b
where
b.ente_proprietario_id=a.ente_proprietario_id
and
a.azione_tipo_code='AZIONE_SECONDARIA'
and b.gruppo_azioni_code='FUN_ACCESSORIE'
and not exists
(select 1 from siac_t_azione z
        where z.azione_code='OP-OIL-associaProvisoriCassa'
        and z.ente_proprietario_id=a.ente_proprietario_id
);
 
 --SIAC-6206 FINE

--SIAC-6175 corrige inizio



DROP FUNCTION IF EXISTS fnc_mif_ordinativo_spesa_splus
( enteProprietarioId integer,
  nomeEnte VARCHAR,
  annobilancio varchar,
  loginOperazione varchar,
  dataElaborazione timestamp,
  out flussoElabMifDistOilId integer,
  out flussoElabMifId integer,
  out numeroOrdinativiTrasm integer,
  out nomeFileMif varchar,
  out codiceRisultato integer,
  out messaggioRisultato varchar );
  


DROP FUNCTION IF EXISTS fnc_mif_ordinativo_entrata_splus
( enteProprietarioId integer,
  nomeEnte VARCHAR,
  annobilancio varchar,
  loginOperazione varchar,
  dataElaborazione timestamp,
  out flussoElabMifDistOilId integer,
  out flussoElabMifId integer,
  out numeroOrdinativiTrasm integer,
  out nomeFileMif varchar,
  out codiceRisultato integer,
  out messaggioRisultato varchar );


--RIPRISTINO FUNZIONI SENZA PARAMETRO

--ENTRATA INIZIO
CREATE OR REPLACE FUNCTION fnc_mif_ordinativo_entrata_splus
( enteProprietarioId integer,
  nomeEnte VARCHAR,
  annobilancio varchar,
  loginOperazione varchar,
  dataElaborazione timestamp,
  out flussoElabMifDistOilId integer,
  out flussoElabMifId integer,
  out numeroOrdinativiTrasm integer,
  out nomeFileMif varchar,
  out codiceRisultato integer,
  out messaggioRisultato varchar )
RETURNS record AS
$body$
DECLARE


 strMessaggio VARCHAR(1500):='';
 strMessaggioFinale VARCHAR(1500):='';

 mifOrdinativoRec record;


BEGIN

	strMessaggioFinale:='Invio ordinativi di entrata a SIOPE PLUS.';


	numeroOrdinativiTrasm:=0;
    codiceRisultato:=0;
    messaggioRisultato:='';
	flussoElabMifId:=null;
    nomeFileMif:=null;
    flussoElabMifDistOilId:=null;

    strMessaggio:='Richiamo fnc_mif_ordinativo_entrata interno.';
	select *  into mifOrdinativoRec
    from fnc_mif_ordinativo_entrata_splus
         (enteProprietarioId,
		  nomeEnte,
		  annobilancio,
		  loginOperazione,
		  dataElaborazione,
          null);

	numeroOrdinativiTrasm:=mifOrdinativoRec.numeroOrdinativiTrasm;
    codiceRisultato:=mifOrdinativoRec.codiceRisultato;
    messaggioRisultato:=mifOrdinativoRec.messaggioRisultato;
	flussoElabMifId:=mifOrdinativoRec.flussoElabMifId;
    nomeFileMif:=mifOrdinativoRec.nomeFileMif;

    flussoElabMifDistOilId:=mifOrdinativoRec.flussoElabMifDistOilId;
    return;

exception
	when others  THEN
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||'ERRORE DB:'||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 500)||'.' ;
        numeroOrdinativiTrasm:=0;
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);
        return;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;
--ENTRATA FINE

--SPESA INIZIO
CREATE OR REPLACE FUNCTION fnc_mif_ordinativo_spesa_splus
( enteProprietarioId integer,
  nomeEnte VARCHAR,
  annobilancio varchar,
  loginOperazione varchar,
  dataElaborazione timestamp,
  out flussoElabMifDistOilId integer,
  out flussoElabMifId integer,
  out numeroOrdinativiTrasm integer,
  out nomeFileMif varchar,
  out codiceRisultato integer,
  out messaggioRisultato varchar )
RETURNS record AS
$body$
DECLARE


 strMessaggio VARCHAR(1500):='';
 strMessaggioFinale VARCHAR(1500):='';

 mifOrdinativoRec record;

BEGIN
  	strMessaggioFinale:='Invio ordinativi di spesa SIOPE PLUS..';


	numeroOrdinativiTrasm:=0;
    codiceRisultato:=0;
    messaggioRisultato:='';
	flussoElabMifId:=null;
    nomeFileMif:=null;
    flussoElabMifDistOilId:=null;

    strMessaggio:='Richiamo fnc_mif_ordinativo_spesa_splus interno.';
	select *  into mifOrdinativoRec
    from fnc_mif_ordinativo_spesa_splus
         (enteProprietarioId,
		  nomeEnte,
		  annobilancio,
		  loginOperazione,
		  dataElaborazione,
          null);

	numeroOrdinativiTrasm:=mifOrdinativoRec.numeroOrdinativiTrasm;
    codiceRisultato:=mifOrdinativoRec.codiceRisultato;
    messaggioRisultato:=mifOrdinativoRec.messaggioRisultato;
	flussoElabMifId:=mifOrdinativoRec.flussoElabMifId;
    nomeFileMif:=mifOrdinativoRec.nomeFileMif;
    flussoElabMifDistOilId:=mifOrdinativoRec.flussoElabMifDistOilId;

    return;

exception
	when others  THEN
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||'ERRORE DB:'||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 500)||'.' ;
        numeroOrdinativiTrasm:=0;
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);
        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;
--SPESA FINE

--SIAC-6175 corrige fine

-- SIAC-6202 - INIZIO - Sofia

update mif_d_flusso_elaborato mif
set    flusso_elab_mif_param='DISPOSIZIONE DOCUMENTO ESTERNO|BONIFICO ESTERO EURO|STI||CLASSIFICATORE_STIPENDI',
       flusso_elab_mif_default='DISPOSIZIONE DOCUMENTO ESTERNO|STIPENDI|Stipendi mese di'
from mif_d_flusso_elaborato_tipo tipo
where tipo.flusso_elab_mif_tipo_code='MANDMIF_SPLUS'
and   mif.flusso_elab_mif_tipo_id=tipo.flusso_elab_mif_tipo_id
and   mif.flusso_elab_mif_code='riferimento_documento_esterno';

update mif_d_flusso_elaborato mif
set    flusso_elab_mif_param='CLASSIFICATORE_STIPENDI',
       flusso_elab_mif_default='DISPOSIZIONE DOCUMENTO ESTERNO|Ritenute mese di'
from mif_d_flusso_elaborato_tipo tipo
where tipo.flusso_elab_mif_tipo_code='REVMIF_SPLUS'
and   mif.flusso_elab_mif_tipo_id=tipo.flusso_elab_mif_tipo_id
and   mif.flusso_elab_mif_code='riferimento_documento_esterno';

CREATE OR REPLACE FUNCTION fnc_mif_ordinativo_splus_get_mese
(
 dataToMese  varchar
)
RETURNS varchar AS
$body$
DECLARE

dMese integer;

mifFlussoElabMeseArr varchar[];

strMese varchar;

begin

strMese:='Gennaio';
mifFlussoElabMeseArr[1]:=strMese;
strMese:='Febbraio';
mifFlussoElabMeseArr[2]:=strMese;
strMese:='Marzo';
mifFlussoElabMeseArr[3]:=strMese;
strMese:='Aprile';
mifFlussoElabMeseArr[4]:=strMese;
strMese:='Maggio';
mifFlussoElabMeseArr[5]:=strMese;
strMese:='Giugno';
mifFlussoElabMeseArr[6]:=strMese;
strMese:='Luglio';
mifFlussoElabMeseArr[7]:=strMese;
strMese:='Agosto';
mifFlussoElabMeseArr[8]:=strMese;
strMese:='Settembre';
mifFlussoElabMeseArr[9]:=strMese;
strMese:='Ottobre';
mifFlussoElabMeseArr[10]:=strMese;
strMese:='Novembre';
mifFlussoElabMeseArr[11]:=strMese;
strMese:='Dicembre';
mifFlussoElabMeseArr[12]:=strMese;

dMese:=substring(dataToMese from 6 for 2)::integer;

if dMese between 1 and 12 then
	 strMese:=mifFlussoElabMeseArr[dMese];
else strMese:=null;
end if;

return strMese;

END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

DROP FUNCTION IF EXISTS fnc_mif_ordinativo_spesa_splus (
  enteproprietarioid integer,
  nomeente varchar,
  annobilancio varchar,
  loginoperazione varchar,
  dataelaborazione timestamp,
  mifordritrasmelabid integer,
  out flussoelabmifdistoilid integer,
  out flussoelabmifid integer,
  out numeroordinativitrasm integer,
  out nomefilemif varchar,
  out codicerisultato integer,
  out messaggiorisultato varchar
);


DROP FUNCTION IF EXISTS fnc_mif_ordinativo_entrata_splus
( enteProprietarioId integer,
  nomeEnte VARCHAR,
  annobilancio varchar,
  loginOperazione varchar,
  dataElaborazione timestamp,
  mifOrdRitrasmElabId integer,
  out flussoElabMifDistOilId integer,
  out flussoElabMifId integer,
  out numeroOrdinativiTrasm integer,
  out nomeFileMif varchar,
  out codiceRisultato integer,
  out messaggioRisultato varchar );
  


CREATE OR REPLACE FUNCTION fnc_mif_ordinativo_spesa_splus (
  enteproprietarioid integer,
  nomeente varchar,
  annobilancio varchar,
  loginoperazione varchar,
  dataelaborazione timestamp,
  mifordritrasmelabid integer,
  out flussoelabmifdistoilid integer,
  out flussoelabmifid integer,
  out numeroordinativitrasm integer,
  out nomefilemif varchar,
  out codicerisultato integer,
  out messaggiorisultato varchar
)
RETURNS record AS
$body$
DECLARE


 strMessaggio VARCHAR(1500):='';
 strMessaggioFinale VARCHAR(1500):='';
 strMessaggioScarto VARCHAR(1500):='';
 strExecSql VARCHAR(1500):='';

 mifOrdinativoIdRec record;

 mifFlussoOrdinativoRec  mif_t_ordinativo_spesa%rowtype;


 mifFlussoElabMifArr flussoElabMifRecType[];



 mifCountRec integer:=1;
 mifCountTmpRec integer:=1;
 mifAFlussoElabTypeRec  flussoElabMifRecType;
 flussoElabMifElabRec  flussoElabMifRecType;
 mifElabRec record;

 attoAmmRec record;
 enteOilRec record;
 enteProprietarioRec record;
 soggettoRec record;
 soggettoSedeRec record;
 soggettoQuietRec record;
 soggettoQuietRifRec record;
 MDPRec record;
 codAccreRec record;
 bilElemRec record;
 indirizzoRec record;
 ordSostRec record;


 tipoPagamRec record;
 ritenutaRec record;
 ricevutaRec record;
 quoteOrdinativoRec record;
 ordRec record;


 isIndirizzoBenef boolean:=false;
 isIndirizzoBenQuiet boolean:=false;

 flussoElabMifValore varchar (1000):=null;
 flussoElabMifValoreDesc varchar (1000):=null;

 ordNumero numeric:=null;
 ordAnno  integer:=null;
 attoAmmTipoSpr varchar(50):=null;
 attoAmmTipoAll varchar(50):=null;
 attoAmmTipoAllAll varchar(50):=null;

 attoAmmStrTipoRag  varchar(50):=null;
 attoAmmTipoAllRag varchar(50):=null;


 tipoMDPCbi varchar(50):=null;
 tipoMDPCsi varchar(50):=null;
 tipoMDPCo  varchar(50):=null;
 tipoMDPCCP varchar(50):=null;
 tipoMDPCB  varchar(50):=null;
 tipoPaeseCB varchar(50):=null;
 avvisoTipoMDPCo varchar(50):=null;
 codiceCge  varchar(50):=null;
 siopeDef   varchar(50):=null;
 codResult   integer:=null;

 indirizzoEnte varchar(500):=null;
 localitaEnte varchar(500):=null;
 soggettoEnteId INTEGER:=null;
 soggettoRifId integer:=null;
 soggettoSedeSecId integer:=null;
 soggettoQuietId integer:=null;
 soggettoQuietRifId integer:=null;
 accreditoGruppoCode varchar(15):=null;




 flussoElabMifLogId  integer :=null;
 flussoElabMifTipoId integer :=null;
 flussoElabMifTipoNomeFile varchar(500):=null;
 flussoElabMifTipoDec BOOLEAN:=false;
 flussoElabMifOilId integer :=null;
 flussoElabMifDistOilRetId integer:=null;
 mifOrdSpesaId integer:=null;

 dataInizioVal timestamp :=annoBilancio||'-01-01';
 dataFineVal timestamp :=annoBilancio||'-12-31';


 ordImporto numeric :=0;


 ordTipoCodeId integer :=null;
 ordStatoCodeIId  integer :=null;
 ordStatoCodeAId  integer :=null;

 classCdrTipoId INTEGER:=null;
 classCdcTipoId INTEGER:=null;
 ordDetTsTipoId integer :=null;

 ordSedeSecRelazTipoId integer:=null;
 ordRelazCodeTipoId integer :=null;
 ordCsiRelazTipoId  integer:=null;

 noteOrdAttrId integer:=null;

 movgestTsTipoSubId integer:=null;


 famTitSpeMacroAggrCodeId integer:=null;
 titoloUscitaCodeTipoId integer :=null;
 programmaCodeTipoId integer :=null;
 programmaCodeTipo varchar(50):=null;
 famMissProgrCode VARCHAR(50):=null;
 famMissProgrCodeId integer:=null;
 programmaId integer :=null;
 titoloUscitaId integer:=null;



 isPaeseSepa integer:=null;
 ordCodiceBollo  varchar(10):=null;
 ordCodiceBolloDesc varchar(500):=null;
 ordDataScadenza timestamp:=null;

 ordCsiRelazTipo varchar(20):=null;
 ordCsiCOTipo varchar(50):=null;


 ambitoFinId integer:=null;
 anagraficaBenefCBI varchar(500):=null;

 isDefAnnoRedisuo  varchar(5):=null;


 -- ritenute
 tipoRelazRitOrd varchar(10):=null;
 tipoRelazSprOrd varchar(10):=null;
 tipoRelazSubOrd varchar(10):=null;
 tipoRitenuta varchar(10):='R';
 progrRitenuta  varchar(10):=null;
 isRitenutaAttivo boolean:=false;
 tipoOnereIrpefId integer:=null;
 tipoOnereInpsId integer:=null;
 tipoOnereIrpef varchar(10):=null;
 tipoOnereInps varchar(10):=null;

 tipoOnereIrpegId integer:=null;
 tipoOnereIrpeg varchar(10):=null;

 codiceUECodeTipo VARCHAR(50):=null;
 codiceUECodeTipoId integer:=null;
 codiceCofogCodeTipo  VARCHAR(50):=null;
 codiceCofogCodeTipoId integer:=null;
 siopeCodeTipo varchar(50):=null;
 siopeCodeTipoId integer :=null;
 eventoTipoCodeId integer:=null;
 collEventoCodeId integer:=null;

 classifTipoCodeFraz    varchar(50):=null;
 classifTipoCodeFrazVal varchar(50):=null;
 classifTipoCodeFrazId   integer:=null;

 tipoClassFruttifero varchar(100):=null;
 valFruttifero varchar(100):=null;
 valFruttiferoStr varchar(100):=null;
 valFruttiferoStrAltro varchar(100):=null;
 tipoClassFruttiferoId integer:=null;
 valFruttiferoId  integer:=null;

 classVincolatoCode   varchar(100):=null;
 classVincolatoCodeId INTEGER:=null;
 valFruttiferoClassCode   varchar(100):=null;
 valFruttiferoClassCodeId INTEGER:=null;
 valFruttiferoClassCodeSI varchar(100):=null;
 valFruttiferoCodeSI varchar(100):=null;
 valFruttiferoClassCodeNO varchar(100):=null;
 valFruttiferoCodeNO varchar(100):=null;

 cigCausAttrId INTEGER:=null;
 cupCausAttrId INTEGER:=null;
 cigCausAttr   varchar(10):=null;
 cupCausAttr   varchar(10):=null;


 codicePaeseIT varchar(50):=null;
 codiceAccreCB varchar(50):=null;
 codiceAccreCO varchar(50):=null;
 codiceAccreREG varchar(50):=null;
 codiceSepa     varchar(50):=null;
 codiceExtraSepa varchar(50):=null;
 codiceGFB  varchar(50):=null;

 sepaCreditTransfer boolean:=false;
 accreditoGruppoSepaTr varchar(10):=null;
 SepaTr varchar(10):=null;
 paeseSepaTr varchar(10):=null;


 numeroDocs varchar(10):=null;
 tipoDocs varchar(50):=null;
 tipoDocsComm varchar(50):=null;
 tipoGruppoDocs varchar(50):=null;

 tipoEsercizio varchar(50):=null;
 statoBeneficiario boolean :=false;
 bavvioFrazAttr boolean :=false;
 dataAvvioFrazAttr timestamp:=null;
 attrfrazionabile VARCHAR(50):=null;

 dataAvvioSiopeNew VARCHAR(50):=null;
 bAvvioSiopeNew   boolean:=false;


 tipoPagamPostA VARCHAR(100):=null;
 tipoPagamPostB VARCHAR(100):=null;

 cupAttrCodeId INTEGER:=null;
 cupAttrCode   varchar(10):=null;
 cigAttrCodeId INTEGER:=null;
 cigAttrCode   varchar(10):=null;
 ricorrenteCodeTipo varchar(50):=null;
 ricorrenteCodeTipoId integer:=null;

 codiceBolloPlusEsente boolean:=false;
 codiceBolloPlusDesc   varchar(100):=null;

 statoDelegatoCredEff boolean :=false;

 comPccAttrId integer:=null;
 pccOperazTipoId integer:=null;


 -- Transazione elementare
 programmaTbr varchar(50):=null;
 codiceFinVTbr varchar(50):=null;
 codiceEconPatTbr varchar(50):=null;
 cofogTbr varchar(50):=null;
 transazioneUeTbr varchar(50):=null;
 siopeTbr varchar(50):=null;
 cupTbr varchar(50):=null;
 ricorrenteTbr varchar(50):=null;
 aslTbr varchar(50):=null;
 progrRegUnitTbr varchar(50):=null;

 codiceFinVTipoTbrId integer:=null;
 cupAttrId integer:=null;
 ricorrenteTipoTbrId integer:=null;
 aslTipoTbrId integer:=null;
 progrRegUnitTipoTbrId integer:=null;

 codiceFinVCodeTbr varchar(50):=null;
 contoEconCodeTbr varchar(50):=null;
 cofogCodeTbr varchar(50):=null;
 codiceUeCodeTbr varchar(50):=null;
 siopeCodeTbr varchar(50):=null;
 cupAttrTbr varchar(50):=null;
 ricorrenteCodeTbr varchar(50):=null;
 aslCodeTbr  varchar(50):=null;
 progrRegUnitCodeTbr varchar(50):=null;



 isGestioneQuoteOK boolean:=false;
 isGestioneFatture boolean:=false;
 isRicevutaAttivo boolean:=false;
 isTransElemAttiva boolean:=false;
 isMDPCo boolean:=false;
 isOrdPiazzatura boolean:=false;

 docAnalogico    varchar(100):=null;
 titoloCorrente   varchar(100):=null;
 descriTitoloCorrente varchar(100):=null;
 titoloCapitale   varchar(100):=null;
 descriTitoloCapitale varchar(100):=null;

 -- 20.02.2018 Sofia jira siac-5849
 defNaturaPag  varchar(100):=null;

 attrCodeDataScad varchar(100):=null;
 titoloCap  varchar(100):=null;

 isOrdCommerciale boolean:=false;
 -- 20.03.2018 Sofia SIAC-5968
 tipoPdcIVA VARCHAR(100):=null;
 codePdcIVA VARCHAR(100):=null;

 NVL_STR               CONSTANT VARCHAR:='';


 ORD_TIPO_CODE_P  CONSTANT  varchar :='P';
 ORD_STATO_CODE_I CONSTANT  varchar :='I';
 ORD_STATO_CODE_A CONSTANT  varchar :='A';
 ORD_RELAZ_CODE_SOS  CONSTANT  varchar :='SOS_ORD';
 ORD_TIPO_A CONSTANT  varchar :='A';

 ORD_RELAZ_SEDE_SEC CONSTANT  varchar :='SEDE_SECONDARIA';
 AMBITO_FIN CONSTANT  varchar :='AMBITO_FIN';

 NOTE_ORD_ATTR CONSTANT  varchar :='NOTE_ORDINATIVO';

 CDC CONSTANT varchar:='CDC';
 CDR CONSTANT varchar:='CDR';


 PROGRAMMA               CONSTANT varchar:='PROGRAMMA';
 TITOLO_SPESA            CONSTANT varchar:='TITOLO_SPESA';
 FAM_TIT_SPE_MACROAGGREG CONSTANT varchar:='Spesa - TitoliMacroaggregati';

 FUNZIONE_CODE_I CONSTANT  varchar :='INSERIMENTO'; -- inserimenti
 FUNZIONE_CODE_S CONSTANT  varchar :='SOSTITUZIONE'; -- sostituzioni senza trasmissione
 FUNZIONE_CODE_N CONSTANT  varchar :='ANNULLO'; -- annullamenti prima di trasmissione

 FUNZIONE_CODE_A CONSTANT  varchar :='ANNULLO'; -- annullamenti dopo trasmissione
 FUNZIONE_CODE_VB CONSTANT  varchar :='VARIAZIONE'; -- spostamenti dopo trasmissione


 ORD_TS_DET_TIPO_A CONSTANT varchar:='A';
 MOVGEST_TS_TIPO_S  CONSTANT varchar:='S';

 SPACE_ASCII CONSTANT integer:=32;
 VT_ASCII CONSTANT integer:=13;
 BS_ASCII CONSTANT integer:=10;

 NUM_SETTE CONSTANT integer:=7;
 NUM_DODICI CONSTANT integer:=12;
 ZERO_PAD CONSTANT  varchar :='0';

 ELAB_MIF_ESITO_IN CONSTANT  varchar :='IN';
 MANDMIF_TIPO  CONSTANT  varchar :='MANDMIF_SPLUS';


 COM_PCC_ATTR  CONSTANT  varchar :='flagComunicaPCC';
 PCC_OPERAZ_CPAG  CONSTANT varchar:='CP';

 SEPARATORE     CONSTANT  varchar :='|';



 FLUSSO_MIF_ELAB_TEST_COD_ABI_BT      CONSTANT integer:=1;  -- codice_ABI_BT
 FLUSSO_MIF_ELAB_TEST_COD_ENTE_IPA    CONSTANT integer:=4;  -- codice_ente
 FLUSSO_MIF_ELAB_TEST_DESC_ENTE       CONSTANT integer:=5;  -- descrizione_ente
 FLUSSO_MIF_ELAB_TEST_COD_ISTAT_ENTE  CONSTANT integer:=6;  -- codice_istat_ente
 FLUSSO_MIF_ELAB_TEST_CODFISC_ENTE    CONSTANT integer:=7;  -- codice_fiscale_ente
 FLUSSO_MIF_ELAB_TEST_CODTRAMITE_ENTE CONSTANT integer:=8;  -- codice_tramite_ente
 FLUSSO_MIF_ELAB_TEST_CODTRAMITE_BT   CONSTANT integer:=9;  -- codice_tramite_bt
 FLUSSO_MIF_ELAB_TEST_COD_ENTE_BT     CONSTANT integer:=10; -- codice_ente_bt
 FLUSSO_MIF_ELAB_TEST_RIFERIMENTO_ENTE CONSTANT integer:=11; -- riferimento_ente
 FLUSSO_MIF_ELAB_TEST_ESERCIZIO       CONSTANT integer:=12; -- riferimento_ente

 FLUSSO_MIF_ELAB_INIZIO_ORD     CONSTANT integer:=13;  -- tipo_operazione

 FLUSSO_MIF_ELAB_FATTURE        CONSTANT integer:=53;  -- fattura_siope_codice_ipa_ente_siope
 FLUSSO_MIF_ELAB_FATT_CODFISC   CONSTANT integer:=58;  -- fattura_siope_codice_fiscale_emittente_siope
 FLUSSO_MIF_ELAB_FATT_DATASCAD_PAG CONSTANT integer:=62; -- data_scadenza_pagam_siope
 FLUSSO_MIF_ELAB_FATT_NATURA_PAG CONSTANT integer:=64; -- natura_spesa_siope
 FLUSSO_MIF_ELAB_NUM_SOSPESO    CONSTANT integer:=122; -- numero_provvisorio
 FLUSSO_MIF_ELAB_RITENUTA       CONSTANT integer:=124; -- importo_ritenuta
 FLUSSO_MIF_ELAB_RITENUTA_PRG   CONSTANT integer:=126; -- progressivo_versante


 REGMOVFIN_STATO_A              CONSTANT varchar:='A';
 SEGNO_ECONOMICO				CONSTANT varchar:='Dare';



BEGIN

	numeroOrdinativiTrasm:=0;
    codiceRisultato:=0;
    messaggioRisultato:='';
	flussoElabMifId:=null;
    nomeFileMif:=null;

    flussoElabMifDistOilId:=null;

	strMessaggioFinale:='Invio ordinativi di spesa SIOPE PLUS.';


    -- enteOilRec
    strMessaggio:='Lettura dati ente OIL  per flusso MIF tipo '||MANDMIF_TIPO||'.';
    select * into strict enteOilRec
    from siac_t_ente_oil ente
    where ente.ente_proprietario_id=enteProprietarioId
    and   ente.data_cancellazione is null
    and   ente.validita_fine is null;

    if enteOilRec is null then
    	raise exception ' Errore in reperimento dati';
    end if;

    if enteOilRec.ente_oil_siope_plus=false then
    	raise exception ' SIOPE PLUS non attivo per l''ente.';
    end if;

    -- inserimento record in tabella mif_t_flusso_elaborato
    strMessaggio:='Inserimento mif_t_flusso_elaborato tipo flusso='||MANDMIF_TIPO||'.';

    insert into mif_t_flusso_elaborato
    (flusso_elab_mif_data ,
     flusso_elab_mif_esito,
     flusso_elab_mif_esito_msg,
     flusso_elab_mif_file_nome,
     flusso_elab_mif_tipo_id,
     flusso_elab_mif_id_flusso_oil, -- da calcolare su tab progressivi
     flusso_elab_mif_codice_flusso_oil, -- da calcolare su tab progressivi
     validita_inizio,
     ente_proprietario_id,
     login_operazione)
     (select dataElaborazione,
             ELAB_MIF_ESITO_IN,
             'Elaborazione in corso per tipo flusso '||MANDMIF_TIPO,
      		 tipo.flusso_elab_mif_nome_file,
     		 tipo.flusso_elab_mif_tipo_id,
     		 null,--flussoElabMifOilId, -- da calcolare su tab progressivi
             null, -- flussoElabMifDistOilId -- da calcolare su tab progressivi
    		 dataElaborazione,
     		 enteProprietarioId,
      		 loginOperazione
      from mif_d_flusso_elaborato_tipo tipo
      where tipo.ente_proprietario_id=enteProprietarioId
      and   tipo.flusso_elab_mif_tipo_code=MANDMIF_TIPO
      and   tipo.data_cancellazione is null
      and   tipo.validita_fine is null
     )
     returning flusso_elab_mif_id into flussoElabMifLogId;-- valore da restituire

      raise notice 'flussoElabMifLogId %',flussoElabMifLogId;

     if flussoElabMifLogId is null then
       RAISE EXCEPTION ' Errore generico in inserimento %.',MANDMIF_TIPO;
     end if;

    strMessaggio:='Verifica esistenza elaborazioni in corso per tipo flusso '||MANDMIF_TIPO||'.';
	codResult:=null;
    select distinct 1 into codResult
    from mif_t_flusso_elaborato elab,  mif_d_flusso_elaborato_tipo tipo
    where  elab.flusso_elab_mif_id!=flussoElabMifLogId
    and    elab.flusso_elab_mif_esito=ELAB_MIF_ESITO_IN
    and    elab.data_cancellazione is null
    and    elab.validita_fine is null
    and    tipo.flusso_elab_mif_tipo_id=elab.flusso_elab_mif_tipo_id
    and    tipo.flusso_elab_mif_tipo_code=MANDMIF_TIPO
    and    tipo.ente_proprietario_id=enteProprietarioId
    and    tipo.data_cancellazione is null
    and    tipo.validita_fine is null;

    if codResult is not null then
    	RAISE EXCEPTION ' Verificare situazioni esistenti.';
    end if;

    -- verifico se la tabella degli id contiene dati in tal caso elaborazioni precedenti sono andate male
    strMessaggio:='Verifica esistenza dati in tabella temporanea id [mif_t_ordinativo_spesa_id].';
    codResult:=null;
    select distinct 1 into codResult
    from mif_t_ordinativo_spesa_id mif
    where mif.ente_proprietario_id=enteProprietarioId;

    if codResult is not null then
      RAISE EXCEPTION ' Dati presenti verificarne il contenuto ed effettuare pulizia prima di rieseguire.';
    end if;



    codResult:=null;
    -- recupero indentificativi tipi codice vari
	begin

        -- ordTipoCodeId
        strMessaggio:='Lettura ordinativo tipo Code Id '||ORD_TIPO_CODE_P||'.';
        select ord_tipo.ord_tipo_id into strict ordTipoCodeId
        from siac_d_ordinativo_tipo ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.ord_tipo_code=ORD_TIPO_CODE_P
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
   		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));

		-- ordStatoCodeIId
        strMessaggio:='Lettura ordinativo stato Code Id '||ORD_STATO_CODE_I||'.';
        select ord_tipo.ord_stato_id into strict ordStatoCodeIId
        from siac_d_ordinativo_stato ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.ord_stato_code=ORD_STATO_CODE_I
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));


        -- ordStatoCodeAId
        strMessaggio:='Lettura ordinativo stato Code Id '||ORD_STATO_CODE_A||'.';
        select ord_tipo.ord_stato_id into strict ordStatoCodeAId
        from siac_d_ordinativo_stato ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.ord_stato_code=ORD_STATO_CODE_A
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));


		-- classCdrTipoId
        strMessaggio:='Lettura classif Id per tipo sac='||CDR||'.';
        select tipo.classif_tipo_id into strict classCdrTipoId
        from siac_d_class_tipo tipo
        where tipo.ente_proprietario_id=enteProprietarioId
        and   tipo.classif_tipo_code=CDR
        and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));

        -- classCdcTipoId
        strMessaggio:='Lettura classif Id per tipo sac='||CDC||'.';
        select tipo.classif_tipo_id into strict classCdrTipoId
        from siac_d_class_tipo tipo
        where tipo.ente_proprietario_id=enteProprietarioId
        and   tipo.classif_tipo_code=CDC
        and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));


		-- ordDetTsTipoId
        strMessaggio:='Lettura tipo importo ordinativo  Code Id '||ORD_TS_DET_TIPO_A||'.';
        select ord_tipo.ord_ts_det_tipo_id into strict ordDetTsTipoId
        from siac_d_ordinativo_ts_det_tipo ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.ord_ts_det_tipo_code=ORD_TS_DET_TIPO_A
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));


        -- ordSedeSecRelazTipoId
        strMessaggio:='Lettura relazione sede secondaria  Code Id '||ORD_RELAZ_SEDE_SEC||'.';
        select ord_tipo.relaz_tipo_id into strict ordSedeSecRelazTipoId
        from siac_d_relaz_tipo ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.relaz_tipo_code=ORD_RELAZ_SEDE_SEC
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));


		-- ordRelazCodeTipoId
        strMessaggio:='Lettura relazione   Code Id '||ORD_RELAZ_CODE_SOS||'.';
		select ord_tipo.relaz_tipo_id into strict ordRelazCodeTipoId
    	from siac_d_relaz_tipo ord_tipo
		where ord_tipo.ente_proprietario_id=enteProprietarioId
		and   ord_tipo.relaz_tipo_code=ORD_RELAZ_CODE_SOS
		and   ord_tipo.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));


        -- movgestTsTipoSubId
        strMessaggio:='Lettura movgest_ts_tipo  '||MOVGEST_TS_TIPO_S||'.';
		select ord_tipo.movgest_ts_tipo_id into strict movgestTsTipoSubId
    	from siac_d_movgest_ts_tipo ord_tipo
		where ord_tipo.ente_proprietario_id=enteProprietarioId
		and   ord_tipo.movgest_ts_tipo_code=MOVGEST_TS_TIPO_S
		and   ord_tipo.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));


    	-- programmaCodeTipoId
        strMessaggio:='Lettura programma_code_tipo_id  '||PROGRAMMA||'.';
		select tipo.classif_tipo_id into strict programmaCodeTipoId
    	from siac_d_class_tipo tipo
		where tipo.ente_proprietario_id=enteProprietarioId
		and   tipo.classif_tipo_code=PROGRAMMA
		and   tipo.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',validita_inizio)
		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(validita_fine,dataElaborazione));

		-- famTitSpeMacroAggrCodeId
		-- FAM_TIT_SPE_MACROAGGREG='Spesa - TitoliMacroaggregati'
        strMessaggio:='Lettura fam_tit_spe_macroggregati_code_tipo_id  '||FAM_TIT_SPE_MACROAGGREG||'.';
		select fam.classif_fam_tree_id into strict famTitSpeMacroAggrCodeId
        from siac_t_class_fam_tree fam
        where fam.ente_proprietario_id=enteProprietarioId
        and   fam.class_fam_code=FAM_TIT_SPE_MACROAGGREG
        and   fam.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',fam.validita_inizio)
		and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(fam.validita_fine,dataElaborazione));


    	-- titoloUscitaCodeTipoId
        strMessaggio:='Lettura titolo_spesa_code_tipo_id  '||TITOLO_SPESA||'.';
		select tipo.classif_tipo_id into strict titoloUscitaCodeTipoId
    	from siac_d_class_tipo tipo
		where tipo.ente_proprietario_id=enteProprietarioId
		and   tipo.classif_tipo_code=TITOLO_SPESA
		and   tipo.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',validita_inizio)
		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(validita_fine,dataElaborazione));

		-- noteOrdAttrId
        strMessaggio:='Lettura noteOrdAttrId per attributo='||NOTE_ORD_ATTR||'.';
		select attr.attr_id into strict  noteOrdAttrId
        from siac_t_attr attr
        where attr.ente_proprietario_id=enteProprietarioId
        and   attr.attr_code=NOTE_ORD_ATTR
        and   attr.data_cancellazione is null
        and   date_trunc('day',dataElaborazione)>=date_trunc('day',attr.validita_inizio)
 	 	and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(attr.validita_fine,dataElaborazione));


        -- ambitoFinId
        strMessaggio:='Lettura ambito  Code Id '||AMBITO_FIN||'.';
        select a.ambito_id into strict ambitoFinId
        from siac_d_ambito a
        where a.ente_proprietario_id=enteProprietarioId
   		and   a.ambito_code=AMBITO_FIN
        and   a.data_cancellazione is null
        and   a.validita_fine is null;

        -- flussoElabMifTipoId
        strMessaggio:='Lettura tipo flusso MIF  Code Id '||MANDMIF_TIPO||'.';
        select tipo.flusso_elab_mif_tipo_id, tipo.flusso_elab_mif_nome_file, tipo.flusso_elab_mif_tipo_dec
               into strict flussoElabMifTipoId,flussoElabMifTipoNomeFile, flussoElabMifTipoDec
        from mif_d_flusso_elaborato_tipo tipo
        where tipo.ente_proprietario_id=enteProprietarioId
   		and   tipo.flusso_elab_mif_tipo_code=MANDMIF_TIPO
        and   tipo.data_cancellazione is null
        and   tipo.validita_fine is null;

        -- raise notice 'flussoElabMifTipoId %',flussoElabMifTipoId;
        -- mifFlussoElabTypeRec


        strMessaggio:='Lettura flusso struttura MIF  per tipo '||MANDMIF_TIPO||'.';
        for mifElabRec IN
        (select m.*
         from mif_d_flusso_elaborato m
         where m.flusso_elab_mif_tipo_id=flussoElabMifTipoId
         and   m.flusso_elab_mif_elab=true
         order by m.flusso_elab_mif_ordine_elab
        )
        loop
        	mifAFlussoElabTypeRec.flussoElabMifId :=mifElabRec.flusso_elab_mif_id;
            mifAFlussoElabTypeRec.flussoElabMifAttivo :=mifElabRec.flusso_elab_mif_attivo;
            mifAFlussoElabTypeRec.flussoElabMifDef :=mifElabRec.flusso_elab_mif_default;
            mifAFlussoElabTypeRec.flussoElabMifElab :=mifElabRec.flusso_elab_mif_elab;
            mifAFlussoElabTypeRec.flussoElabMifParam :=mifElabRec.flusso_elab_mif_param;

            mifAFlussoElabTypeRec.flusso_elab_mif_ordine_elab :=mifElabRec.flusso_elab_mif_ordine_elab;
            mifAFlussoElabTypeRec.flusso_elab_mif_ordine :=mifElabRec.flusso_elab_mif_ordine;
            mifAFlussoElabTypeRec.flusso_elab_mif_code :=mifElabRec.flusso_elab_mif_code;
            mifAFlussoElabTypeRec.flusso_elab_mif_campo :=mifElabRec.flusso_elab_mif_campo;

            mifFlussoElabMifArr[mifElabRec.flusso_elab_mif_ordine_elab]:=mifAFlussoElabTypeRec;

        end loop;



		-- Gestione registroPcc per enti che non gestiscono quitanze
        -- Nota : capire se necessario gestire PCC
		/*if enteOilRec.ente_oil_quiet_ord=false then

  			-- comPccAttrId
	        strMessaggio:='Lettura comPccAttrId per attributo='||COM_PCC_ATTR||'.';
			select attr.attr_id into strict  comPccAttrId
	        from siac_t_attr attr
	        where attr.ente_proprietario_id=enteProprietarioId
	        and   attr.attr_code=COM_PCC_ATTR
	        and   attr.data_cancellazione is null
	        and   date_trunc('day',dataElaborazione)>=date_trunc('day',attr.validita_inizio)
   	 	    and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(attr.validita_fine,dataElaborazione));

            strMessaggio:='Lettura Id tipo operazine PCC='||PCC_OPERAZ_CPAG||'.';
			select pcc.pccop_tipo_id into strict pccOperazTipoId
		    from siac_d_pcc_operazione_tipo pcc
		    where pcc.ente_proprietario_id=enteProprietarioId
		    and   pcc.pccop_tipo_code=PCC_OPERAZ_CPAG;


        end if;*/

        -- enteProprietarioRec
        strMessaggio:='Lettura dati ente proprietario per flusso MIF tipo '||MANDMIF_TIPO||'.';
        select * into strict enteProprietarioRec
        from siac_t_ente_proprietario ente
        where ente.ente_proprietario_id=enteProprietarioId
	    and   ente.data_cancellazione is null
        and   ente.validita_fine is null;

        -- soggettoEnteId
        strMessaggio:='Lettura indirizzo ente proprietario [siac_r_soggetto_ente_proprietario] per flusso MIF tipo '||MANDMIF_TIPO||'.';
        select ente.soggetto_id into soggettoEnteId
        from siac_r_soggetto_ente_proprietario ente
        where ente.ente_proprietario_id=enteProprietarioId
        and   ente.data_cancellazione is null
        and   ente.validita_fine is null;

        if soggettoEnteId is not null then
            strMessaggio:='Lettura indirizzo ente proprietario [siac_t_indirizzo_soggetto] per flusso MIF tipo '||MANDMIF_TIPO||'.';

        	select viaTipo.via_tipo_code||' '||indir.toponimo||' '||indir.numero_civico,
        		   com.comune_desc
                   into indirizzoEnte,localitaEnte
            from siac_t_indirizzo_soggetto indir,
                 siac_t_comune com,
                 siac_d_via_tipo viaTipo
            where indir.soggetto_id=soggettoEnteId
            and   indir.principale='S'
            and   indir.data_cancellazione is null
            and   indir.validita_fine is null
            and   com.comune_id=indir.comune_id
            and   com.data_cancellazione is null
            and   com.validita_fine is null
            and   viaTipo.via_tipo_id=indir.via_tipo_id
            and   viaTipo.data_cancellazione is null
	   		and   date_trunc('day',dataElaborazione)>=date_trunc('day',viaTipo.validita_inizio)
 			and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(viaTipo.validita_fine,dataElaborazione))
            order by indir.indirizzo_id;
        end if;

        -- Calcolo progressivo "distinta" per flusso MANDMIF
	    -- calcolo su progressivi di flussoElabMifDistOilId flussoOIL univoco per tipo flusso
        strMessaggio:='Lettura progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_'||MANDMIF_TIPO||'_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
        codResult:=null;
        select prog.prog_value into flussoElabMifDistOilRetId -- 25.05.2016 Sofia - JIRA-3619
        from siac_t_progressivo prog
        where prog.ente_proprietario_id=enteProprietarioId
        and   prog.prog_key='oil_'||MANDMIF_TIPO||'_'||annoBilancio
        and   prog.ambito_id=ambitoFinId
        and   prog.data_cancellazione is null
        and   prog.validita_fine is null;

        if flussoElabMifDistOilRetId is null then -- 25.05.2016 Sofia - JIRA-3619
			strMessaggio:='Inserimento progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_out_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
        	insert into siac_t_progressivo
            (prog_key,
             prog_value,
			 ambito_id,
		     validita_inizio,
			 ente_proprietario_id,
			 login_operazione
            )
            values
            ('oil_'||MANDMIF_TIPO||'_'||annoBilancio,1,ambitoFinId,now(),enteProprietarioId,loginOperazione)
            returning prog_id into codResult;

            if codResult is null then
            	RAISE EXCEPTION ' Progressivo non inserito.';
            else
            	flussoElabMifDistOilRetId:=0;
            end if;
        end if;

        if flussoElabMifDistOilRetId is not null then
	        flussoElabMifDistOilRetId:=flussoElabMifDistOilRetId+1;
        end if;

	    -- calcolo su progressivo di flussoElabMifOilId flussoOIL univoco
        strMessaggio:='Lettura progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_out_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
        codResult:=null;
        select prog.prog_value into flussoElabMifOilId
        from siac_t_progressivo prog
        where prog.ente_proprietario_id=enteProprietarioId
        and   prog.prog_key='oil_out_'||annoBilancio
        and   prog.ambito_id=ambitoFinId
        and   prog.data_cancellazione is null
        and   prog.validita_fine is null;

        if flussoElabMifOilId is null then
			strMessaggio:='Inserimento progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_out_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
        	insert into siac_t_progressivo
            (prog_key,
             prog_value,
			 ambito_id,
		     validita_inizio,
			 ente_proprietario_id,
			 login_operazione
            )
            values
            ('oil_out_'||annoBilancio,1,ambitoFinId,now(),enteProprietarioId,loginOperazione)
            returning prog_id into codResult;

            if codResult is null then
            	RAISE EXCEPTION ' Progressivo non inserito.';
            else
            	flussoElabMifOilId:=0;
            end if;
        end if;

        if flussoElabMifOilId is not null then
	        flussoElabMifOilId:=flussoElabMifOilId+1;
        end if;

        exception
		when no_data_found then
			RAISE EXCEPTION ' Non presente in archivio';
        when TOO_MANY_ROWS THEN
            RAISE EXCEPTION ' Diverse righe presenti in archivio.';
		when others  THEN
			RAISE EXCEPTION ' %-%.',SQLSTATE,substring(upper(SQLERRM) from 1 for 500);
    end;




    --- popolamento mif_t_ordinativo_spesa_id


    -- ordinativi emessi o emessi/spostati non ancora mai trasmessi codice_funzione='I' -- INSERIMENTO
    strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_spesa_id].Codice funzione='||FUNZIONE_CODE_I||'.';

    insert into mif_t_ordinativo_spesa_id
    (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil,
     mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
     mif_ord_soggetto_id, mif_ord_modpag_id,
     mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
     mif_ord_liq_id, mif_ord_atto_amm_id, mif_ord_contotes_id,mif_ord_dist_id,
     mif_ord_codbollo_id,mif_ord_comm_tipo_id,mif_ord_notetes_id,mif_ord_desc,
     mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
     mif_ord_siope_tipo_debito_id,mif_ord_siope_assenza_motivazione_id,
     mif_ord_login_creazione,mif_ord_login_modifica,
     ente_proprietario_id, login_operazione)
    (
     with
     ritrasm as
     (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	  from mif_t_ordinativo_ritrasmesso r
	  where mifOrdRitrasmElabId is not null
	  and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	  and   r.ente_proprietario_id=enteProprietarioId
	  and   r.data_cancellazione is null),
     ordinativi as
     (
      select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_I mif_ord_codice_funzione,
             bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
             ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
             extract('year' from ord.ord_emissione_data)||'-'||
             lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
             lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione , 0 mif_ord_ord_anno_movg,
             0 mif_ord_soggetto_id,0 mif_ord_modpag_id,0 mif_ord_subord_id, elem.elem_id mif_ord_elem_id,
             0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_liq_id,0 mif_ord_atto_amm_id,
             ord.contotes_id mif_ord_contotes_id,ord.dist_id mif_ord_dist_id,ord.codbollo_id mif_ord_codbollo_id,
             ord.comm_tipo_id mif_ord_comm_tipo_id,ord.notetes_id mif_ord_notetes_id, ord.ord_desc mif_ord_desc,
             ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
             ord.siope_tipo_debito_id,ord.siope_assenza_motivazione_id,
             ord.login_creazione mif_ord_login_creazione,ord.login_modifica mif_ord_login_modifica,
             enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
      from siac_t_ordinativo ord,siac_r_ordinativo_stato ord_stato,siac_t_bil bil, siac_t_periodo per,siac_r_ordinativo_bil_elem elem
      where  bil.ente_proprietario_id=enteProprietarioId
        and  per.periodo_id=bil.periodo_id
        and  per.anno::integer <=annoBilancio::integer
        and  ord.bil_id=bil.bil_id
        and  ord.ord_tipo_id=ordTipoCodeId
        and  ord_stato.ord_id=ord.ord_id
        and  ord_stato.data_cancellazione is null
	    and  date_trunc('day',dataElaborazione)>=date_trunc('day',ord_stato.validita_inizio)
  	    and  ord_stato.validita_fine is null
        and  ord_stato.ord_stato_id=ordStatoCodeIId
        and  ord.ord_trasm_oil_data is null
        and  ord.ord_emissione_data<=dataElaborazione
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175
        and  ord.ord_da_trasmettere=true -- 19.06.2017 Sofia siac-6175
        and  elem.ord_id=ord.ord_id
        and  elem.data_cancellazione is null
        and  not exists (select 1 from siac_r_ordinativo rord
                          where rord.ord_id_a=ord.ord_id
                          and   rord.data_cancellazione is null
                          and   rord.validita_fine is null
			              and   rord.relaz_tipo_id=ordRelazCodeTipoId)
       )
       select  o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
		       o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
     		   o.mif_ord_soggetto_id, o.mif_ord_modpag_id,
               o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_liq_id, o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_dist_id,
               o.mif_ord_codbollo_id,o.mif_ord_comm_tipo_id,o.mif_ord_notetes_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.siope_tipo_debito_id,o.siope_assenza_motivazione_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id , o.login_operazione
       from ordinativi o
	   where mifOrdRitrasmElabId is null
		  or (mifOrdRitrasmElabId is not null and exists
             (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
       );


      -- ordinativi emessi o emessi/spostati non ancora mai trasmessi, sostituzione di altro ordinativo codice_funzione='S' -- 'SOSPENSIONE'
      strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_spesa_id].Codice funzione='||FUNZIONE_CODE_S||'.';

      insert into mif_t_ordinativo_spesa_id
	  (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil,
       mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
 	   mif_ord_soggetto_id, mif_ord_modpag_id,
 	   mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
 	   mif_ord_liq_id, mif_ord_atto_amm_id, mif_ord_contotes_id, mif_ord_dist_id,
       mif_ord_codbollo_id,mif_ord_comm_tipo_id,mif_ord_notetes_id,mif_ord_desc,
       mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
       mif_ord_siope_tipo_debito_id,mif_ord_siope_assenza_motivazione_id,
       mif_ord_login_creazione,mif_ord_login_modifica,
       ente_proprietario_id, login_operazione)
	  (
       with
       ritrasm as
       (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	    from mif_t_ordinativo_ritrasmesso r
	    where mifOrdRitrasmElabId is not null
	    and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	    and   r.ente_proprietario_id=enteProprietarioId
	    and   r.data_cancellazione is null),
       ordinativi as
       (select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_S mif_ord_codice_funzione,
               bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
               ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
               extract('year' from ord.ord_emissione_data)||'-'||
               lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
               lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione,
               0 mif_ord_ord_anno_movg,
               0 mif_ord_soggetto_id ,0 mif_ord_modpag_id,0 mif_ord_subord_id,
               elem.elem_id mif_ord_elem_id,
               0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_liq_id,0 mif_ord_atto_amm_id,
               ord.contotes_id mif_ord_contotes_id,ord.dist_id mif_ord_dist_id,ord.codbollo_id mif_ord_codbollo_id,
               ord.comm_tipo_id mif_ord_comm_tipo_id,ord.notetes_id mif_ord_notetes_id,
               ord.ord_desc mif_ord_desc,
               ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
               ord.siope_tipo_debito_id,ord.siope_assenza_motivazione_id,
               ord.login_creazione mif_ord_login_creazione, ord.login_modifica mif_ord_login_modifica,
               enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
  	    from siac_t_ordinativo ord,siac_r_ordinativo_stato ord_stato,
             siac_t_bil bil, siac_t_periodo per,
             siac_r_ordinativo_bil_elem elem,siac_r_ordinativo rord
  	    where  bil.ente_proprietario_id=enteProprietarioId
   		  and  per.periodo_id=bil.periodo_id
    	  and  per.anno::integer <=annoBilancio::integer
      	  and  ord.bil_id=bil.bil_id
     	  and  ord.ord_tipo_id=ordTipoCodeId
    	  and  ord_stato.ord_id=ord.ord_id
    	  and  ord_stato.data_cancellazione is null
	   	  and  date_trunc('day',dataElaborazione)>=date_trunc('day',ord_stato.validita_inizio)
  	      and  ord_stato.validita_fine is null
    	  and  ord_stato.ord_stato_id=ordStatoCodeIId
	      and  ord.ord_trasm_oil_data is null
    	  and  ord.ord_emissione_data<=dataElaborazione
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175
          and  ord.ord_da_trasmettere=true -- 19.06.2017 Sofia siac-6175
    	  and  elem.ord_id=ord.ord_id
    	  and  elem.data_cancellazione is null
          and  elem.validita_fine is null
          and  rord.ord_id_a=ord.ord_id
          and  rord.relaz_tipo_id=ordRelazCodeTipoId
          and  rord.data_cancellazione is null
          and  rord.validita_fine is null
        )
        select  o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
		       o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
     		   o.mif_ord_soggetto_id, o.mif_ord_modpag_id,
               o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_liq_id, o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_dist_id,
               o.mif_ord_codbollo_id,o.mif_ord_comm_tipo_id,o.mif_ord_notetes_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.siope_tipo_debito_id,o.siope_assenza_motivazione_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id, o.login_operazione
        from ordinativi o
	    where mifOrdRitrasmElabId is null
		   or (mifOrdRitrasmElabId is not null and exists
              (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
      );

      -- ordinativi emessi e annullati mai trasmessi codice_funzione='N' -- ANNULLO
      strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_spesa_id].Codice funzione='||FUNZIONE_CODE_N||'.';

	  insert into mif_t_ordinativo_spesa_id
	  (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil,
       mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
	   mif_ord_soggetto_id, mif_ord_modpag_id,
	   mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
 	   mif_ord_liq_id, mif_ord_atto_amm_id, mif_ord_contotes_id,mif_ord_dist_id,
       mif_ord_codbollo_id,mif_ord_comm_tipo_id,mif_ord_notetes_id,mif_ord_desc,
       mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
       mif_ord_siope_tipo_debito_id,mif_ord_siope_assenza_motivazione_id,
       mif_ord_login_creazione,mif_ord_login_modifica,
       ente_proprietario_id, login_operazione)
	  (
       with
       ritrasm as
       (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	    from mif_t_ordinativo_ritrasmesso r
	    where mifOrdRitrasmElabId is not null
	    and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	    and   r.ente_proprietario_id=enteProprietarioId
	    and   r.data_cancellazione is null),
       ordinativi as
       (select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_N mif_ord_codice_funzione,
               bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
      	 	   ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
               extract('year' from ord.ord_emissione_data)||'-'||
               lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
               lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione,
               0 mif_ord_ord_anno_movg,
               0 mif_ord_soggetto_id,0 mif_ord_modpag_id,0 mif_ord_subord_id,
               elem.elem_id mif_ord_elem_id,
               0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_liq_id,0 mif_ord_atto_amm_id,
               ord.contotes_id mif_ord_contotes_id,ord.dist_id mif_ord_dist_id,
               ord.codbollo_id mif_ord_codbollo_id,ord.comm_tipo_id mif_ord_comm_tipo_id,
               ord.notetes_id mif_ord_notetes_id,ord.ord_desc mif_ord_desc,
               ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
               ord.siope_tipo_debito_id,ord.siope_assenza_motivazione_id,
               ord.login_creazione mif_ord_login_creazione,ord.login_modifica mif_ord_login_modifica,
               enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
  	    from siac_t_ordinativo ord, siac_r_ordinativo_stato ord_stato,
             siac_t_bil bil, siac_t_periodo per,
             siac_r_ordinativo_bil_elem elem
        where  bil.ente_proprietario_id=enteProprietarioId
         and  per.periodo_id=bil.periodo_id
         and  per.anno::integer <=annoBilancio::integer
         and  ord.bil_id=bil.bil_id
         and  ord.ord_tipo_id=ordTipoCodeId
         and  ord_stato.ord_id=ord.ord_id
         and  ord_stato.validita_inizio<=dataElaborazione -- questa e'' la data di annullamento
         and  ord.ord_emissione_data<=dataElaborazione
         and  ord_stato.data_cancellazione is null
         and  date_trunc('day',dataElaborazione)>=date_trunc('day',ord_stato.validita_inizio)
  	     and  ord_stato.validita_fine is null
         and  ord_stato.ord_stato_id=ordStatoCodeAId
         and  ord.ord_trasm_oil_data is null
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175
         and  ord.ord_da_trasmettere=true -- 19.06.2017 Sofia siac-6175
         and  elem.ord_id=ord.ord_id
         and  elem.data_cancellazione is null
         and  elem.validita_fine is null
       ),
       -- 23.03.2018 Sofia SIAC-5969
       ordSos as
       (
          select rord.ord_id_da, rord.ord_id_a
          from siac_r_ordinativo rOrd
          where rOrd.ente_proprietario_id=enteProprietarioId
          and   rOrd.relaz_tipo_id=ordRelazCodeTipoId
          and   rOrd.data_cancellazione is null
          and   rOrd.validita_fine is null
       ),
       -- 16.04.2018 Sofia siac-6067
       enteOil as
       (
       select false esclAnnull
       from siac_t_ente_oil oil
       where oil.ente_proprietario_id=enteProprietarioId
       and   oil.ente_oil_invio_escl_annulli=false
       )
       select  o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
		       o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
     		   o.mif_ord_soggetto_id, o.mif_ord_modpag_id,
               o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_liq_id, o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_dist_id,
               o.mif_ord_codbollo_id,o.mif_ord_comm_tipo_id,o.mif_ord_notetes_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.siope_tipo_debito_id,o.siope_assenza_motivazione_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id , o.login_operazione
       from ordinativi o, enteOil  -- 16.04.2018 Sofia siac-6067
/*	   where mifOrdRitrasmElabId is null
		  or (mifOrdRitrasmElabId is not null and exists
             (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))*/
	   where
        -- 23.03.2018 Sofia SIAC-5969
        ( mifOrdRitrasmElabId is null
		  or (mifOrdRitrasmElabId is not null and exists
             (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
        )
        and  enteOil.esclAnnull=false -- 16.04.2018 Sofia siac-6067
        -- 23.03.2018 Sofia SIAC-5969 : devono essere escludi ordinativi
        -- sostituiti e sostituti
        and
        not exists
        (select 1 from ordSos where ordSos.ord_id_da=o.mif_ord_ord_id)
        and
        not exists
        (select 1 from ordSos where ordSos.ord_id_a=o.mif_ord_ord_id)
	   );

      -- ordinativi emessi tramessi e poi annullati, anche dopo spostamento  codice_funzione='A' -- ANNULLO
      strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_spesa_id].Codice funzione='||FUNZIONE_CODE_A||'.';

      insert into mif_t_ordinativo_spesa_id
      (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil,
       mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
       mif_ord_soggetto_id, mif_ord_modpag_id,
       mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
       mif_ord_liq_id, mif_ord_atto_amm_id,mif_ord_contotes_id,mif_ord_dist_id,
       mif_ord_codbollo_id,mif_ord_comm_tipo_id,mif_ord_notetes_id,mif_ord_desc,
       mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
       mif_ord_siope_tipo_debito_id,mif_ord_siope_assenza_motivazione_id,
       mif_ord_login_creazione,mif_ord_login_modifica,
       ente_proprietario_id, login_operazione)
      (
       with
       ritrasm as
       (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	    from mif_t_ordinativo_ritrasmesso r
	    where mifOrdRitrasmElabId is not null
	    and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	    and   r.ente_proprietario_id=enteProprietarioId
	    and   r.data_cancellazione is null),
       ordinativi as
       (select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_A mif_ord_codice_funzione,
               bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
               ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
               extract('year' from ord.ord_emissione_data)||'-'||
               lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
               lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione,
               0 mif_ord_ord_anno_movg,
               0 mif_ord_soggetto_id,0 mif_ord_modpag_id,0 mif_ord_subord_id,
               elem.elem_id mif_ord_elem_id,
               0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_liq_id,0 mif_ord_atto_amm_id,
               ord.contotes_id mif_ord_contotes_id,ord.dist_id mif_ord_dist_id,ord.codbollo_id mif_ord_codbollo_id,
               ord.comm_tipo_id mif_ord_comm_tipo_id,
               ord.notetes_id mif_ord_notetes_id,ord.ord_desc mif_ord_desc,
               ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
               ord.siope_tipo_debito_id,ord.siope_assenza_motivazione_id,
               ord.login_creazione mif_ord_login_creazione,ord.login_modifica mif_ord_login_modifica,
               enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
        from siac_t_ordinativo ord,siac_r_ordinativo_stato ord_stato,
             siac_t_bil bil, siac_t_periodo per,
             siac_r_ordinativo_bil_elem elem
        where  bil.ente_proprietario_id=enteProprietarioId
          and  per.periodo_id=bil.periodo_id
          and  per.anno::integer <=annoBilancio::integer
          and  ord.bil_id=bil.bil_id
          and  ord.ord_tipo_id=ordTipoCodeId
   		  and  ord_stato.ord_id=ord.ord_id
  		  and  ord.ord_emissione_data<=dataElaborazione
          and  ord_stato.validita_inizio<=dataElaborazione  -- questa e'' la data di annullamento
  		  and  ord.ord_trasm_oil_data is not null
 		  and  ord.ord_trasm_oil_data<ord_stato.validita_inizio
          and  ord_stato.data_cancellazione is null
          and  date_trunc('day',dataElaborazione)>=date_trunc('day',ord_stato.validita_inizio)
  	      and  ord_stato.validita_fine is null
          and  ord_stato.ord_stato_id=ordStatoCodeAId
          and  ( ord.ord_spostamento_data is null or ord.ord_spostamento_data<ord_stato.validita_inizio)
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175
          and  ord.ord_da_trasmettere=true -- 19.06.2017 Sofia siac-6175
          and  elem.ord_id=ord.ord_id
          and  elem.data_cancellazione is null
          and  elem.validita_fine is null
        ),
        -- 23.03.2018 Sofia SIAC-5969
        ordSos as
        (
          select rord.ord_id_da, rord.ord_id_a
          from siac_r_ordinativo rOrd
          where rOrd.ente_proprietario_id=enteProprietarioId
          and   rOrd.relaz_tipo_id=ordRelazCodeTipoId
          and   rOrd.data_cancellazione is null
          and   rOrd.validita_fine is null
        )
        select o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
		       o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
     		   o.mif_ord_soggetto_id, o.mif_ord_modpag_id,
               o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_liq_id, o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_dist_id,
               o.mif_ord_codbollo_id,o.mif_ord_comm_tipo_id,o.mif_ord_notetes_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.siope_tipo_debito_id,o.siope_assenza_motivazione_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id , o.login_operazione
        from ordinativi o
        -- 23.03.2018 Sofia SIAC-5969
/*	    where mifOrdRitrasmElabId is null
		  or (mifOrdRitrasmElabId is not null and exists
             (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))*/
	    where
        ( mifOrdRitrasmElabId is null
		  or (mifOrdRitrasmElabId is not null and exists
             (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
        )
        -- 23.03.2018 Sofia SIAC-5969 : devono essere escludi ordinativi
        -- sostituiti e sostituti
        and
        not exists
        (select 1 from ordSos where ordSos.ord_id_da=o.mif_ord_ord_id)
        and
        not exists
        (select 1 from ordSos where ordSos.ord_id_a=o.mif_ord_ord_id)
       );

      -- ordinativi emessi , trasmessi  e poi spostati codice_funzione='VB' ( mai annullati ) _--- VARIAZIONE
      strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_spesa_id].Codice funzione='||FUNZIONE_CODE_VB||'.';

      insert into mif_t_ordinativo_spesa_id
      (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil,
       mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
       mif_ord_soggetto_id, mif_ord_modpag_id,
       mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
       mif_ord_liq_id, mif_ord_atto_amm_id, mif_ord_contotes_id,mif_ord_dist_id,
       mif_ord_codbollo_id,mif_ord_comm_tipo_id,mif_ord_notetes_id,mif_ord_desc,
       mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
       mif_ord_siope_tipo_debito_id,mif_ord_siope_assenza_motivazione_id,
       mif_ord_login_creazione,mif_ord_login_modifica,
       ente_proprietario_id, login_operazione)
      (
       with
       ritrasm as
       (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	    from mif_t_ordinativo_ritrasmesso r
	    where mifOrdRitrasmElabId is not null
	    and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	    and   r.ente_proprietario_id=enteProprietarioId
	    and   r.data_cancellazione is null),
       ordinativi as
       (select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_VB mif_ord_codice_funzione,
               bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
               ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
               extract('year' from ord.ord_emissione_data)||'-'||
               lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
               lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione,
               0 mif_ord_ord_anno_movg,
               0 mif_ord_soggetto_id,0 mif_ord_modpag_id,0 mif_ord_subord_id,
               elem.elem_id mif_ord_elem_id,
               0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_liq_id,0 mif_ord_atto_amm_id,
               ord.contotes_id mif_ord_contotes_id,ord.dist_id mif_ord_dist_id,ord.codbollo_id mif_ord_codbollo_id,
               ord.comm_tipo_id mif_ord_comm_tipo_id,
               ord.notetes_id mif_ord_notetes_id,ord.ord_desc mif_ord_desc,
               ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
               ord.siope_tipo_debito_id,ord.siope_assenza_motivazione_id,
               ord.login_creazione mif_ord_login_creazione,ord.login_modifica mif_ord_login_modifica,
               enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
        from siac_t_ordinativo ord,siac_t_bil bil, siac_t_periodo per, siac_r_ordinativo_bil_elem elem
        where  bil.ente_proprietario_id=enteProprietarioId
         and  per.periodo_id=bil.periodo_id
         and  per.anno::integer <=annoBilancio::integer
         and  ord.bil_id=bil.bil_id
         and  ord.ord_tipo_id=ordTipoCodeId
         and  ord.ord_emissione_data<=dataElaborazione
         and  ord.ord_trasm_oil_data is not null
         and  ord.ord_spostamento_data is not null
         and  ord.ord_trasm_oil_data<ord.ord_spostamento_data
         and  ord.ord_spostamento_data<=dataElaborazione
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175
         and  ord.ord_da_trasmettere=true -- 19.06.2017 Sofia siac-6175
         and  not exists (select 1 from siac_r_ordinativo_stato ord_stato
  				          where  ord_stato.ord_id=ord.ord_id
					        and  ord_stato.ord_stato_id=ordStatoCodeAId
                            and  ord_stato.data_cancellazione is null)
         and  elem.ord_id=ord.ord_id
         and  elem.data_cancellazione is null
         and  elem.validita_fine is null
        )
       select o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
		       o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
     		   o.mif_ord_soggetto_id, o.mif_ord_modpag_id,
               o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_liq_id, o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_dist_id,
               o.mif_ord_codbollo_id,o.mif_ord_comm_tipo_id,o.mif_ord_notetes_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.siope_tipo_debito_id,o.siope_assenza_motivazione_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id , o.login_operazione
       from ordinativi o
	   where mifOrdRitrasmElabId is null
		  or (mifOrdRitrasmElabId is not null and exists
             (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
      );
      -- aggiornamento mif_t_ordinativo_spesa_id per id


      strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per fase_operativa_code.';
      update mif_t_ordinativo_spesa_id m
      set mif_ord_bil_fase_ope=(select fase.fase_operativa_code from siac_r_bil_fase_operativa rFase, siac_d_fase_operativa fase
      							where rFase.bil_id=m.mif_ord_bil_id
                                and   rFase.data_cancellazione is null
                                and   rFase.validita_fine is null
                                and   fase.fase_operativa_id=rFase.fase_operativa_id
                                and   fase.data_cancellazione is null
                                and   fase.validita_fine is null);


      strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per soggetto_id.';
      -- soggetto_id

      update mif_t_ordinativo_spesa_id m
      set mif_ord_soggetto_id=coalesce(s.soggetto_id,0)
      from siac_r_ordinativo_soggetto s
      where s.ord_id=m.mif_ord_ord_id
      and s.data_cancellazione is null
      and s.validita_fine is null;

      strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per modpag_id.';

      -- modpag_id
      update mif_t_ordinativo_spesa_id m set  mif_ord_modpag_id=coalesce(s.modpag_id,0)
      from siac_r_ordinativo_modpag s
      where s.ord_id=m.mif_ord_ord_id
   	  and s.modpag_id is not null
      and s.data_cancellazione is null
      and s.validita_fine is null;

      strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per modpag_id [CSI].';
      update mif_t_ordinativo_spesa_id m set mif_ord_modpag_id=coalesce(rel.modpag_id,0)
      from siac_r_ordinativo_modpag s, siac_r_soggrel_modpag rel
      where s.ord_id=m.mif_ord_ord_id
      and s.soggetto_relaz_id is not null
      and rel.soggetto_relaz_id=s.soggetto_relaz_id
      and s.data_cancellazione is null
      and s.validita_fine is null
      and rel.data_cancellazione is null
      --  and rel.validita_fine is null
      -- 04.04.2018 Sofia SIAC-6064
      and date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(rel.validita_fine,dataElaborazione))
      and exists  (select  1 from siac_r_soggrel_modpag rel1
                   where    rel.soggetto_relaz_id=s.soggetto_relaz_id
		           and      rel1.soggrelmpag_id=rel.soggrelmpag_id
         		   order by rel1.modpag_id
			       limit 1);

      strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per subord_id.';

      -- subord_id
      update mif_t_ordinativo_spesa_id m
      set mif_ord_subord_id =
                             (select s.ord_ts_id from siac_t_ordinativo_ts s
                               where s.ord_id=m.mif_ord_ord_id
                                 and s.data_cancellazione is null
                                 and s.validita_fine is null
                               order by s.ord_ts_id
                               limit 1);

     strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per liq_id.';

	 -- liq_id
	 update mif_t_ordinativo_spesa_id m
	 set mif_ord_liq_id = (select s.liq_id from siac_r_liquidazione_ord s
                            where s.sord_id = m.mif_ord_subord_id
                              and s.data_cancellazione is null
                              and s.validita_fine is null);
     strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per movgest_ts_id.';

     -- movgest_ts_id
     update mif_t_ordinativo_spesa_id m
     set mif_ord_movgest_ts_id = (select s.movgest_ts_id from siac_r_liquidazione_movgest s
                                   where s.liq_id = m.mif_ord_liq_id
                                     and s.data_cancellazione is null
                                     and s.validita_fine is null);
     strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per movgest_id.';

     -- movgest_id
     update mif_t_ordinativo_spesa_id m
     set mif_ord_movgest_id = (select s.movgest_id from siac_t_movgest_ts s
                               where  s.movgest_ts_id = m.mif_ord_movgest_ts_id
                               and s.data_cancellazione is null
                               and s.validita_fine is null);

     strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per movgest_id.';

     -- movgest_anno
     update mif_t_ordinativo_spesa_id m
     set mif_ord_ord_anno_movg = (select s.movgest_anno from siac_t_movgest s
                              	  where  s.movgest_id = m.mif_ord_movgest_id
                             	  and s.data_cancellazione is null
                                  and s.validita_fine is null);


     strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per attoamm_id.';

    -- attoamm_id
    update mif_t_ordinativo_spesa_id m
    set mif_ord_atto_amm_id = (select s.attoamm_id from siac_r_liquidazione_atto_amm s
                                where s.liq_id = m.mif_ord_liq_id
                                  and s.data_cancellazione is null
                                  and s.validita_fine is null);

    strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per attoamm_id movgest_ts.';
	-- attoamm_movgest_ts_id
    update mif_t_ordinativo_spesa_id m
    set mif_ord_atto_amm_movg_id = (select s.attoamm_id from siac_r_movgest_ts_atto_amm s
                                    where s.movgest_ts_id = m.mif_ord_movgest_ts_id
                                    and s.data_cancellazione is null
                                    and s.validita_fine is null);

	-- mif_ord_programma_id
    -- mif_ord_programma_code
    -- mif_ord_programma_desc
    strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per mif_ord_programma_id mif_ord_programma_code mif_ord_programma_desc.';
    update mif_t_ordinativo_spesa_id m
    set (mif_ord_programma_id,mif_ord_programma_code,mif_ord_programma_desc) = (class.classif_id,class.classif_code,class.classif_desc) -- 11.01.2016 Sofia
    from siac_r_bil_elem_class classElem, siac_t_class class
    where classElem.elem_id=m.mif_ord_elem_id
    and   class.classif_id=classElem.classif_id
    and   class.classif_tipo_id=programmaCodeTipoId
    and   classElem.data_cancellazione is null
    and   classElem.validita_fine is null
    and   class.data_cancellazione is null;

	-- mif_ord_titolo_id
    -- mif_ord_titolo_code
    strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per mif_ord_titolo_id mif_ord_titolo_code.';
    update mif_t_ordinativo_spesa_id m
    set (mif_ord_titolo_id, mif_ord_titolo_code) = (cp.classif_id,cp.classif_code)
	from siac_r_bil_elem_class classElem, siac_t_class cf, siac_r_class_fam_tree r, siac_t_class cp
	where classElem.elem_id=m.mif_ord_elem_id
    and   cf.classif_id=classElem.classif_id
    and   cf.data_cancellazione is null
    and   classElem.data_cancellazione is null
    and   classElem.validita_fine is null
	and   r.classif_id=cf.classif_id
	and   r.classif_id_padre is not null
	and   r.classif_fam_tree_id=famTitSpeMacroAggrCodeId
    and   r.data_cancellazione is null
    and   r.validita_fine is null
	and   cp.classif_id=r.classif_id_padre
    and   cp.data_cancellazione is null;






	-- mif_ord_note_attr_id
	strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_spesa_id] per mif_ord_note_attr_id.';
	update mif_t_ordinativo_spesa_id m
    set mif_ord_note_attr_id= attr.ord_attr_id
    from siac_r_ordinativo_attr attr
    where attr.ord_id=m.mif_ord_ord_id
    and   attr.attr_id=noteOrdAttrId
    and   attr.data_cancellazione is null
    and   attr.validita_fine is null;


    strMessaggio:='Verifica esistenza ordinativi di spesa da trasmettere.';
    codResult:=null;
    select 1 into codResult
    from mif_t_ordinativo_spesa_id where ente_proprietario_id=enteProprietarioId;

    if codResult is null then
      codResult:=-12;
      RAISE EXCEPTION ' Nessun ordinativo di spesa da trasmettere.';
    end if;


    -- <ritenute>
    flussoElabMifElabRec:=null;
    flussoElabMifElabRec:=mifFlussoElabMifArr[FLUSSO_MIF_ELAB_RITENUTA];

    strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                   ||' tipo flusso '||MANDMIF_TIPO||'.';
    if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    end if;
    if flussoElabMifElabRec.flussoElabMifAttivo=true then
    	if flussoElabMifElabRec.flussoElabMifElab=true then
        	if flussoElabMifElabRec.flussoElabMifParam is not null then
  					tipoRelazRitOrd:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
	                tipoRelazSprOrd:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
	                tipoRelazSubOrd:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                    tipoOnereIrpef:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));
                    tipoOnereInps:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,5));
                    tipoOnereIrpeg:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,6));


                    if tipoRelazRitOrd is null or tipoRelazSprOrd is null or tipoRelazSubOrd is null
                       or tipoOnereInps is null or tipoOnereIrpef is null
                       or tipoOnereIrpeg is null then
                       RAISE EXCEPTION ' Dati configurazione ritenute non completi.';
                    end if;
                    isRitenutaAttivo:=true;
            end if;
	    else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	   	end if;
   end if;

   if isRitenutaAttivo=true then
     	flussoElabMifElabRec:=null;
        flussoElabMifElabRec:=mifFlussoElabMifArr[FLUSSO_MIF_ELAB_RITENUTA_PRG];
         strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	   	 if flussoElabMifElabRec.flussoElabMifId is null then
  			  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	   	 end if;
    	 if flussoElabMifElabRec.flussoElabMifAttivo=true then
    		if flussoElabMifElabRec.flussoElabMifElab=true then
            	if flussoElabMifElabRec.flussoElabMifDef is not null then
                	progrRitenuta:=flussoElabMifElabRec.flussoElabMifDef;
                end if;
	    	else
				RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	   		end if;
	     else
    	   isRitenutaAttivo:=false;
		 end if;
   end if;

   if isRitenutaAttivo=true then
           strMessaggio:='Lettura dati identificativo tipo Onere '||tipoOnereIrpef
                       ||' sezione ritenute - tipo flusso '||MANDMIF_TIPO||'.';

           select tipo.onere_tipo_id into tipoOnereIrpefId
           from siac_d_onere_tipo tipo
           where tipo.ente_proprietario_id=enteProprietarioId
           and   tipo.onere_tipo_code=tipoOnereIrpef
           and   tipo.data_cancellazione is null
 	  	   and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
   		   and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));

           if tipoOnereIrpefId is null then
            	RAISE EXCEPTION ' Dato non reperito.';
           end if;

           strMessaggio:='Lettura dati identificativo tipo Onere '||tipoOnereInps
                       ||' sezione ritenute - tipo flusso '||MANDMIF_TIPO||'.';

           select tipo.onere_tipo_id into tipoOnereInpsId
           from siac_d_onere_tipo tipo
           where tipo.ente_proprietario_id=enteProprietarioId
           and   tipo.onere_tipo_code=tipoOnereInps
           and   tipo.data_cancellazione is null
 	  	   and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		   and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));


           if tipoOnereInpsId is null then
            	RAISE EXCEPTION ' Dato non reperito.';
           end if;

		   strMessaggio:='Lettura dati identificativo tipo Onere '||tipoOnereIrpeg
                        ||' sezione ritenute - tipo flusso '||MANDMIF_TIPO||'.';

           select tipo.onere_tipo_id into tipoOnereIrpegId
           from siac_d_onere_tipo tipo
           where tipo.ente_proprietario_id=enteProprietarioId
           and   tipo.onere_tipo_code=tipoOnereIrpeg
           and   tipo.data_cancellazione is null
 	  	   and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		   and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));


           if tipoOnereIrpegId is null then
            	RAISE EXCEPTION ' Dato non reperito.';
           end if;
   end if;


   -- <sospesi>
   -- <sospeso>
   -- <numero_provvisorio>
   -- <importo_provvisorio>
   flussoElabMifElabRec:=null;
   flussoElabMifElabRec:=mifFlussoElabMifArr[FLUSSO_MIF_ELAB_NUM_SOSPESO];
   mifCountRec:=FLUSSO_MIF_ELAB_NUM_SOSPESO;
   strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
   if flussoElabMifElabRec.flussoElabMifId is null then
  	  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
   end if;
   if flussoElabMifElabRec.flussoElabMifAttivo=true then
    	if flussoElabMifElabRec.flussoElabMifElab=true then
			null;
        else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
   		end if;
        isRicevutaAttivo:=true;
   end if;




   flussoElabMifElabRec:=null;
   mifCountRec:=FLUSSO_MIF_ELAB_FATTURE;
   flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
   strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'.';
   if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
   end if;
   if flussoElabMifElabRec.flussoElabMifAttivo=true then
   	if flussoElabMifElabRec.flussoElabMifElab=true then
    	if flussoElabMifElabRec.flussoElabMifParam is not null  then
 		    numeroDocs:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            tipoDocs  :=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
            tipoGruppoDocs  :=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
            if numeroDocs is not null and numeroDocs!='' and
               tipoDocs is not null and tipoDocs!='' and
               tipoGruppoDocs is not null and tipoGruppoDocs!='' then
                tipoDocs:=tipoDocs||'|'||tipoGruppoDocs;
            	isGestioneFatture:=true;
            end if;
		end if;
    else
    	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
    end if;
   end if;

   if isGestioneFatture=true then

    flussoElabMifElabRec:=null;
    mifCountRec:=FLUSSO_MIF_ELAB_FATT_CODFISC;
    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'.';
    if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    end if;
    if flussoElabMifElabRec.flussoElabMifAttivo=true then
   	 if flussoElabMifElabRec.flussoElabMifElab=true then
    	if flussoElabMifElabRec.flussoElabMifParam is not null  then
 		    docAnalogico:=flussoElabMifElabRec.flussoElabMifParam;
		end if;
     else
    	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
     end if;
    end if;

   end if;

   if isGestioneFatture=true then
    flussoElabMifElabRec:=null;
    mifCountRec:=FLUSSO_MIF_ELAB_FATT_DATASCAD_PAG;
    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'.';
    if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    end if;
    if flussoElabMifElabRec.flussoElabMifAttivo=true then
   	 if flussoElabMifElabRec.flussoElabMifElab=true then
    	if flussoElabMifElabRec.flussoElabMifParam is not null  then
            attrCodeDataScad:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
		end if;
     else
    	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
     end if;
    end if;

   end if;

   if isGestioneFatture=true then

    flussoElabMifElabRec:=null;
    mifCountRec:=FLUSSO_MIF_ELAB_FATT_NATURA_PAG;
    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'.';
    if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    end if;
    if flussoElabMifElabRec.flussoElabMifAttivo=true then
   	 if flussoElabMifElabRec.flussoElabMifElab=true then
        -- 20.02.2018 Sofia JIRA siac-5849
        /*
    	if flussoElabMifElabRec.flussoElabMifParam is not null  then
            titoloCorrente:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            descriTitoloCorrente:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
            titoloCapitale:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
            descriTitoloCapitale:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));

		end if;*/

        -- 20.02.2018 Sofia JIRA siac-5849
        if flussoElabMifElabRec.flussoElabMifDef is not null then
        	defNaturaPag:=flussoElabMifElabRec.flussoElabMifDef;
        end if;
     else
    	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
     end if;
    end if;

   end if;

   --- lettura mif_t_ordinativo_spesa_id per popolamento mif_t_ordinativo_spesa
   codResult:=null;
   strMessaggio:='Lettura ordinativi di spesa da migrare [mif_t_ordinativo_spesa_id].Inizio ciclo.';
   for mifOrdinativoIdRec IN
   (select ms.*
     from mif_t_ordinativo_spesa_id ms
     where ms.ente_proprietario_id=enteProprietarioId
     order by ms.mif_ord_anno_bil,
              ms.mif_ord_ord_numero
   )
   loop


		mifFlussoOrdinativoRec:=null;
		MDPRec:=null;
        codAccreRec:=null;
		bilElemRec:=null;
        soggettoRec:=null;
        soggettoSedeRec:=null;
        soggettoRifId:=null;
        soggettoSedeSecId:=null;
		indirizzoRec:=null;
        mifOrdSpesaId:=null;




        isIndirizzoBenef:=true;
        isIndirizzoBenQuiet:=true;


        bavvioFrazAttr:=false;
        bAvvioSiopeNew:=false;


	    statoBeneficiario:=false;
		statoDelegatoCredEff:=false;

        -- lettura importo ordinativo
 		strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura importo ordinativo di spesa per tipo flusso '||MANDMIF_TIPO||'.';

        mifFlussoOrdinativoRec.mif_ord_importo:=fnc_mif_importo_ordinativo(mifOrdinativoIdRec.mif_ord_ord_id,ordDetTsTipoId,
        													  		       flussoElabMifTipoDec);
        if flussoElabMifTipoDec=true and
           coalesce(position('.' in mifFlussoOrdinativoRec.mif_ord_importo),0)=0 then
           mifFlussoOrdinativoRec.mif_ord_importo:=mifFlussoOrdinativoRec.mif_ord_importo||'.00';
        end if;

        -- lettura MDP ti ordinativo
 		strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura MDP ordinativo di spesa per tipo flusso '||MANDMIF_TIPO||'.';

		select * into MDPRec
        from siac_t_modpag mdp
        where mdp.modpag_id=mifOrdinativoIdRec.mif_ord_modpag_id;
        if MDPRec is null then
        	RAISE EXCEPTION ' Errore in lettura siac_t_modpag.';
        end if;

        -- lettura accreditoTipo ti ordinativo
 		strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura accredito tipo ordinativo di spesa per tipo flusso '||MANDMIF_TIPO||'.';

        select tipo.accredito_tipo_id, tipo.accredito_tipo_code,tipo.accredito_tipo_desc,
               gruppo.accredito_gruppo_id, gruppo.accredito_gruppo_code
               into codAccreRec
        from siac_d_accredito_tipo tipo, siac_d_accredito_gruppo gruppo
        where tipo.accredito_tipo_id=MDPRec.accredito_tipo_id
          and tipo.data_cancellazione is null
          and date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		  and date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione))
          and gruppo.accredito_gruppo_id=tipo.accredito_gruppo_id;
        if codAccreRec is null then
        	RAISE EXCEPTION ' Errore in lettura siac_d_accredito_tipo siac_d_accredito_gruppo.';
        end if;


        -- lettura dati soggetto ordinativo
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati soggetto [siac_r_soggetto_relaz] ordinativo di spesa per tipo flusso '||MANDMIF_TIPO||'.';
        select rel.soggetto_id_da into soggettoRifId
        from  siac_r_soggetto_relaz rel
        where rel.soggetto_id_a=mifOrdinativoIdRec.mif_ord_soggetto_id
        and   rel.relaz_tipo_id=ordSedeSecRelazTipoId
        and   rel.ente_proprietario_id=enteProprietarioId
        and   rel.data_cancellazione is null
		and   rel.validita_fine is null;

        if soggettoRifId is null then
	        soggettoRifId:=mifOrdinativoIdRec.mif_ord_soggetto_id;
        else
        	soggettoSedeSecId:=mifOrdinativoIdRec.mif_ord_soggetto_id;
        end if;

        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati soggetto di riferimento ordinativo di spesa per tipo flusso '||MANDMIF_TIPO||'.';

        select * into soggettoRec
   	    from siac_t_soggetto sogg
       	where sogg.soggetto_id=soggettoRifId;

        if soggettoRec is null then
        	RAISE EXCEPTION ' Errore in lettura siac_t_soggetto [soggetto_id= %].',soggettoRifId;
        end if;

        if soggettoSedeSecId is not null then
	        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati sede sec. soggetto di riferimento ordinativo di spesa per tipo flusso '||MANDMIF_TIPO||'.';

            select * into soggettoSedeRec
   		    from siac_t_soggetto sogg
	       	where sogg.soggetto_id=soggettoSedeSecId;

	        if soggettoSedeRec is null then
    	    	RAISE EXCEPTION ' Errore in lettura siac_t_soggetto [soggetto_id=%]',soggettoSedeSecId;
        	end if;

        end if;



        -- lettura elemento bilancio  ordinativo
 		strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura elemento bilancio ordinativo di spesa per tipo flusso '||MANDMIF_TIPO||'.';

		select * into bilElemRec
        from siac_t_bil_elem elem
        where elem.elem_id=mifOrdinativoIdRec.mif_ord_elem_id;
        if bilElemRec is null then
        	RAISE EXCEPTION ' Errore in lettura siac_t_bil_elem.';
        end if;

		-- dati testata flusso presenti come tag solo in testata
        -- valorizzati su ogni ordinativo trasmesso
        -- <testata_flusso>
		-- <codice_ABI_BT>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_COD_ABI_BT;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_abi is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_abi_bt:=enteOilRec.ente_oil_abi;
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_abi_bt:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <codice_ente>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_COD_ENTE_IPA;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice_ipa is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_ipa:=trim(both ' ' from enteOilRec.ente_oil_codice_ipa);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_ipa:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <descrizione_ente>
	    flussoElabMifElabRec:=null;
		mifCountRec:=FLUSSO_MIF_ELAB_TEST_DESC_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteProprietarioRec.ente_denominazione is not null then
            	mifFlussoOrdinativoRec.mif_ord_desc_ente:=enteProprietarioRec.ente_denominazione;
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
               	mifFlussoOrdinativoRec.mif_ord_desc_ente:=substring(flussoElabMifElabRec.flussoElabMifDef from 1 for 30);
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

	    -- <codice_istat_ente>
	    flussoElabMifElabRec:=null;
		mifCountRec:=FLUSSO_MIF_ELAB_TEST_COD_ISTAT_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice_istat is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_istat:=enteOilRec.ente_oil_codice_istat;
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
               	mifFlussoOrdinativoRec.mif_ord_codice_ente_istat:=substring(flussoElabMifElabRec.flussoElabMifDef from 1 for 30);
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <codice_fiscale_ente>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_CODFISC_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteProprietarioRec.codice_fiscale is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente:=trim(both ' ' from enteProprietarioRec.codice_fiscale);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <codice_tramite_ente>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_CODTRAMITE_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice_tramite is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite:=trim(both ' ' from enteOilRec.ente_oil_codice_tramite);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <codice_tramite_BT>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_CODTRAMITE_BT;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice_tramite_bt is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite_bt:=trim(both ' ' from enteOilRec.ente_oil_codice_tramite_bt);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite_bt:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <codice_ente_BT>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_COD_ENTE_BT;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_bt:=trim(both ' ' from enteOilRec.ente_oil_codice);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_bt:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <riferimento_ente>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_RIFERIMENTO_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_riferimento is not null then
            	mifFlussoOrdinativoRec.mif_ord_riferimento_ente:=trim(both ' ' from enteOilRec.ente_oil_riferimento);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_riferimento_ente:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;
        -- </testata_flusso>

        -- <testata_esercizio>
        -- <esercizio>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_ESERCIZIO;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
            mifFlussoOrdinativoRec.mif_ord_anno_esercizio:=mifOrdinativoIdRec.mif_ord_anno_bil;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;
        -- </testata_esercizio>

        mifCountRec:=FLUSSO_MIF_ELAB_INIZIO_ORD;
        mifCountTmpRec:=FLUSSO_MIF_ELAB_INIZIO_ORD;

        -- <mandato>
		-- <tipo_operazione>
        flussoElabMifElabRec:=null;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if  flussoElabMifElabRec.flussoElabMifAttivo=true then
         if   flussoElabMifElabRec.flussoElabMifElab=true then
            if flussoElabMifElabRec.flussoElabMifParam is not null then
	            flussoElabMifValore:=fnc_mif_ordinativo_carico_bollo( mifOrdinativoIdRec.mif_ord_codice_funzione,flussoElabMifElabRec.flussoElabMifParam);
            else
            	flussoElabMifValore:=mifOrdinativoIdRec.mif_ord_codice_funzione;
            end if;
            if flussoElabMifValore is not null then
				mifFlussoOrdinativoRec.mif_ord_codice_funzione:=flussoElabMifValore;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <numero_mandato>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
/*         	if flussoElabMifTipoDec=false then
				mifFlussoOrdinativoRec.mif_ord_numero:=lpad(mifOrdinativoIdRec.mif_ord_ord_numero,NUM_SETTE,ZERO_PAD);
            else
	            mifFlussoOrdinativoRec.mif_ord_numero:=mifOrdinativoIdRec.mif_ord_ord_numero;
            end if;*/
            mifFlussoOrdinativoRec.mif_ord_numero:=mifOrdinativoIdRec.mif_ord_ord_numero;
         else
            RAISE EXCEPTION ' Configurazione tag/campo non elaborabile.';
         end if;
        end if;


        -- <data_mandato>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true  then
         if  flussoElabMifElabRec.flussoElabMifElab=true then
			mifFlussoOrdinativoRec.mif_ord_data:=mifOrdinativoIdRec.mif_ord_data_emissione;
         else
            RAISE EXCEPTION ' Configurazione tag/campo non  elaborabile.';
         end if;
        end if;



		-- <importo_mandato>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
			-- calcolato inizio ciclo
            null;
         else
         	mifFlussoOrdinativoRec.mif_ord_importo:='0';
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <conto_evidenza>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
			if mifOrdinativoIdRec.mif_ord_contotes_id is not null then
                 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
					   ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura conto tesoreria.';


            	select d.contotes_code into flussoElabMifValore
                from siac_d_contotesoreria d
                where d.contotes_id=mifOrdinativoIdRec.mif_ord_contotes_id;
                if flussoElabMifValore is null then
                	RAISE EXCEPTION ' Dato non presente in archivio.';
                end if;
            end if;

            if flussoElabMifValore is not null then
	            mifFlussoOrdinativoRec.mif_ord_bci_conto_tes:=substring(flussoElabMifValore from 1 for 7 );
            end if;

         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <estremi_provvedimento_autorizzativo>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
					   ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        flussoElabMifValore:=null;
        attoAmmRec:=null;
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
           if mifOrdinativoIdRec.mif_ord_atto_amm_id is not null then
			if flussoElabMifElabRec.flussoElabMifParam is not null then
                if attoAmmTipoSpr is null then
            		attoAmmTipoSpr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                end if;
                if attoAmmTipoAll is null then
                	attoAmmTipoAll:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
            	end if;
            end if;

            select * into attoAmmRec
            from fnc_mif_estremi_atto_amm(mifOrdinativoIdRec.mif_ord_atto_amm_id,
                                          mifOrdinativoIdRec.mif_ord_atto_amm_movg_id,
                                          attoAmmTipoSpr,attoAmmTipoAll,
                                          dataElaborazione,dataFineVal);
           end if;

           if attoAmmRec.attoAmmEstremi is not null   then
                mifFlussoOrdinativoRec.mif_ord_estremi_attoamm:=attoAmmRec.attoAmmEstremi;
           elseif flussoElabMifElabRec.flussoElabMifDef is not null then
           		mifFlussoOrdinativoRec.mif_ord_estremi_attoamm:=flussoElabMifElabRec.flussoElabMifDef;
           end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
       end if;


       -- <responsabile_provvedimento>
	   flussoElabMifElabRec:=null;
	   flussoElabMifValore:=null;
	   flussoElabMifValoreDesc:=null;
	   mifCountRec:=mifCountRec+1;
	   flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

	  if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	  end if;
	  if flussoElabMifElabRec.flussoElabMifAttivo=true then
   		if flussoElabMifElabRec.flussoElabMifElab=true then


         if mifOrdinativoIdRec.mif_ord_login_creazione is not null then
			flussoElabMifValore:=mifOrdinativoIdRec.mif_ord_login_creazione;
         end if;

         if flussoElabMifValore is not null then
        	select substring(s.soggetto_desc  from 1 for 12)  into flussoElabMifValoreDesc
			from siac_t_account a, siac_r_soggetto_ruolo r, siac_t_soggetto s
			where a.ente_proprietario_id=enteProprietarioId
            and   a.account_code=flussoElabMifValore
			and   r.soggeto_ruolo_id=a.soggeto_ruolo_id
			and   s.soggetto_id=r.soggetto_id
            and   r.data_cancellazione is null
            and   r.validita_fine is null
            and   a.data_cancellazione is null
            and   a.validita_fine is null;

            if 	flussoElabMifValoreDesc is not null then
            	flussoElabMifValore:=flussoElabMifValoreDesc;
            end if;
         end if;

         if flussoElabMifValore is not null then
            mifFlussoOrdinativoRec.mif_ord_resp_attoamm:=substring(flussoElabMifValore from 1 for 12);
         end if;
       else
		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  	   end if;
     end if;

     -- <ufficio_responsabile>
     mifCountRec:=mifCountRec+1;

     -- <bilancio>
     -- <codifica_bilancio>
     flussoElabMifElabRec:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then

                mifFlussoOrdinativoRec.mif_ord_codifica_bilancio:=mifOrdinativoIdRec.mif_ord_programma_code
                												||mifOrdinativoIdRec.mif_ord_titolo_code;

                mifFlussoOrdinativoRec.mif_ord_capitolo:=bilElemRec.elem_code;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
      end if;

	  -- <descrizione_codifica>
      flussoElabMifElabRec:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
            	mifFlussoOrdinativoRec.mif_ord_desc_codifica:=substring( bilElemRec.elem_desc from 1 for 30);
                mifFlussoOrdinativoRec.mif_ord_desc_codifica_bil:=substring( mifOrdinativoIdRec.mif_ord_programma_desc from 1 for 30);
     	 else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
     	 end if;
      end if;

      -- <gestione>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if flussoElabMifElabRec.flussoElabMifDef is not null then
            	if mifOrdinativoIdRec.mif_ord_anno_bil=mifOrdinativoIdRec.mif_ord_ord_anno_movg then
	            	flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
                else
	                flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,2));
                end if;
            	mifFlussoOrdinativoRec.mif_ord_gestione:=flussoElabMifValore;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
      end if;

      -- <anno_residuo>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then

            if  mifOrdinativoIdRec.mif_ord_anno_bil!=mifOrdinativoIdRec.mif_ord_ord_anno_movg  then
               	   mifFlussoOrdinativoRec.mif_ord_anno_res:=mifOrdinativoIdRec.mif_ord_ord_anno_movg;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
      end if;


      -- <numero_articolo>
      flussoElabMifElabRec:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
            	mifFlussoOrdinativoRec.mif_ord_articolo:=bilElemRec.elem_code2;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
      end if;

      -- <voce_economica>
      mifCountRec:=mifCountRec+1;


      -- <importo_bilancio>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
        if flussoElabMifElabRec.flussoElabMifElab=true then
           	mifFlussoOrdinativoRec.mif_ord_importo_bil:=mifFlussoOrdinativoRec.mif_ord_importo;
        else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
        end if;
      end if;

      -- </bilancio>

      -- <funzionario_delegato>
      -- <codice_funzionario_delegato>
      -- <importo_funzionario_delegato>
      -- <tipologia_funzionario_delegato>
      -- <numero_pagamento_funzionario_delegato>
      mifCountRec:=mifCountRec+5;

      -- <informazioni_beneficiario>

      -- <progressivo_beneficiario>
      flussoElabMifElabRec:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
--	  raise notice 'progressivo_beneficiario mifCountRec=%',mifCountRec;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
        if flussoElabMifElabRec.flussoElabMifElab=true then
                if flussoElabMifElabRec.flussoElabMifDef is not null then
                	mifFlussoOrdinativoRec.mif_ord_progr_benef:=flussoElabMifElabRec.flussoElabMifDef;
                end if;
        else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
        end if;
      end if;

      -- <importo_beneficiario>
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=null;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
  	 	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
     		mifFlussoOrdinativoRec.mif_ord_importo_benef:=mifFlussoOrdinativoRec.mif_ord_importo;
	     else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	     end if;
      end if;


	  -- <tipo_pagamento>
      flussoElabMifElabRec:=null;
      tipoPagamRec:=null;
	  mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
     	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
	 	if flussoElabMifElabRec.flussoElabMifElab=true then
    	   	if flussoElabMifElabRec.flussoElabMifParam is not null and
               flussoElabMifElabRec.flussoElabMifDef is not null then
            	if codicePaeseIT is null then
                	codicePaeseIT:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                end if;
                if codiceAccreCB is null then
	                codiceAccreCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                end if;
                if codiceAccreREG is null then
	                codiceAccreREG:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                end if;
				if codiceSepa is null then
	                codiceSepa:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));
                end if;
				if codiceExtraSepa is null then
	                codiceExtraSepa:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,5));
                end if;

                if codiceGFB is null then
	                codiceGFB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,6));
                end if;

                select * into tipoPagamRec
                from fnc_mif_tipo_pagamento_splus( mifOrdinativoIdRec.mif_ord_ord_id,
											       (case when MDPRec.iban is not null and length(MDPRec.iban)>=2
                                                   then substring(MDPRec.iban from 1 for 2)
                                                   else null end), -- codicePaese
	                                               codicePaeseIT,codiceSepa,codiceExtraSepa,
                                                   codiceAccreCB,codiceAccreREG,
                                                   flussoElabMifElabRec.flussoElabMifDef, -- compensazione
												   MDPRec.accredito_tipo_id,
                                                   codAccreRec.accredito_gruppo_code,
                                                   mifFlussoOrdinativoRec.mif_ord_importo::NUMERIC, -- importo_ordinativo
                                                   (case when codAccreRec.accredito_tipo_code=codiceGFB then true else false end),
	                                               dataElaborazione,dataFineVal,
                                                   enteProprietarioId);
                if tipoPagamRec is not null then
                	if tipoPagamRec.descTipoPagamento is not null then
                    	mifFlussoOrdinativoRec.mif_ord_pagam_tipo:=tipoPagamRec.descTipoPagamento;
                        mifFlussoOrdinativoRec.mif_ord_pagam_code:=tipoPagamRec.codeTipoPagamento;
                    end if;
                end if;

	        end if;
     	else
       		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	    end if;
      end if;

      -- <impignorabili>
      mifCountRec:=mifCountRec+1;


      -- <frazionabile>
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then --1
         if flussoElabMifElabRec.flussoElabMifElab=true then --2
          if flussoElabMifElabRec.flussoElabMifParam is not null and --3
             flussoElabMifElabRec.flussoElabMifDef is not null  then

             if dataAvvioFrazAttr is null then
             	dataAvvioFrazAttr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
             end if;

             if dataAvvioFrazAttr is not null and
                dataAvvioFrazAttr::timestamp<=date_trunc('DAY',mifOrdinativoIdRec.mif_ord_data_emissione::timestamp) -- data emissione ordinativo
                then
                bavvioFrazAttr:=true;
             end if;

             if bavvioFrazAttr=false then
              if classifTipoCodeFraz is null then
               classifTipoCodeFraz:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
              end if;

              if classifTipoCodeFrazVal is null then
               classifTipoCodeFrazVal:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
              end if;
             else
              if attrFrazionabile is null then
	             attrFrazionabile:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));
              end if;
             end if;

             if  bavvioFrazAttr = false then
              if classifTipoCodeFraz is not null and
				 classifTipoCodeFrazVal is not null and
                 classifTipoCodeFrazId is null then
                strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura classificatoreTipoId '||classifTipoCodeFraz||'.';
             	select tipo.classif_tipo_id into classifTipoCodeFrazId
                from siac_d_class_tipo tipo
                where tipo.ente_proprietario_id=enteProprietarioId
                and   tipo.classif_tipo_code=classifTipoCodeFraz
                and   tipo.data_cancellazione is null
                and   tipo.validita_fine is null
                order by tipo.classif_tipo_id
                limit 1;
              end if;

              if classifTipoCodeFrazVal is not null and
                 classifTipoCodeFrazId is not null then
               strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore classificatore '||classifTipoCodeFraz||' [siac_r_ordinativo_class].';
             	select c.classif_code into flussoElabMifValore
                from siac_r_ordinativo_class r, siac_t_class c
                where r.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                and   c.classif_id=r.classif_id
                and   c.classif_tipo_id=classifTipoCodeFrazId
                and   r.data_cancellazione is null
                and   r.validita_fine is null
                and   c.data_cancellazione is null
                order by r.ord_classif_id
                limit 1;

              end if;

              if classifTipoCodeFrazVal is not null and
                flussoElabMifValore is not null and
                flussoElabMifValore=classifTipoCodeFrazVal then
             	mifFlussoOrdinativoRec.mif_ord_class_codice_gest_fraz:=flussoElabMifElabRec.flussoElabMifDef;
             end if;
			else
              if attrFrazionabile is not null then
               --- calcolo su attributo
               codResult:=null;
               select 1 into codResult
               from  siac_t_ordinativo_ts ts,siac_r_liquidazione_ord liqord,
                     siac_r_liquidazione_movgest rmov,
                     siac_r_movgest_ts_attr r, siac_t_attr attr
               where ts.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
               and   liqord.sord_id=ts.ord_ts_id
               and   rmov.liq_id=liqord.liq_id
               and   r.movgest_ts_id=rmov.movgest_ts_id
               and   attr.attr_id=r.attr_id
               and   attr.attr_code=attrFrazionabile
               and   r.boolean='N'
               and   r.data_cancellazione is null
               and   r.validita_fine is null
               and   rmov.data_cancellazione is null
               and   rmov.validita_fine is null
               and   liqord.data_cancellazione is null
               and   liqord.validita_fine is null
			   and   ts.data_cancellazione is null
               and   ts.validita_fine is null;

               if codResult is not null then
               	mifFlussoOrdinativoRec.mif_ord_class_codice_gest_fraz:=flussoElabMifElabRec.flussoElabMifDef;
               end if;

             end if;

            end if;

          end if; -- 3
      	 else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;  --- 2

        end if; -- 1

  	   -- <gestione_provvisoria>
       flussoElabMifElabRec:=null;
       mifCountRec:=mifCountRec+1;
        -- gestione_provvisoria da impostare solo se frazionabile=NO
       if mifFlussoOrdinativoRec.mif_ord_class_codice_gest_fraz is not null then
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
          if flussoElabMifElabRec.flussoElabMifParam is not null and
             flussoElabMifElabRec.flussoElabMifDef is not null and
             mifOrdinativoIdRec.mif_ord_bil_fase_ope is not null  then

             if tipoEsercizio is null then
	             tipoEsercizio:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
             end if;
          	if tipoEsercizio=mifOrdinativoIdRec.mif_ord_bil_fase_ope  then
				mifFlussoOrdinativoRec.mif_ord_class_codice_gest_prov=flussoElabMifElabRec.flussoElabMifDef;
            end if;
		   end if;


         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;

        end if;
        --- frazionabile da impostare NO solo se gestione_provvisoria=SI
        if mifFlussoOrdinativoRec.mif_ord_class_codice_gest_prov is null then
        	mifFlussoOrdinativoRec.mif_ord_class_codice_gest_fraz:=null;
        end if;

      else
       	null;
      end if;

      -- <data_esecuzione_pagamento>
      flussoElabMifElabRec:=null;
      ordDataScadenza:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
  	 	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
        	if flussoElabMifElabRec.flussoElabMifParam is not null and
               mifFlussoOrdinativoRec.mif_ord_pagam_tipo is not null and
               mifFlussoOrdinativoRec.mif_ord_pagam_tipo=flussoElabMifElabRec.flussoElabMifParam then
            	flussoElabMifElabRec.flussoElabMifElab:=false; -- se REGOLARIZZAZIONE data_esecuzione_pagamento non deve essere valorizzato
            end if;

            if flussoElabMifElabRec.flussoElabMifElab=true then
        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura data scadenza.';
        	 select sub.ord_ts_data_scadenza into ordDataScadenza
             from siac_t_ordinativo_ts sub
             where sub.ord_ts_id=mifOrdinativoIdRec.mif_ord_subord_id;

             if ordDataScadenza is not null and
--               date_trunc('DAY',ordDataScadenza)>= date_trunc('DAY',dataElaborazione) and
               date_trunc('DAY',ordDataScadenza)> date_trunc('DAY',dataElaborazione) and -- 13.12.2017 Sofia siac-5653
               extract('year' from ordDataScadenza)::integer<=annoBilancio::integer then
		  		mifFlussoOrdinativoRec.mif_ord_pagam_data_esec:=
    		        extract('year' from ordDataScadenza)||'-'||
    	         	lpad(extract('month' from ordDataScadenza)::varchar,2,'0')||'-'||
            	 	lpad(extract('day' from ordDataScadenza)::varchar,2,'0');
             end if;
            end if;

	     else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	     end if;
      end if;

      -- <data_scadenza_pagamento>
  	  mifCountRec:=mifCountRec+1;

	  -- <destinazione>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      mifCountRec:=mifCountRec+1;
      codResult:=null;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
  	   RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
   	   if flussoElabMifElabRec.flussoElabMifElab=true then

        if flussoElabMifElabRec.flussoElabMifParam is not null or
           flussoElabMifElabRec.flussoElabMifDef is not null then --1

           if flussoElabMifElabRec.flussoElabMifParam is not null then --2
		    if classVincolatoCode is null then
	        	classVincolatoCode:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            end if;

            if classVincolatoCode is not null and classVincolatoCodeId is null then
            	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura identificativo classVincolatoCode='||classVincolatoCode||'.';

                select tipo.classif_tipo_id into classVincolatoCodeId
                from siac_d_class_tipo tipo
                where tipo.ente_proprietario_id=enteProprietarioId
                and   tipo.classif_tipo_code=classVincolatoCode;

            end if;

            if classVincolatoCodeId is not null then
            	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore per classVincolatoCode='||classVincolatoCode||'.';

                         select c.classif_desc into flussoElabMifValore
                         from siac_r_ordinativo_class r, siac_t_class c
                         where r.ord_id=  mifOrdinativoIdRec.mif_ord_ord_id
                         and   c.classif_id=r.classif_id
                         and   c.classif_tipo_id=classVincolatoCodeId
                         and   r.data_cancellazione is null
                         and   r.validita_fine is null
                         and   c.data_cancellazione is null;

            end if;
  	     end if; --2


         if flussoElabMifValore is null and --3
            mifOrdinativoIdRec.mif_ord_contotes_id is not null and
        	mifOrdinativoIdRec.mif_ord_contotes_id!=0 then

		    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
    		                   ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
        		               ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
            		           ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                		       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                    		   ||' mifCountRec='||mifCountRec
	                    	   ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore per conto corrente tesoreria [mif_r_conto_tesoreria_vincolato].';

			select mif.vincolato into flussoElabMifValore
    	    from mif_r_conto_tesoreria_vincolato mif
	    	where mif.ente_proprietario_id=enteProprietarioId
    	    and   mif.contotes_id=mifOrdinativoIdRec.mif_ord_contotes_id
	        and   mif.validita_fine is null
		    and   mif.data_cancellazione is null;


        end if; --3
 	    if flussoElabMifValore is null and
           flussoElabMifElabRec.flussoElabMifDef is not null then
           flussoElabMifValore:=flussoElabMifElabRec.flussoElabMifDef;
        end if;

	    if flussoElabMifValore is not null then
        	mifFlussoOrdinativoRec.mif_ord_progr_dest:=flussoElabMifValore;
        end if;

       end if; --1
      else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
      end if;
     end if;


     -- <numero_conto_banca_italia_ente_ricevente>
     flussoElabMifElabRec:=null;
     flussoElabMifValore:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
     codResult:=null;
     if flussoElabMifElabRec.flussoElabMifId is null then
     	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;

     if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
        	if flussoElabMifElabRec.flussoElabMifParam is not null then
            	-- non esposto se regolarizzazione (provvisori)
                if mifFlussoOrdinativoRec.mif_ord_pagam_tipo is not null and
-- 28.12.2017 Sofia SIAC-5665	   mifFlussoOrdinativoRec.mif_ord_pagam_tipo= trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2)) then
          		   ( mifFlussoOrdinativoRec.mif_ord_pagam_tipo=
                     trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2))
                    or
                     mifFlussoOrdinativoRec.mif_ord_pagam_tipo=
                     trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3))
                    )  then -- 28.12.2017 Sofia SIAC-5665

                   flussoElabMifElabRec.flussoElabMifElab:=false;
                end if;

                if flussoElabMifElabRec.flussoElabMifElab=true then
	             if tipoMDPCbi is null then
                   	tipoMDPCbi:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
               	  end if;


                  if tipoMDPCbi is not null then
                  	if codAccreRec.accredito_gruppo_code=tipoMDPCbi then
                        	 mifFlussoOrdinativoRec.mif_ord_bci_conto:=MDPRec.contocorrente;
                    end if;
                  end if;
                 end if;


            end if;
       else
           RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
     end if;


     -- <tipo_contabilita_ente_ricevente>
     mifCountRec:=mifCountRec+1;
     flussoElabMifElabRec:=null;
     flussoElabMifValore:=null;
     codResult:=null;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
        if flussoElabMifElabRec.flussoElabMifElab=true then
             if flussoElabMifElabRec.flussoElabMifDef is not null then

                if flussoElabMifElabRec.flussoElabMifParam is not null then
                   if tipoClassFruttifero is null then
                    	tipoClassFruttifero:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                   end if;

                   if tipoClassFruttifero is not null and valFruttifero is null then
	                   valFruttifero:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                       valFruttiferoStr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                       valFruttiferoStrAltro:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));
                   end if;

                   if tipoClassFruttifero is not null and
                      valFruttifero is not null and
                      valFruttiferoStr is not null and
                      valFruttiferoStrAltro is not null and
                      tipoClassFruttiferoId is null then

                    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura classifTipoCodeId '||tipoClassFruttifero||'.';
                   	select tipo.classif_tipo_id into tipoClassFruttiferoId
                    from siac_d_class_tipo tipo
                    where tipo.ente_proprietario_id=enteProprietarioId
                    and   tipo.classif_tipo_code=tipoClassFruttifero
                    and   tipo.data_cancellazione is null
                    and   tipo.validita_fine is null;

                   end if;


                   if tipoClassFruttiferoId is not null and
                      valFruttifero is not null and
                      valFruttiferoStr is not null and
                      valFruttiferoStrAltro is not null and
                      valFruttiferoId is null then

                    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura classidId '||tipoClassFruttifero||' [siac_r_ordinativo_class].';


                   	select c.classif_code into flussoElabMifValore
                    from siac_r_ordinativo_class r, siac_t_class c
                    where r.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
	                and   c.classif_id=r.classif_id
                    and   c.classif_tipo_id=tipoClassFruttiferoId
                    and   r.data_cancellazione is null
                    and   r.validita_fine is null
                    and   c.data_cancellazione is null
                    order by r.ord_classif_id limit 1;

                    if flussoElabMifValore is not null then
                    	if flussoElabMifValore=valFruttifero THEN
                        	flussoElabMifValore=valFruttiferoStr;
                        else
                          flussoElabMifValore=valFruttiferoStrAltro;
                        end if;
                    end if;

                  end if;

				end if; -- param

				if flussoElabMifValore is not null then
	                mifFlussoOrdinativoRec.mif_ord_bci_tipo_contabil:=flussoElabMifValore;
                end if;

               if mifFlussoOrdinativoRec.mif_ord_bci_tipo_contabil is null and
	              mifOrdinativoIdRec.mif_ord_contotes_id is not null and
    	          mifOrdinativoIdRec.mif_ord_contotes_id!=0 then

               	  flussoElabMifValore:=null;
	              strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore per conto corrente tesoreria [mif_r_conto_tesoreria_fruttifero].';
	           	  select mif.fruttifero into flussoElabMifValore
	              from mif_r_conto_tesoreria_fruttifero mif
    	          where mif.ente_proprietario_id=enteProprietarioId
        	      and   mif.contotes_id=mifOrdinativoIdRec.mif_ord_contotes_id
            	  and   mif.validita_fine is null
	              and   mif.data_cancellazione is null;

    	          if flussoElabMifValore is not null then
        	       	mifFlussoOrdinativoRec.mif_ord_bci_tipo_contabil:=flussoElabMifValore;
            	  end if;

              end if;

              if mifFlussoOrdinativoRec.mif_ord_bci_tipo_contabil is null then
                   	mifFlussoOrdinativoRec.mif_ord_bci_tipo_contabil:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
              end if;
           end if; -- default
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

      -- <tipo_postalizzazione>
      flussoElabMifElabRec:=null;
      codResult:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifValore:=null;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      raise notice 'tipo_postalizzazione mifCountRec=%',mifCountRec;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
    	if flussoElabMifElabRec.flussoElabMifElab=true then
         if flussoElabMifElabRec.flussoElabMifParam is not null and
            flussoElabMifElabRec.flussoElabMifDef is not null then
           if tipoPagamPostA is null then
           	tipoPagamPostA:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
           end if;

           if tipoPagamPostB is null then
           	tipoPagamPostB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
           end if;


           if tipoPagamPostA is not null or tipoPagamPostB is not null then
			  if tipoPagamRec is not null and tipoPagamRec.descTipoPagamento is not null then
              	if tipoPagamRec.descTipoPagamento in (tipoPagamPostA,tipoPagamPostB) then
	                mifFlussoOrdinativoRec.mif_ord_pagam_postalizza:=flussoElabMifElabRec.flussoElabMifDef;
                end if;
              end if;
           end if;

         end if;
        else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
        end if;
      end if;


      -- <classificazione>
	  -- <codice_cgu>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      flussoElabMifValoreDesc:=null;
      codiceCge:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      raise notice 'classificazione mifCountRec=%',mifCountRec;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then -- attivo
       if flussoElabMifElabRec.flussoElabMifElab=true then -- elab

        if flussoElabMifElabRec.flussoElabMifParam is not null then -- param

       	 if siopeCodeTipo is null and flussoElabMifElabRec.flussoElabMifParam is not null then
         	siopeCodeTipo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
         end if;

         if siopeDef is null and flussoElabMifElabRec.flussoElabMifParam is not null then
         	siopeDef:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
         end if;

         if coalesce(dataAvvioSiopeNew,NVL_STR)=NVL_STR and
            flussoElabMifElabRec.flussoElabMifParam is not null then
           	dataAvvioSiopeNew:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
         end if;

         if coalesce(dataAvvioSiopeNew,NVL_STR)!=NVL_STR and codiceFinVTbr is null then
       	 	codiceFinVTbr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));
         end if;

         if coalesce(dataAvvioSiopeNew,NVL_STR)!=NVL_STR then
       	  if dataAvvioSiopeNew::timestamp<=date_trunc('DAY',mifOrdinativoIdRec.mif_ord_data_emissione::timestamp) -- data emissione ordinativo
             then
              bAvvioSiopeNew:=true;
           end if;
         end if;

         if bAvvioSiopeNew=true then -- avvioSiopeNew
           if codiceFinVTbr is not null and codiceFinVTipoTbrId is null then
		  	-- codiceFinVTipoTbrId
            strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'.Lettura ID codice tipo='||codiceFinVTbr||'.';
			select tipo.classif_tipo_id into strict codiceFinVTipoTbrId
			from siac_d_class_tipo tipo
			where tipo.ente_proprietario_id=enteProprietarioId
			and   tipo.classif_tipo_code=codiceFinVTbr
			and   tipo.data_cancellazione is null
			and   date_trunc('day',dataElaborazione)>=date_trunc('day',validita_inizio)
		    and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(validita_fine,dataElaborazione));
          end if;

          if codiceFinVTipoTbrId is not null then
          	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore per codice tipo='||codiceFinVTbr||'.';

            select replace(substring(class.classif_code,2),'.','') , class.classif_desc
                   into flussoElabMifValore,flussoElabMifValoreDesc
		   	from siac_r_ordinativo_class r, siac_t_class class
			where r.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
		    and   class.classif_id=r.classif_id
		    and   class.classif_tipo_id=codiceFinVTipoTbrId
		    and   r.data_cancellazione is null
		    and   r.validita_fine is NULL
		    and   class.data_cancellazione is null;

          	if   flussoElabMifValore is null then
             strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore per codice tipo='||codiceFinVTbr||'.';

             select replace(substring(class.classif_code,2),'.','') , class.classif_desc
                   into flussoElabMifValore,flussoElabMifValoreDesc
 		   	 from siac_r_liquidazione_class r, siac_t_class class
			 where r.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
		     and   class.classif_id=r.classif_id
		     and   class.classif_tipo_id=codiceFinVTipoTbrId
		     and   r.data_cancellazione is null
		     and   r.validita_fine is NULL
		     and   class.data_cancellazione is null;
            end if;

          end if;
         else -- avvioSiopeNew
           strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura ID codice tipo='||siopeCodeTipo||'.';

           if siopeCodeTipoId is null and siopeCodeTipo is not null then
           	select tipo.classif_tipo_id into siopeCodeTipoId
            from siac_d_class_tipo tipo
            where tipo.classif_tipo_code=siopeCodeTipo
            and   tipo.ente_proprietario_id=enteProprietarioId
            and   tipo.data_cancellazione is null
	 		and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		    and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));
           end if;

           strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore per codice tipo='||siopeCodeTipo||'.';

           if siopeCodeTipoId is not null then
           	select class.classif_code, class.classif_desc
                   into flussoElabMifValore,flussoElabMifValoreDesc
            from siac_r_ordinativo_class cord, siac_t_class class
            where cord.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
            and cord.data_cancellazione is null
            and cord.validita_fine is null
            and class.classif_id=cord.classif_id
            and class.classif_code!=siopeDef
            and class.data_cancellazione is null
            and class.classif_tipo_id=siopeCodeTipoId;

            if flussoElabMifValore is null then
             select class.classif_code, class.classif_desc
                    into flussoElabMifValore,flussoElabMifValoreDesc
             from siac_r_liquidazione_class cord, siac_t_class class
             where cord.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
             and cord.data_cancellazione is null
             and cord.validita_fine is null
             and class.classif_id=cord.classif_id
             and class.classif_code!=siopeDef
             and class.data_cancellazione is null
             and class.classif_tipo_id=siopeCodeTipoId;
            end if;


           end if;
         end if; -- avvioSiopeNew


         if flussoElabMifValore is not null then
         	mifFlussoOrdinativoRec.mif_ord_class_codice_cge:=flussoElabMifValore;
            codiceCge:=flussoElabMifValore;
         end if;
        end if; -- param
       else -- elab
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if; -- elab
      end if; -- attivo

	  -- <codice_cup>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      flussoElabMifValoreDesc:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
       if flussoElabMifElabRec.flussoElabMifElab=true then
			if flussoElabMifElabRec.flussoElabMifParam is not null then
            	if coalesce(cupAttrCode,NVL_STR)=NVL_STR then
                	cupAttrCode:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                end if;

                if coalesce(cupAttrCode,NVL_STR)!=NVL_STR and cupAttrId is null then
                	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura attr_id '||cupAttrCode||'.';
                	select attr.attr_id into cupAttrId
                    from siac_t_attr attr
                    where attr.ente_proprietario_id=enteProprietarioId
                    and   attr.attr_code=cupAttrCode
                    and   attr.data_cancellazione is null
                    and   attr.validita_fine is null;
                end if;

                if cupAttrId is not null then
                	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore '||cupAttrCode||' [siac_r_ordinativo_attr].';

                	select a.testo into flussoElabMifValore
                    from siac_r_ordinativo_attr a
                    where a.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                    and   a.attr_id=cupAttrId
                    and   a.data_cancellazione is null
                    and   a.validita_fine is null;

                    if coalesce(flussoElabMifValore,NVL_STR)!=NVL_STR then
                    	mifFlussoOrdinativoRec.mif_ord_class_codice_cup:=flussoElabMifValore;
                    end if;


                    if mifFlussoOrdinativoRec.mif_ord_class_codice_cup is null then
                    	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore '||cupAttrCode||' [siac_r_liquidazione_attr].';

                    	select a.testo into flussoElabMifValore
                        from siac_r_liquidazione_attr  a
                        where a.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
                        and   a.attr_id=cupAttrId
                        and   a.data_cancellazione is null
	                    and   a.validita_fine is null;


                        if coalesce(flussoElabMifValore,NVL_STR)!=NVL_STR then
    	                	mifFlussoOrdinativoRec.mif_ord_class_codice_cup:=flussoElabMifValore;
	                    end if;
                    end if;
                end if;
            end if;
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

      -- <codice_cpv>
      mifCountRec:=mifCountRec+1;

      -- <importo>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      flussoElabMifValoreDesc:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

	  if flussoElabMifElabRec.flussoElabMifAttivo=true then
       if flussoElabMifElabRec.flussoElabMifElab=true then
 	      	mifFlussoOrdinativoRec.mif_ord_class_importo:=mifFlussoOrdinativoRec.mif_ord_importo;
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

      -- </classificazione>

      -- <classificazione_dati_siope_uscite>
	  -- <tipo_debito_siope_c>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      isOrdCommerciale:=false;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
       if flussoElabMifElabRec.flussoElabMifElab=true then
        -- 21.12.2017 Sofia JIRA SIAC-5665
        if flussoElabMifElabRec.flussoElabMifParam is not null then
            flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            tipoDocsComm:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2))||'|'||
                      trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3))||'|'||
                      trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));

            isOrdCommerciale:=fnc_mif_ordinativo_esiste_documenti_splus( mifOrdinativoIdRec.mif_ord_ord_id,
                                                                         tipoDocsComm,
                                                   	                     enteProprietarioId
                                                                        );


/*        	if mifOrdinativoIdRec.mif_ord_siope_tipo_debito_id is not null then
                strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura tipo debito [siac_d_siope_tipo_debito].';
            	select tipo.siope_tipo_debito_desc_bnkit into flussoElabMifValore
                from siac_d_siope_tipo_debito tipo
                where tipo.siope_tipo_debito_id=mifOrdinativoIdRec.mif_ord_siope_tipo_debito_id;
            end if;

            if flussoElabMifValore is not null and
               upper(flussoElabMifValore)=flussoElabMifElabRec.flussoElabMifParam then
               mifFlussoOrdinativoRec.mif_ord_class_tipo_debito:=flussoElabMifElabRec.flussoElabMifParam;
               isOrdCommerciale:=true;
            end if;*/
            -- 21.12.2017 Sofia JIRA SIAC-5665
            if isOrdCommerciale=true then
            	mifFlussoOrdinativoRec.mif_ord_class_tipo_debito:=flussoElabMifValore;
            end if;
        end if;
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

	  -- <tipo_debito_siope_nc>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      mifCountRec:=mifCountRec+1;
      codResult:=null;
      if isOrdCommerciale=false then
       flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
       strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
       if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
       end if;
       if flussoElabMifElabRec.flussoElabMifAttivo=true then
        if flussoElabMifElabRec.flussoElabMifElab=true then
         if flussoElabMifElabRec.flussoElabMifDef is not null then
            -- 20.03.2018 Sofia SIAC-5968 - test sul pdcFin di OP per verificare se IVA
            if flussoElabMifElabRec.flussoElabMifParam is not null then
         	 if coalesce(tipoPdcIVA,'')='' then
	         	tipoPdcIVA:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
             end if;
             if coalesce(codePdcIVA,'')='' then
	         	codePdcIVA:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
             end if;

             if coalesce(tipoPdcIVA,'')!=''  and coalesce(codePdcIVA,'')!='' then
                strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Verifica tipo debito IVA.';
             	select 1 into codResult
                from siac_r_ordinativo_class rc, siac_t_class c, siac_d_class_tipo tipo
                where rc.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                and   c.classif_id=rc.classif_id
                and   tipo.classif_tipo_id=c.classif_tipo_id
                and   tipo.classif_tipo_code=tipoPdcIVA
                and   c.classif_code like codePdcIVA||'%'
                and   rc.data_cancellazione is null
                and   rc.validita_fine is null;

                if codResult is not null then
	               	flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,2));
                end if;
             end if;

            end if;

            -- 21.12.2017 Sofia JIRA SIAC-5665
            --mifFlussoOrdinativoRec.mif_ord_class_tipo_debito_nc:=flussoElabMifElabRec.flussoElabMifParam;

            -- 20.03.2018 Sofia SIAC-5968
            if flussoElabMifValore is null then
            	flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
            end if;
            -- 20.03.2018 Sofia SIAC-5968
			mifFlussoOrdinativoRec.mif_ord_class_tipo_debito_nc:=flussoElabMifValore;

         end if;
        else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
        end if;
       end if;
      end if;




      -- <codice_cig_siope>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      flussoElabMifValoreDesc:=null;
      mifCountRec:=mifCountRec+1;
      raise notice 'codice_cig_siope mifCountRec=%',mifCountRec;
      -- solo per COMMERCIALI
	  if isOrdCommerciale=true then
       flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
       strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
       if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
       end if;

       if flussoElabMifElabRec.flussoElabMifAttivo=true then
        if flussoElabMifElabRec.flussoElabMifElab=true then
			if flussoElabMifElabRec.flussoElabMifParam is not null then
            	if coalesce(cigAttrCode,NVL_STR)=NVL_STR then
                	cigAttrCode:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                end if;

                if coalesce(cigAttrCode,NVL_STR)!=NVL_STR and cigAttrCodeId is null then
                	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura attr_id '||cigAttrCode||'.';
                	select attr.attr_id into cigAttrCodeId
                    from siac_t_attr attr
                    where attr.ente_proprietario_id=enteProprietarioId
                    and   attr.attr_code=cigAttrCode
                    and   attr.data_cancellazione is null
                    and   attr.validita_fine is null;
                end if;

                if cigAttrCodeId is not null then
                	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore '||cupAttrCode||' [siac_r_ordinativo_attr].';

                	select a.testo into flussoElabMifValore
                    from siac_r_ordinativo_attr a
                    where a.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                    and   a.attr_id=cigAttrCodeId
                    and   a.data_cancellazione is null
                    and   a.validita_fine is null;

                    if coalesce(flussoElabMifValore,NVL_STR)!=NVL_STR then
                    	mifFlussoOrdinativoRec.mif_ord_class_cig:=flussoElabMifValore;
                    end if;


                    if mifFlussoOrdinativoRec.mif_ord_class_cig is null then
                    	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore '||cigAttrCode||' [siac_r_liquidazione_attr].';

                    	select a.testo into flussoElabMifValore
                        from siac_r_liquidazione_attr  a
                        where a.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
                        and   a.attr_id=cigAttrCodeId
                        and   a.data_cancellazione is null
	                    and   a.validita_fine is null;


                        if coalesce(flussoElabMifValore,NVL_STR)!=NVL_STR then
    	                	mifFlussoOrdinativoRec.mif_ord_class_cig:=flussoElabMifValore;
	                    end if;
                    end if;
                end if;
            end if;
        else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
        end if;
       end if;
      end if;

      -- <motivo_esclusione_cig_siope>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      mifCountRec:=mifCountRec+1;
      -- solo per COMMERCIALI
      if isOrdCommerciale=true and
         mifFlussoOrdinativoRec.mif_ord_class_cig is null then
       flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
       strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
       if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
       end if;

	   if flussoElabMifElabRec.flussoElabMifAttivo=true then
        if flussoElabMifElabRec.flussoElabMifElab=true then
       	  if mifOrdinativoIdRec.mif_ord_siope_assenza_motivazione_id is not null then
          	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura motivazione [siac_d_siope_assenza_motivazione].';
            raise notice 'siope_assenza_motivazione_desc_bnkit';
		  	select upper(ass.siope_assenza_motivazione_desc_bnkit) into flussoElabMifValore
			from siac_d_siope_assenza_motivazione ass
			where ass.siope_assenza_motivazione_id=mifOrdinativoIdRec.mif_ord_siope_assenza_motivazione_id;
          end if;
		  if flussoElabMifValore is not null then
	    	  mifFlussoOrdinativoRec.mif_ord_class_motivo_nocig:=flussoElabMifValore;
              raise notice 'siope_assenza_motivazione_desc_bnkit=%',mifFlussoOrdinativoRec.mif_ord_class_motivo_nocig;

          end if;
        else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
        end if;
       end if;
      end if;

      raise notice 'motivo_esclusione_cig_siope mifCountRec=%',mifCountRec;

      -- <fatture_siope>
      -- </fatture_siope>
      mifCountRec:=mifCountRec+12;

      -- <dati_ARCONET_siope>


      -- <codice_missione_siope>
	  flussoElabMifElabRec:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
       if flussoElabMifElabRec.flussoElabMifElab=true then
    	  mifFlussoOrdinativoRec.mif_ord_class_missione:=SUBSTRING(mifOrdinativoIdRec.mif_ord_programma_code from 1 for 2);
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

      raise notice 'codice_missione_siope mifCountRec=%',mifCountRec;

      -- <codice_programma_siope>
	  flussoElabMifElabRec:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
       if flussoElabMifElabRec.flussoElabMifElab=true then
    	  mifFlussoOrdinativoRec.mif_ord_class_programma:=mifOrdinativoIdRec.mif_ord_programma_code;
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

      -- <codice_economico_siope>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      mifCountRec:=mifCountRec+1;
                              raise notice 'codice_economico_siope mifCountRec=%',mifCountRec;

      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
       if flussoElabMifElabRec.flussoElabMifElab=true then
        if flussoElabMifElabRec.flussoElabMifParam is not null then

          if codiceFinVTbr is null then
				codiceFinVTbr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
          end if;

		  if codiceFinVTbr is not null and codiceFinVTipoTbrId is null then
		  	-- codiceFinVTipoTbrId
            strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'.Lettura ID codice tipo='||codiceFinVTbr||'.';
			select tipo.classif_tipo_id into strict codiceFinVTipoTbrId
			from siac_d_class_tipo tipo
			where tipo.ente_proprietario_id=enteProprietarioId
			and   tipo.classif_tipo_code=codiceFinVTbr
			and   tipo.data_cancellazione is null
			and   date_trunc('day',dataElaborazione)>=date_trunc('day',validita_inizio)
		    and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(validita_fine,dataElaborazione));
          end if;

          if codiceFinVTipoTbrId is not null then
          	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore per codice tipo='||codiceFinVTbr||'.';

            select class.classif_code  into flussoElabMifValore
		   	from siac_r_ordinativo_class r, siac_t_class class
			where r.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
		    and   class.classif_id=r.classif_id
		    and   class.classif_tipo_id=codiceFinVTipoTbrId
		    and   r.data_cancellazione is null
		    and   r.validita_fine is NULL
		    and   class.data_cancellazione is null;

          	if   flussoElabMifValore is null then
             strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore per codice tipo='||codiceFinVTbr||'.';

             select class.classif_code  into flussoElabMifValore
 		   	 from siac_r_liquidazione_class r, siac_t_class class
			 where r.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
		     and   class.classif_id=r.classif_id
		     and   class.classif_tipo_id=codiceFinVTipoTbrId
		     and   r.data_cancellazione is null
		     and   r.validita_fine is NULL
		     and   class.data_cancellazione is null;
            end if;
          end if;
/*
       	  if collEventoCodeId is null then
        	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'Lettura tipo coll. evento '||flussoElabMifElabRec.flussoElabMifParam||'.';


            select coll.collegamento_tipo_id into collEventoCodeId
            from siac_d_collegamento_tipo coll
            where coll.ente_proprietario_id=enteProprietarioId
            and   coll.collegamento_tipo_code=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1))
            and   coll.data_cancellazione is null
		    and   date_trunc('day',dataElaborazione)>=date_trunc('day',coll.validita_inizio)
		    and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(coll.validita_fine,dataElaborazione));

         end if;

	     if collEventoCodeId is not null then
		  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'Lettura conto economico patrimoniale.';
                             raise notice 'QUI QUI strMessaggio=%',strMessaggio;

          select conto.pdce_conto_code into flussoElabMifValore
          from siac_t_pdce_conto conto, siac_t_reg_movfin regMovFin, siac_r_evento_reg_movfin rEvento,
               siac_d_evento evento,
               siac_t_mov_ep reg, siac_r_reg_movfin_stato regstato, siac_d_reg_movfin_stato stato,
               siac_t_prima_nota pn, siac_r_prima_nota_stato rpnota, siac_d_prima_nota_stato pnstato,
               siac_t_mov_ep_det det
          where evento.ente_proprietario_id=enteProprietarioId
          and   evento.collegamento_tipo_id=collEventoCodeId -- OP
          and   rEvento.evento_id=evento.evento_id
          and   rEvento.campo_pk_id=mifOrdinativoIdRec.mif_ord_ord_id
          and   regMovFin.regmovfin_id=rEvento.regmovfin_id
--          and   regMovFin.ambito_id=ambitoFinId  -- AMBITO_FIN togliamo ambito
          and   regstato.regmovfin_id=regMovFin.regmovfin_id
          and   stato.regmovfin_stato_id=regstato.regmovfin_stato_id
          and   stato.regmovfin_stato_code!=REGMOVFIN_STATO_A
          and   reg.regmovfin_id=regMovFin.regmovfin_id
          and   pn.pnota_id=reg.regep_id
          and   rpnota.pnota_id=pn.pnota_id
          and   pnstato.pnota_stato_id=rpnota.pnota_stato_id
          and   pnstato.pnota_stato_code!=REGMOVFIN_STATO_A  -- forse sarebbe meglio prendere solo i D
          and   det.movep_id=reg.movep_id
          and   det.movep_det_segno=SEGNO_ECONOMICO -- Dare
		  and   conto.pdce_conto_id=det.pdce_conto_id
          and   regMovFin.data_cancellazione is null
          and   regMovFin.validita_fine is null
          and   rEvento.data_cancellazione is null
          and   rEvento.validita_fine is null
          and   evento.data_cancellazione is null
          and   evento.validita_fine is null
          and   reg.data_cancellazione is null
          and   reg.validita_fine is null
          and   regstato.data_cancellazione is null
          and   regstato.validita_fine is null
          and   pn.data_cancellazione is null
          and   pn.validita_fine is null
          and   rpnota.data_cancellazione is null
          and   rpnota.validita_fine is null
          and   conto.data_cancellazione is null
          and   conto.validita_fine is null
          order by pn.pnota_id desc
          limit 1;
         end if;
*/
       end if;


        if flussoElabMifValore is not null then
	        mifFlussoOrdinativoRec.mif_ord_class_economico:=flussoElabMifValore;
        end if;
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

	  -- <importo_codice_economico_siope>
	  mifCountRec:=mifCountRec+1;
      if mifFlussoOrdinativoRec.mif_ord_class_economico is not null then
      	flussoElabMifElabRec:=null;
	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
                                                    raise notice 'QUI QUI strMessaggio=%',strMessaggio;

	    if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    	end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         		mifFlussoOrdinativoRec.mif_ord_class_importo_economico:=mifFlussoOrdinativoRec.mif_ord_importo;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;
      end if;

      -- <codice_UE_siope>
      flussoElabMifElabRec:=null;
	  flussoElabMifValore:=null;
	  codResult:=null;
	  mifCountRec:=mifCountRec+1;
            raise notice 'codice_UE_siope mifCountRec=%',mifCountRec;

	  flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	  if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	  end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
	   	if flussoElabMifElabRec.flussoElabMifElab=true then
    	 if flussoElabMifElabRec.flussoElabMifParam is not null then
     		if codiceUECodeTipo is null then
				codiceUECodeTipo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
	        end if;

            if codiceUECodeTipo is not null and codiceUECodeTipoId is null then
        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_d_class_tipo.';

        	 select tipo.classif_tipo_id into codiceUECodeTipoId
             from  siac_d_class_tipo tipo
             where tipo.ente_proprietario_id=enteProprietarioId
             and   tipo.classif_tipo_code=codiceUECodeTipo
             and   tipo.data_cancellazione is null
		     and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
		 	 and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));
            end if;

	        if codiceUECodeTipoId is not null then
        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_r_ordinativo_class.';
                             raise notice 'QUI QUI codiceUECodeTipo=% strMessaggio=%',codiceUECodeTipo,strMessaggio;

        	 select class.classif_code into flussoElabMifValore
             from siac_r_ordinativo_class rclass, siac_t_class class
             where rclass.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
             and   rclass.data_cancellazione is null
             and   rclass.validita_fine is null
             and   class.classif_id=rclass.classif_id
             and   class.classif_tipo_id=codiceUECodeTipoId
             and   class.data_cancellazione is null
             order by rclass.ord_classif_id
             limit 1;

                             raise notice '222QUI QUI codiceUECodeTipo=% strMessaggio=%',codiceUECodeTipo,strMessaggio;

             if flussoElabMifValore is null then
        	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_r_liquidazione_class.';
        	  select class.classif_code into flussoElabMifValore
              from siac_r_liquidazione_class rclass, siac_t_class class
              where rclass.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
              and   rclass.data_cancellazione is null
              and   rclass.validita_fine is null
              and   class.classif_id=rclass.classif_id
              and   class.classif_tipo_id=codiceUECodeTipoId
              and   class.data_cancellazione is null
              order by rclass.liq_classif_id
              limit 1;
             end if;
	        end if;

      	    if flussoElabMifValore is not null then
                raise notice 'QUI QUI flussoElabMifValore=%',flussoElabMifValore;
            	mifFlussoOrdinativoRec.mif_ord_class_transaz_ue:=flussoElabMifValore;
            end if;

      	 end if;
        else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		end if;
	  end if;

      -- <codice_uscita_siope>
      flussoElabMifElabRec:=null;
	  flussoElabMifValore:=null;
	  codResult:=null;
	  mifCountRec:=mifCountRec+1;
                  raise notice 'codice_uscita_siope mifCountRec=%',mifCountRec;

	  flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	  if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	  end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
	   	if flussoElabMifElabRec.flussoElabMifElab=true then
    	 if flussoElabMifElabRec.flussoElabMifParam is not null then
     		if ricorrenteCodeTipo is null then
				ricorrenteCodeTipo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
	        end if;

            if ricorrenteCodeTipo is not null and ricorrenteCodeTipoId is null then
        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_d_class_tipo.';

        	 select tipo.classif_tipo_id into ricorrenteCodeTipoId
             from  siac_d_class_tipo tipo
             where tipo.ente_proprietario_id=enteProprietarioId
             and   tipo.classif_tipo_code=ricorrenteCodeTipo
             and   tipo.data_cancellazione is null
		     and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
		 	 and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));
            end if;

	        if ricorrenteCodeTipoId is not null then
        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_r_ordinativo_class.';
                                                    raise notice 'QUI QUI strMessaggio=%',strMessaggio;

        	 select upper(class.classif_desc) into flussoElabMifValore
             from siac_r_ordinativo_class rclass, siac_t_class class
             where rclass.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
             and   rclass.data_cancellazione is null
             and   rclass.validita_fine is null
             and   class.classif_id=rclass.classif_id
             and   class.classif_tipo_id=ricorrenteCodeTipoId
             and   class.data_cancellazione is null
             order by rclass.ord_classif_id
             limit 1;


             if flussoElabMifValore is null then
        	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_r_liquidazione_class.';
        	  select upper(class.classif_desc) into flussoElabMifValore
              from siac_r_liquidazione_class rclass, siac_t_class class
              where rclass.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
              and   rclass.data_cancellazione is null
              and   rclass.validita_fine is null
              and   class.classif_id=rclass.classif_id
              and   class.classif_tipo_id=ricorrenteCodeTipoId
              and   class.data_cancellazione is null
              order by rclass.liq_classif_id
              limit 1;
             end if;
	        end if;

      	    if flussoElabMifValore is not null then
            	mifFlussoOrdinativoRec.mif_ord_class_ricorrente_spesa:=flussoElabMifValore;
            end if;

      	 end if;
        else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		end if;
	  end if;


      -- <codice_cofog_siope>
      flussoElabMifElabRec:=null;
	  flussoElabMifValore:=null;
	  codResult:=null;
	  mifCountRec:=mifCountRec+1;
                        raise notice 'codice_cofog_siope mifCountRec=%',mifCountRec;

	  flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	  if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	  end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
	   	if flussoElabMifElabRec.flussoElabMifElab=true then
    	 if flussoElabMifElabRec.flussoElabMifParam is not null then
     		if codiceCofogCodeTipo is null then
				codiceCofogCodeTipo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
	        end if;

            if codiceCofogCodeTipo is not null and codiceCofogCodeTipoId is null then
        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_d_class_tipo.';

        	 select tipo.classif_tipo_id into codiceCofogCodeTipoId
             from  siac_d_class_tipo tipo
             where tipo.ente_proprietario_id=enteProprietarioId
             and   tipo.classif_tipo_code=codiceCofogCodeTipo
             and   tipo.data_cancellazione is null
		     and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
		 	 and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));
            end if;

	        if codiceCofogCodeTipoId is not null then
        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_r_ordinativo_class.';
                                                    raise notice 'QUI QUI strMessaggio=%',strMessaggio;

        	 select class.classif_code into flussoElabMifValore
             from siac_r_ordinativo_class rclass, siac_t_class class
             where rclass.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
             and   rclass.data_cancellazione is null
             and   rclass.validita_fine is null
             and   class.classif_id=rclass.classif_id
             and   class.classif_tipo_id=codiceCofogCodeTipoId
             and   class.data_cancellazione is null
             order by rclass.ord_classif_id
             limit 1;


             if flussoElabMifValore is null then
        	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_r_liquidazione_class.';
        	  select class.classif_code into flussoElabMifValore
              from siac_r_liquidazione_class rclass, siac_t_class class
              where rclass.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
              and   rclass.data_cancellazione is null
              and   rclass.validita_fine is null
              and   class.classif_id=rclass.classif_id
              and   class.classif_tipo_id=codiceCofogCodeTipoId
              and   class.data_cancellazione is null
              order by rclass.liq_classif_id
              limit 1;
             end if;
	        end if;

      	    if flussoElabMifValore is not null then
            	mifFlussoOrdinativoRec.mif_ord_class_cofog_codice:=flussoElabMifValore;
            end if;

      	 end if;
        else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		end if;
	  end if;

      -- <importo_cofog_siope>
  	  mifCountRec:=mifCountRec+1;
      if mifFlussoOrdinativoRec.mif_ord_class_cofog_codice is not null then
       flussoElabMifElabRec:=null;
	   flussoElabMifValore:=null;
	   flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	   if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	   end if;
       if flussoElabMifElabRec.flussoElabMifAttivo=true then
	     if flussoElabMifElabRec.flussoElabMifElab=true then
        		mifFlussoOrdinativoRec.mif_ord_class_cofog_importo:=mifFlussoOrdinativoRec.mif_ord_importo;

         else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		 end if;
	    end if;
       end if;

      -- </dati_ARCONET_siope>

      -- </classificazione_dati_siope_uscite>

      -- <bollo>
      -- <assoggettamento_bollo>
   	  mifCountRec:=mifCountRec+1;
      ordCodiceBolloDesc:=null;
      codiceBolloPlusDesc:=null;
      codiceBolloPlusEsente:=false;
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      if mifOrdinativoIdRec.mif_ord_codbollo_id is not null then


	   flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
  	    end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
	   	  if flussoElabMifElabRec.flussoElabMifElab=true then

          	if flussoElabMifElabRec.flussoElabMifParam is not null and
               flussoElabMifElabRec.flussoElabMifDef is not null and
               mifFlussoOrdinativoRec.mif_ord_pagam_tipo is not null and
               mifFlussoOrdinativoRec.mif_ord_pagam_tipo in
                 (trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1)), -- REGOLARIZZAZIONE
                  trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2))  -- F24EP
                 ) then

               codiceBolloPlusEsente:=true;
               -- REGOLARIZZAZIONE
               if mifFlussoOrdinativoRec.mif_ord_pagam_tipo=
                  trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1)) then
                  mifFlussoOrdinativoRec.mif_ord_bollo_carico:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
               	  mifFlussoOrdinativoRec.mif_ordin_bollo_caus_esenzione:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,2));
               end if;
               -- F24EP
               if mifFlussoOrdinativoRec.mif_ord_pagam_tipo=
                  trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2)) then
                  mifFlussoOrdinativoRec.mif_ord_bollo_carico:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
               	  mifFlussoOrdinativoRec.mif_ordin_bollo_caus_esenzione:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
               end if;
            end if;

            if mifFlussoOrdinativoRec.mif_ord_bollo_carico is null then
          	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura codice bollo.';

             select bollo.codbollo_desc , plus.codbollo_plus_desc, plus.codbollo_plus_esente
                   into ordCodiceBolloDesc, codiceBolloPlusDesc, codiceBolloPlusEsente
             from siac_d_codicebollo bollo, siac_d_codicebollo_plus plus, siac_r_codicebollo_plus rp
             where bollo.codbollo_id=mifOrdinativoIdRec.mif_ord_codbollo_id
             and   rp.codbollo_id=bollo.codbollo_id
             and   plus.codbollo_plus_id=rp.codbollo_plus_id
             and   rp.data_cancellazione is null
             and   rp.validita_fine is null;

             if coalesce(codiceBolloPlusDesc,NVL_STR)!=NVL_STR  then
            	mifFlussoOrdinativoRec.mif_ord_bollo_carico:=codiceBolloPlusDesc;
             end if;
            end if;
          else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		  end if;
        end if;
       end if;

      -- <causale_esenzione_bollo>
   	  mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=null;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      if codiceBolloPlusEsente=true and coalesce(ordCodiceBolloDesc,NVL_STR)!=NVL_STR then
      	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
  	    end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
	   	  if flussoElabMifElabRec.flussoElabMifElab=true then
            if mifFlussoOrdinativoRec.mif_ordin_bollo_caus_esenzione is null then
--              27.06.2018 Sofia siac-6272
--	          	mifFlussoOrdinativoRec.mif_ordin_bollo_caus_esenzione:=substring(ordCodiceBolloDesc from 1 for 30);
                mifFlussoOrdinativoRec.mif_ordin_bollo_caus_esenzione:=ordCodiceBolloDesc;
            end if;
          else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		  end if;
        end if;
      end if;
      -- </bollo>

	  -- <spese>
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      ordCodiceBolloDesc:=null;
      codiceBolloPlusDesc:=null;
      codiceBolloPlusEsente:=false;
      -- <soggetto_destinatario_delle_spese>
      if mifOrdinativoIdRec.mif_ord_comm_tipo_id is not null then
	   flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
  	    end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
	   	  if flussoElabMifElabRec.flussoElabMifElab=true then
          	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura codice commissione.';

            select tipo.comm_tipo_desc , plus.comm_tipo_plus_desc, plus.comm_tipo_plus_esente
                   into ordCodiceBolloDesc, codiceBolloPlusDesc, codiceBolloPlusEsente
            from siac_d_commissione_tipo tipo, siac_d_commissione_tipo_plus plus, siac_r_commissione_tipo_plus rp
            where tipo.comm_tipo_id=mifOrdinativoIdRec.mif_ord_comm_tipo_id
            and   rp.comm_tipo_id=tipo.comm_tipo_id
            and   plus.comm_tipo_plus_id=rp.comm_tipo_plus_id
            and   rp.data_cancellazione is null
            and   rp.validita_fine is null;

            if coalesce(codiceBolloPlusDesc,NVL_STR)!=NVL_STR  then
            	mifFlussoOrdinativoRec.mif_ord_commissioni_carico:=codiceBolloPlusDesc;
            end if;
          else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		  end if;
        end if;
      end if;
      -- <natura_pagamento>
      mifCountRec:=mifCountRec+1;

      -- <causale_esenzione_spese>
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      if codiceBolloPlusEsente=true and mifFlussoOrdinativoRec.mif_ord_commissioni_carico is not null then
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
       if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
  	   end if;
       if flussoElabMifElabRec.flussoElabMifAttivo=true then
	   	  if flussoElabMifElabRec.flussoElabMifElab=true then
          	mifFlussoOrdinativoRec.mif_ord_commissioni_esenzione:=ordCodiceBolloDesc;
          else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		  end if;
       end if;
      end if;
      -- </spese>

	  -- <beneficiario>
      mifCountRec:=mifCountRec+1;
      -- <anagrafica_beneficiario>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      mifCountRec:=mifCountRec+1;
      anagraficaBenefCBI:=null;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
--       raise notice 'beneficiario mifCountRec=%',mifCountRec;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if soggettoSedeSecId is not null then
            	flussoElabMifValore:=soggettoRec.soggetto_desc||' '||soggettoSedeRec.soggetto_desc;
            else
            	flussoElabMifValore:=soggettoRec.soggetto_desc;
            end if;

            /*if flussoElabMifElabRec.flussoElabMifParam is not null and tipoMDPCbi is null then
	           	tipoMDPCbi:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            end if; */

            -- se non e girofondo o se lo e ma il contocorrente_intestazione e vuoto
            -- valorizzo i tag di anagrafica_beneficiario
            -- altrimenti solo anagrafica_beneficiario=contocorrente_intestazione
            -- e anagrafica_beneficiario in dati_a_disposizione_ente
            /*if codAccreRec.accredito_gruppo_code!=tipoMDPCbi or
			   (codAccreRec.accredito_gruppo_code=tipoMDPCbi and
                 (MDPRec.contocorrente_intestazione is null or MDPRec.contocorrente_intestazione='')) then
	           	mifFlussoOrdinativoRec.mif_ord_anag_benef:=substring(flussoElabMifValore from 1 for 140);
            else
	            	anagraficaBenefCBI:=flussoElabMifValore;
	                mifFlussoOrdinativoRec.mif_ord_anag_benef:=substring(MDPRec.contocorrente_intestazione from 1 for 140);
            end if;*/

            mifFlussoOrdinativoRec.mif_ord_anag_benef:=substring(flussoElabMifValore from 1 for 140);

       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
     end if;



	 -- <indirizzo_beneficiario>
     flussoElabMifElabRec:=null;
     flussoElabMifValore:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' indirizzo_benef mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

     if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;

     if flussoElabMifElabRec.flussoElabMifAttivo=true then
       if flussoElabMifElabRec.flussoElabMifElab=true then
        	if soggettoSedeSecId is not null then
                select * into indirizzoRec
                from siac_t_indirizzo_soggetto indir
                where indir.soggetto_id=soggettoSedeSecId
                and   indir.data_cancellazione is null
                and   indir.validita_fine is null;

            else
            	select * into indirizzoRec
                from siac_t_indirizzo_soggetto indir
                where indir.soggetto_id=soggettoRifId
                and   indir.principale='S'
                and   indir.data_cancellazione is null
         	    and   indir.validita_fine is null;

            end if;

            if indirizzoRec is null then
            	-- RAISE EXCEPTION ' Errore in lettura indirizzo soggetto [siac_t_indirizzo_soggetto].';
                isIndirizzoBenef:=false;
            end if;

            if isIndirizzoBenef=true then

             if indirizzoRec.via_tipo_id is not null then
            	select tipo.via_tipo_code into flussoElabMifValore
                from siac_d_via_tipo tipo
                where tipo.via_tipo_id=indirizzoRec.via_tipo_id
                and   tipo.data_cancellazione is null
         	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		 		and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));
                if flussoElabMifValore is not null then
                	flussoElabMifValore:=flussoElabMifValore||' ';
                end if;
             end if;

             flussoElabMifValore:=trim(both from coalesce(flussoElabMifValore,'')||coalesce(indirizzoRec.toponimo,'')
                                 ||' '||coalesce(indirizzoRec.numero_civico,''));

             if flussoElabMifValore is not null and anagraficaBenefCBI is null then
	            mifFlussoOrdinativoRec.mif_ord_indir_benef:=substring(flussoElabMifValore from 1 for 30);
             end if;
           end if;
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

   	  -- <cap_beneficiario>
      mifCountRec:=mifCountRec+1;
      if isIndirizzoBenef=true then
        if indirizzoRec.zip_code is not null and anagraficaBenefCBI is null then
         flussoElabMifElabRec:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
	            mifFlussoOrdinativoRec.mif_ord_cap_benef:=lpad(indirizzoRec.zip_code,5,'0');
          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
         end if;
        end if;
	  end if;

      -- <localita_beneficiario>
      mifCountRec:=mifCountRec+1;
      if isIndirizzoBenef=true then

        if indirizzoRec.comune_id is not null and anagraficaBenefCBI is null then
         flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;

	     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
          	select com.comune_desc into flussoElabMifValore
            from siac_t_comune com
            where com.comune_id=indirizzoRec.comune_id
            and   com.data_cancellazione is null
            and   com.validita_fine is null;

            if flussoElabMifValore is not null then
	            mifFlussoOrdinativoRec.mif_ord_localita_benef:=substring(flussoElabMifValore from 1 for 30);
            end if;
          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
         end if;
        end if;
      end if;


	  -- <provincia_beneficiario>
      mifCountRec:=mifCountRec+1;
      if isIndirizzoBenef=true then

        if indirizzoRec.comune_id is not null and anagraficaBenefCBI is null then
         flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
          	select prov.sigla_automobilistica into flussoElabMifValore
            from siac_r_comune_provincia provRel, siac_t_provincia prov
            where provRel.comune_id=indirizzoRec.comune_id
            and   provRel.data_cancellazione is null
            and   provRel.validita_fine is null
            and   prov.provincia_id=provRel.provincia_id
            and   prov.data_cancellazione is null
            and   prov.validita_fine is null
            order by provRel.data_creazione;

            if flussoElabMifValore is not null then
	            mifFlussoOrdinativoRec.mif_ord_prov_benef:=flussoElabMifValore;
            end if;
          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
         end if;
        end if;
      end if;

      -- <stato_beneficiario>
      mifCountRec:=mifCountRec+1; -- popolare in seguito ricavato il codice_paese di piazzatura
      flussoElabMifElabRec:=null;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
        if flussoElabMifElabRec.flussoElabMifElab=true then
          if anagraficaBenefCBI is null and
             statoBeneficiario=false then
	            statoBeneficiario:=true;
           end if;
         else
           RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
      end if;

	  -- <partita_iva_beneficiario>
      mifCountRec:=mifCountRec+1;
      if ( anagraficaBenefCBI is null and
            (soggettoRec.partita_iva is not null or
            (soggettoRec.partita_iva is null and soggettoRec.codice_fiscale is not null and length(soggettoRec.codice_fiscale)=11))
          )   then
      	 flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
          	    if soggettoRec.partita_iva is not null then
		            mifFlussoOrdinativoRec.mif_ord_partiva_benef:=soggettoRec.partita_iva;
                else
                    if length(trim ( both ' ' from soggettoRec.codice_fiscale))=11 then
                        mifFlussoOrdinativoRec.mif_ord_partiva_benef:=trim ( both ' ' from soggettoRec.codice_fiscale);
                    end if;
                end if;
          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
         end if;
      end if;

       -- <codice_fiscale_beneficiario>
      mifCountRec:=mifCountRec+1;
--      if mifFlussoOrdinativoRec.mif_ord_partiva_benef is null and anagraficaBenefCBI is null then
      	 flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
            -- se CASSA codice_fiscale obbligatorio
          	if flussoElabMifElabRec.flussoElabMifParam is not null then
		            if tipoMDPCo is null then
                    	tipoMDPCo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                	end if;

                    if tipoMDPCo is not null and
                       tipoMDPCo=codAccreRec.accredito_gruppo_code then
                       if soggettoRec.codice_fiscale is not null then
                    	flussoElabMifValore:=trim ( both ' ' from soggettoRec.codice_fiscale);
                       else
	                    if mifFlussoOrdinativoRec.mif_ord_partiva_benef is not null then
     	                   flussoElabMifValore:=mifFlussoOrdinativoRec.mif_ord_partiva_benef;
                        end if;
                       end if;
                    end if;
            end if;

            -- se non CASSA valorizzato se partita iva non presente e  codice_fiscale=16
            if flussoElabMifValore is null and
               mifFlussoOrdinativoRec.mif_ord_partiva_benef is null and
               soggettoRec.codice_fiscale is not null and
               length(soggettoRec.codice_fiscale)=16 then
               flussoElabMifValore:=trim ( both ' ' from soggettoRec.codice_fiscale);
            end if;

            if flussoElabMifValore is not null then
		             mifFlussoOrdinativoRec.mif_ord_codfisc_benef:=flussoElabMifValore;
            end if;
          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
         end if;
--        end if;
      -- </beneficiario>


      -- <delegato>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      isMDPCo:=false;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
        if flussoElabMifElabRec.flussoElabMifElab=true then
         	if flussoElabMifElabRec.flussoElabMifParam is not null then
                    if tipoMDPCo is null then
                    	tipoMDPCo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                	end if;

                    if tipoMDPCo is not null and
                       tipoMDPCo=codAccreRec.accredito_gruppo_code then
                    	isMDPCo:=true;
                    end if;

					if isMDPCo=true and -- non esporre se REGOLARIZZAZIONE ( provvisori di cassa )
                       mifFlussoOrdinativoRec.mif_ord_pagam_tipo is not null and
            		   ( mifFlussoOrdinativoRec.mif_ord_pagam_tipo=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2))
                         or
                         mifFlussoOrdinativoRec.mif_ord_pagam_tipo=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3))
                       )  then -- 20.12.2017 Sofia Jira SIAC-5665
			             isMDPCo=false;
			        end if;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
      end if;

      -- <anagrafica_delegato>
      mifCountRec:=mifCountRec+1;
      if isMDPCo=true and MDPRec.quietanziante is not null then
        	flussoElabMifElabRec:=null;
      		flussoElabMifValore:=null;

     	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
		    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        	if flussoElabMifElabRec.flussoElabMifId is null then
	            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    	    end if;
            if flussoElabMifElabRec.flussoElabMifAttivo=true then
         		if flussoElabMifElabRec.flussoElabMifElab=true then
                   	mifFlussoOrdinativoRec.mif_ord_anag_quiet:=MDPRec.quietanziante;
           		else
           			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
		         end if;
	        end if;
      end if;

      mifCountRec:=mifCountRec+7;
--      raise notice 'codfisc_quiet mifCountRec=%',mifCountRec;
      -- <codice_fiscale_delegato>
      if isMDPCo=true and mifFlussoOrdinativoRec.mif_ord_anag_quiet is not null and
         MDPRec.quietanziante_codice_fiscale is not null  and
         length(MDPRec.quietanziante_codice_fiscale)=16   then
             flussoElabMifElabRec:=null;
      		 flussoElabMifValore:=null;
             flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec]; -- 72
		     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        	 if flussoElabMifElabRec.flussoElabMifId is null then
	            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    	     end if;
             if flussoElabMifElabRec.flussoElabMifAttivo=true then
         		if flussoElabMifElabRec.flussoElabMifElab=true then
                   	flussoElabMifValore:=trim ( both ' ' from MDPRec.quietanziante_codice_fiscale);

                    if flussoElabMifValore is not null then
                    	mifFlussoOrdinativoRec.mif_ord_codfisc_quiet:=flussoElabMifValore;
                    end if;

           		else
           			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
		        end if;
	         end if;
      end if;
      -- </delegato>

	  -- <creditore_effettivo>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      soggettoQuietRec:=null;
      soggettoQuietRifRec:=null;
      soggettoQuietId:=null;
      soggettoQuietRifId:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then

	      /* -- 20.04.2018 Sofia JIRA SIAC-6097
          if flussoElabMifElabRec.flussoElabMifParam is not null and
             mifFlussoOrdinativoRec.mif_ord_pagam_tipo is not null and
             ( mifFlussoOrdinativoRec.mif_ord_pagam_tipo=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3))
               or
               mifFlussoOrdinativoRec.mif_ord_pagam_tipo=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4))
               or -- 13.04.2018 Sofia JIRA SIAC-6097
               mifFlussoOrdinativoRec.mif_ord_pagam_tipo=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,5))
               or
               mifFlussoOrdinativoRec.mif_ord_pagam_tipo=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,6))
                 -- 13.04.2018 Sofia JIRA SIAC-6097
               or
               mifFlussoOrdinativoRec.mif_ord_pagam_tipo=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,7))
                 -- 19.04.2018 Sofia JIRA SIAC-6097
             )   then -- 20.12.2017 Sofia JIRA siac-5665

          end if;*/


          -- 20.04.2018 Sofia JIRA SIAC-6097
          if flussoElabMifElabRec.flussoElabMifParam is not null and
           mifFlussoOrdinativoRec.mif_ord_pagam_tipo is not null  then

           flussoElabMifValore:= regexp_replace(flussoElabMifElabRec.flussoElabMifParam,
                                                trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1))||'.'||
                                                trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2))||'.',
							                    '');
 		   if  fnc_mif_ordinativo_esenzione_bollo(mifFlussoOrdinativoRec.mif_ord_pagam_tipo,flussoElabMifValore)=true  then
	           flussoElabMifElabRec.flussoElabMifElab=false;
               flussoElabMifValore:=null;
           end if;
          end if;

          if flussoElabMifElabRec.flussoElabMifElab=true then -- non esporre su regolarizzazione (provvisori)
           if  ordCsiRelazTipoId is null then
            if ordCsiRelazTipo is null then
            	if flussoElabMifElabRec.flussoElabMifParam is not null then
	                ordCsiRelazTipo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                    ordCsiCOTipo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                end if;
            end if;

            if ordCsiRelazTipo is  not null then
                select tipo.oil_relaz_tipo_id into ordCsiRelazTipoId
               	from siac_d_oil_relaz_tipo tipo
	            where tipo.ente_proprietario_id=enteProprietarioId
    	          and tipo.oil_relaz_tipo_code=ordCsiRelazTipo
        	      and tipo.data_cancellazione is null
                  and tipo.validita_fine is null;
            end if;
           end if;

           if ordCsiRelazTipoId is not null and
              ( ordCsiCOTipo is null or ordCsiCOTipo!=codAccreRec.accredito_gruppo_code ) then

                soggettoQuietId:=MDPRec.soggetto_id;

                select sogg.*
                       into  soggettoQuietRec
                from siac_t_soggetto sogg, siac_r_soggrel_modpag relmdp,siac_r_soggetto_relaz relsogg,
                     siac_r_oil_relaz_tipo roil
                where sogg.soggetto_id=MDPRec.soggetto_id
                and   sogg.data_cancellazione is null
                and   sogg.validita_fine is null
                and   relmdp.modpag_id=MDPRec.modpag_id
                and   relmdp.data_cancellazione is null
                -- and   relmdp.validita_fine is null 04.04.2018 Sofia SIAC-6064
                -- 04.04.2018 Sofia SIAC-6064
			    and date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(relmdp.validita_fine,dataElaborazione))
    			and   relmdp.soggetto_relaz_id=relsogg.soggetto_relaz_id
                and   relsogg.soggetto_id_a=MDPRec.soggetto_id
                and   relsogg.soggetto_id_da=soggettoRifId
                and   roil.relaz_tipo_id=relsogg.relaz_tipo_id
                and   roil.oil_relaz_tipo_id=ordCsiRelazTipoId
                and   relsogg.data_cancellazione is null
                and   relsogg.validita_fine is null
                and   roil.data_cancellazione is null
                and   roil.validita_fine is null;

				if soggettoQuietRec is null then
                	soggettoQuietId:=null;
                end if;

               if soggettoQuietId is not null then
                 select sogg.*
                        into soggettoQuietRifRec
		         from  siac_t_soggetto sogg, siac_r_soggetto_relaz rel
		         where rel.soggetto_id_a=soggettoQuietRec.soggetto_id
		         and   rel.relaz_tipo_id=ordSedeSecRelazTipoId
		         and   rel.ente_proprietario_id=enteProprietarioId
		         and   rel.data_cancellazione is null
                 and   rel.validita_fine is null
                 and   sogg.soggetto_id=rel.soggetto_id_da
		         and   sogg.data_cancellazione is null
                 and   sogg.validita_fine is null;


                 if soggettoQuietRifRec is null then

                 else
                 	soggettoQuietRifId:=soggettoQuietRifRec.soggetto_id;
                 end if;
               end if;
            end if;
          end if;
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

      mifCountRec:=mifCountRec+1;
  	  -- <anagrafica_creditore_effettivo>
      if soggettoQuietId is not null then
         flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;

	     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec]; --63
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
         	if flussoElabMifElabRec.flussoElabMifElab=true then
	            if soggettoQuietRifId is not null then
    	        	flussoElabMifValore:=soggettoQuietRifRec.soggetto_desc||' '||soggettoQuietRec.soggetto_desc;
        	    else
            		flussoElabMifValore:=soggettoQuietRec.soggetto_desc;
	            end if;

                if flussoElabMifValore is not null then
--                	mifFlussoOrdinativoRec.mif_ord_anag_del:=substring(flussoElabMifValore from 1 for 140);

                    -- 24.01.2018 Sofia jira siac-5765 - scambio tag
                    -- in creditore_effettivo -- anagrafica_beneficiario
                    mifFlussoOrdinativoRec.mif_ord_anag_del:=mifFlussoOrdinativoRec.mif_ord_anag_benef;
                    mifFlussoOrdinativoRec.mif_ord_indir_del:=mifFlussoOrdinativoRec.mif_ord_indir_benef;
                    mifFlussoOrdinativoRec.mif_ord_cap_del:=mifFlussoOrdinativoRec.mif_ord_cap_benef;
                    mifFlussoOrdinativoRec.mif_ord_localita_del:=mifFlussoOrdinativoRec.mif_ord_localita_benef;
                    mifFlussoOrdinativoRec.mif_ord_prov_del:=mifFlussoOrdinativoRec.mif_ord_prov_benef;
                    mifFlussoOrdinativoRec.mif_ord_partiva_del:=mifFlussoOrdinativoRec.mif_ord_partiva_benef;
                    mifFlussoOrdinativoRec.mif_ord_codfisc_del:=mifFlussoOrdinativoRec.mif_ord_codfisc_benef;

                    -- 24.01.2018 Sofia jira siac-5765 - scambio tag
                    -- in anagrafica_beneficiario -- creditore_effettivo
                    mifFlussoOrdinativoRec.mif_ord_anag_benef:=substring(flussoElabMifValore from 1 for 140);

                end if;
         	else
            	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
         end if;
	  end if;

      mifCountRec:=mifCountRec+1;
      -- <indirizzo_creditore_effettivo>
      if soggettoQuietId is not null then
         flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;
         indirizzoRec:=null;
		 flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
         	if flussoElabMifElabRec.flussoElabMifElab=true then

                select * into indirizzoRec
                from siac_t_indirizzo_soggetto indir
                where indir.soggetto_id=soggettoQuietId
                and   (case when soggettoQuietRifId is null
                            then indir.principale='S' else coalesce(indir.principale,'N')='N' end)
                and   indir.data_cancellazione is null
                and   indir.validita_fine is null;

                if indirizzoRec is null then
                    isIndirizzoBenQuiet:=false;
            	end if;

			    if isIndirizzoBenQuiet=true then

            	 if indirizzoRec.via_tipo_id is not null then
            		select tipo.via_tipo_code into flussoElabMifValore
                	from siac_d_via_tipo tipo
               		where tipo.via_tipo_id=indirizzoRec.via_tipo_id
	                and   tipo.data_cancellazione is null
    	     	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 			 		and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));

                	if flussoElabMifValore is not null then
                		flussoElabMifValore:=flussoElabMifValore||' ';
               	    end if;

           		  end if;

	             flussoElabMifValore:=trim(both from coalesce(flussoElabMifValore,'')||coalesce(indirizzoRec.toponimo,'')
    	                             ||' '||coalesce(indirizzoRec.numero_civico,''));

        	     if flussoElabMifValore is not null then
--	        	    mifFlussoOrdinativoRec.mif_ord_indir_del:=substring(flussoElabMifValore from 1 for 30);

                    -- 24.01.2018 Sofia jira siac-5765 - scambio tag
                    -- in anagrafica_beneficiario -- creditore_effettivo
                    mifFlussoOrdinativoRec.mif_ord_indir_benef:=substring(flussoElabMifValore from 1 for 30);
	             end if;
                end if;
         	else
            	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
         end if;
     end if;

	 -- <cap_creditore_effettivo>
     mifCountRec:=mifCountRec+1;
     if isIndirizzoBenQuiet=true then
        if soggettoQuietId is not null and indirizzoRec is not null then
         flussoElabMifElabRec:=null;
		 flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
         	if flussoElabMifElabRec.flussoElabMifElab=true then
--         		mifFlussoOrdinativoRec.mif_ord_cap_del:=lpad(indirizzoRec.zip_code,5,'0');

				-- 24.01.2018 Sofia jira siac-5765 - scambio tag
                -- in anagrafica_beneficiario -- creditore_effettivo
                mifFlussoOrdinativoRec.mif_ord_cap_benef:=lpad(indirizzoRec.zip_code,5,'0');
            else
            	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;

         end if;
        end if;
     end if;


     -- <localita_creditore_effettivo>
     mifCountRec:=mifCountRec+1;
     if isIndirizzoBenQuiet=true then
        if soggettoQuietId is not null and indirizzoRec.comune_id is not null then
         flussoElabMifElabRec:=null;
		 flussoElabMifValore:=null;
		 flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
         	if flussoElabMifElabRec.flussoElabMifElab=true then

            	select com.comune_desc into flussoElabMifValore
           		from siac_t_comune com
	            where com.comune_id=indirizzoRec.comune_id
    	        and   com.data_cancellazione is null
                and   com.validita_fine is null;

	            if flussoElabMifValore is not null then
--		            mifFlussoOrdinativoRec.mif_ord_localita_del:=substring(flussoElabMifValore from 1 for 30);

                    -- 24.01.2018 Sofia jira siac-5765 - scambio tag
                    -- in anagrafica_beneficiario -- creditore_effettivo
                    mifFlussoOrdinativoRec.mif_ord_localita_benef:=substring(flussoElabMifValore from 1 for 30);
        	    end if;
            else
            	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
         end if;
        end if;
     end if;

     mifCountRec:=mifCountRec+1;
	 -- <provincia_creditore_effettivo>
	 if isIndirizzoBenQuiet=true then
        if soggettoQuietId is not null and indirizzoRec.comune_id is not null then
         flussoElabMifElabRec:=null;
		 flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
         	if flussoElabMifElabRec.flussoElabMifElab=true then

            	select prov.sigla_automobilistica into flussoElabMifValore
            	from siac_r_comune_provincia provRel, siac_t_provincia prov
           		where provRel.comune_id=indirizzoRec.comune_id
           	  	and   provRel.data_cancellazione is null
                and   provRel.validita_fine is null
        	    and   prov.provincia_id=provRel.provincia_id
            	and   prov.data_cancellazione is null
                and   prov.validita_fine is null
        	    order by provRel.data_creazione;

	            if flussoElabMifValore is not null then
--		            mifFlussoOrdinativoRec.mif_ord_prov_del:=flussoElabMifValore;
                    -- 24.01.2018 Sofia jira siac-5765 - scambio tag
                    -- in anagrafica_beneficiario -- creditore_effettivo
                    mifFlussoOrdinativoRec.mif_ord_prov_benef:=flussoElabMifValore;
        	    end if;
            else
            	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
         end if;
        end if;
     end if;

     mifCountRec:=mifCountRec+1;
	 -- <stato_creditore_effettivo>
     if soggettoQuietId is not null  then
        flussoElabMifElabRec:=null;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
       if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
       end if;
       if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
         	if statoDelegatoCredEff=false then
	            statoDelegatoCredEff:=true;
                -- valorizzato poi in piazzatura
            end if;
          else
           RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
       end if;
     end if;

     mifCountRec:=mifCountRec+1;
	 -- <partita_iva_creditore_effettivo>
     if soggettoQuietId is not null THEN
         flussoElabMifElabRec:=null;
		 flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
         	if flussoElabMifElabRec.flussoElabMifElab=true then
                if  soggettoQuietRifId is not null then
	            	if soggettoQuietRifRec.partita_iva is not null  or
                       (soggettoQuietRifRec.partita_iva is null and
                        soggettoQuietRifRec.codice_fiscale is not null and length(soggettoQuietRifRec.codice_fiscale)=11)
                       then
                       	if soggettoQuietRifRec.partita_iva is not null then
	    	             flussoElabMifValore:=soggettoQuietRifRec.partita_iva;
                        else
                         flussoElabMifValore:=trim ( both ' ' from soggettoQuietRifRec.codice_fiscale);
                        end if;
                     end if;
				else
                	if soggettoQuietRec.partita_iva is not null  or
                       (soggettoQuietRec.partita_iva is null and
                        soggettoQuietRec.codice_fiscale is not null and length(soggettoQuietRec.codice_fiscale)=11)
                       then
                       	if soggettoQuietRec.partita_iva is not null then
	    	             flussoElabMifValore:=soggettoQuietRec.partita_iva;
                        else
                         flussoElabMifValore:=trim ( both ' ' from soggettoQuietRec.codice_fiscale);
                        end if;
                    end if;
                end if;

			    if flussoElabMifValore is not null then
--	                mifFlussoOrdinativoRec.mif_ord_partiva_del:=flussoElabMifValore;

                    -- 24.01.2018 Sofia jira siac-5765 - scambio tag
                    -- in anagrafica_beneficiario -- creditore_effettivo
                    mifFlussoOrdinativoRec.mif_ord_partiva_benef:=flussoElabMifValore;

                end if;
         	else
            	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
         end if;
     end if;

     mifCountRec:=mifCountRec+1;
     -- <codice_fiscale_creditore_effettivo>
     if soggettoQuietId is not null  then
         flussoElabMifElabRec:=null;
		 flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
         	if flussoElabMifElabRec.flussoElabMifElab=true then
            	if soggettoQuietRifId is not null then
                 if mifFlussoOrdinativoRec.mif_ord_partiva_del is null then
                  if soggettoQuietRifRec.codice_fiscale is not null and
                     length(soggettoQuietRifRec.codice_fiscale)= 16 then
	                 flussoElabMifValore:=trim ( both ' ' from soggettoQuietRifRec.codice_fiscale);
                  end if;
                 end if;
                else
                 if soggettoQuietRec.codice_fiscale is not null and
                    length(soggettoQuietRec.codice_fiscale)=16 then
	                 flussoElabMifValore:=trim ( both ' ' from soggettoQuietRec.codice_fiscale);
                 end if;
                end if;

				if flussoElabMifValore is not null then
--	                mifFlussoOrdinativoRec.mif_ord_codfisc_del:=flussoElabMifValore;

                    -- 24.01.2018 Sofia jira siac-5765 - scambio tag
                    -- in anagrafica_beneficiario -- creditore_effettivo
  		            mifFlussoOrdinativoRec.mif_ord_codfisc_benef:=flussoElabMifValore;

                end if;
         	else
            	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
        end if;
     end if;

     -- </creditore_effettivo>
/**/
	 -- <piazzatura>
     flussoElabMifElabRec:=null;
     isOrdPiazzatura:=false;
     accreditoGruppoCode:=null;
     isPaeseSepa:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
--     raise notice 'piazzatura mifCountRec=%',mifCountRec;
     if flussoElabMifElabRec.flussoElabMifId is null then
      	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;
     if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
       	 if flussoElabMifElabRec.flussoElabMifParam is not null then
            isOrdPiazzatura:=fnc_mif_ordinativo_piazzatura_splus(MDPRec.accredito_tipo_id,
                                                           		 mifOrdinativoIdRec.mif_ord_codice_funzione,
		  												         flussoElabMifElabRec.flussoElabMifParam,
                                                                 mifFlussoOrdinativoRec.mif_ord_pagam_tipo,
			                                                     dataElaborazione,dataFineVal,enteProprietarioId);
         end if;
      	else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
        end if;
     end if;

     if isOrdPiazzatura=true then

      	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura tipo accredito MDP per popolamento  campi relativi a'||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

--        raise notice 'Ordinativo con piazzatura % codice funzione=%',mifOrdinativoIdRec.mif_ord_ord_id,mifOrdinativoIdRec.mif_ord_codice_funzione;

		accreditoGruppoCode:=codAccreRec.accredito_gruppo_code;
	    --raise notice 'accreditoGruppoCode=% ',accreditoGruppoCode;

        if MDPRec.iban is not null and length(MDPRec.iban)>2  then
        	select distinct 1 into isPaeseSepa
            from siac_t_sepa sepa
            where sepa.sepa_iso_code=substring(upper(MDPRec.iban) from 1 for 2)
            and   sepa.ente_proprietario_id=enteProprietarioId
            and   sepa.data_cancellazione is null
      	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',sepa.validita_inizio)
 			and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(sepa.validita_fine,dataElaborazione));
        end if;
     end if;


     -- <abi_beneficiario>
 	 mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true then
        flussoElabMifElabRec:=null;
     	flussoElabMifValore:=null;

	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	    if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
        		if flussoElabMifElabRec.flussoElabMifParam is not null then
                	if tipoMDPCB is null then
	                    tipoMDPCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                    end if;
                    if tipoPaeseCB is null then
	                    tipoPaeseCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                    end if;

                    -- 15.01.2018 Sofia JIRA SIAC-5765
					if tipoMDPCCP is null then
                    	tipoMDPCCP:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                    end if;


                    if tipoMDPCB is not null and tipoMDPCB=accreditoGruppoCode and
                       MDPRec.iban is not null and length(MDPRec.iban)>2 and
                       tipoPaeseCB is not null and tipoPaeseCB=substring(upper(MDPRec.iban) from 1 for 2) then -- solo IT
                       	flussoElabMifValore:=substring(upper(MDPRec.iban) from 6 for 5);
                    end if;

                    -- 15.01.2018 Sofia JIRA SIAC-5765
                    if flussoElabMifValore is null and
                       flussoElabMifElabRec.flussoElabMifDef is not null and
                       tipoMDPCCP is not null and tipoMDPCCP=accreditoGruppoCode then
                       flussoElabMifValore:=flussoElabMifElabRec.flussoElabMifDef;
                    end if;


                    if flussoElabMifValore is not null then
                    	mifFlussoOrdinativoRec.mif_ord_abi_benef:=flussoElabMifValore;
                    end if;
    	        end if;
    	  	else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
     	 end if;
	 end if;

     -- <cab_beneficiario>
     mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true then
         flussoElabMifElabRec:=null;
     	 flussoElabMifValore:=null;
 	     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	     if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;
         if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
        		if flussoElabMifElabRec.flussoElabMifParam is not null then
                	if tipoMDPCB is null then
	                    tipoMDPCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                    end if;
                    if tipoPaeseCB is null then
	                    tipoPaeseCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                    end if;

                    -- 15.01.2018 Sofia JIRA SIAC-5765
					if tipoMDPCCP is null then
                    	tipoMDPCCP:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                    end if;

                    if tipoMDPCB is not null and tipoMDPCB=accreditoGruppoCode and
                       MDPRec.iban is not null and length(MDPRec.iban)>2 and
                       tipoPaeseCB is not null and tipoPaeseCB=substring(upper(MDPRec.iban) from 1 for 2) then -- solo IT
                       	flussoElabMifValore:=substring(upper(MDPRec.iban) from 11 for 5);
                    end if;

                    -- 15.01.2018 Sofia JIRA SIAC-5765
                    if flussoElabMifValore is null and
                       flussoElabMifElabRec.flussoElabMifDef is not null and
                       tipoMDPCCP is not null and tipoMDPCCP=accreditoGruppoCode then
                       flussoElabMifValore:=flussoElabMifElabRec.flussoElabMifDef;
                    end if;

                    if flussoElabMifValore is not null then
                    	mifFlussoOrdinativoRec.mif_ord_cab_benef:=flussoElabMifValore;
                    end if;
    	        end if;
    	  	else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
     	 end if;
     end if;

     -- <numero_conto_corrente_beneficiario>
     mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true then
        flussoElabMifElabRec:=null;
     	flussoElabMifValore:=null;
	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	    if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
        		if flussoElabMifElabRec.flussoElabMifParam is not null then
                	if tipoMDPCB is null then
	                    tipoMDPCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                    end if;
                    if tipoPaeseCB is null then
	                    tipoPaeseCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                    end if;
                    if tipoMDPCCP is null or tipoMDPCCP='' then
                    	tipoMDPCCP:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                    end if;

                    if tipoMDPCB is not null and tipoMDPCB=accreditoGruppoCode and
                       MDPRec.iban is not null and length(MDPRec.iban)>2 and
                       tipoPaeseCB is not null and tipoPaeseCB=substring(upper(MDPRec.iban) from 1 for 2) then -- solo IT
                       	flussoElabMifValore:=substring(upper(MDPRec.iban) from 16 for 12);
                    end if;

                    if tipoMDPCCP is not null and tipoMDPCCP=accreditoGruppoCode and
                       coalesce(MDPRec.contocorrente,NVL_STR)!=NVL_STR then
                       flussoElabMifValore:=lpad(MDPRec.contocorrente,NUM_DODICI,ZERO_PAD);
                    end if;

                    --raise notice 'numero_conto_corrente_beneficiario';
                    --raise notice 'tipoMDPCCP=% ',tipoMDPCCP;

                    if flussoElabMifValore is not null then
                    	mifFlussoOrdinativoRec.mif_ord_cc_benef:=flussoElabMifValore;
                    end if;
    	        end if;
    	  	else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
     	 end if;
     end if;

     -- <caratteri_controllo>
     mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true then
	    flussoElabMifElabRec:=null;
    	flussoElabMifValore:=null;
	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	    if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
        		if flussoElabMifElabRec.flussoElabMifParam is not null then
                	if tipoMDPCB is null then
	                    tipoMDPCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                    end if;
                    if tipoPaeseCB is null then
	                    tipoPaeseCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                    end if;

					-- 15.01.2018 Sofia JIRA SIAC-5765
					if tipoMDPCCP is null then
                    	tipoMDPCCP:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                    end if;

                    if tipoMDPCB is not null and tipoMDPCB=accreditoGruppoCode and
                       MDPRec.iban is not null and length(MDPRec.iban)>2 and
                       tipoPaeseCB is not null and tipoPaeseCB=substring(upper(MDPRec.iban) from 1 for 2) then -- solo IT
                       	flussoElabMifValore:=substring(upper(MDPRec.iban) from 3 for 2);
                    end if;

                    -- 15.01.2018 Sofia JIRA SIAC-5765
                    if flussoElabMifValore is null and
                       flussoElabMifElabRec.flussoElabMifDef is not null and
                       tipoMDPCCP is not null and tipoMDPCCP=accreditoGruppoCode then
                       flussoElabMifValore:=flussoElabMifElabRec.flussoElabMifDef;
                    end if;

                    if flussoElabMifValore is not null then
                    	mifFlussoOrdinativoRec.mif_ord_ctrl_benef:=flussoElabMifValore;
                    end if;
    	        end if;
    	  	else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
     	end if;
     end if;


     -- <codice_cin>
     mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true then
        flussoElabMifElabRec:=null;
     	flussoElabMifValore:=null;
	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	    if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
        		if flussoElabMifElabRec.flussoElabMifParam is not null then
                	if tipoMDPCB is null then
	                    tipoMDPCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                    end if;
                    if tipoPaeseCB is null then
	                    tipoPaeseCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                    end if;


					-- 15.01.2018 Sofia JIRA SIAC-5765
					if tipoMDPCCP is null then
                    	tipoMDPCCP:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                    end if;


                    if tipoMDPCB is not null and tipoMDPCB=accreditoGruppoCode and
                       MDPRec.iban is not null and length(MDPRec.iban)>2 and
                       tipoPaeseCB is not null and tipoPaeseCB=substring(upper(MDPRec.iban) from 1 for 2) then -- solo IT
                       	flussoElabMifValore:=substring(upper(MDPRec.iban) from 5 for 1);
                    end if;

                    -- 15.01.2018 Sofia JIRA SIAC-5765
                    if flussoElabMifValore is null and
                       flussoElabMifElabRec.flussoElabMifDef is not null and
                       tipoMDPCCP is not null and tipoMDPCCP=accreditoGruppoCode then
                       flussoElabMifValore:=flussoElabMifElabRec.flussoElabMifDef;
                    end if;

                    if flussoElabMifValore is not null then
                    	mifFlussoOrdinativoRec.mif_ord_cin_benef:=flussoElabMifValore;
                    end if;
    	        end if;
    	  	else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
     	 end if;
     end if;

     -- <codice_paese>
	 mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true then
        flussoElabMifElabRec:=null;
     	flussoElabMifValore:=null;
	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	    if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
        		if flussoElabMifElabRec.flussoElabMifParam is not null then
                	if tipoMDPCB is null then
	                    tipoMDPCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                    end if;
                    if tipoPaeseCB is null then
	                    tipoPaeseCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                    end if;

					-- 15.01.2018 Sofia JIRA SIAC-5765
					if tipoMDPCCP is null then
                    	tipoMDPCCP:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                    end if;


                    if tipoMDPCB is not null and tipoMDPCB=accreditoGruppoCode and
                       MDPRec.iban is not null and length(MDPRec.iban)>2 and
                       tipoPaeseCB is not null and tipoPaeseCB=substring(upper(MDPRec.iban) from 1 for 2) then -- solo IT
                       	flussoElabMifValore:=substring(upper(MDPRec.iban) from 1 for 2);
                    end if;


					-- 15.01.2018 Sofia JIRA SIAC-5765
                    if flussoElabMifValore is null and
                       flussoElabMifElabRec.flussoElabMifDef is not null and
                       tipoMDPCCP is not null and tipoMDPCCP=accreditoGruppoCode then
                       flussoElabMifValore:=flussoElabMifElabRec.flussoElabMifDef;
                    end if;

                    if flussoElabMifValore is not null then
                    	mifFlussoOrdinativoRec.mif_ord_cod_paese_benef:=flussoElabMifValore;
--                        raise notice 'statoBenficiario=%',statoBeneficiario;
                        if statoBeneficiario=true and statoDelegatoCredEff=false then -- se CSI IBAN non riporta dati del beneficiario quindi omettiamo codice_paese
                        	mifFlussoOrdinativoRec.mif_ord_stato_benef:=flussoElabMifValore;
                        end if;
                        if statoDelegatoCredEff=true then
--	                        mifFlussoOrdinativoRec.mif_ord_stato_del:=flussoElabMifValore;
                            -- 24.01.2018 Sofia jira siac-5765
                            mifFlussoOrdinativoRec.mif_ord_stato_del:=mifFlussoOrdinativoRec.mif_ord_stato_benef;
                            mifFlussoOrdinativoRec.mif_ord_stato_benef:=flussoElabMifValore;
                        end if;
                    end if;
    	        end if;
    	  	else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
       end if;
     end if;


     -- extra sepa
     -- <denominazione_banca_destinataria>
     mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true and isPaeseSepa is null then
		 flussoElabMifElabRec:=null;
     	 flussoElabMifValore:=null;
		 flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	     if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	 end if;
         if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
        		if flussoElabMifElabRec.flussoElabMifParam is not null then
                	if tipoMDPCB is null then
	                    tipoMDPCB:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                    end if;


                    if tipoMDPCB is not null and tipoMDPCB=accreditoGruppoCode and
                       MDPRec.banca_denominazione is not null  then
                       	flussoElabMifValore:=MDPRec.banca_denominazione;
                    end if;
                    if flussoElabMifValore is not null then
                    	mifFlussoOrdinativoRec.mif_ord_denom_banca_benef:=flussoElabMifValore;
                    end if;
    	        end if;
    	  	else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
     	 end if;
     end if;
     -- </piazzatura>

     -- sezione esteri sepa
     -- <sepa_credit_transfer>
     mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true
        and isPaeseSepa is not null then
     	flussoElabMifElabRec:=null;
   	    flussoElabMifValore:=null;
	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	     if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	 end if;
         if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
		     if flussoElabMifElabRec.flussoElabMifParam is not null then
                if paeseSepaTr is null then
	        	   	paeseSepaTr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                end if;
                if accreditoGruppoSepaTr is null then
	            	accreditoGruppoSepaTr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                end if;
                if SepaTr is null then
		            SepaTr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                end if;

    	        if accreditoGruppoSepaTr is not null and SepaTr is not null and paeseSepaTr is not null then
	    	        sepaCreditTransfer:=true;
            	end if;
             end if;
            else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
         end if;
     end if;

     -- <iban>
     mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true
        and sepaCreditTransfer=true
        and isPaeseSepa is not null
        and accreditoGruppoSepaTr=accreditoGruppoCode then
     	flussoElabMifElabRec:=null;
   	    flussoElabMifValore:=null;
	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	     if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	 end if;
         if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
		     	if MDPRec.iban is not null and length(MDPRec.iban)>=2 and
        		   substring(upper(MDPRec.iban) from 1 for 2)!=paeseSepaTr then
		           	mifFlussoOrdinativoRec.mif_ord_sepa_iban_tr:=MDPRec.iban;
        		end if;
            else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
         end if;
     end if;

     -- <bic>
     mifCountRec:=mifCountRec+1;
     if isOrdPiazzatura=true
        and sepaCreditTransfer=true
        and isPaeseSepa is not null
        and accreditoGruppoSepaTr=accreditoGruppoCode then
     	flussoElabMifElabRec:=null;
   	    flussoElabMifValore:=null;
	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	     if flussoElabMifElabRec.flussoElabMifId is null then
      		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	 end if;
         if flussoElabMifElabRec.flussoElabMifAttivo=true then
      		if flussoElabMifElabRec.flussoElabMifElab=true then
		     	if MDPRec.bic is not null and
                   MDPRec.iban is not null and length(MDPRec.iban)>=2 and
        		   substring(upper(MDPRec.iban) from 1 for 2)!=paeseSepaTr then
		           mifFlussoOrdinativoRec.mif_ord_sepa_bic_tr:=MDPRec.bic;
        		end if;
            else
        	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
         end if;
     end if;
     mifCountRec:=mifCountRec+5;
     -- </sepa_credit_transfer>


     -- <causale> ancora informazioni_beneficiario
     flussoElabMifElabRec:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifValore:=null;
     flussoElabMifValoreDesc:=null;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
--     raise notice 'causale mifCountRec=%',mifCountRec;
     if flussoElabMifElabRec.flussoElabMifId is null then
  	 	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;
     if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
        	if flussoElabMifElabRec.flussoElabMifParam is not null then
            	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura CUP-CIG.';
            	if cupCausAttr is null then
	            	cupCausAttr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                end if;
                if cigCausAttr is null then
	                cigCausAttr:=trim (both ' '	 from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                end if;

                if coalesce(cupCausAttr,NVL_STR)!=NVL_STR  and cupCausAttrId is null then
                	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura attr_id '||cupCausAttr||'.';
                	select attr.attr_id into cupCausAttrId
                    from siac_t_attr attr
                    where attr.ente_proprietario_id=enteProprietarioId
                    and   attr.attr_code=cupCausAttr
                    and   attr.data_cancellazione is null
                    and   attr.validita_fine is null;

                end if;

                if coalesce(cigCausAttr,NVL_STR)!=NVL_STR and cigCausAttrId is null then

                	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura attr_id '||cigCausAttr||'.';
                	select attr.attr_id into cigCausAttrId
                    from siac_t_attr attr
                    where attr.ente_proprietario_id=enteProprietarioId
                    and   attr.attr_code=cigCausAttr
                    and   attr.data_cancellazione is null
                    and   attr.validita_fine is null;

                end if;


                if cupCausAttrId is not null then
                	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore '||cupCausAttr||' [siac_r_ordinativo_attr].';

                	select a.testo into flussoElabMifValore
                    from siac_r_ordinativo_attr a
                    where a.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                    and   a.attr_id=cupCausAttrId
                    and   a.data_cancellazione is null
                    and   a.validita_fine is null;

                    if coalesce(flussoElabMifValore,NVL_STR)=NVL_STR then
                       	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore '||cupCausAttr||' [siac_r_liquidazione_attr].';

                    	select a.testo into flussoElabMifValore
                        from siac_r_liquidazione_attr  a
                        where a.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
                        and   a.attr_id=cupCausAttrId
                        and   a.data_cancellazione is null
	                    and   a.validita_fine is null;
                    end if;
                end if;

                if cigCausAttrId is not null then
                	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore '||cigCausAttr||' [siac_r_ordinativo_attr].';

                	select a.testo into flussoElabMifValoreDesc
                    from siac_r_ordinativo_attr a
                    where a.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                    and   a.attr_id=cigCausAttrId
                    and   a.data_cancellazione is null
                    and   a.validita_fine is null;

                    if coalesce(flussoElabMifValoreDesc,NVL_STR)=NVL_STR then
                       	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
	                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
    	                   ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
        	               ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
            	           ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                	       ||' mifCountRec='||mifCountRec
                    	   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore '||cigCausAttr||' [siac_r_liquidazione_attr].';

                    	select a.testo into flussoElabMifValoreDesc
                        from siac_r_liquidazione_attr  a
                        where a.liq_id=mifOrdinativoIdRec.mif_ord_liq_id
                        and   a.attr_id=cigCausAttrId
                        and   a.data_cancellazione is null
	                    and   a.validita_fine is null;
                    end if;
                end if;

            end if;
            -- cup
			if coalesce(flussoElabMifValore,NVL_STR)!=NVL_STR then
			       	mifFlussoOrdinativoRec.mif_ord_pagam_causale:=cupCausAttr||' '||flussoElabMifValore;

            end if;
            -- cig
			if coalesce(flussoElabMifValoreDesc,NVL_STR)!=NVL_STR  then
                	mifFlussoOrdinativoRec.mif_ord_pagam_causale:=
                      trim (both ' ' from coalesce(mifFlussoOrdinativoRec.mif_ord_pagam_causale,' ')||
                           ' '||cigCausAttr||' '||flussoElabMifValoreDesc);
            end if;


			mifFlussoOrdinativoRec.mif_ord_pagam_causale:=
      			replace(replace(substring(trim (both ' ' from coalesce(mifFlussoOrdinativoRec.mif_ord_pagam_causale,' ')||' '||mifOrdinativoIdRec.mif_ord_desc )
	                            from 1 for 370) , chr(VT_ASCII),chr(SPACE_ASCII)),chr(BS_ASCII),NVL_STR);

--			raise notice 'mifFlussoOrdinativoRec.mif_ord_pagam_causale %',mifFlussoOrdinativoRec.mif_ord_pagam_causale;


	     else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	     end if;
     end if;

     -- <sospeso>
     -- <numero_provvisorio>
     -- <importo_provvisorio>
     mifCountRec:=mifCountRec+2;

	 -- <ritenuta>
     -- <importo_ritenute>
     -- <numero_reversale>
     -- <progressivo_versante>
     mifCountRec:=mifCountRec+3;

	 -- <informazioni_aggiuntive>

     -- <lingua>
    flussoElabMifElabRec:=null;
    mifCountRec:=mifCountRec+1;
    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
     if flussoElabMifElabRec.flussoElabMifId is null then
  	 	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;
     if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
        	if flussoElabMifElabRec.flussoElabMifDef is not null then
        		mifFlussoOrdinativoRec.mif_ord_lingua:=flussoElabMifElabRec.flussoElabMifDef;

--                raise notice 'LINGUA def % %',flussoElabMifElabRec.flusso_elab_mif_campo,flussoElabMifElabRec.flussoElabMifDef;
            end if;
	     else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	     end if;
     end if;


    -- <riferimento_documento_esterno>
    mifCountRec:=mifCountRec+1;
    if tipoPagamRec is not null then
    	flussoElabMifElabRec:=null;
        flussoElabMifValore:=null;
        flussoElabMifValoreDesc:=null;
        codResult:=null;

        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	    if flussoElabMifElabRec.flussoElabMifId is null then
  		 	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	    end if;
    	if flussoElabMifElabRec.flussoElabMifAttivo=true then
    		if flussoElabMifElabRec.flussoElabMifElab=true then
        		if flussoElabMifElabRec.flussoElabMifDef is not null and
                   flussoElabMifElabRec.flussoElabMifParam is not null then

				    -- 30.07.2018 Sofia siac-6202
                    if coalesce(trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,5)),'')!='' then

                       select 1 into codResult
                       from siac_r_ordinativo_class rc, siac_t_class c , siac_d_class_tipo tipo
                       where tipo.ente_proprietario_id=enteProprietarioId
                       and   tipo.classif_tipo_code=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,5))
                       and   c.classif_tipo_id=tipo.classif_tipo_id
                       and   rc.classif_id=c.classif_id
                       and   rc.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                       and   rc.data_cancellazione is null
                       and   rc.validita_fine is null;

                       if codResult is not null then
		                   select * into flussoElabMifValore
                           from fnc_mif_ordinativo_splus_get_mese(mifOrdinativoIdRec.mif_ord_data_emissione);
                       end if;

                       if coalesce(flussoElabMifValore,'')!='' then
                       	flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,3))
                                             ||' '||flussoElabMifValore;
                       end if;
                    end if;
                    -- 30.07.2018 Sofia siac-6202


                    -- modalita accredito=STI - STIPENDI
                    if coalesce(flussoElabMifValore,'')='' and -- 30.07.2018 Sofia siac-6202
                       codAccreRec.accredito_tipo_code =
                           trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3)) then
                           flussoElabMifValore:=
                             trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,2));
                    end if;

                    if  coalesce(flussoElabMifValore,'')='' and -- 30.07.2018 Sofia siac-6202
                        tipoPagamRec.descTipoPagamento in
                        (trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1)),
                         trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2))
                        ) then
		                flussoElabMifValore:=tipoPagamRec.descTipoPagamento;
                    end if;

                    -- 23.01.2018 Sofia jira siac-5765
			        if coalesce(flussoElabMifValore,'')='' and -- 30.07.2018 Sofia siac-6202
                       codAccreRec.accredito_gruppo_code =
                           trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4)) and
                           MDPRec.contocorrente is not null and MDPRec.contocorrente!=''
                            then
                           flussoElabMifValore:=MDPRec.contocorrente;
                    end if;
                    -- 23.01.2018 Sofia jira siac-5765

                    if coalesce(flussoElabMifValore,'')='' and tipoPagamRec.defRifDocEsterno=true then
                        flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
                    end if;

                    if coalesce(flussoElabMifValore,'')!='' then
	                    mifFlussoOrdinativoRec.mif_ord_rif_doc_esterno:=flussoElabMifValore;
                    end if;
		        end if;
			else
     			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
		    end if;
    	end if;
    end if;
    -- </informazioni_aggiuntive>

    -- <sostituzione_mandato>

    flussoElabMifElabRec:=null;
    ordSostRec:=null;
    mifCountRec:=mifCountRec+1;
    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
    if flussoElabMifElabRec.flussoElabMifId is null then
  		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    end if;
    if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
                	select * into ordSostRec
                    from fnc_mif_ordinativo_sostituito( mifOrdinativoIdRec.mif_ord_ord_id,
 														ordRelazCodeTipoId,
                                                        dataElaborazione,dataFineVal);
    	else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	    end if;

    end if;

   mifCountRec:=mifCountRec+3;
   if ordSostRec is not null then
   		 flussoElabMifElabRec:=null;
   		 flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec-2];
	     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec-2
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         -- <numero_mandato_da_sostituire>
      	 if flussoElabMifElabRec.flussoElabMifId is null then
  	 		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      	 end if;

      	 if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	   if flussoElabMifElabRec.flussoElabMifElab=true then
--        		mifFlussoOrdinativoRec.mif_ord_num_ord_colleg:=lpad(ordSostRec.ordNumeroSostituto::varchar,NUM_SETTE,ZERO_PAD);
                mifFlussoOrdinativoRec.mif_ord_num_ord_colleg:=ordSostRec.ordNumeroSostituto::varchar;
	    	else
     			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	     	end if;
         end if;

     	-- <progressivo_beneficiario_da_sostuire>
     	flussoElabMifElabRec:=null;
  	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec-1];
	    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec-1
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
    	if flussoElabMifElabRec.flussoElabMifId is null then
  	 		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	    end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
     		if flussoElabMifElabRec.flussoElabMifElab=true then
            	if flussoElabMifElabRec.flussoElabMifDef is not null then
                	mifFlussoOrdinativoRec.mif_ord_progr_ord_colleg:=flussoElabMifElabRec.flussoElabMifDef;
                end if;
     	    else
     			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
	    end if;

        -- <esercizio_mandato_da_sostituire>
        flussoElabMifElabRec:=null;
		flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
    	if flussoElabMifElabRec.flussoElabMifId is null then
  	 		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	    end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
     		if flussoElabMifElabRec.flussoElabMifElab=true then
               	mifFlussoOrdinativoRec.mif_ord_anno_ord_colleg:=ordSostRec.ordAnnoSostituto;
     	    else
     			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
	    end if;

     end if;


     -- <dati_a_disposizione_ente_beneficiario> facoltativo non valorizzato
     -- </informazioni_beneficiario>

     -- <dati_a_disposizione_ente_mandato>
	 -- <codice_distinta>
     flussoElabMifElabRec:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifValore:=null;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
     if flussoElabMifElabRec.flussoElabMifId is null then
  	 		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	 end if;

     if flussoElabMifElabRec.flussoElabMifAttivo=true then
      if flussoElabMifElabRec.flussoElabMifElab=true then
      		if mifOrdinativoIdRec.mif_ord_dist_id is not null then
				strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura distinta [siac_d_distinta].';
            	select  d.dist_code into flussoElabMifValore
                from siac_d_distinta d
                where d.dist_id=mifOrdinativoIdRec.mif_ord_dist_id;
            end if;

            if flussoElabMifValore is not null then
              	mifFlussoOrdinativoRec.mif_ord_codice_distinta:=flussoElabMifValore;
            end if;
      else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	  end if;
	 end if;

     -- <atto_contabile>
     flussoElabMifElabRec:=null;
     flussoElabMifValore:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
     if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;
     if flussoElabMifElabRec.flussoElabMifAttivo=true then
	     if flussoElabMifElabRec.flussoElabMifElab=true then
         	if flussoElabMifElabRec.flussoElabMifParam is not null then
                if attoAmmTipoAllRag is null then
            		attoAmmTipoAllRag:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                end if;
                if attoAmmStrTipoRag is null then
                	attoAmmStrTipoRag:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
         		end if;

                if attoAmmTipoAllRag is not null and  attoAmmStrTipoRag is not null then

                 flussoElabMifValore:=fnc_mif_estremi_attoamm_all(mifOrdinativoIdRec.mif_ord_atto_amm_id,
                 										          attoAmmTipoAllRag,attoAmmStrTipoRag,
                                                                  dataElaborazione, dataFineVal);

                end if;
          	end if;

            if flussoElabMifValore is not null then
                 	mifFlussoOrdinativoRec.mif_ord_codice_atto_contabile:=flussoElabMifValore;
            end if;

         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

      -- 15.01.2018 Sofia SIAC-5765
      -- <codice_operatore>
	  flussoElabMifElabRec:=null;
	  flussoElabMifValore:=null;
	  flussoElabMifValoreDesc:=null;
	  mifCountRec:=mifCountRec+1;
	  flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

	  if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	  end if;
	  if flussoElabMifElabRec.flussoElabMifAttivo=true then
   		if flussoElabMifElabRec.flussoElabMifElab=true then


         if mifOrdinativoIdRec.mif_ord_login_creazione is not null then
			flussoElabMifValore:=mifOrdinativoIdRec.mif_ord_login_creazione;
         end if;

         if flussoElabMifValore is not null then
        	select substring(s.soggetto_desc  from 1 for 12)  into flussoElabMifValoreDesc
			from siac_t_account a, siac_r_soggetto_ruolo r, siac_t_soggetto s
			where a.ente_proprietario_id=enteProprietarioId
            and   a.account_code=flussoElabMifValore
			and   r.soggeto_ruolo_id=a.soggeto_ruolo_id
			and   s.soggetto_id=r.soggetto_id
            and   r.data_cancellazione is null
            and   r.validita_fine is null
            and   a.data_cancellazione is null
            and   a.validita_fine is null;

            if 	flussoElabMifValoreDesc is not null then
            	flussoElabMifValore:=flussoElabMifValoreDesc;
            end if;
         end if;

         if flussoElabMifValore is not null then
            mifFlussoOrdinativoRec.mif_ord_code_operatore:=substring(flussoElabMifValore from 1 for 12);
         end if;
       else
		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  	   end if;
     end if;

     -- </dati_a_disposizione_ente_mandato>

     -- </mandato>
/**/
        /*raise notice 'codice_funzione= %',mifFlussoOrdinativoRec.mif_ord_codice_funzione;
		raise notice 'numero_mandato= %',mifFlussoOrdinativoRec.mif_ord_numero;
        raise notice 'data_mandato= %',mifFlussoOrdinativoRec.mif_ord_data;
        raise notice 'importo_mandato= %',mifFlussoOrdinativoRec.mif_ord_importo;*/

		 strMessaggio:='Inserimento mif_t_ordinativo_spesa per ord. numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        INSERT INTO mif_t_ordinativo_spesa
        (
  		-- mif_ord_data_elab, def now
  		 mif_ord_flusso_elab_mif_id,
 		 mif_ord_bil_id,
 		 mif_ord_ord_id,
  		 mif_ord_anno,
  		 mif_ord_numero,
  		 mif_ord_codice_funzione,
  		 mif_ord_data,
  		 mif_ord_importo,
  		 mif_ord_flag_fin_loc,
  		 mif_ord_documento,
  		 mif_ord_bci_tipo_ente_pag,
  		 mif_ord_bci_dest_ente_pag,
  		 mif_ord_bci_conto_tes,
 		 mif_ord_estremi_attoamm,
         mif_ord_resp_attoamm,
         mif_ord_uff_resp_attomm,
  		 mif_ord_codice_abi_bt,
  		 mif_ord_codice_ente,
  		 mif_ord_desc_ente,
  		 mif_ord_codice_ente_bt,
  		 mif_ord_anno_esercizio,
         mif_ord_codice_flusso_oil,
  		 mif_ord_id_flusso_oil,
  		 mif_ord_data_creazione_flusso,
  		 mif_ord_anno_flusso,
 		 mif_ord_codice_struttura,
  		 mif_ord_ente_localita,
  		 mif_ord_ente_indirizzo,
 		 mif_ord_codice_raggrup,
  		 mif_ord_progr_benef,
         mif_ord_progr_dest,
  		 mif_ord_bci_conto,
  		 mif_ord_bci_tipo_contabil,
  		 mif_ord_class_codice_cge,
  		 mif_ord_class_importo,
  		 mif_ord_class_codice_cup,
  		 mif_ord_class_codice_gest_prov,
  		 mif_ord_class_codice_gest_fraz,
  		 mif_ord_codifica_bilancio,
         mif_ord_capitolo,
  		 mif_ord_articolo,
  		 mif_ord_desc_codifica,
         mif_ord_desc_codifica_bil,
  		 mif_ord_gestione,
  		 mif_ord_anno_res,
  		 mif_ord_importo_bil,
  		 mif_ord_stanz,
    	 mif_ord_mandati_stanz,
  		 mif_ord_disponibilita,
  		 mif_ord_prev,
  		 mif_ord_mandati_prev,
  		 mif_ord_disp_cassa,
  		 mif_ord_anag_benef,
  		 mif_ord_indir_benef,
  		 mif_ord_cap_benef,
  		 mif_ord_localita_benef,
  		 mif_ord_prov_benef,
         mif_ord_stato_benef,
  		 mif_ord_partiva_benef,
  		 mif_ord_codfisc_benef,
  		 mif_ord_anag_quiet,
  		 mif_ord_indir_quiet,
  		 mif_ord_cap_quiet,
  		 mif_ord_localita_quiet,
  		 mif_ord_prov_quiet,
  		 mif_ord_partiva_quiet,
  		 mif_ord_codfisc_quiet,
	     mif_ord_stato_quiet,
  		 mif_ord_anag_del,
         mif_ord_indir_del,
         mif_ord_cap_del,
         mif_ord_localita_del,
         mif_ord_prov_del,
  		 mif_ord_codfisc_del,
         mif_ord_partiva_del,
         mif_ord_stato_del,
  		 mif_ord_invio_avviso,
  		 mif_ord_abi_benef,
  		 mif_ord_cab_benef,
  		 mif_ord_cc_benef_estero,
 		 mif_ord_cc_benef,
         mif_ord_ctrl_benef,
  		 mif_ord_cin_benef,
  		 mif_ord_cod_paese_benef,
  		 mif_ord_denom_banca_benef,
  		 mif_ord_cc_postale_benef,
  		 mif_ord_swift_benef,
  		 mif_ord_iban_benef,
         mif_ord_sepa_iban_tr,
         mif_ord_sepa_bic_tr,
         mif_ord_sepa_id_end_tr,
  		 mif_ord_bollo_esenzione,
  		 mif_ord_bollo_carico,
  		 mif_ordin_bollo_caus_esenzione,
  		 mif_ord_commissioni_carico,
         mif_ord_commissioni_esenzione,
  		 mif_ord_commissioni_importo,
         mif_ord_commissioni_natura,
  		 mif_ord_pagam_tipo,
  		 mif_ord_pagam_code,
  		 mif_ord_pagam_importo,
  		 mif_ord_pagam_causale,
  		 mif_ord_pagam_data_esec,
  		 mif_ord_lingua,
  		 mif_ord_rif_doc_esterno,
  		 mif_ord_info_tesoriere,
  		 mif_ord_flag_copertura,
  		 mif_ord_num_ord_colleg,
  		 mif_ord_progr_ord_colleg,
  		 mif_ord_anno_ord_colleg,
  		 mif_ord_code_operatore, -- 15.01.2018 Sofia SIAC-5765
  		 mif_ord_descri_estesa_cap,
  		 mif_ord_siope_codice_cge,
  		 mif_ord_siope_descri_cge,
         mif_ord_codice_ente_ipa,
         mif_ord_codice_ente_istat,
         mif_ord_codice_ente_tramite,
         mif_ord_codice_ente_tramite_bt,
	     mif_ord_riferimento_ente,
         mif_ord_importo_benef,
         mif_ord_pagam_postalizza,
         mif_ord_class_tipo_debito,
         mif_ord_class_tipo_debito_nc,
         mif_ord_class_cig,
         mif_ord_class_motivo_nocig,
         mif_ord_class_missione,
         mif_ord_class_programma,
         mif_ord_class_economico,
         mif_ord_class_importo_economico,
         mif_ord_class_transaz_ue,
         mif_ord_class_ricorrente_spesa,
         mif_ord_class_cofog_codice,
         mif_ord_class_cofog_importo,
         mif_ord_codice_distinta,
         mif_ord_codice_atto_contabile,
  		 validita_inizio,
         ente_proprietario_id,
  		 login_operazione
		)
		VALUES
        (
	  	 --:mif_ord_data_elab,
  		 flussoElabMifLogId, --idElaborazione univoco
  		 mifOrdinativoIdRec.mif_ord_bil_id,
  		 mifOrdinativoIdRec.mif_ord_ord_id,
  		 mifOrdinativoIdRec.mif_ord_ord_anno,
  		 mifFlussoOrdinativoRec.mif_ord_numero,
  		 mifFlussoOrdinativoRec.mif_ord_codice_funzione,
  		 mifFlussoOrdinativoRec.mif_ord_data,
--  	     (case when mifFlussoOrdinativoRec.mif_ord_codice_funzione in (FUNZIONE_CODE_N,FUNZIONE_CODE_A) then
--                    '0.00' else mifFlussoOrdinativoRec.mif_ord_importo end),
         mifFlussoOrdinativoRec.mif_ord_importo,
 		 mifFlussoOrdinativoRec.mif_ord_flag_fin_loc,
  	     mifFlussoOrdinativoRec.mif_ord_documento,
 		 mifFlussoOrdinativoRec.mif_ord_bci_tipo_ente_pag,
 	 	 mifFlussoOrdinativoRec.mif_ord_bci_dest_ente_pag,
 		 mifFlussoOrdinativoRec.mif_ord_bci_conto_tes,
 		 mifFlussoOrdinativoRec.mif_ord_estremi_attoamm,
         mifFlussoOrdinativoRec.mif_ord_resp_attoamm,
  		 mifFlussoOrdinativoRec.mif_ord_uff_resp_attomm,
 		 mifFlussoOrdinativoRec.mif_ord_codice_abi_bt,
 		 mifFlussoOrdinativoRec.mif_ord_codice_ente,
		 mifFlussoOrdinativoRec.mif_ord_desc_ente,
  		 mifFlussoOrdinativoRec.mif_ord_codice_ente_bt,
 		 mifFlussoOrdinativoRec.mif_ord_anno_esercizio,
  		annoBilancio||flussoElabMifDistOilRetId::varchar,
  		flussoElabMifOilId, --idflussoOil
        extract(year from now())||'-'||
        lpad(extract('month' from now())::varchar,2,'0')||'-'||
        lpad(extract('day' from now())::varchar,2,'0')||'T'||
        lpad(extract('hour' from now())::varchar,2,'0')||':'||
        lpad(extract('minute' from now())::varchar,2,'0')||':'||'00',  -- mif_ord_data_creazione_flusso
        extract(year from now())::integer,
 		mifFlussoOrdinativoRec.mif_ord_codice_struttura,
 		mifFlussoOrdinativoRec.mif_ord_ente_localita,
		mifFlussoOrdinativoRec.mif_ord_ente_indirizzo,
 		mifFlussoOrdinativoRec.mif_ord_codice_raggrup,
 		mifFlussoOrdinativoRec.mif_ord_progr_benef,
 		mifFlussoOrdinativoRec.mif_ord_progr_dest,
 		mifFlussoOrdinativoRec.mif_ord_bci_conto,
  		mifFlussoOrdinativoRec.mif_ord_bci_tipo_contabil,
 		mifFlussoOrdinativoRec.mif_ord_class_codice_cge,
        mifFlussoOrdinativoRec.mif_ord_class_importo,
 		mifFlussoOrdinativoRec.mif_ord_class_codice_cup,
 		mifFlussoOrdinativoRec.mif_ord_class_codice_gest_prov,
 		mifFlussoOrdinativoRec.mif_ord_class_codice_gest_fraz,
 		mifFlussoOrdinativoRec.mif_ord_codifica_bilancio,
        mifFlussoOrdinativoRec.mif_ord_capitolo,
  		mifFlussoOrdinativoRec.mif_ord_articolo,
 		mifFlussoOrdinativoRec.mif_ord_desc_codifica,
        mifFlussoOrdinativoRec.mif_ord_desc_codifica_bil,
		mifFlussoOrdinativoRec.mif_ord_gestione,
 		mifFlussoOrdinativoRec.mif_ord_anno_res,
 		mifFlussoOrdinativoRec.mif_ord_importo_bil,
        mifFlussoOrdinativoRec.mif_ord_stanz,
    	mifFlussoOrdinativoRec.mif_ord_mandati_stanz,
  		mifFlussoOrdinativoRec.mif_ord_disponibilita,
		mifFlussoOrdinativoRec.mif_ord_prev,
  		mifFlussoOrdinativoRec.mif_ord_mandati_prev,
  		mifFlussoOrdinativoRec.mif_ord_disp_cassa,
        mifFlussoOrdinativoRec.mif_ord_anag_benef,
  		mifFlussoOrdinativoRec.mif_ord_indir_benef,
		mifFlussoOrdinativoRec.mif_ord_cap_benef,
 		mifFlussoOrdinativoRec.mif_ord_localita_benef,
  		mifFlussoOrdinativoRec.mif_ord_prov_benef,
        mifFlussoOrdinativoRec.mif_ord_stato_benef,
 		mifFlussoOrdinativoRec.mif_ord_partiva_benef,
  		mifFlussoOrdinativoRec.mif_ord_codfisc_benef,
  		mifFlussoOrdinativoRec.mif_ord_anag_quiet,
        mifFlussoOrdinativoRec.mif_ord_indir_quiet,
  		mifFlussoOrdinativoRec.mif_ord_cap_quiet,
 		mifFlussoOrdinativoRec.mif_ord_localita_quiet,
  		mifFlussoOrdinativoRec.mif_ord_prov_quiet,
 		mifFlussoOrdinativoRec.mif_ord_partiva_quiet,
 		mifFlussoOrdinativoRec.mif_ord_codfisc_quiet,
        mifFlussoOrdinativoRec.mif_ord_stato_quiet,
 		mifFlussoOrdinativoRec.mif_ord_anag_del,
        mifFlussoOrdinativoRec.mif_ord_indir_del,
        mifFlussoOrdinativoRec.mif_ord_cap_del,
 		mifFlussoOrdinativoRec.mif_ord_localita_del,
 		mifFlussoOrdinativoRec.mif_ord_prov_del,
 		mifFlussoOrdinativoRec.mif_ord_codfisc_del,
 		mifFlussoOrdinativoRec.mif_ord_partiva_del,
        mifFlussoOrdinativoRec.mif_ord_stato_del,
 		mifFlussoOrdinativoRec.mif_ord_invio_avviso,
 		mifFlussoOrdinativoRec.mif_ord_abi_benef,
 		mifFlussoOrdinativoRec.mif_ord_cab_benef,
 		mifFlussoOrdinativoRec.mif_ord_cc_benef_estero,
 		mifFlussoOrdinativoRec.mif_ord_cc_benef,
 		mifFlussoOrdinativoRec.mif_ord_ctrl_benef,
 		mifFlussoOrdinativoRec.mif_ord_cin_benef,
 		mifFlussoOrdinativoRec.mif_ord_cod_paese_benef,
  		mifFlussoOrdinativoRec.mif_ord_denom_banca_benef,
 		mifFlussoOrdinativoRec.mif_ord_cc_postale_benef,
  		mifFlussoOrdinativoRec.mif_ord_swift_benef,
  		mifFlussoOrdinativoRec.mif_ord_iban_benef,
        mifFlussoOrdinativoRec.mif_ord_sepa_iban_tr,
        mifFlussoOrdinativoRec.mif_ord_sepa_bic_tr,
        mifFlussoOrdinativoRec.mif_ord_sepa_id_end_tr,
 		mifFlussoOrdinativoRec.mif_ord_bollo_esenzione,
  		mifFlussoOrdinativoRec.mif_ord_bollo_carico,
  		mifFlussoOrdinativoRec.mif_ordin_bollo_caus_esenzione,
 		mifFlussoOrdinativoRec.mif_ord_commissioni_carico,
        mifFlussoOrdinativoRec.mif_ord_commissioni_esenzione,
		mifFlussoOrdinativoRec.mif_ord_commissioni_importo,
        mifFlussoOrdinativoRec.mif_ord_commissioni_natura,
  		mifFlussoOrdinativoRec.mif_ord_pagam_tipo,
 		mifFlussoOrdinativoRec.mif_ord_pagam_code,
	    mifFlussoOrdinativoRec.mif_ord_pagam_importo,
 		mifFlussoOrdinativoRec.mif_ord_pagam_causale,
 		mifFlussoOrdinativoRec.mif_ord_pagam_data_esec,
 		mifFlussoOrdinativoRec.mif_ord_lingua,
		mifFlussoOrdinativoRec.mif_ord_rif_doc_esterno,
 		mifFlussoOrdinativoRec.mif_ord_info_tesoriere,
 		mifFlussoOrdinativoRec.mif_ord_flag_copertura,
		mifFlussoOrdinativoRec.mif_ord_num_ord_colleg,
		mifFlussoOrdinativoRec.mif_ord_progr_ord_colleg,
		mifFlussoOrdinativoRec.mif_ord_anno_ord_colleg,
        mifFlussoOrdinativoRec.mif_ord_code_operatore, -- 15.01.2018 Sofia SIAC-5765
        mifFlussoOrdinativoRec.mif_ord_descri_estesa_cap,
        mifFlussoOrdinativoRec.mif_ord_siope_codice_cge,
        mifFlussoOrdinativoRec.mif_ord_siope_descri_cge,
        mifFlussoOrdinativoRec.mif_ord_codice_ente_ipa,
        mifFlussoOrdinativoRec.mif_ord_codice_ente_istat,
        mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite,
        mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite_bt,
	    mifFlussoOrdinativoRec.mif_ord_riferimento_ente,
        mifFlussoOrdinativoRec.mif_ord_importo_benef,
        mifFlussoOrdinativoRec.mif_ord_pagam_postalizza,
        mifFlussoOrdinativoRec.mif_ord_class_tipo_debito,
        mifFlussoOrdinativoRec.mif_ord_class_tipo_debito_nc,
        mifFlussoOrdinativoRec.mif_ord_class_cig,
        mifFlussoOrdinativoRec.mif_ord_class_motivo_nocig,
        mifFlussoOrdinativoRec.mif_ord_class_missione,
        mifFlussoOrdinativoRec.mif_ord_class_programma,
        mifFlussoOrdinativoRec.mif_ord_class_economico,
        mifFlussoOrdinativoRec.mif_ord_class_importo_economico,
        mifFlussoOrdinativoRec.mif_ord_class_transaz_ue,
        mifFlussoOrdinativoRec.mif_ord_class_ricorrente_spesa,
        mifFlussoOrdinativoRec.mif_ord_class_cofog_codice,
        mifFlussoOrdinativoRec.mif_ord_class_cofog_importo,
	    mifFlussoOrdinativoRec.mif_ord_codice_distinta,
        mifFlussoOrdinativoRec.mif_ord_codice_atto_contabile,
        now(),
        enteProprietarioId,
        loginOperazione
   )
   returning mif_ord_id into mifOrdSpesaId;




 -- dati fatture da valorizzare se ordinativo commerciale
 -- @@@@ sicuramente da completare
 -- <fattura_siope>
 if isGestioneFatture = true and isOrdCommerciale=true then
  flussoElabMifElabRec:=null;
  mifCountRec:=FLUSSO_MIF_ELAB_FATTURE;
  titoloCap:=null;
  flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Gestione fatture.Lettura natura spesa.';

  /*if mifOrdinativoIdRec.mif_ord_titolo_code=titoloCorrente then
	  	titoloCap:=descriTitoloCorrente;
  else
   if mifOrdinativoIdRec.mif_ord_titolo_code=titoloCapitale then
     	titoloCap:=descriTitoloCapitale;
   end if;
  end if;*/
  -- 20.02.2018 Sofia JIRA siac-5849
  select oil.oil_natura_spesa_desc into titoloCap
  from siac_d_oil_natura_spesa oil, siac_r_oil_natura_spesa_titolo r
  where r.oil_natura_spesa_titolo_id=mifOrdinativoIdRec.mif_ord_titolo_id
  and   oil.oil_natura_spesa_id=r.oil_natura_spesa_id
  and   r.data_cancellazione is null
  and   r.validita_fine is null;
  if titoloCap is null then titoloCap:=defNaturaPag; end if;
   -- 26.02.2018 Sofia JIRA siac-5849 - inclusione delle note credito  per ordinativi di pagamento
  titoloCap:=titoloCap||'|N'; -- 08.05.2018 Sofia siac-6137
  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Gestione fatture.Inizio ciclo.';
  ordRec:=null;
  for ordRec in
  (select * from fnc_mif_ordinativo_documenti_splus( mifOrdinativoIdRec.mif_ord_ord_id,
											         numeroDocs::integer,
                                                     tipoDocs,
                                                     docAnalogico,
                                                     attrCodeDataScad,
                                                     titoloCap,
                                                     enteOilRec.ente_oil_codice_pcc_uff,
		   		                        	         enteProprietarioId,
	            		                             dataElaborazione,dataFineVal)
  )
  loop
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Inserimento fatture '
                       ||' in mif_t_ordinativo_spesa_documenti '
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         insert into  mif_t_ordinativo_spesa_documenti
         ( mif_ord_id,
		   mif_ord_documento,
           mif_ord_doc_codice_ipa_ente,
	       mif_ord_doc_tipo,
           mif_ord_doc_tipo_a,
		   mif_ord_doc_id_lotto_sdi,
		   mif_ord_doc_tipo_analog,
		   mif_ord_doc_codfisc_emis,
		   mif_ord_doc_anno,
	       mif_ord_doc_numero,
	       mif_ord_doc_importo,
	       mif_ord_doc_data_scadenza,
	       mif_ord_doc_motivo_scadenza,
	       mif_ord_doc_natura_spesa,
		   validita_inizio,
		   ente_proprietario_id,
		   login_operazione
         )
         values
         (mifOrdSpesaId,
          --ordRec.numero_fattura_siope,
          'S', -- 07.06.2018 Sofia SIAC-6228
		  ordRec.codice_ipa_ente_siope,
		  ordRec.tipo_documento_siope,
          ordRec.tipo_documento_siope_a,
          ordRec.identificativo_lotto_sdi_siope,
          ordRec.tipo_documento_analogico_siope,
          trim ( both ' ' from ordRec.codice_fiscale_emittente_siope),
		  ordRec.anno_emissione_fattura_siope,
		  ordRec.numero_fattura_siope,
          ordRec.importo_siope,
		  ordRec.data_scadenza_pagam_siope,
		  ordRec.motivo_scadenza_siope,
    	  ordRec.natura_spesa_siope,
          now(),
          enteProprietarioId,
          loginOperazione
         );
  end loop;
 end if;




   -- <ritenuta>
   -- <importo_ritenuta>
   -- <numero_reversale>
   -- <progressivo_reversale>

   if  isRitenutaAttivo=true then
    ritenutaRec:=null;
    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Gestione  ritenute'
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
    for ritenutaRec in
    (select *
     from fnc_mif_ordinativo_ritenute(mifOrdinativoIdRec.mif_ord_ord_id,
         	 					      tipoRelazRitOrd,tipoRelazSubOrd,tipoRelazSprOrd,
                                      tipoOnereIrpefId,tipoOnereInpsId,
                                      tipoOnereIrpegId,
									  ordStatoCodeAId,ordDetTsTipoId,
                                      flussoElabMifTipoDec,
    	                              enteProprietarioId,dataElaborazione,dataFineVal)
    )
    loop
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Inserimento ritenuta'
                       ||' in mif_t_ordinativo_spesa_ritenute '
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
   		insert into mif_t_ordinativo_spesa_ritenute
        (mif_ord_id,
  		 mif_ord_rit_tipo,
 		 mif_ord_rit_importo,
 		 mif_ord_rit_numero,
  		 mif_ord_rit_ord_id,
 		 mif_ord_rit_progr_rev,
  		 validita_inizio,
		 ente_proprietario_id,
		 login_operazione)
        values
        (mifOrdSpesaId,
         tipoRitenuta,
         ritenutaRec.importoRitenuta,
         ritenutaRec.numeroRitenuta,
         ritenutaRec.ordRitenutaId,
         progrRitenuta,
         now(),
         enteProprietarioId,
         loginOperazione
        );

    end loop;
   end if;

   -- <sospeso>
   -- <numero_provvisorio>
   -- <importo_provvisorio>
  if  isRicevutaAttivo=true then
    ricevutaRec:=null;
    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Gestione  provvisori'
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
    for ricevutaRec in
    (select *
     from fnc_mif_ordinativo_ricevute(mifOrdinativoIdRec.mif_ord_ord_id,
                                      flussoElabMifTipoDec,
    	                              enteProprietarioId,dataElaborazione,dataFineVal)
    )
    loop
    	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Inserimento   ricevuta'
                       ||' in mif_t_ordinativo_spesa_ricevute '
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
   		insert into mif_t_ordinativo_spesa_ricevute
        (mif_ord_id,
	     mif_ord_ric_anno,
	     mif_ord_ric_numero,
	     mif_ord_provc_id,
		 mif_ord_ric_importo,
	     validita_inizio,
		 ente_proprietario_id,
	     login_operazione
        )
        values
        (mifOrdSpesaId,
         ricevutaRec.annoRicevuta,
         ricevutaRec.numeroRicevuta,
         ricevutaRec.provRicevutaId,
         ricevutaRec.importoRicevuta,
         now(),
         enteProprietarioId,
         loginOperazione
        );
    end loop;
  end if;

  numeroOrdinativiTrasm:=numeroOrdinativiTrasm+1;
 end loop;

/* if comPccAttrId is not null and numeroOrdinativiTrasm>0 then
   	   strMessaggio:='Inserimento Registro PCC.';
	   insert into siac_t_registro_pcc
	   (doc_id,
    	subdoc_id,
	    pccop_tipo_id,
    	ordinativo_data_emissione,
	    ordinativo_numero,
    	rpcc_quietanza_data,
        rpcc_quietanza_importo,
	    soggetto_id,
    	validita_inizio,
	    ente_proprietario_id,
    	login_operazione
	    )
    	(
         with
         mif as
         (select m.mif_ord_ord_id ord_id, m.mif_ord_soggetto_id soggetto_id,
                 ord.ord_emissione_data , ord.ord_numero
          from mif_t_ordinativo_spesa_id m, siac_t_ordinativo ord
          where m.ente_proprietario_id=enteProprietarioId
          and   substring(m.mif_ord_codice_funzione from 1 for 1)=FUNZIONE_CODE_I
          and   ord.ord_id=m.mif_ord_ord_id
         ),
         tipodoc as
         (select tipo.doc_tipo_id
          from siac_d_doc_tipo tipo ,siac_r_doc_tipo_attr attr
          where attr.attr_id=comPccAttrId
          and   attr.boolean='S'
          and   tipo.doc_tipo_id=attr.doc_tipo_id
          and   attr.data_cancellazione is null
          and   attr.validita_fine is null
          and   tipo.data_cancellazione is null
          and   tipo.validita_fine is null
         ),
         doc as
         (select distinct m.mif_ord_ord_id ord_id, subdoc.doc_id , subdoc.subdoc_id, subdoc.subdoc_importo, doc.doc_tipo_id
	      from  mif_t_ordinativo_spesa_id m, siac_t_ordinativo_ts ts, siac_r_subdoc_ordinativo_ts rsubdoc,
                siac_t_subdoc subdoc, siac_t_doc doc
          where m.ente_proprietario_id=enteProprietarioId
          and   substring(m.mif_ord_codice_funzione from 1 for 1)=FUNZIONE_CODE_I
          and   ts.ord_id=m.mif_ord_ord_id
          and   rsubdoc.ord_ts_id=ts.ord_ts_id
          and   subdoc.subdoc_id=rsubdoc.subdoc_id
          and   doc.doc_id=subdoc.doc_id
          and   ts.data_cancellazione is null
          and   ts.validita_fine is null
          and   rsubdoc.data_cancellazione is null
          and   rsubdoc.validita_fine is null
          and   subdoc.data_cancellazione is null
          and   subdoc.validita_fine is null
          and   doc.data_cancellazione is null
          and   doc.validita_fine is null
         )
         select
          doc.doc_id,
          doc.subdoc_id,
          pccOperazTipoId,
--          mif.ord_emissione_data,
--		  mif.ord_emissione_data+(1*interval '1 day'),
		  mif.ord_emissione_data,
          mif.ord_numero,
          dataElaborazione,
          doc.subdoc_importo,
          mif.soggetto_id,
          now(),
          enteProprietarioId,
          loginOperazione
         from mif, doc,tipodoc
         where mif.ord_id=doc.ord_id
         and   tipodoc.doc_tipo_id=doc.doc_tipo_id
        );
   end if;*/


   strMessaggio:='Aggiornamento progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_out_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
   update siac_t_progressivo p set prog_value=flussoElabMifOilId
   where p.ente_proprietario_id=enteProprietarioId
   and   p.prog_key='oil_out_'||annoBilancio
   and   p.ambito_id=ambitoFinId
   and   p.data_cancellazione is null
   and   p.validita_fine is null;

   strMessaggio:='Aggiornamento progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_'||MANDMIF_TIPO||'_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
   update siac_t_progressivo p set prog_value=flussoElabMifDistOilRetId
   where p.ente_proprietario_id=enteProprietarioId
   and   p.prog_key='oil_'||MANDMIF_TIPO||'_'||annoBilancio
   and   p.ambito_id=ambitoFinId
   and   p.data_cancellazione is null
   and   p.validita_fine is null;


   strMessaggio:='Aggiornamento mif_t_flusso_elaborato.';

   update  mif_t_flusso_elaborato
   set (flusso_elab_mif_id_flusso_oil,flusso_elab_mif_codice_flusso_oil,flusso_elab_mif_num_ord_elab,flusso_elab_mif_file_nome,flusso_elab_mif_esito_msg)=
   	   (flussoElabMifOilId,annoBilancio||flussoElabMifDistOilRetId::varchar,numeroOrdinativiTrasm,flussoElabMifTipoNomeFile||'_'||enteOilRec.ente_oil_codice,
        'Elaborazione in corso tipo flusso '||MANDMIF_TIPO||' - Dati inseriti in mif_t_ordinativo_spesa')
   where flusso_elab_mif_id=flussoElabMifLogId;

    -- gestire aggiornamento mif_t_flusso_elaborato

	RAISE NOTICE 'numeroOrdinativiTrasm %', numeroOrdinativiTrasm;
    messaggioRisultato:=strMessaggioFinale||' Trasmessi '||numeroOrdinativiTrasm||' ordinativi di spesa.';
    messaggioRisultato:=upper(messaggioRisultato);
    flussoElabMifId:=flussoElabMifLogId;
    nomeFileMif:=flussoElabMifTipoNomeFile||'_'||enteOilRec.ente_oil_codice;


    flussoElabMifDistOilId:=(annoBilancio||flussoElabMifDistOilRetId::varchar)::integer;
    return;

exception
    when RAISE_EXCEPTION THEN
    	raise notice '% % ERRORE :  % %',strMessaggioFinale,coalesce(strMessaggio,''),
	        	substring(upper(SQLERRM) from 1 for 100),mifCountRec;
        if codResult=-12 then
          messaggioRisultato:=
        	coalesce(strMessaggioFinale,'')||coalesce(strMessaggio,'')||' '||coalesce(substring(upper(SQLERRM) from 1 for 500),'')||' '||mifCountRec||'.' ;
          codiceRisultato:=0;
        else
          messaggioRisultato:=
        	coalesce(strMessaggioFinale,'')||coalesce(strMessaggio,'')||'ERRORE:  '||' '||coalesce(substring(upper(SQLERRM) from 1 for 500),'')||' '||mifCountRec||'.' ;
       	  codiceRisultato:=-1;
    	end if;

        numeroOrdinativiTrasm:=0;
		messaggioRisultato:=upper(messaggioRisultato);

        if flussoElabMifLogId is not null then
            flussoElabMifId:=flussoElabMifLogId;
        	update  mif_t_flusso_elaborato
   			set (flusso_elab_mif_esito,flusso_elab_mif_esito_msg)=
                ('KO',messaggioRisultato)
		    where flusso_elab_mif_id=flussoElabMifLogId;
        else
        	flussoElabMifId:=null;
        end if;

        return;
     when NO_DATA_FOUND THEN
        raise notice '% % ERRORE : % %',strMessaggioFinale,coalesce(strMessaggio,''),
	        	substring(upper(SQLERRM) from 1 for 500),mifCountRec;
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||' Nessun dato presente in archivio '||' '||mifCountRec||'.';
        numeroOrdinativiTrasm:=0;
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);

        if flussoElabMifLogId is not null then
            flussoElabMifId:=flussoElabMifLogId;
        	update  mif_t_flusso_elaborato
   			set (flusso_elab_mif_esito,flusso_elab_mif_esito_msg)=
                ('KO',messaggioRisultato)
		    where flusso_elab_mif_id=flussoElabMifLogId;
        else
        	flussoElabMifId:=null;
        end if;

        return;
     when TOO_MANY_ROWS THEN
        raise notice '% % ERRORE : % %',strMessaggioFinale,coalesce(strMessaggio,''),
	        	substring(upper(SQLERRM) from 1 for 500),mifCountRec;
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||' Diverse righe presenti in archivio '||' '||mifCountRec||'.';
        numeroOrdinativiTrasm:=0;
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);

        if flussoElabMifLogId is not null then


            flussoElabMifId:=flussoElabMifLogId;
        	update  mif_t_flusso_elaborato
   			set (flusso_elab_mif_esito,flusso_elab_mif_esito_msg)=
                ('KO',messaggioRisultato)
		    where flusso_elab_mif_id=flussoElabMifLogId;
        else
        	flussoElabMifId:=null;
        end if;
        return;
	when others  THEN
		raise notice '% % Errore DB % % %',strMessaggioFinale,coalesce(strMessaggio,''),SQLSTATE,
	        	substring(upper(SQLERRM) from 1 for 100),mifCountRec;
        messaggioRisultato:=strMessaggioFinale||coalesce(strMessaggio,'')||'ERRORE DB:'||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 500)||' '||mifCountRec||'.' ;
        numeroOrdinativiTrasm:=0;
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);

        if flussoElabMifLogId is not null then
            flussoElabMifId:=flussoElabMifLogId;
        	update  mif_t_flusso_elaborato
   			set (flusso_elab_mif_esito,flusso_elab_mif_esito_msg)=
                ('KO',messaggioRisultato)
		    where flusso_elab_mif_id=flussoElabMifLogId;

        else
        	flussoElabMifId:=null;
        end if;

        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;


CREATE OR REPLACE FUNCTION fnc_mif_ordinativo_entrata_splus
( enteProprietarioId integer,
  nomeEnte VARCHAR,
  annobilancio varchar,
  loginOperazione varchar,
  dataElaborazione timestamp,
  mifOrdRitrasmElabId integer,
  out flussoElabMifDistOilId integer,
  out flussoElabMifId integer,
  out numeroOrdinativiTrasm integer,
  out nomeFileMif varchar,
  out codiceRisultato integer,
  out messaggioRisultato varchar )
RETURNS record AS
$body$
DECLARE


 strMessaggio VARCHAR(1500):='';
 strMessaggioFinale VARCHAR(1500):='';
 strMessaggioScarto VARCHAR(1500):='';
 strExecSql VARCHAR(1500):='';

 mifOrdinativoIdRec record;

 mifFlussoOrdinativoRec  mif_t_ordinativo_entrata%rowtype;
-- ordinativoRec record;


 enteOilRec record;
 enteProprietarioRec record;
 soggettoRec record;
 isIndirizzoBenef boolean:=false;
 ordRec record;

 bilElemRec record;
 indirizzoRec record;
 ordSostRec record;
 ricevutaRec record;
 quoteOrdinativoRec record;

 flussoElabMifValore varchar (1000):=null;
 flussoElabMifValoreDesc varchar (1000):=null;




 classCdrTipoId INTEGER:=null;
 classCdcTipoId INTEGER:=null;

 codiceCge  varchar(50):=null;
 siopeDef   varchar(50):=null;
 descCge    varchar(500):=null;
 codResult   integer:=null;

 indirizzoEnte varchar(500):=null;
 localitaEnte varchar(500):=null;
 soggettoEnteId INTEGER:=null;
 soggettoRifId integer:=null;
 siopeClassTipoId integer:=null;

 ordTipoCodeId integer :=null;
 ordStatoCodeIId  integer :=null;
 ordStatoCodeAId  integer :=null;
 ordRelazCodeTipoId integer :=null;
 ordDetTsTipoId integer :=null;



 ambitoFinId integer:=null;

 isDefAnnoRedisuo  varchar(5):=null;
 isRicevutaAttivo boolean:=false;
 isGestioneFatture boolean:=false;

 codiceUECodeTipo VARCHAR(50):=null;
 codiceUECodeTipoId integer:=null;


 ordAllegatoCartAttrId integer:=null;
 ordinativoTsDetTipoId integer:=null;
 movgestTsTipoSubId integer:=null;
 ordinativoSpesaTipoId integer:=null;


 flussoElabMifLogId  integer :=null;
 flussoElabMifTipoId integer :=null;
 flussoElabMifTipoNomeFile varchar(500):=null;
 flussoElabMifTipoDec BOOLEAN:=false;

 flussoElabMifOilId integer :=null;
 flussoElabMifDistOilRetId integer:=null;
 mifOrdSpesaId integer:=null;

 NVL_STR               CONSTANT VARCHAR:='';
 dataInizioVal timestamp :=annoBilancio||'-01-01';
 dataFineVal timestamp :=annoBilancio||'-12-31';


 ordImporto numeric :=0;

 dataAvvioSiopeNew VARCHAR(50):=null;
 bAvvioSiopeNew   boolean:=false;


 -- siope plus
 tipoIncassoCode    varchar(100):=null;
 tipoIncassoCodeId  integer:=null;
 tipoRitOrdInc      varchar(100):=null;
 tipoSplitOrdInc    varchar(100):=null;
 tipoSubOrdInc      varchar(100):=null;
 tipoRitenuteInc    varchar(100):=null;
 tipoIncassoCompensazione varchar(100):=null;
 tipoIncassoRegolarizza varchar(100):=null;
 tipoIncassoCassa varchar(100):=null;
 tipoContoCCPCode varchar(100):=null;
 tipoContoCCPCodeId integer:=null;
 siopeCodeTipo varchar(50):=null;
 siopeCodeTipoId integer :=null;
 codiceFinVTbr varchar(50):=null;
 codiceFinVTipoTbrId integer:=null;

 tipoClassFruttifero varchar(100):=null;
 valFruttifero varchar(100):=null;
 valFruttiferoStr varchar(100):=null;
 valFruttiferoStrAltro varchar(100):=null;
 tipoClassFruttiferoId integer:=null;
 valFruttiferoId  integer:=null;
 eventoTipoCodeId integer:=null;
 collEventoCodeId integer:=null;
 ricorrenteCodeTipoId integer:=null;
 ricorrenteCodeTipo varchar(100):=null;

 classVincolatoCode   varchar(100):=null;
 classVincolatoCodeId INTEGER:=null;

 ordCodiceBollo  varchar(10):=null;
 ordCodiceBolloDesc varchar(500):=null;
 codiceBolloPlusDesc   varchar(100):=null;

 codiceBolloPlusEsente boolean:=false;
 isOrdCommerciale boolean:=false;

 attoAmmTipoAllRag varchar(50):=null;
 attoAmmStrTipoRag varchar(50):=null;
 -- siope plus


 ORD_TIPO_CODE_P  CONSTANT  varchar :='P';
 ORD_TIPO_CODE_I  CONSTANT  varchar :='I';
 ORD_STATO_CODE_I CONSTANT  varchar :='I';
 ORD_STATO_CODE_A CONSTANT  varchar :='A';
 ORD_TIPO_IMPORTO_A CONSTANT  varchar :='A';


 AMBITO_FIN CONSTANT  varchar :='AMBITO_FIN';
 ALLEG_CART_ATTR CONSTANT VARCHAR:='flagAllegatoCartaceo';

 CDC CONSTANT varchar:='CDC';
 CDR CONSTANT varchar:='CDR';

 FUNZIONE_CODE_I CONSTANT  varchar :='INSERIMENTO';
 FUNZIONE_CODE_S CONSTANT  varchar :='SOSTITUZIONE';
 FUNZIONE_CODE_N CONSTANT  varchar :='ANNULLO';

 -- annullamenti e variazioni dopo trasmissione
 FUNZIONE_CODE_A CONSTANT  varchar :='ANNULLO';
 FUNZIONE_CODE_VB CONSTANT  varchar :='VARIAZIONE';

 ORD_RELAZ_CODE_SOS  CONSTANT  varchar :='SOS_ORD';
 ORD_TS_DET_TIPO_A CONSTANT varchar:='A';
 MOVGEST_TS_TIPO_S  CONSTANT varchar:='S';


 REGMOVFIN_STATO_A              CONSTANT varchar:='A';
 SEGNO_ECONOMICO				CONSTANT varchar:='Avere';

 SPACE_ASCII CONSTANT integer:=32;
 VT_ASCII CONSTANT integer:=13;
 BS_ASCII CONSTANT integer:=10;

 NUM_SETTE CONSTANT integer:=7;
 ZERO_PAD CONSTANT  varchar :='0';

 ELAB_MIF_ESITO_IN CONSTANT  varchar :='IN';
 MANDMIF_TIPO  CONSTANT  varchar :='REVMIF_SPLUS';


 SEPARATORE     CONSTANT  varchar :='|';

 mifFlussoElabMifArr flussoElabMifRecType[];

 mifCountTmpRec integer :=null;
 mifCountRec integer:=1;
 mifAFlussoElabTypeRec  flussoElabMifRecType;
 flussoElabMifElabRec  flussoElabMifRecType;
 mifElabRec record;

 tipologiaTipoId integer:=null;
 categoriaTipoId integer:=null;
 famTitEntTipoCategId integer:=null;
 ordinativoSplitId integer:=null;

 -- 20.03.2018 Sofia SIAC-5968
 ordinativoReintroitoId  integer:=null;
 tipoRelREIORD varchar(20):=null;
 tipoRelSPR  varchar(20):=null;
 tipoDocsComm  varchar(50):=null;
 tipoPdcIVA    varchar(50):=null;
 codePdcIVA    varchar(50):=null;

 numeroDocs  varchar(10):=null;
 tipoDocs    varchar(50):=null;
 tipoGruppoDocs   varchar(50):=null;
 docAnalogico varchar(50):=null;
 attrCodeDataScad varchar(50):=null;

 titoloCorrente varchar(10):=null;
 descriTitoloCorrente varchar(50):=null;
 titoloCapitale varchar(10):=null;
 descriTitoloCapitale varchar(50):=null;
 titoloCap varchar(10):=null;
 macroAggrTipoCode varchar(20):=null;
 macroAggrTipoCodeId integer:=null;


 -- 23.02.2018 Sofia jira siac-5849
 defNaturaPag  varchar(100):=null;
 famMacroTitCode varchar(100):=null;
 famMacroTitCodeId integer:=null;

 FAM_TIT_ENT_TIPCATEG CONSTANT varchar:='Entrata - TitoliTipologieCategorie';
 CATEGORIA CONSTANT varchar:='CATEGORIA';
 TIPOLOGIA CONSTANT varchar:='TIPOLOGIA';



 FLUSSO_MIF_ELAB_TEST_COD_ABI_BT      CONSTANT integer:=1;  -- codice_ABI_BT
 FLUSSO_MIF_ELAB_TEST_COD_ENTE_IPA    CONSTANT integer:=4;  -- codice_ente
 FLUSSO_MIF_ELAB_TEST_DESC_ENTE       CONSTANT integer:=5;  -- descrizione_ente
 FLUSSO_MIF_ELAB_TEST_COD_ISTAT_ENTE  CONSTANT integer:=6;  -- codice_istat_ente
 FLUSSO_MIF_ELAB_TEST_CODFISC_ENTE    CONSTANT integer:=7;  -- codice_fiscale_ente
 FLUSSO_MIF_ELAB_TEST_CODTRAMITE_ENTE CONSTANT integer:=8;  -- codice_tramite_ente
 FLUSSO_MIF_ELAB_TEST_CODTRAMITE_BT   CONSTANT integer:=9;  -- codice_tramite_bt
 FLUSSO_MIF_ELAB_TEST_COD_ENTE_BT     CONSTANT integer:=10; -- codice_ente_bt
 FLUSSO_MIF_ELAB_TEST_RIFERIMENTO_ENTE CONSTANT integer:=11; -- riferimento_ente
 FLUSSO_MIF_ELAB_TEST_ESERCIZIO       CONSTANT integer:=12;  -- esercizio

 FLUSSO_MIF_ELAB_INIZIO_ORD     CONSTANT integer:=13;  -- tipo_operazione
 FLUSSO_MIF_ELAB_FATTURE        CONSTANT integer:=35;  -- codice_ipa_ente_siope
 FLUSSO_MIF_ELAB_FATT_CODFISC   CONSTANT integer:=40;  -- codice_fiscale_emittente_siope
 FLUSSO_MIF_ELAB_FATT_DATASCAD_PAG  CONSTANT integer:=44;  -- data_scadenza_pagam_siope
 FLUSSO_MIF_ELAB_FATT_NATURA_PAG CONSTANT integer:=46;  -- natura_spesa_siope
 FLUSSO_MIF_ELAB_NUM_SOSPESO    CONSTANT integer:=62;  -- numero_provvisorio



BEGIN

	numeroOrdinativiTrasm:=0;
    codiceRisultato:=0;
    messaggioRisultato:='';
	flussoElabMifId:=null;
    nomeFileMif:=null;

    flussoElabMifDistOilId:=null;

	strMessaggioFinale:='Invio ordinativi di entrata a SIOPE PLUS.';


    -- enteOilRec
    strMessaggio:='Lettura dati ente OIL  per flusso MIF tipo '||MANDMIF_TIPO||'.';
    select * into strict enteOilRec
    from siac_t_ente_oil ente
    where ente.ente_proprietario_id=enteProprietarioId
    and   ente.data_cancellazione is null
    and   ente.validita_fine is null;

    if enteOilRec is null then
    	raise exception ' Errore in reperimento dati';
    end if;

    if enteOilRec.ente_oil_siope_plus=false then
    	raise exception ' SIOPE PLUS non attivo per l''ente.';
    end if;

    -- inserimento record in tabella mif_t_flusso_elaborato
    strMessaggio:='Inserimento mif_t_flusso_elaborato tipo_flusso='||MANDMIF_TIPO||'.';

    insert into mif_t_flusso_elaborato
    (flusso_elab_mif_data ,
     flusso_elab_mif_esito,
     flusso_elab_mif_esito_msg,
     flusso_elab_mif_file_nome,
     flusso_elab_mif_tipo_id,
     flusso_elab_mif_id_flusso_oil, -- da calcolare su tab progressivi
     validita_inizio,
     ente_proprietario_id,
     login_operazione)
     (select dataElaborazione,
             ELAB_MIF_ESITO_IN,
             'Elaborazione in corso per tipo flusso '||MANDMIF_TIPO,
      		 tipo.flusso_elab_mif_nome_file,
     		 tipo.flusso_elab_mif_tipo_id,
     		 null,--flussoElabMifOilId, -- da calcolare su tab progressivi
    		 dataElaborazione,
     		 enteProprietarioId,
      		 loginOperazione
      from mif_d_flusso_elaborato_tipo tipo
      where tipo.ente_proprietario_id=enteProprietarioId
      and   tipo.flusso_elab_mif_tipo_code=MANDMIF_TIPO
      and   tipo.data_cancellazione is null
      and   tipo.validita_fine is null
     )
     returning flusso_elab_mif_id into flussoElabMifLogId;-- valore da restituire

      raise notice 'flussoElabMifLogId %',flussoElabMifLogId;

     if flussoElabMifLogId is null then
       RAISE EXCEPTION ' Errore generico in inserimento %.',MANDMIF_TIPO;
     end if;

    strMessaggio:='Verifica esistenza elaborazioni in corso per tipo flusso '||MANDMIF_TIPO||'.';
	codResult:=null;
    select distinct 1 into codResult
    from mif_t_flusso_elaborato elab,  mif_d_flusso_elaborato_tipo tipo
    where  elab.flusso_elab_mif_id!=flussoElabMifLogId
    and    elab.flusso_elab_mif_esito=ELAB_MIF_ESITO_IN
    and    elab.data_cancellazione is null
    and    elab.validita_fine is null
    and    tipo.flusso_elab_mif_tipo_id=elab.flusso_elab_mif_tipo_id
    and    tipo.flusso_elab_mif_tipo_code=MANDMIF_TIPO
    and    tipo.ente_proprietario_id=enteProprietarioId
    and    tipo.data_cancellazione is null
    and    tipo.validita_fine is null;

    if codResult is not null then
    	RAISE EXCEPTION ' Verificare situazioni esistenti.';
    end if;

    -- verifico se la tabella degli id contiene dati in tal caso elaborazioni precedenti sono andate male
    strMessaggio:='Verifica esistenza dati in tabella temporanea id [mif_t_ordinativo_entrata_id].';
    codResult:=null;

    select distinct 1 into codResult
    from mif_t_ordinativo_entrata_id mif
    where mif.ente_proprietario_id=enteProprietarioId;


    if codResult is not null then
      RAISE EXCEPTION ' Dati presenti verificarne il contenuto ed effettuare pulizia prima di rieseguire.';
    end if;



    codResult:=null;
    -- recupero indentificativi tipi codice vari
	begin

        -- ordTipoCodeId
        strMessaggio:='Lettura ordinativo tipo Code Id '||ORD_TIPO_CODE_I||'.';
        select ord_tipo.ord_tipo_id into strict ordTipoCodeId
        from siac_d_ordinativo_tipo ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.ord_tipo_code=ORD_TIPO_CODE_I
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));

		-- ordinativoSpesaTipoId
        strMessaggio:='Lettura ordinativo tipo Code Id '||ORD_TIPO_CODE_P||'.';
        select ord_tipo.ord_tipo_id into strict ordinativoSpesaTipoId
        from siac_d_ordinativo_tipo ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.ord_tipo_code=ORD_TIPO_CODE_P
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));

		-- ordStatoCodeIId
        strMessaggio:='Lettura ordinativo stato Code Id '||ORD_STATO_CODE_I||'.';
        select ord_tipo.ord_stato_id into strict ordStatoCodeIId
        from siac_d_ordinativo_stato ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.ord_stato_code=ORD_STATO_CODE_I
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));

        -- ordStatoCodeAId
        strMessaggio:='Lettura ordinativo stato Code Id '||ORD_STATO_CODE_A||'.';
        select ord_tipo.ord_stato_id into strict ordStatoCodeAId
        from siac_d_ordinativo_stato ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.ord_stato_code=ORD_STATO_CODE_A
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));


        -- classCdrTipoId
        strMessaggio:='Lettura classif Id per tipo sac='||CDR||'.';
        select tipo.classif_tipo_id into strict classCdrTipoId
        from siac_d_class_tipo tipo
        where tipo.ente_proprietario_id=enteProprietarioId
        and   tipo.classif_tipo_code=CDR
        and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));

        -- classCdcTipoId
        strMessaggio:='Lettura classif Id per tipo sac='||CDC||'.';
        select tipo.classif_tipo_id into strict classCdrTipoId
        from siac_d_class_tipo tipo
        where tipo.ente_proprietario_id=enteProprietarioId
        and   tipo.classif_tipo_code=CDC
        and   tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));


		-- ordAllegatoCartAttrId
        strMessaggio:='Lettura attributo ordinativo  Code Id '||ALLEG_CART_ATTR||'.';
        select attr.attr_id into strict ordAllegatoCartAttrId
        from siac_t_attr attr
        where attr.ente_proprietario_id=enteProprietarioId
        and   attr.attr_code=ALLEG_CART_ATTR
        and   attr.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',attr.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(attr.validita_fine,dataElaborazione));

		-- ordDetTsTipoId
        strMessaggio:='Lettura tipo importo ordinativo  Code Id '||ORD_TIPO_IMPORTO_A||'.';
        select ord_tipo.ord_ts_det_tipo_id into strict ordDetTsTipoId
        from siac_d_ordinativo_ts_det_tipo ord_tipo
        where ord_tipo.ente_proprietario_id=enteProprietarioId
        and   ord_tipo.ord_ts_det_tipo_code=ORD_TIPO_IMPORTO_A
        and   ord_tipo.data_cancellazione is null
	    and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
 		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));



		-- ordinativoTsDetTipoId
        strMessaggio:='Lettura ordinativo_ts_det_tipo '||ORD_TS_DET_TIPO_A||'.';
		select ord_tipo.ord_ts_det_tipo_id into strict ordinativoTsDetTipoId
    	from siac_d_ordinativo_ts_det_tipo ord_tipo
		where ord_tipo.ente_proprietario_id=enteProprietarioId
		and   ord_tipo.ord_ts_det_tipo_code=ORD_TS_DET_TIPO_A
		and   ord_tipo.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));

        -- movgestTsTipoSubId
        strMessaggio:='Lettura movgest_ts_tipo  '||MOVGEST_TS_TIPO_S||'.';
		select ord_tipo.movgest_ts_tipo_id into strict movgestTsTipoSubId
    	from siac_d_movgest_ts_tipo ord_tipo
		where ord_tipo.ente_proprietario_id=enteProprietarioId
		and   ord_tipo.movgest_ts_tipo_code=MOVGEST_TS_TIPO_S
		and   ord_tipo.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));

        -- ordRelazCodeTipoId
        strMessaggio:='Lettura relazione   Code Id '||ORD_RELAZ_CODE_SOS||'.';
		select ord_tipo.relaz_tipo_id into strict ordRelazCodeTipoId
    	from siac_d_relaz_tipo ord_tipo
		where ord_tipo.ente_proprietario_id=enteProprietarioId
		and   ord_tipo.relaz_tipo_code=ORD_RELAZ_CODE_SOS
		and   ord_tipo.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',ord_tipo.validita_inizio)
		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(ord_tipo.validita_fine,dataElaborazione));


        -- ambitoFinId
        strMessaggio:='Lettura ambito  Code Id '||AMBITO_FIN||'.';
        select a.ambito_id into strict ambitoFinId
        from siac_d_ambito a
        where a.ente_proprietario_id=enteProprietarioId
   		and   a.ambito_code=AMBITO_FIN
        and   a.data_cancellazione is null
        and   a.validita_fine is null;

		-- tipologiaTipoId
        strMessaggio:='Lettura tipologia_code_tipo_id  '||TIPOLOGIA||'.';
		select tipo.classif_tipo_id into strict tipologiaTipoId
    	from siac_d_class_tipo tipo
		where tipo.ente_proprietario_id=enteProprietarioId
		and   tipo.classif_tipo_code=TIPOLOGIA
		and   tipo.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',validita_inizio)
		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(validita_fine,dataElaborazione));

   	    -- categoriaTipoId
        strMessaggio:='Lettura categoria_code_tipo_id  '||CATEGORIA||'.';
		select tipo.classif_tipo_id into strict categoriaTipoId
    	from siac_d_class_tipo tipo
		where tipo.ente_proprietario_id=enteProprietarioId
		and   tipo.classif_tipo_code=CATEGORIA
		and   tipo.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',validita_inizio)
		and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(validita_fine,dataElaborazione));


		-- famTitEntTipoCategId
		-- FAM_TIT_ENT_TIPCATEG='Entrata - TitoliTipologieCategorie'
        strMessaggio:='Lettura fam_tit_ent_tipcategorie_code_tipo_id  '||FAM_TIT_ENT_TIPCATEG||'.';
		select fam.classif_fam_tree_id into strict famTitEntTipoCategId
        from siac_t_class_fam_tree fam
        where fam.ente_proprietario_id=enteProprietarioId
        and   fam.class_fam_code=FAM_TIT_ENT_TIPCATEG
        and   fam.data_cancellazione is null
		and   date_trunc('day',dataElaborazione)>=date_trunc('day',fam.validita_inizio)
  		and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(fam.validita_fine,dataElaborazione));

        -- flussoElabMifTipoId
        strMessaggio:='Lettura tipo flusso MIF  Code Id '||MANDMIF_TIPO||'.';
        select tipo.flusso_elab_mif_tipo_id, tipo.flusso_elab_mif_nome_file, tipo.flusso_elab_mif_tipo_dec
               into strict flussoElabMifTipoId,flussoElabMifTipoNomeFile,flussoElabMifTipoDec
        from mif_d_flusso_elaborato_tipo tipo
        where tipo.ente_proprietario_id=enteProprietarioId
   		and   tipo.flusso_elab_mif_tipo_code=MANDMIF_TIPO
        and   tipo.data_cancellazione is null
        and   tipo.validita_fine is null;

        -- raise notice 'flussoElabMifTipoId %',flussoElabMifTipoId;


        strMessaggio:='Lettura flusso struttura SIOPE PLUS  per tipo '||MANDMIF_TIPO||'.';
        for mifElabRec IN
        (select m.*
         from mif_d_flusso_elaborato m
         where m.flusso_elab_mif_tipo_id=flussoElabMifTipoId
         and   m.flusso_elab_mif_elab=true
         order by m.flusso_elab_mif_ordine_elab
        )
        loop
        	mifAFlussoElabTypeRec.flussoElabMifId :=mifElabRec.flusso_elab_mif_id;
            mifAFlussoElabTypeRec.flussoElabMifAttivo :=mifElabRec.flusso_elab_mif_attivo;
            mifAFlussoElabTypeRec.flussoElabMifDef :=mifElabRec.flusso_elab_mif_default;
            mifAFlussoElabTypeRec.flussoElabMifElab :=mifElabRec.flusso_elab_mif_elab;
            mifAFlussoElabTypeRec.flussoElabMifParam :=mifElabRec.flusso_elab_mif_param;

            mifAFlussoElabTypeRec.flusso_elab_mif_ordine_elab :=mifElabRec.flusso_elab_mif_ordine_elab;

            mifAFlussoElabTypeRec.flusso_elab_mif_ordine :=mifElabRec.flusso_elab_mif_ordine;

            mifAFlussoElabTypeRec.flusso_elab_mif_code :=mifElabRec.flusso_elab_mif_code;
            mifAFlussoElabTypeRec.flusso_elab_mif_campo :=mifElabRec.flusso_elab_mif_campo;

            mifFlussoElabMifArr[mifElabRec.flusso_elab_mif_ordine_elab]:=mifAFlussoElabTypeRec;

        end loop;


        -- enteProprietarioRec
        strMessaggio:='Lettura dati ente proprietario per flusso SIOPE PLUS tipo '||MANDMIF_TIPO||'.';
        select * into strict enteProprietarioRec
        from siac_t_ente_proprietario ente
        where ente.ente_proprietario_id=enteProprietarioId
        and   ente.data_cancellazione is null
        and   ente.validita_fine is null;

        -- soggettoEnteId
        strMessaggio:='Lettura indirizzo ente proprietario [siac_r_soggetto_ente_proprietario] per flusso SIOPE PLUS tipo '||MANDMIF_TIPO||'.';
        select ente.soggetto_id into soggettoEnteId
        from siac_r_soggetto_ente_proprietario ente
        where ente.ente_proprietario_id=enteProprietarioId
        and   ente.data_cancellazione is null
        and   ente.validita_fine is null;

        if soggettoEnteId is not null then
            strMessaggio:='Lettura indirizzo ente proprietario [siac_t_indirizzo_soggetto] per flusso SIOPE PLUS tipo '||MANDMIF_TIPO||'.';

        	select viaTipo.via_tipo_code||' '||indir.toponimo||' '||indir.numero_civico,
        		   com.comune_desc
                   into indirizzoEnte,localitaEnte
            from siac_t_indirizzo_soggetto indir,
                 siac_t_comune com,
                 siac_d_via_tipo viaTipo
            where indir.soggetto_id=soggettoEnteId
            and   indir.principale='S'
            and   indir.data_cancellazione is null
            and   indir.validita_fine is null
            and   com.comune_id=indir.comune_id
            and   com.data_cancellazione is null
            and   com.validita_fine is null
            and   viaTipo.via_tipo_id=indir.via_tipo_id
            and   viaTipo.data_cancellazione is null
	   		and   date_trunc('day',dataElaborazione)>=date_trunc('day',viaTipo.validita_inizio)
 			and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(viaTipo.validita_fine,dataElaborazione))
            order by indir.indirizzo_id;
        end if;


        -- calcolo progressivo "distinta" per flusso REVMIF
	    -- calcolo su progressi di flussoElabMifDistOilId flussoOIL univoco per tipo flusso
        strMessaggio:='Lettura progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_'||MANDMIF_TIPO||'_'||annoBilancio||'  per flusso SIOPE PLUS tipo '||MANDMIF_TIPO||'.';
        codResult:=null;

        select prog.prog_value into flussoElabMifDistOilRetId
          from siac_t_progressivo prog
        where prog.ente_proprietario_id=enteProprietarioId
        and   prog.prog_key='oil_'||MANDMIF_TIPO||'_'||annoBilancio
        and   prog.ambito_id=ambitoFinId
        and   prog.data_cancellazione is null
        and   prog.validita_fine is null;

        if flussoElabMifDistOilRetId is null then
			strMessaggio:='Inserimento progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_out_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
        	insert into siac_t_progressivo
            (prog_key,
             prog_value,
			 ambito_id,
		     validita_inizio,
			 ente_proprietario_id,
			 login_operazione
            )
            values
            ('oil_'||MANDMIF_TIPO||'_'||annoBilancio,1,ambitoFinId,now(),enteProprietarioId,loginOperazione)
            returning prog_id into codResult;

            if codResult is null then
            	RAISE EXCEPTION ' Progressivo non inserito.';
            else
            	flussoElabMifDistOilRetId:=0;
            end if;
        end if;

        if flussoElabMifDistOilRetId is not null then
	        flussoElabMifDistOilRetId:=flussoElabMifDistOilRetId+1;
        end if;


	    -- calcolo su progressi di flussoElabMifOilId flussoOIL univoco
        strMessaggio:='Lettura progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_out_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
        codResult:=null;
        select prog.prog_value into flussoElabMifOilId
        from siac_t_progressivo prog
        where prog.ente_proprietario_id=enteProprietarioId
        and   prog.prog_key='oil_out_'||annoBilancio
        and   prog.ambito_id=ambitoFinId
        and   prog.data_cancellazione is null
        and   prog.validita_fine is null;

        if flussoElabMifOilId is null then
			strMessaggio:='Inserimento progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_out_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
        	insert into siac_t_progressivo
            (prog_key,
             prog_value,
			 ambito_id,
		     validita_inizio,
			 ente_proprietario_id,
			 login_operazione
            )
            values
            ('oil_out_'||annoBilancio,1,ambitoFinId,now(),enteProprietarioId,loginOperazione)
            returning prog_id into codResult;

            if codResult is null then
            	RAISE EXCEPTION ' Progressivo non inserito.';
            else
            	flussoElabMifOilId:=0;
            end if;
        end if;

        if flussoElabMifOilId is not null then
	        flussoElabMifOilId:=flussoElabMifOilId+1;
        end if;

        exception
		when no_data_found then
			RAISE EXCEPTION ' Non presente in archivio';
        when TOO_MANY_ROWS THEN
            RAISE EXCEPTION ' Diverse righe presenti in archivio.';
		when others  THEN
			RAISE EXCEPTION ' %-%.',SQLSTATE,substring(upper(SQLERRM) from 1 for 500);
    end;




    --- popolamento mif_t_ordinativo_entrata_id


    -- ordinativi emessi o emessi/spostati non ancora mai trasmessi codice_funzione='I'
    strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_entrata_id].Codice funzione='||FUNZIONE_CODE_I||'.';

    insert into mif_t_ordinativo_entrata_id
    (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil,
     mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
     mif_ord_soggetto_id, mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
     mif_ord_atto_amm_id, mif_ord_contotes_id,mif_ord_notetes_id,mif_ord_dist_id,mif_ord_desc,
     mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
     mif_ord_codbollo_id,
     mif_ord_login_creazione,mif_ord_login_modifica,
     ente_proprietario_id, login_operazione)
    (
     with
     ritrasm as
     (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	  from mif_t_ordinativo_ritrasmesso r
	  where mifOrdRitrasmElabId is not null
	  and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	  and   r.ente_proprietario_id=enteProprietarioId
	  and   r.data_cancellazione is null),
     ordinativi as
     (select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_I mif_ord_codice_funzione,
             bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
             ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
             extract('year' from ord.ord_emissione_data)||'-'||
             lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
             lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione,0 mif_ord_ord_anno_movg,
             0 mif_ord_soggetto_id,0 mif_ord_subord_id,elem.elem_id mif_ord_elem_id,
             0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_atto_amm_id,ord.contotes_id mif_ord_contotes_id,
             ord.notetes_id mif_ord_notetes_id,ord.dist_id mif_ord_dist_id, ord.ord_desc mif_ord_desc ,
             ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
             ord.codbollo_id mif_ord_codbollo_id,
             ord.login_creazione mif_ord_login_creazione,ord.login_modifica mif_ord_login_modifica,
             enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
      from siac_t_ordinativo ord,siac_r_ordinativo_stato ord_stato,siac_t_bil bil, siac_t_periodo per,siac_r_ordinativo_bil_elem elem
      where  bil.ente_proprietario_id=enteProprietarioId
        and  per.periodo_id=bil.periodo_id
        and  per.anno::integer <=annoBilancio::integer
         and  ord.bil_id=bil.bil_id
         and  ord.ord_tipo_id=ordTipoCodeId
         and  ord_stato.ord_id=ord.ord_id
         and  ord_stato.data_cancellazione is null
	   	 and  date_trunc('day',dataElaborazione)>=date_trunc('day',ord_stato.validita_inizio)
		 and  ord_stato.validita_fine is null
         and  ord_stato.ord_stato_id=ordStatoCodeIId
         and  ord.ord_trasm_oil_data is null
         and  ord.ord_emissione_data<=dataElaborazione
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175
         and  ord.ord_da_trasmettere=true -- 19.06.2018 Sofia Sofia siac-6175
         and  elem.ord_id=ord.ord_id
         and  elem.data_cancellazione is null
         and  not exists (select 1 from siac_r_ordinativo rord
                          where rord.ord_id_a=ord.ord_id
                          and   rord.data_cancellazione is null
                          and   rord.validita_fine is null
			              and   rord.relaz_tipo_id=ordRelazCodeTipoId)
      )
      select   o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
               o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
               o.mif_ord_soggetto_id, o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_notetes_id,o.mif_ord_dist_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.mif_ord_codbollo_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id, o.login_operazione
      from ordinativi o
	  where mifOrdRitrasmElabId is null
	     or (mifOrdRitrasmElabId is not null and exists
            (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
      );


      -- ordinativi emessi o emessi/spostati non ancora mai trasmessi, sostituzione di altro ordinativo codice_funzione='S'
      strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_entrata_id].Codice funzione='||FUNZIONE_CODE_S||'.';

      insert into mif_t_ordinativo_entrata_id
	  (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil,
       mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
       mif_ord_soggetto_id, mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
       mif_ord_atto_amm_id, mif_ord_contotes_id,mif_ord_notetes_id,mif_ord_dist_id,mif_ord_desc,
       mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
       mif_ord_codbollo_id,
       mif_ord_login_creazione,mif_ord_login_modifica,
       ente_proprietario_id, login_operazione)
	  (
	   with
       ritrasm as
       (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	    from mif_t_ordinativo_ritrasmesso r
	    where mifOrdRitrasmElabId is not null
	    and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	    and   r.ente_proprietario_id=enteProprietarioId
	    and   r.data_cancellazione is null),
       ordinativi as
       (select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_S mif_ord_codice_funzione,
               bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
               ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
               extract('year' from ord.ord_emissione_data)||'-'||
               lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
               lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione,
               0 mif_ord_ord_anno_movg,
               0 mif_ord_soggetto_id,0 mif_ord_subord_id,
               elem.elem_id mif_ord_elem_id,
               0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_atto_amm_id,
               ord.contotes_id mif_ord_contotes_id,ord.notetes_id mif_ord_notetes_id,ord.dist_id mif_ord_dist_id,
               ord.ord_desc mif_ord_desc,
               ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
               ord.codbollo_id mif_ord_codbollo_id,
               ord.login_creazione mif_ord_login_creazione, ord.login_modifica mif_ord_login_modifica,
               enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
  	    from siac_t_ordinativo ord,siac_r_ordinativo_stato ord_stato,
             siac_t_bil bil, siac_t_periodo per,
             siac_r_ordinativo_bil_elem elem,siac_r_ordinativo rord
  	    where  bil.ente_proprietario_id=enteProprietarioId
   		  and  per.periodo_id=bil.periodo_id
    	  and  per.anno::integer <=annoBilancio::integer
    	  and  ord.bil_id=bil.bil_id
    	  and  ord.ord_tipo_id=ordTipoCodeId
    	  and  ord_stato.ord_id=ord.ord_id
    	  and  ord_stato.data_cancellazione is null
	   	  and  date_trunc('day',dataElaborazione)>=date_trunc('day',ord_stato.validita_inizio)
          and  ord_stato.validita_fine is null
    	  and  ord_stato.ord_stato_id=ordStatoCodeIId
	      and  ord.ord_trasm_oil_data is null
    	  and  ord.ord_emissione_data<=dataElaborazione
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175
          and  ord.ord_da_trasmettere=true -- 19.06.2018 Sofia Sofia siac-6175
    	  and  elem.ord_id=ord.ord_id
    	  and  elem.data_cancellazione is null
          and  elem.validita_fine is null
          and  rord.ord_id_a=ord.ord_id
          and  rord.relaz_tipo_id=ordRelazCodeTipoId
          and  rord.data_cancellazione is null
          and  rord.validita_fine is null
        )
        select o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
               o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
               o.mif_ord_soggetto_id, o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_notetes_id,o.mif_ord_dist_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.mif_ord_codbollo_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id, o.login_operazione
        from ordinativi o
	    where mifOrdRitrasmElabId is null
	     or (mifOrdRitrasmElabId is not null and exists
            (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
      );

      -- ordinativi emessi e annullati mai trasmessi codice_funzione='N'
      strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_entrata_id].Codice funzione='||FUNZIONE_CODE_N||'.';

	  insert into mif_t_ordinativo_entrata_id
	  (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil,
       mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
       mif_ord_soggetto_id, mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
       mif_ord_atto_amm_id, mif_ord_contotes_id,mif_ord_notetes_id,mif_ord_dist_id,mif_ord_desc,
       mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
       mif_ord_codbollo_id,
       mif_ord_login_creazione,mif_ord_login_modifica,
       ente_proprietario_id, login_operazione)
	  (
	   with
       ritrasm as
       (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	    from mif_t_ordinativo_ritrasmesso r
	    where mifOrdRitrasmElabId is not null
	    and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	    and   r.ente_proprietario_id=enteProprietarioId
	    and   r.data_cancellazione is null),
       ordinativi as
       (select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_N mif_ord_codice_funzione,
               bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
      	 	   ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
               extract('year' from ord.ord_emissione_data)||'-'||
               lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
               lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione,
               0 mif_ord_ord_anno_movg,
               0 mif_ord_soggetto_id,0 mif_ord_subord_id,elem.elem_id mif_ord_elem_id,
               0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_atto_amm_id,
               ord.contotes_id mif_ord_contotes_id,ord.notetes_id mif_ord_notetes_id,ord.dist_id mif_ord_dist_id,
               ord.ord_desc mif_ord_desc,
               ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
               ord.codbollo_id mif_ord_codbollo_id,
               ord.login_creazione mif_ord_login_creazione,ord.login_modifica mif_ord_login_modifica,
               enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
  	    from siac_t_ordinativo ord, siac_r_ordinativo_stato ord_stato,
             siac_t_bil bil, siac_t_periodo per,
             siac_r_ordinativo_bil_elem elem
        where  bil.ente_proprietario_id=enteProprietarioId
         and  per.periodo_id=bil.periodo_id
         and  per.anno::integer <=annoBilancio::integer
         and  ord.bil_id=bil.bil_id
         and  ord.ord_tipo_id=ordTipoCodeId
         and  ord_stato.ord_id=ord.ord_id
         and  ord_stato.validita_inizio<=dataElaborazione -- questa e'' la data di annullamento
         and  ord.ord_emissione_data<=dataElaborazione
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175
         and  ord.ord_da_trasmettere=true -- 19.06.2018 Sofia Sofia siac-6175
         and  ord_stato.data_cancellazione is null
         and  date_trunc('day',dataElaborazione)>=date_trunc('day',ord_stato.validita_inizio)
   		 and  ord_stato.validita_fine is null
         and  ord_stato.ord_stato_id=ordStatoCodeAId
         and  ord.ord_trasm_oil_data is null
         and  elem.ord_id=ord.ord_id
         and  elem.data_cancellazione is null
         and  elem.validita_fine is null
        ),
        -- 16.04.2018 Sofia siac-6067
        enteOil as
        (
         select false esclAnnull
         from siac_t_ente_oil oil
         where oil.ente_proprietario_id=enteProprietarioId
         and   oil.ente_oil_invio_escl_annulli=false
        )
        select o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
               o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
               o.mif_ord_soggetto_id, o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_notetes_id,o.mif_ord_dist_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.mif_ord_codbollo_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id, o.login_operazione
        from ordinativi o, enteOil -- 16.04.2018 Sofia siac-6067
	    where
        ( mifOrdRitrasmElabId is null
	      or (mifOrdRitrasmElabId is not null and exists
             (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
        ) -- 16.04.2018 Sofia siac-6067
        and  enteOil.esclAnnull=false -- 16.04.2018 Sofia siac-6067
	   );

      -- ordinativi emessi tramessi e poi annullati, anche dopo spostamento  codice_funzione='A'
      strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_entrata_id].Codice funzione='||FUNZIONE_CODE_A||'.';

      insert into mif_t_ordinativo_entrata_id
      (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil,
       mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
       mif_ord_soggetto_id, mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
       mif_ord_atto_amm_id, mif_ord_contotes_id,mif_ord_notetes_id,mif_ord_dist_id,mif_ord_desc,
       mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
       mif_ord_codbollo_id,
       mif_ord_login_creazione,mif_ord_login_modifica,
       ente_proprietario_id, login_operazione)
      (
	   with
       ritrasm as
       (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	    from mif_t_ordinativo_ritrasmesso r
	    where mifOrdRitrasmElabId is not null
	    and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	    and   r.ente_proprietario_id=enteProprietarioId
	    and   r.data_cancellazione is null),
       ordinativi as
       (select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_A mif_ord_codice_funzione,
               bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
               ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
               extract('year' from ord.ord_emissione_data)||'-'||
               lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
               lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione,0 mif_ord_ord_anno_movg,
               0 mif_ord_soggetto_id,0 mif_ord_subord_id,elem.elem_id mif_ord_elem_id,
               0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_atto_amm_id,
               ord.contotes_id mif_ord_contotes_id, ord.notetes_id mif_ord_notetes_id,ord.dist_id mif_ord_dist_id,
               ord.ord_desc mif_ord_desc,
               ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
               ord.codbollo_id mif_ord_codbollo_id,
               ord.login_creazione mif_ord_login_creazione,ord.login_modifica mif_ord_login_modifica,
               enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
        from siac_t_ordinativo ord,siac_r_ordinativo_stato ord_stato,
             siac_t_bil bil, siac_t_periodo per,
             siac_r_ordinativo_bil_elem elem
        where  bil.ente_proprietario_id=enteProprietarioId
         and  per.periodo_id=bil.periodo_id
         and  per.anno::integer <=annoBilancio::integer
         and  ord.bil_id=bil.bil_id
         and  ord.ord_tipo_id=ordTipoCodeId
   		 and  ord_stato.ord_id=ord.ord_id
  		 and  ord.ord_emissione_data<=dataElaborazione
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175
         and  ord.ord_da_trasmettere=true -- 19.06.2018 Sofia Sofia siac-6175
         and  ord_stato.validita_inizio<=dataElaborazione  -- questa e'' la data di annullamento
  		 and  ord.ord_trasm_oil_data is not null
 		 and  ord.ord_trasm_oil_data<ord_stato.validita_inizio
         and  ord_stato.data_cancellazione is null
         and  date_trunc('day',dataElaborazione)>=date_trunc('day',ord_stato.validita_inizio)
         and  ord_stato.validita_fine is null -- SofiaData
         and  ord_stato.ord_stato_id=ordStatoCodeAId
         and  ( ord.ord_spostamento_data is null or ord.ord_spostamento_data<ord_stato.validita_inizio)
         and  elem.ord_id=ord.ord_id
         and  elem.data_cancellazione is null
         and  elem.validita_fine is null
        )
        select o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
               o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
               o.mif_ord_soggetto_id, o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_notetes_id,o.mif_ord_dist_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.mif_ord_codbollo_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id, o.login_operazione
        from ordinativi o
	    where mifOrdRitrasmElabId is null
	     or (mifOrdRitrasmElabId is not null and exists
            (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
       );

      -- ordinativi emessi , trasmessi  e poi spostati codice_funzione='VB' ( mai annullati )
      strMessaggio:='Inserimento dati in tabella temporanea id [mif_t_ordinativo_entrata_id].Codice funzione='||FUNZIONE_CODE_VB||'.';

      insert into mif_t_ordinativo_entrata_id
      (mif_ord_ord_id, mif_ord_codice_funzione, mif_ord_bil_id, mif_ord_periodo_id,mif_ord_anno_bil ,
       mif_ord_ord_anno,mif_ord_ord_numero,mif_ord_data_emissione,mif_ord_ord_anno_movg,
       mif_ord_soggetto_id, mif_ord_subord_id ,mif_ord_elem_id, mif_ord_movgest_id, mif_ord_movgest_ts_id,
       mif_ord_atto_amm_id, mif_ord_contotes_id,mif_ord_notetes_id,mif_ord_dist_id,mif_ord_desc,
       mif_ord_cast_cassa,mif_ord_cast_competenza,mif_ord_cast_emessi,
       mif_ord_codbollo_id,
       mif_ord_login_creazione,mif_ord_login_modifica,
       ente_proprietario_id, login_operazione)
      (
	   with
       ritrasm as
       (select r.mif_ord_id, r.mif_ord_ritrasm_elab_id
	    from mif_t_ordinativo_ritrasmesso r
	    where mifOrdRitrasmElabId is not null
	    and   r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId
	    and   r.ente_proprietario_id=enteProprietarioId
	    and   r.data_cancellazione is null),
       ordinativi as
       (select ord.ord_id mif_ord_ord_id, FUNZIONE_CODE_VB mif_ord_codice_funzione,
               bil.bil_id mif_ord_bil_id,per.periodo_id mif_ord_periodo_id,per.anno::integer mif_ord_anno_bil,
               ord.ord_anno mif_ord_ord_anno,ord.ord_numero mif_ord_ord_numero,
               extract('year' from ord.ord_emissione_data)||'-'||
               lpad(extract('month' from ord.ord_emissione_data)::varchar,2,'0')||'-'||
               lpad(extract('day' from ord.ord_emissione_data)::varchar,2,'0') mif_ord_data_emissione,0 mif_ord_ord_anno_movg,
               0 mif_ord_soggetto_id,0 mif_ord_subord_id,elem.elem_id mif_ord_elem_id,
               0 mif_ord_movgest_id,0 mif_ord_movgest_ts_id,0 mif_ord_atto_amm_id,
               ord.contotes_id mif_ord_contotes_id,ord.notetes_id mif_ord_notetes_id,ord.dist_id mif_ord_dist_id,
               ord.ord_desc mif_ord_desc,
               ord.ord_cast_cassa mif_ord_cast_cassa,ord.ord_cast_competenza mif_ord_cast_competenza,ord.ord_cast_emessi mif_ord_cast_emessi,
               ord.codbollo_id mif_ord_codbollo_id,
               ord.login_creazione mif_ord_login_creazione,ord.login_modifica mif_ord_login_modifica,
               enteProprietarioId ente_proprietario_id,loginOperazione login_operazione
        from siac_t_ordinativo ord,siac_t_bil bil, siac_t_periodo per, siac_r_ordinativo_bil_elem elem
        where  bil.ente_proprietario_id=enteProprietarioId
         and  per.periodo_id=bil.periodo_id
         and  per.anno::integer <=annoBilancio::integer
         and  ord.bil_id=bil.bil_id
         and  ord.ord_tipo_id=ordTipoCodeId
         and  ord.ord_emissione_data<=dataElaborazione
         and  ord.ord_trasm_oil_data is not null
         and  ord.ord_spostamento_data is not null
         and  ord.ord_trasm_oil_data<ord.ord_spostamento_data
         and  ord.ord_spostamento_data<=dataElaborazione
--  06.07.2018 Sofia jira siac-6307
--  scommentato per siac-6175
         and  ord.ord_da_trasmettere=true -- 19.06.2018 Sofia Sofia siac-6175
         and  not exists (select 1 from siac_r_ordinativo_stato ord_stato
  				          where  ord_stato.ord_id=ord.ord_id
					        and  ord_stato.ord_stato_id=ordStatoCodeAId
                            and  ord_stato.data_cancellazione is null)
         and  elem.ord_id=ord.ord_id
         and  elem.data_cancellazione is null
         and  elem.validita_fine is null
        )
		select o.mif_ord_ord_id, o.mif_ord_codice_funzione, o.mif_ord_bil_id, o.mif_ord_periodo_id,o.mif_ord_anno_bil,
               o.mif_ord_ord_anno,o.mif_ord_ord_numero,o.mif_ord_data_emissione,o.mif_ord_ord_anno_movg,
               o.mif_ord_soggetto_id, o.mif_ord_subord_id ,o.mif_ord_elem_id, o.mif_ord_movgest_id, o.mif_ord_movgest_ts_id,
               o.mif_ord_atto_amm_id, o.mif_ord_contotes_id,o.mif_ord_notetes_id,o.mif_ord_dist_id,o.mif_ord_desc,
               o.mif_ord_cast_cassa,o.mif_ord_cast_competenza,o.mif_ord_cast_emessi,
               o.mif_ord_codbollo_id,
               o.mif_ord_login_creazione,o.mif_ord_login_modifica,
               o.ente_proprietario_id, o.login_operazione
        from ordinativi o
	    where mifOrdRitrasmElabId is null
	     or (mifOrdRitrasmElabId is not null and exists
            (select 1 from ritrasm r where r.mif_ord_ritrasm_elab_id=mifOrdRitrasmElabId and r.mif_ord_id=o.mif_ord_ord_id))
       );

      -- aggiornamento mif_t_ordinativo_entrata_id per id


      strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_entrata_id] per soggetto_id.';
      -- soggetto_id
      update mif_t_ordinativo_entrata_id m
      set mif_ord_soggetto_id = (select s.soggetto_id from siac_r_ordinativo_soggetto s
                                 where s.ord_id=m.mif_ord_ord_id
                                   and s.data_cancellazione is null
                                   and s.validita_fine is null);

      strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_entrata_id] per subord_id.';

      -- subord_id
      update mif_t_ordinativo_entrata_id m
      set mif_ord_subord_id =
                             (select s.ord_ts_id from siac_t_ordinativo_ts s
                               where s.ord_id=m.mif_ord_ord_id
                                 and s.data_cancellazione is null
                                 and s.validita_fine is null
                               order by s.ord_ts_id
                               limit 1);



     strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_entrata_id] per movgest_ts_id.';

     -- movgest_ts_id
     update mif_t_ordinativo_entrata_id m
     set mif_ord_movgest_ts_id = (select ts.movgest_ts_id from siac_t_ordinativo_ts s, siac_r_ordinativo_ts_movgest_ts ts
	                              where s.ord_id=m.mif_ord_ord_id
                                  and   ts.ord_ts_id=s.ord_ts_id
                                  and   s.data_cancellazione is null
                                  and   s.validita_fine is null
                                  and   ts.data_cancellazione is null
                                  and   ts.validita_fine is null
                                  order by s.ord_ts_id
                                  limit 1);


     strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_entrata_id] per movgest_id.';

     -- movgest_id
     update mif_t_ordinativo_entrata_id m
     set mif_ord_movgest_id = (select s.movgest_id from siac_t_movgest_ts s
                               where  s.movgest_ts_id = m.mif_ord_movgest_ts_id
                               and s.data_cancellazione is null
                               and s.validita_fine is null);


     strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_entrata_id] per movgest_id.';

     -- movgest_anno
     update mif_t_ordinativo_entrata_id m
     set mif_ord_ord_anno_movg = (select s.movgest_anno from siac_t_movgest s
                              	  where  s.movgest_id = m.mif_ord_movgest_id
                             	  and s.data_cancellazione is null
                                  and s.validita_fine is null);


     strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_entrata_id] per attoamm_id.';

    -- attoamm_id
    update mif_t_ordinativo_entrata_id m
    set mif_ord_atto_amm_id = (select s.attoamm_id from siac_r_ordinativo_atto_amm s
                                where s.ord_id = m.mif_ord_ord_id
                                  and s.data_cancellazione is null
                                  and s.validita_fine is null);


    strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_entrata_id] per attoamm_id movgest_ts.';
	-- attoamm_movgest_ts_id
    update mif_t_ordinativo_entrata_id m
    set mif_ord_atto_amm_movg_id = (select s.attoamm_id from siac_r_movgest_ts_atto_amm s
                                    where s.movgest_ts_id = m.mif_ord_movgest_ts_id
                                    and s.data_cancellazione is null
                                    and s.validita_fine is null);


	-- mif_ord_tipologia_id
    -- mif_ord_tipologia_code
    -- mif_ord_tipologia_desc
	strMessaggio:='Aggiornamento dati in tabella temporanea id [mif_t_ordinativo_entrata_id] per mif_ord_tipologia_id mif_ord_tipologia_code mif_ord_tipologia_desc.';
	update mif_t_ordinativo_entrata_id m
    set (mif_ord_tipologia_id, mif_ord_tipologia_code,mif_ord_tipologia_desc) = (cp.classif_id,cp.classif_code,cp.classif_desc)
    from  siac_r_bil_elem_class classElem, siac_t_class cf, siac_r_class_fam_tree r, siac_t_class cp
	where classElem.elem_id= m.mif_ord_elem_id
	and   cf.classif_id=classElem.classif_id
	and   cf.data_cancellazione is null
	and   cf.classif_tipo_id= categoriaTipoid -- categoria
	and   r.classif_id=cf.classif_id
	and   r.classif_id_padre is not null
	and   r.classif_fam_tree_id=famTitEntTipoCategId -- famiglia
	and   r.data_cancellazione is null
	and   r.validita_fine is null
	and   classElem.data_cancellazione is null
	and   classElem.validita_fine is null
	and   cp.classif_id=r.classif_id_padre
	and   cp.data_cancellazione is null
	and   cp.classif_tipo_id=tipologiaTipoid; --tipologia

    strMessaggio:='Verifica esistenza ordinativi di entrata da trasmettere.';
    codResult:=null;

    select 1 into codResult
    from mif_t_ordinativo_entrata_id where ente_proprietario_id=enteProprietarioId;

    if codResult is null then
      codResult:=-12;
      RAISE EXCEPTION ' Nessun ordinativo di entrata da trasmettere.';
    end if;




   -- <sospesi>
   -- <sospeso>
   -- <numero_provvisorio>
   -- <importo_provvisorio>
   flussoElabMifElabRec:=null;
   flussoElabMifElabRec:=mifFlussoElabMifArr[FLUSSO_MIF_ELAB_NUM_SOSPESO];

   strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
   if flussoElabMifElabRec.flussoElabMifId is null then
  	  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
   end if;
   raise notice 'numero_provvisorio FLUSSO_MIF_ELAB_NUM_SOSPESO=% strMessaggio=%',FLUSSO_MIF_ELAB_NUM_SOSPESO,strMessaggio;

   if flussoElabMifElabRec.flussoElabMifAttivo=true then
    	if flussoElabMifElabRec.flussoElabMifElab=true then
			isRicevutaAttivo:=true;
        else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
   		end if;
   end if;


   flussoElabMifElabRec:=null;
   mifCountRec:=FLUSSO_MIF_ELAB_FATTURE;
   flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
   strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'.';
   if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
   end if;
   if flussoElabMifElabRec.flussoElabMifAttivo=true then
   	if flussoElabMifElabRec.flussoElabMifElab=true then
    	if flussoElabMifElabRec.flussoElabMifParam is not null  then
 		    numeroDocs:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            tipoDocs  :=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
            tipoGruppoDocs  :=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
            if numeroDocs is not null and numeroDocs!='' and
               tipoDocs is not null and tipoDocs!='' and
               tipoGruppoDocs is not null and tipoGruppoDocs!='' then
                tipoDocs:=tipoDocs||'|'||tipoGruppoDocs;
            	isGestioneFatture:=true;
            end if;
		end if;
    else
    	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
    end if;
   end if;

   if isGestioneFatture=true then

    flussoElabMifElabRec:=null;
    mifCountRec:=FLUSSO_MIF_ELAB_FATT_CODFISC;
    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'.';
    if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    end if;
    if flussoElabMifElabRec.flussoElabMifAttivo=true then
   	 if flussoElabMifElabRec.flussoElabMifElab=true then
    	if flussoElabMifElabRec.flussoElabMifParam is not null  then
 		    docAnalogico:=flussoElabMifElabRec.flussoElabMifParam;
		end if;
     else
    	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
     end if;
    end if;

   end if;

   if isGestioneFatture=true then
    flussoElabMifElabRec:=null;
    mifCountRec:=FLUSSO_MIF_ELAB_FATT_DATASCAD_PAG;
    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'.';
    if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    end if;
    if flussoElabMifElabRec.flussoElabMifAttivo=true then
   	 if flussoElabMifElabRec.flussoElabMifElab=true then
    	if flussoElabMifElabRec.flussoElabMifParam is not null  then
            attrCodeDataScad:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
		end if;
     else
    	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
     end if;
    end if;

   end if;

   if isGestioneFatture=true then

    flussoElabMifElabRec:=null;
    mifCountRec:=FLUSSO_MIF_ELAB_FATT_NATURA_PAG;
    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'.';
    if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    end if;
    if flussoElabMifElabRec.flussoElabMifAttivo=true then
   	 if flussoElabMifElabRec.flussoElabMifElab=true then
    	if flussoElabMifElabRec.flussoElabMifParam is not null  then
            /* 23.02.2018 Sofia JIRA siac-5849
            titoloCorrente:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            descriTitoloCorrente:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
            titoloCapitale:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
            descriTitoloCapitale:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));
            macroAggrTipoCode:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,5));
            if macroAggrTipoCode is not null then
            	strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'. Lettura identificato classificatore tipo='||macroAggrTipoCode||'.';
            	select tipo.classif_tipo_id into macroAggrTipoCodeId
                from siac_d_class_tipo tipo
                where tipo.ente_proprietario_id=enteProprietarioId
                and   tipo.classif_tipo_code=macroAggrTipoCode
                and   tipo.data_cancellazione is null
                and   tipo.validita_fine is null;

            end if;*/

            -- 23.02.2018 Sofia JIRA siac-5849
            macroAggrTipoCode:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            if macroAggrTipoCode is not null then
            	strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'. Lettura identificato classificatore tipo='||macroAggrTipoCode||'.';
            	select tipo.classif_tipo_id into macroAggrTipoCodeId
                from siac_d_class_tipo tipo
                where tipo.ente_proprietario_id=enteProprietarioId
                and   tipo.classif_tipo_code=macroAggrTipoCode
                and   tipo.data_cancellazione is null
                and   tipo.validita_fine is null;

            end if;
            -- 23.02.2018 Sofia JIRA siac-5849
            famMacroTitCode:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
            if famMacroTitCode is not null then
	            strMessaggio:='Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                 ||' mifCountRec='||mifCountRec
                 ||' tipo flusso '||MANDMIF_TIPO||'. Lettura identificato famiglia tipo='||famMacroTitCode||'.';
	            select tree.classif_fam_tree_id into famMacroTitCodeId
				from siac_t_class_fam_tree tree, siac_d_class_fam d
				where d.ente_proprietario_id=enteProprietarioId
				and   d.classif_fam_desc=famMacroTitCode --'Spesa - TitoliMacroaggregati'
				and   tree.classif_fam_id=d.classif_fam_id
                and   tree.data_cancellazione is null
                and   tree.validita_fine is null
                and   d.data_cancellazione is null
                and   d.validita_fine is null;

            end if;

			-- 23.02.2018 Sofia JIRA siac-5849
	        if flussoElabMifElabRec.flussoElabMifDef is not null then
        		defNaturaPag:=flussoElabMifElabRec.flussoElabMifDef;
    	    end if;

		end if;
     else
    	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
     end if;
    end if;

   end if;

    --- lettura mif_t_ordinativo_entrata_id per popolamento mif_t_ordinativo_entrata
    codResult:=null;
    strMessaggio:='Lettura ordinativi di entrata da migrare [mif_t_ordinativo_entrata_id].Inizio ciclo.';
    for mifOrdinativoIdRec IN
    (select ms.*
     from mif_t_ordinativo_entrata_id ms
     where ms.ente_proprietario_id=enteProprietarioId
     order by ms.mif_ord_anno_bil,
              ms.mif_ord_ord_numero
    )
    loop

--		raise notice 'Inizio ciclo numero_ord=%',mifOrdinativoIdRec.mif_ord_ord_numero;
		mifFlussoOrdinativoRec:=null;
		bilElemRec:=null;
        soggettoRec:=null;

        soggettoRifId:=null;

		indirizzoRec:=null;
        mifOrdSpesaId:=null;
	    mifCountRec:=1;
		isIndirizzoBenef:=true;
        bAvvioSiopeNew:=false;

        -- lettura importo ordinativo
		strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura importo ordinativo di entrata per tipo flusso '||MANDMIF_TIPO||'.';

        mifFlussoOrdinativoRec.mif_ord_importo:=fnc_mif_importo_ordinativo(mifOrdinativoIdRec.mif_ord_ord_id,ordDetTsTipoId,
        										flussoElabMifTipoDec);
        if flussoElabMifTipoDec=true and
           coalesce(position('.' in mifFlussoOrdinativoRec.mif_ord_importo),0)=0 then
           mifFlussoOrdinativoRec.mif_ord_importo:=mifFlussoOrdinativoRec.mif_ord_importo||'.00';
        end if;

        -- lettura dati soggetto ordinativo
        soggettoRifId:=mifOrdinativoIdRec.mif_ord_soggetto_id;
        select * into soggettoRec
   	    from siac_t_soggetto sogg
       	where sogg.soggetto_id=soggettoRifId;

        if soggettoRec is null then
        	RAISE EXCEPTION ' Errore in lettura siac_t_soggetto [soggetto_id= %].',soggettoRifId;
        end if;


        -- lettura elemento bilancio  ordinativo
 		strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura elemento bilancio ordinativo di entrata per tipo flusso '||MANDMIF_TIPO||'.';

		select * into bilElemRec
        from siac_t_bil_elem elem
        where elem.elem_id=mifOrdinativoIdRec.mif_ord_elem_id;
        if bilElemRec is null then
        	RAISE EXCEPTION ' Errore in lettura siac_t_bil_elem.';
        end if;

        -- dati testata flusso presenti come tag solo in testata
        -- valorizzati su ogni ordinativo trasmesso
        -- <testata_flusso>
		-- <codice_ABI_BT>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_COD_ABI_BT;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_abi is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_abi_bt:=enteOilRec.ente_oil_abi;
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_abi_bt:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <codice_ente>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_COD_ENTE_IPA;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice_ipa is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_ipa:=trim(both ' ' from enteOilRec.ente_oil_codice_ipa);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_ipa:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <descrizione_ente>
	    flussoElabMifElabRec:=null;
		mifCountRec:=FLUSSO_MIF_ELAB_TEST_DESC_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteProprietarioRec.ente_denominazione is not null then
            	mifFlussoOrdinativoRec.mif_ord_desc_ente:=enteProprietarioRec.ente_denominazione;
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
               	mifFlussoOrdinativoRec.mif_ord_desc_ente:=substring(flussoElabMifElabRec.flussoElabMifDef from 1 for 30);
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

	    -- <codice_istat_ente>
	    flussoElabMifElabRec:=null;
		mifCountRec:=FLUSSO_MIF_ELAB_TEST_COD_ISTAT_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice_istat is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_istat:=enteOilRec.ente_oil_codice_istat;
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
               	mifFlussoOrdinativoRec.mif_ord_codice_ente_istat:=substring(flussoElabMifElabRec.flussoElabMifDef from 1 for 30);
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <codice_fiscale_ente>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_CODFISC_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteProprietarioRec.codice_fiscale is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente:=trim(both ' ' from enteProprietarioRec.codice_fiscale);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <codice_tramite_ente>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_CODTRAMITE_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice_tramite is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite:=trim(both ' ' from enteOilRec.ente_oil_codice_tramite);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <codice_tramite_BT>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_CODTRAMITE_BT;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice_tramite_bt is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite_bt:=trim(both ' ' from enteOilRec.ente_oil_codice_tramite_bt);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite_bt:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <codice_ente_BT>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_COD_ENTE_BT;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_codice is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_bt:=trim(both ' ' from enteOilRec.ente_oil_codice);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_codice_ente_bt:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <riferimento_ente>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_RIFERIMENTO_ENTE;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if enteOilRec.ente_oil_riferimento is not null then
            	mifFlussoOrdinativoRec.mif_ord_riferimento_ente:=trim(both ' ' from enteOilRec.ente_oil_riferimento);
            elsif flussoElabMifElabRec.flussoElabMifDef is not null then
            	mifFlussoOrdinativoRec.mif_ord_riferimento_ente:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;
        -- </testata_flusso>

        -- <testata_esercizio>
        -- <esercizio>
        flussoElabMifElabRec:=null;
        mifCountRec:=FLUSSO_MIF_ELAB_TEST_ESERCIZIO;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
            mifFlussoOrdinativoRec.mif_ord_anno_esercizio:=mifOrdinativoIdRec.mif_ord_anno_bil;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;
        -- </testata_esercizio>

		-- <reversale>
        mifCountRec :=FLUSSO_MIF_ELAB_INIZIO_ORD;

	    -- <tipo_operazione>
        flussoElabMifElabRec:=null;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        raise notice 'tipo_operazione strMessaggio=%',strMessaggio;
        if  flussoElabMifElabRec.flussoElabMifAttivo=true then
         if   flussoElabMifElabRec.flussoElabMifElab=true then
            if flussoElabMifElabRec.flussoElabMifParam is not null then
	            flussoElabMifValore:=fnc_mif_ordinativo_carico_bollo( mifOrdinativoIdRec.mif_ord_codice_funzione,flussoElabMifElabRec.flussoElabMifParam);
            else
            	flussoElabMifValore:=mifOrdinativoIdRec.mif_ord_codice_funzione;
            end if;

            if flussoElabMifValore is not null then
				mifFlussoOrdinativoRec.mif_ord_codice_funzione:=flussoElabMifValore;
            end if;

         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <numero_reversale>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if flussoElabMifTipoDec=false then
				mifFlussoOrdinativoRec.mif_ord_numero:=lpad(mifOrdinativoIdRec.mif_ord_ord_numero,NUM_SETTE,ZERO_PAD);
            else
	            mifFlussoOrdinativoRec.mif_ord_numero:=mifOrdinativoIdRec.mif_ord_ord_numero;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo non elaborabile.';
         end if;
        end if;


        -- <data_reversale>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true  then
         if  flussoElabMifElabRec.flussoElabMifElab=true then
			mifFlussoOrdinativoRec.mif_ord_data:=mifOrdinativoIdRec.mif_ord_data_emissione;
         else
            RAISE EXCEPTION ' Configurazione tag/campo non  elaborabile.';
         end if;
        end if;

		-- <importo_reversale>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
			-- calcolato inizio ciclo
            null;
         else
         	mifFlussoOrdinativoRec.mif_ord_importo:='0';
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <conto_evidenza>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
            if mifOrdinativoIdRec.mif_ord_contotes_id is not null then
                 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
					   ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura conto tesoreria.';

            	select d.contotes_code into flussoElabMifValore
                from siac_d_contotesoreria d
                where d.contotes_id=mifOrdinativoIdRec.mif_ord_contotes_id;
                if flussoElabMifValore is null then
                	RAISE EXCEPTION ' Dato non presente in archivio.';
                end if;
            end if;

			if flussoElabMifValore is not null then
             mifFlussoOrdinativoRec.mif_ord_destinazione:=flussoElabMifValore;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <bilancio>
        -- <codifica_bilancio>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;
        raise notice 'codifica_bilancio strMessaggio=%',strMessaggio;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then

         		mifFlussoOrdinativoRec.mif_ord_codifica_bilancio:=
                    substring(mifOrdinativoIdRec.mif_ord_tipologia_code from 1 for 5) ;
            	mifFlussoOrdinativoRec.mif_ord_capitolo:=bilElemRec.elem_code;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


	    -- <descrizione_codifica>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
            	mifFlussoOrdinativoRec.mif_ord_desc_codifica:=substring( bilElemRec.elem_desc from 1 for 30);
                mifFlussoOrdinativoRec.mif_ord_desc_codifica_bil:=substring( mifOrdinativoIdRec.mif_ord_tipologia_desc from 1 for 30);
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <gestione>
        flussoElabMifElabRec:=null;
        flussoElabMifValore:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         	if flussoElabMifElabRec.flussoElabMifDef is not null then
            	if mifOrdinativoIdRec.mif_ord_anno_bil=mifOrdinativoIdRec.mif_ord_ord_anno_movg then
	            	flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
                else
	                flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,2));
                end if;
            	mifFlussoOrdinativoRec.mif_ord_gestione:=flussoElabMifValore;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <anno_residuo>
        flussoElabMifElabRec:=null;
        flussoElabMifValore:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
		  if mifOrdinativoIdRec.mif_ord_anno_bil!=mifOrdinativoIdRec.mif_ord_ord_anno_movg  then
       	 	mifFlussoOrdinativoRec.mif_ord_anno_res:=mifOrdinativoIdRec.mif_ord_ord_anno_movg;
          end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

		-- <numero_articolo>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
            	mifFlussoOrdinativoRec.mif_ord_articolo:=bilElemRec.elem_code2;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


        -- <voce_economica>
        mifCountRec:=mifCountRec+1;

        -- <importo_bilancio>
        flussoElabMifElabRec:=null;
        flussoElabMifValore:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
           	mifFlussoOrdinativoRec.mif_ord_importo_bil:=mifFlussoOrdinativoRec.mif_ord_importo;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;
        -- </bilancio>

	    -- <informazioni_versante>

        -- <progressivo_versante>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        raise notice 'progressivo_versante strMessaggio=%',strMessaggio;

        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
           	if flussoElabMifElabRec.flussoElabMifDef is not null then
                	mifFlussoOrdinativoRec.mif_ord_progr_vers:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <importo_versante>
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=null;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
  	 	 RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	 if flussoElabMifElabRec.flussoElabMifElab=true then
     		mifFlussoOrdinativoRec.mif_ord_vers_importo:=mifFlussoOrdinativoRec.mif_ord_importo;
	     else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	     end if;
        end if;

	    -- <tipo_riscossione>
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=null;
	    flussoElabMifValore:=null;
        flussoElabMifValoreDesc:=null;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
           RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
            if coalesce(flussoElabMifElabRec.flussoElabMifParam,NVL_STR)!=NVL_STR and
               coalesce(flussoElabMifElabRec.flussoElabMifDef,NVL_STR)!=NVL_STR then
              if  tipoIncassoCode is null then
            	tipoIncassoCode:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
              end if;
              if tipoRitOrdInc is null then
	              tipoRitOrdInc:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
              end if;
              if tipoSplitOrdInc is null then
	              tipoSplitOrdInc:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
              end if;
              if tipoSubOrdInc is null then
	              tipoSubOrdInc:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));
              end if;

              if tipoRitenuteInc is null then
              	tipoRitenuteInc:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,5))||','||
                                 trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,6))||','||
                                 trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,7));
              end if;

			  if tipoIncassoCompensazione is null then
              	tipoIncassoCompensazione:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
              end if;
   			  if tipoIncassoRegolarizza is null then
              	tipoIncassoRegolarizza:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,2));
              end if;

   			  if tipoIncassoCassa is null then
              	tipoIncassoCassa:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,3));
              end if;

              if tipoIncassoCode is not null and tipoIncassoCodeId is null then
                strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura classif_tipo_id per classicatore '||tipoIncassoCode||'.';
              	select tipo.classif_tipo_id into tipoIncassoCodeId
                from siac_d_class_tipo tipo
                where tipo.ente_proprietario_id=enteProprietarioId
                and   tipo.classif_tipo_code=tipoIncassoCode
                and   tipo.data_cancellazione is null
                and   tipo.validita_fine is null;

              end if;

              if tipoIncassoCodeId is not null then
                strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura tipoIncasso '||tipoIncassoCode||' per ordinativo.';

                flussoElabMifValore:=fnc_mif_tipo_incasso_splus
                                     ( mifOrdinativoIdRec.mif_ord_ord_id,
  									   mifFlussoOrdinativoRec.mif_ord_importo::NUMERIC,
                                       tipoRitOrdInc,
                                       tipoSplitOrdInc,
                                       tipoSubOrdInc,
                                       tipoRitenuteInc,
 									   tipoIncassoCodeId,
                                       tipoIncassoCompensazione,
                                       tipoIncassoRegolarizza,
                                       tipoIncassoCassa,
                                       dataElaborazione,
                                       dataFineVal,
                                       enteProprietarioId
                                     );
              end if;

		     if flussoElabMifValore is not null then
	           mifFlussoOrdinativoRec.mif_ord_vers_tipo_riscos:=flussoElabMifValore;
             end if;
           end if;
          else
          	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
        end if;

	    -- <numero_ccp>
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=null;
	    flussoElabMifValore:=null;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
           RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
          	if flussoElabMifElabRec.flussoElabMifParam is not null and
               mifFlussoOrdinativoRec.mif_ord_vers_tipo_riscos is not null then
               if mifFlussoOrdinativoRec.mif_ord_vers_tipo_riscos=
                  trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1)) then
                  if tipoContoCCPCode is null then
                  	tipoContoCCPCode:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                  end if;
                  if tipoContoCCPCodeId is null then
                    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura identificativo classificatore tipo='||tipoContoCCPCode||'.';
                  	select tipo.classif_tipo_id into tipoContoCCPCodeId
                    from siac_d_class_tipo tipo
                    where tipo.ente_proprietario_id=enteProprietarioId
                    and   tipo.classif_tipo_code=tipoContoCCPCode
                    and   tipo.data_cancellazione is null;
                  end if;

                  if tipoContoCCPCodeId is not null then
                    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore classificatore tipo='||tipoContoCCPCode||'.';
                  	select c.classif_code into flussoElabMifValore
                    from siac_r_ordinativo_class r, siac_t_class c
                    where r.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                    and   c.classif_id=r.classif_id
                    and   c.classif_tipo_id=tipoContoCCPCodeId
                    and   r.data_cancellazione is null
                    and   r.validita_fine is null
                    and   c.data_cancellazione is null;
                  end if;
               end if;
               if flussoElabMifValore is not null then
               	mifFlussoOrdinativoRec.mif_ord_vers_cc_postale:=flussoElabMifValore;
               end if;
            end if;
           else
          	RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
        end if;

		-- <tipo_entrata>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifValore:=null;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
			if coalesce(flussoElabMifElabRec.flussoElabMifDef,NVL_STR)!=NVL_STR then
              if coalesce(flussoElabMifElabRec.flussoElabMifParam,NVL_STR)!=NVL_STR then
                   if tipoClassFruttifero is null then
                    	tipoClassFruttifero:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                   end if;

                   if tipoClassFruttifero is not null and valFruttifero is null then
	                   valFruttifero:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                       valFruttiferoStr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
                       valFruttiferoStrAltro:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));
                   end if;


                   if tipoClassFruttifero is not null and
                      valFruttifero is not null and
                      valFruttiferoStr is not null and
                      valFruttiferoStrAltro is not null and
                      tipoClassFruttiferoId is null then

                    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura classifTipoCodeId '||tipoClassFruttifero||'.';
                   	select tipo.classif_tipo_id into tipoClassFruttiferoId
                    from siac_d_class_tipo tipo
                    where tipo.ente_proprietario_id=enteProprietarioId
                    and   tipo.classif_tipo_code=tipoClassFruttifero
                    and   tipo.data_cancellazione is null
                    and   tipo.validita_fine is null;

                   end if;
                   if tipoClassFruttiferoId is not null and
                      valFruttifero is not null and
                      valFruttiferoStr is not null and
                      valFruttiferoStrAltro is not null and
                      valFruttiferoId is null then
                    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura classidId '||tipoClassFruttifero||' [siac_r_ordinativo_class].';


                   	select c.classif_code into flussoElabMifValore
                    from siac_r_ordinativo_class r, siac_t_class c
                    where r.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
	                and   c.classif_id=r.classif_id
                    and   c.classif_tipo_id=tipoClassFruttiferoId
                    and   r.data_cancellazione is null
                    and   r.validita_fine is null
                    and   c.data_cancellazione is null
                    order by r.ord_classif_id limit 1;

                    if flussoElabMifValore is not null then
                    	if flussoElabMifValore=valFruttifero THEN
                        	flussoElabMifValore=valFruttiferoStr;
                        else
                          flussoElabMifValore=valFruttiferoStrAltro;
                        end if;
                    end if;
                   end if;
				 end if; -- param


	             if flussoElabMifValore is null and
     	            mifOrdinativoIdRec.mif_ord_contotes_id is not null and
        	        mifOrdinativoIdRec.mif_ord_contotes_id!=0 then

    	            strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
        	               ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
            	           ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                	       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
	                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
    	                   ||' mifCountRec='||mifCountRec
        	               ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore per conto corrente tesoreria [mif_r_conto_tesoreria_fruttifero].';
	                -- 16.02.2018 Sofia siac-5874
                    select mif.fruttifero_oi into flussoElabMifValore
    	            from mif_r_conto_tesoreria_fruttifero mif
	                where mif.ente_proprietario_id=enteProprietarioId
    	            and   mif.contotes_id=mifOrdinativoIdRec.mif_ord_contotes_id
	                and   mif.validita_fine is null
    	            and   mif.data_cancellazione is null;


	             end if;


                 if flussoElabMifValore is null then
                   	flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
                 end if;

                 mifFlussoOrdinativoRec.mif_ord_bci_tipo_entrata:=flussoElabMifValore;
            end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


		-- <destinazione>
        flussoElabMifElabRec:=null;
        flussoElabMifValore:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
		   if flussoElabMifElabRec.flussoElabMifParam is not null then

           	if classVincolatoCode is null then
            	classVincolatoCode:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            end if;

            if classVincolatoCodeId is null and classVincolatoCode is not null then
                strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura identificativo classVincolatoCode='||classVincolatoCode||'.';

                select tipo.classif_tipo_id into strict classVincolatoCodeId
    		    from siac_d_class_tipo tipo
		        where tipo.ente_proprietario_id=enteProprietarioId
        		and   tipo.classif_tipo_code=classVincolatoCode
		        and   tipo.data_cancellazione is null
                and   tipo.validita_fine is null;
            end if;

            if classVincolatoCodeId is not null then
	            strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura valore classVincolatoCode='||classVincolatoCode||'.';


                 select c.classif_desc into flussoElabMifValore
                 from siac_r_ordinativo_class r, siac_t_class c
                 where r.ord_id=  mifOrdinativoIdRec.mif_ord_ord_id
                 and   c.classif_id=r.classif_id
                 and   c.classif_tipo_id=classVincolatoCodeId
                 and   r.data_cancellazione is null
                 and   r.validita_fine is null
                 and   c.data_cancellazione is null;
            end if;
           end if;

		   if flussoElabMifValore is null and
    	 	  mifOrdinativoIdRec.mif_ord_contotes_id is not null and
        	  mifOrdinativoIdRec.mif_ord_contotes_id!=0 then

		      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
    		                   ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
        		               ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
            		           ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                		       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                    		   ||' mifCountRec='||mifCountRec
	                    	   ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore per conto corrente tesoreria [mif_r_conto_tesoreria_vincolato].';

			  select mif.vincolato into flussoElabMifValore
    	      from mif_r_conto_tesoreria_vincolato mif
	    	  where mif.ente_proprietario_id=enteProprietarioId
    	      and   mif.contotes_id=mifOrdinativoIdRec.mif_ord_contotes_id
	          and   mif.validita_fine is null
		      and   mif.data_cancellazione is null;
	       end if;

		   if flussoElabMifValore is null and
           	flussoElabMifElabRec.flussoElabMifDef is not null then
            flussoElabMifValore:=flussoElabMifElabRec.flussoElabMifDef;
           end if;

           if flussoElabMifValore is not null then
           	mifFlussoOrdinativoRec.mif_ord_vers_cod_riscos:=flussoElabMifValore;
           end if;

         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

        -- <classificazione>
        -- <codice_cge>
        flussoElabMifElabRec:=null;
        flussoElabMifValore:=null;
        flussoElabMifValoreDesc:=null;
        codiceCge:=null;
        descCge:=null;
        mifCountRec:=mifCountRec+1;
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;
        raise notice 'codice_cge strMessaggio=%',strMessaggio;

        if flussoElabMifElabRec.flussoElabMifAttivo=true  then
         if flussoElabMifElabRec.flussoElabMifElab=true  then
         		if flussoElabMifElabRec.flussoElabMifParam is not null  then
                	if siopeCodeTipo is null and flussoElabMifElabRec.flussoElabMifParam is not null then
                        siopeCodeTipo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                    end if;
					if siopeDef is null and flussoElabMifElabRec.flussoElabMifParam is not null then
                        siopeDef:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                    end if;

                    if coalesce(dataAvvioSiopeNew,NVL_STR)=NVL_STR and
	                  flussoElabMifElabRec.flussoElabMifParam is not null then
    	                	dataAvvioSiopeNew:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3));
        	        end if;

            	    if coalesce(dataAvvioSiopeNew,NVL_STR)!=NVL_STR and codiceFinVTbr is null then
                	  	codiceFinVTbr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4));
	                end if;

            	    if coalesce(dataAvvioSiopeNew,NVL_STR)!=NVL_STR then
                	  	if dataAvvioSiopeNew::timestamp<=date_trunc('DAY',mifOrdinativoIdRec.mif_ord_data_emissione::timestamp) -- data emissione ordinativo
                    	then
    	                	bAvvioSiopeNew:=true;
	                    end if;
    	            end if;

                    if  bAvvioSiopeNew=true then
                     -- lettura da PDC_V
                  	 if codiceFinVTbr is not null and codiceFinVTipoTbrId is null then --1
						-- codiceFinVTipoTbrId
                        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                     		  ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                     		  ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                    		  ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
		                      ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
		                      ||' mifCountRec='||mifCountRec
	                          ||' tipo flusso '||MANDMIF_TIPO||'.Lettura id class tipo='||codiceFinVTbr||'.';
			   		    select tipo.classif_tipo_id into strict codiceFinVTipoTbrId
				    	from siac_d_class_tipo tipo
						where tipo.ente_proprietario_id=enteProprietarioId
						and   tipo.classif_tipo_code=codiceFinVTbr
						and   tipo.data_cancellazione is null
						and   date_trunc('day',dataElaborazione)>=date_trunc('day',validita_inizio)
						and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(validita_fine,dataElaborazione));
                     end if; --1

                     if codiceFinVTipoTbrId is not null then --2
      		 		  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura piano_conti_fin_V_code '||codiceFinVTbr||' [siac_r_ordinativo_class] .';
		    		  select replace(substring(class.classif_code,2),'.','') , class.classif_desc
                       into flussoElabMifValore,flussoElabMifValoreDesc
			  		  from siac_r_ordinativo_class r, siac_t_class class
	       		      where r.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
	      		      and   class.classif_id=r.classif_id
 		              and   class.classif_tipo_id=codiceFinVTipoTbrId
		 	          and   r.data_cancellazione is null
				      and   r.validita_fine is NULL
	  		          and   class.data_cancellazione is null;

			 		  if flussoElabMifValore is null then --3
		               strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura piano_conti_fin_V_code '||codiceFinVTbr||' [siac_r_movgest_class].';

             		   select replace(substring(class.classif_code,2),'.','') , class.classif_desc
                    	into flussoElabMifValore,flussoElabMifValoreDesc
		    	       from siac_r_movgest_class rclass, siac_t_class class
		               where rclass.movgest_ts_id=mifOrdinativoIdRec.mif_ord_movgest_ts_id
    		           and   rclass.data_cancellazione is null
        		       and   rclass.validita_fine is null
            		   and   class.classif_id=rclass.classif_id
		               and   class.classif_tipo_id=codiceFinVTipoTbrId
    		           and   class.data_cancellazione is null
		               order by rclass.movgest_classif_id
    		           limit 1;
        	           end if; --3
                      end if;--2
                    else
                	 if siopeCodeTipoId is null then --1
                    	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                     		  ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                     		  ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                    		  ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
		                      ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
		                      ||' mifCountRec='||mifCountRec
	                          ||' tipo flusso '||MANDMIF_TIPO||'.Lettura id class tipo='||siopeCodeTipo||'.';

                    	select class.classif_tipo_id into siopeCodeTipoId
                        from siac_d_class_tipo class
                        where class.classif_tipo_code=siopeCodeTipo
                        and   class.ente_proprietario_id=enteProprietarioId
                        and   class.data_cancellazione is null
 				    	and   date_trunc('day',dataElaborazione)>=date_trunc('day',class.validita_inizio)
	 		 		    and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(class.validita_fine,dataElaborazione));
                     end if;
                   if siopeCodeTipoId is not null then --2
                    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                     		  ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                     		  ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                    		  ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
		                      ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
		                      ||' mifCountRec='||mifCountRec
	                          ||' tipo flusso '||MANDMIF_TIPO||'.Lettura valore class tipo='||flussoElabMifElabRec.flussoElabMifParam||'.';


                	select class.classif_code, class.classif_desc
                           into flussoElabMifValore,flussoElabMifValoreDesc
                    from siac_r_ordinativo_class cord, siac_t_class class
                    where cord.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                    and cord.data_cancellazione is null
                    and cord.validita_fine is null
                    and class.classif_id=cord.classif_id
                    and class.classif_tipo_id=siopeCodeTipoId
                    and class.classif_code!=siopeDef
                    and class.data_cancellazione is null;

                    if flussoElabMifValore is null then --3
	                    select class.classif_code, class.classif_desc
    		                   into flussoElabMifValore,flussoElabMifValoreDesc
	                    from siac_r_movgest_class  r,  siac_t_class class
    	                where r.movgest_ts_id=mifOrdinativoIdRec.mif_ord_movgest_ts_id
        	            and   r.data_cancellazione is null
            	        and   r.validita_fine is null
                	    and class.classif_id=r.classif_id
                    	and class.classif_tipo_id=siopeCodeTipoId
	                    and class.classif_code!=siopeDef
    	                and class.data_cancellazione is null;
                   end if; --3
                  end if; --2
                end if; --if  bAvvioSiopeNew=true then

                if flussoElabMifValore is not null then
                	mifFlussoOrdinativoRec.mif_ord_class_codice_cge:=flussoElabMifValore;
                    codiceCge:=flussoElabMifValore;
	                descCge:=flussoElabMifValoreDesc;


               end if;
            end if; --param
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if; -- elab
        end if; -- attivo

	    -- <importo>
        flussoElabMifElabRec:=null;
        mifCountRec:=mifCountRec+1;
	    if codiceCge is not null then
    	flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
        			   ||' tipo flusso '||MANDMIF_TIPO||'.';
    	if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	    end if;

	    if flussoElabMifElabRec.flussoElabMifAttivo=true then
    	  if flussoElabMifElabRec.flussoElabMifElab=true then
                	mifFlussoOrdinativoRec.mif_ord_class_importo:=mifFlussoOrdinativoRec.mif_ord_importo;
	      else
    	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	     end if;
    	end if;
	   end if;

       -- <classificazione_dati_siope_entrate>

       -- <tipo_debito_siope_c> COMMERCIALE
       flussoElabMifElabRec:=null;
       flussoElabMifValore:=null;
       isOrdCommerciale:=false;
       ordinativoSplitId:=null;
       ordinativoReintroitoId:=null;
       mifCountRec:=mifCountRec+1;
       flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
        			   ||' tipo flusso '||MANDMIF_TIPO||'.';
       if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	   end if;

	   if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
	          if flussoElabMifElabRec.flussoElabMifDef is not null and
                 flussoElabMifElabRec.flussoElabMifParam is not null then
				 -- 20.03.2018 Sofia SIAC-5968
                 if  tipoRelSPR is null then
                 		tipoRelSPR:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                 end if;
   				 -- 20.03.2018 Sofia SIAC-5968
                 if tipoRelREIORD is null then
                    tipoRelREIORD:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                 end if;

                 -- 20.03.2018 Sofia SIAC-5968
			     if tipoRelSPR is not null and tipoRelSPR!='' then
				  -- caso di ordinativo di incasso collegato a ordinativo di pagamento per Split
                  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
        			   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura ordinativo di pagamento SPLIT.';

  		          select ord.ord_id into ordinativoSplitId
			      from siac_r_ordinativo rOrd, siac_t_ordinativo ord,siac_d_ordinativo_tipo tipo,
			          siac_r_ordinativo_stato rstato, siac_d_ordinativo_stato stato, siac_d_relaz_tipo tiporel
				  where rord.ord_id_a=mifOrdinativoIdRec.mif_ord_ord_id
				  and   ord.ord_id=rord.ord_id_da
				  and   tipo.ord_tipo_id=ord.ord_tipo_id
				  and   tipo.ord_tipo_code='P'
			      and   rstato.ord_id=ord.ord_id
	              and   stato.ord_stato_id=rstato.ord_stato_id
	              and   stato.ord_stato_code!='A'
				  and   tiporel.relaz_tipo_id=rOrd.relaz_tipo_id
                  --and   tiporel.relaz_tipo_code=flussoElabMifElabRec.flussoElabMifParam -- 20.03.2018 Sofia SIAC-5968
                  and   tiporel.relaz_tipo_code=tipoRelSPR
				  and   rord.data_cancellazione is null
				  and   rord.validita_fine is null
				  and   ord.data_cancellazione is null
			      and   ord.validita_fine is null
			      and   rstato.data_cancellazione is null
	              and   rstato.validita_fine is null
                  limit 1;

            	  if ordinativoSplitId is not null then
                    -- 20.03.2018 Sofia SIAC-5968
                    --mifFlussoOrdinativoRec.mif_ord_class_tipo_debito=flussoElabMifElabRec.flussoElabMifDef;
                    isOrdCommerciale:=true;
        	      end if;
                end if;

                -- 20.03.2018 Sofia SIAC-5968
                if isOrdCommerciale=false and  tipoRelREIORD is not null and tipoRelREIORD!='' then

                  -- caso di ordinativo di incasso collegato a ordinativo di pagamento per Reintroito
                  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
        			   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura ordinativo di pagamento Rentroito.';

  		          select ord.ord_id into ordinativoReintroitoId
			      from siac_r_ordinativo rOrd, siac_t_ordinativo ord,siac_d_ordinativo_tipo tipo,
			           siac_d_relaz_tipo tiporel
				  where rord.ord_id_da=mifOrdinativoIdRec.mif_ord_ord_id
				  and   ord.ord_id=rord.ord_id_a
				  and   tipo.ord_tipo_id=ord.ord_tipo_id
				  and   tipo.ord_tipo_code='P'
				  and   tiporel.relaz_tipo_id=rOrd.relaz_tipo_id
                  and   tiporel.relaz_tipo_code=tipoRelREIORD
				  and   rord.data_cancellazione is null
				  and   rord.validita_fine is null
				  and   ord.data_cancellazione is null
			      and   ord.validita_fine is null
                  limit 1;


                  if ordinativoReintroitoId is not null then
                  	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
        			   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura ordinativo di pagamento Rentroito. Commerciale.';

                    if coalesce(tipoDocsComm,'')='' then
                      tipoDocsComm:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,3))||'|'||
                        trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,4))||'|'||
                        trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,5));
                    end if;

                  	isOrdCommerciale:=fnc_mif_ordinativo_esiste_documenti_splus(ordinativoReintroitoId,
			                                                                    tipoDocsComm,
                  				                                   	            enteProprietarioId
                                                                               );
                    if isOrdCommerciale=true then
                    	ordinativoSplitId:=ordinativoReintroitoId;
                    end if;

                  end if;

               end if;

               -- 20.03.2018 Sofia SIAC-5968
 			   if isOrdCommerciale=true then
	               mifFlussoOrdinativoRec.mif_ord_class_tipo_debito=flussoElabMifElabRec.flussoElabMifDef;

               end if;

              end if;
	      else
    	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	      end if;
       end if;

	   -- <tipo_debito_siope_nc> NON_COMMERCIALE se non COMMERCIALE -- NON COMMERCIALE
       flussoElabMifElabRec:=null;
       flussoElabMifValore:=null;
       codResult:=null;
       mifCountRec:=mifCountRec+1;
       if isOrdCommerciale=false then
        flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
        			   ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	    end if;

	    if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
           if flussoElabMifElabRec.flussoElabMifDef is not null then -- 20.03.2018 Sofia SIAC-5968
/*	          if flussoElabMifElabRec.flussoElabMifDef is not null then -- 20.03.2018 Sofia SIAC-5968
                   mifFlussoOrdinativoRec.mif_ord_class_tipo_debito_nc=flussoElabMifElabRec.flussoElabMifDef;
              end if;*/

              -- 20.03.2018 Sofia SIAC-5968 - test sul pdcFin di OP per verificare se IVA
              if ordinativoReintroitoId is not null and
                 flussoElabMifElabRec.flussoElabMifParam is not null then
                 tipoPdcIVA:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                 codePdcIVA:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
                 if coalesce(tipoPdcIVA ,'')!='' and
                    coalesce(codePdcIVA ,'')!='' then
                        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
		                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
        		               ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                		       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
		                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
        		               ||' mifCountRec='||mifCountRec
        					   ||' tipo flusso '||MANDMIF_TIPO||'. Lettura ordinativo di pagamento Rentroito. Iva.';
                    	select 1 into codResult
                        from siac_r_ordinativo_class rc, siac_t_class c, siac_d_class_tipo tipo
                        where rc.ord_id=ordinativoReintroitoId
                        and   c.classif_id=rc.classif_id
                        and   tipo.classif_tipo_id=c.classif_tipo_id
                        and   tipo.classif_tipo_code=tipoPdcIVA
                        and   c.classif_code like codePdcIVA||'%'
                        and   rc.data_cancellazione is null
                        and   rc.validita_fine is null;

                        if codResult is not null then
                        	flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,2));
                        end if;
                 end if;
              end if;
              -- 20.03.2018 Sofia SIAC-5968
              if flussoElabMifValore is null then
              	flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
              end if;
              -- 20.03.2018 Sofia SIAC-5968
              if flussoElabMifValore is not null then
	              mifFlussoOrdinativoRec.mif_ord_class_tipo_debito_nc=flussoElabMifValore;
              end if;
            end if;
	      else
    	    RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	      end if;
        end if;
       end if;


       mifCountRec:=mifCountRec+12;
       -- <fatture_siope>
	   -- </fatture_siope>

       -- <dati_ARCONET_siope>
       -- <codice_economico_siope>
       flussoElabMifElabRec:=null;
       flussoElabMifValore:=null;
       mifCountRec:=mifCountRec+1;
       flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
       strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
       if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
       end if;
       if flussoElabMifElabRec.flussoElabMifAttivo=true then
        if flussoElabMifElabRec.flussoElabMifElab=true then
         if flussoElabMifElabRec.flussoElabMifParam is not null then

         	if codiceFinVTbr is null then
            	codiceFinVTbr:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
            end if;
 			if codiceFinVTbr is not null and codiceFinVTipoTbrId is null then --1
				-- codiceFinVTipoTbrId
                strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                     		  ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                     		  ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                    		  ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
		                      ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
		                      ||' mifCountRec='||mifCountRec
	                          ||' tipo flusso '||MANDMIF_TIPO||'.Lettura id class tipo='||codiceFinVTbr||'.';
			   select tipo.classif_tipo_id into strict codiceFinVTipoTbrId
			   from siac_d_class_tipo tipo
			   where tipo.ente_proprietario_id=enteProprietarioId
			   and   tipo.classif_tipo_code=codiceFinVTbr
			   and   tipo.data_cancellazione is null
			   and   date_trunc('day',dataElaborazione)>=date_trunc('day',validita_inizio)
			   and   date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(validita_fine,dataElaborazione));
            end if; --1

            if codiceFinVTipoTbrId is not null then --2
      			strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura piano_conti_fin_V_code '||codiceFinVTbr||' [siac_r_ordinativo_class] .';
		    	select class.classif_code into flussoElabMifValore
  	  		    from siac_r_ordinativo_class r, siac_t_class class
	       	    where r.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
	      	      and   class.classif_id=r.classif_id
 		          and   class.classif_tipo_id=codiceFinVTipoTbrId
		 	      and   r.data_cancellazione is null
			      and   r.validita_fine is NULL
	  		      and   class.data_cancellazione is null;

			   if flussoElabMifValore is null then --3
		     	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura piano_conti_fin_V_code '||codiceFinVTbr||' [siac_r_movgest_class].';

             	   select class.classif_desc into flussoElabMifValore
	    	       from siac_r_movgest_class rclass, siac_t_class class
	               where rclass.movgest_ts_id=mifOrdinativoIdRec.mif_ord_movgest_ts_id
   		           and   rclass.data_cancellazione is null
       		       and   rclass.validita_fine is null
           		   and   class.classif_id=rclass.classif_id
	               and   class.classif_tipo_id=codiceFinVTipoTbrId
   		           and   class.data_cancellazione is null
	               order by rclass.movgest_classif_id
   		           limit 1;
   	           end if; --3
           end if;--2
 /*      	  if collEventoCodeId is null then
        	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'Lettura tipo evento '||flussoElabMifElabRec.flussoElabMifParam||'.';

            select coll.collegamento_tipo_id into collEventoCodeId
            from siac_d_collegamento_tipo coll
            where coll.ente_proprietario_id=enteProprietarioId
            and   coll.collegamento_tipo_code=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1))
            and   coll.data_cancellazione is null
		    and   date_trunc('day',dataElaborazione)>=date_trunc('day',coll.validita_inizio)
		    and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(coll.validita_fine,dataElaborazione));
         end if;

	     if collEventoCodeId is not null then
		  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'Lettura conto economico patrimoniale.';
          select conto.pdce_conto_code into flussoElabMifValore
          from siac_t_pdce_conto conto, siac_t_reg_movfin regMovFin, siac_r_evento_reg_movfin rEvento,
               siac_d_collegamento_tipo coll, siac_d_evento evento,
               siac_t_mov_ep reg, siac_r_reg_movfin_stato regstato, siac_d_reg_movfin_stato stato,
               siac_t_prima_nota pn, siac_r_prima_nota_stato rpnota, siac_d_prima_nota_stato pnstato,
               siac_t_mov_ep_det det
          where coll.ente_proprietario_id=enteProprietarioId
          and   coll.collegamento_tipo_id=collEventoCodeId
          and   evento.collegamento_tipo_id=coll.collegamento_tipo_id
          and   rEvento.evento_id=evento.evento_id
          and   rEvento.campo_pk_id=mifOrdinativoIdRec.mif_ord_ord_id
          and   regMovFin.regmovfin_id=rEvento.regmovfin_id
--          and   regMovFin.ambito_id=ambitoFinId  -- AMBITO_FIN
          and   regstato.regmovfin_id=regMovFin.regmovfin_id
          and   stato.regmovfin_stato_id=regstato.regmovfin_stato_id
          and   stato.regmovfin_stato_code!=REGMOVFIN_STATO_A
          and   reg.regmovfin_id=regMovFin.regmovfin_id
          and   pn.pnota_id=reg.regep_id
          and   rpnota.pnota_id=pn.pnota_id
          and   pnstato.pnota_stato_id=rpnota.pnota_stato_id
          and   pnstato.pnota_stato_code!=REGMOVFIN_STATO_A
          and   det.movep_id=reg.movep_id
          and   det.movep_det_segno=SEGNO_ECONOMICO -- Avere
		  and   conto.pdce_conto_id=det.pdce_conto_id
          and   regMovFin.data_cancellazione is null
          and   regMovFin.validita_fine is null
          and   rEvento.data_cancellazione is null
          and   rEvento.validita_fine is null
          and   evento.data_cancellazione is null
          and   evento.validita_fine is null
          and   reg.data_cancellazione is null
          and   reg.validita_fine is null
          and   regstato.data_cancellazione is null
          and   regstato.validita_fine is null
          and   pn.data_cancellazione is null
          and   pn.validita_fine is null
          and   rpnota.data_cancellazione is null
          and   rpnota.validita_fine is null
          and   conto.data_cancellazione is null
          and   conto.validita_fine is null
          order by pn.pnota_id desc
          limit 1;
         end if;*/

	    end if; -- param
        if flussoElabMifValore is not null then
	        mifFlussoOrdinativoRec.mif_ord_class_economico:=flussoElabMifValore;
        end if;
       else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
       end if;
      end if;

	  -- <importo_codice_economico_siope>
	  mifCountRec:=mifCountRec+1;
      if mifFlussoOrdinativoRec.mif_ord_class_economico is not null then
      	flussoElabMifElabRec:=null;
	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
    	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	    if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
    	end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
         		mifFlussoOrdinativoRec.mif_ord_class_importo_economico:=mifFlussoOrdinativoRec.mif_ord_importo;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;
      end if;

	  -- <codice_ue_siope>
	  flussoElabMifElabRec:=null;
	  flussoElabMifValore:=null;
	  mifCountRec:=mifCountRec+1;
	  flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	  if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	  end if;
	  if flussoElabMifElabRec.flussoElabMifAttivo=true then
   		if flussoElabMifElabRec.flussoElabMifElab=true then
	     if flussoElabMifElabRec.flussoElabMifParam is not null then
    	 	if codiceUECodeTipo is null then
				codiceUECodeTipo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
	        end if;

         	if codiceUECodeTipo is not null and codiceUECodeTipoId is null then
        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_d_class_tipo.';

        	 select tipo.classif_tipo_id into codiceUECodeTipoId
             from  siac_d_class_tipo tipo
             where tipo.ente_proprietario_id=enteProprietarioId
             and   tipo.classif_tipo_code=codiceUECodeTipo
             and   tipo.data_cancellazione is null
		     and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
		 	 and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));
       		end if;

	        if codiceUECodeTipoId is not null then

        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_t_class [siac_r_ordinativo_class].';
        	 select class.classif_code into flussoElabMifValore
             from siac_r_ordinativo_class rclass, siac_t_class class
             where rclass.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
             and   rclass.data_cancellazione is null
             and   rclass.validita_fine is null
             and   class.classif_id=rclass.classif_id
             and   class.classif_tipo_id=codiceUECodeTipoId
             and   class.data_cancellazione is null
             order by rclass.ord_classif_id
             limit 1;

		     if flussoElabMifValore is null then
            	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_t_class [siac_r_movgest_class].';
				select class.classif_code into flussoElabMifValore
	    	    from siac_r_movgest_class rclass, siac_t_class class
	            where rclass.movgest_ts_id=mifOrdinativoIdRec.mif_ord_movgest_ts_id
	            and   rclass.data_cancellazione is null
	            and   rclass.validita_fine is null
	            and   class.classif_id=rclass.classif_id
	            and   class.classif_tipo_id=codiceUECodeTipoId
	            and   class.data_cancellazione is null
	            order by rclass.movgest_classif_id
	            limit 1;
             end if;
        	end if;

	        if flussoElabMifValore is not null then
				mifFlussoOrdinativoRec.mif_ord_class_transaz_ue:=flussoElabMifValore;
    	    end if;
          end if;
	   else
		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  	   end if;
      end if;

	  -- <codice_entrata_siope>
	  flussoElabMifElabRec:=null;
	  flussoElabMifValore:=null;
	  mifCountRec:=mifCountRec+1;
	  flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
	  if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	  end if;
	  if flussoElabMifElabRec.flussoElabMifAttivo=true then
   		if flussoElabMifElabRec.flussoElabMifElab=true then
	     if flussoElabMifElabRec.flussoElabMifParam is not null then
    	 	if ricorrenteCodeTipo is null then
				ricorrenteCodeTipo:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
	        end if;

         	if ricorrenteCodeTipo is not null and ricorrenteCodeTipoId is null then
        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_d_class_tipo.';

        	 select tipo.classif_tipo_id into ricorrenteCodeTipoId
             from  siac_d_class_tipo tipo
             where tipo.ente_proprietario_id=enteProprietarioId
             and   tipo.classif_tipo_code=ricorrenteCodeTipo
             and   tipo.data_cancellazione is null
		     and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
		 	 and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));
       		end if;

	        if ricorrenteCodeTipoId is not null then

        	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_t_class [siac_r_ordinativo_class].';
        	 select upper(class.classif_desc) into flussoElabMifValore
             from siac_r_ordinativo_class rclass, siac_t_class class
             where rclass.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
             and   rclass.data_cancellazione is null
             and   rclass.validita_fine is null
             and   class.classif_id=rclass.classif_id
             and   class.classif_tipo_id=ricorrenteCodeTipoId
             and   class.data_cancellazione is null
             order by rclass.ord_classif_id
             limit 1;

		     if flussoElabMifValore is null then
            	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura siac_t_class [siac_r_movgest_class].';
				select upper(class.classif_desc) into flussoElabMifValore
	    	    from siac_r_movgest_class rclass, siac_t_class class
	            where rclass.movgest_ts_id=mifOrdinativoIdRec.mif_ord_movgest_ts_id
	            and   rclass.data_cancellazione is null
	            and   rclass.validita_fine is null
	            and   class.classif_id=rclass.classif_id
	            and   class.classif_tipo_id=ricorrenteCodeTipoId
	            and   class.data_cancellazione is null
	            order by rclass.movgest_classif_id
	            limit 1;
             end if;
        	end if;

	        if flussoElabMifValore is not null then
				mifFlussoOrdinativoRec.mif_ord_class_ricorrente_entrata:=flussoElabMifValore;
    	    end if;
          end if;
	   else
		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  	   end if;
      end if;



       -- </dati_ARCONET_siope>
       -- </classificazione_dati_siope_entrate>
       -- </classificazione>

       -- <bollo>
       -- <assoggettamento_bollo>
   	  mifCountRec:=mifCountRec+1;
      ordCodiceBolloDesc:=null;
      codiceBolloPlusDesc:=null;
      codiceBolloPlusEsente:=false;
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      if mifOrdinativoIdRec.mif_ord_codbollo_id is not null then


	   flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
  	    end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
	   	  if flussoElabMifElabRec.flussoElabMifElab=true then
            -- se REGOLARIZZAZIONE IMPOSTAZIONE DI ESENTE BOLLO
            if flussoElabMifElabRec.flussoElabMifParam is not null and
               flussoElabMifElabRec.flussoElabMifDef is not null and
               mifFlussoOrdinativoRec.mif_ord_vers_tipo_riscos is not null and
/*               mifFlussoOrdinativoRec.mif_ord_vers_tipo_riscos=
                 trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1)) -- REGOLARIZZAZIONE*/
               mifFlussoOrdinativoRec.mif_ord_vers_tipo_riscos in  -- siac-5652 14.12.2017 Sofia
               ( trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1)), -- REGOLARIZZAZIONE
                 trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2))  -- REGOLARIZZAZIONE ACCREDITO BANCA d'ITALIA
               )
                  then
                   mifFlussoOrdinativoRec.mif_ord_bollo_carico:=
                       trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
                   mifFlussoOrdinativoRec.mif_ord_bollo_esenzione:=
                    trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,2));

                   codiceBolloPlusEsente:=true;
            end if;

            if mifFlussoOrdinativoRec.mif_ord_bollo_carico  is null then
          	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura codice bollo.';

             select bollo.codbollo_desc , replace(plus.codbollo_plus_desc,'BENEFICIARIO','VERSANTE'), plus.codbollo_plus_esente
                   into ordCodiceBolloDesc, codiceBolloPlusDesc, codiceBolloPlusEsente
             from siac_d_codicebollo bollo, siac_d_codicebollo_plus plus, siac_r_codicebollo_plus rp
             where bollo.codbollo_id=mifOrdinativoIdRec.mif_ord_codbollo_id
             and   rp.codbollo_id=bollo.codbollo_id
             and   plus.codbollo_plus_id=rp.codbollo_plus_id
             and   rp.data_cancellazione is null
             and   rp.validita_fine is null;

             if coalesce(codiceBolloPlusDesc,NVL_STR)!=NVL_STR  then
            	mifFlussoOrdinativoRec.mif_ord_bollo_carico:=codiceBolloPlusDesc;
             end if;
            end if;
          else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		  end if;
        end if;
       end if;

      -- <causale_esenzione_bollo>
   	  mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=null;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      if codiceBolloPlusEsente=true and coalesce(ordCodiceBolloDesc,NVL_STR)!=NVL_STR then
      	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
  	    end if;
        if flussoElabMifElabRec.flussoElabMifAttivo=true then
	   	  if flussoElabMifElabRec.flussoElabMifElab=true then
--              27.06.2018 Sofia siac-6272
--			mifFlussoOrdinativoRec.mif_ord_bollo_esenzione:=substring(ordCodiceBolloDesc from 1 for 30);
          	mifFlussoOrdinativoRec.mif_ord_bollo_esenzione:=ordCodiceBolloDesc;
          else
			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  		  end if;
        end if;
      end if;
	  -- </bollo>

      -- <versante>
      -- <anagrafica_versante>
      flussoElabMifElabRec:=null;
      flussoElabMifValore:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

      if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;

      if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
            	flussoElabMifValore:=soggettoRec.soggetto_desc;

                if flussoElabMifValore is not null then
	                mifFlussoOrdinativoRec.mif_ord_anag_versante:=substring(flussoElabMifValore from 1 for 140);
                end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
      end if;

	   -- <indirizzo_versante>
       flussoElabMifElabRec:=null;
       flussoElabMifValore:=null;
       mifCountRec:=mifCountRec+1;
       flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
       strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' indirizzo_benef mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

        if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
        end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
         if flussoElabMifElabRec.flussoElabMifElab=true then
            	select * into indirizzoRec
                from siac_t_indirizzo_soggetto indir
                where indir.soggetto_id=soggettoRifId
                and   indir.principale='S'
                and   indir.data_cancellazione is null
         	    and   indir.validita_fine is null;
	            if indirizzoRec is null then
                    isIndirizzoBenef:=false;
	            end if;

				if isIndirizzoBenef=true then
                 if indirizzoRec.via_tipo_id is not null then
            		select tipo.via_tipo_code into flussoElabMifValore
	                from siac_d_via_tipo tipo
    	            where tipo.via_tipo_id=indirizzoRec.via_tipo_id
        	        and   tipo.data_cancellazione is null
         		    and   date_trunc('day',dataElaborazione)>=date_trunc('day',tipo.validita_inizio)
 		 			and	  date_trunc('day',dataElaborazione)<=date_trunc('day',coalesce(tipo.validita_fine,dataElaborazione));

         	        if flussoElabMifValore is not null then
        	        	flussoElabMifValore:=flussoElabMifValore||' ';
    	            end if;
             	 end if;

            	 flussoElabMifValore:=trim(both from coalesce(flussoElabMifValore,'')||coalesce(indirizzoRec.toponimo,'')
                                 ||' '||coalesce(indirizzoRec.numero_civico,''));

	             if flussoElabMifValore is not null then
		            mifFlussoOrdinativoRec.mif_ord_indir_versante:=substring(flussoElabMifValore from 1 for 30);
        	     end if;
               end if;
         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;

   	   -- <cap_versante>
       mifCountRec:=mifCountRec+1;
	   if isIndirizzoBenef=true then
        if indirizzoRec.zip_code is not null  then
         flussoElabMifElabRec:=null;

         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
	            mifFlussoOrdinativoRec.mif_ord_cap_versante:=lpad(indirizzoRec.zip_code,5,'0');
          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
         end if;
        end if;
       end if;


       -- <localita_beneficiario>
       mifCountRec:=mifCountRec+1;
	   if isIndirizzoBenef=true then
        if indirizzoRec.comune_id is not null  then
         flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;

	     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
          	select com.comune_desc into flussoElabMifValore
            from siac_t_comune com
            where com.comune_id=indirizzoRec.comune_id
            and   com.data_cancellazione is null
            and   com.validita_fine is null;

            if flussoElabMifValore is not null then
	            mifFlussoOrdinativoRec.mif_ord_localita_versante:=substring(flussoElabMifValore from 1 for 30);
            end if;
          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
         end if;
        end if;
	  end if;

	  -- <provincia_beneficiario>
      mifCountRec:=mifCountRec+1;
	  if isIndirizzoBenef=true then
        if indirizzoRec.comune_id is not null  then
         flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
          	select prov.sigla_automobilistica into flussoElabMifValore
            from siac_r_comune_provincia provRel, siac_t_provincia prov
            where provRel.comune_id=indirizzoRec.comune_id
            and   provRel.data_cancellazione is null
            and   provRel.validita_fine is null
            and   prov.provincia_id=provRel.provincia_id
            and   prov.data_cancellazione is null
            and   prov.validita_fine is null
            order by provRel.data_creazione;

            if flussoElabMifValore is not null then
	            mifFlussoOrdinativoRec.mif_ord_prov_versante:=flussoElabMifValore;
            end if;
          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
         end if;
        end if;
	 end if;


	 -- <stato_versante>
  	 mifCountRec:=mifCountRec+1;

     -- <partita_iva_versante>
     mifCountRec:=mifCountRec+1;
     if soggettoRec.partita_iva is not null or
        (soggettoRec.partita_iva is null and soggettoRec.codice_fiscale is not null and length(soggettoRec.codice_fiscale)=11) then
      	 flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
          		if soggettoRec.partita_iva is not null then
                	 mifFlussoOrdinativoRec.mif_ord_partiva_versante:=soggettoRec.partita_iva;
                else
                	mifFlussoOrdinativoRec.mif_ord_partiva_versante:=trim ( both ' ' from soggettoRec.codice_fiscale);
                end if;

          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
        end if;
      end if;

      -- <codice_fiscale_versante>
      mifCountRec:=mifCountRec+1;
      if soggettoRec.partita_iva is null  then
      	 flussoElabMifElabRec:=null;
         flussoElabMifValore:=null;
         flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
         strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
         end if;

         if flussoElabMifElabRec.flussoElabMifAttivo=true then
          if flussoElabMifElabRec.flussoElabMifElab=true then
          	if soggettoRec.codice_fiscale is not null and
  			   length(soggettoRec.codice_fiscale)=16 then
				flussoElabMifValore:=trim ( both ' ' from soggettoRec.codice_fiscale);
            end if;

            if flussoElabMifValore is not null then
		            mifFlussoOrdinativoRec.mif_ord_codfisc_versante:=flussoElabMifValore;
            end if;
          else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
          end if;
         end if;
      end if;
     -- </versante>

     -- <causale>
	 flussoElabMifElabRec:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
     if flussoElabMifElabRec.flussoElabMifId is null then
  	 	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;
     if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
            mifFlussoOrdinativoRec.mif_ord_vers_causale:=
	            replace(replace(substring(mifOrdinativoIdRec.mif_ord_desc from 1 for 370) , chr(VT_ASCII),chr(SPACE_ASCII)),chr(BS_ASCII),NVL_STR);
	     else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	     end if;
      end if;

      -- <sospeso>
      -- <sospesi>
      -- <numero_provvisorio>
      -- <importo_provvisorio>
      mifCountRec:=mifCountRec+2;


      -- <mandato_associato>
      -- <numero_mandato>
      -- <progressivo_associato>
      mifCountRec:=mifCountRec+2;

      -- <informazioni_aggiuntive>
      -- <lingua>
     flussoElabMifElabRec:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
     if flussoElabMifElabRec.flussoElabMifId is null then
  	 	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;
     if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
        	if flussoElabMifElabRec.flussoElabMifDef is not null then
        		mifFlussoOrdinativoRec.mif_ord_lingua:=flussoElabMifElabRec.flussoElabMifDef;
            end if;
	     else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	     end if;
     end if;

     -- <riferimento_documento_esterno>
     mifCountRec:=mifCountRec+1;
   	 flussoElabMifElabRec:=null;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
     if flussoElabMifElabRec.flussoElabMifId is null then
  		 	RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;
   	 if flussoElabMifElabRec.flussoElabMifAttivo=true then
		if flussoElabMifElabRec.flussoElabMifElab=true then
        		if flussoElabMifElabRec.flussoElabMifDef is not null AND
                   flussoElabMifElabRec.flussoElabMifParam is not null then -- 30.07.2018 Sofia siac-6202

					-- 30.07.2018 Sofia siac-6202
                    if coalesce(trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1)),'')!='' then
                       codResult:=null;
                       strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura presenza classificatore ritenute stipendi.';
                       select 1 into codResult
                       from siac_r_ordinativo_class rc, siac_t_class c , siac_d_class_tipo tipo
                       where tipo.ente_proprietario_id=enteProprietarioId
                       and   tipo.classif_tipo_code=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1))
                       and   c.classif_tipo_id=tipo.classif_tipo_id
                       and   rc.classif_id=c.classif_id
                       and   rc.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                       and   rc.data_cancellazione is null
                       and   rc.validita_fine is null;

                       if codResult is not null then
		                   select * into flussoElabMifValore
                           from fnc_mif_ordinativo_splus_get_mese(mifOrdinativoIdRec.mif_ord_data_emissione);
                       end if;

                       if coalesce(flussoElabMifValore,'')!='' then
                       	flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,2))
                                             ||' '||flussoElabMifValore;
                       end if;
                    end if;
                    -- 30.07.2018 Sofia siac-6202



                    -- 30.07.2018 Sofia siac-6202
                    if  coalesce(flussoElabMifValore,'')=''   then
                	 strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura presenza allegati cartacei.';
					 codResult:=null;
                	 select 1 into codResult
				     from siac_r_ordinativo_attr rattr
					 where rattr.ord_id=mifOrdinativoIdRec.mif_ord_ord_id
                     and   rattr.attr_id=ordAllegatoCartAttrId
				     and   rattr.boolean='S'
					 and   rattr.data_cancellazione is null
				     and   rattr.validita_fine is null;

/*                     if codResult is not null then
		                mifFlussoOrdinativoRec.mif_ord_rif_doc_esterno:=flussoElabMifElabRec.flussoElabMifDef;
			         end if;*/
                     if codResult is not null then
		                flussoElabMifValore:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifDef,SEPARATORE,1));
			         end if;
                    end if;

					-- 30.07.2018 Sofia siac-6202
			    	if  coalesce(flussoElabMifValore,'')!=''   then
                    	mifFlussoOrdinativoRec.mif_ord_rif_doc_esterno:=flussoElabMifValore;

                    end if;

             end if;
		else
    		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	    end if;
      end if;
      -- </informazioni_aggiuntive>

      -- <sostituzione_reversale>
      -- <numero_reversale_da_sostituire>
      flussoElabMifElabRec:=null;
      ordSostRec:=null;
      mifCountRec:=mifCountRec+1;
      flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
      strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

      if flussoElabMifElabRec.flussoElabMifId is null then
  		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
      end if;
      if flussoElabMifElabRec.flussoElabMifAttivo=true then
     	if flussoElabMifElabRec.flussoElabMifElab=true then
        			strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura ordinativi di sostituzione.';
                	select * into ordSostRec
                    from fnc_mif_ordinativo_sostituito( mifOrdinativoIdRec.mif_ord_ord_id,
 														ordRelazCodeTipoId,
                                                        dataElaborazione,dataFineVal);

                    if ordSostRec is not null then
                    	mifFlussoOrdinativoRec.mif_ord_num_ord_colleg:=lpad(ordSostRec.ordNumeroSostituto::varchar,NUM_SETTE,ZERO_PAD);
                    end if;
    	else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	    end if;

      end if;

      mifCountRec:=mifCountRec+1;
      -- <progressivo_reversale_da_sostituire>
      if mifFlussoOrdinativoRec.mif_ord_num_ord_colleg is not null then
       	flussoElabMifElabRec:=null;
  	    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
    	if flussoElabMifElabRec.flussoElabMifId is null then
  	 		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	    end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
     		if flussoElabMifElabRec.flussoElabMifElab=true then
            	if flussoElabMifElabRec.flussoElabMifDef is not null then
                	mifFlussoOrdinativoRec.mif_ord_progr_ord_colleg:=flussoElabMifElabRec.flussoElabMifDef;
                end if;
     	    else
     			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
	    end if;
 	 end if;

     -- <esercizio_reversale_da_sostituire>
     mifCountRec:=mifCountRec+1;
     if mifFlussoOrdinativoRec.mif_ord_num_ord_colleg is not null then
        flussoElabMifElabRec:=null;
		flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
    	if flussoElabMifElabRec.flussoElabMifId is null then
  	 		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	    end if;

        if flussoElabMifElabRec.flussoElabMifAttivo=true then
     		if flussoElabMifElabRec.flussoElabMifElab=true then
               	mifFlussoOrdinativoRec.mif_ord_anno_ord_colleg:=ordSostRec.ordAnnoSostituto;
     	    else
     			RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	        end if;
	    end if;
    end if;
	-- </sostituzione_reversale>

    -- <dati_a_disposizione_ente_versante> facoltativo non valorizzato
    -- </informazioni_versante>

    -- <dati_a_disposizione_ente_reversale>
    -- <codice_distinta>
    flussoElabMifElabRec:=null;
    mifCountRec:=mifCountRec+1;
    flussoElabMifValore:=null;
    flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
     if flussoElabMifElabRec.flussoElabMifId is null then
  	 		RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	 end if;

     if flussoElabMifElabRec.flussoElabMifAttivo=true then
      if flussoElabMifElabRec.flussoElabMifElab=true then
      		if mifOrdinativoIdRec.mif_ord_dist_id is not null then
				strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'. Lettura distinta [siac_d_distinta].';
            	select  d.dist_code into flussoElabMifValore
                from siac_d_distinta d
                where d.dist_id=mifOrdinativoIdRec.mif_ord_dist_id;
            end if;

            if flussoElabMifValore is not null then
              	mifFlussoOrdinativoRec.mif_ord_codice_distinta:=flussoElabMifValore;
            end if;
      else
     		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
	  end if;
	 end if;

     -- <atto_contabile>
     flussoElabMifElabRec:=null;
     flussoElabMifValore:=null;
     mifCountRec:=mifCountRec+1;
     flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
     strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
     if flussoElabMifElabRec.flussoElabMifId is null then
            RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
     end if;
     if flussoElabMifElabRec.flussoElabMifAttivo=true then
	     if flussoElabMifElabRec.flussoElabMifElab=true then
         	if flussoElabMifElabRec.flussoElabMifParam is not null then
                if attoAmmTipoAllRag is null then
            		attoAmmTipoAllRag:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,1));
                end if;
                if attoAmmStrTipoRag is null then
                	attoAmmStrTipoRag:=trim (both ' ' from split_part(flussoElabMifElabRec.flussoElabMifParam,SEPARATORE,2));
         		end if;

                if attoAmmTipoAllRag is not null and  attoAmmStrTipoRag is not null then

                 flussoElabMifValore:=fnc_mif_estremi_attoamm_all(mifOrdinativoIdRec.mif_ord_atto_amm_id,
                 										          attoAmmTipoAllRag,attoAmmStrTipoRag,
                                                                  dataElaborazione, dataFineVal);

                end if;
          	end if;

            if flussoElabMifValore is not null then
                 	mifFlussoOrdinativoRec.mif_ord_codice_atto_contabile:=flussoElabMifValore;
            end if;

         else
            RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
         end if;
        end if;


      -- 15.01.2018 Sofia SIAC-5765
      -- <codice_operatore>
	  flussoElabMifElabRec:=null;
	  flussoElabMifValore:=null;
	  flussoElabMifValoreDesc:=null;
	  mifCountRec:=mifCountRec+1;
	  flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];
	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.';

	  if flussoElabMifElabRec.flussoElabMifId is null then
  		  RAISE EXCEPTION ' Configurazione tag/campo non presente in archivio.';
	  end if;
	  if flussoElabMifElabRec.flussoElabMifAttivo=true then
   		if flussoElabMifElabRec.flussoElabMifElab=true then


         if mifOrdinativoIdRec.mif_ord_login_creazione is not null then
			flussoElabMifValore:=mifOrdinativoIdRec.mif_ord_login_creazione;
         end if;

         if flussoElabMifValore is not null then
        	select substring(s.soggetto_desc  from 1 for 12)  into flussoElabMifValoreDesc
			from siac_t_account a, siac_r_soggetto_ruolo r, siac_t_soggetto s
			where a.ente_proprietario_id=enteProprietarioId
            and   a.account_code=flussoElabMifValore
			and   r.soggeto_ruolo_id=a.soggeto_ruolo_id
			and   s.soggetto_id=r.soggetto_id
            and   r.data_cancellazione is null
            and   r.validita_fine is null
            and   a.data_cancellazione is null
            and   a.validita_fine is null;

            if 	flussoElabMifValoreDesc is not null then
            	flussoElabMifValore:=flussoElabMifValoreDesc;
            end if;
         end if;

         if flussoElabMifValore is not null then
            mifFlussoOrdinativoRec.mif_ord_code_operatore:=substring(flussoElabMifValore from 1 for 12);
         end if;
       else
		RAISE EXCEPTION ' Configurazione tag/campo  non elaborabile.';
  	   end if;
     end if;
    -- </dati_a_disposizione_ente_reversale>
    -- </reversale>



  /*raise notice 'codice_funzione= %',mifFlussoOrdinativoRec.mif_ord_codice_funzione;
  raise notice 'numero_reversale= %',mifFlussoOrdinativoRec.mif_ord_numero;
  raise notice 'data_reversale= %',mifFlussoOrdinativoRec.mif_ord_data;
  raise notice 'importo_reversale= %',mifFlussoOrdinativoRec.mif_ord_importo;*/

  strMessaggio:='Inserimento mif_t_ordinativo_entrata per ord. numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
        INSERT INTO mif_t_ordinativo_entrata
        (
		 mif_ord_flusso_elab_mif_id,
		 mif_ord_ord_id,
		 mif_ord_bil_id,
		 mif_ord_anno,
		 mif_ord_numero,
         mif_ord_codice_funzione,
		 mif_ord_data,
		 mif_ord_importo,
		 mif_ord_bci_tipo_contabil,
		 mif_ord_bci_tipo_entrata,
		 --mif_ord_bci_numero_doc,
		 mif_ord_destinazione,
		 mif_ord_codice_abi_bt,
		 mif_ord_codice_ente,
		 mif_ord_desc_ente,
		 mif_ord_codice_ente_bt,
		 mif_ord_anno_esercizio,
         mif_ord_codice_flusso_oil,
		 mif_ord_data_creazione_flusso,
		 mif_ord_anno_flusso,
         mif_ord_id_flusso_oil,
		 mif_ord_codice_struttura,
		 mif_ord_ente_localita,
		 mif_ord_ente_indirizzo,
		 mif_ord_cod_raggrup,
		 mif_ord_progr_vers,
		 mif_ord_class_codice_cge,
		 mif_ord_class_importo,
		 mif_ord_codifica_bilancio,
         mif_ord_capitolo,
		 mif_ord_articolo,
		 mif_ord_desc_codifica,
         mif_ord_desc_codifica_bil,
		 mif_ord_gestione,
		 mif_ord_anno_res,
		 mif_ord_importo_bil,
		 mif_ord_anag_versante,
		 mif_ord_indir_versante,
		 mif_ord_cap_versante,
		 mif_ord_localita_versante,
		 mif_ord_prov_versante,
		 mif_ord_partiva_versante,
		 mif_ord_codfisc_versante,
		 mif_ord_bollo_esenzione,
		 mif_ord_vers_tipo_riscos,
		 mif_ord_vers_cod_riscos,
		 mif_ord_vers_importo,
		 mif_ord_vers_causale,
		 mif_ord_lingua,
		 mif_ord_rif_doc_esterno,
		 mif_ord_info_tesoriere,
		 mif_ord_flag_copertura,
		 mif_ord_sost_rev,
		 mif_ord_num_ord_colleg,
		 mif_ord_progr_ord_colleg,
		 mif_ord_anno_ord_colleg,
		 mif_ord_numero_acc,
		 mif_ord_code_operatore, -- 15.01.2018 Sofia SIAC-5765
		 mif_ord_siope_codice_cge,
		 mif_ord_siope_descri_cge,
		 mif_ord_descri_estesa_cap,
         mif_ord_codice_ente_ipa, -- newSiope+
	     mif_ord_codice_ente_istat,
		 mif_ord_codice_ente_tramite,
		 mif_ord_codice_ente_tramite_bt,
		 mif_ord_riferimento_ente,
         mif_ord_vers_cc_postale,
		 mif_ord_class_tipo_debito,
         mif_ord_class_tipo_debito_nc,
		 mif_ord_class_economico,
		 mif_ord_class_importo_economico,
		 mif_ord_class_transaz_ue,
		 mif_ord_class_ricorrente_entrata,
		 mif_ord_bollo_carico,
		 mif_ord_stato_versante,
		 mif_ord_codice_distinta,
		 mif_ord_codice_atto_contabile, -- newSiope+
  		 validita_inizio,
         ente_proprietario_id,
  		 login_operazione
		)
		VALUES
        (
  		 flussoElabMifLogId, --idElaborazione univoco -- mif_ord_flusso_elab_mif_id
  		 mifOrdinativoIdRec.mif_ord_ord_id,     -- mif_ord_ord_id
		 mifOrdinativoIdRec.mif_ord_bil_id,     -- mif_ord_bil_id
  		 mifOrdinativoIdRec.mif_ord_ord_anno,   -- mif_ord_anno
  		 mifFlussoOrdinativoRec.mif_ord_numero, -- mif_ord_numero
  		 mifFlussoOrdinativoRec.mif_ord_codice_funzione, -- mif_ord_codice_funzione
  		 mifFlussoOrdinativoRec.mif_ord_data, -- mif_ord_data
--  	     (case when mifFlussoOrdinativoRec.mif_ord_codice_funzione in (FUNZIONE_CODE_N,FUNZIONE_CODE_A) then
--                    '0.00' else mifFlussoOrdinativoRec.mif_ord_importo end), -- mif_ord_importo
         mifFlussoOrdinativoRec.mif_ord_importo,  -- mif_ord_importo
 		 mifFlussoOrdinativoRec.mif_ord_bci_tipo_contabil,  -- mif_ord_bci_tipo_contabil
  	     mifFlussoOrdinativoRec.mif_ord_bci_tipo_entrata,   -- mif_ord_bci_tipo_entrata
 		 --mifFlussoOrdinativoRec.mif_ord_bci_numero_doc,   -- mif_ord_bci_numero_doc
 	 	 mifFlussoOrdinativoRec.mif_ord_destinazione,       -- mif_ord_destinazione
 		 mifFlussoOrdinativoRec.mif_ord_codice_abi_bt,      -- mif_ord_codice_abi_bt
 		mifFlussoOrdinativoRec.mif_ord_codice_ente,         -- mif_ord_codice_ente
		mifFlussoOrdinativoRec.mif_ord_desc_ente,           -- mif_ord_desc_ente
  		mifFlussoOrdinativoRec.mif_ord_codice_ente_bt,      -- mif_ord_codice_ente_bt
 		mifFlussoOrdinativoRec.mif_ord_anno_esercizio,      -- mif_ord_anno_esercizio
--  		annoBilancio||flussoElabMifDistOilId::varchar,  -- flussoElabMifDistOilId
  		annoBilancio||flussoElabMifDistOilRetId::varchar,
        extract(year from now())||'-'||
        lpad(extract('month' from now())::varchar,2,'0')||'-'||
        lpad(extract('day' from now())::varchar,2,'0')||'T'||
        lpad(extract('hour' from now())::varchar,2,'0')||':'||
        lpad(extract('minute' from now())::varchar,2,'0')||':'||'00',  -- mif_ord_data_creazione_flusso
        extract(year from now())::integer,                  -- mif_ord_anno_flusso
		flussoElabMifOilId, --idflussoOil                   -- mif_ord_id_flusso_oil
 		mifFlussoOrdinativoRec.mif_ord_codice_struttura,  -- mif_ord_codice_struttura
 		mifFlussoOrdinativoRec.mif_ord_ente_localita,     -- mif_ord_ente_localita
		mifFlussoOrdinativoRec.mif_ord_ente_indirizzo,    -- mif_ord_ente_indirizzo
        mifFlussoOrdinativoRec.mif_ord_cod_raggrup,       -- mif_ord_cod_raggrup
 		mifFlussoOrdinativoRec.mif_ord_progr_vers,        -- mif_ord_progr_vers
 		mifFlussoOrdinativoRec.mif_ord_class_codice_cge,  -- mif_ord_class_codice_cge
        mifFlussoOrdinativoRec.mif_ord_class_importo,     -- mif_ord_class_importo
 		mifFlussoOrdinativoRec.mif_ord_codifica_bilancio, -- mif_ord_codifica_bilancio
        mifFlussoOrdinativoRec.mif_ord_capitolo,          -- mif_ord_capitolo
  		mifFlussoOrdinativoRec.mif_ord_articolo,          -- mif_ord_articolo
 		mifFlussoOrdinativoRec.mif_ord_desc_codifica,     -- mif_ord_desc_codifica
        mifFlussoOrdinativoRec.mif_ord_desc_codifica_bil, -- mif_ord_desc_codifica_bil
		mifFlussoOrdinativoRec.mif_ord_gestione,          -- mif_ord_gestione
 		mifFlussoOrdinativoRec.mif_ord_anno_res,          -- mif_ord_anno_res
        mifFlussoOrdinativoRec.mif_ord_importo_bil,       -- mif_ord_importo_bil
        mifFlussoOrdinativoRec.mif_ord_anag_versante,     -- mif_ord_anag_versante
  		mifFlussoOrdinativoRec.mif_ord_indir_versante,    -- mif_ord_indir_versante
		mifFlussoOrdinativoRec.mif_ord_cap_versante,      -- mif_ord_cap_versante
 		mifFlussoOrdinativoRec.mif_ord_localita_versante, -- mif_ord_localita_versante
  		mifFlussoOrdinativoRec.mif_ord_prov_versante,     -- mif_ord_prov_versante
 		mifFlussoOrdinativoRec.mif_ord_partiva_versante,
  		mifFlussoOrdinativoRec.mif_ord_codfisc_versante,
 		mifFlussoOrdinativoRec.mif_ord_bollo_esenzione,
        mifFlussoOrdinativoRec.mif_ord_vers_tipo_riscos,
        mifFlussoOrdinativoRec.mif_ord_vers_cod_riscos,
        mifFlussoOrdinativoRec.mif_ord_vers_importo,
        mifFlussoOrdinativoRec.mif_ord_vers_causale,
 		mifFlussoOrdinativoRec.mif_ord_lingua,
		mifFlussoOrdinativoRec.mif_ord_rif_doc_esterno,
 		mifFlussoOrdinativoRec.mif_ord_info_tesoriere,
 		mifFlussoOrdinativoRec.mif_ord_flag_copertura,
        mifFlussoOrdinativoRec.mif_ord_sost_rev,
		mifFlussoOrdinativoRec.mif_ord_num_ord_colleg,
		mifFlussoOrdinativoRec.mif_ord_progr_ord_colleg,
		mifFlussoOrdinativoRec.mif_ord_anno_ord_colleg,
		mifFlussoOrdinativoRec.mif_ord_numero_acc,
        mifFlussoOrdinativoRec.mif_ord_code_operatore, -- 15.01.2018 Sofia SIAC-5765
        mifFlussoOrdinativoRec.mif_ord_siope_codice_cge,
        mifFlussoOrdinativoRec.mif_ord_siope_descri_cge,
        mifFlussoOrdinativoRec.mif_ord_descri_estesa_cap,
        mifFlussoOrdinativoRec.mif_ord_codice_ente_ipa, -- newSiope+
	    mifFlussoOrdinativoRec.mif_ord_codice_ente_istat,
		mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite,
		mifFlussoOrdinativoRec.mif_ord_codice_ente_tramite_bt,
		mifFlussoOrdinativoRec.mif_ord_riferimento_ente,
        mifFlussoOrdinativoRec.mif_ord_vers_cc_postale,
	    mifFlussoOrdinativoRec.mif_ord_class_tipo_debito,    -- commerciale
        mifFlussoOrdinativoRec.mif_ord_class_tipo_debito_nc, -- non_commerciale
	    mifFlussoOrdinativoRec.mif_ord_class_economico,
	    mifFlussoOrdinativoRec.mif_ord_class_importo_economico,
	    mifFlussoOrdinativoRec.mif_ord_class_transaz_ue,
	    mifFlussoOrdinativoRec.mif_ord_class_ricorrente_entrata,
	    mifFlussoOrdinativoRec.mif_ord_bollo_carico,
	    mifFlussoOrdinativoRec.mif_ord_stato_versante,
	    mifFlussoOrdinativoRec.mif_ord_codice_distinta,
	    mifFlussoOrdinativoRec.mif_ord_codice_atto_contabile, -- newSiope+
        now(),
        enteProprietarioId,
        loginOperazione
     )
     returning mif_ord_id into mifOrdSpesaId;



   /* da vedere
     if isGestioneQuoteOK=true then
	  quoteOrdinativoRec:=null;
	  mifCountRec:=FLUSSO_MIF_ELAB_NUM_QUOTA_MAND;
	  strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Lettura quote ordinativo.';

	for quoteOrdinativoRec in
    (select *
	 from fnc_mif_ordinativo_quote_entrata(mifOrdinativoIdRec.mif_ord_ord_id,
		 								   ordinativoTsDetTipoId,movgestTsTipoSubId,
                                           classCdrTipoId,classCdcTipoId,
        		                           enteProprietarioId,dataElaborazione,dataFineVal)
    )
    loop
  		-- <Numero_quota_reversale>
		mifCountRec:=FLUSSO_MIF_ELAB_NUM_QUOTA_MAND;
	    flussoElabMifElabRec:=null;
        codResult:=null;
		flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];


    end loop;

 end if; */





 -- <sospesi>
 -- <sospeso>
 -- <numero_provvisorio>
 -- <importo_provvisorio>
 if  isRicevutaAttivo=true then
    ricevutaRec:=null;
    strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Gestione  provvisori'
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
    for ricevutaRec in
    (select *
     from fnc_mif_ordinativo_ricevute(mifOrdinativoIdRec.mif_ord_ord_id,
								      flussoElabMifTipoDec,
    	                              enteProprietarioId,dataElaborazione,dataFineVal)
    )
    loop
    	strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Inserimento   ricevuta'
                       ||' in mif_t_ordinativo_entrata_ricevute '
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
   		insert into mif_t_ordinativo_entrata_ricevute
        (mif_ord_id,
	     mif_ord_ric_anno,
	     mif_ord_ric_numero,
	     mif_ord_provc_id,
		 mif_ord_ric_importo,
	     validita_inizio,
		 ente_proprietario_id,
	     login_operazione
        )
        values
        (mifOrdSpesaId,
         ricevutaRec.annoRicevuta,
         ricevutaRec.numeroRicevuta,
         ricevutaRec.provRicevutaId,
         ricevutaRec.importoRicevuta,
         now(),
         enteProprietarioId,
         loginOperazione
        );
    end loop;

  end if;

  -- dati fatture da valorizzare se ordinativo commerciale
  -- @@@@ sicuramente da completare
  -- <fattura_siope>
  if isGestioneFatture = true and isOrdCommerciale=true then
   flussoElabMifElabRec:=null;
   mifCountRec:=FLUSSO_MIF_ELAB_FATTURE;
   titoloCap:=null;
   codResult:=null;
   flussoElabMifElabRec:=mifFlussoElabMifArr[mifCountRec];

   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Gestione fatture.Lettura macroaggregato ordinativo di spesa collegato.';
--   select c.classif_code into titoloCap
   -- 23.02.2018 Sofia JIRA siac-5849
   select c.classif_id into codResult
   from siac_r_ordinativo_bil_elem re, siac_r_bil_elem_class rc,
        siac_t_class c
   where re.ord_id=ordinativoSplitId
   and   rc.elem_id=re.elem_id
   and   c.classif_id=rc.classif_id
   and   c.classif_tipo_id=macroAggrTipoCodeId
   and   re.data_cancellazione is null
   and   re.validita_fine is null
   and   rc.data_cancellazione is null
   and   rc.validita_fine is null
   and   c.data_cancellazione is null;

   -- 23.02.2018 Sofia JIRA siac-5849
   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Gestione fatture.Lettura natura spesa ordinativo di spesa collegato.';
   select oil.oil_natura_spesa_desc into titoloCap
   from siac_d_oil_natura_spesa oil, siac_r_oil_natura_spesa_titolo r,
        siac_r_class_fam_tree rtree
   where rtree.classif_fam_tree_id=famMacroTitCodeId
   and   rtree.classif_id=codResult -- macroaggregatoId
   and   r.oil_natura_spesa_titolo_id=rtree.classif_id_padre
   and   oil.oil_natura_spesa_id=r.oil_natura_spesa_id
   and   rtree.data_cancellazione is null
   and   rtree.validita_fine is null
   and   r.data_cancellazione is null
   and   r.validita_fine is null;

  if titoloCap is null then titoloCap:=defNaturaPag; end if;
  -- 26.02.2018 Sofia JIRA siac-5849 - esclusione note credito  per ordinativi di incasso
  titoloCap:=titoloCap||'|S';

  /**  -- 23.02.2018 Sofia JIRA siac-5849
  if titoloCap is not null then
    if substring(titoloCap from 1 for 1)=titoloCorrente then
	  	titoloCap:=descriTitoloCorrente;
    else
     if substring(titoloCap from 1 for 1)=titoloCapitale then
     	titoloCap:=descriTitoloCapitale;
     end if;
    end if;
   end if; **/

   strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Lettura dati configurazione per campo '||flussoElabMifElabRec.flusso_elab_mif_campo
                       ||' mifCountRec='||mifCountRec
                       ||' tipo flusso '||MANDMIF_TIPO||'.Gestione fatture.';
   ordRec:=null;
   for ordRec in
   (select * from fnc_mif_ordinativo_documenti_splus( ordinativoSplitId, -- cerco i documenti relativi a ordinativo di pagamento collegato per split
											          numeroDocs::integer,
                                                      tipoDocs,
                                                      docAnalogico,
                                                      attrCodeDataScad,
                                                      titoloCap,
                                                      enteOilRec.ente_oil_codice_pcc_uff,
		   		                        	          enteProprietarioId,
	            		                              dataElaborazione,dataFineVal)
   )
    loop
        strMessaggio:='Lettura dati ordinativo numero='||mifOrdinativoIdRec.mif_ord_ord_numero
                       ||' annoBilancio='||mifOrdinativoIdRec.mif_ord_anno_bil
                       ||' ord_id='||mifOrdinativoIdRec.mif_ord_ord_id
                       ||' mif_ord_id='||mifOrdinativoIdRec.mif_ord_id
                       ||'. Inserimento fatture '
                       ||' in mif_t_ordinativo_spesa_documenti '
                       ||' tipo flusso '||MANDMIF_TIPO||'.';
         insert into  mif_t_ordinativo_spesa_documenti
         ( mif_ord_id,
		   mif_ord_documento,
           mif_ord_doc_codice_ipa_ente,
	       mif_ord_doc_tipo,
           mif_ord_doc_tipo_a,
		   mif_ord_doc_id_lotto_sdi,
		   mif_ord_doc_tipo_analog,
		   mif_ord_doc_codfisc_emis,
		   mif_ord_doc_anno,
	       mif_ord_doc_numero,
	       mif_ord_doc_importo,
	       mif_ord_doc_data_scadenza,
	       mif_ord_doc_motivo_scadenza,
	       mif_ord_doc_natura_spesa,
		   validita_inizio,
		   ente_proprietario_id,
		   login_operazione
         )
         values
         (mifOrdSpesaId,
--          ordRec.numero_fattura_siope,
          'E', -- 07.06.2018 Sofia SIAC-6228
		  ordRec.codice_ipa_ente_siope,
		  ordRec.tipo_documento_siope,
          ordRec.tipo_documento_siope_a,
          ordRec.identificativo_lotto_sdi_siope,
          ordRec.tipo_documento_analogico_siope,
          trim ( both ' ' from ordRec.codice_fiscale_emittente_siope),
		  ordRec.anno_emissione_fattura_siope,
		  ordRec.numero_fattura_siope,
          --ordRec.importo_siope,     -- 22.12.2017 Sofia siac-5665
          ordRec.importo_siope_split, -- 22.12.2017 Sofia siac-5665
		  ordRec.data_scadenza_pagam_siope,
		  ordRec.motivo_scadenza_siope,
    	  ordRec.natura_spesa_siope,
          now(),
          enteProprietarioId,
          loginOperazione
         );
    end loop;
   end if;

   numeroOrdinativiTrasm:=numeroOrdinativiTrasm+1;

   end loop;

   strMessaggio:='Aggiornamento progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_out_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
   update siac_t_progressivo p set prog_value=flussoElabMifOilId
   where p.ente_proprietario_id=enteProprietarioId
   and   p.prog_key='oil_out_'||annoBilancio
   and   p.ambito_id=ambitoFinId
   and   p.data_cancellazione is null
   and   p.validita_fine is null;

   strMessaggio:='Aggiornamento progressivo per identificativo flusso OIL [siac_t_progressivo prog_key=oil_'||MANDMIF_TIPO||'_'||annoBilancio||'  per flusso MIF tipo '||MANDMIF_TIPO||'.';
   update siac_t_progressivo p set prog_value=flussoElabMifDistOilRetId
   where p.ente_proprietario_id=enteProprietarioId
   and   p.prog_key='oil_'||MANDMIF_TIPO||'_'||annoBilancio
   and   p.ambito_id=ambitoFinId
   and   p.data_cancellazione is null
   and   p.validita_fine is null;

   strMessaggio:='Aggiornamento mif_t_flusso_elaborato.';
   update  mif_t_flusso_elaborato
   set (flusso_elab_mif_id_flusso_oil,flusso_elab_mif_codice_flusso_oil,flusso_elab_mif_num_ord_elab,flusso_elab_mif_file_nome,flusso_elab_mif_esito_msg)=
   	   (flussoElabMifOilId,annoBilancio||flussoElabMifDistOilRetId::varchar,numeroOrdinativiTrasm,flussoElabMifTipoNomeFile||'_'||enteOilRec.ente_oil_codice,
        'Elaborazione in corso tipo flusso '||MANDMIF_TIPO||' - Dati inseriti in mif_t_ordinativo_entrata')
   where flusso_elab_mif_id=flussoElabMifLogId;

    -- gestire aggiornamento mif_t_flusso_elaborato

	RAISE NOTICE 'numeroOrdinativiTrasm %', numeroOrdinativiTrasm;
    messaggioRisultato:=strMessaggioFinale||' Trasmessi '||numeroOrdinativiTrasm||' ordinativi di entrata.';
    messaggioRisultato:=upper(messaggioRisultato);
    flussoElabMifId:=flussoElabMifLogId;
    nomeFileMif:=flussoElabMifTipoNomeFile||'_'||enteOilRec.ente_oil_codice;
    flussoElabMifDistOilId:=(annoBilancio||flussoElabMifDistOilRetId::varchar)::integer;

    return;

exception
    when RAISE_EXCEPTION THEN
    	raise notice '% % ERRORE :  % %',coalesce(strMessaggioFinale,''),coalesce(strMessaggio,''),
	        	substring(upper(SQLERRM) from 1 for 1000),mifCountRec;
        if codResult=-12 then
          messaggioRisultato:=
        	coalesce(strMessaggioFinale,'')||coalesce(strMessaggio,'')||' '||coalesce(substring(upper(SQLERRM) from 1 for 1500),'') ||' '||mifCountRec||'.';
          codiceRisultato:=0;
        else
          messaggioRisultato:=
        	coalesce(strMessaggioFinale,'')||coalesce(strMessaggio,'')||'ERRORE:  '||' '||coalesce(substring(upper(SQLERRM) from 1 for 1500),'')||' '||mifCountRec||'.' ;
       	  codiceRisultato:=-1;
    	end if;

        numeroOrdinativiTrasm:=0;
		messaggioRisultato:=upper(messaggioRisultato);

        if flussoElabMifLogId is not null then
            flussoElabMifId:=flussoElabMifLogId;
        	update  mif_t_flusso_elaborato
   			set (flusso_elab_mif_esito,flusso_elab_mif_esito_msg)=
                ('KO',messaggioRisultato)
		    where flusso_elab_mif_id=flussoElabMifLogId;
        else
        	flussoElabMifId:=null;
        end if;

        return;
     when NO_DATA_FOUND THEN
        raise notice '% % ERRORE : % %',coalesce(strMessaggioFinale,''),coalesce(strMessaggio,''),
	        	substring(upper(SQLERRM) from 1 for 1500),mifCountRec;
        messaggioRisultato:=coalesce(strMessaggioFinale,'')||coalesce(strMessaggio,'')||' Nessun dato presente in archivio '||' '||mifCountRec||'.';
        numeroOrdinativiTrasm:=0;
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);

        if flussoElabMifLogId is not null then
            flussoElabMifId:=flussoElabMifLogId;
        	update  mif_t_flusso_elaborato
   			set (flusso_elab_mif_esito,flusso_elab_mif_esito_msg)=
                ('KO',messaggioRisultato)
		    where flusso_elab_mif_id=flussoElabMifLogId;
        else
        	flussoElabMifId:=null;
        end if;

        return;
     when TOO_MANY_ROWS THEN
        raise notice '% % ERRORE : % %',coalesce(strMessaggioFinale,''),coalesce(strMessaggio,''),
	        	substring(upper(SQLERRM) from 1 for 1500),mifCountRec;
        messaggioRisultato:=coalesce(strMessaggioFinale,'')||coalesce(strMessaggio,'')||' Diverse righe presenti in archivio '||' '||mifCountRec||'.';
        numeroOrdinativiTrasm:=0;
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);

        if flussoElabMifLogId is not null then
            flussoElabMifId:=flussoElabMifLogId;
        	update  mif_t_flusso_elaborato
   			set (flusso_elab_mif_esito,flusso_elab_mif_esito_msg)=
                ('KO',messaggioRisultato)
		    where flusso_elab_mif_id=flussoElabMifLogId;
        else
        	flussoElabMifId:=null;
        end if;
        return;
	when others  THEN
		raise notice '% % Errore DB % % %',coalesce(strMessaggioFinale,''),coalesce(strMessaggio,''),SQLSTATE,
	        	substring(upper(SQLERRM) from 1 for 1000),mifCountRec;
        messaggioRisultato:=coalesce(strMessaggioFinale,'')||coalesce(strMessaggio,'')||'ERRORE DB:'||SQLSTATE||' '||substring(upper(SQLERRM) from 1 for 1500)||' '||mifCountRec||'.' ;
        numeroOrdinativiTrasm:=0;
        codiceRisultato:=-1;
        messaggioRisultato:=upper(messaggioRisultato);

        if flussoElabMifLogId is not null then
            flussoElabMifId:=flussoElabMifLogId;
        	update  mif_t_flusso_elaborato
   			set (flusso_elab_mif_esito,flusso_elab_mif_esito_msg)=
                ('KO',messaggioRisultato)
		    where flusso_elab_mif_id=flussoElabMifLogId;
        else
        	flussoElabMifId:=null;
        end if;

        return;
END;
$body$
LANGUAGE 'plpgsql'
VOLATILE
CALLED ON NULL INPUT
SECURITY INVOKER
COST 100;

-- SIAC-6202 - FINE - Sofia 

-- Inserimento modifiche da parte del CSI comunicazione del 9/8/2018 - INIZIO - Maurizio

-- Function: "fnc_siac_bko_config_report_prevind_xbrl"()

-- DROP FUNCTION "fnc_siac_bko_config_report_prevind_xbrl"();

CREATE OR REPLACE FUNCTION "fnc_siac_bko_config_report_prevind_xbrl"()
  RETURNS character varying AS
$BODY$
DECLARE
  rec_enti	record;
  sMsgReturn	varchar(1000):='';
  sRep_BILR172  varchar;
  sRep_BILR173	varchar;
  sRep_BILR174	varchar;
  sRep_BILR175	varchar;
  sRep_BILR176	varchar;
  sRep_BILR177	varchar;
  sRep_BILR178	varchar;
  sRep_BILR179	varchar;
  sRep_BILR180	varchar;
  nIdEnte	integer;
  sCarica_EELL  varchar;
  sCarica_Reg   varchar;
  sCarica_EStr  varchar;


BEGIN
    sMsgReturn:='';
    for rec_enti in
      select A.ente_proprietario_id, A.ente_denominazione, D.eptipo_code
      from siac_t_ente_proprietario A, siac_r_ente_proprietario_tipo T, siac_d_ente_proprietario_tipo D
      where A.ente_proprietario_id = T.ente_proprietario_id
        and T.eptipo_id = D.eptipo_id
      order by A.ente_proprietario_id
    loop
      nIdEnte:=rec_enti.ente_proprietario_id;
      if nIdEnte in (2,5) then
        -- REGIONE
          -- id  2 => Regione Piemonte
          -- id  5 => Consiglio Regionale Piemonte
          sCarica_EELL:='C';  -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione
          sCarica_Reg:='S';   -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione
          sCarica_EStr:='C';  -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione
      elsif nIdEnte in (4,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28) then
        -- Enti Strumentali
          -- id  4 => AIPO
          -- id 10 => APEA
          -- id 11 => APL
          -- id 12 => ARAI
          -- id 13 => EDISU
          -- id 14 => Parco
          -- id 15 => Parco
          -- id 16 => Parco
          -- id 17 => Parco
          -- id 18 => Parco
          -- id 19 => Parco
          -- id 20 => Parco
          -- id 21 => Parco
          -- id 22 => Parco
          -- id 23 => Parco
          -- id 24 => Parco
          -- id 25 => Parco
          -- id 26 => Parco
          -- id 27 => Parco
          -- id 28 => Parco
          sCarica_EELL:='C';  -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione
          sCarica_Reg:='C';   -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione
          sCarica_EStr:='S';  -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione
      else
        -- Enti Locali
          sCarica_EELL:='S';  -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione
          --sCarica_EELL:='C';  -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione
          sCarica_Reg:='C';   -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione
          sCarica_EStr:='C';  -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione
      end if;

      -- Predisposizione variabili di caricamento report
      -- ENTI STRUMENTALI
      sRep_BILR172:=sCarica_EStr; -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione
      sRep_BILR173:=sCarica_EStr; -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione
      sRep_BILR174:=sCarica_EStr; -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione
      -- REGIONI
      sRep_BILR175:=sCarica_Reg; -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione
      sRep_BILR176:=sCarica_Reg; -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione
      sRep_BILR177:=sCarica_Reg; -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione
      -- ENTI LOCALI
      sRep_BILR178:=sCarica_EELL; -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione
      sRep_BILR179:=sCarica_EELL; -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione
      sRep_BILR180:=sCarica_EELL; -- S=Cancella e inserisce nuova configurazione; N=Non inserisce nulla; C=elimina precedente configurazione

      -- Gestione BILR172
      IF sRep_BILR172 = 'S' OR sRep_BILR172 = 'C' THEN
        DELETE FROM siac.siac_t_xbrl_mapping_fatti WHERE xbrl_mapfat_rep_codice='BILR172' AND ente_proprietario_id=nIdEnte;
        DELETE FROM siac.siac_t_xbrl_report WHERE xbrl_rep_codice='BILR172' AND ente_proprietario_id=nIdEnte;
      END IF;
      IF sRep_BILR172 = 'S' THEN
        INSERT INTO siac.siac_t_xbrl_report (xbrl_rep_codice,  xbrl_rep_fase_code,  xbrl_rep_tipologia_code,  xbrl_rep_xsd_tassonomia,  validita_inizio,  ente_proprietario_id,  login_operazione) VALUES ('BILR172','PREV','IND','bdap-ind-prev-strum_2016-12-07.xsd',now(),nIdEnte,'admin');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','incid_miss_progrAnno1','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CompSpeMissProg','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','incid_miss_progrFpvAnno1','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CompSpeMissProgFPV','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','capac_pagamAnno1','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CapPag','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','incid_miss_progrAnno2','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CompSpeMissProg','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','incid_miss_progrFpvAnno2','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CompSpeMissProgFPV','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','incid_miss_progrAnno3','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CompSpeMissProg','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','incid_miss_progrFpvAnno3','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CompSpeMissProgFPV','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','inc_miss_progr_dett','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CompSpeMissProgMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','di_cui_incid_fpv','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CompSpeMissProgFPVMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','capac_pagam_dett','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CapPagMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','tot_missione_incid_miss_progrAnno1','IA-SPE_TotMiss${tot_missione_code}_CompSpeMissProg','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','tot_missione_incid_miss_progrFpvAnno1','IA-SPE_TotMiss${tot_missione_code}_CompSpeMissProgFPV','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','tot_capac_pagamAnno1','IA-SPE_TotMiss${tot_missione_code}_CapPag','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','tot_missione_incid_miss_progrAnno2','IA-SPE_TotMiss${tot_missione_code}_CompSpeMissProg','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','tot_missione_incid_miss_progrFpvAnno2','IA-SPE_TotMiss${tot_missione_code}_CompSpeMissProgFPV','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','tot_missione_incid_miss_progrAnno3','IA-SPE_TotMiss${tot_missione_code}_CompSpeMissProg','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','tot_missione_incid_miss_progrFpvAnno3','IA-SPE_TotMiss${tot_missione_code}_CompSpeMissProgFPV','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','inc_miss_progr_tot_missione','IA-SPE_TotMiss${tot_missione_code}_CompSpeMissProgMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','di_cui_incid_fpv_tot_missione','IA-SPE_TotMiss${tot_missione_code}_CompSpeMissProgFPVMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR172','capac_pagam_dett_tot_missione','IA-SPE_TotMiss${tot_missione_code}_CapPagMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
      END IF;

      -- Gestione BILR173
      IF sRep_BILR173 = 'S' OR sRep_BILR173 = 'C' THEN
        DELETE FROM siac.siac_t_xbrl_mapping_fatti WHERE xbrl_mapfat_rep_codice='BILR173' AND ente_proprietario_id=nIdEnte;
        DELETE FROM siac.siac_t_xbrl_report WHERE xbrl_rep_codice='BILR173' AND ente_proprietario_id=nIdEnte;
      END IF;
      IF sRep_BILR173 = 'S' THEN
        INSERT INTO siac.siac_t_xbrl_report (xbrl_rep_codice,  xbrl_rep_fase_code,  xbrl_rep_tipologia_code,  xbrl_rep_xsd_tassonomia,  validita_inizio,  ente_proprietario_id,  login_operazione) VALUES ('BILR173','PREV','IND','bdap-ind-prev-strum_2016-12-07.xsd',now(),nIdEnte,'admin');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR173','prev_comp_tit_tipAnno1','IA-ENT_E.<[=  ''${cod_tipologia}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEnt','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR173','prev_comp_tit_tipol_Anno2','IA-ENT_E.<[=  ''${cod_tipologia}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEnt','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR173','prev_comp_tit_tipol_Anno3','IA-ENT_E.<[=  ''${cod_tipologia}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEnt','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR173','media_accert_tit_tipol','IA-ENT_E.<[=  ''${cod_tipologia}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEntMediaAcc','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR173','prev_cassa_tit_tipAnno1','IA-ENT_E.<[=  ''${cod_tipologia}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_Risc','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR173','media_riscoss_tit_tipol','IA-ENT_E.<[=  ''${cod_tipologia}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_RiscMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR173','prev_comp_titAnno1','IA-ENT_E.<[=  ''${cod_titolo_totale}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEnt','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR173','prev_comp_tit_Anno2','IA-ENT_E.<[=  ''${cod_titolo_totale}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEnt','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR173','prev_comp_tit_Anno3','IA-ENT_E.<[=  ''${cod_titolo_totale}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEnt','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR173','media_accert_tit','IA-ENT_E.<[=  ''${cod_titolo_totale}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEntMediaAcc','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR173','prev_cassa_titAnno1','IA-ENT_E.<[=  ''${cod_titolo_totale}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_Risc','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR173','media_riscoss_tit','IA-ENT_E.<[=  ''${cod_titolo_totale}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_RiscMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR173','prev_comp_TotaleAnno1','IA-ENT_TotaleEntrate_CompEnt','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR173','prev_comp_totale_Anno2','IA-ENT_TotaleEntrate_CompEnt','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR173','prev_comp_totale_Anno3','IA-ENT_TotaleEntrate_CompEnt','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR173','media_accert_totale','IA-ENT_TotaleEntrate_CompEntMediaAcc','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR173','prev_cassa_totaleAnno1','IA-ENT_TotaleEntrate_Risc','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR173','media_riscoss_totale','IA-ENT_TotaleEntrate_RiscMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
      END IF;

      -- Gestione BILR174
      IF sRep_BILR174 = 'S' OR sRep_BILR174 = 'C' THEN
        DELETE FROM siac.siac_t_xbrl_mapping_fatti WHERE xbrl_mapfat_rep_codice='BILR174' AND ente_proprietario_id=nIdEnte;
        DELETE FROM siac.siac_t_xbrl_report WHERE xbrl_rep_codice='BILR174' AND ente_proprietario_id=nIdEnte;
      END IF;
      IF sRep_BILR174 = 'S' THEN
        INSERT INTO siac.siac_t_xbrl_report (xbrl_rep_codice,  xbrl_rep_fase_code,  xbrl_rep_tipologia_code,  xbrl_rep_xsd_tassonomia,  validita_inizio,  ente_proprietario_id,  login_operazione) VALUES ('BILR174','PREV','IND','bdap-ind-prev-strum_2016-12-07.xsd',now(),nIdEnte,'admin');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','1.1_incid_spese_rigide_su_ent_corr1','IS_IncidenzaSpeseRigideEntrateCorrenti','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','1.1_incid_spese_rigide_su_ent_corr2','IS_IncidenzaSpeseRigideEntrateCorrenti','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','1.1_incid_spese_rigide_su_ent_corr3','IS_IncidenzaSpeseRigideEntrateCorrenti','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','2.1_indic_realiz_prev_comp_ent_corr_anno1','IS_RealizzPrevCompEntrateCorr','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','2.1_indic_realiz_prev_comp_ent_corr_anno2','IS_RealizzPrevCompEntrateCorr','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','2.1_indic_realiz_prev_comp_ent_corr_anno3','IS_RealizzPrevCompEntrateCorr','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','2.2_indic_realiz_prev_cassa_ent_corr_anno1','IS_RealizzPrevCassaCorr','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','2.3_indic_realiz_prev_comp_ent_prop_anno1','IS_RealizzPrevCompEntrateProprie','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','2.3_indic_realiz_prev_comp_ent_prop_anno2','IS_RealizzPrevCompEntrateProprie','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','2.3_indic_realiz_prev_comp_ent_prop_anno3','IS_RealizzPrevCompEntrateProprie','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','2.4_indic_realiz_prev_cassa_ent_prop_anno1','IS_RealizzPrevCassaEntrateProprie','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','3.1_incid_spesa_pers_spesa_corr_anno1','IS_IncidenzaSpesaPersSuSpesaCorr','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','3.1_incid_spesa_pers_spesa_corr_anno2','IS_IncidenzaSpesaPersSuSpesaCorr','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','3.1_incid_spesa_pers_spesa_corr_anno3','IS_IncidenzaSpesaPersSuSpesaCorr','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','3.2_incid_salario_acc_su_spesa_pers_anno1','IS_IncidenzaSalarioAccIncentivanteTotSpesaPers','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','3.2_incid_salario_acc_su_spesa_pers_anno2','IS_IncidenzaSalarioAccIncentivanteTotSpesaPers','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','3.2_incid_salario_acc_su_spesa_pers_anno3','IS_IncidenzaSalarioAccIncentivanteTotSpesaPers','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','3.3_incid_spesa_pers_contrat_fless_anno1','IS_IncidenzaSpesaPersContrattoFlessibile','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','3.3_incid_spesa_pers_contrat_fless_anno2','IS_IncidenzaSpesaPersContrattoFlessibile','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','3.3_incid_spesa_pers_contrat_fless_anno3','IS_IncidenzaSpesaPersContrattoFlessibile','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','4.1_incid_inter_pass_su_ent_corr_anno1','IS_IncidenzaInteressiPassiviEntCorr','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','4.1_incid_inter_pass_su_ent_corr_anno2','IS_IncidenzaInteressiPassiviEntCorr','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','4.1_incid_inter_pass_su_ent_corr_anno3','IS_IncidenzaInteressiPassiviEntCorr','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','4.2_incid_inter_antic_su_inter_pass_anno1','IS_IncidenzaInteressiAnticipazioniTotInteressiPass','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','4.2_incid_inter_antic_su_inter_pass_anno2','IS_IncidenzaInteressiAnticipazioniTotInteressiPass','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','4.2_incid_inter_antic_su_inter_pass_anno3','IS_IncidenzaInteressiAnticipazioniTotInteressiPass','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','4.3_incid_inter_mora_su_inter_pass_anno1','IS_IncidenzaInteressiMoraTotSpesaInteressiPass','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','4.3_incid_inter_mora_su_inter_pass_anno2','IS_IncidenzaInteressiMoraTotSpesaInteressiPass','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','4.3_incid_inter_mora_su_inter_pass_anno3','IS_IncidenzaInteressiMoraTotSpesaInteressiPass','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','5.1_incid_invest_su_spesa_corr_cont_cap_anno1','IS_IncidenzaInvestimentiSpesaCorrContoCap','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','5.1_incid_invest_su_spesa_corr_cont_cap_anno2','IS_IncidenzaInvestimentiSpesaCorrContoCap','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','5.1_incid_invest_su_spesa_corr_cont_cap_anno3','IS_IncidenzaInvestimentiSpesaCorrContoCap','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','5.2_quota_invest_comp_finanz_risp_corr_anno1','IS_QuotaInvestimentiComplFinanziatiRisparmioCorr','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','5.2_quota_invest_comp_finanz_risp_corr_anno2','IS_QuotaInvestimentiComplFinanziatiRisparmioCorr','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','5.2_quota_invest_comp_finanz_risp_corr_anno3','IS_QuotaInvestimentiComplFinanziatiRisparmioCorr','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','5.3_quota_invest_comp_finanz_saldo_pos_part_finanz_anno1','IS_QuotaInvestimentiComplFinanziatiSaldoPosPartiteFinanziarie','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','5.3_quota_invest_comp_finanz_saldo_pos_part_finanz_anno2','IS_QuotaInvestimentiComplFinanziatiSaldoPosPartiteFinanziarie','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','5.3_quota_invest_comp_finanz_saldo_pos_part_finanz_anno3','IS_QuotaInvestimentiComplFinanziatiSaldoPosPartiteFinanziarie','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','5.4_quota_invest_comp_finanz_debito_anno1','IS_QuotaInvestimentiComplFinanziatiDebito','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','5.4_quota_invest_comp_finanz_debito_anno2','IS_QuotaInvestimentiComplFinanziatiDebito','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','5.4_quota_invest_comp_finanz_debito_anno3','IS_QuotaInvestimentiComplFinanziatiDebito','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','6.1_indic_smalt_debiti_comm_anno1','IS_IndicatoreSmaltimentoDebitiCommerciali','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','6.2_indic_smalt_debiti_amm_pubb_anno1','IS_IndicatoreSmaltimentoDebitiAmministrazioni','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','7.1_incid_estinz_debit_finanz_anno1','IS_IncidenzaEstinzioniDebitiFinanziari','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','7.1_incid_estinz_debit_finanz_anno2','IS_IncidenzaEstinzioniDebitiFinanziari','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','7.1_incid_estinz_debit_finanz_anno3','IS_IncidenzaEstinzioniDebitiFinanziari','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','7.2_sosten_debiti_finanz_anno1','IS_SostenibilitaDebitiFinanziari','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','7.2_sosten_debiti_finanz_anno2','IS_SostenibilitaDebitiFinanziari','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','7.2_sosten_debiti_finanz_anno3','IS_SostenibilitaDebitiFinanziari','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','8.1_incid_quota_libera_corr_avanzo_pres_anno1','IS_IncidenzaQuotaLiberaParteCorrAvanzo','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','8.1_incid_quota_libera_corr_avanzo_pres_anno2','IS_IncidenzaQuotaLiberaParteCorrAvanzo','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','8.1_incid_quota_libera_corr_avanzo_pres_anno3','IS_IncidenzaQuotaLiberaParteCorrAvanzo','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','8.2_incid_quota_libera_conto_cap_avanzo_pres_anno1','IS_IncidenzaQuotaLiberaContoCapAvanzo','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','8.2_incid_quota_libera_conto_cap_avanzo_pres_anno2','IS_IncidenzaQuotaLiberaContoCapAvanzo','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','8.2_incid_quota_libera_conto_cap_avanzo_pres_anno3','IS_IncidenzaQuotaLiberaContoCapAvanzo','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','8.3_incid_quota_accant_avanzo_pres_anno1','IS_IncidenzaQuotaAccantonataAvanzo','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','8.3_incid_quota_accant_avanzo_pres_anno2','IS_IncidenzaQuotaAccantonataAvanzo','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','8.3_incid_quota_accant_avanzo_pres_anno3','IS_IncidenzaQuotaAccantonataAvanzo','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','8.4_incid_quota_vincol_avanzo_pres_anno1','IS_IncidenzaQuotaVincolataAvanzo','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','8.4_incid_quota_vincol_avanzo_pres_anno2','IS_IncidenzaQuotaVincolataAvanzo','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','8.4_incid_quota_vincol_avanzo_pres_anno3','IS_IncidenzaQuotaVincolataAvanzo','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','9.1_quota_dis_ripian_eserc_anno1','IS_QuotaDisavanzoDaRipianare','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','9.1_quota_dis_ripian_eserc_anno2','IS_QuotaDisavanzoDaRipianare','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','9.1_quota_dis_ripian_eserc_anno3','IS_QuotaDisavanzoDaRipianare','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','9.2_sost_patr_disav_presunto_anno1','IS_SostenibilitaPatrimonialeDisavanzo','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','9.2_sost_patr_disav_presunto_anno2','IS_SostenibilitaPatrimonialeDisavanzo','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','9.2_sost_patr_disav_presunto_anno3','IS_SostenibilitaPatrimonialeDisavanzo','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','9.3_sosten_disav_caric_esercizio_anno1','IS_SostenibilitaDisavanzoCaricoEsercizio','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','9.3_sosten_disav_caric_esercizio_anno2','IS_SostenibilitaDisavanzoCaricoEsercizio','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','9.3_sosten_disav_caric_esercizio_anno3','IS_SostenibilitaDisavanzoCaricoEsercizio','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','10.1_utilizzo_fpv_anno1','IS_UtilizzoFPV','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','10.1_utilizzo_fpv_anno2','IS_UtilizzoFPV','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','10.1_utilizzo_fpv_anno3','IS_UtilizzoFPV','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','11.1_incid_part_giro_conto_terzi_ent_anno1','IS_IncidenzaPartiteGiroContoTerziEntrata','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','11.1_incid_part_giro_conto_terzi_ent_anno2','IS_IncidenzaPartiteGiroContoTerziEntrata','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','11.1_incid_part_giro_conto_terzi_ent_anno3','IS_IncidenzaPartiteGiroContoTerziEntrata','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','11.2_incid_part_giro_conto_terzi_spese_anno1','IS_IncidenzaPartiteGiroContoTerziUscita','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','11.2_incid_part_giro_conto_terzi_spese_anno2','IS_IncidenzaPartiteGiroContoTerziUscita','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR174','11.2_incid_part_giro_conto_terzi_spese_anno3','IS_IncidenzaPartiteGiroContoTerziUscita','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
      END IF;

      -- Gestione BILR175
      IF sRep_BILR175 = 'S' OR sRep_BILR175 = 'C' THEN
        DELETE FROM siac.siac_t_xbrl_mapping_fatti WHERE xbrl_mapfat_rep_codice='BILR175' AND ente_proprietario_id=nIdEnte;
        DELETE FROM siac.siac_t_xbrl_report WHERE xbrl_rep_codice='BILR175' AND ente_proprietario_id=nIdEnte;
      END IF;
      IF sRep_BILR175 = 'S' THEN
        INSERT INTO siac.siac_t_xbrl_report (xbrl_rep_codice,  xbrl_rep_fase_code,  xbrl_rep_tipologia_code,  xbrl_rep_xsd_tassonomia,  validita_inizio,  ente_proprietario_id,  login_operazione) VALUES ('BILR175','PREV','IND','bdap-ind-prev-regioni_2016-12-07.xsd',now(),nIdEnte,'admin');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','incid_miss_progrAnno1','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CompSpeMissProg','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','incid_miss_progrFpvAnno1','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CompSpeMissProgFPV','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','capac_pagamAnno1','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CapPag','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','incid_miss_progrAnno2','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CompSpeMissProg','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','incid_miss_progrFpvAnno2','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CompSpeMissProgFPV','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','incid_miss_progrAnno3','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CompSpeMissProg','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','incid_miss_progrFpvAnno3','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CompSpeMissProgFPV','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','inc_miss_progr_dett','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CompSpeMissProgMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','di_cui_incid_fpv','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CompSpeMissProgFPVMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','capac_pagam_dett','IA-SPE_Prog${code_missione_row}.${code_programma_solo}_CapPagMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','tot_missione_incid_miss_progrAnno1','IA-SPE_TotMiss${tot_missione_code}_CompSpeMissProg','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','tot_missione_incid_miss_progrFpvAnno1','IA-SPE_TotMiss${tot_missione_code}_CompSpeMissProgFPV','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','tot_capac_pagamAnno1','IA-SPE_TotMiss${tot_missione_code}_CapPag','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','tot_missione_incid_miss_progrAnno2','IA-SPE_TotMiss${tot_missione_code}_CompSpeMissProg','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','tot_missione_incid_miss_progrFpvAnno2','IA-SPE_TotMiss${tot_missione_code}_CompSpeMissProgFPV','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','tot_missione_incid_miss_progrAnno3','IA-SPE_TotMiss${tot_missione_code}_CompSpeMissProg','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','tot_missione_incid_miss_progrFpvAnno3','IA-SPE_TotMiss${tot_missione_code}_CompSpeMissProgFPV','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','inc_miss_progr_tot_missione','IA-SPE_TotMiss${tot_missione_code}_CompSpeMissProgMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','di_cui_incid_fpv_tot_missione','IA-SPE_TotMiss${tot_missione_code}_CompSpeMissProgFPVMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR175','capac_pagam_dett_tot_missione','IA-SPE_TotMiss${tot_missione_code}_CapPagMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
      END IF;

      -- Gestione BILR176
      IF sRep_BILR176 = 'S' OR sRep_BILR176 = 'C' THEN
        DELETE FROM siac.siac_t_xbrl_mapping_fatti WHERE xbrl_mapfat_rep_codice='BILR176' AND ente_proprietario_id=nIdEnte;
        DELETE FROM siac.siac_t_xbrl_report WHERE xbrl_rep_codice='BILR176' AND ente_proprietario_id=nIdEnte;
      END IF;
      IF sRep_BILR176 = 'S' THEN
        INSERT INTO siac.siac_t_xbrl_report (xbrl_rep_codice,  xbrl_rep_fase_code,  xbrl_rep_tipologia_code,  xbrl_rep_xsd_tassonomia,  validita_inizio,  ente_proprietario_id,  login_operazione) VALUES ('BILR176','PREV','IND','bdap-ind-prev-regioni_2016-12-07.xsd',now(),nIdEnte,'admin');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR176','prev_comp_tit_tipAnno1','IA-ENT_E.<[=  ''${cod_tipologia}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEnt','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR176','prev_comp_tit_tipol_Anno2','IA-ENT_E.<[=  ''${cod_tipologia}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEnt','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR176','prev_comp_tit_tipol_Anno3','IA-ENT_E.<[=  ''${cod_tipologia}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEnt','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR176','media_accert_tit_tipol','IA-ENT_E.<[=  ''${cod_tipologia}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEntMediaAcc','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR176','prev_cassa_tit_tipAnno1','IA-ENT_E.<[=  ''${cod_tipologia}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_Risc','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR176','media_riscoss_tit_tipol','IA-ENT_E.<[=  ''${cod_tipologia}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_RiscMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR176','prev_comp_titAnno1','IA-ENT_E.<[=  ''${cod_titolo_totale}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEnt','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR176','prev_comp_tit_Anno2','IA-ENT_E.<[=  ''${cod_titolo_totale}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEnt','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR176','prev_comp_tit_Anno3','IA-ENT_E.<[=  ''${cod_titolo_totale}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEnt','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR176','media_accert_tit','IA-ENT_E.<[=  ''${cod_titolo_totale}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEntMediaAcc','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR176','prev_cassa_titAnno1','IA-ENT_E.<[=  ''${cod_titolo_totale}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_Risc','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR176','media_riscoss_tit','IA-ENT_E.<[=  ''${cod_titolo_totale}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_RiscMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR176','prev_comp_TotaleAnno1','IA-ENT_TotaleEntrate_CompEnt','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR176','prev_comp_totale_Anno2','IA-ENT_TotaleEntrate_CompEnt','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR176','prev_comp_totale_Anno3','IA-ENT_TotaleEntrate_CompEnt','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR176','media_accert_totale','IA-ENT_TotaleEntrate_CompEntMediaAcc','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR176','prev_cassa_totaleAnno1','IA-ENT_TotaleEntrate_Risc','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR176','media_riscoss_totale','IA-ENT_TotaleEntrate_RiscMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
      END IF;

      -- Gestione BILR177
      IF sRep_BILR177 = 'S' OR sRep_BILR177 = 'C' THEN
        DELETE FROM siac.siac_t_xbrl_mapping_fatti WHERE xbrl_mapfat_rep_codice='BILR177' AND ente_proprietario_id=nIdEnte;
        DELETE FROM siac.siac_t_xbrl_report WHERE xbrl_rep_codice='BILR177' AND ente_proprietario_id=nIdEnte;
      END IF;
      IF sRep_BILR177 = 'S' THEN
        INSERT INTO siac.siac_t_xbrl_report (xbrl_rep_codice,  xbrl_rep_fase_code,  xbrl_rep_tipologia_code,  xbrl_rep_xsd_tassonomia,  validita_inizio,  ente_proprietario_id,  login_operazione) VALUES ('BILR177','PREV','IND','bdap-ind-prev-regioni_2016-12-07.xsd',now(),nIdEnte,'admin');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','1.1_incid_spese_rigide_su_ent_corr1','IS_IncidenzaSpeseRigideEntrateCorrenti','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','1.1_incid_spese_rigide_su_ent_corr2','IS_IncidenzaSpeseRigideEntrateCorrenti','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','1.1_incid_spese_rigide_su_ent_corr3','IS_IncidenzaSpeseRigideEntrateCorrenti','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','2.1_indic_realiz_prev_comp_ent_corr_anno1','IS_RealizzPrevCompEntrateCorr','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','2.1_indic_realiz_prev_comp_ent_corr_anno2','IS_RealizzPrevCompEntrateCorr','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','2.1_indic_realiz_prev_comp_ent_corr_anno3','IS_RealizzPrevCompEntrateCorr','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','2.2_indic_realiz_prev_cassa_ent_corr_anno1','IS_RealizzPrevCassaCorr','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','2.3_indic_realiz_prev_comp_ent_prop_anno1','IS_RealizzPrevCompEntrateProprie','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','2.3_indic_realiz_prev_comp_ent_prop_anno2','IS_RealizzPrevCompEntrateProprie','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','2.3_indic_realiz_prev_comp_ent_prop_anno3','IS_RealizzPrevCompEntrateProprie','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','2.4_indic_realiz_prev_cassa_ent_prop_anno1','IS_RealizzPrevCassaEntrateProprie','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.1_incid_spesa_pers_spesa_corr_anno1','IS_IncidenzaSpesaPersSuSpesaCorr','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.1_incid_spesa_pers_spesa_corr_anno2','IS_IncidenzaSpesaPersSuSpesaCorr','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.1_incid_spesa_pers_spesa_corr_anno3','IS_IncidenzaSpesaPersSuSpesaCorr','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.1_incid_spesa_pers_spesa_corr_miss13_anno1','IS_IncidenzaSpesaPersSuSpesaCorr_Miss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.1_incid_spesa_pers_spesa_corr_miss13_anno2','IS_IncidenzaSpesaPersSuSpesaCorr_Miss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.1_incid_spesa_pers_spesa_corr_miss13_anno3','IS_IncidenzaSpesaPersSuSpesaCorr_Miss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.1_incid_spesa_pers_spesa_corr_NOmiss13_anno1','IS_IncidenzaSpesaPersSuSpesaCorr_NoMiss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.1_incid_spesa_pers_spesa_corr_NOmiss13_anno2','IS_IncidenzaSpesaPersSuSpesaCorr_NoMiss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.1_incid_spesa_pers_spesa_corr_NOmiss13_anno3','IS_IncidenzaSpesaPersSuSpesaCorr_NoMiss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.2_incid_salario_acc_su_spesa_pers_anno1','IS_IncidenzaSalarioAccIncentivanteTotSpesaPers','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.2_incid_salario_acc_su_spesa_pers_anno2','IS_IncidenzaSalarioAccIncentivanteTotSpesaPers','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.2_incid_salario_acc_su_spesa_pers_anno3','IS_IncidenzaSalarioAccIncentivanteTotSpesaPers','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.2_incid_salario_acc_su_spesa_pers_miss13_anno1','IS_IncidenzaSalarioAccIncentivanteTotSpesaPers_Miss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.2_incid_salario_acc_su_spesa_pers_miss13_anno2','IS_IncidenzaSalarioAccIncentivanteTotSpesaPers_Miss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.2_incid_salario_acc_su_spesa_pers_miss13_anno3','IS_IncidenzaSalarioAccIncentivanteTotSpesaPers_Miss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.2_incid_salario_acc_su_spesa_pers_NOmiss13_anno1','IS_IncidenzaSalarioAccIncentivanteTotSpesaPers_NoMiss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.2_incid_salario_acc_su_spesa_pers_NOmiss13_anno2','IS_IncidenzaSalarioAccIncentivanteTotSpesaPers_NoMiss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.2_incid_salario_acc_su_spesa_pers_NOmiss13_anno3','IS_IncidenzaSalarioAccIncentivanteTotSpesaPers_NoMiss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.3_incid_spesa_pers_contrat_fless_anno1','IS_IncidenzaSpesaPersContrattoFlessibile','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.3_incid_spesa_pers_contrat_fless_anno2','IS_IncidenzaSpesaPersContrattoFlessibile','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.3_incid_spesa_pers_contrat_fless_anno3','IS_IncidenzaSpesaPersContrattoFlessibile','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.3_incid_spesa_pers_contrat_fless_miss13_anno1','IS_IncidenzaSpesaPersContrattoFlessibile_Miss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.3_incid_spesa_pers_contrat_fless_miss13_anno2','IS_IncidenzaSpesaPersContrattoFlessibile_Miss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.3_incid_spesa_pers_contrat_fless_miss13_anno3','IS_IncidenzaSpesaPersContrattoFlessibile_Miss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.3_incid_spesa_pers_contrat_fless_NOmiss13_anno1','IS_IncidenzaSpesaPersContrattoFlessibile_NoMiss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.3_incid_spesa_pers_contrat_fless_NOmiss13_anno2','IS_IncidenzaSpesaPersContrattoFlessibile_NoMiss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.3_incid_spesa_pers_contrat_fless_NOmiss13_anno3','IS_IncidenzaSpesaPersContrattoFlessibile_NoMiss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.4_spesa_personale_procapite_anno1','IS_SpesaPersonaleProcapite','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.4_spesa_personale_procapite_anno2','IS_SpesaPersonaleProcapite','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.4_spesa_personale_procapite_anno3','IS_SpesaPersonaleProcapite','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.4_spesa_personale_procapite_miss13_anno1','IS_SpesaPersonaleProcapite_Miss13','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.4_spesa_personale_procapite_miss13_anno2','IS_SpesaPersonaleProcapite_Miss13','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.4_spesa_personale_procapite_miss13_anno3','IS_SpesaPersonaleProcapite_Miss13','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.4_spesa_personale_procapite_NOmiss13_anno1','IS_SpesaPersonaleProcapite_NoMiss13','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.4_spesa_personale_procapite_NOmiss13_anno2','IS_SpesaPersonaleProcapite_NoMiss13','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','3.4_spesa_personale_procapite_NOmiss13_anno3','IS_SpesaPersonaleProcapite_NoMiss13','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','4.1_indic_estern_servizi_anno1','IS_IndicatoreEstServizi','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','4.1_indic_estern_servizi_anno2','IS_IndicatoreEstServizi','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','4.1_indic_estern_servizi_anno3','IS_IndicatoreEstServizi','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','4.1_indic_estern_servizi_miss13_anno1','IS_IndicatoreEstServizi_Miss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','4.1_indic_estern_servizi_miss13_anno2','IS_IndicatoreEstServizi_Miss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','4.1_indic_estern_servizi_miss13_anno3','IS_IndicatoreEstServizi_Miss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','4.1_indic_estern_servizi_NOmiss_anno1','IS_IndicatoreEstServizi_NoMiss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','4.1_indic_estern_servizi_NOmiss_anno2','IS_IndicatoreEstServizi_NoMiss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','4.1_indic_estern_servizi_NOmiss_anno3','IS_IndicatoreEstServizi_NoMiss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.1_incid_inter_pass_su_ent_corr_anno1','IS_IncidenzaInteressiPassiviEntCorr','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.1_incid_inter_pass_su_ent_corr_anno2','IS_IncidenzaInteressiPassiviEntCorr','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.1_incid_inter_pass_su_ent_corr_anno3','IS_IncidenzaInteressiPassiviEntCorr','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.1_incid_inter_pass_su_ent_corr_miss13_anno1','IS_IncidenzaInteressiPassiviEntCorr_Miss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.1_incid_inter_pass_su_ent_corr_miss13_anno2','IS_IncidenzaInteressiPassiviEntCorr_Miss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.1_incid_inter_pass_su_ent_corr_miss13_anno3','IS_IncidenzaInteressiPassiviEntCorr_Miss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.1_incid_inter_pass_su_ent_corr_NOmiss13_anno1','IS_IncidenzaInteressiPassiviEntCorr_NoMiss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.1_incid_inter_pass_su_ent_corr_NOmiss13_anno2','IS_IncidenzaInteressiPassiviEntCorr_NoMiss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.1_incid_inter_pass_su_ent_corr_NOmiss13_anno3','IS_IncidenzaInteressiPassiviEntCorr_NoMiss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.2_incid_inter_antic_su_inter_pass_anno1','IS_IncidenzaInteressiAnticipazioniTotInteressiPass','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.2_incid_inter_antic_su_inter_pass_anno2','IS_IncidenzaInteressiAnticipazioniTotInteressiPass','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.2_incid_inter_antic_su_inter_pass_anno3','IS_IncidenzaInteressiAnticipazioniTotInteressiPass','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.2_incid_inter_antic_su_inter_pass_miss13_anno1','IS_IncidenzaInteressiAnticipazioniTotInteressiPass_Miss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.2_incid_inter_antic_su_inter_pass_miss13_anno2','IS_IncidenzaInteressiAnticipazioniTotInteressiPass_Miss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.2_incid_inter_antic_su_inter_pass_miss13_anno3','IS_IncidenzaInteressiAnticipazioniTotInteressiPass_Miss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.2_incid_inter_antic_su_inter_pass_NOmiss13_anno1','IS_IncidenzaInteressiAnticipazioniTotInteressiPass_NoMiss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.2_incid_inter_antic_su_inter_pass_NOmiss13_anno2','IS_IncidenzaInteressiAnticipazioniTotInteressiPass_NoMiss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.2_incid_inter_antic_su_inter_pass_NOmiss13_anno3','IS_IncidenzaInteressiAnticipazioniTotInteressiPass_NoMiss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.3_incid_inter_mora_su_inter_pass_anno1','IS_IncidenzaInteressiMoraTotSpesaInteressiPass','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.3_incid_inter_mora_su_inter_pass_anno2','IS_IncidenzaInteressiMoraTotSpesaInteressiPass','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.3_incid_inter_mora_su_inter_pass_anno3','IS_IncidenzaInteressiMoraTotSpesaInteressiPass','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.3_incid_inter_mora_su_inter_pass_miss13_anno1','IS_IncidenzaInteressiMoraTotSpesaInteressiPass_Miss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.3_incid_inter_mora_su_inter_pass_miss13_anno2','IS_IncidenzaInteressiMoraTotSpesaInteressiPass_Miss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.3_incid_inter_mora_su_inter_pass_miss13_anno3','IS_IncidenzaInteressiMoraTotSpesaInteressiPass_Miss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.3_incid_inter_mora_su_inter_pass_NOmiss13_anno1','IS_IncidenzaInteressiMoraTotSpesaInteressiPass_NoMiss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.3_incid_inter_mora_su_inter_pass_NOmiss13_anno2','IS_IncidenzaInteressiMoraTotSpesaInteressiPass_NoMiss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','5.3_incid_inter_mora_su_inter_pass_NOmiss13_anno3','IS_IncidenzaInteressiMoraTotSpesaInteressiPass_NoMiss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.1_incid_invest_su_spesa_corr_cont_cap_anno1','IS_IncidenzaInvestimentiSpesaCorrContoCap','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.1_incid_invest_su_spesa_corr_cont_cap_anno2','IS_IncidenzaInvestimentiSpesaCorrContoCap','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.1_incid_invest_su_spesa_corr_cont_cap_anno3','IS_IncidenzaInvestimentiSpesaCorrContoCap','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.1_incid_invest_su_spesa_corr_cont_cap_miss13_anno1','IS_IncidenzaInvestimentiSpesaCorrContoCap_Miss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.1_incid_invest_su_spesa_corr_cont_cap_miss13_anno2','IS_IncidenzaInvestimentiSpesaCorrContoCap_Miss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.1_incid_invest_su_spesa_corr_cont_cap_miss13_anno3','IS_IncidenzaInvestimentiSpesaCorrContoCap_Miss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.1_incid_invest_su_spesa_corr_cont_cap_NOmiss13_anno1','IS_IncidenzaInvestimentiSpesaCorrContoCap_NoMiss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.1_incid_invest_su_spesa_corr_cont_cap_NOmiss13_anno2','IS_IncidenzaInvestimentiSpesaCorrContoCap_NoMiss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.1_incid_invest_su_spesa_corr_cont_cap_NOmiss13_anno3','IS_IncidenzaInvestimentiSpesaCorrContoCap_NoMiss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.2_invest_diretti_procapite_anno1','IS_InvestimentiDirettiProcapite','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.2_invest_diretti_procapite_anno2','IS_InvestimentiDirettiProcapite','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.2_invest_diretti_procapite_anno3','IS_InvestimentiDirettiProcapite','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.2_invest_diretti_procapite_miss_13_anno1','IS_InvestimentiDirettiProcapite_Miss13','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.2_invest_diretti_procapite_miss_13_anno2','IS_InvestimentiDirettiProcapite_Miss13','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.2_invest_diretti_procapite_miss_13_anno3','IS_InvestimentiDirettiProcapite_Miss13','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.2_invest_diretti_procapite_NOmiss_13_anno1','IS_InvestimentiDirettiProcapite_NoMiss13','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.2_invest_diretti_procapite_NOmiss_13_anno2','IS_InvestimentiDirettiProcapite_NoMiss13','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.2_invest_diretti_procapite_NOmiss_13_anno3','IS_InvestimentiDirettiProcapite_NoMiss13','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.3_contrib_invest_procapite_anno1','IS_ContributiInvestimentiProcapite','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.3_contrib_invest_procapite_anno2','IS_ContributiInvestimentiProcapite','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.3_contrib_invest_procapite_anno3','IS_ContributiInvestimentiProcapite','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.3_contrib_invest_procapite_miss13_anno1','IS_ContributiInvestimentiProcapite_Miss13','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.3_contrib_invest_procapite_miss13_anno2','IS_ContributiInvestimentiProcapite_Miss13','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.3_contrib_invest_procapite_miss13_anno3','IS_ContributiInvestimentiProcapite_Miss13','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.3_contrib_invest_procapite_NOmiss13_anno1','IS_ContributiInvestimentiProcapite_NoMiss13','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.3_contrib_invest_procapite_NOmiss13_anno2','IS_ContributiInvestimentiProcapite_NoMiss13','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.3_contrib_invest_procapite_NOmiss13_anno3','IS_ContributiInvestimentiProcapite_NoMiss13','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.4_invest_compl_procapite_anno1','IS_InvestimentiComplessiviProcapite','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.4_invest_compl_procapite_anno2','IS_InvestimentiComplessiviProcapite','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.4_invest_compl_procapite_anno3','IS_InvestimentiComplessiviProcapite','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.4_invest_compl_procapite_miss13_anno1','IS_InvestimentiComplessiviProcapite_Miss13','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.4_invest_compl_procapite_miss13_anno2','IS_InvestimentiComplessiviProcapite_Miss13','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.4_invest_compl_procapite_miss13_anno3','IS_InvestimentiComplessiviProcapite_Miss13','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.4_invest_compl_procapite_NOmiss13_anno1','IS_InvestimentiComplessiviProcapite_NoMiss13','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.4_invest_compl_procapite_NOmiss13_anno2','IS_InvestimentiComplessiviProcapite_NoMiss13','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.4_invest_compl_procapite_NOmiss13_anno3','IS_InvestimentiComplessiviProcapite_NoMiss13','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.5_quota_invest_comp_finanz_risp_corr_anno1','IS_QuotaInvestimentiComplFinanziatiRisparmioCorr','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.5_quota_invest_comp_finanz_risp_corr_anno2','IS_QuotaInvestimentiComplFinanziatiRisparmioCorr','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.5_quota_invest_comp_finanz_risp_corr_anno3','IS_QuotaInvestimentiComplFinanziatiRisparmioCorr','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.5_quota_invest_comp_finanz_risp_corr_miss13_anno1','IS_QuotaInvestimentiComplFinanziatiRisparmioCorr_Miss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.5_quota_invest_comp_finanz_risp_corr_miss13_anno2','IS_QuotaInvestimentiComplFinanziatiRisparmioCorr_Miss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.5_quota_invest_comp_finanz_risp_corr_miss13_anno3','IS_QuotaInvestimentiComplFinanziatiRisparmioCorr_Miss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.5_quota_invest_comp_finanz_risp_corr_NOmiss13_anno1','IS_QuotaInvestimentiComplFinanziatiRisparmioCorr_NoMiss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.5_quota_invest_comp_finanz_risp_corr_NOmiss13_anno2','IS_QuotaInvestimentiComplFinanziatiRisparmioCorr_NoMiss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.5_quota_invest_comp_finanz_risp_corr_NOmiss13_anno3','IS_QuotaInvestimentiComplFinanziatiRisparmioCorr_NoMiss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.6_quota_invest_comp_finanz_saldo_pos_part_finanz_anno1','IS_QuotaInvestimentiComplFinanziatiSaldoPosPartiteFinanziarie','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.6_quota_invest_comp_finanz_saldo_pos_part_finanz_anno2','IS_QuotaInvestimentiComplFinanziatiSaldoPosPartiteFinanziarie','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.6_quota_invest_comp_finanz_saldo_pos_part_finanz_anno3','IS_QuotaInvestimentiComplFinanziatiSaldoPosPartiteFinanziarie','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.6_quota_invest_comp_finanz_saldo_pos_part_finanz_miss13_anno1','IS_QuotaInvestimentiComplFinanziatiSaldoPosPartiteFinanziarie_Miss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.6_quota_invest_comp_finanz_saldo_pos_part_finanz_miss13_anno2','IS_QuotaInvestimentiComplFinanziatiSaldoPosPartiteFinanziarie_Miss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.6_quota_invest_comp_finanz_saldo_pos_part_finanz_miss13_anno3','IS_QuotaInvestimentiComplFinanziatiSaldoPosPartiteFinanziarie_Miss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.6_quota_invest_comp_finanz_saldo_pos_part_finanz_NOmiss13_anno1','IS_QuotaInvestimentiComplFinanziatiSaldoPosPartiteFinanziarie_NoMiss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.6_quota_invest_comp_finanz_saldo_pos_part_finanz_NOmiss13_anno2','IS_QuotaInvestimentiComplFinanziatiSaldoPosPartiteFinanziarie_NoMiss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.6_quota_invest_comp_finanz_saldo_pos_part_finanz_NOmiss13_anno3','IS_QuotaInvestimentiComplFinanziatiSaldoPosPartiteFinanziarie_NoMiss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.7_quota_invest_comp_finanz_debito_anno1','IS_QuotaInvestimentiComplFinanziatiDebito','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.7_quota_invest_comp_finanz_debito_anno2','IS_QuotaInvestimentiComplFinanziatiDebito','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.7_quota_invest_comp_finanz_debito_anno3','IS_QuotaInvestimentiComplFinanziatiDebito','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.7_quota_invest_comp_finanz_debito_miss13_anno1','IS_QuotaInvestimentiComplFinanziatiDebito_Miss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.7_quota_invest_comp_finanz_debito_miss13_anno2','IS_QuotaInvestimentiComplFinanziatiDebito_Miss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.7_quota_invest_comp_finanz_debito_miss13_anno3','IS_QuotaInvestimentiComplFinanziatiDebito_Miss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.7_quota_invest_comp_finanz_debito_NOmiss13_anno1','IS_QuotaInvestimentiComplFinanziatiDebito_NoMiss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.7_quota_invest_comp_finanz_debito_NOmiss13_anno2','IS_QuotaInvestimentiComplFinanziatiDebito_NoMiss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','6.7_quota_invest_comp_finanz_debito_NOmiss13_anno3','IS_QuotaInvestimentiComplFinanziatiDebito_NoMiss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','7.1_indic_smalt_debiti_comm_anno1','IS_IndicatoreSmaltimentoDebitiCommerciali','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','7.1_indic_smalt_debiti_comm_miss13_anno1','IS_IndicatoreSmaltimentoDebitiCommerciali_Miss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','7.1_indic_smalt_debiti_comm_NOmiss13_anno1','IS_IndicatoreSmaltimentoDebitiCommerciali_NoMiss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','7.2_indic_smalt_debiti_amm_pubb_anno1','IS_IndicatoreSmaltimentoDebitiAmministrazioni','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','7.2_indic_smalt_debiti_amm_pubb_miss13_anno1','IS_IndicatoreSmaltimentoDebitiAmministrazioni_Miss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','7.2_indic_smalt_debiti_amm_pubb_NOmiss13_anno1','IS_IndicatoreSmaltimentoDebitiAmministrazioni_NoMiss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.1_incid_estinz_debit_finanz_anno1','IS_IncidenzaEstinzioniDebitiFinanziari','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.1_incid_estinz_debit_finanz_anno2','IS_IncidenzaEstinzioniDebitiFinanziari','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.1_incid_estinz_debit_finanz_anno3','IS_IncidenzaEstinzioniDebitiFinanziari','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.1_incid_estinz_debit_finanz_miss13_anno1','IS_IncidenzaEstinzioniDebitiFinanziari_Miss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.1_incid_estinz_debit_finanz_miss13_anno2','IS_IncidenzaEstinzioniDebitiFinanziari_Miss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.1_incid_estinz_debit_finanz_miss13_anno3','IS_IncidenzaEstinzioniDebitiFinanziari_Miss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.1_incid_estinz_debit_finanz_NOmiss13_anno1','IS_IncidenzaEstinzioniDebitiFinanziari_NoMiss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.1_incid_estinz_debit_finanz_NOmiss13_anno2','IS_IncidenzaEstinzioniDebitiFinanziari_NoMiss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.1_incid_estinz_debit_finanz_NOmiss13_anno3','IS_IncidenzaEstinzioniDebitiFinanziari_NoMiss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.2_sosten_debiti_finanz_anno1','IS_SostenibilitaDebitiFinanziari','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.2_sosten_debiti_finanz_anno2','IS_SostenibilitaDebitiFinanziari','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.2_sosten_debiti_finanz_anno3','IS_SostenibilitaDebitiFinanziari','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.2_sosten_debiti_finanz_miss13_anno1','IS_SostenibilitaDebitiFinanziari_Miss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.2_sosten_debiti_finanz_miss13_anno2','IS_SostenibilitaDebitiFinanziari_Miss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.2_sosten_debiti_finanz_miss13_anno3','IS_SostenibilitaDebitiFinanziari_Miss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.2_sosten_debiti_finanz_NOmiss13_anno1','IS_SostenibilitaDebitiFinanziari_NoMiss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.2_sosten_debiti_finanz_NOmiss13_anno2','IS_SostenibilitaDebitiFinanziari_NoMiss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.2_sosten_debiti_finanz_NOmiss13_anno3','IS_SostenibilitaDebitiFinanziari_NoMiss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.3_indebit_procapite_anno1','IS_IndebitamentoProcapite','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.3_indebit_procapite_anno2','IS_IndebitamentoProcapite','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.3_indebit_procapite_anno3','IS_IndebitamentoProcapite','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.3_indebit_procapite_miss13_anno1','IS_IndebitamentoProcapite_Miss13','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.3_indebit_procapite_miss13_anno2','IS_IndebitamentoProcapite_Miss13','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.3_indebit_procapite_miss13_anno3','IS_IndebitamentoProcapite_Miss13','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.3_indebit_procapite_NOmiss13_anno1','IS_IndebitamentoProcapite_NoMiss13','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.3_indebit_procapite_NOmiss13_anno2','IS_IndebitamentoProcapite_NoMiss13','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','8.3_indebit_procapite_NOmiss13_anno3','IS_IndebitamentoProcapite_NoMiss13','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','9.1_incid_quota_libera_corr_avanzo_pres_anno1','IS_IncidenzaQuotaLiberaParteCorrAvanzo','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','9.1_incid_quota_libera_corr_avanzo_pres_anno2','IS_IncidenzaQuotaLiberaParteCorrAvanzo','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','9.1_incid_quota_libera_corr_avanzo_pres_anno3','IS_IncidenzaQuotaLiberaParteCorrAvanzo','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','9.2_incid_quota_libera_conto_cap_avanzo_pres_anno1','IS_IncidenzaQuotaLiberaContoCapAvanzo','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','9.2_incid_quota_libera_conto_cap_avanzo_pres_anno2','IS_IncidenzaQuotaLiberaContoCapAvanzo','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','9.2_incid_quota_libera_conto_cap_avanzo_pres_anno3','IS_IncidenzaQuotaLiberaContoCapAvanzo','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','9.3_incid_quota_accant_avanzo_pres_anno1','IS_IncidenzaQuotaAccantonataAvanzo','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','9.3_incid_quota_accant_avanzo_pres_anno2','IS_IncidenzaQuotaAccantonataAvanzo','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','9.3_incid_quota_accant_avanzo_pres_anno3','IS_IncidenzaQuotaAccantonataAvanzo','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','9.4_incid_quota_vincol_avanzo_pres_anno1','IS_IncidenzaQuotaVincolataAvanzo','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','9.4_incid_quota_vincol_avanzo_pres_anno2','IS_IncidenzaQuotaVincolataAvanzo','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','9.4_incid_quota_vincol_avanzo_pres_anno3','IS_IncidenzaQuotaVincolataAvanzo','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','10.1_quota_dis_ripian_eserc_anno1','IS_QuotaDisavanzoDaRipianare','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','10.1_quota_dis_ripian_eserc_anno2','IS_QuotaDisavanzoDaRipianare','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','10.1_quota_dis_ripian_eserc_anno3','IS_QuotaDisavanzoDaRipianare','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','10.2_sost_patr_disav_presunto_anno1','IS_SostenibilitaPatrimonialeDisavanzo','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','10.2_sost_patr_disav_presunto_anno2','IS_SostenibilitaPatrimonialeDisavanzo','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','10.2_sost_patr_disav_presunto_anno3','IS_SostenibilitaPatrimonialeDisavanzo','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','10.3_sosten_disav_caric_esercizio_anno1','IS_SostenibilitaDisavanzoCaricoEsercizio','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','10.3_sosten_disav_caric_esercizio_anno2','IS_SostenibilitaDisavanzoCaricoEsercizio','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','10.3_sosten_disav_caric_esercizio_anno3','IS_SostenibilitaDisavanzoCaricoEsercizio','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','10.4_quota_disav_pres_debito_autor_anno1','IS_QuotaDisavanzoDerivanteDebitoAutorizzatoNonContratto','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','10.4_quota_disav_pres_debito_autor_anno2','IS_QuotaDisavanzoDerivanteDebitoAutorizzatoNonContratto','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','10.4_quota_disav_pres_debito_autor_anno3','IS_QuotaDisavanzoDerivanteDebitoAutorizzatoNonContratto','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','11.1_utilizzo_fpv_anno1','IS_UtilizzoFPV','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','11.1_utilizzo_fpv_anno2','IS_UtilizzoFPV','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','11.1_utilizzo_fpv_anno3','IS_UtilizzoFPV','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','11.1_utilizzo_fpv_miss13_anno1','IS_UtilizzoFPV_Miss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','11.1_utilizzo_fpv_miss13_anno2','IS_UtilizzoFPV_Miss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','11.1_utilizzo_fpv_miss13_anno3','IS_UtilizzoFPV_Miss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','11.1_utilizzo_fpv_NOmiss13_anno1','IS_UtilizzoFPV_NoMiss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','11.1_utilizzo_fpv_NOmiss13_anno2','IS_UtilizzoFPV_NoMiss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','11.1_utilizzo_fpv_NOmiss13_anno3','IS_UtilizzoFPV_NoMiss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','12.1_incid_part_giro_conto_terzi_ent_anno1','IS_IncidenzaPartiteGiroContoTerziEntrata','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','12.1_incid_part_giro_conto_terzi_ent_anno2','IS_IncidenzaPartiteGiroContoTerziEntrata','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','12.1_incid_part_giro_conto_terzi_ent_anno3','IS_IncidenzaPartiteGiroContoTerziEntrata','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','12.2_incid_part_giro_conto_terzi_spese_anno1','IS_IncidenzaPartiteGiroContoTerziUscita','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','12.2_incid_part_giro_conto_terzi_spese_anno2','IS_IncidenzaPartiteGiroContoTerziUscita','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','12.2_incid_part_giro_conto_terzi_spese_anno3','IS_IncidenzaPartiteGiroContoTerziUscita','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','12.2_incid_part_giro_conto_terzi_spese_miss13_anno1','IS_IncidenzaPartiteGiroContoTerziUscita_Miss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','12.2_incid_part_giro_conto_terzi_spese_miss13_anno2','IS_IncidenzaPartiteGiroContoTerziUscita_Miss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','12.2_incid_part_giro_conto_terzi_spese_miss13_anno3','IS_IncidenzaPartiteGiroContoTerziUscita_Miss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','12.2_incid_part_giro_conto_terzi_spese_NOmiss13_anno1','IS_IncidenzaPartiteGiroContoTerziUscita_NoMiss13','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','12.2_incid_part_giro_conto_terzi_spese_NOmiss13_anno2','IS_IncidenzaPartiteGiroContoTerziUscita_NoMiss13','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR177','12.2_incid_part_giro_conto_terzi_spese_NOmiss13_anno3','IS_IncidenzaPartiteGiroContoTerziUscita_NoMiss13','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
      END IF;

      -- Gestione BILR178
      IF sRep_BILR178 = 'S' OR sRep_BILR178 = 'C' THEN
        DELETE FROM siac.siac_t_xbrl_mapping_fatti WHERE xbrl_mapfat_rep_codice='BILR178' AND ente_proprietario_id=nIdEnte;
        DELETE FROM siac.siac_t_xbrl_report WHERE xbrl_rep_codice='BILR178' AND ente_proprietario_id=nIdEnte;
      END IF;
      IF sRep_BILR178 = 'S' THEN
        INSERT INTO siac.siac_t_xbrl_report (xbrl_rep_codice,  xbrl_rep_fase_code,  xbrl_rep_tipologia_code,  xbrl_rep_xsd_tassonomia,  validita_inizio,  ente_proprietario_id,  login_operazione) VALUES ('BILR178','PREV','IND','bdap-ind-prev-enti_2016-12-07.xsd',now(),nIdEnte,'admin');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','incid_miss_progrAnno1','IA-SPE_Prog${code_missione_riga}.${code_programma_solo}_CompSpeMissProg','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','incid_miss_progrFpvAnno1','IA-SPE_Prog${code_missione_riga}.${code_programma_solo}_CompSpeMissProgFPV','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','capac_pagamAnno1','IA-SPE_Prog${code_missione_riga}.${code_programma_solo}_CapPag','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','incid_miss_progrAnno2','IA-SPE_Prog${code_missione_riga}.${code_programma_solo}_CompSpeMissProg','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','incid_miss_progrFpvAnno2','IA-SPE_Prog${code_missione_riga}.${code_programma_solo}_CompSpeMissProgFPV','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','incid_miss_progrAnno3','IA-SPE_Prog${code_missione_riga}.${code_programma_solo}_CompSpeMissProg','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','incid_miss_progrFpvAnno3','IA-SPE_Prog${code_missione_riga}.${code_programma_solo}_CompSpeMissProgFPV','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','inc_miss_progr_dett','IA-SPE_Prog${code_missione_riga}.${code_programma_solo}_CompSpeMissProgMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','di_cui_incid_fpv','IA-SPE_Prog${code_missione_riga}.${code_programma_solo}_CompSpeMissProgFPVMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','capac_pagam_dett','IA-SPE_Prog${code_missione_riga}.${code_programma_solo}_CapPagMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','tot_missione_incid_miss_progrAnno1','IA-SPE_TotMiss${code_missione_totale}_CompSpeMissProg','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','tot_missione_incid_miss_progrFpvAnno1','IA-SPE_TotMiss${code_missione_totale}_CompSpeMissProgFPV','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','tot_capac_pagamAnno1','IA-SPE_TotMiss${code_missione_totale}_CapPag','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','tot_missione_incid_miss_progrAnno2','IA-SPE_TotMiss${code_missione_totale}_CompSpeMissProg','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','tot_missione_incid_miss_progrFpvAnno2','IA-SPE_TotMiss${code_missione_totale}_CompSpeMissProgFPV','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','tot_missione_incid_miss_progrAnno3','IA-SPE_TotMiss${code_missione_totale}_CompSpeMissProg','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','tot_missione_incid_miss_progrFpvAnno3','IA-SPE_TotMiss${code_missione_totale}_CompSpeMissProgFPV','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','inc_miss_progr_tot_missione','IA-SPE_TotMiss${code_missione_totale}_CompSpeMissProgMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','di_cui_incid_fpv_tot_missione','IA-SPE_TotMiss${code_missione_totale}_CompSpeMissProgFPVMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR178','capac_pagam_dett_tot_missione','IA-SPE_TotMiss${code_missione_totale}_CapPagMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
      END IF;

      -- Gestione BILR179
      IF sRep_BILR179 = 'S' OR sRep_BILR179 = 'C' THEN
        DELETE FROM siac.siac_t_xbrl_mapping_fatti WHERE xbrl_mapfat_rep_codice='BILR179' AND ente_proprietario_id=nIdEnte;
        DELETE FROM siac.siac_t_xbrl_report WHERE xbrl_rep_codice='BILR179' AND ente_proprietario_id=nIdEnte;
      END IF;
      IF sRep_BILR179 = 'S' THEN
        INSERT INTO siac.siac_t_xbrl_report (xbrl_rep_codice,  xbrl_rep_fase_code,  xbrl_rep_tipologia_code,  xbrl_rep_xsd_tassonomia,  validita_inizio,  ente_proprietario_id,  login_operazione) VALUES ('BILR179','PREV','IND','bdap-ind-prev-enti_2016-12-07.xsd',now(),nIdEnte,'admin');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR179','prev_comp_tit_tipAnno1','IA-ENT_E.<[=  ''${cod_tipologia}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEnt','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR179','prev_comp_tit_tipol_Anno2','IA-ENT_E.<[=  ''${cod_tipologia}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEnt','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR179','prev_comp_tit_tipol_Anno3','IA-ENT_E.<[=  ''${cod_tipologia}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEnt','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR179','media_accert_tit_tipol','IA-ENT_E.<[=  ''${cod_tipologia}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEntMediaAcc','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR179','prev_cassa_tit_tipAnno1','IA-ENT_E.<[=  ''${cod_tipologia}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_Risc','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR179','media_riscoss_tit_tipol','IA-ENT_E.<[=  ''${cod_tipologia}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_RiscMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR179','prev_comp_titAnno1','IA-ENT_E.<[=  ''${cod_titolo_totale}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEnt','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR179','prev_comp_tit_Anno2','IA-ENT_E.<[=  ''${cod_titolo_totale}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEnt','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR179','prev_comp_tit_Anno3','IA-ENT_E.<[=  ''${cod_titolo_totale}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEnt','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR179','media_accert_tit','IA-ENT_E.<[=  ''${cod_titolo_totale}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_CompEntMediaAcc','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR179','prev_cassa_titAnno1','IA-ENT_E.<[=  ''${cod_titolo_totale}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_Risc','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR179','media_riscoss_tit','IA-ENT_E.<[=  ''${cod_titolo_totale}''.replace(/(\d)(\d\d)(\d\d)/, ''$1.$2.$3'') =]>.00.000_RiscMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR179','prev_comp_TotaleAnno1','IA-ENT_TotaleEntrate_CompEnt','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR179','prev_comp_totale_Anno2','IA-ENT_TotaleEntrate_CompEnt','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR179','prev_comp_totale_Anno3','IA-ENT_TotaleEntrate_CompEnt','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR179','media_accert_totale','IA-ENT_TotaleEntrate_CompEntMediaAcc','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR179','prev_cassa_totaleAnno1','IA-ENT_TotaleEntrate_Risc','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR179','media_riscoss_totale','IA-ENT_TotaleEntrate_RiscMedia','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
      END IF;

      -- Gestione BILR180
      IF sRep_BILR180 = 'S' OR sRep_BILR180 = 'C' THEN
        DELETE FROM siac.siac_t_xbrl_mapping_fatti WHERE xbrl_mapfat_rep_codice='BILR180' AND ente_proprietario_id=nIdEnte;
        DELETE FROM siac.siac_t_xbrl_report WHERE xbrl_rep_codice='BILR180' AND ente_proprietario_id=nIdEnte;
      END IF;
      IF sRep_BILR180 = 'S' THEN
        INSERT INTO siac.siac_t_xbrl_report (xbrl_rep_codice,  xbrl_rep_fase_code,  xbrl_rep_tipologia_code,  xbrl_rep_xsd_tassonomia,  validita_inizio,  ente_proprietario_id,  login_operazione) VALUES ('BILR180','PREV','IND','bdap-ind-prev-enti_2016-12-07.xsd',now(),nIdEnte,'admin');

        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','1.1_incid_spese_rigide_su_ent_corr1','IS_IncidenzaSpeseRigideEntrateCorrenti','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','1.1_incid_spese_rigide_su_ent_corr2','IS_IncidenzaSpeseRigideEntrateCorrenti','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','1.1_incid_spese_rigide_su_ent_corr3','IS_IncidenzaSpeseRigideEntrateCorrenti','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','2.1_indic_realiz_prev_comp_ent_corr_anno1','IS_RealizzPrevCompEntrateCorr','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','2.1_indic_realiz_prev_comp_ent_corr_anno2','IS_RealizzPrevCompEntrateCorr','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','2.1_indic_realiz_prev_comp_ent_corr_anno3','IS_RealizzPrevCompEntrateCorr','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','2.2_indic_realiz_prev_cassa_ent_corr_anno1','IS_RealizzPrevCassaCorr','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','2.3_indic_realiz_prev_comp_ent_prop_anno1','IS_RealizzPrevCompEntrateProprie','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','2.3_indic_realiz_prev_comp_ent_prop_anno2','IS_RealizzPrevCompEntrateProprie','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','2.3_indic_realiz_prev_comp_ent_prop_anno3','IS_RealizzPrevCompEntrateProprie','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','2.4_indic_realiz_prev_cassa_ent_prop_anno1','IS_RealizzPrevCassaEntrateProprie','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','3.1_incid_spesa_pers_spesa_corr_anno1','IS_IncidenzaSpesaPersSuSpesaCorr','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','3.1_incid_spesa_pers_spesa_corr_anno2','IS_IncidenzaSpesaPersSuSpesaCorr','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','3.1_incid_spesa_pers_spesa_corr_anno3','IS_IncidenzaSpesaPersSuSpesaCorr','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','3.2_incid_salario_acc_su_spesa_pers_anno1','IS_IncidenzaSalarioAccIncentivanteTotSpesaPers','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','3.2_incid_salario_acc_su_spesa_pers_anno2','IS_IncidenzaSalarioAccIncentivanteTotSpesaPers','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','3.2_incid_salario_acc_su_spesa_pers_anno3','IS_IncidenzaSalarioAccIncentivanteTotSpesaPers','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','3.3_incid_spesa_pers_contrat_fless_anno1','IS_IncidenzaSpesaPersContrattoFlessibile','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','3.3_incid_spesa_pers_contrat_fless_anno2','IS_IncidenzaSpesaPersContrattoFlessibile','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','3.3_incid_spesa_pers_contrat_fless_anno3','IS_IncidenzaSpesaPersContrattoFlessibile','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','3.4_spesa_personale_procapite_anno1','IS_SpesaPersonaleProcapite','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','3.4_spesa_personale_procapite_anno2','IS_SpesaPersonaleProcapite','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','3.4_spesa_personale_procapite_anno3','IS_SpesaPersonaleProcapite','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','4.1_indic_estern_servizi_anno1','IS_IndicatoreEstServizi','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','4.1_indic_estern_servizi_anno2','IS_IndicatoreEstServizi','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','4.1_indic_estern_servizi_anno3','IS_IndicatoreEstServizi','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','5.1_incid_inter_pass_su_ent_corr_anno1','IS_IncidenzaInteressiPassiviEntCorr','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','5.1_incid_inter_pass_su_ent_corr_anno2','IS_IncidenzaInteressiPassiviEntCorr','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','5.1_incid_inter_pass_su_ent_corr_anno3','IS_IncidenzaInteressiPassiviEntCorr','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','5.2_incid_inter_antic_su_inter_pass_anno1','IS_IncidenzaInteressiAnticipazioniTotInteressiPass','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','5.2_incid_inter_antic_su_inter_pass_anno2','IS_IncidenzaInteressiAnticipazioniTotInteressiPass','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','5.2_incid_inter_antic_su_inter_pass_anno3','IS_IncidenzaInteressiAnticipazioniTotInteressiPass','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','5.3_incid_inter_mora_su_inter_pass_anno1','IS_IncidenzaInteressiMoraTotSpesaInteressiPass','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','5.3_incid_inter_mora_su_inter_pass_anno2','IS_IncidenzaInteressiMoraTotSpesaInteressiPass','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','5.3_incid_inter_mora_su_inter_pass_anno3','IS_IncidenzaInteressiMoraTotSpesaInteressiPass','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.1_incid_invest_su_spesa_corr_cont_cap_anno1','S_IncidenzaInvestimentiSpesaCorrContoCap','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.1_incid_invest_su_spesa_corr_cont_cap_anno2','S_IncidenzaInvestimentiSpesaCorrContoCap','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.1_incid_invest_su_spesa_corr_cont_cap_anno3','S_IncidenzaInvestimentiSpesaCorrContoCap','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.2_invest_diretti_procapite_anno1','InvestimentiDirettiProcapite','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.2_invest_diretti_procapite_anno2','InvestimentiDirettiProcapite','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.2_invest_diretti_procapite_anno3','InvestimentiDirettiProcapite','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.3_contrib_invest_procapite_anno1','IS_ContributiInvestimentiProcapite','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.3_contrib_invest_procapite_anno2','IS_ContributiInvestimentiProcapite','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.3_contrib_invest_procapite_anno3','IS_ContributiInvestimentiProcapite','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.4_invest_compl_procapite_anno1','IS_InvestimentiComplessiviProcapite','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.4_invest_compl_procapite_anno2','IS_InvestimentiComplessiviProcapite','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.4_invest_compl_procapite_anno3','IS_InvestimentiComplessiviProcapite','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.5_quota_invest_comp_finanz_risp_corr_anno1','IS_QuotaInvestimentiComplFinanziatiRisparmioCorr','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.5_quota_invest_comp_finanz_risp_corr_anno2','IS_QuotaInvestimentiComplFinanziatiRisparmioCorr','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.5_quota_invest_comp_finanz_risp_corr_anno3','IS_QuotaInvestimentiComplFinanziatiRisparmioCorr','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.6_quota_invest_comp_finanz_saldo_pos_part_finanz_anno1','IS_QuotaInvestimentiComplFinanziatiSaldoPosPartiteFinanziarie','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.6_quota_invest_comp_finanz_saldo_pos_part_finanz_anno2','IS_QuotaInvestimentiComplFinanziatiSaldoPosPartiteFinanziarie','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.6_quota_invest_comp_finanz_saldo_pos_part_finanz_anno3','IS_QuotaInvestimentiComplFinanziatiSaldoPosPartiteFinanziarie','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.7_quota_invest_comp_finanz_debito_anno1','IS_QuotaInvestimentiComplFinanziatiDebito','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.7_quota_invest_comp_finanz_debito_anno2','IS_QuotaInvestimentiComplFinanziatiDebito','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','6.7_quota_invest_comp_finanz_debito_anno3','IS_QuotaInvestimentiComplFinanziatiDebito','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','7.1_indic_smalt_debiti_comm_anno1','IS_IndicatoreSmaltimentoDebitiCommerciali','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','7.2_indic_smalt_debiti_amm_pubb_anno1','IS_IndicatoreSmaltimentoDebitiAmministrazioni','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','8.1_incid_estinz_debit_finanz_anno1','IS_IncidenzaEstinzioniDebitiFinanziari','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','8.1_incid_estinz_debit_finanz_anno2','IS_IncidenzaEstinzioniDebitiFinanziari','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','8.1_incid_estinz_debit_finanz_anno3','IS_IncidenzaEstinzioniDebitiFinanziari','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','8.2_sosten_debiti_finanz_anno1','IS_SostenibilitaDebitiFinanziari','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','8.2_sosten_debiti_finanz_anno2','IS_SostenibilitaDebitiFinanziari','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','8.2_sosten_debiti_finanz_anno3','IS_SostenibilitaDebitiFinanziari','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','8.3_indebit_procapite_anno1','IS_IndebitamentoProcapite','d_anno/anno_bilancio*0/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','8.3_indebit_procapite_anno2','IS_IndebitamentoProcapite','d_anno/anno_bilancio*1/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','8.3_indebit_procapite_anno3','IS_IndebitamentoProcapite','d_anno/anno_bilancio*2/','eur','2',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','9.1_incid_quota_libera_corr_avanzo_pres_anno1','IS_IncidenzaQuotaLiberaParteCorrAvanzo','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','9.1_incid_quota_libera_corr_avanzo_pres_anno2','IS_IncidenzaQuotaLiberaParteCorrAvanzo','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','9.1_incid_quota_libera_corr_avanzo_pres_anno3','IS_IncidenzaQuotaLiberaParteCorrAvanzo','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','9.2_incid_quota_libera_conto_cap_avanzo_pres_anno1','IS_IncidenzaQuotaLiberaContoCapAvanzo','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','9.2_incid_quota_libera_conto_cap_avanzo_pres_anno2','IS_IncidenzaQuotaLiberaContoCapAvanzo','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','9.2_incid_quota_libera_conto_cap_avanzo_pres_anno3','IS_IncidenzaQuotaLiberaContoCapAvanzo','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','9.3_incid_quota_accant_avanzo_pres_anno1','IS_IncidenzaQuotaAccantonataAvanzo','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','9.3_incid_quota_accant_avanzo_pres_anno2','IS_IncidenzaQuotaAccantonataAvanzo','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','9.3_incid_quota_accant_avanzo_pres_anno3','IS_IncidenzaQuotaAccantonataAvanzo','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','9.4_incid_quota_vincol_avanzo_pres_anno1','IS_IncidenzaQuotaVincolataAvanzo','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','9.4_incid_quota_vincol_avanzo_pres_anno2','IS_IncidenzaQuotaVincolataAvanzo','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','9.4_incid_quota_vincol_avanzo_pres_anno3','IS_IncidenzaQuotaVincolataAvanzo','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','10.1_quota_dis_ripian_eserc_anno1','IS_QuotaDisavanzoDaRipianare','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','10.1_quota_dis_ripian_eserc_anno2','IS_QuotaDisavanzoDaRipianare','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','10.1_quota_dis_ripian_eserc_anno3','IS_QuotaDisavanzoDaRipianare','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','10.2_sost_patr_disav_presunto_anno1','IS_SostenibilitaPatrimonialeDisavanzo','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','10.2_sost_patr_disav_presunto_anno2','IS_SostenibilitaPatrimonialeDisavanzo','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','10.2_sost_patr_disav_presunto_anno3','IS_SostenibilitaPatrimonialeDisavanzo','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','10.3_sosten_disav_caric_esercizio_anno1','IS_SostenibilitaDisavanzoCaricoEsercizio','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','10.3_sosten_disav_caric_esercizio_anno2','IS_SostenibilitaDisavanzoCaricoEsercizio','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','10.3_sosten_disav_caric_esercizio_anno3','IS_SostenibilitaDisavanzoCaricoEsercizio','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','11.1_utilizzo_fpv_anno1','IS_UtilizzoFPV','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','11.1_utilizzo_fpv_anno2','IS_UtilizzoFPV','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','11.1_utilizzo_fpv_anno3','IS_UtilizzoFPV','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','12.1_incid_part_giro_conto_terzi_ent_anno1','IS_IncidenzaPartiteGiroContoTerziEntrata','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','12.1_incid_part_giro_conto_terzi_ent_anno2','IS_IncidenzaPartiteGiroContoTerziEntrata','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','12.1_incid_part_giro_conto_terzi_ent_anno3','IS_IncidenzaPartiteGiroContoTerziEntrata','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','12.2_incid_part_giro_conto_terzi_spese_anno1','IS_IncidenzaPartiteGiroContoTerziUscita','d_anno/anno_bilancio*0/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','12.2_incid_part_giro_conto_terzi_spese_anno2','IS_IncidenzaPartiteGiroContoTerziUscita','d_anno/anno_bilancio*1/','pure','4',now(),nIdEnte,'admin','duration');
        INSERT INTO siac.siac_t_xbrl_mapping_fatti (xbrl_mapfat_rep_codice, xbrl_mapfat_variabile, xbrl_mapfat_fatto, xbrl_mapfat_periodo_code, xbrl_mapfat_unit_code, xbrl_mapfat_decimali, validita_inizio, ente_proprietario_id, login_operazione, xbrl_mapfat_periodo_tipo) VALUES ('BILR180','12.2_incid_part_giro_conto_terzi_spese_anno3','IS_IncidenzaPartiteGiroContoTerziUscita','d_anno/anno_bilancio*2/','pure','4',now(),nIdEnte,'admin','duration');
      END IF;
    end loop;

    return sMsgReturn;

exception
	when others THEN
		raise notice 'Errore di configurazione' ;
		sMsgReturn:='Errore di configurazione';
		return sMsgReturn;
END;
$BODY$
  LANGUAGE plpgsql VOLATILE
  COST 100;
ALTER FUNCTION "fnc_siac_bko_config_report_prevind_xbrl"()
  OWNER TO siac;
GRANT EXECUTE ON FUNCTION "fnc_siac_bko_config_report_prevind_xbrl"() TO siac_rw;
GRANT EXECUTE ON FUNCTION "fnc_siac_bko_config_report_prevind_xbrl"() TO siac;
GRANT EXECUTE ON FUNCTION "fnc_siac_bko_config_report_prevind_xbrl"() TO public;

select *
from fnc_siac_bko_config_report_prevind_xbrl();

-- Inserimento modifiche da parte del CSI comunicazione del 9/8/2018 - FINE - Maurizio
